// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Maps Grafana friendly names to the IdPs SAML attributes.
type WorkspaceAssertionAttributes struct {
	// Name of the attribute within the SAML assert to use as the users email in Grafana.
	Email *string `pulumi:"email"`
	// Name of the attribute within the SAML assert to use as the users groups in Grafana.
	Groups *string `pulumi:"groups"`
	// Name of the attribute within the SAML assert to use as the users login handle in Grafana.
	Login *string `pulumi:"login"`
	// Name of the attribute within the SAML assert to use as the users name in Grafana.
	Name *string `pulumi:"name"`
	// Name of the attribute within the SAML assert to use as the users organizations in Grafana.
	Org *string `pulumi:"org"`
	// Name of the attribute within the SAML assert to use as the users roles in Grafana.
	Role *string `pulumi:"role"`
}

// WorkspaceAssertionAttributesInput is an input type that accepts WorkspaceAssertionAttributesArgs and WorkspaceAssertionAttributesOutput values.
// You can construct a concrete instance of `WorkspaceAssertionAttributesInput` via:
//
//	WorkspaceAssertionAttributesArgs{...}
type WorkspaceAssertionAttributesInput interface {
	pulumi.Input

	ToWorkspaceAssertionAttributesOutput() WorkspaceAssertionAttributesOutput
	ToWorkspaceAssertionAttributesOutputWithContext(context.Context) WorkspaceAssertionAttributesOutput
}

// Maps Grafana friendly names to the IdPs SAML attributes.
type WorkspaceAssertionAttributesArgs struct {
	// Name of the attribute within the SAML assert to use as the users email in Grafana.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Name of the attribute within the SAML assert to use as the users groups in Grafana.
	Groups pulumi.StringPtrInput `pulumi:"groups"`
	// Name of the attribute within the SAML assert to use as the users login handle in Grafana.
	Login pulumi.StringPtrInput `pulumi:"login"`
	// Name of the attribute within the SAML assert to use as the users name in Grafana.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of the attribute within the SAML assert to use as the users organizations in Grafana.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// Name of the attribute within the SAML assert to use as the users roles in Grafana.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (WorkspaceAssertionAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAssertionAttributes)(nil)).Elem()
}

func (i WorkspaceAssertionAttributesArgs) ToWorkspaceAssertionAttributesOutput() WorkspaceAssertionAttributesOutput {
	return i.ToWorkspaceAssertionAttributesOutputWithContext(context.Background())
}

func (i WorkspaceAssertionAttributesArgs) ToWorkspaceAssertionAttributesOutputWithContext(ctx context.Context) WorkspaceAssertionAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAssertionAttributesOutput)
}

func (i WorkspaceAssertionAttributesArgs) ToWorkspaceAssertionAttributesPtrOutput() WorkspaceAssertionAttributesPtrOutput {
	return i.ToWorkspaceAssertionAttributesPtrOutputWithContext(context.Background())
}

func (i WorkspaceAssertionAttributesArgs) ToWorkspaceAssertionAttributesPtrOutputWithContext(ctx context.Context) WorkspaceAssertionAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAssertionAttributesOutput).ToWorkspaceAssertionAttributesPtrOutputWithContext(ctx)
}

// WorkspaceAssertionAttributesPtrInput is an input type that accepts WorkspaceAssertionAttributesArgs, WorkspaceAssertionAttributesPtr and WorkspaceAssertionAttributesPtrOutput values.
// You can construct a concrete instance of `WorkspaceAssertionAttributesPtrInput` via:
//
//	        WorkspaceAssertionAttributesArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAssertionAttributesPtrInput interface {
	pulumi.Input

	ToWorkspaceAssertionAttributesPtrOutput() WorkspaceAssertionAttributesPtrOutput
	ToWorkspaceAssertionAttributesPtrOutputWithContext(context.Context) WorkspaceAssertionAttributesPtrOutput
}

type workspaceAssertionAttributesPtrType WorkspaceAssertionAttributesArgs

func WorkspaceAssertionAttributesPtr(v *WorkspaceAssertionAttributesArgs) WorkspaceAssertionAttributesPtrInput {
	return (*workspaceAssertionAttributesPtrType)(v)
}

func (*workspaceAssertionAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAssertionAttributes)(nil)).Elem()
}

func (i *workspaceAssertionAttributesPtrType) ToWorkspaceAssertionAttributesPtrOutput() WorkspaceAssertionAttributesPtrOutput {
	return i.ToWorkspaceAssertionAttributesPtrOutputWithContext(context.Background())
}

func (i *workspaceAssertionAttributesPtrType) ToWorkspaceAssertionAttributesPtrOutputWithContext(ctx context.Context) WorkspaceAssertionAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAssertionAttributesPtrOutput)
}

// Maps Grafana friendly names to the IdPs SAML attributes.
type WorkspaceAssertionAttributesOutput struct{ *pulumi.OutputState }

func (WorkspaceAssertionAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAssertionAttributes)(nil)).Elem()
}

func (o WorkspaceAssertionAttributesOutput) ToWorkspaceAssertionAttributesOutput() WorkspaceAssertionAttributesOutput {
	return o
}

func (o WorkspaceAssertionAttributesOutput) ToWorkspaceAssertionAttributesOutputWithContext(ctx context.Context) WorkspaceAssertionAttributesOutput {
	return o
}

func (o WorkspaceAssertionAttributesOutput) ToWorkspaceAssertionAttributesPtrOutput() WorkspaceAssertionAttributesPtrOutput {
	return o.ToWorkspaceAssertionAttributesPtrOutputWithContext(context.Background())
}

func (o WorkspaceAssertionAttributesOutput) ToWorkspaceAssertionAttributesPtrOutputWithContext(ctx context.Context) WorkspaceAssertionAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAssertionAttributes) *WorkspaceAssertionAttributes {
		return &v
	}).(WorkspaceAssertionAttributesPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users email in Grafana.
func (o WorkspaceAssertionAttributesOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAssertionAttributes) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users groups in Grafana.
func (o WorkspaceAssertionAttributesOutput) Groups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAssertionAttributes) *string { return v.Groups }).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users login handle in Grafana.
func (o WorkspaceAssertionAttributesOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAssertionAttributes) *string { return v.Login }).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users name in Grafana.
func (o WorkspaceAssertionAttributesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAssertionAttributes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users organizations in Grafana.
func (o WorkspaceAssertionAttributesOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAssertionAttributes) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users roles in Grafana.
func (o WorkspaceAssertionAttributesOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAssertionAttributes) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type WorkspaceAssertionAttributesPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAssertionAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAssertionAttributes)(nil)).Elem()
}

func (o WorkspaceAssertionAttributesPtrOutput) ToWorkspaceAssertionAttributesPtrOutput() WorkspaceAssertionAttributesPtrOutput {
	return o
}

func (o WorkspaceAssertionAttributesPtrOutput) ToWorkspaceAssertionAttributesPtrOutputWithContext(ctx context.Context) WorkspaceAssertionAttributesPtrOutput {
	return o
}

func (o WorkspaceAssertionAttributesPtrOutput) Elem() WorkspaceAssertionAttributesOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) WorkspaceAssertionAttributes {
		if v != nil {
			return *v
		}
		var ret WorkspaceAssertionAttributes
		return ret
	}).(WorkspaceAssertionAttributesOutput)
}

// Name of the attribute within the SAML assert to use as the users email in Grafana.
func (o WorkspaceAssertionAttributesPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users groups in Grafana.
func (o WorkspaceAssertionAttributesPtrOutput) Groups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users login handle in Grafana.
func (o WorkspaceAssertionAttributesPtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Login
	}).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users name in Grafana.
func (o WorkspaceAssertionAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users organizations in Grafana.
func (o WorkspaceAssertionAttributesPtrOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Org
	}).(pulumi.StringPtrOutput)
}

// Name of the attribute within the SAML assert to use as the users roles in Grafana.
func (o WorkspaceAssertionAttributesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAssertionAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// IdP Metadata used to configure SAML authentication in Grafana.
type WorkspaceIdpMetadata struct {
	// URL that vends the IdPs metadata.
	Url *string `pulumi:"url"`
	// XML blob of the IdPs metadata.
	Xml *string `pulumi:"xml"`
}

// WorkspaceIdpMetadataInput is an input type that accepts WorkspaceIdpMetadataArgs and WorkspaceIdpMetadataOutput values.
// You can construct a concrete instance of `WorkspaceIdpMetadataInput` via:
//
//	WorkspaceIdpMetadataArgs{...}
type WorkspaceIdpMetadataInput interface {
	pulumi.Input

	ToWorkspaceIdpMetadataOutput() WorkspaceIdpMetadataOutput
	ToWorkspaceIdpMetadataOutputWithContext(context.Context) WorkspaceIdpMetadataOutput
}

// IdP Metadata used to configure SAML authentication in Grafana.
type WorkspaceIdpMetadataArgs struct {
	// URL that vends the IdPs metadata.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// XML blob of the IdPs metadata.
	Xml pulumi.StringPtrInput `pulumi:"xml"`
}

func (WorkspaceIdpMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceIdpMetadata)(nil)).Elem()
}

func (i WorkspaceIdpMetadataArgs) ToWorkspaceIdpMetadataOutput() WorkspaceIdpMetadataOutput {
	return i.ToWorkspaceIdpMetadataOutputWithContext(context.Background())
}

func (i WorkspaceIdpMetadataArgs) ToWorkspaceIdpMetadataOutputWithContext(ctx context.Context) WorkspaceIdpMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceIdpMetadataOutput)
}

func (i WorkspaceIdpMetadataArgs) ToWorkspaceIdpMetadataPtrOutput() WorkspaceIdpMetadataPtrOutput {
	return i.ToWorkspaceIdpMetadataPtrOutputWithContext(context.Background())
}

func (i WorkspaceIdpMetadataArgs) ToWorkspaceIdpMetadataPtrOutputWithContext(ctx context.Context) WorkspaceIdpMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceIdpMetadataOutput).ToWorkspaceIdpMetadataPtrOutputWithContext(ctx)
}

// WorkspaceIdpMetadataPtrInput is an input type that accepts WorkspaceIdpMetadataArgs, WorkspaceIdpMetadataPtr and WorkspaceIdpMetadataPtrOutput values.
// You can construct a concrete instance of `WorkspaceIdpMetadataPtrInput` via:
//
//	        WorkspaceIdpMetadataArgs{...}
//
//	or:
//
//	        nil
type WorkspaceIdpMetadataPtrInput interface {
	pulumi.Input

	ToWorkspaceIdpMetadataPtrOutput() WorkspaceIdpMetadataPtrOutput
	ToWorkspaceIdpMetadataPtrOutputWithContext(context.Context) WorkspaceIdpMetadataPtrOutput
}

type workspaceIdpMetadataPtrType WorkspaceIdpMetadataArgs

func WorkspaceIdpMetadataPtr(v *WorkspaceIdpMetadataArgs) WorkspaceIdpMetadataPtrInput {
	return (*workspaceIdpMetadataPtrType)(v)
}

func (*workspaceIdpMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceIdpMetadata)(nil)).Elem()
}

func (i *workspaceIdpMetadataPtrType) ToWorkspaceIdpMetadataPtrOutput() WorkspaceIdpMetadataPtrOutput {
	return i.ToWorkspaceIdpMetadataPtrOutputWithContext(context.Background())
}

func (i *workspaceIdpMetadataPtrType) ToWorkspaceIdpMetadataPtrOutputWithContext(ctx context.Context) WorkspaceIdpMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceIdpMetadataPtrOutput)
}

// IdP Metadata used to configure SAML authentication in Grafana.
type WorkspaceIdpMetadataOutput struct{ *pulumi.OutputState }

func (WorkspaceIdpMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceIdpMetadata)(nil)).Elem()
}

func (o WorkspaceIdpMetadataOutput) ToWorkspaceIdpMetadataOutput() WorkspaceIdpMetadataOutput {
	return o
}

func (o WorkspaceIdpMetadataOutput) ToWorkspaceIdpMetadataOutputWithContext(ctx context.Context) WorkspaceIdpMetadataOutput {
	return o
}

func (o WorkspaceIdpMetadataOutput) ToWorkspaceIdpMetadataPtrOutput() WorkspaceIdpMetadataPtrOutput {
	return o.ToWorkspaceIdpMetadataPtrOutputWithContext(context.Background())
}

func (o WorkspaceIdpMetadataOutput) ToWorkspaceIdpMetadataPtrOutputWithContext(ctx context.Context) WorkspaceIdpMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceIdpMetadata) *WorkspaceIdpMetadata {
		return &v
	}).(WorkspaceIdpMetadataPtrOutput)
}

// URL that vends the IdPs metadata.
func (o WorkspaceIdpMetadataOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceIdpMetadata) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// XML blob of the IdPs metadata.
func (o WorkspaceIdpMetadataOutput) Xml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceIdpMetadata) *string { return v.Xml }).(pulumi.StringPtrOutput)
}

type WorkspaceIdpMetadataPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceIdpMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceIdpMetadata)(nil)).Elem()
}

func (o WorkspaceIdpMetadataPtrOutput) ToWorkspaceIdpMetadataPtrOutput() WorkspaceIdpMetadataPtrOutput {
	return o
}

func (o WorkspaceIdpMetadataPtrOutput) ToWorkspaceIdpMetadataPtrOutputWithContext(ctx context.Context) WorkspaceIdpMetadataPtrOutput {
	return o
}

func (o WorkspaceIdpMetadataPtrOutput) Elem() WorkspaceIdpMetadataOutput {
	return o.ApplyT(func(v *WorkspaceIdpMetadata) WorkspaceIdpMetadata {
		if v != nil {
			return *v
		}
		var ret WorkspaceIdpMetadata
		return ret
	}).(WorkspaceIdpMetadataOutput)
}

// URL that vends the IdPs metadata.
func (o WorkspaceIdpMetadataPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceIdpMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// XML blob of the IdPs metadata.
func (o WorkspaceIdpMetadataPtrOutput) Xml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceIdpMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Xml
	}).(pulumi.StringPtrOutput)
}

// The configuration settings for Network Access Control.
type WorkspaceNetworkAccessControl struct {
	// The list of prefix list IDs. A prefix list is a list of CIDR ranges of IP addresses. The IP addresses specified are allowed to access your workspace. If the list is not included in the configuration then no IP addresses will be allowed to access the workspace.
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The list of Amazon VPC endpoint IDs for the workspace. If a NetworkAccessConfiguration is specified then only VPC endpoints specified here will be allowed to access the workspace.
	VpceIds []string `pulumi:"vpceIds"`
}

// WorkspaceNetworkAccessControlInput is an input type that accepts WorkspaceNetworkAccessControlArgs and WorkspaceNetworkAccessControlOutput values.
// You can construct a concrete instance of `WorkspaceNetworkAccessControlInput` via:
//
//	WorkspaceNetworkAccessControlArgs{...}
type WorkspaceNetworkAccessControlInput interface {
	pulumi.Input

	ToWorkspaceNetworkAccessControlOutput() WorkspaceNetworkAccessControlOutput
	ToWorkspaceNetworkAccessControlOutputWithContext(context.Context) WorkspaceNetworkAccessControlOutput
}

// The configuration settings for Network Access Control.
type WorkspaceNetworkAccessControlArgs struct {
	// The list of prefix list IDs. A prefix list is a list of CIDR ranges of IP addresses. The IP addresses specified are allowed to access your workspace. If the list is not included in the configuration then no IP addresses will be allowed to access the workspace.
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The list of Amazon VPC endpoint IDs for the workspace. If a NetworkAccessConfiguration is specified then only VPC endpoints specified here will be allowed to access the workspace.
	VpceIds pulumi.StringArrayInput `pulumi:"vpceIds"`
}

func (WorkspaceNetworkAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNetworkAccessControl)(nil)).Elem()
}

func (i WorkspaceNetworkAccessControlArgs) ToWorkspaceNetworkAccessControlOutput() WorkspaceNetworkAccessControlOutput {
	return i.ToWorkspaceNetworkAccessControlOutputWithContext(context.Background())
}

func (i WorkspaceNetworkAccessControlArgs) ToWorkspaceNetworkAccessControlOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNetworkAccessControlOutput)
}

func (i WorkspaceNetworkAccessControlArgs) ToWorkspaceNetworkAccessControlPtrOutput() WorkspaceNetworkAccessControlPtrOutput {
	return i.ToWorkspaceNetworkAccessControlPtrOutputWithContext(context.Background())
}

func (i WorkspaceNetworkAccessControlArgs) ToWorkspaceNetworkAccessControlPtrOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNetworkAccessControlOutput).ToWorkspaceNetworkAccessControlPtrOutputWithContext(ctx)
}

// WorkspaceNetworkAccessControlPtrInput is an input type that accepts WorkspaceNetworkAccessControlArgs, WorkspaceNetworkAccessControlPtr and WorkspaceNetworkAccessControlPtrOutput values.
// You can construct a concrete instance of `WorkspaceNetworkAccessControlPtrInput` via:
//
//	        WorkspaceNetworkAccessControlArgs{...}
//
//	or:
//
//	        nil
type WorkspaceNetworkAccessControlPtrInput interface {
	pulumi.Input

	ToWorkspaceNetworkAccessControlPtrOutput() WorkspaceNetworkAccessControlPtrOutput
	ToWorkspaceNetworkAccessControlPtrOutputWithContext(context.Context) WorkspaceNetworkAccessControlPtrOutput
}

type workspaceNetworkAccessControlPtrType WorkspaceNetworkAccessControlArgs

func WorkspaceNetworkAccessControlPtr(v *WorkspaceNetworkAccessControlArgs) WorkspaceNetworkAccessControlPtrInput {
	return (*workspaceNetworkAccessControlPtrType)(v)
}

func (*workspaceNetworkAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceNetworkAccessControl)(nil)).Elem()
}

func (i *workspaceNetworkAccessControlPtrType) ToWorkspaceNetworkAccessControlPtrOutput() WorkspaceNetworkAccessControlPtrOutput {
	return i.ToWorkspaceNetworkAccessControlPtrOutputWithContext(context.Background())
}

func (i *workspaceNetworkAccessControlPtrType) ToWorkspaceNetworkAccessControlPtrOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNetworkAccessControlPtrOutput)
}

// The configuration settings for Network Access Control.
type WorkspaceNetworkAccessControlOutput struct{ *pulumi.OutputState }

func (WorkspaceNetworkAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNetworkAccessControl)(nil)).Elem()
}

func (o WorkspaceNetworkAccessControlOutput) ToWorkspaceNetworkAccessControlOutput() WorkspaceNetworkAccessControlOutput {
	return o
}

func (o WorkspaceNetworkAccessControlOutput) ToWorkspaceNetworkAccessControlOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlOutput {
	return o
}

func (o WorkspaceNetworkAccessControlOutput) ToWorkspaceNetworkAccessControlPtrOutput() WorkspaceNetworkAccessControlPtrOutput {
	return o.ToWorkspaceNetworkAccessControlPtrOutputWithContext(context.Background())
}

func (o WorkspaceNetworkAccessControlOutput) ToWorkspaceNetworkAccessControlPtrOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceNetworkAccessControl) *WorkspaceNetworkAccessControl {
		return &v
	}).(WorkspaceNetworkAccessControlPtrOutput)
}

// The list of prefix list IDs. A prefix list is a list of CIDR ranges of IP addresses. The IP addresses specified are allowed to access your workspace. If the list is not included in the configuration then no IP addresses will be allowed to access the workspace.
func (o WorkspaceNetworkAccessControlOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceNetworkAccessControl) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The list of Amazon VPC endpoint IDs for the workspace. If a NetworkAccessConfiguration is specified then only VPC endpoints specified here will be allowed to access the workspace.
func (o WorkspaceNetworkAccessControlOutput) VpceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceNetworkAccessControl) []string { return v.VpceIds }).(pulumi.StringArrayOutput)
}

type WorkspaceNetworkAccessControlPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceNetworkAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceNetworkAccessControl)(nil)).Elem()
}

func (o WorkspaceNetworkAccessControlPtrOutput) ToWorkspaceNetworkAccessControlPtrOutput() WorkspaceNetworkAccessControlPtrOutput {
	return o
}

func (o WorkspaceNetworkAccessControlPtrOutput) ToWorkspaceNetworkAccessControlPtrOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlPtrOutput {
	return o
}

func (o WorkspaceNetworkAccessControlPtrOutput) Elem() WorkspaceNetworkAccessControlOutput {
	return o.ApplyT(func(v *WorkspaceNetworkAccessControl) WorkspaceNetworkAccessControl {
		if v != nil {
			return *v
		}
		var ret WorkspaceNetworkAccessControl
		return ret
	}).(WorkspaceNetworkAccessControlOutput)
}

// The list of prefix list IDs. A prefix list is a list of CIDR ranges of IP addresses. The IP addresses specified are allowed to access your workspace. If the list is not included in the configuration then no IP addresses will be allowed to access the workspace.
func (o WorkspaceNetworkAccessControlPtrOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceNetworkAccessControl) []string {
		if v == nil {
			return nil
		}
		return v.PrefixListIds
	}).(pulumi.StringArrayOutput)
}

// The list of Amazon VPC endpoint IDs for the workspace. If a NetworkAccessConfiguration is specified then only VPC endpoints specified here will be allowed to access the workspace.
func (o WorkspaceNetworkAccessControlPtrOutput) VpceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceNetworkAccessControl) []string {
		if v == nil {
			return nil
		}
		return v.VpceIds
	}).(pulumi.StringArrayOutput)
}

// Maps SAML roles to the Grafana Editor and Admin roles.
type WorkspaceRoleValues struct {
	// List of SAML roles which will be mapped into the Grafana Admin role.
	Admin []string `pulumi:"admin"`
	// List of SAML roles which will be mapped into the Grafana Editor role.
	Editor []string `pulumi:"editor"`
}

// WorkspaceRoleValuesInput is an input type that accepts WorkspaceRoleValuesArgs and WorkspaceRoleValuesOutput values.
// You can construct a concrete instance of `WorkspaceRoleValuesInput` via:
//
//	WorkspaceRoleValuesArgs{...}
type WorkspaceRoleValuesInput interface {
	pulumi.Input

	ToWorkspaceRoleValuesOutput() WorkspaceRoleValuesOutput
	ToWorkspaceRoleValuesOutputWithContext(context.Context) WorkspaceRoleValuesOutput
}

// Maps SAML roles to the Grafana Editor and Admin roles.
type WorkspaceRoleValuesArgs struct {
	// List of SAML roles which will be mapped into the Grafana Admin role.
	Admin pulumi.StringArrayInput `pulumi:"admin"`
	// List of SAML roles which will be mapped into the Grafana Editor role.
	Editor pulumi.StringArrayInput `pulumi:"editor"`
}

func (WorkspaceRoleValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRoleValues)(nil)).Elem()
}

func (i WorkspaceRoleValuesArgs) ToWorkspaceRoleValuesOutput() WorkspaceRoleValuesOutput {
	return i.ToWorkspaceRoleValuesOutputWithContext(context.Background())
}

func (i WorkspaceRoleValuesArgs) ToWorkspaceRoleValuesOutputWithContext(ctx context.Context) WorkspaceRoleValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRoleValuesOutput)
}

func (i WorkspaceRoleValuesArgs) ToWorkspaceRoleValuesPtrOutput() WorkspaceRoleValuesPtrOutput {
	return i.ToWorkspaceRoleValuesPtrOutputWithContext(context.Background())
}

func (i WorkspaceRoleValuesArgs) ToWorkspaceRoleValuesPtrOutputWithContext(ctx context.Context) WorkspaceRoleValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRoleValuesOutput).ToWorkspaceRoleValuesPtrOutputWithContext(ctx)
}

// WorkspaceRoleValuesPtrInput is an input type that accepts WorkspaceRoleValuesArgs, WorkspaceRoleValuesPtr and WorkspaceRoleValuesPtrOutput values.
// You can construct a concrete instance of `WorkspaceRoleValuesPtrInput` via:
//
//	        WorkspaceRoleValuesArgs{...}
//
//	or:
//
//	        nil
type WorkspaceRoleValuesPtrInput interface {
	pulumi.Input

	ToWorkspaceRoleValuesPtrOutput() WorkspaceRoleValuesPtrOutput
	ToWorkspaceRoleValuesPtrOutputWithContext(context.Context) WorkspaceRoleValuesPtrOutput
}

type workspaceRoleValuesPtrType WorkspaceRoleValuesArgs

func WorkspaceRoleValuesPtr(v *WorkspaceRoleValuesArgs) WorkspaceRoleValuesPtrInput {
	return (*workspaceRoleValuesPtrType)(v)
}

func (*workspaceRoleValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRoleValues)(nil)).Elem()
}

func (i *workspaceRoleValuesPtrType) ToWorkspaceRoleValuesPtrOutput() WorkspaceRoleValuesPtrOutput {
	return i.ToWorkspaceRoleValuesPtrOutputWithContext(context.Background())
}

func (i *workspaceRoleValuesPtrType) ToWorkspaceRoleValuesPtrOutputWithContext(ctx context.Context) WorkspaceRoleValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRoleValuesPtrOutput)
}

// Maps SAML roles to the Grafana Editor and Admin roles.
type WorkspaceRoleValuesOutput struct{ *pulumi.OutputState }

func (WorkspaceRoleValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceRoleValues)(nil)).Elem()
}

func (o WorkspaceRoleValuesOutput) ToWorkspaceRoleValuesOutput() WorkspaceRoleValuesOutput {
	return o
}

func (o WorkspaceRoleValuesOutput) ToWorkspaceRoleValuesOutputWithContext(ctx context.Context) WorkspaceRoleValuesOutput {
	return o
}

func (o WorkspaceRoleValuesOutput) ToWorkspaceRoleValuesPtrOutput() WorkspaceRoleValuesPtrOutput {
	return o.ToWorkspaceRoleValuesPtrOutputWithContext(context.Background())
}

func (o WorkspaceRoleValuesOutput) ToWorkspaceRoleValuesPtrOutputWithContext(ctx context.Context) WorkspaceRoleValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceRoleValues) *WorkspaceRoleValues {
		return &v
	}).(WorkspaceRoleValuesPtrOutput)
}

// List of SAML roles which will be mapped into the Grafana Admin role.
func (o WorkspaceRoleValuesOutput) Admin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceRoleValues) []string { return v.Admin }).(pulumi.StringArrayOutput)
}

// List of SAML roles which will be mapped into the Grafana Editor role.
func (o WorkspaceRoleValuesOutput) Editor() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceRoleValues) []string { return v.Editor }).(pulumi.StringArrayOutput)
}

type WorkspaceRoleValuesPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceRoleValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRoleValues)(nil)).Elem()
}

func (o WorkspaceRoleValuesPtrOutput) ToWorkspaceRoleValuesPtrOutput() WorkspaceRoleValuesPtrOutput {
	return o
}

func (o WorkspaceRoleValuesPtrOutput) ToWorkspaceRoleValuesPtrOutputWithContext(ctx context.Context) WorkspaceRoleValuesPtrOutput {
	return o
}

func (o WorkspaceRoleValuesPtrOutput) Elem() WorkspaceRoleValuesOutput {
	return o.ApplyT(func(v *WorkspaceRoleValues) WorkspaceRoleValues {
		if v != nil {
			return *v
		}
		var ret WorkspaceRoleValues
		return ret
	}).(WorkspaceRoleValuesOutput)
}

// List of SAML roles which will be mapped into the Grafana Admin role.
func (o WorkspaceRoleValuesPtrOutput) Admin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceRoleValues) []string {
		if v == nil {
			return nil
		}
		return v.Admin
	}).(pulumi.StringArrayOutput)
}

// List of SAML roles which will be mapped into the Grafana Editor role.
func (o WorkspaceRoleValuesPtrOutput) Editor() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceRoleValues) []string {
		if v == nil {
			return nil
		}
		return v.Editor
	}).(pulumi.StringArrayOutput)
}

// SAML configuration data associated with an AMG workspace.
type WorkspaceSamlConfiguration struct {
	// List of SAML organizations allowed to access Grafana.
	AllowedOrganizations []string                      `pulumi:"allowedOrganizations"`
	AssertionAttributes  *WorkspaceAssertionAttributes `pulumi:"assertionAttributes"`
	IdpMetadata          WorkspaceIdpMetadata          `pulumi:"idpMetadata"`
	// The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.
	LoginValidityDuration *float64             `pulumi:"loginValidityDuration"`
	RoleValues            *WorkspaceRoleValues `pulumi:"roleValues"`
}

// WorkspaceSamlConfigurationInput is an input type that accepts WorkspaceSamlConfigurationArgs and WorkspaceSamlConfigurationOutput values.
// You can construct a concrete instance of `WorkspaceSamlConfigurationInput` via:
//
//	WorkspaceSamlConfigurationArgs{...}
type WorkspaceSamlConfigurationInput interface {
	pulumi.Input

	ToWorkspaceSamlConfigurationOutput() WorkspaceSamlConfigurationOutput
	ToWorkspaceSamlConfigurationOutputWithContext(context.Context) WorkspaceSamlConfigurationOutput
}

// SAML configuration data associated with an AMG workspace.
type WorkspaceSamlConfigurationArgs struct {
	// List of SAML organizations allowed to access Grafana.
	AllowedOrganizations pulumi.StringArrayInput              `pulumi:"allowedOrganizations"`
	AssertionAttributes  WorkspaceAssertionAttributesPtrInput `pulumi:"assertionAttributes"`
	IdpMetadata          WorkspaceIdpMetadataInput            `pulumi:"idpMetadata"`
	// The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.
	LoginValidityDuration pulumi.Float64PtrInput      `pulumi:"loginValidityDuration"`
	RoleValues            WorkspaceRoleValuesPtrInput `pulumi:"roleValues"`
}

func (WorkspaceSamlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSamlConfiguration)(nil)).Elem()
}

func (i WorkspaceSamlConfigurationArgs) ToWorkspaceSamlConfigurationOutput() WorkspaceSamlConfigurationOutput {
	return i.ToWorkspaceSamlConfigurationOutputWithContext(context.Background())
}

func (i WorkspaceSamlConfigurationArgs) ToWorkspaceSamlConfigurationOutputWithContext(ctx context.Context) WorkspaceSamlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSamlConfigurationOutput)
}

func (i WorkspaceSamlConfigurationArgs) ToWorkspaceSamlConfigurationPtrOutput() WorkspaceSamlConfigurationPtrOutput {
	return i.ToWorkspaceSamlConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkspaceSamlConfigurationArgs) ToWorkspaceSamlConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceSamlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSamlConfigurationOutput).ToWorkspaceSamlConfigurationPtrOutputWithContext(ctx)
}

// WorkspaceSamlConfigurationPtrInput is an input type that accepts WorkspaceSamlConfigurationArgs, WorkspaceSamlConfigurationPtr and WorkspaceSamlConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkspaceSamlConfigurationPtrInput` via:
//
//	        WorkspaceSamlConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSamlConfigurationPtrInput interface {
	pulumi.Input

	ToWorkspaceSamlConfigurationPtrOutput() WorkspaceSamlConfigurationPtrOutput
	ToWorkspaceSamlConfigurationPtrOutputWithContext(context.Context) WorkspaceSamlConfigurationPtrOutput
}

type workspaceSamlConfigurationPtrType WorkspaceSamlConfigurationArgs

func WorkspaceSamlConfigurationPtr(v *WorkspaceSamlConfigurationArgs) WorkspaceSamlConfigurationPtrInput {
	return (*workspaceSamlConfigurationPtrType)(v)
}

func (*workspaceSamlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSamlConfiguration)(nil)).Elem()
}

func (i *workspaceSamlConfigurationPtrType) ToWorkspaceSamlConfigurationPtrOutput() WorkspaceSamlConfigurationPtrOutput {
	return i.ToWorkspaceSamlConfigurationPtrOutputWithContext(context.Background())
}

func (i *workspaceSamlConfigurationPtrType) ToWorkspaceSamlConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceSamlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSamlConfigurationPtrOutput)
}

// SAML configuration data associated with an AMG workspace.
type WorkspaceSamlConfigurationOutput struct{ *pulumi.OutputState }

func (WorkspaceSamlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSamlConfiguration)(nil)).Elem()
}

func (o WorkspaceSamlConfigurationOutput) ToWorkspaceSamlConfigurationOutput() WorkspaceSamlConfigurationOutput {
	return o
}

func (o WorkspaceSamlConfigurationOutput) ToWorkspaceSamlConfigurationOutputWithContext(ctx context.Context) WorkspaceSamlConfigurationOutput {
	return o
}

func (o WorkspaceSamlConfigurationOutput) ToWorkspaceSamlConfigurationPtrOutput() WorkspaceSamlConfigurationPtrOutput {
	return o.ToWorkspaceSamlConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkspaceSamlConfigurationOutput) ToWorkspaceSamlConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceSamlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSamlConfiguration) *WorkspaceSamlConfiguration {
		return &v
	}).(WorkspaceSamlConfigurationPtrOutput)
}

// List of SAML organizations allowed to access Grafana.
func (o WorkspaceSamlConfigurationOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceSamlConfiguration) []string { return v.AllowedOrganizations }).(pulumi.StringArrayOutput)
}

func (o WorkspaceSamlConfigurationOutput) AssertionAttributes() WorkspaceAssertionAttributesPtrOutput {
	return o.ApplyT(func(v WorkspaceSamlConfiguration) *WorkspaceAssertionAttributes { return v.AssertionAttributes }).(WorkspaceAssertionAttributesPtrOutput)
}

func (o WorkspaceSamlConfigurationOutput) IdpMetadata() WorkspaceIdpMetadataOutput {
	return o.ApplyT(func(v WorkspaceSamlConfiguration) WorkspaceIdpMetadata { return v.IdpMetadata }).(WorkspaceIdpMetadataOutput)
}

// The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.
func (o WorkspaceSamlConfigurationOutput) LoginValidityDuration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkspaceSamlConfiguration) *float64 { return v.LoginValidityDuration }).(pulumi.Float64PtrOutput)
}

func (o WorkspaceSamlConfigurationOutput) RoleValues() WorkspaceRoleValuesPtrOutput {
	return o.ApplyT(func(v WorkspaceSamlConfiguration) *WorkspaceRoleValues { return v.RoleValues }).(WorkspaceRoleValuesPtrOutput)
}

type WorkspaceSamlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSamlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSamlConfiguration)(nil)).Elem()
}

func (o WorkspaceSamlConfigurationPtrOutput) ToWorkspaceSamlConfigurationPtrOutput() WorkspaceSamlConfigurationPtrOutput {
	return o
}

func (o WorkspaceSamlConfigurationPtrOutput) ToWorkspaceSamlConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceSamlConfigurationPtrOutput {
	return o
}

func (o WorkspaceSamlConfigurationPtrOutput) Elem() WorkspaceSamlConfigurationOutput {
	return o.ApplyT(func(v *WorkspaceSamlConfiguration) WorkspaceSamlConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkspaceSamlConfiguration
		return ret
	}).(WorkspaceSamlConfigurationOutput)
}

// List of SAML organizations allowed to access Grafana.
func (o WorkspaceSamlConfigurationPtrOutput) AllowedOrganizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceSamlConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrganizations
	}).(pulumi.StringArrayOutput)
}

func (o WorkspaceSamlConfigurationPtrOutput) AssertionAttributes() WorkspaceAssertionAttributesPtrOutput {
	return o.ApplyT(func(v *WorkspaceSamlConfiguration) *WorkspaceAssertionAttributes {
		if v == nil {
			return nil
		}
		return v.AssertionAttributes
	}).(WorkspaceAssertionAttributesPtrOutput)
}

func (o WorkspaceSamlConfigurationPtrOutput) IdpMetadata() WorkspaceIdpMetadataPtrOutput {
	return o.ApplyT(func(v *WorkspaceSamlConfiguration) *WorkspaceIdpMetadata {
		if v == nil {
			return nil
		}
		return &v.IdpMetadata
	}).(WorkspaceIdpMetadataPtrOutput)
}

// The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.
func (o WorkspaceSamlConfigurationPtrOutput) LoginValidityDuration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkspaceSamlConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.LoginValidityDuration
	}).(pulumi.Float64PtrOutput)
}

func (o WorkspaceSamlConfigurationPtrOutput) RoleValues() WorkspaceRoleValuesPtrOutput {
	return o.ApplyT(func(v *WorkspaceSamlConfiguration) *WorkspaceRoleValues {
		if v == nil {
			return nil
		}
		return v.RoleValues
	}).(WorkspaceRoleValuesPtrOutput)
}

// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.
type WorkspaceVpcConfiguration struct {
	// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
	SubnetIds []string `pulumi:"subnetIds"`
}

// WorkspaceVpcConfigurationInput is an input type that accepts WorkspaceVpcConfigurationArgs and WorkspaceVpcConfigurationOutput values.
// You can construct a concrete instance of `WorkspaceVpcConfigurationInput` via:
//
//	WorkspaceVpcConfigurationArgs{...}
type WorkspaceVpcConfigurationInput interface {
	pulumi.Input

	ToWorkspaceVpcConfigurationOutput() WorkspaceVpcConfigurationOutput
	ToWorkspaceVpcConfigurationOutputWithContext(context.Context) WorkspaceVpcConfigurationOutput
}

// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.
type WorkspaceVpcConfigurationArgs struct {
	// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (WorkspaceVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceVpcConfiguration)(nil)).Elem()
}

func (i WorkspaceVpcConfigurationArgs) ToWorkspaceVpcConfigurationOutput() WorkspaceVpcConfigurationOutput {
	return i.ToWorkspaceVpcConfigurationOutputWithContext(context.Background())
}

func (i WorkspaceVpcConfigurationArgs) ToWorkspaceVpcConfigurationOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVpcConfigurationOutput)
}

func (i WorkspaceVpcConfigurationArgs) ToWorkspaceVpcConfigurationPtrOutput() WorkspaceVpcConfigurationPtrOutput {
	return i.ToWorkspaceVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkspaceVpcConfigurationArgs) ToWorkspaceVpcConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVpcConfigurationOutput).ToWorkspaceVpcConfigurationPtrOutputWithContext(ctx)
}

// WorkspaceVpcConfigurationPtrInput is an input type that accepts WorkspaceVpcConfigurationArgs, WorkspaceVpcConfigurationPtr and WorkspaceVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkspaceVpcConfigurationPtrInput` via:
//
//	        WorkspaceVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkspaceVpcConfigurationPtrInput interface {
	pulumi.Input

	ToWorkspaceVpcConfigurationPtrOutput() WorkspaceVpcConfigurationPtrOutput
	ToWorkspaceVpcConfigurationPtrOutputWithContext(context.Context) WorkspaceVpcConfigurationPtrOutput
}

type workspaceVpcConfigurationPtrType WorkspaceVpcConfigurationArgs

func WorkspaceVpcConfigurationPtr(v *WorkspaceVpcConfigurationArgs) WorkspaceVpcConfigurationPtrInput {
	return (*workspaceVpcConfigurationPtrType)(v)
}

func (*workspaceVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceVpcConfiguration)(nil)).Elem()
}

func (i *workspaceVpcConfigurationPtrType) ToWorkspaceVpcConfigurationPtrOutput() WorkspaceVpcConfigurationPtrOutput {
	return i.ToWorkspaceVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *workspaceVpcConfigurationPtrType) ToWorkspaceVpcConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVpcConfigurationPtrOutput)
}

// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.
type WorkspaceVpcConfigurationOutput struct{ *pulumi.OutputState }

func (WorkspaceVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceVpcConfiguration)(nil)).Elem()
}

func (o WorkspaceVpcConfigurationOutput) ToWorkspaceVpcConfigurationOutput() WorkspaceVpcConfigurationOutput {
	return o
}

func (o WorkspaceVpcConfigurationOutput) ToWorkspaceVpcConfigurationOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationOutput {
	return o
}

func (o WorkspaceVpcConfigurationOutput) ToWorkspaceVpcConfigurationPtrOutput() WorkspaceVpcConfigurationPtrOutput {
	return o.ToWorkspaceVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkspaceVpcConfigurationOutput) ToWorkspaceVpcConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceVpcConfiguration) *WorkspaceVpcConfiguration {
		return &v
	}).(WorkspaceVpcConfigurationPtrOutput)
}

// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
func (o WorkspaceVpcConfigurationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceVpcConfiguration) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
func (o WorkspaceVpcConfigurationOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceVpcConfiguration) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type WorkspaceVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceVpcConfiguration)(nil)).Elem()
}

func (o WorkspaceVpcConfigurationPtrOutput) ToWorkspaceVpcConfigurationPtrOutput() WorkspaceVpcConfigurationPtrOutput {
	return o
}

func (o WorkspaceVpcConfigurationPtrOutput) ToWorkspaceVpcConfigurationPtrOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationPtrOutput {
	return o
}

func (o WorkspaceVpcConfigurationPtrOutput) Elem() WorkspaceVpcConfigurationOutput {
	return o.ApplyT(func(v *WorkspaceVpcConfiguration) WorkspaceVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkspaceVpcConfiguration
		return ret
	}).(WorkspaceVpcConfigurationOutput)
}

// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
func (o WorkspaceVpcConfigurationPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
func (o WorkspaceVpcConfigurationPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAssertionAttributesInput)(nil)).Elem(), WorkspaceAssertionAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAssertionAttributesPtrInput)(nil)).Elem(), WorkspaceAssertionAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceIdpMetadataInput)(nil)).Elem(), WorkspaceIdpMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceIdpMetadataPtrInput)(nil)).Elem(), WorkspaceIdpMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceNetworkAccessControlInput)(nil)).Elem(), WorkspaceNetworkAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceNetworkAccessControlPtrInput)(nil)).Elem(), WorkspaceNetworkAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRoleValuesInput)(nil)).Elem(), WorkspaceRoleValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRoleValuesPtrInput)(nil)).Elem(), WorkspaceRoleValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSamlConfigurationInput)(nil)).Elem(), WorkspaceSamlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSamlConfigurationPtrInput)(nil)).Elem(), WorkspaceSamlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceVpcConfigurationInput)(nil)).Elem(), WorkspaceVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceVpcConfigurationPtrInput)(nil)).Elem(), WorkspaceVpcConfigurationArgs{})
	pulumi.RegisterOutputType(WorkspaceAssertionAttributesOutput{})
	pulumi.RegisterOutputType(WorkspaceAssertionAttributesPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceIdpMetadataOutput{})
	pulumi.RegisterOutputType(WorkspaceIdpMetadataPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceNetworkAccessControlOutput{})
	pulumi.RegisterOutputType(WorkspaceNetworkAccessControlPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceRoleValuesOutput{})
	pulumi.RegisterOutputType(WorkspaceRoleValuesPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSamlConfigurationOutput{})
	pulumi.RegisterOutputType(WorkspaceSamlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceVpcConfigurationOutput{})
	pulumi.RegisterOutputType(WorkspaceVpcConfigurationPtrOutput{})
}
