// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::Grafana::Workspace Resource Type
type Workspace struct {
	pulumi.CustomResourceState

	AccountAccessType WorkspaceAccountAccessTypeOutput `pulumi:"accountAccessType"`
	// List of authentication providers to enable.
	AuthenticationProviders WorkspaceAuthenticationProviderTypesArrayOutput `pulumi:"authenticationProviders"`
	// A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
	ClientToken pulumi.StringPtrOutput `pulumi:"clientToken"`
	// Timestamp when the workspace was created.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// List of data sources on the service managed IAM role.
	DataSources WorkspaceDataSourceTypeArrayOutput `pulumi:"dataSources"`
	// Description of a workspace.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Endpoint for the Grafana workspace.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The version of Grafana to support in your workspace. For region ap-northeast-2, only version 8.4 is supported.
	GrafanaVersion pulumi.StringPtrOutput `pulumi:"grafanaVersion"`
	// Timestamp when the workspace was last modified
	ModificationTimestamp pulumi.StringOutput `pulumi:"modificationTimestamp"`
	// The user friendly name of a workspace.
	Name                 pulumi.StringPtrOutput                 `pulumi:"name"`
	NetworkAccessControl WorkspaceNetworkAccessControlPtrOutput `pulumi:"networkAccessControl"`
	// List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
	NotificationDestinations WorkspaceNotificationDestinationTypeArrayOutput `pulumi:"notificationDestinations"`
	// The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
	OrganizationRoleName pulumi.StringPtrOutput `pulumi:"organizationRoleName"`
	// List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
	OrganizationalUnits pulumi.StringArrayOutput      `pulumi:"organizationalUnits"`
	PermissionType      WorkspacePermissionTypeOutput `pulumi:"permissionType"`
	// IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
	RoleArn                 pulumi.StringPtrOutput                 `pulumi:"roleArn"`
	SamlConfiguration       WorkspaceSamlConfigurationPtrOutput    `pulumi:"samlConfiguration"`
	SamlConfigurationStatus WorkspaceSamlConfigurationStatusOutput `pulumi:"samlConfigurationStatus"`
	// The client ID of the AWS SSO Managed Application.
	SsoClientId pulumi.StringOutput `pulumi:"ssoClientId"`
	// The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
	StackSetName     pulumi.StringPtrOutput             `pulumi:"stackSetName"`
	Status           WorkspaceStatusOutput              `pulumi:"status"`
	VpcConfiguration WorkspaceVpcConfigurationPtrOutput `pulumi:"vpcConfiguration"`
}

// NewWorkspace registers a new resource with the given unique name, arguments, and options.
func NewWorkspace(ctx *pulumi.Context,
	name string, args *WorkspaceArgs, opts ...pulumi.ResourceOption) (*Workspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountAccessType == nil {
		return nil, errors.New("invalid value for required argument 'AccountAccessType'")
	}
	if args.AuthenticationProviders == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationProviders'")
	}
	if args.PermissionType == nil {
		return nil, errors.New("invalid value for required argument 'PermissionType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"clientToken",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workspace
	err := ctx.RegisterResource("aws-native:grafana:Workspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspace gets an existing Workspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceState, opts ...pulumi.ResourceOption) (*Workspace, error) {
	var resource Workspace
	err := ctx.ReadResource("aws-native:grafana:Workspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workspace resources.
type workspaceState struct {
}

type WorkspaceState struct {
}

func (WorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceState)(nil)).Elem()
}

type workspaceArgs struct {
	AccountAccessType WorkspaceAccountAccessType `pulumi:"accountAccessType"`
	// List of authentication providers to enable.
	AuthenticationProviders []WorkspaceAuthenticationProviderTypes `pulumi:"authenticationProviders"`
	// A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
	ClientToken *string `pulumi:"clientToken"`
	// List of data sources on the service managed IAM role.
	DataSources []WorkspaceDataSourceType `pulumi:"dataSources"`
	// Description of a workspace.
	Description *string `pulumi:"description"`
	// The version of Grafana to support in your workspace. For region ap-northeast-2, only version 8.4 is supported.
	GrafanaVersion *string `pulumi:"grafanaVersion"`
	// The user friendly name of a workspace.
	Name                 *string                        `pulumi:"name"`
	NetworkAccessControl *WorkspaceNetworkAccessControl `pulumi:"networkAccessControl"`
	// List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
	NotificationDestinations []WorkspaceNotificationDestinationType `pulumi:"notificationDestinations"`
	// The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
	OrganizationRoleName *string `pulumi:"organizationRoleName"`
	// List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
	OrganizationalUnits []string                `pulumi:"organizationalUnits"`
	PermissionType      WorkspacePermissionType `pulumi:"permissionType"`
	// IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
	RoleArn           *string                     `pulumi:"roleArn"`
	SamlConfiguration *WorkspaceSamlConfiguration `pulumi:"samlConfiguration"`
	// The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
	StackSetName     *string                    `pulumi:"stackSetName"`
	VpcConfiguration *WorkspaceVpcConfiguration `pulumi:"vpcConfiguration"`
}

// The set of arguments for constructing a Workspace resource.
type WorkspaceArgs struct {
	AccountAccessType WorkspaceAccountAccessTypeInput
	// List of authentication providers to enable.
	AuthenticationProviders WorkspaceAuthenticationProviderTypesArrayInput
	// A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
	ClientToken pulumi.StringPtrInput
	// List of data sources on the service managed IAM role.
	DataSources WorkspaceDataSourceTypeArrayInput
	// Description of a workspace.
	Description pulumi.StringPtrInput
	// The version of Grafana to support in your workspace. For region ap-northeast-2, only version 8.4 is supported.
	GrafanaVersion pulumi.StringPtrInput
	// The user friendly name of a workspace.
	Name                 pulumi.StringPtrInput
	NetworkAccessControl WorkspaceNetworkAccessControlPtrInput
	// List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
	NotificationDestinations WorkspaceNotificationDestinationTypeArrayInput
	// The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
	OrganizationRoleName pulumi.StringPtrInput
	// List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
	OrganizationalUnits pulumi.StringArrayInput
	PermissionType      WorkspacePermissionTypeInput
	// IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
	RoleArn           pulumi.StringPtrInput
	SamlConfiguration WorkspaceSamlConfigurationPtrInput
	// The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
	StackSetName     pulumi.StringPtrInput
	VpcConfiguration WorkspaceVpcConfigurationPtrInput
}

func (WorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceArgs)(nil)).Elem()
}

type WorkspaceInput interface {
	pulumi.Input

	ToWorkspaceOutput() WorkspaceOutput
	ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput
}

func (*Workspace) ElementType() reflect.Type {
	return reflect.TypeOf((**Workspace)(nil)).Elem()
}

func (i *Workspace) ToWorkspaceOutput() WorkspaceOutput {
	return i.ToWorkspaceOutputWithContext(context.Background())
}

func (i *Workspace) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceOutput)
}

func (i *Workspace) ToOutput(ctx context.Context) pulumix.Output[*Workspace] {
	return pulumix.Output[*Workspace]{
		OutputState: i.ToWorkspaceOutputWithContext(ctx).OutputState,
	}
}

type WorkspaceOutput struct{ *pulumi.OutputState }

func (WorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workspace)(nil)).Elem()
}

func (o WorkspaceOutput) ToWorkspaceOutput() WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToOutput(ctx context.Context) pulumix.Output[*Workspace] {
	return pulumix.Output[*Workspace]{
		OutputState: o.OutputState,
	}
}

func (o WorkspaceOutput) AccountAccessType() WorkspaceAccountAccessTypeOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceAccountAccessTypeOutput { return v.AccountAccessType }).(WorkspaceAccountAccessTypeOutput)
}

// List of authentication providers to enable.
func (o WorkspaceOutput) AuthenticationProviders() WorkspaceAuthenticationProviderTypesArrayOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceAuthenticationProviderTypesArrayOutput { return v.AuthenticationProviders }).(WorkspaceAuthenticationProviderTypesArrayOutput)
}

// A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
func (o WorkspaceOutput) ClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.ClientToken }).(pulumi.StringPtrOutput)
}

// Timestamp when the workspace was created.
func (o WorkspaceOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// List of data sources on the service managed IAM role.
func (o WorkspaceOutput) DataSources() WorkspaceDataSourceTypeArrayOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceDataSourceTypeArrayOutput { return v.DataSources }).(WorkspaceDataSourceTypeArrayOutput)
}

// Description of a workspace.
func (o WorkspaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Endpoint for the Grafana workspace.
func (o WorkspaceOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The version of Grafana to support in your workspace. For region ap-northeast-2, only version 8.4 is supported.
func (o WorkspaceOutput) GrafanaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.GrafanaVersion }).(pulumi.StringPtrOutput)
}

// Timestamp when the workspace was last modified
func (o WorkspaceOutput) ModificationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.ModificationTimestamp }).(pulumi.StringOutput)
}

// The user friendly name of a workspace.
func (o WorkspaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o WorkspaceOutput) NetworkAccessControl() WorkspaceNetworkAccessControlPtrOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceNetworkAccessControlPtrOutput { return v.NetworkAccessControl }).(WorkspaceNetworkAccessControlPtrOutput)
}

// List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
func (o WorkspaceOutput) NotificationDestinations() WorkspaceNotificationDestinationTypeArrayOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceNotificationDestinationTypeArrayOutput { return v.NotificationDestinations }).(WorkspaceNotificationDestinationTypeArrayOutput)
}

// The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
func (o WorkspaceOutput) OrganizationRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.OrganizationRoleName }).(pulumi.StringPtrOutput)
}

// List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
func (o WorkspaceOutput) OrganizationalUnits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringArrayOutput { return v.OrganizationalUnits }).(pulumi.StringArrayOutput)
}

func (o WorkspaceOutput) PermissionType() WorkspacePermissionTypeOutput {
	return o.ApplyT(func(v *Workspace) WorkspacePermissionTypeOutput { return v.PermissionType }).(WorkspacePermissionTypeOutput)
}

// IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
func (o WorkspaceOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o WorkspaceOutput) SamlConfiguration() WorkspaceSamlConfigurationPtrOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceSamlConfigurationPtrOutput { return v.SamlConfiguration }).(WorkspaceSamlConfigurationPtrOutput)
}

func (o WorkspaceOutput) SamlConfigurationStatus() WorkspaceSamlConfigurationStatusOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceSamlConfigurationStatusOutput { return v.SamlConfigurationStatus }).(WorkspaceSamlConfigurationStatusOutput)
}

// The client ID of the AWS SSO Managed Application.
func (o WorkspaceOutput) SsoClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.SsoClientId }).(pulumi.StringOutput)
}

// The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
func (o WorkspaceOutput) StackSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.StackSetName }).(pulumi.StringPtrOutput)
}

func (o WorkspaceOutput) Status() WorkspaceStatusOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceStatusOutput { return v.Status }).(WorkspaceStatusOutput)
}

func (o WorkspaceOutput) VpcConfiguration() WorkspaceVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceVpcConfigurationPtrOutput { return v.VpcConfiguration }).(WorkspaceVpcConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceInput)(nil)).Elem(), &Workspace{})
	pulumi.RegisterOutputType(WorkspaceOutput{})
}
