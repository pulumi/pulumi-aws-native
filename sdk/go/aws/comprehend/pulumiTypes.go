// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DocumentClassifierAugmentedManifestsListItem struct {
	AttributeNames []string                                           `pulumi:"attributeNames"`
	S3Uri          string                                             `pulumi:"s3Uri"`
	Split          *DocumentClassifierAugmentedManifestsListItemSplit `pulumi:"split"`
}

// DocumentClassifierAugmentedManifestsListItemInput is an input type that accepts DocumentClassifierAugmentedManifestsListItemArgs and DocumentClassifierAugmentedManifestsListItemOutput values.
// You can construct a concrete instance of `DocumentClassifierAugmentedManifestsListItemInput` via:
//
//	DocumentClassifierAugmentedManifestsListItemArgs{...}
type DocumentClassifierAugmentedManifestsListItemInput interface {
	pulumi.Input

	ToDocumentClassifierAugmentedManifestsListItemOutput() DocumentClassifierAugmentedManifestsListItemOutput
	ToDocumentClassifierAugmentedManifestsListItemOutputWithContext(context.Context) DocumentClassifierAugmentedManifestsListItemOutput
}

type DocumentClassifierAugmentedManifestsListItemArgs struct {
	AttributeNames pulumi.StringArrayInput                                   `pulumi:"attributeNames"`
	S3Uri          pulumi.StringInput                                        `pulumi:"s3Uri"`
	Split          DocumentClassifierAugmentedManifestsListItemSplitPtrInput `pulumi:"split"`
}

func (DocumentClassifierAugmentedManifestsListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItem)(nil)).Elem()
}

func (i DocumentClassifierAugmentedManifestsListItemArgs) ToDocumentClassifierAugmentedManifestsListItemOutput() DocumentClassifierAugmentedManifestsListItemOutput {
	return i.ToDocumentClassifierAugmentedManifestsListItemOutputWithContext(context.Background())
}

func (i DocumentClassifierAugmentedManifestsListItemArgs) ToDocumentClassifierAugmentedManifestsListItemOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierAugmentedManifestsListItemOutput)
}

// DocumentClassifierAugmentedManifestsListItemArrayInput is an input type that accepts DocumentClassifierAugmentedManifestsListItemArray and DocumentClassifierAugmentedManifestsListItemArrayOutput values.
// You can construct a concrete instance of `DocumentClassifierAugmentedManifestsListItemArrayInput` via:
//
//	DocumentClassifierAugmentedManifestsListItemArray{ DocumentClassifierAugmentedManifestsListItemArgs{...} }
type DocumentClassifierAugmentedManifestsListItemArrayInput interface {
	pulumi.Input

	ToDocumentClassifierAugmentedManifestsListItemArrayOutput() DocumentClassifierAugmentedManifestsListItemArrayOutput
	ToDocumentClassifierAugmentedManifestsListItemArrayOutputWithContext(context.Context) DocumentClassifierAugmentedManifestsListItemArrayOutput
}

type DocumentClassifierAugmentedManifestsListItemArray []DocumentClassifierAugmentedManifestsListItemInput

func (DocumentClassifierAugmentedManifestsListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentClassifierAugmentedManifestsListItem)(nil)).Elem()
}

func (i DocumentClassifierAugmentedManifestsListItemArray) ToDocumentClassifierAugmentedManifestsListItemArrayOutput() DocumentClassifierAugmentedManifestsListItemArrayOutput {
	return i.ToDocumentClassifierAugmentedManifestsListItemArrayOutputWithContext(context.Background())
}

func (i DocumentClassifierAugmentedManifestsListItemArray) ToDocumentClassifierAugmentedManifestsListItemArrayOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierAugmentedManifestsListItemArrayOutput)
}

type DocumentClassifierAugmentedManifestsListItemOutput struct{ *pulumi.OutputState }

func (DocumentClassifierAugmentedManifestsListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItem)(nil)).Elem()
}

func (o DocumentClassifierAugmentedManifestsListItemOutput) ToDocumentClassifierAugmentedManifestsListItemOutput() DocumentClassifierAugmentedManifestsListItemOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemOutput) ToDocumentClassifierAugmentedManifestsListItemOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DocumentClassifierAugmentedManifestsListItem) []string { return v.AttributeNames }).(pulumi.StringArrayOutput)
}

func (o DocumentClassifierAugmentedManifestsListItemOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentClassifierAugmentedManifestsListItem) string { return v.S3Uri }).(pulumi.StringOutput)
}

func (o DocumentClassifierAugmentedManifestsListItemOutput) Split() DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return o.ApplyT(func(v DocumentClassifierAugmentedManifestsListItem) *DocumentClassifierAugmentedManifestsListItemSplit {
		return v.Split
	}).(DocumentClassifierAugmentedManifestsListItemSplitPtrOutput)
}

type DocumentClassifierAugmentedManifestsListItemArrayOutput struct{ *pulumi.OutputState }

func (DocumentClassifierAugmentedManifestsListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentClassifierAugmentedManifestsListItem)(nil)).Elem()
}

func (o DocumentClassifierAugmentedManifestsListItemArrayOutput) ToDocumentClassifierAugmentedManifestsListItemArrayOutput() DocumentClassifierAugmentedManifestsListItemArrayOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemArrayOutput) ToDocumentClassifierAugmentedManifestsListItemArrayOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemArrayOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemArrayOutput) Index(i pulumi.IntInput) DocumentClassifierAugmentedManifestsListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentClassifierAugmentedManifestsListItem {
		return vs[0].([]DocumentClassifierAugmentedManifestsListItem)[vs[1].(int)]
	}).(DocumentClassifierAugmentedManifestsListItemOutput)
}

type DocumentClassifierDocumentReaderConfig struct {
	DocumentReadAction DocumentClassifierDocumentReaderConfigDocumentReadAction `pulumi:"documentReadAction"`
	DocumentReadMode   *DocumentClassifierDocumentReaderConfigDocumentReadMode  `pulumi:"documentReadMode"`
	FeatureTypes       []DocumentClassifierDocumentReaderConfigFeatureTypesItem `pulumi:"featureTypes"`
}

// DocumentClassifierDocumentReaderConfigInput is an input type that accepts DocumentClassifierDocumentReaderConfigArgs and DocumentClassifierDocumentReaderConfigOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentReaderConfigInput` via:
//
//	DocumentClassifierDocumentReaderConfigArgs{...}
type DocumentClassifierDocumentReaderConfigInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigOutput() DocumentClassifierDocumentReaderConfigOutput
	ToDocumentClassifierDocumentReaderConfigOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigOutput
}

type DocumentClassifierDocumentReaderConfigArgs struct {
	DocumentReadAction DocumentClassifierDocumentReaderConfigDocumentReadActionInput    `pulumi:"documentReadAction"`
	DocumentReadMode   DocumentClassifierDocumentReaderConfigDocumentReadModePtrInput   `pulumi:"documentReadMode"`
	FeatureTypes       DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayInput `pulumi:"featureTypes"`
}

func (DocumentClassifierDocumentReaderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfig)(nil)).Elem()
}

func (i DocumentClassifierDocumentReaderConfigArgs) ToDocumentClassifierDocumentReaderConfigOutput() DocumentClassifierDocumentReaderConfigOutput {
	return i.ToDocumentClassifierDocumentReaderConfigOutputWithContext(context.Background())
}

func (i DocumentClassifierDocumentReaderConfigArgs) ToDocumentClassifierDocumentReaderConfigOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentReaderConfigOutput)
}

func (i DocumentClassifierDocumentReaderConfigArgs) ToDocumentClassifierDocumentReaderConfigPtrOutput() DocumentClassifierDocumentReaderConfigPtrOutput {
	return i.ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(context.Background())
}

func (i DocumentClassifierDocumentReaderConfigArgs) ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentReaderConfigOutput).ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(ctx)
}

// DocumentClassifierDocumentReaderConfigPtrInput is an input type that accepts DocumentClassifierDocumentReaderConfigArgs, DocumentClassifierDocumentReaderConfigPtr and DocumentClassifierDocumentReaderConfigPtrOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentReaderConfigPtrInput` via:
//
//	        DocumentClassifierDocumentReaderConfigArgs{...}
//
//	or:
//
//	        nil
type DocumentClassifierDocumentReaderConfigPtrInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigPtrOutput() DocumentClassifierDocumentReaderConfigPtrOutput
	ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigPtrOutput
}

type documentClassifierDocumentReaderConfigPtrType DocumentClassifierDocumentReaderConfigArgs

func DocumentClassifierDocumentReaderConfigPtr(v *DocumentClassifierDocumentReaderConfigArgs) DocumentClassifierDocumentReaderConfigPtrInput {
	return (*documentClassifierDocumentReaderConfigPtrType)(v)
}

func (*documentClassifierDocumentReaderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocumentReaderConfig)(nil)).Elem()
}

func (i *documentClassifierDocumentReaderConfigPtrType) ToDocumentClassifierDocumentReaderConfigPtrOutput() DocumentClassifierDocumentReaderConfigPtrOutput {
	return i.ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(context.Background())
}

func (i *documentClassifierDocumentReaderConfigPtrType) ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentReaderConfigPtrOutput)
}

type DocumentClassifierDocumentReaderConfigOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfig)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigOutput) ToDocumentClassifierDocumentReaderConfigOutput() DocumentClassifierDocumentReaderConfigOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigOutput) ToDocumentClassifierDocumentReaderConfigOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigOutput) ToDocumentClassifierDocumentReaderConfigPtrOutput() DocumentClassifierDocumentReaderConfigPtrOutput {
	return o.ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigOutput) ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierDocumentReaderConfig) *DocumentClassifierDocumentReaderConfig {
		return &v
	}).(DocumentClassifierDocumentReaderConfigPtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigOutput) DocumentReadAction() DocumentClassifierDocumentReaderConfigDocumentReadActionOutput {
	return o.ApplyT(func(v DocumentClassifierDocumentReaderConfig) DocumentClassifierDocumentReaderConfigDocumentReadAction {
		return v.DocumentReadAction
	}).(DocumentClassifierDocumentReaderConfigDocumentReadActionOutput)
}

func (o DocumentClassifierDocumentReaderConfigOutput) DocumentReadMode() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return o.ApplyT(func(v DocumentClassifierDocumentReaderConfig) *DocumentClassifierDocumentReaderConfigDocumentReadMode {
		return v.DocumentReadMode
	}).(DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigOutput) FeatureTypes() DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput {
	return o.ApplyT(func(v DocumentClassifierDocumentReaderConfig) []DocumentClassifierDocumentReaderConfigFeatureTypesItem {
		return v.FeatureTypes
	}).(DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput)
}

type DocumentClassifierDocumentReaderConfigPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocumentReaderConfig)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigPtrOutput) ToDocumentClassifierDocumentReaderConfigPtrOutput() DocumentClassifierDocumentReaderConfigPtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigPtrOutput) ToDocumentClassifierDocumentReaderConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigPtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigPtrOutput) Elem() DocumentClassifierDocumentReaderConfigOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfig) DocumentClassifierDocumentReaderConfig {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierDocumentReaderConfig
		return ret
	}).(DocumentClassifierDocumentReaderConfigOutput)
}

func (o DocumentClassifierDocumentReaderConfigPtrOutput) DocumentReadAction() DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfig) *DocumentClassifierDocumentReaderConfigDocumentReadAction {
		if v == nil {
			return nil
		}
		return &v.DocumentReadAction
	}).(DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigPtrOutput) DocumentReadMode() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfig) *DocumentClassifierDocumentReaderConfigDocumentReadMode {
		if v == nil {
			return nil
		}
		return v.DocumentReadMode
	}).(DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigPtrOutput) FeatureTypes() DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfig) []DocumentClassifierDocumentReaderConfigFeatureTypesItem {
		if v == nil {
			return nil
		}
		return v.FeatureTypes
	}).(DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput)
}

type DocumentClassifierDocuments struct {
	S3Uri     string  `pulumi:"s3Uri"`
	TestS3Uri *string `pulumi:"testS3Uri"`
}

// DocumentClassifierDocumentsInput is an input type that accepts DocumentClassifierDocumentsArgs and DocumentClassifierDocumentsOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentsInput` via:
//
//	DocumentClassifierDocumentsArgs{...}
type DocumentClassifierDocumentsInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentsOutput() DocumentClassifierDocumentsOutput
	ToDocumentClassifierDocumentsOutputWithContext(context.Context) DocumentClassifierDocumentsOutput
}

type DocumentClassifierDocumentsArgs struct {
	S3Uri     pulumi.StringInput    `pulumi:"s3Uri"`
	TestS3Uri pulumi.StringPtrInput `pulumi:"testS3Uri"`
}

func (DocumentClassifierDocumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocuments)(nil)).Elem()
}

func (i DocumentClassifierDocumentsArgs) ToDocumentClassifierDocumentsOutput() DocumentClassifierDocumentsOutput {
	return i.ToDocumentClassifierDocumentsOutputWithContext(context.Background())
}

func (i DocumentClassifierDocumentsArgs) ToDocumentClassifierDocumentsOutputWithContext(ctx context.Context) DocumentClassifierDocumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentsOutput)
}

func (i DocumentClassifierDocumentsArgs) ToDocumentClassifierDocumentsPtrOutput() DocumentClassifierDocumentsPtrOutput {
	return i.ToDocumentClassifierDocumentsPtrOutputWithContext(context.Background())
}

func (i DocumentClassifierDocumentsArgs) ToDocumentClassifierDocumentsPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentsOutput).ToDocumentClassifierDocumentsPtrOutputWithContext(ctx)
}

// DocumentClassifierDocumentsPtrInput is an input type that accepts DocumentClassifierDocumentsArgs, DocumentClassifierDocumentsPtr and DocumentClassifierDocumentsPtrOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentsPtrInput` via:
//
//	        DocumentClassifierDocumentsArgs{...}
//
//	or:
//
//	        nil
type DocumentClassifierDocumentsPtrInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentsPtrOutput() DocumentClassifierDocumentsPtrOutput
	ToDocumentClassifierDocumentsPtrOutputWithContext(context.Context) DocumentClassifierDocumentsPtrOutput
}

type documentClassifierDocumentsPtrType DocumentClassifierDocumentsArgs

func DocumentClassifierDocumentsPtr(v *DocumentClassifierDocumentsArgs) DocumentClassifierDocumentsPtrInput {
	return (*documentClassifierDocumentsPtrType)(v)
}

func (*documentClassifierDocumentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocuments)(nil)).Elem()
}

func (i *documentClassifierDocumentsPtrType) ToDocumentClassifierDocumentsPtrOutput() DocumentClassifierDocumentsPtrOutput {
	return i.ToDocumentClassifierDocumentsPtrOutputWithContext(context.Background())
}

func (i *documentClassifierDocumentsPtrType) ToDocumentClassifierDocumentsPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentsPtrOutput)
}

type DocumentClassifierDocumentsOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocuments)(nil)).Elem()
}

func (o DocumentClassifierDocumentsOutput) ToDocumentClassifierDocumentsOutput() DocumentClassifierDocumentsOutput {
	return o
}

func (o DocumentClassifierDocumentsOutput) ToDocumentClassifierDocumentsOutputWithContext(ctx context.Context) DocumentClassifierDocumentsOutput {
	return o
}

func (o DocumentClassifierDocumentsOutput) ToDocumentClassifierDocumentsPtrOutput() DocumentClassifierDocumentsPtrOutput {
	return o.ToDocumentClassifierDocumentsPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentsOutput) ToDocumentClassifierDocumentsPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierDocuments) *DocumentClassifierDocuments {
		return &v
	}).(DocumentClassifierDocumentsPtrOutput)
}

func (o DocumentClassifierDocumentsOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentClassifierDocuments) string { return v.S3Uri }).(pulumi.StringOutput)
}

func (o DocumentClassifierDocumentsOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentClassifierDocuments) *string { return v.TestS3Uri }).(pulumi.StringPtrOutput)
}

type DocumentClassifierDocumentsPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocuments)(nil)).Elem()
}

func (o DocumentClassifierDocumentsPtrOutput) ToDocumentClassifierDocumentsPtrOutput() DocumentClassifierDocumentsPtrOutput {
	return o
}

func (o DocumentClassifierDocumentsPtrOutput) ToDocumentClassifierDocumentsPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentsPtrOutput {
	return o
}

func (o DocumentClassifierDocumentsPtrOutput) Elem() DocumentClassifierDocumentsOutput {
	return o.ApplyT(func(v *DocumentClassifierDocuments) DocumentClassifierDocuments {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierDocuments
		return ret
	}).(DocumentClassifierDocumentsOutput)
}

func (o DocumentClassifierDocumentsPtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentClassifierDocuments) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

func (o DocumentClassifierDocumentsPtrOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentClassifierDocuments) *string {
		if v == nil {
			return nil
		}
		return v.TestS3Uri
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierInputDataConfig struct {
	AugmentedManifests   []DocumentClassifierAugmentedManifestsListItem `pulumi:"augmentedManifests"`
	DataFormat           *DocumentClassifierInputDataConfigDataFormat   `pulumi:"dataFormat"`
	DocumentReaderConfig *DocumentClassifierDocumentReaderConfig        `pulumi:"documentReaderConfig"`
	DocumentType         *DocumentClassifierInputDataConfigDocumentType `pulumi:"documentType"`
	Documents            *DocumentClassifierDocuments                   `pulumi:"documents"`
	LabelDelimiter       *string                                        `pulumi:"labelDelimiter"`
	S3Uri                *string                                        `pulumi:"s3Uri"`
	TestS3Uri            *string                                        `pulumi:"testS3Uri"`
}

// DocumentClassifierInputDataConfigInput is an input type that accepts DocumentClassifierInputDataConfigArgs and DocumentClassifierInputDataConfigOutput values.
// You can construct a concrete instance of `DocumentClassifierInputDataConfigInput` via:
//
//	DocumentClassifierInputDataConfigArgs{...}
type DocumentClassifierInputDataConfigInput interface {
	pulumi.Input

	ToDocumentClassifierInputDataConfigOutput() DocumentClassifierInputDataConfigOutput
	ToDocumentClassifierInputDataConfigOutputWithContext(context.Context) DocumentClassifierInputDataConfigOutput
}

type DocumentClassifierInputDataConfigArgs struct {
	AugmentedManifests   DocumentClassifierAugmentedManifestsListItemArrayInput `pulumi:"augmentedManifests"`
	DataFormat           DocumentClassifierInputDataConfigDataFormatPtrInput    `pulumi:"dataFormat"`
	DocumentReaderConfig DocumentClassifierDocumentReaderConfigPtrInput         `pulumi:"documentReaderConfig"`
	DocumentType         DocumentClassifierInputDataConfigDocumentTypePtrInput  `pulumi:"documentType"`
	Documents            DocumentClassifierDocumentsPtrInput                    `pulumi:"documents"`
	LabelDelimiter       pulumi.StringPtrInput                                  `pulumi:"labelDelimiter"`
	S3Uri                pulumi.StringPtrInput                                  `pulumi:"s3Uri"`
	TestS3Uri            pulumi.StringPtrInput                                  `pulumi:"testS3Uri"`
}

func (DocumentClassifierInputDataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierInputDataConfig)(nil)).Elem()
}

func (i DocumentClassifierInputDataConfigArgs) ToDocumentClassifierInputDataConfigOutput() DocumentClassifierInputDataConfigOutput {
	return i.ToDocumentClassifierInputDataConfigOutputWithContext(context.Background())
}

func (i DocumentClassifierInputDataConfigArgs) ToDocumentClassifierInputDataConfigOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierInputDataConfigOutput)
}

type DocumentClassifierInputDataConfigOutput struct{ *pulumi.OutputState }

func (DocumentClassifierInputDataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierInputDataConfig)(nil)).Elem()
}

func (o DocumentClassifierInputDataConfigOutput) ToDocumentClassifierInputDataConfigOutput() DocumentClassifierInputDataConfigOutput {
	return o
}

func (o DocumentClassifierInputDataConfigOutput) ToDocumentClassifierInputDataConfigOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigOutput {
	return o
}

func (o DocumentClassifierInputDataConfigOutput) AugmentedManifests() DocumentClassifierAugmentedManifestsListItemArrayOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) []DocumentClassifierAugmentedManifestsListItem {
		return v.AugmentedManifests
	}).(DocumentClassifierAugmentedManifestsListItemArrayOutput)
}

func (o DocumentClassifierInputDataConfigOutput) DataFormat() DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *DocumentClassifierInputDataConfigDataFormat {
		return v.DataFormat
	}).(DocumentClassifierInputDataConfigDataFormatPtrOutput)
}

func (o DocumentClassifierInputDataConfigOutput) DocumentReaderConfig() DocumentClassifierDocumentReaderConfigPtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *DocumentClassifierDocumentReaderConfig {
		return v.DocumentReaderConfig
	}).(DocumentClassifierDocumentReaderConfigPtrOutput)
}

func (o DocumentClassifierInputDataConfigOutput) DocumentType() DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *DocumentClassifierInputDataConfigDocumentType {
		return v.DocumentType
	}).(DocumentClassifierInputDataConfigDocumentTypePtrOutput)
}

func (o DocumentClassifierInputDataConfigOutput) Documents() DocumentClassifierDocumentsPtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *DocumentClassifierDocuments { return v.Documents }).(DocumentClassifierDocumentsPtrOutput)
}

func (o DocumentClassifierInputDataConfigOutput) LabelDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *string { return v.LabelDelimiter }).(pulumi.StringPtrOutput)
}

func (o DocumentClassifierInputDataConfigOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

func (o DocumentClassifierInputDataConfigOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentClassifierInputDataConfig) *string { return v.TestS3Uri }).(pulumi.StringPtrOutput)
}

type DocumentClassifierOutputDataConfig struct {
	KmsKeyId *string `pulumi:"kmsKeyId"`
	S3Uri    *string `pulumi:"s3Uri"`
}

// DocumentClassifierOutputDataConfigInput is an input type that accepts DocumentClassifierOutputDataConfigArgs and DocumentClassifierOutputDataConfigOutput values.
// You can construct a concrete instance of `DocumentClassifierOutputDataConfigInput` via:
//
//	DocumentClassifierOutputDataConfigArgs{...}
type DocumentClassifierOutputDataConfigInput interface {
	pulumi.Input

	ToDocumentClassifierOutputDataConfigOutput() DocumentClassifierOutputDataConfigOutput
	ToDocumentClassifierOutputDataConfigOutputWithContext(context.Context) DocumentClassifierOutputDataConfigOutput
}

type DocumentClassifierOutputDataConfigArgs struct {
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	S3Uri    pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (DocumentClassifierOutputDataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierOutputDataConfig)(nil)).Elem()
}

func (i DocumentClassifierOutputDataConfigArgs) ToDocumentClassifierOutputDataConfigOutput() DocumentClassifierOutputDataConfigOutput {
	return i.ToDocumentClassifierOutputDataConfigOutputWithContext(context.Background())
}

func (i DocumentClassifierOutputDataConfigArgs) ToDocumentClassifierOutputDataConfigOutputWithContext(ctx context.Context) DocumentClassifierOutputDataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierOutputDataConfigOutput)
}

func (i DocumentClassifierOutputDataConfigArgs) ToDocumentClassifierOutputDataConfigPtrOutput() DocumentClassifierOutputDataConfigPtrOutput {
	return i.ToDocumentClassifierOutputDataConfigPtrOutputWithContext(context.Background())
}

func (i DocumentClassifierOutputDataConfigArgs) ToDocumentClassifierOutputDataConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierOutputDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierOutputDataConfigOutput).ToDocumentClassifierOutputDataConfigPtrOutputWithContext(ctx)
}

// DocumentClassifierOutputDataConfigPtrInput is an input type that accepts DocumentClassifierOutputDataConfigArgs, DocumentClassifierOutputDataConfigPtr and DocumentClassifierOutputDataConfigPtrOutput values.
// You can construct a concrete instance of `DocumentClassifierOutputDataConfigPtrInput` via:
//
//	        DocumentClassifierOutputDataConfigArgs{...}
//
//	or:
//
//	        nil
type DocumentClassifierOutputDataConfigPtrInput interface {
	pulumi.Input

	ToDocumentClassifierOutputDataConfigPtrOutput() DocumentClassifierOutputDataConfigPtrOutput
	ToDocumentClassifierOutputDataConfigPtrOutputWithContext(context.Context) DocumentClassifierOutputDataConfigPtrOutput
}

type documentClassifierOutputDataConfigPtrType DocumentClassifierOutputDataConfigArgs

func DocumentClassifierOutputDataConfigPtr(v *DocumentClassifierOutputDataConfigArgs) DocumentClassifierOutputDataConfigPtrInput {
	return (*documentClassifierOutputDataConfigPtrType)(v)
}

func (*documentClassifierOutputDataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierOutputDataConfig)(nil)).Elem()
}

func (i *documentClassifierOutputDataConfigPtrType) ToDocumentClassifierOutputDataConfigPtrOutput() DocumentClassifierOutputDataConfigPtrOutput {
	return i.ToDocumentClassifierOutputDataConfigPtrOutputWithContext(context.Background())
}

func (i *documentClassifierOutputDataConfigPtrType) ToDocumentClassifierOutputDataConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierOutputDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierOutputDataConfigPtrOutput)
}

type DocumentClassifierOutputDataConfigOutput struct{ *pulumi.OutputState }

func (DocumentClassifierOutputDataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierOutputDataConfig)(nil)).Elem()
}

func (o DocumentClassifierOutputDataConfigOutput) ToDocumentClassifierOutputDataConfigOutput() DocumentClassifierOutputDataConfigOutput {
	return o
}

func (o DocumentClassifierOutputDataConfigOutput) ToDocumentClassifierOutputDataConfigOutputWithContext(ctx context.Context) DocumentClassifierOutputDataConfigOutput {
	return o
}

func (o DocumentClassifierOutputDataConfigOutput) ToDocumentClassifierOutputDataConfigPtrOutput() DocumentClassifierOutputDataConfigPtrOutput {
	return o.ToDocumentClassifierOutputDataConfigPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierOutputDataConfigOutput) ToDocumentClassifierOutputDataConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierOutputDataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierOutputDataConfig) *DocumentClassifierOutputDataConfig {
		return &v
	}).(DocumentClassifierOutputDataConfigPtrOutput)
}

func (o DocumentClassifierOutputDataConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentClassifierOutputDataConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o DocumentClassifierOutputDataConfigOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentClassifierOutputDataConfig) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type DocumentClassifierOutputDataConfigPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierOutputDataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierOutputDataConfig)(nil)).Elem()
}

func (o DocumentClassifierOutputDataConfigPtrOutput) ToDocumentClassifierOutputDataConfigPtrOutput() DocumentClassifierOutputDataConfigPtrOutput {
	return o
}

func (o DocumentClassifierOutputDataConfigPtrOutput) ToDocumentClassifierOutputDataConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierOutputDataConfigPtrOutput {
	return o
}

func (o DocumentClassifierOutputDataConfigPtrOutput) Elem() DocumentClassifierOutputDataConfigOutput {
	return o.ApplyT(func(v *DocumentClassifierOutputDataConfig) DocumentClassifierOutputDataConfig {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierOutputDataConfig
		return ret
	}).(DocumentClassifierOutputDataConfigOutput)
}

func (o DocumentClassifierOutputDataConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentClassifierOutputDataConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o DocumentClassifierOutputDataConfigPtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentClassifierOutputDataConfig) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DocumentClassifierTagInput is an input type that accepts DocumentClassifierTagArgs and DocumentClassifierTagOutput values.
// You can construct a concrete instance of `DocumentClassifierTagInput` via:
//
//	DocumentClassifierTagArgs{...}
type DocumentClassifierTagInput interface {
	pulumi.Input

	ToDocumentClassifierTagOutput() DocumentClassifierTagOutput
	ToDocumentClassifierTagOutputWithContext(context.Context) DocumentClassifierTagOutput
}

type DocumentClassifierTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DocumentClassifierTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierTag)(nil)).Elem()
}

func (i DocumentClassifierTagArgs) ToDocumentClassifierTagOutput() DocumentClassifierTagOutput {
	return i.ToDocumentClassifierTagOutputWithContext(context.Background())
}

func (i DocumentClassifierTagArgs) ToDocumentClassifierTagOutputWithContext(ctx context.Context) DocumentClassifierTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierTagOutput)
}

// DocumentClassifierTagArrayInput is an input type that accepts DocumentClassifierTagArray and DocumentClassifierTagArrayOutput values.
// You can construct a concrete instance of `DocumentClassifierTagArrayInput` via:
//
//	DocumentClassifierTagArray{ DocumentClassifierTagArgs{...} }
type DocumentClassifierTagArrayInput interface {
	pulumi.Input

	ToDocumentClassifierTagArrayOutput() DocumentClassifierTagArrayOutput
	ToDocumentClassifierTagArrayOutputWithContext(context.Context) DocumentClassifierTagArrayOutput
}

type DocumentClassifierTagArray []DocumentClassifierTagInput

func (DocumentClassifierTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentClassifierTag)(nil)).Elem()
}

func (i DocumentClassifierTagArray) ToDocumentClassifierTagArrayOutput() DocumentClassifierTagArrayOutput {
	return i.ToDocumentClassifierTagArrayOutputWithContext(context.Background())
}

func (i DocumentClassifierTagArray) ToDocumentClassifierTagArrayOutputWithContext(ctx context.Context) DocumentClassifierTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierTagArrayOutput)
}

type DocumentClassifierTagOutput struct{ *pulumi.OutputState }

func (DocumentClassifierTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierTag)(nil)).Elem()
}

func (o DocumentClassifierTagOutput) ToDocumentClassifierTagOutput() DocumentClassifierTagOutput {
	return o
}

func (o DocumentClassifierTagOutput) ToDocumentClassifierTagOutputWithContext(ctx context.Context) DocumentClassifierTagOutput {
	return o
}

func (o DocumentClassifierTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentClassifierTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DocumentClassifierTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentClassifierTag) string { return v.Value }).(pulumi.StringOutput)
}

type DocumentClassifierTagArrayOutput struct{ *pulumi.OutputState }

func (DocumentClassifierTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentClassifierTag)(nil)).Elem()
}

func (o DocumentClassifierTagArrayOutput) ToDocumentClassifierTagArrayOutput() DocumentClassifierTagArrayOutput {
	return o
}

func (o DocumentClassifierTagArrayOutput) ToDocumentClassifierTagArrayOutputWithContext(ctx context.Context) DocumentClassifierTagArrayOutput {
	return o
}

func (o DocumentClassifierTagArrayOutput) Index(i pulumi.IntInput) DocumentClassifierTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentClassifierTag {
		return vs[0].([]DocumentClassifierTag)[vs[1].(int)]
	}).(DocumentClassifierTagOutput)
}

type DocumentClassifierVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Subnets          []string `pulumi:"subnets"`
}

// DocumentClassifierVpcConfigInput is an input type that accepts DocumentClassifierVpcConfigArgs and DocumentClassifierVpcConfigOutput values.
// You can construct a concrete instance of `DocumentClassifierVpcConfigInput` via:
//
//	DocumentClassifierVpcConfigArgs{...}
type DocumentClassifierVpcConfigInput interface {
	pulumi.Input

	ToDocumentClassifierVpcConfigOutput() DocumentClassifierVpcConfigOutput
	ToDocumentClassifierVpcConfigOutputWithContext(context.Context) DocumentClassifierVpcConfigOutput
}

type DocumentClassifierVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Subnets          pulumi.StringArrayInput `pulumi:"subnets"`
}

func (DocumentClassifierVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierVpcConfig)(nil)).Elem()
}

func (i DocumentClassifierVpcConfigArgs) ToDocumentClassifierVpcConfigOutput() DocumentClassifierVpcConfigOutput {
	return i.ToDocumentClassifierVpcConfigOutputWithContext(context.Background())
}

func (i DocumentClassifierVpcConfigArgs) ToDocumentClassifierVpcConfigOutputWithContext(ctx context.Context) DocumentClassifierVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierVpcConfigOutput)
}

func (i DocumentClassifierVpcConfigArgs) ToDocumentClassifierVpcConfigPtrOutput() DocumentClassifierVpcConfigPtrOutput {
	return i.ToDocumentClassifierVpcConfigPtrOutputWithContext(context.Background())
}

func (i DocumentClassifierVpcConfigArgs) ToDocumentClassifierVpcConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierVpcConfigOutput).ToDocumentClassifierVpcConfigPtrOutputWithContext(ctx)
}

// DocumentClassifierVpcConfigPtrInput is an input type that accepts DocumentClassifierVpcConfigArgs, DocumentClassifierVpcConfigPtr and DocumentClassifierVpcConfigPtrOutput values.
// You can construct a concrete instance of `DocumentClassifierVpcConfigPtrInput` via:
//
//	        DocumentClassifierVpcConfigArgs{...}
//
//	or:
//
//	        nil
type DocumentClassifierVpcConfigPtrInput interface {
	pulumi.Input

	ToDocumentClassifierVpcConfigPtrOutput() DocumentClassifierVpcConfigPtrOutput
	ToDocumentClassifierVpcConfigPtrOutputWithContext(context.Context) DocumentClassifierVpcConfigPtrOutput
}

type documentClassifierVpcConfigPtrType DocumentClassifierVpcConfigArgs

func DocumentClassifierVpcConfigPtr(v *DocumentClassifierVpcConfigArgs) DocumentClassifierVpcConfigPtrInput {
	return (*documentClassifierVpcConfigPtrType)(v)
}

func (*documentClassifierVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierVpcConfig)(nil)).Elem()
}

func (i *documentClassifierVpcConfigPtrType) ToDocumentClassifierVpcConfigPtrOutput() DocumentClassifierVpcConfigPtrOutput {
	return i.ToDocumentClassifierVpcConfigPtrOutputWithContext(context.Background())
}

func (i *documentClassifierVpcConfigPtrType) ToDocumentClassifierVpcConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierVpcConfigPtrOutput)
}

type DocumentClassifierVpcConfigOutput struct{ *pulumi.OutputState }

func (DocumentClassifierVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierVpcConfig)(nil)).Elem()
}

func (o DocumentClassifierVpcConfigOutput) ToDocumentClassifierVpcConfigOutput() DocumentClassifierVpcConfigOutput {
	return o
}

func (o DocumentClassifierVpcConfigOutput) ToDocumentClassifierVpcConfigOutputWithContext(ctx context.Context) DocumentClassifierVpcConfigOutput {
	return o
}

func (o DocumentClassifierVpcConfigOutput) ToDocumentClassifierVpcConfigPtrOutput() DocumentClassifierVpcConfigPtrOutput {
	return o.ToDocumentClassifierVpcConfigPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierVpcConfigOutput) ToDocumentClassifierVpcConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierVpcConfig) *DocumentClassifierVpcConfig {
		return &v
	}).(DocumentClassifierVpcConfigPtrOutput)
}

func (o DocumentClassifierVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DocumentClassifierVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o DocumentClassifierVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DocumentClassifierVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type DocumentClassifierVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierVpcConfig)(nil)).Elem()
}

func (o DocumentClassifierVpcConfigPtrOutput) ToDocumentClassifierVpcConfigPtrOutput() DocumentClassifierVpcConfigPtrOutput {
	return o
}

func (o DocumentClassifierVpcConfigPtrOutput) ToDocumentClassifierVpcConfigPtrOutputWithContext(ctx context.Context) DocumentClassifierVpcConfigPtrOutput {
	return o
}

func (o DocumentClassifierVpcConfigPtrOutput) Elem() DocumentClassifierVpcConfigOutput {
	return o.ApplyT(func(v *DocumentClassifierVpcConfig) DocumentClassifierVpcConfig {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierVpcConfig
		return ret
	}).(DocumentClassifierVpcConfigOutput)
}

func (o DocumentClassifierVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DocumentClassifierVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o DocumentClassifierVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DocumentClassifierVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type FlywheelDataSecurityConfig struct {
	DataLakeKmsKeyId *string            `pulumi:"dataLakeKmsKeyId"`
	ModelKmsKeyId    *string            `pulumi:"modelKmsKeyId"`
	VolumeKmsKeyId   *string            `pulumi:"volumeKmsKeyId"`
	VpcConfig        *FlywheelVpcConfig `pulumi:"vpcConfig"`
}

// FlywheelDataSecurityConfigInput is an input type that accepts FlywheelDataSecurityConfigArgs and FlywheelDataSecurityConfigOutput values.
// You can construct a concrete instance of `FlywheelDataSecurityConfigInput` via:
//
//	FlywheelDataSecurityConfigArgs{...}
type FlywheelDataSecurityConfigInput interface {
	pulumi.Input

	ToFlywheelDataSecurityConfigOutput() FlywheelDataSecurityConfigOutput
	ToFlywheelDataSecurityConfigOutputWithContext(context.Context) FlywheelDataSecurityConfigOutput
}

type FlywheelDataSecurityConfigArgs struct {
	DataLakeKmsKeyId pulumi.StringPtrInput     `pulumi:"dataLakeKmsKeyId"`
	ModelKmsKeyId    pulumi.StringPtrInput     `pulumi:"modelKmsKeyId"`
	VolumeKmsKeyId   pulumi.StringPtrInput     `pulumi:"volumeKmsKeyId"`
	VpcConfig        FlywheelVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (FlywheelDataSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDataSecurityConfig)(nil)).Elem()
}

func (i FlywheelDataSecurityConfigArgs) ToFlywheelDataSecurityConfigOutput() FlywheelDataSecurityConfigOutput {
	return i.ToFlywheelDataSecurityConfigOutputWithContext(context.Background())
}

func (i FlywheelDataSecurityConfigArgs) ToFlywheelDataSecurityConfigOutputWithContext(ctx context.Context) FlywheelDataSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelDataSecurityConfigOutput)
}

func (i FlywheelDataSecurityConfigArgs) ToFlywheelDataSecurityConfigPtrOutput() FlywheelDataSecurityConfigPtrOutput {
	return i.ToFlywheelDataSecurityConfigPtrOutputWithContext(context.Background())
}

func (i FlywheelDataSecurityConfigArgs) ToFlywheelDataSecurityConfigPtrOutputWithContext(ctx context.Context) FlywheelDataSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelDataSecurityConfigOutput).ToFlywheelDataSecurityConfigPtrOutputWithContext(ctx)
}

// FlywheelDataSecurityConfigPtrInput is an input type that accepts FlywheelDataSecurityConfigArgs, FlywheelDataSecurityConfigPtr and FlywheelDataSecurityConfigPtrOutput values.
// You can construct a concrete instance of `FlywheelDataSecurityConfigPtrInput` via:
//
//	        FlywheelDataSecurityConfigArgs{...}
//
//	or:
//
//	        nil
type FlywheelDataSecurityConfigPtrInput interface {
	pulumi.Input

	ToFlywheelDataSecurityConfigPtrOutput() FlywheelDataSecurityConfigPtrOutput
	ToFlywheelDataSecurityConfigPtrOutputWithContext(context.Context) FlywheelDataSecurityConfigPtrOutput
}

type flywheelDataSecurityConfigPtrType FlywheelDataSecurityConfigArgs

func FlywheelDataSecurityConfigPtr(v *FlywheelDataSecurityConfigArgs) FlywheelDataSecurityConfigPtrInput {
	return (*flywheelDataSecurityConfigPtrType)(v)
}

func (*flywheelDataSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelDataSecurityConfig)(nil)).Elem()
}

func (i *flywheelDataSecurityConfigPtrType) ToFlywheelDataSecurityConfigPtrOutput() FlywheelDataSecurityConfigPtrOutput {
	return i.ToFlywheelDataSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *flywheelDataSecurityConfigPtrType) ToFlywheelDataSecurityConfigPtrOutputWithContext(ctx context.Context) FlywheelDataSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelDataSecurityConfigPtrOutput)
}

type FlywheelDataSecurityConfigOutput struct{ *pulumi.OutputState }

func (FlywheelDataSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDataSecurityConfig)(nil)).Elem()
}

func (o FlywheelDataSecurityConfigOutput) ToFlywheelDataSecurityConfigOutput() FlywheelDataSecurityConfigOutput {
	return o
}

func (o FlywheelDataSecurityConfigOutput) ToFlywheelDataSecurityConfigOutputWithContext(ctx context.Context) FlywheelDataSecurityConfigOutput {
	return o
}

func (o FlywheelDataSecurityConfigOutput) ToFlywheelDataSecurityConfigPtrOutput() FlywheelDataSecurityConfigPtrOutput {
	return o.ToFlywheelDataSecurityConfigPtrOutputWithContext(context.Background())
}

func (o FlywheelDataSecurityConfigOutput) ToFlywheelDataSecurityConfigPtrOutputWithContext(ctx context.Context) FlywheelDataSecurityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelDataSecurityConfig) *FlywheelDataSecurityConfig {
		return &v
	}).(FlywheelDataSecurityConfigPtrOutput)
}

func (o FlywheelDataSecurityConfigOutput) DataLakeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlywheelDataSecurityConfig) *string { return v.DataLakeKmsKeyId }).(pulumi.StringPtrOutput)
}

func (o FlywheelDataSecurityConfigOutput) ModelKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlywheelDataSecurityConfig) *string { return v.ModelKmsKeyId }).(pulumi.StringPtrOutput)
}

func (o FlywheelDataSecurityConfigOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlywheelDataSecurityConfig) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

func (o FlywheelDataSecurityConfigOutput) VpcConfig() FlywheelVpcConfigPtrOutput {
	return o.ApplyT(func(v FlywheelDataSecurityConfig) *FlywheelVpcConfig { return v.VpcConfig }).(FlywheelVpcConfigPtrOutput)
}

type FlywheelDataSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (FlywheelDataSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelDataSecurityConfig)(nil)).Elem()
}

func (o FlywheelDataSecurityConfigPtrOutput) ToFlywheelDataSecurityConfigPtrOutput() FlywheelDataSecurityConfigPtrOutput {
	return o
}

func (o FlywheelDataSecurityConfigPtrOutput) ToFlywheelDataSecurityConfigPtrOutputWithContext(ctx context.Context) FlywheelDataSecurityConfigPtrOutput {
	return o
}

func (o FlywheelDataSecurityConfigPtrOutput) Elem() FlywheelDataSecurityConfigOutput {
	return o.ApplyT(func(v *FlywheelDataSecurityConfig) FlywheelDataSecurityConfig {
		if v != nil {
			return *v
		}
		var ret FlywheelDataSecurityConfig
		return ret
	}).(FlywheelDataSecurityConfigOutput)
}

func (o FlywheelDataSecurityConfigPtrOutput) DataLakeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlywheelDataSecurityConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataLakeKmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o FlywheelDataSecurityConfigPtrOutput) ModelKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlywheelDataSecurityConfig) *string {
		if v == nil {
			return nil
		}
		return v.ModelKmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o FlywheelDataSecurityConfigPtrOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlywheelDataSecurityConfig) *string {
		if v == nil {
			return nil
		}
		return v.VolumeKmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o FlywheelDataSecurityConfigPtrOutput) VpcConfig() FlywheelVpcConfigPtrOutput {
	return o.ApplyT(func(v *FlywheelDataSecurityConfig) *FlywheelVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(FlywheelVpcConfigPtrOutput)
}

type FlywheelDocumentClassificationConfig struct {
	Labels []string                                 `pulumi:"labels"`
	Mode   FlywheelDocumentClassificationConfigMode `pulumi:"mode"`
}

// FlywheelDocumentClassificationConfigInput is an input type that accepts FlywheelDocumentClassificationConfigArgs and FlywheelDocumentClassificationConfigOutput values.
// You can construct a concrete instance of `FlywheelDocumentClassificationConfigInput` via:
//
//	FlywheelDocumentClassificationConfigArgs{...}
type FlywheelDocumentClassificationConfigInput interface {
	pulumi.Input

	ToFlywheelDocumentClassificationConfigOutput() FlywheelDocumentClassificationConfigOutput
	ToFlywheelDocumentClassificationConfigOutputWithContext(context.Context) FlywheelDocumentClassificationConfigOutput
}

type FlywheelDocumentClassificationConfigArgs struct {
	Labels pulumi.StringArrayInput                       `pulumi:"labels"`
	Mode   FlywheelDocumentClassificationConfigModeInput `pulumi:"mode"`
}

func (FlywheelDocumentClassificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDocumentClassificationConfig)(nil)).Elem()
}

func (i FlywheelDocumentClassificationConfigArgs) ToFlywheelDocumentClassificationConfigOutput() FlywheelDocumentClassificationConfigOutput {
	return i.ToFlywheelDocumentClassificationConfigOutputWithContext(context.Background())
}

func (i FlywheelDocumentClassificationConfigArgs) ToFlywheelDocumentClassificationConfigOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelDocumentClassificationConfigOutput)
}

func (i FlywheelDocumentClassificationConfigArgs) ToFlywheelDocumentClassificationConfigPtrOutput() FlywheelDocumentClassificationConfigPtrOutput {
	return i.ToFlywheelDocumentClassificationConfigPtrOutputWithContext(context.Background())
}

func (i FlywheelDocumentClassificationConfigArgs) ToFlywheelDocumentClassificationConfigPtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelDocumentClassificationConfigOutput).ToFlywheelDocumentClassificationConfigPtrOutputWithContext(ctx)
}

// FlywheelDocumentClassificationConfigPtrInput is an input type that accepts FlywheelDocumentClassificationConfigArgs, FlywheelDocumentClassificationConfigPtr and FlywheelDocumentClassificationConfigPtrOutput values.
// You can construct a concrete instance of `FlywheelDocumentClassificationConfigPtrInput` via:
//
//	        FlywheelDocumentClassificationConfigArgs{...}
//
//	or:
//
//	        nil
type FlywheelDocumentClassificationConfigPtrInput interface {
	pulumi.Input

	ToFlywheelDocumentClassificationConfigPtrOutput() FlywheelDocumentClassificationConfigPtrOutput
	ToFlywheelDocumentClassificationConfigPtrOutputWithContext(context.Context) FlywheelDocumentClassificationConfigPtrOutput
}

type flywheelDocumentClassificationConfigPtrType FlywheelDocumentClassificationConfigArgs

func FlywheelDocumentClassificationConfigPtr(v *FlywheelDocumentClassificationConfigArgs) FlywheelDocumentClassificationConfigPtrInput {
	return (*flywheelDocumentClassificationConfigPtrType)(v)
}

func (*flywheelDocumentClassificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelDocumentClassificationConfig)(nil)).Elem()
}

func (i *flywheelDocumentClassificationConfigPtrType) ToFlywheelDocumentClassificationConfigPtrOutput() FlywheelDocumentClassificationConfigPtrOutput {
	return i.ToFlywheelDocumentClassificationConfigPtrOutputWithContext(context.Background())
}

func (i *flywheelDocumentClassificationConfigPtrType) ToFlywheelDocumentClassificationConfigPtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelDocumentClassificationConfigPtrOutput)
}

type FlywheelDocumentClassificationConfigOutput struct{ *pulumi.OutputState }

func (FlywheelDocumentClassificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDocumentClassificationConfig)(nil)).Elem()
}

func (o FlywheelDocumentClassificationConfigOutput) ToFlywheelDocumentClassificationConfigOutput() FlywheelDocumentClassificationConfigOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigOutput) ToFlywheelDocumentClassificationConfigOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigOutput) ToFlywheelDocumentClassificationConfigPtrOutput() FlywheelDocumentClassificationConfigPtrOutput {
	return o.ToFlywheelDocumentClassificationConfigPtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigOutput) ToFlywheelDocumentClassificationConfigPtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelDocumentClassificationConfig) *FlywheelDocumentClassificationConfig {
		return &v
	}).(FlywheelDocumentClassificationConfigPtrOutput)
}

func (o FlywheelDocumentClassificationConfigOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlywheelDocumentClassificationConfig) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

func (o FlywheelDocumentClassificationConfigOutput) Mode() FlywheelDocumentClassificationConfigModeOutput {
	return o.ApplyT(func(v FlywheelDocumentClassificationConfig) FlywheelDocumentClassificationConfigMode { return v.Mode }).(FlywheelDocumentClassificationConfigModeOutput)
}

type FlywheelDocumentClassificationConfigPtrOutput struct{ *pulumi.OutputState }

func (FlywheelDocumentClassificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelDocumentClassificationConfig)(nil)).Elem()
}

func (o FlywheelDocumentClassificationConfigPtrOutput) ToFlywheelDocumentClassificationConfigPtrOutput() FlywheelDocumentClassificationConfigPtrOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigPtrOutput) ToFlywheelDocumentClassificationConfigPtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigPtrOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigPtrOutput) Elem() FlywheelDocumentClassificationConfigOutput {
	return o.ApplyT(func(v *FlywheelDocumentClassificationConfig) FlywheelDocumentClassificationConfig {
		if v != nil {
			return *v
		}
		var ret FlywheelDocumentClassificationConfig
		return ret
	}).(FlywheelDocumentClassificationConfigOutput)
}

func (o FlywheelDocumentClassificationConfigPtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlywheelDocumentClassificationConfig) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

func (o FlywheelDocumentClassificationConfigPtrOutput) Mode() FlywheelDocumentClassificationConfigModePtrOutput {
	return o.ApplyT(func(v *FlywheelDocumentClassificationConfig) *FlywheelDocumentClassificationConfigMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(FlywheelDocumentClassificationConfigModePtrOutput)
}

type FlywheelEntityRecognitionConfig struct {
	EntityTypes []FlywheelEntityTypesListItem `pulumi:"entityTypes"`
}

// FlywheelEntityRecognitionConfigInput is an input type that accepts FlywheelEntityRecognitionConfigArgs and FlywheelEntityRecognitionConfigOutput values.
// You can construct a concrete instance of `FlywheelEntityRecognitionConfigInput` via:
//
//	FlywheelEntityRecognitionConfigArgs{...}
type FlywheelEntityRecognitionConfigInput interface {
	pulumi.Input

	ToFlywheelEntityRecognitionConfigOutput() FlywheelEntityRecognitionConfigOutput
	ToFlywheelEntityRecognitionConfigOutputWithContext(context.Context) FlywheelEntityRecognitionConfigOutput
}

type FlywheelEntityRecognitionConfigArgs struct {
	EntityTypes FlywheelEntityTypesListItemArrayInput `pulumi:"entityTypes"`
}

func (FlywheelEntityRecognitionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelEntityRecognitionConfig)(nil)).Elem()
}

func (i FlywheelEntityRecognitionConfigArgs) ToFlywheelEntityRecognitionConfigOutput() FlywheelEntityRecognitionConfigOutput {
	return i.ToFlywheelEntityRecognitionConfigOutputWithContext(context.Background())
}

func (i FlywheelEntityRecognitionConfigArgs) ToFlywheelEntityRecognitionConfigOutputWithContext(ctx context.Context) FlywheelEntityRecognitionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelEntityRecognitionConfigOutput)
}

func (i FlywheelEntityRecognitionConfigArgs) ToFlywheelEntityRecognitionConfigPtrOutput() FlywheelEntityRecognitionConfigPtrOutput {
	return i.ToFlywheelEntityRecognitionConfigPtrOutputWithContext(context.Background())
}

func (i FlywheelEntityRecognitionConfigArgs) ToFlywheelEntityRecognitionConfigPtrOutputWithContext(ctx context.Context) FlywheelEntityRecognitionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelEntityRecognitionConfigOutput).ToFlywheelEntityRecognitionConfigPtrOutputWithContext(ctx)
}

// FlywheelEntityRecognitionConfigPtrInput is an input type that accepts FlywheelEntityRecognitionConfigArgs, FlywheelEntityRecognitionConfigPtr and FlywheelEntityRecognitionConfigPtrOutput values.
// You can construct a concrete instance of `FlywheelEntityRecognitionConfigPtrInput` via:
//
//	        FlywheelEntityRecognitionConfigArgs{...}
//
//	or:
//
//	        nil
type FlywheelEntityRecognitionConfigPtrInput interface {
	pulumi.Input

	ToFlywheelEntityRecognitionConfigPtrOutput() FlywheelEntityRecognitionConfigPtrOutput
	ToFlywheelEntityRecognitionConfigPtrOutputWithContext(context.Context) FlywheelEntityRecognitionConfigPtrOutput
}

type flywheelEntityRecognitionConfigPtrType FlywheelEntityRecognitionConfigArgs

func FlywheelEntityRecognitionConfigPtr(v *FlywheelEntityRecognitionConfigArgs) FlywheelEntityRecognitionConfigPtrInput {
	return (*flywheelEntityRecognitionConfigPtrType)(v)
}

func (*flywheelEntityRecognitionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelEntityRecognitionConfig)(nil)).Elem()
}

func (i *flywheelEntityRecognitionConfigPtrType) ToFlywheelEntityRecognitionConfigPtrOutput() FlywheelEntityRecognitionConfigPtrOutput {
	return i.ToFlywheelEntityRecognitionConfigPtrOutputWithContext(context.Background())
}

func (i *flywheelEntityRecognitionConfigPtrType) ToFlywheelEntityRecognitionConfigPtrOutputWithContext(ctx context.Context) FlywheelEntityRecognitionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelEntityRecognitionConfigPtrOutput)
}

type FlywheelEntityRecognitionConfigOutput struct{ *pulumi.OutputState }

func (FlywheelEntityRecognitionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelEntityRecognitionConfig)(nil)).Elem()
}

func (o FlywheelEntityRecognitionConfigOutput) ToFlywheelEntityRecognitionConfigOutput() FlywheelEntityRecognitionConfigOutput {
	return o
}

func (o FlywheelEntityRecognitionConfigOutput) ToFlywheelEntityRecognitionConfigOutputWithContext(ctx context.Context) FlywheelEntityRecognitionConfigOutput {
	return o
}

func (o FlywheelEntityRecognitionConfigOutput) ToFlywheelEntityRecognitionConfigPtrOutput() FlywheelEntityRecognitionConfigPtrOutput {
	return o.ToFlywheelEntityRecognitionConfigPtrOutputWithContext(context.Background())
}

func (o FlywheelEntityRecognitionConfigOutput) ToFlywheelEntityRecognitionConfigPtrOutputWithContext(ctx context.Context) FlywheelEntityRecognitionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelEntityRecognitionConfig) *FlywheelEntityRecognitionConfig {
		return &v
	}).(FlywheelEntityRecognitionConfigPtrOutput)
}

func (o FlywheelEntityRecognitionConfigOutput) EntityTypes() FlywheelEntityTypesListItemArrayOutput {
	return o.ApplyT(func(v FlywheelEntityRecognitionConfig) []FlywheelEntityTypesListItem { return v.EntityTypes }).(FlywheelEntityTypesListItemArrayOutput)
}

type FlywheelEntityRecognitionConfigPtrOutput struct{ *pulumi.OutputState }

func (FlywheelEntityRecognitionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelEntityRecognitionConfig)(nil)).Elem()
}

func (o FlywheelEntityRecognitionConfigPtrOutput) ToFlywheelEntityRecognitionConfigPtrOutput() FlywheelEntityRecognitionConfigPtrOutput {
	return o
}

func (o FlywheelEntityRecognitionConfigPtrOutput) ToFlywheelEntityRecognitionConfigPtrOutputWithContext(ctx context.Context) FlywheelEntityRecognitionConfigPtrOutput {
	return o
}

func (o FlywheelEntityRecognitionConfigPtrOutput) Elem() FlywheelEntityRecognitionConfigOutput {
	return o.ApplyT(func(v *FlywheelEntityRecognitionConfig) FlywheelEntityRecognitionConfig {
		if v != nil {
			return *v
		}
		var ret FlywheelEntityRecognitionConfig
		return ret
	}).(FlywheelEntityRecognitionConfigOutput)
}

func (o FlywheelEntityRecognitionConfigPtrOutput) EntityTypes() FlywheelEntityTypesListItemArrayOutput {
	return o.ApplyT(func(v *FlywheelEntityRecognitionConfig) []FlywheelEntityTypesListItem {
		if v == nil {
			return nil
		}
		return v.EntityTypes
	}).(FlywheelEntityTypesListItemArrayOutput)
}

type FlywheelEntityTypesListItem struct {
	Type string `pulumi:"type"`
}

// FlywheelEntityTypesListItemInput is an input type that accepts FlywheelEntityTypesListItemArgs and FlywheelEntityTypesListItemOutput values.
// You can construct a concrete instance of `FlywheelEntityTypesListItemInput` via:
//
//	FlywheelEntityTypesListItemArgs{...}
type FlywheelEntityTypesListItemInput interface {
	pulumi.Input

	ToFlywheelEntityTypesListItemOutput() FlywheelEntityTypesListItemOutput
	ToFlywheelEntityTypesListItemOutputWithContext(context.Context) FlywheelEntityTypesListItemOutput
}

type FlywheelEntityTypesListItemArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (FlywheelEntityTypesListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelEntityTypesListItem)(nil)).Elem()
}

func (i FlywheelEntityTypesListItemArgs) ToFlywheelEntityTypesListItemOutput() FlywheelEntityTypesListItemOutput {
	return i.ToFlywheelEntityTypesListItemOutputWithContext(context.Background())
}

func (i FlywheelEntityTypesListItemArgs) ToFlywheelEntityTypesListItemOutputWithContext(ctx context.Context) FlywheelEntityTypesListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelEntityTypesListItemOutput)
}

// FlywheelEntityTypesListItemArrayInput is an input type that accepts FlywheelEntityTypesListItemArray and FlywheelEntityTypesListItemArrayOutput values.
// You can construct a concrete instance of `FlywheelEntityTypesListItemArrayInput` via:
//
//	FlywheelEntityTypesListItemArray{ FlywheelEntityTypesListItemArgs{...} }
type FlywheelEntityTypesListItemArrayInput interface {
	pulumi.Input

	ToFlywheelEntityTypesListItemArrayOutput() FlywheelEntityTypesListItemArrayOutput
	ToFlywheelEntityTypesListItemArrayOutputWithContext(context.Context) FlywheelEntityTypesListItemArrayOutput
}

type FlywheelEntityTypesListItemArray []FlywheelEntityTypesListItemInput

func (FlywheelEntityTypesListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlywheelEntityTypesListItem)(nil)).Elem()
}

func (i FlywheelEntityTypesListItemArray) ToFlywheelEntityTypesListItemArrayOutput() FlywheelEntityTypesListItemArrayOutput {
	return i.ToFlywheelEntityTypesListItemArrayOutputWithContext(context.Background())
}

func (i FlywheelEntityTypesListItemArray) ToFlywheelEntityTypesListItemArrayOutputWithContext(ctx context.Context) FlywheelEntityTypesListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelEntityTypesListItemArrayOutput)
}

type FlywheelEntityTypesListItemOutput struct{ *pulumi.OutputState }

func (FlywheelEntityTypesListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelEntityTypesListItem)(nil)).Elem()
}

func (o FlywheelEntityTypesListItemOutput) ToFlywheelEntityTypesListItemOutput() FlywheelEntityTypesListItemOutput {
	return o
}

func (o FlywheelEntityTypesListItemOutput) ToFlywheelEntityTypesListItemOutputWithContext(ctx context.Context) FlywheelEntityTypesListItemOutput {
	return o
}

func (o FlywheelEntityTypesListItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FlywheelEntityTypesListItem) string { return v.Type }).(pulumi.StringOutput)
}

type FlywheelEntityTypesListItemArrayOutput struct{ *pulumi.OutputState }

func (FlywheelEntityTypesListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlywheelEntityTypesListItem)(nil)).Elem()
}

func (o FlywheelEntityTypesListItemArrayOutput) ToFlywheelEntityTypesListItemArrayOutput() FlywheelEntityTypesListItemArrayOutput {
	return o
}

func (o FlywheelEntityTypesListItemArrayOutput) ToFlywheelEntityTypesListItemArrayOutputWithContext(ctx context.Context) FlywheelEntityTypesListItemArrayOutput {
	return o
}

func (o FlywheelEntityTypesListItemArrayOutput) Index(i pulumi.IntInput) FlywheelEntityTypesListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlywheelEntityTypesListItem {
		return vs[0].([]FlywheelEntityTypesListItem)[vs[1].(int)]
	}).(FlywheelEntityTypesListItemOutput)
}

type FlywheelTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FlywheelTagInput is an input type that accepts FlywheelTagArgs and FlywheelTagOutput values.
// You can construct a concrete instance of `FlywheelTagInput` via:
//
//	FlywheelTagArgs{...}
type FlywheelTagInput interface {
	pulumi.Input

	ToFlywheelTagOutput() FlywheelTagOutput
	ToFlywheelTagOutputWithContext(context.Context) FlywheelTagOutput
}

type FlywheelTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FlywheelTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTag)(nil)).Elem()
}

func (i FlywheelTagArgs) ToFlywheelTagOutput() FlywheelTagOutput {
	return i.ToFlywheelTagOutputWithContext(context.Background())
}

func (i FlywheelTagArgs) ToFlywheelTagOutputWithContext(ctx context.Context) FlywheelTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelTagOutput)
}

// FlywheelTagArrayInput is an input type that accepts FlywheelTagArray and FlywheelTagArrayOutput values.
// You can construct a concrete instance of `FlywheelTagArrayInput` via:
//
//	FlywheelTagArray{ FlywheelTagArgs{...} }
type FlywheelTagArrayInput interface {
	pulumi.Input

	ToFlywheelTagArrayOutput() FlywheelTagArrayOutput
	ToFlywheelTagArrayOutputWithContext(context.Context) FlywheelTagArrayOutput
}

type FlywheelTagArray []FlywheelTagInput

func (FlywheelTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlywheelTag)(nil)).Elem()
}

func (i FlywheelTagArray) ToFlywheelTagArrayOutput() FlywheelTagArrayOutput {
	return i.ToFlywheelTagArrayOutputWithContext(context.Background())
}

func (i FlywheelTagArray) ToFlywheelTagArrayOutputWithContext(ctx context.Context) FlywheelTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelTagArrayOutput)
}

type FlywheelTagOutput struct{ *pulumi.OutputState }

func (FlywheelTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTag)(nil)).Elem()
}

func (o FlywheelTagOutput) ToFlywheelTagOutput() FlywheelTagOutput {
	return o
}

func (o FlywheelTagOutput) ToFlywheelTagOutputWithContext(ctx context.Context) FlywheelTagOutput {
	return o
}

func (o FlywheelTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlywheelTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FlywheelTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FlywheelTag) string { return v.Value }).(pulumi.StringOutput)
}

type FlywheelTagArrayOutput struct{ *pulumi.OutputState }

func (FlywheelTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlywheelTag)(nil)).Elem()
}

func (o FlywheelTagArrayOutput) ToFlywheelTagArrayOutput() FlywheelTagArrayOutput {
	return o
}

func (o FlywheelTagArrayOutput) ToFlywheelTagArrayOutputWithContext(ctx context.Context) FlywheelTagArrayOutput {
	return o
}

func (o FlywheelTagArrayOutput) Index(i pulumi.IntInput) FlywheelTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlywheelTag {
		return vs[0].([]FlywheelTag)[vs[1].(int)]
	}).(FlywheelTagOutput)
}

type FlywheelTaskConfig struct {
	DocumentClassificationConfig *FlywheelDocumentClassificationConfig `pulumi:"documentClassificationConfig"`
	EntityRecognitionConfig      *FlywheelEntityRecognitionConfig      `pulumi:"entityRecognitionConfig"`
	LanguageCode                 FlywheelTaskConfigLanguageCode        `pulumi:"languageCode"`
}

// FlywheelTaskConfigInput is an input type that accepts FlywheelTaskConfigArgs and FlywheelTaskConfigOutput values.
// You can construct a concrete instance of `FlywheelTaskConfigInput` via:
//
//	FlywheelTaskConfigArgs{...}
type FlywheelTaskConfigInput interface {
	pulumi.Input

	ToFlywheelTaskConfigOutput() FlywheelTaskConfigOutput
	ToFlywheelTaskConfigOutputWithContext(context.Context) FlywheelTaskConfigOutput
}

type FlywheelTaskConfigArgs struct {
	DocumentClassificationConfig FlywheelDocumentClassificationConfigPtrInput `pulumi:"documentClassificationConfig"`
	EntityRecognitionConfig      FlywheelEntityRecognitionConfigPtrInput      `pulumi:"entityRecognitionConfig"`
	LanguageCode                 FlywheelTaskConfigLanguageCodeInput          `pulumi:"languageCode"`
}

func (FlywheelTaskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTaskConfig)(nil)).Elem()
}

func (i FlywheelTaskConfigArgs) ToFlywheelTaskConfigOutput() FlywheelTaskConfigOutput {
	return i.ToFlywheelTaskConfigOutputWithContext(context.Background())
}

func (i FlywheelTaskConfigArgs) ToFlywheelTaskConfigOutputWithContext(ctx context.Context) FlywheelTaskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelTaskConfigOutput)
}

func (i FlywheelTaskConfigArgs) ToFlywheelTaskConfigPtrOutput() FlywheelTaskConfigPtrOutput {
	return i.ToFlywheelTaskConfigPtrOutputWithContext(context.Background())
}

func (i FlywheelTaskConfigArgs) ToFlywheelTaskConfigPtrOutputWithContext(ctx context.Context) FlywheelTaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelTaskConfigOutput).ToFlywheelTaskConfigPtrOutputWithContext(ctx)
}

// FlywheelTaskConfigPtrInput is an input type that accepts FlywheelTaskConfigArgs, FlywheelTaskConfigPtr and FlywheelTaskConfigPtrOutput values.
// You can construct a concrete instance of `FlywheelTaskConfigPtrInput` via:
//
//	        FlywheelTaskConfigArgs{...}
//
//	or:
//
//	        nil
type FlywheelTaskConfigPtrInput interface {
	pulumi.Input

	ToFlywheelTaskConfigPtrOutput() FlywheelTaskConfigPtrOutput
	ToFlywheelTaskConfigPtrOutputWithContext(context.Context) FlywheelTaskConfigPtrOutput
}

type flywheelTaskConfigPtrType FlywheelTaskConfigArgs

func FlywheelTaskConfigPtr(v *FlywheelTaskConfigArgs) FlywheelTaskConfigPtrInput {
	return (*flywheelTaskConfigPtrType)(v)
}

func (*flywheelTaskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelTaskConfig)(nil)).Elem()
}

func (i *flywheelTaskConfigPtrType) ToFlywheelTaskConfigPtrOutput() FlywheelTaskConfigPtrOutput {
	return i.ToFlywheelTaskConfigPtrOutputWithContext(context.Background())
}

func (i *flywheelTaskConfigPtrType) ToFlywheelTaskConfigPtrOutputWithContext(ctx context.Context) FlywheelTaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelTaskConfigPtrOutput)
}

type FlywheelTaskConfigOutput struct{ *pulumi.OutputState }

func (FlywheelTaskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTaskConfig)(nil)).Elem()
}

func (o FlywheelTaskConfigOutput) ToFlywheelTaskConfigOutput() FlywheelTaskConfigOutput {
	return o
}

func (o FlywheelTaskConfigOutput) ToFlywheelTaskConfigOutputWithContext(ctx context.Context) FlywheelTaskConfigOutput {
	return o
}

func (o FlywheelTaskConfigOutput) ToFlywheelTaskConfigPtrOutput() FlywheelTaskConfigPtrOutput {
	return o.ToFlywheelTaskConfigPtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigOutput) ToFlywheelTaskConfigPtrOutputWithContext(ctx context.Context) FlywheelTaskConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelTaskConfig) *FlywheelTaskConfig {
		return &v
	}).(FlywheelTaskConfigPtrOutput)
}

func (o FlywheelTaskConfigOutput) DocumentClassificationConfig() FlywheelDocumentClassificationConfigPtrOutput {
	return o.ApplyT(func(v FlywheelTaskConfig) *FlywheelDocumentClassificationConfig {
		return v.DocumentClassificationConfig
	}).(FlywheelDocumentClassificationConfigPtrOutput)
}

func (o FlywheelTaskConfigOutput) EntityRecognitionConfig() FlywheelEntityRecognitionConfigPtrOutput {
	return o.ApplyT(func(v FlywheelTaskConfig) *FlywheelEntityRecognitionConfig { return v.EntityRecognitionConfig }).(FlywheelEntityRecognitionConfigPtrOutput)
}

func (o FlywheelTaskConfigOutput) LanguageCode() FlywheelTaskConfigLanguageCodeOutput {
	return o.ApplyT(func(v FlywheelTaskConfig) FlywheelTaskConfigLanguageCode { return v.LanguageCode }).(FlywheelTaskConfigLanguageCodeOutput)
}

type FlywheelTaskConfigPtrOutput struct{ *pulumi.OutputState }

func (FlywheelTaskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelTaskConfig)(nil)).Elem()
}

func (o FlywheelTaskConfigPtrOutput) ToFlywheelTaskConfigPtrOutput() FlywheelTaskConfigPtrOutput {
	return o
}

func (o FlywheelTaskConfigPtrOutput) ToFlywheelTaskConfigPtrOutputWithContext(ctx context.Context) FlywheelTaskConfigPtrOutput {
	return o
}

func (o FlywheelTaskConfigPtrOutput) Elem() FlywheelTaskConfigOutput {
	return o.ApplyT(func(v *FlywheelTaskConfig) FlywheelTaskConfig {
		if v != nil {
			return *v
		}
		var ret FlywheelTaskConfig
		return ret
	}).(FlywheelTaskConfigOutput)
}

func (o FlywheelTaskConfigPtrOutput) DocumentClassificationConfig() FlywheelDocumentClassificationConfigPtrOutput {
	return o.ApplyT(func(v *FlywheelTaskConfig) *FlywheelDocumentClassificationConfig {
		if v == nil {
			return nil
		}
		return v.DocumentClassificationConfig
	}).(FlywheelDocumentClassificationConfigPtrOutput)
}

func (o FlywheelTaskConfigPtrOutput) EntityRecognitionConfig() FlywheelEntityRecognitionConfigPtrOutput {
	return o.ApplyT(func(v *FlywheelTaskConfig) *FlywheelEntityRecognitionConfig {
		if v == nil {
			return nil
		}
		return v.EntityRecognitionConfig
	}).(FlywheelEntityRecognitionConfigPtrOutput)
}

func (o FlywheelTaskConfigPtrOutput) LanguageCode() FlywheelTaskConfigLanguageCodePtrOutput {
	return o.ApplyT(func(v *FlywheelTaskConfig) *FlywheelTaskConfigLanguageCode {
		if v == nil {
			return nil
		}
		return &v.LanguageCode
	}).(FlywheelTaskConfigLanguageCodePtrOutput)
}

type FlywheelVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Subnets          []string `pulumi:"subnets"`
}

// FlywheelVpcConfigInput is an input type that accepts FlywheelVpcConfigArgs and FlywheelVpcConfigOutput values.
// You can construct a concrete instance of `FlywheelVpcConfigInput` via:
//
//	FlywheelVpcConfigArgs{...}
type FlywheelVpcConfigInput interface {
	pulumi.Input

	ToFlywheelVpcConfigOutput() FlywheelVpcConfigOutput
	ToFlywheelVpcConfigOutputWithContext(context.Context) FlywheelVpcConfigOutput
}

type FlywheelVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Subnets          pulumi.StringArrayInput `pulumi:"subnets"`
}

func (FlywheelVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelVpcConfig)(nil)).Elem()
}

func (i FlywheelVpcConfigArgs) ToFlywheelVpcConfigOutput() FlywheelVpcConfigOutput {
	return i.ToFlywheelVpcConfigOutputWithContext(context.Background())
}

func (i FlywheelVpcConfigArgs) ToFlywheelVpcConfigOutputWithContext(ctx context.Context) FlywheelVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelVpcConfigOutput)
}

func (i FlywheelVpcConfigArgs) ToFlywheelVpcConfigPtrOutput() FlywheelVpcConfigPtrOutput {
	return i.ToFlywheelVpcConfigPtrOutputWithContext(context.Background())
}

func (i FlywheelVpcConfigArgs) ToFlywheelVpcConfigPtrOutputWithContext(ctx context.Context) FlywheelVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelVpcConfigOutput).ToFlywheelVpcConfigPtrOutputWithContext(ctx)
}

// FlywheelVpcConfigPtrInput is an input type that accepts FlywheelVpcConfigArgs, FlywheelVpcConfigPtr and FlywheelVpcConfigPtrOutput values.
// You can construct a concrete instance of `FlywheelVpcConfigPtrInput` via:
//
//	        FlywheelVpcConfigArgs{...}
//
//	or:
//
//	        nil
type FlywheelVpcConfigPtrInput interface {
	pulumi.Input

	ToFlywheelVpcConfigPtrOutput() FlywheelVpcConfigPtrOutput
	ToFlywheelVpcConfigPtrOutputWithContext(context.Context) FlywheelVpcConfigPtrOutput
}

type flywheelVpcConfigPtrType FlywheelVpcConfigArgs

func FlywheelVpcConfigPtr(v *FlywheelVpcConfigArgs) FlywheelVpcConfigPtrInput {
	return (*flywheelVpcConfigPtrType)(v)
}

func (*flywheelVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelVpcConfig)(nil)).Elem()
}

func (i *flywheelVpcConfigPtrType) ToFlywheelVpcConfigPtrOutput() FlywheelVpcConfigPtrOutput {
	return i.ToFlywheelVpcConfigPtrOutputWithContext(context.Background())
}

func (i *flywheelVpcConfigPtrType) ToFlywheelVpcConfigPtrOutputWithContext(ctx context.Context) FlywheelVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlywheelVpcConfigPtrOutput)
}

type FlywheelVpcConfigOutput struct{ *pulumi.OutputState }

func (FlywheelVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelVpcConfig)(nil)).Elem()
}

func (o FlywheelVpcConfigOutput) ToFlywheelVpcConfigOutput() FlywheelVpcConfigOutput {
	return o
}

func (o FlywheelVpcConfigOutput) ToFlywheelVpcConfigOutputWithContext(ctx context.Context) FlywheelVpcConfigOutput {
	return o
}

func (o FlywheelVpcConfigOutput) ToFlywheelVpcConfigPtrOutput() FlywheelVpcConfigPtrOutput {
	return o.ToFlywheelVpcConfigPtrOutputWithContext(context.Background())
}

func (o FlywheelVpcConfigOutput) ToFlywheelVpcConfigPtrOutputWithContext(ctx context.Context) FlywheelVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelVpcConfig) *FlywheelVpcConfig {
		return &v
	}).(FlywheelVpcConfigPtrOutput)
}

func (o FlywheelVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlywheelVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o FlywheelVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlywheelVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type FlywheelVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FlywheelVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelVpcConfig)(nil)).Elem()
}

func (o FlywheelVpcConfigPtrOutput) ToFlywheelVpcConfigPtrOutput() FlywheelVpcConfigPtrOutput {
	return o
}

func (o FlywheelVpcConfigPtrOutput) ToFlywheelVpcConfigPtrOutputWithContext(ctx context.Context) FlywheelVpcConfigPtrOutput {
	return o
}

func (o FlywheelVpcConfigPtrOutput) Elem() FlywheelVpcConfigOutput {
	return o.ApplyT(func(v *FlywheelVpcConfig) FlywheelVpcConfig {
		if v != nil {
			return *v
		}
		var ret FlywheelVpcConfig
		return ret
	}).(FlywheelVpcConfigOutput)
}

func (o FlywheelVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlywheelVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o FlywheelVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlywheelVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItemInput)(nil)).Elem(), DocumentClassifierAugmentedManifestsListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItemArrayInput)(nil)).Elem(), DocumentClassifierAugmentedManifestsListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigPtrInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentsInput)(nil)).Elem(), DocumentClassifierDocumentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentsPtrInput)(nil)).Elem(), DocumentClassifierDocumentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierInputDataConfigInput)(nil)).Elem(), DocumentClassifierInputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierOutputDataConfigInput)(nil)).Elem(), DocumentClassifierOutputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierOutputDataConfigPtrInput)(nil)).Elem(), DocumentClassifierOutputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierTagInput)(nil)).Elem(), DocumentClassifierTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierTagArrayInput)(nil)).Elem(), DocumentClassifierTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierVpcConfigInput)(nil)).Elem(), DocumentClassifierVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierVpcConfigPtrInput)(nil)).Elem(), DocumentClassifierVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDataSecurityConfigInput)(nil)).Elem(), FlywheelDataSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDataSecurityConfigPtrInput)(nil)).Elem(), FlywheelDataSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDocumentClassificationConfigInput)(nil)).Elem(), FlywheelDocumentClassificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDocumentClassificationConfigPtrInput)(nil)).Elem(), FlywheelDocumentClassificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelEntityRecognitionConfigInput)(nil)).Elem(), FlywheelEntityRecognitionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelEntityRecognitionConfigPtrInput)(nil)).Elem(), FlywheelEntityRecognitionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelEntityTypesListItemInput)(nil)).Elem(), FlywheelEntityTypesListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelEntityTypesListItemArrayInput)(nil)).Elem(), FlywheelEntityTypesListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTagInput)(nil)).Elem(), FlywheelTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTagArrayInput)(nil)).Elem(), FlywheelTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTaskConfigInput)(nil)).Elem(), FlywheelTaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTaskConfigPtrInput)(nil)).Elem(), FlywheelTaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelVpcConfigInput)(nil)).Elem(), FlywheelVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelVpcConfigPtrInput)(nil)).Elem(), FlywheelVpcConfigArgs{})
	pulumi.RegisterOutputType(DocumentClassifierAugmentedManifestsListItemOutput{})
	pulumi.RegisterOutputType(DocumentClassifierAugmentedManifestsListItemArrayOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentsOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentsPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierInputDataConfigOutput{})
	pulumi.RegisterOutputType(DocumentClassifierOutputDataConfigOutput{})
	pulumi.RegisterOutputType(DocumentClassifierOutputDataConfigPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierTagOutput{})
	pulumi.RegisterOutputType(DocumentClassifierTagArrayOutput{})
	pulumi.RegisterOutputType(DocumentClassifierVpcConfigOutput{})
	pulumi.RegisterOutputType(DocumentClassifierVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(FlywheelDataSecurityConfigOutput{})
	pulumi.RegisterOutputType(FlywheelDataSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(FlywheelDocumentClassificationConfigOutput{})
	pulumi.RegisterOutputType(FlywheelDocumentClassificationConfigPtrOutput{})
	pulumi.RegisterOutputType(FlywheelEntityRecognitionConfigOutput{})
	pulumi.RegisterOutputType(FlywheelEntityRecognitionConfigPtrOutput{})
	pulumi.RegisterOutputType(FlywheelEntityTypesListItemOutput{})
	pulumi.RegisterOutputType(FlywheelEntityTypesListItemArrayOutput{})
	pulumi.RegisterOutputType(FlywheelTagOutput{})
	pulumi.RegisterOutputType(FlywheelTagArrayOutput{})
	pulumi.RegisterOutputType(FlywheelTaskConfigOutput{})
	pulumi.RegisterOutputType(FlywheelTaskConfigPtrOutput{})
	pulumi.RegisterOutputType(FlywheelVpcConfigOutput{})
	pulumi.RegisterOutputType(FlywheelVpcConfigPtrOutput{})
}
