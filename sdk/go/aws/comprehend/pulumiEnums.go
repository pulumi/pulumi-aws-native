// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FlywheelDocumentClassificationConfigMode string

const (
	FlywheelDocumentClassificationConfigModeMultiClass = FlywheelDocumentClassificationConfigMode("MULTI_CLASS")
	FlywheelDocumentClassificationConfigModeMultiLabel = FlywheelDocumentClassificationConfigMode("MULTI_LABEL")
)

func (FlywheelDocumentClassificationConfigMode) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDocumentClassificationConfigMode)(nil)).Elem()
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModeOutput() FlywheelDocumentClassificationConfigModeOutput {
	return pulumi.ToOutput(e).(FlywheelDocumentClassificationConfigModeOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModeOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlywheelDocumentClassificationConfigModeOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return e.ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(context.Background())
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return FlywheelDocumentClassificationConfigMode(e).ToFlywheelDocumentClassificationConfigModeOutputWithContext(ctx).ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx)
}

func (e FlywheelDocumentClassificationConfigMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlywheelDocumentClassificationConfigMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlywheelDocumentClassificationConfigModeOutput struct{ *pulumi.OutputState }

func (FlywheelDocumentClassificationConfigModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDocumentClassificationConfigMode)(nil)).Elem()
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModeOutput() FlywheelDocumentClassificationConfigModeOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModeOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModeOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return o.ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelDocumentClassificationConfigMode) *FlywheelDocumentClassificationConfigMode {
		return &v
	}).(FlywheelDocumentClassificationConfigModePtrOutput)
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelDocumentClassificationConfigMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelDocumentClassificationConfigMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlywheelDocumentClassificationConfigModePtrOutput struct{ *pulumi.OutputState }

func (FlywheelDocumentClassificationConfigModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelDocumentClassificationConfigMode)(nil)).Elem()
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) Elem() FlywheelDocumentClassificationConfigModeOutput {
	return o.ApplyT(func(v *FlywheelDocumentClassificationConfigMode) FlywheelDocumentClassificationConfigMode {
		if v != nil {
			return *v
		}
		var ret FlywheelDocumentClassificationConfigMode
		return ret
	}).(FlywheelDocumentClassificationConfigModeOutput)
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlywheelDocumentClassificationConfigMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlywheelDocumentClassificationConfigModeInput is an input type that accepts FlywheelDocumentClassificationConfigModeArgs and FlywheelDocumentClassificationConfigModeOutput values.
// You can construct a concrete instance of `FlywheelDocumentClassificationConfigModeInput` via:
//
//	FlywheelDocumentClassificationConfigModeArgs{...}
type FlywheelDocumentClassificationConfigModeInput interface {
	pulumi.Input

	ToFlywheelDocumentClassificationConfigModeOutput() FlywheelDocumentClassificationConfigModeOutput
	ToFlywheelDocumentClassificationConfigModeOutputWithContext(context.Context) FlywheelDocumentClassificationConfigModeOutput
}

var flywheelDocumentClassificationConfigModePtrType = reflect.TypeOf((**FlywheelDocumentClassificationConfigMode)(nil)).Elem()

type FlywheelDocumentClassificationConfigModePtrInput interface {
	pulumi.Input

	ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput
	ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(context.Context) FlywheelDocumentClassificationConfigModePtrOutput
}

type flywheelDocumentClassificationConfigModePtr string

func FlywheelDocumentClassificationConfigModePtr(v string) FlywheelDocumentClassificationConfigModePtrInput {
	return (*flywheelDocumentClassificationConfigModePtr)(&v)
}

func (*flywheelDocumentClassificationConfigModePtr) ElementType() reflect.Type {
	return flywheelDocumentClassificationConfigModePtrType
}

func (in *flywheelDocumentClassificationConfigModePtr) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return pulumi.ToOutput(in).(FlywheelDocumentClassificationConfigModePtrOutput)
}

func (in *flywheelDocumentClassificationConfigModePtr) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlywheelDocumentClassificationConfigModePtrOutput)
}

type FlywheelModelType string

const (
	FlywheelModelTypeDocumentClassifier = FlywheelModelType("DOCUMENT_CLASSIFIER")
	FlywheelModelTypeEntityRecognizer   = FlywheelModelType("ENTITY_RECOGNIZER")
)

func (FlywheelModelType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelModelType)(nil)).Elem()
}

func (e FlywheelModelType) ToFlywheelModelTypeOutput() FlywheelModelTypeOutput {
	return pulumi.ToOutput(e).(FlywheelModelTypeOutput)
}

func (e FlywheelModelType) ToFlywheelModelTypeOutputWithContext(ctx context.Context) FlywheelModelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlywheelModelTypeOutput)
}

func (e FlywheelModelType) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return e.ToFlywheelModelTypePtrOutputWithContext(context.Background())
}

func (e FlywheelModelType) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return FlywheelModelType(e).ToFlywheelModelTypeOutputWithContext(ctx).ToFlywheelModelTypePtrOutputWithContext(ctx)
}

func (e FlywheelModelType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelModelType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelModelType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlywheelModelType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlywheelModelTypeOutput struct{ *pulumi.OutputState }

func (FlywheelModelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelModelType)(nil)).Elem()
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypeOutput() FlywheelModelTypeOutput {
	return o
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypeOutputWithContext(ctx context.Context) FlywheelModelTypeOutput {
	return o
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return o.ToFlywheelModelTypePtrOutputWithContext(context.Background())
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelModelType) *FlywheelModelType {
		return &v
	}).(FlywheelModelTypePtrOutput)
}

func (o FlywheelModelTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlywheelModelTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelModelType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlywheelModelTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelModelTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelModelType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlywheelModelTypePtrOutput struct{ *pulumi.OutputState }

func (FlywheelModelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelModelType)(nil)).Elem()
}

func (o FlywheelModelTypePtrOutput) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return o
}

func (o FlywheelModelTypePtrOutput) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return o
}

func (o FlywheelModelTypePtrOutput) Elem() FlywheelModelTypeOutput {
	return o.ApplyT(func(v *FlywheelModelType) FlywheelModelType {
		if v != nil {
			return *v
		}
		var ret FlywheelModelType
		return ret
	}).(FlywheelModelTypeOutput)
}

func (o FlywheelModelTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelModelTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlywheelModelType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlywheelModelTypeInput is an input type that accepts FlywheelModelTypeArgs and FlywheelModelTypeOutput values.
// You can construct a concrete instance of `FlywheelModelTypeInput` via:
//
//	FlywheelModelTypeArgs{...}
type FlywheelModelTypeInput interface {
	pulumi.Input

	ToFlywheelModelTypeOutput() FlywheelModelTypeOutput
	ToFlywheelModelTypeOutputWithContext(context.Context) FlywheelModelTypeOutput
}

var flywheelModelTypePtrType = reflect.TypeOf((**FlywheelModelType)(nil)).Elem()

type FlywheelModelTypePtrInput interface {
	pulumi.Input

	ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput
	ToFlywheelModelTypePtrOutputWithContext(context.Context) FlywheelModelTypePtrOutput
}

type flywheelModelTypePtr string

func FlywheelModelTypePtr(v string) FlywheelModelTypePtrInput {
	return (*flywheelModelTypePtr)(&v)
}

func (*flywheelModelTypePtr) ElementType() reflect.Type {
	return flywheelModelTypePtrType
}

func (in *flywheelModelTypePtr) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return pulumi.ToOutput(in).(FlywheelModelTypePtrOutput)
}

func (in *flywheelModelTypePtr) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlywheelModelTypePtrOutput)
}

type FlywheelTaskConfigLanguageCode string

const (
	FlywheelTaskConfigLanguageCodeEn = FlywheelTaskConfigLanguageCode("en")
	FlywheelTaskConfigLanguageCodeEs = FlywheelTaskConfigLanguageCode("es")
	FlywheelTaskConfigLanguageCodeFr = FlywheelTaskConfigLanguageCode("fr")
	FlywheelTaskConfigLanguageCodeIt = FlywheelTaskConfigLanguageCode("it")
	FlywheelTaskConfigLanguageCodeDe = FlywheelTaskConfigLanguageCode("de")
	FlywheelTaskConfigLanguageCodePt = FlywheelTaskConfigLanguageCode("pt")
)

func (FlywheelTaskConfigLanguageCode) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTaskConfigLanguageCode)(nil)).Elem()
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodeOutput() FlywheelTaskConfigLanguageCodeOutput {
	return pulumi.ToOutput(e).(FlywheelTaskConfigLanguageCodeOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodeOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlywheelTaskConfigLanguageCodeOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return e.ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(context.Background())
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return FlywheelTaskConfigLanguageCode(e).ToFlywheelTaskConfigLanguageCodeOutputWithContext(ctx).ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx)
}

func (e FlywheelTaskConfigLanguageCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlywheelTaskConfigLanguageCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlywheelTaskConfigLanguageCodeOutput struct{ *pulumi.OutputState }

func (FlywheelTaskConfigLanguageCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTaskConfigLanguageCode)(nil)).Elem()
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodeOutput() FlywheelTaskConfigLanguageCodeOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodeOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodeOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return o.ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelTaskConfigLanguageCode) *FlywheelTaskConfigLanguageCode {
		return &v
	}).(FlywheelTaskConfigLanguageCodePtrOutput)
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelTaskConfigLanguageCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelTaskConfigLanguageCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlywheelTaskConfigLanguageCodePtrOutput struct{ *pulumi.OutputState }

func (FlywheelTaskConfigLanguageCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelTaskConfigLanguageCode)(nil)).Elem()
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) Elem() FlywheelTaskConfigLanguageCodeOutput {
	return o.ApplyT(func(v *FlywheelTaskConfigLanguageCode) FlywheelTaskConfigLanguageCode {
		if v != nil {
			return *v
		}
		var ret FlywheelTaskConfigLanguageCode
		return ret
	}).(FlywheelTaskConfigLanguageCodeOutput)
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlywheelTaskConfigLanguageCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlywheelTaskConfigLanguageCodeInput is an input type that accepts FlywheelTaskConfigLanguageCodeArgs and FlywheelTaskConfigLanguageCodeOutput values.
// You can construct a concrete instance of `FlywheelTaskConfigLanguageCodeInput` via:
//
//	FlywheelTaskConfigLanguageCodeArgs{...}
type FlywheelTaskConfigLanguageCodeInput interface {
	pulumi.Input

	ToFlywheelTaskConfigLanguageCodeOutput() FlywheelTaskConfigLanguageCodeOutput
	ToFlywheelTaskConfigLanguageCodeOutputWithContext(context.Context) FlywheelTaskConfigLanguageCodeOutput
}

var flywheelTaskConfigLanguageCodePtrType = reflect.TypeOf((**FlywheelTaskConfigLanguageCode)(nil)).Elem()

type FlywheelTaskConfigLanguageCodePtrInput interface {
	pulumi.Input

	ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput
	ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(context.Context) FlywheelTaskConfigLanguageCodePtrOutput
}

type flywheelTaskConfigLanguageCodePtr string

func FlywheelTaskConfigLanguageCodePtr(v string) FlywheelTaskConfigLanguageCodePtrInput {
	return (*flywheelTaskConfigLanguageCodePtr)(&v)
}

func (*flywheelTaskConfigLanguageCodePtr) ElementType() reflect.Type {
	return flywheelTaskConfigLanguageCodePtrType
}

func (in *flywheelTaskConfigLanguageCodePtr) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return pulumi.ToOutput(in).(FlywheelTaskConfigLanguageCodePtrOutput)
}

func (in *flywheelTaskConfigLanguageCodePtr) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlywheelTaskConfigLanguageCodePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDocumentClassificationConfigModeInput)(nil)).Elem(), FlywheelDocumentClassificationConfigMode("MULTI_CLASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDocumentClassificationConfigModePtrInput)(nil)).Elem(), FlywheelDocumentClassificationConfigMode("MULTI_CLASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelModelTypeInput)(nil)).Elem(), FlywheelModelType("DOCUMENT_CLASSIFIER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelModelTypePtrInput)(nil)).Elem(), FlywheelModelType("DOCUMENT_CLASSIFIER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTaskConfigLanguageCodeInput)(nil)).Elem(), FlywheelTaskConfigLanguageCode("en"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTaskConfigLanguageCodePtrInput)(nil)).Elem(), FlywheelTaskConfigLanguageCode("en"))
	pulumi.RegisterOutputType(FlywheelDocumentClassificationConfigModeOutput{})
	pulumi.RegisterOutputType(FlywheelDocumentClassificationConfigModePtrOutput{})
	pulumi.RegisterOutputType(FlywheelModelTypeOutput{})
	pulumi.RegisterOutputType(FlywheelModelTypePtrOutput{})
	pulumi.RegisterOutputType(FlywheelTaskConfigLanguageCodeOutput{})
	pulumi.RegisterOutputType(FlywheelTaskConfigLanguageCodePtrOutput{})
}
