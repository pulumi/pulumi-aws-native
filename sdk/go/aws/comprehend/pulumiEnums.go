// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type DocumentClassifierAugmentedManifestsListItemSplit string

const (
	DocumentClassifierAugmentedManifestsListItemSplitTrain = DocumentClassifierAugmentedManifestsListItemSplit("TRAIN")
	DocumentClassifierAugmentedManifestsListItemSplitTest  = DocumentClassifierAugmentedManifestsListItemSplit("TEST")
)

func (DocumentClassifierAugmentedManifestsListItemSplit) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItemSplit)(nil)).Elem()
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToDocumentClassifierAugmentedManifestsListItemSplitOutput() DocumentClassifierAugmentedManifestsListItemSplitOutput {
	return pulumi.ToOutput(e).(DocumentClassifierAugmentedManifestsListItemSplitOutput)
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToDocumentClassifierAugmentedManifestsListItemSplitOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemSplitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierAugmentedManifestsListItemSplitOutput)
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutput() DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return e.ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return DocumentClassifierAugmentedManifestsListItemSplit(e).ToDocumentClassifierAugmentedManifestsListItemSplitOutputWithContext(ctx).ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(ctx)
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierAugmentedManifestsListItemSplit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierAugmentedManifestsListItemSplitOutput struct{ *pulumi.OutputState }

func (DocumentClassifierAugmentedManifestsListItemSplitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItemSplit)(nil)).Elem()
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToDocumentClassifierAugmentedManifestsListItemSplitOutput() DocumentClassifierAugmentedManifestsListItemSplitOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToDocumentClassifierAugmentedManifestsListItemSplitOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemSplitOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutput() DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return o.ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierAugmentedManifestsListItemSplit) *DocumentClassifierAugmentedManifestsListItemSplit {
		return &v
	}).(DocumentClassifierAugmentedManifestsListItemSplitPtrOutput)
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierAugmentedManifestsListItemSplit] {
	return pulumix.Output[DocumentClassifierAugmentedManifestsListItemSplit]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierAugmentedManifestsListItemSplit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierAugmentedManifestsListItemSplitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierAugmentedManifestsListItemSplit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierAugmentedManifestsListItemSplitPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierAugmentedManifestsListItemSplit)(nil)).Elem()
}

func (o DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutput() DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return o
}

func (o DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierAugmentedManifestsListItemSplit] {
	return pulumix.Output[*DocumentClassifierAugmentedManifestsListItemSplit]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) Elem() DocumentClassifierAugmentedManifestsListItemSplitOutput {
	return o.ApplyT(func(v *DocumentClassifierAugmentedManifestsListItemSplit) DocumentClassifierAugmentedManifestsListItemSplit {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierAugmentedManifestsListItemSplit
		return ret
	}).(DocumentClassifierAugmentedManifestsListItemSplitOutput)
}

func (o DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierAugmentedManifestsListItemSplitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierAugmentedManifestsListItemSplit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierAugmentedManifestsListItemSplitInput is an input type that accepts DocumentClassifierAugmentedManifestsListItemSplitArgs and DocumentClassifierAugmentedManifestsListItemSplitOutput values.
// You can construct a concrete instance of `DocumentClassifierAugmentedManifestsListItemSplitInput` via:
//
//	DocumentClassifierAugmentedManifestsListItemSplitArgs{...}
type DocumentClassifierAugmentedManifestsListItemSplitInput interface {
	pulumi.Input

	ToDocumentClassifierAugmentedManifestsListItemSplitOutput() DocumentClassifierAugmentedManifestsListItemSplitOutput
	ToDocumentClassifierAugmentedManifestsListItemSplitOutputWithContext(context.Context) DocumentClassifierAugmentedManifestsListItemSplitOutput
}

var documentClassifierAugmentedManifestsListItemSplitPtrType = reflect.TypeOf((**DocumentClassifierAugmentedManifestsListItemSplit)(nil)).Elem()

type DocumentClassifierAugmentedManifestsListItemSplitPtrInput interface {
	pulumi.Input

	ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutput() DocumentClassifierAugmentedManifestsListItemSplitPtrOutput
	ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(context.Context) DocumentClassifierAugmentedManifestsListItemSplitPtrOutput
}

type documentClassifierAugmentedManifestsListItemSplitPtr string

func DocumentClassifierAugmentedManifestsListItemSplitPtr(v string) DocumentClassifierAugmentedManifestsListItemSplitPtrInput {
	return (*documentClassifierAugmentedManifestsListItemSplitPtr)(&v)
}

func (*documentClassifierAugmentedManifestsListItemSplitPtr) ElementType() reflect.Type {
	return documentClassifierAugmentedManifestsListItemSplitPtrType
}

func (in *documentClassifierAugmentedManifestsListItemSplitPtr) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutput() DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierAugmentedManifestsListItemSplitPtrOutput)
}

func (in *documentClassifierAugmentedManifestsListItemSplitPtr) ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(ctx context.Context) DocumentClassifierAugmentedManifestsListItemSplitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierAugmentedManifestsListItemSplitPtrOutput)
}

func (in *documentClassifierAugmentedManifestsListItemSplitPtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierAugmentedManifestsListItemSplit] {
	return pulumix.Output[*DocumentClassifierAugmentedManifestsListItemSplit]{
		OutputState: in.ToDocumentClassifierAugmentedManifestsListItemSplitPtrOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierDocumentReaderConfigDocumentReadAction string

const (
	DocumentClassifierDocumentReaderConfigDocumentReadActionTextractDetectDocumentText = DocumentClassifierDocumentReaderConfigDocumentReadAction("TEXTRACT_DETECT_DOCUMENT_TEXT")
	DocumentClassifierDocumentReaderConfigDocumentReadActionTextractAnalyzeDocument    = DocumentClassifierDocumentReaderConfigDocumentReadAction("TEXTRACT_ANALYZE_DOCUMENT")
)

func (DocumentClassifierDocumentReaderConfigDocumentReadAction) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadAction)(nil)).Elem()
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionOutput {
	return pulumi.ToOutput(e).(DocumentClassifierDocumentReaderConfigDocumentReadActionOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierDocumentReaderConfigDocumentReadActionOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return e.ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return DocumentClassifierDocumentReaderConfigDocumentReadAction(e).ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutputWithContext(ctx).ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(ctx)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierDocumentReaderConfigDocumentReadActionOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadAction)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return o.ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierDocumentReaderConfigDocumentReadAction) *DocumentClassifierDocumentReaderConfigDocumentReadAction {
		return &v
	}).(DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierDocumentReaderConfigDocumentReadAction] {
	return pulumix.Output[DocumentClassifierDocumentReaderConfigDocumentReadAction]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierDocumentReaderConfigDocumentReadAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierDocumentReaderConfigDocumentReadAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocumentReaderConfigDocumentReadAction)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadAction] {
	return pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadAction]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) Elem() DocumentClassifierDocumentReaderConfigDocumentReadActionOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfigDocumentReadAction) DocumentClassifierDocumentReaderConfigDocumentReadAction {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierDocumentReaderConfigDocumentReadAction
		return ret
	}).(DocumentClassifierDocumentReaderConfigDocumentReadActionOutput)
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierDocumentReaderConfigDocumentReadAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierDocumentReaderConfigDocumentReadActionInput is an input type that accepts DocumentClassifierDocumentReaderConfigDocumentReadActionArgs and DocumentClassifierDocumentReaderConfigDocumentReadActionOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentReaderConfigDocumentReadActionInput` via:
//
//	DocumentClassifierDocumentReaderConfigDocumentReadActionArgs{...}
type DocumentClassifierDocumentReaderConfigDocumentReadActionInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionOutput
	ToDocumentClassifierDocumentReaderConfigDocumentReadActionOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionOutput
}

var documentClassifierDocumentReaderConfigDocumentReadActionPtrType = reflect.TypeOf((**DocumentClassifierDocumentReaderConfigDocumentReadAction)(nil)).Elem()

type DocumentClassifierDocumentReaderConfigDocumentReadActionPtrInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput
	ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput
}

type documentClassifierDocumentReaderConfigDocumentReadActionPtr string

func DocumentClassifierDocumentReaderConfigDocumentReadActionPtr(v string) DocumentClassifierDocumentReaderConfigDocumentReadActionPtrInput {
	return (*documentClassifierDocumentReaderConfigDocumentReadActionPtr)(&v)
}

func (*documentClassifierDocumentReaderConfigDocumentReadActionPtr) ElementType() reflect.Type {
	return documentClassifierDocumentReaderConfigDocumentReadActionPtrType
}

func (in *documentClassifierDocumentReaderConfigDocumentReadActionPtr) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput)
}

func (in *documentClassifierDocumentReaderConfigDocumentReadActionPtr) ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput)
}

func (in *documentClassifierDocumentReaderConfigDocumentReadActionPtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadAction] {
	return pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadAction]{
		OutputState: in.ToDocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierDocumentReaderConfigDocumentReadMode string

const (
	DocumentClassifierDocumentReaderConfigDocumentReadModeServiceDefault          = DocumentClassifierDocumentReaderConfigDocumentReadMode("SERVICE_DEFAULT")
	DocumentClassifierDocumentReaderConfigDocumentReadModeForceDocumentReadAction = DocumentClassifierDocumentReaderConfigDocumentReadMode("FORCE_DOCUMENT_READ_ACTION")
)

func (DocumentClassifierDocumentReaderConfigDocumentReadMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadMode)(nil)).Elem()
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutput() DocumentClassifierDocumentReaderConfigDocumentReadModeOutput {
	return pulumi.ToOutput(e).(DocumentClassifierDocumentReaderConfigDocumentReadModeOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierDocumentReaderConfigDocumentReadModeOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return e.ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(context.Background())
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return DocumentClassifierDocumentReaderConfigDocumentReadMode(e).ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutputWithContext(ctx).ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(ctx)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierDocumentReaderConfigDocumentReadMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierDocumentReaderConfigDocumentReadModeOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadMode)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutput() DocumentClassifierDocumentReaderConfigDocumentReadModeOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModeOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return o.ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierDocumentReaderConfigDocumentReadMode) *DocumentClassifierDocumentReaderConfigDocumentReadMode {
		return &v
	}).(DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierDocumentReaderConfigDocumentReadMode] {
	return pulumix.Output[DocumentClassifierDocumentReaderConfigDocumentReadMode]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierDocumentReaderConfigDocumentReadMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierDocumentReaderConfigDocumentReadMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocumentReaderConfigDocumentReadMode)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadMode] {
	return pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadMode]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) Elem() DocumentClassifierDocumentReaderConfigDocumentReadModeOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfigDocumentReadMode) DocumentClassifierDocumentReaderConfigDocumentReadMode {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierDocumentReaderConfigDocumentReadMode
		return ret
	}).(DocumentClassifierDocumentReaderConfigDocumentReadModeOutput)
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierDocumentReaderConfigDocumentReadMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierDocumentReaderConfigDocumentReadModeInput is an input type that accepts DocumentClassifierDocumentReaderConfigDocumentReadModeArgs and DocumentClassifierDocumentReaderConfigDocumentReadModeOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentReaderConfigDocumentReadModeInput` via:
//
//	DocumentClassifierDocumentReaderConfigDocumentReadModeArgs{...}
type DocumentClassifierDocumentReaderConfigDocumentReadModeInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutput() DocumentClassifierDocumentReaderConfigDocumentReadModeOutput
	ToDocumentClassifierDocumentReaderConfigDocumentReadModeOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModeOutput
}

var documentClassifierDocumentReaderConfigDocumentReadModePtrType = reflect.TypeOf((**DocumentClassifierDocumentReaderConfigDocumentReadMode)(nil)).Elem()

type DocumentClassifierDocumentReaderConfigDocumentReadModePtrInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput
	ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput
}

type documentClassifierDocumentReaderConfigDocumentReadModePtr string

func DocumentClassifierDocumentReaderConfigDocumentReadModePtr(v string) DocumentClassifierDocumentReaderConfigDocumentReadModePtrInput {
	return (*documentClassifierDocumentReaderConfigDocumentReadModePtr)(&v)
}

func (*documentClassifierDocumentReaderConfigDocumentReadModePtr) ElementType() reflect.Type {
	return documentClassifierDocumentReaderConfigDocumentReadModePtrType
}

func (in *documentClassifierDocumentReaderConfigDocumentReadModePtr) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput() DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput)
}

func (in *documentClassifierDocumentReaderConfigDocumentReadModePtr) ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput)
}

func (in *documentClassifierDocumentReaderConfigDocumentReadModePtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadMode] {
	return pulumix.Output[*DocumentClassifierDocumentReaderConfigDocumentReadMode]{
		OutputState: in.ToDocumentClassifierDocumentReaderConfigDocumentReadModePtrOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierDocumentReaderConfigFeatureTypesItem string

const (
	DocumentClassifierDocumentReaderConfigFeatureTypesItemTables = DocumentClassifierDocumentReaderConfigFeatureTypesItem("TABLES")
	DocumentClassifierDocumentReaderConfigFeatureTypesItemForms  = DocumentClassifierDocumentReaderConfigFeatureTypesItem("FORMS")
)

func (DocumentClassifierDocumentReaderConfigFeatureTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfigFeatureTypesItem)(nil)).Elem()
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput {
	return pulumi.ToOutput(e).(DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput)
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput)
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return e.ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return DocumentClassifierDocumentReaderConfigFeatureTypesItem(e).ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutputWithContext(ctx).ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(ctx)
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierDocumentReaderConfigFeatureTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierDocumentReaderConfigFeatureTypesItem)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return o.ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierDocumentReaderConfigFeatureTypesItem) *DocumentClassifierDocumentReaderConfigFeatureTypesItem {
		return &v
	}).(DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput)
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierDocumentReaderConfigFeatureTypesItem] {
	return pulumix.Output[DocumentClassifierDocumentReaderConfigFeatureTypesItem]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierDocumentReaderConfigFeatureTypesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierDocumentReaderConfigFeatureTypesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierDocumentReaderConfigFeatureTypesItem)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierDocumentReaderConfigFeatureTypesItem] {
	return pulumix.Output[*DocumentClassifierDocumentReaderConfigFeatureTypesItem]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) Elem() DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput {
	return o.ApplyT(func(v *DocumentClassifierDocumentReaderConfigFeatureTypesItem) DocumentClassifierDocumentReaderConfigFeatureTypesItem {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierDocumentReaderConfigFeatureTypesItem
		return ret
	}).(DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput)
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierDocumentReaderConfigFeatureTypesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierDocumentReaderConfigFeatureTypesItemInput is an input type that accepts DocumentClassifierDocumentReaderConfigFeatureTypesItemArgs and DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentReaderConfigFeatureTypesItemInput` via:
//
//	DocumentClassifierDocumentReaderConfigFeatureTypesItemArgs{...}
type DocumentClassifierDocumentReaderConfigFeatureTypesItemInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput
	ToDocumentClassifierDocumentReaderConfigFeatureTypesItemOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput
}

var documentClassifierDocumentReaderConfigFeatureTypesItemPtrType = reflect.TypeOf((**DocumentClassifierDocumentReaderConfigFeatureTypesItem)(nil)).Elem()

type DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput
	ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput
}

type documentClassifierDocumentReaderConfigFeatureTypesItemPtr string

func DocumentClassifierDocumentReaderConfigFeatureTypesItemPtr(v string) DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrInput {
	return (*documentClassifierDocumentReaderConfigFeatureTypesItemPtr)(&v)
}

func (*documentClassifierDocumentReaderConfigFeatureTypesItemPtr) ElementType() reflect.Type {
	return documentClassifierDocumentReaderConfigFeatureTypesItemPtrType
}

func (in *documentClassifierDocumentReaderConfigFeatureTypesItemPtr) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput)
}

func (in *documentClassifierDocumentReaderConfigFeatureTypesItemPtr) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput)
}

func (in *documentClassifierDocumentReaderConfigFeatureTypesItemPtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierDocumentReaderConfigFeatureTypesItem] {
	return pulumix.Output[*DocumentClassifierDocumentReaderConfigFeatureTypesItem]{
		OutputState: in.ToDocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutputWithContext(ctx).OutputState,
	}
}

// DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayInput is an input type that accepts DocumentClassifierDocumentReaderConfigFeatureTypesItemArray and DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput values.
// You can construct a concrete instance of `DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayInput` via:
//
//	DocumentClassifierDocumentReaderConfigFeatureTypesItemArray{ DocumentClassifierDocumentReaderConfigFeatureTypesItemArgs{...} }
type DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayInput interface {
	pulumi.Input

	ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput
	ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutputWithContext(context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput
}

type DocumentClassifierDocumentReaderConfigFeatureTypesItemArray []DocumentClassifierDocumentReaderConfigFeatureTypesItem

func (DocumentClassifierDocumentReaderConfigFeatureTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentClassifierDocumentReaderConfigFeatureTypesItem)(nil)).Elem()
}

func (i DocumentClassifierDocumentReaderConfigFeatureTypesItemArray) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput {
	return i.ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutputWithContext(context.Background())
}

func (i DocumentClassifierDocumentReaderConfigFeatureTypesItemArray) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput)
}

func (i DocumentClassifierDocumentReaderConfigFeatureTypesItemArray) ToOutput(ctx context.Context) pulumix.Output[[]DocumentClassifierDocumentReaderConfigFeatureTypesItem] {
	return pulumix.Output[[]DocumentClassifierDocumentReaderConfigFeatureTypesItem]{
		OutputState: i.ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput struct{ *pulumi.OutputState }

func (DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentClassifierDocumentReaderConfigFeatureTypesItem)(nil)).Elem()
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput() DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput) ToDocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutputWithContext(ctx context.Context) DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput {
	return o
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DocumentClassifierDocumentReaderConfigFeatureTypesItem] {
	return pulumix.Output[[]DocumentClassifierDocumentReaderConfigFeatureTypesItem]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput) Index(i pulumi.IntInput) DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentClassifierDocumentReaderConfigFeatureTypesItem {
		return vs[0].([]DocumentClassifierDocumentReaderConfigFeatureTypesItem)[vs[1].(int)]
	}).(DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput)
}

type DocumentClassifierInputDataConfigDataFormat string

const (
	DocumentClassifierInputDataConfigDataFormatComprehendCsv     = DocumentClassifierInputDataConfigDataFormat("COMPREHEND_CSV")
	DocumentClassifierInputDataConfigDataFormatAugmentedManifest = DocumentClassifierInputDataConfigDataFormat("AUGMENTED_MANIFEST")
)

func (DocumentClassifierInputDataConfigDataFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierInputDataConfigDataFormat)(nil)).Elem()
}

func (e DocumentClassifierInputDataConfigDataFormat) ToDocumentClassifierInputDataConfigDataFormatOutput() DocumentClassifierInputDataConfigDataFormatOutput {
	return pulumi.ToOutput(e).(DocumentClassifierInputDataConfigDataFormatOutput)
}

func (e DocumentClassifierInputDataConfigDataFormat) ToDocumentClassifierInputDataConfigDataFormatOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierInputDataConfigDataFormatOutput)
}

func (e DocumentClassifierInputDataConfigDataFormat) ToDocumentClassifierInputDataConfigDataFormatPtrOutput() DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return e.ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierInputDataConfigDataFormat) ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return DocumentClassifierInputDataConfigDataFormat(e).ToDocumentClassifierInputDataConfigDataFormatOutputWithContext(ctx).ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(ctx)
}

func (e DocumentClassifierInputDataConfigDataFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierInputDataConfigDataFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierInputDataConfigDataFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierInputDataConfigDataFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierInputDataConfigDataFormatOutput struct{ *pulumi.OutputState }

func (DocumentClassifierInputDataConfigDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierInputDataConfigDataFormat)(nil)).Elem()
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToDocumentClassifierInputDataConfigDataFormatOutput() DocumentClassifierInputDataConfigDataFormatOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToDocumentClassifierInputDataConfigDataFormatOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDataFormatOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToDocumentClassifierInputDataConfigDataFormatPtrOutput() DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return o.ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierInputDataConfigDataFormat) *DocumentClassifierInputDataConfigDataFormat {
		return &v
	}).(DocumentClassifierInputDataConfigDataFormatPtrOutput)
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierInputDataConfigDataFormat] {
	return pulumix.Output[DocumentClassifierInputDataConfigDataFormat]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierInputDataConfigDataFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDataFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierInputDataConfigDataFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierInputDataConfigDataFormatPtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierInputDataConfigDataFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierInputDataConfigDataFormat)(nil)).Elem()
}

func (o DocumentClassifierInputDataConfigDataFormatPtrOutput) ToDocumentClassifierInputDataConfigDataFormatPtrOutput() DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDataFormatPtrOutput) ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDataFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierInputDataConfigDataFormat] {
	return pulumix.Output[*DocumentClassifierInputDataConfigDataFormat]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierInputDataConfigDataFormatPtrOutput) Elem() DocumentClassifierInputDataConfigDataFormatOutput {
	return o.ApplyT(func(v *DocumentClassifierInputDataConfigDataFormat) DocumentClassifierInputDataConfigDataFormat {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierInputDataConfigDataFormat
		return ret
	}).(DocumentClassifierInputDataConfigDataFormatOutput)
}

func (o DocumentClassifierInputDataConfigDataFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDataFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierInputDataConfigDataFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierInputDataConfigDataFormatInput is an input type that accepts DocumentClassifierInputDataConfigDataFormatArgs and DocumentClassifierInputDataConfigDataFormatOutput values.
// You can construct a concrete instance of `DocumentClassifierInputDataConfigDataFormatInput` via:
//
//	DocumentClassifierInputDataConfigDataFormatArgs{...}
type DocumentClassifierInputDataConfigDataFormatInput interface {
	pulumi.Input

	ToDocumentClassifierInputDataConfigDataFormatOutput() DocumentClassifierInputDataConfigDataFormatOutput
	ToDocumentClassifierInputDataConfigDataFormatOutputWithContext(context.Context) DocumentClassifierInputDataConfigDataFormatOutput
}

var documentClassifierInputDataConfigDataFormatPtrType = reflect.TypeOf((**DocumentClassifierInputDataConfigDataFormat)(nil)).Elem()

type DocumentClassifierInputDataConfigDataFormatPtrInput interface {
	pulumi.Input

	ToDocumentClassifierInputDataConfigDataFormatPtrOutput() DocumentClassifierInputDataConfigDataFormatPtrOutput
	ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(context.Context) DocumentClassifierInputDataConfigDataFormatPtrOutput
}

type documentClassifierInputDataConfigDataFormatPtr string

func DocumentClassifierInputDataConfigDataFormatPtr(v string) DocumentClassifierInputDataConfigDataFormatPtrInput {
	return (*documentClassifierInputDataConfigDataFormatPtr)(&v)
}

func (*documentClassifierInputDataConfigDataFormatPtr) ElementType() reflect.Type {
	return documentClassifierInputDataConfigDataFormatPtrType
}

func (in *documentClassifierInputDataConfigDataFormatPtr) ToDocumentClassifierInputDataConfigDataFormatPtrOutput() DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierInputDataConfigDataFormatPtrOutput)
}

func (in *documentClassifierInputDataConfigDataFormatPtr) ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDataFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierInputDataConfigDataFormatPtrOutput)
}

func (in *documentClassifierInputDataConfigDataFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierInputDataConfigDataFormat] {
	return pulumix.Output[*DocumentClassifierInputDataConfigDataFormat]{
		OutputState: in.ToDocumentClassifierInputDataConfigDataFormatPtrOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierInputDataConfigDocumentType string

const (
	DocumentClassifierInputDataConfigDocumentTypePlainTextDocument      = DocumentClassifierInputDataConfigDocumentType("PLAIN_TEXT_DOCUMENT")
	DocumentClassifierInputDataConfigDocumentTypeSemiStructuredDocument = DocumentClassifierInputDataConfigDocumentType("SEMI_STRUCTURED_DOCUMENT")
)

func (DocumentClassifierInputDataConfigDocumentType) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierInputDataConfigDocumentType)(nil)).Elem()
}

func (e DocumentClassifierInputDataConfigDocumentType) ToDocumentClassifierInputDataConfigDocumentTypeOutput() DocumentClassifierInputDataConfigDocumentTypeOutput {
	return pulumi.ToOutput(e).(DocumentClassifierInputDataConfigDocumentTypeOutput)
}

func (e DocumentClassifierInputDataConfigDocumentType) ToDocumentClassifierInputDataConfigDocumentTypeOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDocumentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierInputDataConfigDocumentTypeOutput)
}

func (e DocumentClassifierInputDataConfigDocumentType) ToDocumentClassifierInputDataConfigDocumentTypePtrOutput() DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return e.ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(context.Background())
}

func (e DocumentClassifierInputDataConfigDocumentType) ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return DocumentClassifierInputDataConfigDocumentType(e).ToDocumentClassifierInputDataConfigDocumentTypeOutputWithContext(ctx).ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(ctx)
}

func (e DocumentClassifierInputDataConfigDocumentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierInputDataConfigDocumentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierInputDataConfigDocumentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierInputDataConfigDocumentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierInputDataConfigDocumentTypeOutput struct{ *pulumi.OutputState }

func (DocumentClassifierInputDataConfigDocumentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierInputDataConfigDocumentType)(nil)).Elem()
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToDocumentClassifierInputDataConfigDocumentTypeOutput() DocumentClassifierInputDataConfigDocumentTypeOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToDocumentClassifierInputDataConfigDocumentTypeOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDocumentTypeOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToDocumentClassifierInputDataConfigDocumentTypePtrOutput() DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return o.ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierInputDataConfigDocumentType) *DocumentClassifierInputDataConfigDocumentType {
		return &v
	}).(DocumentClassifierInputDataConfigDocumentTypePtrOutput)
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierInputDataConfigDocumentType] {
	return pulumix.Output[DocumentClassifierInputDataConfigDocumentType]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierInputDataConfigDocumentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDocumentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierInputDataConfigDocumentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierInputDataConfigDocumentTypePtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierInputDataConfigDocumentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierInputDataConfigDocumentType)(nil)).Elem()
}

func (o DocumentClassifierInputDataConfigDocumentTypePtrOutput) ToDocumentClassifierInputDataConfigDocumentTypePtrOutput() DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDocumentTypePtrOutput) ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return o
}

func (o DocumentClassifierInputDataConfigDocumentTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierInputDataConfigDocumentType] {
	return pulumix.Output[*DocumentClassifierInputDataConfigDocumentType]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierInputDataConfigDocumentTypePtrOutput) Elem() DocumentClassifierInputDataConfigDocumentTypeOutput {
	return o.ApplyT(func(v *DocumentClassifierInputDataConfigDocumentType) DocumentClassifierInputDataConfigDocumentType {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierInputDataConfigDocumentType
		return ret
	}).(DocumentClassifierInputDataConfigDocumentTypeOutput)
}

func (o DocumentClassifierInputDataConfigDocumentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierInputDataConfigDocumentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierInputDataConfigDocumentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierInputDataConfigDocumentTypeInput is an input type that accepts DocumentClassifierInputDataConfigDocumentTypeArgs and DocumentClassifierInputDataConfigDocumentTypeOutput values.
// You can construct a concrete instance of `DocumentClassifierInputDataConfigDocumentTypeInput` via:
//
//	DocumentClassifierInputDataConfigDocumentTypeArgs{...}
type DocumentClassifierInputDataConfigDocumentTypeInput interface {
	pulumi.Input

	ToDocumentClassifierInputDataConfigDocumentTypeOutput() DocumentClassifierInputDataConfigDocumentTypeOutput
	ToDocumentClassifierInputDataConfigDocumentTypeOutputWithContext(context.Context) DocumentClassifierInputDataConfigDocumentTypeOutput
}

var documentClassifierInputDataConfigDocumentTypePtrType = reflect.TypeOf((**DocumentClassifierInputDataConfigDocumentType)(nil)).Elem()

type DocumentClassifierInputDataConfigDocumentTypePtrInput interface {
	pulumi.Input

	ToDocumentClassifierInputDataConfigDocumentTypePtrOutput() DocumentClassifierInputDataConfigDocumentTypePtrOutput
	ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(context.Context) DocumentClassifierInputDataConfigDocumentTypePtrOutput
}

type documentClassifierInputDataConfigDocumentTypePtr string

func DocumentClassifierInputDataConfigDocumentTypePtr(v string) DocumentClassifierInputDataConfigDocumentTypePtrInput {
	return (*documentClassifierInputDataConfigDocumentTypePtr)(&v)
}

func (*documentClassifierInputDataConfigDocumentTypePtr) ElementType() reflect.Type {
	return documentClassifierInputDataConfigDocumentTypePtrType
}

func (in *documentClassifierInputDataConfigDocumentTypePtr) ToDocumentClassifierInputDataConfigDocumentTypePtrOutput() DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierInputDataConfigDocumentTypePtrOutput)
}

func (in *documentClassifierInputDataConfigDocumentTypePtr) ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(ctx context.Context) DocumentClassifierInputDataConfigDocumentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierInputDataConfigDocumentTypePtrOutput)
}

func (in *documentClassifierInputDataConfigDocumentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierInputDataConfigDocumentType] {
	return pulumix.Output[*DocumentClassifierInputDataConfigDocumentType]{
		OutputState: in.ToDocumentClassifierInputDataConfigDocumentTypePtrOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierLanguageCode string

const (
	DocumentClassifierLanguageCodeEn = DocumentClassifierLanguageCode("en")
	DocumentClassifierLanguageCodeEs = DocumentClassifierLanguageCode("es")
	DocumentClassifierLanguageCodeFr = DocumentClassifierLanguageCode("fr")
	DocumentClassifierLanguageCodeIt = DocumentClassifierLanguageCode("it")
	DocumentClassifierLanguageCodeDe = DocumentClassifierLanguageCode("de")
	DocumentClassifierLanguageCodePt = DocumentClassifierLanguageCode("pt")
)

func (DocumentClassifierLanguageCode) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierLanguageCode)(nil)).Elem()
}

func (e DocumentClassifierLanguageCode) ToDocumentClassifierLanguageCodeOutput() DocumentClassifierLanguageCodeOutput {
	return pulumi.ToOutput(e).(DocumentClassifierLanguageCodeOutput)
}

func (e DocumentClassifierLanguageCode) ToDocumentClassifierLanguageCodeOutputWithContext(ctx context.Context) DocumentClassifierLanguageCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierLanguageCodeOutput)
}

func (e DocumentClassifierLanguageCode) ToDocumentClassifierLanguageCodePtrOutput() DocumentClassifierLanguageCodePtrOutput {
	return e.ToDocumentClassifierLanguageCodePtrOutputWithContext(context.Background())
}

func (e DocumentClassifierLanguageCode) ToDocumentClassifierLanguageCodePtrOutputWithContext(ctx context.Context) DocumentClassifierLanguageCodePtrOutput {
	return DocumentClassifierLanguageCode(e).ToDocumentClassifierLanguageCodeOutputWithContext(ctx).ToDocumentClassifierLanguageCodePtrOutputWithContext(ctx)
}

func (e DocumentClassifierLanguageCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierLanguageCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierLanguageCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierLanguageCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierLanguageCodeOutput struct{ *pulumi.OutputState }

func (DocumentClassifierLanguageCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierLanguageCode)(nil)).Elem()
}

func (o DocumentClassifierLanguageCodeOutput) ToDocumentClassifierLanguageCodeOutput() DocumentClassifierLanguageCodeOutput {
	return o
}

func (o DocumentClassifierLanguageCodeOutput) ToDocumentClassifierLanguageCodeOutputWithContext(ctx context.Context) DocumentClassifierLanguageCodeOutput {
	return o
}

func (o DocumentClassifierLanguageCodeOutput) ToDocumentClassifierLanguageCodePtrOutput() DocumentClassifierLanguageCodePtrOutput {
	return o.ToDocumentClassifierLanguageCodePtrOutputWithContext(context.Background())
}

func (o DocumentClassifierLanguageCodeOutput) ToDocumentClassifierLanguageCodePtrOutputWithContext(ctx context.Context) DocumentClassifierLanguageCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierLanguageCode) *DocumentClassifierLanguageCode {
		return &v
	}).(DocumentClassifierLanguageCodePtrOutput)
}

func (o DocumentClassifierLanguageCodeOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierLanguageCode] {
	return pulumix.Output[DocumentClassifierLanguageCode]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierLanguageCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierLanguageCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierLanguageCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierLanguageCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierLanguageCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierLanguageCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierLanguageCodePtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierLanguageCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierLanguageCode)(nil)).Elem()
}

func (o DocumentClassifierLanguageCodePtrOutput) ToDocumentClassifierLanguageCodePtrOutput() DocumentClassifierLanguageCodePtrOutput {
	return o
}

func (o DocumentClassifierLanguageCodePtrOutput) ToDocumentClassifierLanguageCodePtrOutputWithContext(ctx context.Context) DocumentClassifierLanguageCodePtrOutput {
	return o
}

func (o DocumentClassifierLanguageCodePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierLanguageCode] {
	return pulumix.Output[*DocumentClassifierLanguageCode]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierLanguageCodePtrOutput) Elem() DocumentClassifierLanguageCodeOutput {
	return o.ApplyT(func(v *DocumentClassifierLanguageCode) DocumentClassifierLanguageCode {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierLanguageCode
		return ret
	}).(DocumentClassifierLanguageCodeOutput)
}

func (o DocumentClassifierLanguageCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierLanguageCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierLanguageCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierLanguageCodeInput is an input type that accepts DocumentClassifierLanguageCodeArgs and DocumentClassifierLanguageCodeOutput values.
// You can construct a concrete instance of `DocumentClassifierLanguageCodeInput` via:
//
//	DocumentClassifierLanguageCodeArgs{...}
type DocumentClassifierLanguageCodeInput interface {
	pulumi.Input

	ToDocumentClassifierLanguageCodeOutput() DocumentClassifierLanguageCodeOutput
	ToDocumentClassifierLanguageCodeOutputWithContext(context.Context) DocumentClassifierLanguageCodeOutput
}

var documentClassifierLanguageCodePtrType = reflect.TypeOf((**DocumentClassifierLanguageCode)(nil)).Elem()

type DocumentClassifierLanguageCodePtrInput interface {
	pulumi.Input

	ToDocumentClassifierLanguageCodePtrOutput() DocumentClassifierLanguageCodePtrOutput
	ToDocumentClassifierLanguageCodePtrOutputWithContext(context.Context) DocumentClassifierLanguageCodePtrOutput
}

type documentClassifierLanguageCodePtr string

func DocumentClassifierLanguageCodePtr(v string) DocumentClassifierLanguageCodePtrInput {
	return (*documentClassifierLanguageCodePtr)(&v)
}

func (*documentClassifierLanguageCodePtr) ElementType() reflect.Type {
	return documentClassifierLanguageCodePtrType
}

func (in *documentClassifierLanguageCodePtr) ToDocumentClassifierLanguageCodePtrOutput() DocumentClassifierLanguageCodePtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierLanguageCodePtrOutput)
}

func (in *documentClassifierLanguageCodePtr) ToDocumentClassifierLanguageCodePtrOutputWithContext(ctx context.Context) DocumentClassifierLanguageCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierLanguageCodePtrOutput)
}

func (in *documentClassifierLanguageCodePtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierLanguageCode] {
	return pulumix.Output[*DocumentClassifierLanguageCode]{
		OutputState: in.ToDocumentClassifierLanguageCodePtrOutputWithContext(ctx).OutputState,
	}
}

type DocumentClassifierMode string

const (
	DocumentClassifierModeMultiClass = DocumentClassifierMode("MULTI_CLASS")
	DocumentClassifierModeMultiLabel = DocumentClassifierMode("MULTI_LABEL")
)

func (DocumentClassifierMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierMode)(nil)).Elem()
}

func (e DocumentClassifierMode) ToDocumentClassifierModeOutput() DocumentClassifierModeOutput {
	return pulumi.ToOutput(e).(DocumentClassifierModeOutput)
}

func (e DocumentClassifierMode) ToDocumentClassifierModeOutputWithContext(ctx context.Context) DocumentClassifierModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentClassifierModeOutput)
}

func (e DocumentClassifierMode) ToDocumentClassifierModePtrOutput() DocumentClassifierModePtrOutput {
	return e.ToDocumentClassifierModePtrOutputWithContext(context.Background())
}

func (e DocumentClassifierMode) ToDocumentClassifierModePtrOutputWithContext(ctx context.Context) DocumentClassifierModePtrOutput {
	return DocumentClassifierMode(e).ToDocumentClassifierModeOutputWithContext(ctx).ToDocumentClassifierModePtrOutputWithContext(ctx)
}

func (e DocumentClassifierMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentClassifierMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentClassifierMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentClassifierModeOutput struct{ *pulumi.OutputState }

func (DocumentClassifierModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifierMode)(nil)).Elem()
}

func (o DocumentClassifierModeOutput) ToDocumentClassifierModeOutput() DocumentClassifierModeOutput {
	return o
}

func (o DocumentClassifierModeOutput) ToDocumentClassifierModeOutputWithContext(ctx context.Context) DocumentClassifierModeOutput {
	return o
}

func (o DocumentClassifierModeOutput) ToDocumentClassifierModePtrOutput() DocumentClassifierModePtrOutput {
	return o.ToDocumentClassifierModePtrOutputWithContext(context.Background())
}

func (o DocumentClassifierModeOutput) ToDocumentClassifierModePtrOutputWithContext(ctx context.Context) DocumentClassifierModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentClassifierMode) *DocumentClassifierMode {
		return &v
	}).(DocumentClassifierModePtrOutput)
}

func (o DocumentClassifierModeOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifierMode] {
	return pulumix.Output[DocumentClassifierMode]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentClassifierModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentClassifierModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentClassifierMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentClassifierModePtrOutput struct{ *pulumi.OutputState }

func (DocumentClassifierModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentClassifierMode)(nil)).Elem()
}

func (o DocumentClassifierModePtrOutput) ToDocumentClassifierModePtrOutput() DocumentClassifierModePtrOutput {
	return o
}

func (o DocumentClassifierModePtrOutput) ToDocumentClassifierModePtrOutputWithContext(ctx context.Context) DocumentClassifierModePtrOutput {
	return o
}

func (o DocumentClassifierModePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierMode] {
	return pulumix.Output[*DocumentClassifierMode]{
		OutputState: o.OutputState,
	}
}

func (o DocumentClassifierModePtrOutput) Elem() DocumentClassifierModeOutput {
	return o.ApplyT(func(v *DocumentClassifierMode) DocumentClassifierMode {
		if v != nil {
			return *v
		}
		var ret DocumentClassifierMode
		return ret
	}).(DocumentClassifierModeOutput)
}

func (o DocumentClassifierModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentClassifierModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentClassifierMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentClassifierModeInput is an input type that accepts DocumentClassifierModeArgs and DocumentClassifierModeOutput values.
// You can construct a concrete instance of `DocumentClassifierModeInput` via:
//
//	DocumentClassifierModeArgs{...}
type DocumentClassifierModeInput interface {
	pulumi.Input

	ToDocumentClassifierModeOutput() DocumentClassifierModeOutput
	ToDocumentClassifierModeOutputWithContext(context.Context) DocumentClassifierModeOutput
}

var documentClassifierModePtrType = reflect.TypeOf((**DocumentClassifierMode)(nil)).Elem()

type DocumentClassifierModePtrInput interface {
	pulumi.Input

	ToDocumentClassifierModePtrOutput() DocumentClassifierModePtrOutput
	ToDocumentClassifierModePtrOutputWithContext(context.Context) DocumentClassifierModePtrOutput
}

type documentClassifierModePtr string

func DocumentClassifierModePtr(v string) DocumentClassifierModePtrInput {
	return (*documentClassifierModePtr)(&v)
}

func (*documentClassifierModePtr) ElementType() reflect.Type {
	return documentClassifierModePtrType
}

func (in *documentClassifierModePtr) ToDocumentClassifierModePtrOutput() DocumentClassifierModePtrOutput {
	return pulumi.ToOutput(in).(DocumentClassifierModePtrOutput)
}

func (in *documentClassifierModePtr) ToDocumentClassifierModePtrOutputWithContext(ctx context.Context) DocumentClassifierModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentClassifierModePtrOutput)
}

func (in *documentClassifierModePtr) ToOutput(ctx context.Context) pulumix.Output[*DocumentClassifierMode] {
	return pulumix.Output[*DocumentClassifierMode]{
		OutputState: in.ToDocumentClassifierModePtrOutputWithContext(ctx).OutputState,
	}
}

type FlywheelDocumentClassificationConfigMode string

const (
	FlywheelDocumentClassificationConfigModeMultiClass = FlywheelDocumentClassificationConfigMode("MULTI_CLASS")
	FlywheelDocumentClassificationConfigModeMultiLabel = FlywheelDocumentClassificationConfigMode("MULTI_LABEL")
)

func (FlywheelDocumentClassificationConfigMode) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDocumentClassificationConfigMode)(nil)).Elem()
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModeOutput() FlywheelDocumentClassificationConfigModeOutput {
	return pulumi.ToOutput(e).(FlywheelDocumentClassificationConfigModeOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModeOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlywheelDocumentClassificationConfigModeOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return e.ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(context.Background())
}

func (e FlywheelDocumentClassificationConfigMode) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return FlywheelDocumentClassificationConfigMode(e).ToFlywheelDocumentClassificationConfigModeOutputWithContext(ctx).ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx)
}

func (e FlywheelDocumentClassificationConfigMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelDocumentClassificationConfigMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlywheelDocumentClassificationConfigMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlywheelDocumentClassificationConfigModeOutput struct{ *pulumi.OutputState }

func (FlywheelDocumentClassificationConfigModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelDocumentClassificationConfigMode)(nil)).Elem()
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModeOutput() FlywheelDocumentClassificationConfigModeOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModeOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModeOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return o.ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelDocumentClassificationConfigMode) *FlywheelDocumentClassificationConfigMode {
		return &v
	}).(FlywheelDocumentClassificationConfigModePtrOutput)
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToOutput(ctx context.Context) pulumix.Output[FlywheelDocumentClassificationConfigMode] {
	return pulumix.Output[FlywheelDocumentClassificationConfigMode]{
		OutputState: o.OutputState,
	}
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelDocumentClassificationConfigMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelDocumentClassificationConfigMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlywheelDocumentClassificationConfigModePtrOutput struct{ *pulumi.OutputState }

func (FlywheelDocumentClassificationConfigModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelDocumentClassificationConfigMode)(nil)).Elem()
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return o
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FlywheelDocumentClassificationConfigMode] {
	return pulumix.Output[*FlywheelDocumentClassificationConfigMode]{
		OutputState: o.OutputState,
	}
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) Elem() FlywheelDocumentClassificationConfigModeOutput {
	return o.ApplyT(func(v *FlywheelDocumentClassificationConfigMode) FlywheelDocumentClassificationConfigMode {
		if v != nil {
			return *v
		}
		var ret FlywheelDocumentClassificationConfigMode
		return ret
	}).(FlywheelDocumentClassificationConfigModeOutput)
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelDocumentClassificationConfigModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlywheelDocumentClassificationConfigMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlywheelDocumentClassificationConfigModeInput is an input type that accepts FlywheelDocumentClassificationConfigModeArgs and FlywheelDocumentClassificationConfigModeOutput values.
// You can construct a concrete instance of `FlywheelDocumentClassificationConfigModeInput` via:
//
//	FlywheelDocumentClassificationConfigModeArgs{...}
type FlywheelDocumentClassificationConfigModeInput interface {
	pulumi.Input

	ToFlywheelDocumentClassificationConfigModeOutput() FlywheelDocumentClassificationConfigModeOutput
	ToFlywheelDocumentClassificationConfigModeOutputWithContext(context.Context) FlywheelDocumentClassificationConfigModeOutput
}

var flywheelDocumentClassificationConfigModePtrType = reflect.TypeOf((**FlywheelDocumentClassificationConfigMode)(nil)).Elem()

type FlywheelDocumentClassificationConfigModePtrInput interface {
	pulumi.Input

	ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput
	ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(context.Context) FlywheelDocumentClassificationConfigModePtrOutput
}

type flywheelDocumentClassificationConfigModePtr string

func FlywheelDocumentClassificationConfigModePtr(v string) FlywheelDocumentClassificationConfigModePtrInput {
	return (*flywheelDocumentClassificationConfigModePtr)(&v)
}

func (*flywheelDocumentClassificationConfigModePtr) ElementType() reflect.Type {
	return flywheelDocumentClassificationConfigModePtrType
}

func (in *flywheelDocumentClassificationConfigModePtr) ToFlywheelDocumentClassificationConfigModePtrOutput() FlywheelDocumentClassificationConfigModePtrOutput {
	return pulumi.ToOutput(in).(FlywheelDocumentClassificationConfigModePtrOutput)
}

func (in *flywheelDocumentClassificationConfigModePtr) ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx context.Context) FlywheelDocumentClassificationConfigModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlywheelDocumentClassificationConfigModePtrOutput)
}

func (in *flywheelDocumentClassificationConfigModePtr) ToOutput(ctx context.Context) pulumix.Output[*FlywheelDocumentClassificationConfigMode] {
	return pulumix.Output[*FlywheelDocumentClassificationConfigMode]{
		OutputState: in.ToFlywheelDocumentClassificationConfigModePtrOutputWithContext(ctx).OutputState,
	}
}

type FlywheelModelType string

const (
	FlywheelModelTypeDocumentClassifier = FlywheelModelType("DOCUMENT_CLASSIFIER")
	FlywheelModelTypeEntityRecognizer   = FlywheelModelType("ENTITY_RECOGNIZER")
)

func (FlywheelModelType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelModelType)(nil)).Elem()
}

func (e FlywheelModelType) ToFlywheelModelTypeOutput() FlywheelModelTypeOutput {
	return pulumi.ToOutput(e).(FlywheelModelTypeOutput)
}

func (e FlywheelModelType) ToFlywheelModelTypeOutputWithContext(ctx context.Context) FlywheelModelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlywheelModelTypeOutput)
}

func (e FlywheelModelType) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return e.ToFlywheelModelTypePtrOutputWithContext(context.Background())
}

func (e FlywheelModelType) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return FlywheelModelType(e).ToFlywheelModelTypeOutputWithContext(ctx).ToFlywheelModelTypePtrOutputWithContext(ctx)
}

func (e FlywheelModelType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelModelType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelModelType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlywheelModelType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlywheelModelTypeOutput struct{ *pulumi.OutputState }

func (FlywheelModelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelModelType)(nil)).Elem()
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypeOutput() FlywheelModelTypeOutput {
	return o
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypeOutputWithContext(ctx context.Context) FlywheelModelTypeOutput {
	return o
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return o.ToFlywheelModelTypePtrOutputWithContext(context.Background())
}

func (o FlywheelModelTypeOutput) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelModelType) *FlywheelModelType {
		return &v
	}).(FlywheelModelTypePtrOutput)
}

func (o FlywheelModelTypeOutput) ToOutput(ctx context.Context) pulumix.Output[FlywheelModelType] {
	return pulumix.Output[FlywheelModelType]{
		OutputState: o.OutputState,
	}
}

func (o FlywheelModelTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlywheelModelTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelModelType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlywheelModelTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelModelTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelModelType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlywheelModelTypePtrOutput struct{ *pulumi.OutputState }

func (FlywheelModelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelModelType)(nil)).Elem()
}

func (o FlywheelModelTypePtrOutput) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return o
}

func (o FlywheelModelTypePtrOutput) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return o
}

func (o FlywheelModelTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FlywheelModelType] {
	return pulumix.Output[*FlywheelModelType]{
		OutputState: o.OutputState,
	}
}

func (o FlywheelModelTypePtrOutput) Elem() FlywheelModelTypeOutput {
	return o.ApplyT(func(v *FlywheelModelType) FlywheelModelType {
		if v != nil {
			return *v
		}
		var ret FlywheelModelType
		return ret
	}).(FlywheelModelTypeOutput)
}

func (o FlywheelModelTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelModelTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlywheelModelType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlywheelModelTypeInput is an input type that accepts FlywheelModelTypeArgs and FlywheelModelTypeOutput values.
// You can construct a concrete instance of `FlywheelModelTypeInput` via:
//
//	FlywheelModelTypeArgs{...}
type FlywheelModelTypeInput interface {
	pulumi.Input

	ToFlywheelModelTypeOutput() FlywheelModelTypeOutput
	ToFlywheelModelTypeOutputWithContext(context.Context) FlywheelModelTypeOutput
}

var flywheelModelTypePtrType = reflect.TypeOf((**FlywheelModelType)(nil)).Elem()

type FlywheelModelTypePtrInput interface {
	pulumi.Input

	ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput
	ToFlywheelModelTypePtrOutputWithContext(context.Context) FlywheelModelTypePtrOutput
}

type flywheelModelTypePtr string

func FlywheelModelTypePtr(v string) FlywheelModelTypePtrInput {
	return (*flywheelModelTypePtr)(&v)
}

func (*flywheelModelTypePtr) ElementType() reflect.Type {
	return flywheelModelTypePtrType
}

func (in *flywheelModelTypePtr) ToFlywheelModelTypePtrOutput() FlywheelModelTypePtrOutput {
	return pulumi.ToOutput(in).(FlywheelModelTypePtrOutput)
}

func (in *flywheelModelTypePtr) ToFlywheelModelTypePtrOutputWithContext(ctx context.Context) FlywheelModelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlywheelModelTypePtrOutput)
}

func (in *flywheelModelTypePtr) ToOutput(ctx context.Context) pulumix.Output[*FlywheelModelType] {
	return pulumix.Output[*FlywheelModelType]{
		OutputState: in.ToFlywheelModelTypePtrOutputWithContext(ctx).OutputState,
	}
}

type FlywheelTaskConfigLanguageCode string

const (
	FlywheelTaskConfigLanguageCodeEn = FlywheelTaskConfigLanguageCode("en")
	FlywheelTaskConfigLanguageCodeEs = FlywheelTaskConfigLanguageCode("es")
	FlywheelTaskConfigLanguageCodeFr = FlywheelTaskConfigLanguageCode("fr")
	FlywheelTaskConfigLanguageCodeIt = FlywheelTaskConfigLanguageCode("it")
	FlywheelTaskConfigLanguageCodeDe = FlywheelTaskConfigLanguageCode("de")
	FlywheelTaskConfigLanguageCodePt = FlywheelTaskConfigLanguageCode("pt")
)

func (FlywheelTaskConfigLanguageCode) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTaskConfigLanguageCode)(nil)).Elem()
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodeOutput() FlywheelTaskConfigLanguageCodeOutput {
	return pulumi.ToOutput(e).(FlywheelTaskConfigLanguageCodeOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodeOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlywheelTaskConfigLanguageCodeOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return e.ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(context.Background())
}

func (e FlywheelTaskConfigLanguageCode) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return FlywheelTaskConfigLanguageCode(e).ToFlywheelTaskConfigLanguageCodeOutputWithContext(ctx).ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx)
}

func (e FlywheelTaskConfigLanguageCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlywheelTaskConfigLanguageCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlywheelTaskConfigLanguageCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlywheelTaskConfigLanguageCodeOutput struct{ *pulumi.OutputState }

func (FlywheelTaskConfigLanguageCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlywheelTaskConfigLanguageCode)(nil)).Elem()
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodeOutput() FlywheelTaskConfigLanguageCodeOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodeOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodeOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return o.ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlywheelTaskConfigLanguageCode) *FlywheelTaskConfigLanguageCode {
		return &v
	}).(FlywheelTaskConfigLanguageCodePtrOutput)
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToOutput(ctx context.Context) pulumix.Output[FlywheelTaskConfigLanguageCode] {
	return pulumix.Output[FlywheelTaskConfigLanguageCode]{
		OutputState: o.OutputState,
	}
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelTaskConfigLanguageCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlywheelTaskConfigLanguageCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlywheelTaskConfigLanguageCodePtrOutput struct{ *pulumi.OutputState }

func (FlywheelTaskConfigLanguageCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlywheelTaskConfigLanguageCode)(nil)).Elem()
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return o
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FlywheelTaskConfigLanguageCode] {
	return pulumix.Output[*FlywheelTaskConfigLanguageCode]{
		OutputState: o.OutputState,
	}
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) Elem() FlywheelTaskConfigLanguageCodeOutput {
	return o.ApplyT(func(v *FlywheelTaskConfigLanguageCode) FlywheelTaskConfigLanguageCode {
		if v != nil {
			return *v
		}
		var ret FlywheelTaskConfigLanguageCode
		return ret
	}).(FlywheelTaskConfigLanguageCodeOutput)
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlywheelTaskConfigLanguageCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlywheelTaskConfigLanguageCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlywheelTaskConfigLanguageCodeInput is an input type that accepts FlywheelTaskConfigLanguageCodeArgs and FlywheelTaskConfigLanguageCodeOutput values.
// You can construct a concrete instance of `FlywheelTaskConfigLanguageCodeInput` via:
//
//	FlywheelTaskConfigLanguageCodeArgs{...}
type FlywheelTaskConfigLanguageCodeInput interface {
	pulumi.Input

	ToFlywheelTaskConfigLanguageCodeOutput() FlywheelTaskConfigLanguageCodeOutput
	ToFlywheelTaskConfigLanguageCodeOutputWithContext(context.Context) FlywheelTaskConfigLanguageCodeOutput
}

var flywheelTaskConfigLanguageCodePtrType = reflect.TypeOf((**FlywheelTaskConfigLanguageCode)(nil)).Elem()

type FlywheelTaskConfigLanguageCodePtrInput interface {
	pulumi.Input

	ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput
	ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(context.Context) FlywheelTaskConfigLanguageCodePtrOutput
}

type flywheelTaskConfigLanguageCodePtr string

func FlywheelTaskConfigLanguageCodePtr(v string) FlywheelTaskConfigLanguageCodePtrInput {
	return (*flywheelTaskConfigLanguageCodePtr)(&v)
}

func (*flywheelTaskConfigLanguageCodePtr) ElementType() reflect.Type {
	return flywheelTaskConfigLanguageCodePtrType
}

func (in *flywheelTaskConfigLanguageCodePtr) ToFlywheelTaskConfigLanguageCodePtrOutput() FlywheelTaskConfigLanguageCodePtrOutput {
	return pulumi.ToOutput(in).(FlywheelTaskConfigLanguageCodePtrOutput)
}

func (in *flywheelTaskConfigLanguageCodePtr) ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx context.Context) FlywheelTaskConfigLanguageCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlywheelTaskConfigLanguageCodePtrOutput)
}

func (in *flywheelTaskConfigLanguageCodePtr) ToOutput(ctx context.Context) pulumix.Output[*FlywheelTaskConfigLanguageCode] {
	return pulumix.Output[*FlywheelTaskConfigLanguageCode]{
		OutputState: in.ToFlywheelTaskConfigLanguageCodePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItemSplitInput)(nil)).Elem(), DocumentClassifierAugmentedManifestsListItemSplit("TRAIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierAugmentedManifestsListItemSplitPtrInput)(nil)).Elem(), DocumentClassifierAugmentedManifestsListItemSplit("TRAIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadActionInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigDocumentReadAction("TEXTRACT_DETECT_DOCUMENT_TEXT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadActionPtrInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigDocumentReadAction("TEXTRACT_DETECT_DOCUMENT_TEXT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadModeInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigDocumentReadMode("SERVICE_DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigDocumentReadModePtrInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigDocumentReadMode("SERVICE_DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigFeatureTypesItemInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigFeatureTypesItem("TABLES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigFeatureTypesItem("TABLES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayInput)(nil)).Elem(), DocumentClassifierDocumentReaderConfigFeatureTypesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierInputDataConfigDataFormatInput)(nil)).Elem(), DocumentClassifierInputDataConfigDataFormat("COMPREHEND_CSV"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierInputDataConfigDataFormatPtrInput)(nil)).Elem(), DocumentClassifierInputDataConfigDataFormat("COMPREHEND_CSV"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierInputDataConfigDocumentTypeInput)(nil)).Elem(), DocumentClassifierInputDataConfigDocumentType("PLAIN_TEXT_DOCUMENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierInputDataConfigDocumentTypePtrInput)(nil)).Elem(), DocumentClassifierInputDataConfigDocumentType("PLAIN_TEXT_DOCUMENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierLanguageCodeInput)(nil)).Elem(), DocumentClassifierLanguageCode("en"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierLanguageCodePtrInput)(nil)).Elem(), DocumentClassifierLanguageCode("en"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierModeInput)(nil)).Elem(), DocumentClassifierMode("MULTI_CLASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentClassifierModePtrInput)(nil)).Elem(), DocumentClassifierMode("MULTI_CLASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDocumentClassificationConfigModeInput)(nil)).Elem(), FlywheelDocumentClassificationConfigMode("MULTI_CLASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelDocumentClassificationConfigModePtrInput)(nil)).Elem(), FlywheelDocumentClassificationConfigMode("MULTI_CLASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelModelTypeInput)(nil)).Elem(), FlywheelModelType("DOCUMENT_CLASSIFIER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelModelTypePtrInput)(nil)).Elem(), FlywheelModelType("DOCUMENT_CLASSIFIER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTaskConfigLanguageCodeInput)(nil)).Elem(), FlywheelTaskConfigLanguageCode("en"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlywheelTaskConfigLanguageCodePtrInput)(nil)).Elem(), FlywheelTaskConfigLanguageCode("en"))
	pulumi.RegisterOutputType(DocumentClassifierAugmentedManifestsListItemSplitOutput{})
	pulumi.RegisterOutputType(DocumentClassifierAugmentedManifestsListItemSplitPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigDocumentReadActionOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigDocumentReadActionPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigDocumentReadModeOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigDocumentReadModePtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigFeatureTypesItemOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigFeatureTypesItemPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierDocumentReaderConfigFeatureTypesItemArrayOutput{})
	pulumi.RegisterOutputType(DocumentClassifierInputDataConfigDataFormatOutput{})
	pulumi.RegisterOutputType(DocumentClassifierInputDataConfigDataFormatPtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierInputDataConfigDocumentTypeOutput{})
	pulumi.RegisterOutputType(DocumentClassifierInputDataConfigDocumentTypePtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierLanguageCodeOutput{})
	pulumi.RegisterOutputType(DocumentClassifierLanguageCodePtrOutput{})
	pulumi.RegisterOutputType(DocumentClassifierModeOutput{})
	pulumi.RegisterOutputType(DocumentClassifierModePtrOutput{})
	pulumi.RegisterOutputType(FlywheelDocumentClassificationConfigModeOutput{})
	pulumi.RegisterOutputType(FlywheelDocumentClassificationConfigModePtrOutput{})
	pulumi.RegisterOutputType(FlywheelModelTypeOutput{})
	pulumi.RegisterOutputType(FlywheelModelTypePtrOutput{})
	pulumi.RegisterOutputType(FlywheelTaskConfigLanguageCodeOutput{})
	pulumi.RegisterOutputType(FlywheelTaskConfigLanguageCodePtrOutput{})
}
