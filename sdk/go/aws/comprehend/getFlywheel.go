// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The AWS::Comprehend::Flywheel resource creates an Amazon Comprehend Flywheel that enables customer to train their model.
func LookupFlywheel(ctx *pulumi.Context, args *LookupFlywheelArgs, opts ...pulumi.InvokeOption) (*LookupFlywheelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlywheelResult
	err := ctx.Invoke("aws-native:comprehend:getFlywheel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFlywheelArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupFlywheelResult struct {
	ActiveModelArn     *string                     `pulumi:"activeModelArn"`
	Arn                *string                     `pulumi:"arn"`
	DataAccessRoleArn  *string                     `pulumi:"dataAccessRoleArn"`
	DataSecurityConfig *FlywheelDataSecurityConfig `pulumi:"dataSecurityConfig"`
	Tags               []FlywheelTag               `pulumi:"tags"`
}

func LookupFlywheelOutput(ctx *pulumi.Context, args LookupFlywheelOutputArgs, opts ...pulumi.InvokeOption) LookupFlywheelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlywheelResult, error) {
			args := v.(LookupFlywheelArgs)
			r, err := LookupFlywheel(ctx, &args, opts...)
			var s LookupFlywheelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlywheelResultOutput)
}

type LookupFlywheelOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupFlywheelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlywheelArgs)(nil)).Elem()
}

type LookupFlywheelResultOutput struct{ *pulumi.OutputState }

func (LookupFlywheelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlywheelResult)(nil)).Elem()
}

func (o LookupFlywheelResultOutput) ToLookupFlywheelResultOutput() LookupFlywheelResultOutput {
	return o
}

func (o LookupFlywheelResultOutput) ToLookupFlywheelResultOutputWithContext(ctx context.Context) LookupFlywheelResultOutput {
	return o
}

func (o LookupFlywheelResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFlywheelResult] {
	return pulumix.Output[LookupFlywheelResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupFlywheelResultOutput) ActiveModelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlywheelResult) *string { return v.ActiveModelArn }).(pulumi.StringPtrOutput)
}

func (o LookupFlywheelResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlywheelResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupFlywheelResultOutput) DataAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlywheelResult) *string { return v.DataAccessRoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupFlywheelResultOutput) DataSecurityConfig() FlywheelDataSecurityConfigPtrOutput {
	return o.ApplyT(func(v LookupFlywheelResult) *FlywheelDataSecurityConfig { return v.DataSecurityConfig }).(FlywheelDataSecurityConfigPtrOutput)
}

func (o LookupFlywheelResultOutput) Tags() FlywheelTagArrayOutput {
	return o.ApplyT(func(v LookupFlywheelResult) []FlywheelTag { return v.Tags }).(FlywheelTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlywheelResultOutput{})
}
