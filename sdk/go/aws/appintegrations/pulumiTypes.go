// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appintegrations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplicationExternalUrlConfig struct {
	AccessUrl       string   `pulumi:"accessUrl"`
	ApprovedOrigins []string `pulumi:"approvedOrigins"`
}

// ApplicationExternalUrlConfigInput is an input type that accepts ApplicationExternalUrlConfigArgs and ApplicationExternalUrlConfigOutput values.
// You can construct a concrete instance of `ApplicationExternalUrlConfigInput` via:
//
//	ApplicationExternalUrlConfigArgs{...}
type ApplicationExternalUrlConfigInput interface {
	pulumi.Input

	ToApplicationExternalUrlConfigOutput() ApplicationExternalUrlConfigOutput
	ToApplicationExternalUrlConfigOutputWithContext(context.Context) ApplicationExternalUrlConfigOutput
}

type ApplicationExternalUrlConfigArgs struct {
	AccessUrl       pulumi.StringInput      `pulumi:"accessUrl"`
	ApprovedOrigins pulumi.StringArrayInput `pulumi:"approvedOrigins"`
}

func (ApplicationExternalUrlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationExternalUrlConfig)(nil)).Elem()
}

func (i ApplicationExternalUrlConfigArgs) ToApplicationExternalUrlConfigOutput() ApplicationExternalUrlConfigOutput {
	return i.ToApplicationExternalUrlConfigOutputWithContext(context.Background())
}

func (i ApplicationExternalUrlConfigArgs) ToApplicationExternalUrlConfigOutputWithContext(ctx context.Context) ApplicationExternalUrlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationExternalUrlConfigOutput)
}

type ApplicationExternalUrlConfigOutput struct{ *pulumi.OutputState }

func (ApplicationExternalUrlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationExternalUrlConfig)(nil)).Elem()
}

func (o ApplicationExternalUrlConfigOutput) ToApplicationExternalUrlConfigOutput() ApplicationExternalUrlConfigOutput {
	return o
}

func (o ApplicationExternalUrlConfigOutput) ToApplicationExternalUrlConfigOutputWithContext(ctx context.Context) ApplicationExternalUrlConfigOutput {
	return o
}

func (o ApplicationExternalUrlConfigOutput) AccessUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationExternalUrlConfig) string { return v.AccessUrl }).(pulumi.StringOutput)
}

func (o ApplicationExternalUrlConfigOutput) ApprovedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationExternalUrlConfig) []string { return v.ApprovedOrigins }).(pulumi.StringArrayOutput)
}

type ApplicationExternalUrlConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationExternalUrlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationExternalUrlConfig)(nil)).Elem()
}

func (o ApplicationExternalUrlConfigPtrOutput) ToApplicationExternalUrlConfigPtrOutput() ApplicationExternalUrlConfigPtrOutput {
	return o
}

func (o ApplicationExternalUrlConfigPtrOutput) ToApplicationExternalUrlConfigPtrOutputWithContext(ctx context.Context) ApplicationExternalUrlConfigPtrOutput {
	return o
}

func (o ApplicationExternalUrlConfigPtrOutput) Elem() ApplicationExternalUrlConfigOutput {
	return o.ApplyT(func(v *ApplicationExternalUrlConfig) ApplicationExternalUrlConfig {
		if v != nil {
			return *v
		}
		var ret ApplicationExternalUrlConfig
		return ret
	}).(ApplicationExternalUrlConfigOutput)
}

func (o ApplicationExternalUrlConfigPtrOutput) AccessUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationExternalUrlConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AccessUrl
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationExternalUrlConfigPtrOutput) ApprovedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationExternalUrlConfig) []string {
		if v == nil {
			return nil
		}
		return v.ApprovedOrigins
	}).(pulumi.StringArrayOutput)
}

// Application source config
type ApplicationSourceConfigProperties struct {
	ExternalUrlConfig ApplicationExternalUrlConfig `pulumi:"externalUrlConfig"`
}

// ApplicationSourceConfigPropertiesInput is an input type that accepts ApplicationSourceConfigPropertiesArgs and ApplicationSourceConfigPropertiesOutput values.
// You can construct a concrete instance of `ApplicationSourceConfigPropertiesInput` via:
//
//	ApplicationSourceConfigPropertiesArgs{...}
type ApplicationSourceConfigPropertiesInput interface {
	pulumi.Input

	ToApplicationSourceConfigPropertiesOutput() ApplicationSourceConfigPropertiesOutput
	ToApplicationSourceConfigPropertiesOutputWithContext(context.Context) ApplicationSourceConfigPropertiesOutput
}

// Application source config
type ApplicationSourceConfigPropertiesArgs struct {
	ExternalUrlConfig ApplicationExternalUrlConfigInput `pulumi:"externalUrlConfig"`
}

func (ApplicationSourceConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSourceConfigProperties)(nil)).Elem()
}

func (i ApplicationSourceConfigPropertiesArgs) ToApplicationSourceConfigPropertiesOutput() ApplicationSourceConfigPropertiesOutput {
	return i.ToApplicationSourceConfigPropertiesOutputWithContext(context.Background())
}

func (i ApplicationSourceConfigPropertiesArgs) ToApplicationSourceConfigPropertiesOutputWithContext(ctx context.Context) ApplicationSourceConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSourceConfigPropertiesOutput)
}

// Application source config
type ApplicationSourceConfigPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationSourceConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSourceConfigProperties)(nil)).Elem()
}

func (o ApplicationSourceConfigPropertiesOutput) ToApplicationSourceConfigPropertiesOutput() ApplicationSourceConfigPropertiesOutput {
	return o
}

func (o ApplicationSourceConfigPropertiesOutput) ToApplicationSourceConfigPropertiesOutputWithContext(ctx context.Context) ApplicationSourceConfigPropertiesOutput {
	return o
}

func (o ApplicationSourceConfigPropertiesOutput) ExternalUrlConfig() ApplicationExternalUrlConfigOutput {
	return o.ApplyT(func(v ApplicationSourceConfigProperties) ApplicationExternalUrlConfig { return v.ExternalUrlConfig }).(ApplicationExternalUrlConfigOutput)
}

type ApplicationSourceConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSourceConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSourceConfigProperties)(nil)).Elem()
}

func (o ApplicationSourceConfigPropertiesPtrOutput) ToApplicationSourceConfigPropertiesPtrOutput() ApplicationSourceConfigPropertiesPtrOutput {
	return o
}

func (o ApplicationSourceConfigPropertiesPtrOutput) ToApplicationSourceConfigPropertiesPtrOutputWithContext(ctx context.Context) ApplicationSourceConfigPropertiesPtrOutput {
	return o
}

func (o ApplicationSourceConfigPropertiesPtrOutput) Elem() ApplicationSourceConfigPropertiesOutput {
	return o.ApplyT(func(v *ApplicationSourceConfigProperties) ApplicationSourceConfigProperties {
		if v != nil {
			return *v
		}
		var ret ApplicationSourceConfigProperties
		return ret
	}).(ApplicationSourceConfigPropertiesOutput)
}

func (o ApplicationSourceConfigPropertiesPtrOutput) ExternalUrlConfig() ApplicationExternalUrlConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationSourceConfigProperties) *ApplicationExternalUrlConfig {
		if v == nil {
			return nil
		}
		return &v.ExternalUrlConfig
	}).(ApplicationExternalUrlConfigPtrOutput)
}

// A label for tagging Application resources
type ApplicationTag struct {
	// A key to identify the tag.
	Key string `pulumi:"key"`
	// Corresponding tag value for the key.
	Value string `pulumi:"value"`
}

// The configuration for what files should be pulled from the source.
type DataIntegrationFileConfiguration struct {
	// Restrictions for what files should be pulled from the source.
	Filters map[string][]string `pulumi:"filters"`
	// Identifiers for the source folders to pull all files from recursively.
	Folders []string `pulumi:"folders"`
}

// DataIntegrationFileConfigurationInput is an input type that accepts DataIntegrationFileConfigurationArgs and DataIntegrationFileConfigurationOutput values.
// You can construct a concrete instance of `DataIntegrationFileConfigurationInput` via:
//
//	DataIntegrationFileConfigurationArgs{...}
type DataIntegrationFileConfigurationInput interface {
	pulumi.Input

	ToDataIntegrationFileConfigurationOutput() DataIntegrationFileConfigurationOutput
	ToDataIntegrationFileConfigurationOutputWithContext(context.Context) DataIntegrationFileConfigurationOutput
}

// The configuration for what files should be pulled from the source.
type DataIntegrationFileConfigurationArgs struct {
	// Restrictions for what files should be pulled from the source.
	Filters pulumi.StringArrayMapInput `pulumi:"filters"`
	// Identifiers for the source folders to pull all files from recursively.
	Folders pulumi.StringArrayInput `pulumi:"folders"`
}

func (DataIntegrationFileConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrationFileConfiguration)(nil)).Elem()
}

func (i DataIntegrationFileConfigurationArgs) ToDataIntegrationFileConfigurationOutput() DataIntegrationFileConfigurationOutput {
	return i.ToDataIntegrationFileConfigurationOutputWithContext(context.Background())
}

func (i DataIntegrationFileConfigurationArgs) ToDataIntegrationFileConfigurationOutputWithContext(ctx context.Context) DataIntegrationFileConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationFileConfigurationOutput)
}

func (i DataIntegrationFileConfigurationArgs) ToDataIntegrationFileConfigurationPtrOutput() DataIntegrationFileConfigurationPtrOutput {
	return i.ToDataIntegrationFileConfigurationPtrOutputWithContext(context.Background())
}

func (i DataIntegrationFileConfigurationArgs) ToDataIntegrationFileConfigurationPtrOutputWithContext(ctx context.Context) DataIntegrationFileConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationFileConfigurationOutput).ToDataIntegrationFileConfigurationPtrOutputWithContext(ctx)
}

// DataIntegrationFileConfigurationPtrInput is an input type that accepts DataIntegrationFileConfigurationArgs, DataIntegrationFileConfigurationPtr and DataIntegrationFileConfigurationPtrOutput values.
// You can construct a concrete instance of `DataIntegrationFileConfigurationPtrInput` via:
//
//	        DataIntegrationFileConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataIntegrationFileConfigurationPtrInput interface {
	pulumi.Input

	ToDataIntegrationFileConfigurationPtrOutput() DataIntegrationFileConfigurationPtrOutput
	ToDataIntegrationFileConfigurationPtrOutputWithContext(context.Context) DataIntegrationFileConfigurationPtrOutput
}

type dataIntegrationFileConfigurationPtrType DataIntegrationFileConfigurationArgs

func DataIntegrationFileConfigurationPtr(v *DataIntegrationFileConfigurationArgs) DataIntegrationFileConfigurationPtrInput {
	return (*dataIntegrationFileConfigurationPtrType)(v)
}

func (*dataIntegrationFileConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataIntegrationFileConfiguration)(nil)).Elem()
}

func (i *dataIntegrationFileConfigurationPtrType) ToDataIntegrationFileConfigurationPtrOutput() DataIntegrationFileConfigurationPtrOutput {
	return i.ToDataIntegrationFileConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataIntegrationFileConfigurationPtrType) ToDataIntegrationFileConfigurationPtrOutputWithContext(ctx context.Context) DataIntegrationFileConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationFileConfigurationPtrOutput)
}

// The configuration for what files should be pulled from the source.
type DataIntegrationFileConfigurationOutput struct{ *pulumi.OutputState }

func (DataIntegrationFileConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrationFileConfiguration)(nil)).Elem()
}

func (o DataIntegrationFileConfigurationOutput) ToDataIntegrationFileConfigurationOutput() DataIntegrationFileConfigurationOutput {
	return o
}

func (o DataIntegrationFileConfigurationOutput) ToDataIntegrationFileConfigurationOutputWithContext(ctx context.Context) DataIntegrationFileConfigurationOutput {
	return o
}

func (o DataIntegrationFileConfigurationOutput) ToDataIntegrationFileConfigurationPtrOutput() DataIntegrationFileConfigurationPtrOutput {
	return o.ToDataIntegrationFileConfigurationPtrOutputWithContext(context.Background())
}

func (o DataIntegrationFileConfigurationOutput) ToDataIntegrationFileConfigurationPtrOutputWithContext(ctx context.Context) DataIntegrationFileConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataIntegrationFileConfiguration) *DataIntegrationFileConfiguration {
		return &v
	}).(DataIntegrationFileConfigurationPtrOutput)
}

// Restrictions for what files should be pulled from the source.
func (o DataIntegrationFileConfigurationOutput) Filters() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v DataIntegrationFileConfiguration) map[string][]string { return v.Filters }).(pulumi.StringArrayMapOutput)
}

// Identifiers for the source folders to pull all files from recursively.
func (o DataIntegrationFileConfigurationOutput) Folders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataIntegrationFileConfiguration) []string { return v.Folders }).(pulumi.StringArrayOutput)
}

type DataIntegrationFileConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataIntegrationFileConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataIntegrationFileConfiguration)(nil)).Elem()
}

func (o DataIntegrationFileConfigurationPtrOutput) ToDataIntegrationFileConfigurationPtrOutput() DataIntegrationFileConfigurationPtrOutput {
	return o
}

func (o DataIntegrationFileConfigurationPtrOutput) ToDataIntegrationFileConfigurationPtrOutputWithContext(ctx context.Context) DataIntegrationFileConfigurationPtrOutput {
	return o
}

func (o DataIntegrationFileConfigurationPtrOutput) Elem() DataIntegrationFileConfigurationOutput {
	return o.ApplyT(func(v *DataIntegrationFileConfiguration) DataIntegrationFileConfiguration {
		if v != nil {
			return *v
		}
		var ret DataIntegrationFileConfiguration
		return ret
	}).(DataIntegrationFileConfigurationOutput)
}

// Restrictions for what files should be pulled from the source.
func (o DataIntegrationFileConfigurationPtrOutput) Filters() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *DataIntegrationFileConfiguration) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(pulumi.StringArrayMapOutput)
}

// Identifiers for the source folders to pull all files from recursively.
func (o DataIntegrationFileConfigurationPtrOutput) Folders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataIntegrationFileConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Folders
	}).(pulumi.StringArrayOutput)
}

type DataIntegrationScheduleConfig struct {
	// The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
	FirstExecutionFrom *string `pulumi:"firstExecutionFrom"`
	// The name of the object to pull from the data source.
	Object *string `pulumi:"object"`
	// How often the data should be pulled from data source.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

// DataIntegrationScheduleConfigInput is an input type that accepts DataIntegrationScheduleConfigArgs and DataIntegrationScheduleConfigOutput values.
// You can construct a concrete instance of `DataIntegrationScheduleConfigInput` via:
//
//	DataIntegrationScheduleConfigArgs{...}
type DataIntegrationScheduleConfigInput interface {
	pulumi.Input

	ToDataIntegrationScheduleConfigOutput() DataIntegrationScheduleConfigOutput
	ToDataIntegrationScheduleConfigOutputWithContext(context.Context) DataIntegrationScheduleConfigOutput
}

type DataIntegrationScheduleConfigArgs struct {
	// The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
	FirstExecutionFrom pulumi.StringPtrInput `pulumi:"firstExecutionFrom"`
	// The name of the object to pull from the data source.
	Object pulumi.StringPtrInput `pulumi:"object"`
	// How often the data should be pulled from data source.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
}

func (DataIntegrationScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrationScheduleConfig)(nil)).Elem()
}

func (i DataIntegrationScheduleConfigArgs) ToDataIntegrationScheduleConfigOutput() DataIntegrationScheduleConfigOutput {
	return i.ToDataIntegrationScheduleConfigOutputWithContext(context.Background())
}

func (i DataIntegrationScheduleConfigArgs) ToDataIntegrationScheduleConfigOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationScheduleConfigOutput)
}

func (i DataIntegrationScheduleConfigArgs) ToDataIntegrationScheduleConfigPtrOutput() DataIntegrationScheduleConfigPtrOutput {
	return i.ToDataIntegrationScheduleConfigPtrOutputWithContext(context.Background())
}

func (i DataIntegrationScheduleConfigArgs) ToDataIntegrationScheduleConfigPtrOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationScheduleConfigOutput).ToDataIntegrationScheduleConfigPtrOutputWithContext(ctx)
}

// DataIntegrationScheduleConfigPtrInput is an input type that accepts DataIntegrationScheduleConfigArgs, DataIntegrationScheduleConfigPtr and DataIntegrationScheduleConfigPtrOutput values.
// You can construct a concrete instance of `DataIntegrationScheduleConfigPtrInput` via:
//
//	        DataIntegrationScheduleConfigArgs{...}
//
//	or:
//
//	        nil
type DataIntegrationScheduleConfigPtrInput interface {
	pulumi.Input

	ToDataIntegrationScheduleConfigPtrOutput() DataIntegrationScheduleConfigPtrOutput
	ToDataIntegrationScheduleConfigPtrOutputWithContext(context.Context) DataIntegrationScheduleConfigPtrOutput
}

type dataIntegrationScheduleConfigPtrType DataIntegrationScheduleConfigArgs

func DataIntegrationScheduleConfigPtr(v *DataIntegrationScheduleConfigArgs) DataIntegrationScheduleConfigPtrInput {
	return (*dataIntegrationScheduleConfigPtrType)(v)
}

func (*dataIntegrationScheduleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataIntegrationScheduleConfig)(nil)).Elem()
}

func (i *dataIntegrationScheduleConfigPtrType) ToDataIntegrationScheduleConfigPtrOutput() DataIntegrationScheduleConfigPtrOutput {
	return i.ToDataIntegrationScheduleConfigPtrOutputWithContext(context.Background())
}

func (i *dataIntegrationScheduleConfigPtrType) ToDataIntegrationScheduleConfigPtrOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationScheduleConfigPtrOutput)
}

type DataIntegrationScheduleConfigOutput struct{ *pulumi.OutputState }

func (DataIntegrationScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrationScheduleConfig)(nil)).Elem()
}

func (o DataIntegrationScheduleConfigOutput) ToDataIntegrationScheduleConfigOutput() DataIntegrationScheduleConfigOutput {
	return o
}

func (o DataIntegrationScheduleConfigOutput) ToDataIntegrationScheduleConfigOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigOutput {
	return o
}

func (o DataIntegrationScheduleConfigOutput) ToDataIntegrationScheduleConfigPtrOutput() DataIntegrationScheduleConfigPtrOutput {
	return o.ToDataIntegrationScheduleConfigPtrOutputWithContext(context.Background())
}

func (o DataIntegrationScheduleConfigOutput) ToDataIntegrationScheduleConfigPtrOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataIntegrationScheduleConfig) *DataIntegrationScheduleConfig {
		return &v
	}).(DataIntegrationScheduleConfigPtrOutput)
}

// The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
func (o DataIntegrationScheduleConfigOutput) FirstExecutionFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataIntegrationScheduleConfig) *string { return v.FirstExecutionFrom }).(pulumi.StringPtrOutput)
}

// The name of the object to pull from the data source.
func (o DataIntegrationScheduleConfigOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataIntegrationScheduleConfig) *string { return v.Object }).(pulumi.StringPtrOutput)
}

// How often the data should be pulled from data source.
func (o DataIntegrationScheduleConfigOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DataIntegrationScheduleConfig) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

type DataIntegrationScheduleConfigPtrOutput struct{ *pulumi.OutputState }

func (DataIntegrationScheduleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataIntegrationScheduleConfig)(nil)).Elem()
}

func (o DataIntegrationScheduleConfigPtrOutput) ToDataIntegrationScheduleConfigPtrOutput() DataIntegrationScheduleConfigPtrOutput {
	return o
}

func (o DataIntegrationScheduleConfigPtrOutput) ToDataIntegrationScheduleConfigPtrOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigPtrOutput {
	return o
}

func (o DataIntegrationScheduleConfigPtrOutput) Elem() DataIntegrationScheduleConfigOutput {
	return o.ApplyT(func(v *DataIntegrationScheduleConfig) DataIntegrationScheduleConfig {
		if v != nil {
			return *v
		}
		var ret DataIntegrationScheduleConfig
		return ret
	}).(DataIntegrationScheduleConfigOutput)
}

// The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
func (o DataIntegrationScheduleConfigPtrOutput) FirstExecutionFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataIntegrationScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return v.FirstExecutionFrom
	}).(pulumi.StringPtrOutput)
}

// The name of the object to pull from the data source.
func (o DataIntegrationScheduleConfigPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataIntegrationScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

// How often the data should be pulled from data source.
func (o DataIntegrationScheduleConfigPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataIntegrationScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

// A label for tagging DataIntegration resources
type DataIntegrationTag struct {
	// A key to identify the tag.
	Key string `pulumi:"key"`
	// Corresponding tag value for the key.
	Value string `pulumi:"value"`
}

type EventIntegrationEventFilter struct {
	// The source of the events.
	Source string `pulumi:"source"`
}

// EventIntegrationEventFilterInput is an input type that accepts EventIntegrationEventFilterArgs and EventIntegrationEventFilterOutput values.
// You can construct a concrete instance of `EventIntegrationEventFilterInput` via:
//
//	EventIntegrationEventFilterArgs{...}
type EventIntegrationEventFilterInput interface {
	pulumi.Input

	ToEventIntegrationEventFilterOutput() EventIntegrationEventFilterOutput
	ToEventIntegrationEventFilterOutputWithContext(context.Context) EventIntegrationEventFilterOutput
}

type EventIntegrationEventFilterArgs struct {
	// The source of the events.
	Source pulumi.StringInput `pulumi:"source"`
}

func (EventIntegrationEventFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventIntegrationEventFilter)(nil)).Elem()
}

func (i EventIntegrationEventFilterArgs) ToEventIntegrationEventFilterOutput() EventIntegrationEventFilterOutput {
	return i.ToEventIntegrationEventFilterOutputWithContext(context.Background())
}

func (i EventIntegrationEventFilterArgs) ToEventIntegrationEventFilterOutputWithContext(ctx context.Context) EventIntegrationEventFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventIntegrationEventFilterOutput)
}

type EventIntegrationEventFilterOutput struct{ *pulumi.OutputState }

func (EventIntegrationEventFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventIntegrationEventFilter)(nil)).Elem()
}

func (o EventIntegrationEventFilterOutput) ToEventIntegrationEventFilterOutput() EventIntegrationEventFilterOutput {
	return o
}

func (o EventIntegrationEventFilterOutput) ToEventIntegrationEventFilterOutputWithContext(ctx context.Context) EventIntegrationEventFilterOutput {
	return o
}

// The source of the events.
func (o EventIntegrationEventFilterOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v EventIntegrationEventFilter) string { return v.Source }).(pulumi.StringOutput)
}

type EventIntegrationTag struct {
	// A key to identify the tag.
	Key string `pulumi:"key"`
	// Corresponding tag value for the key.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationExternalUrlConfigInput)(nil)).Elem(), ApplicationExternalUrlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSourceConfigPropertiesInput)(nil)).Elem(), ApplicationSourceConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataIntegrationFileConfigurationInput)(nil)).Elem(), DataIntegrationFileConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataIntegrationFileConfigurationPtrInput)(nil)).Elem(), DataIntegrationFileConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataIntegrationScheduleConfigInput)(nil)).Elem(), DataIntegrationScheduleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataIntegrationScheduleConfigPtrInput)(nil)).Elem(), DataIntegrationScheduleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventIntegrationEventFilterInput)(nil)).Elem(), EventIntegrationEventFilterArgs{})
	pulumi.RegisterOutputType(ApplicationExternalUrlConfigOutput{})
	pulumi.RegisterOutputType(ApplicationExternalUrlConfigPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSourceConfigPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationSourceConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataIntegrationFileConfigurationOutput{})
	pulumi.RegisterOutputType(DataIntegrationFileConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataIntegrationScheduleConfigOutput{})
	pulumi.RegisterOutputType(DataIntegrationScheduleConfigPtrOutput{})
	pulumi.RegisterOutputType(EventIntegrationEventFilterOutput{})
}
