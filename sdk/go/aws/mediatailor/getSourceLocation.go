// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediatailor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::MediaTailor::SourceLocation Resource Type
func LookupSourceLocation(ctx *pulumi.Context, args *LookupSourceLocationArgs, opts ...pulumi.InvokeOption) (*LookupSourceLocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceLocationResult
	err := ctx.Invoke("aws-native:mediatailor:getSourceLocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSourceLocationArgs struct {
	SourceLocationName string `pulumi:"sourceLocationName"`
}

type LookupSourceLocationResult struct {
	AccessConfiguration *SourceLocationAccessConfiguration `pulumi:"accessConfiguration"`
	// <p>The ARN of the source location.</p>
	Arn                                 *string                                            `pulumi:"arn"`
	DefaultSegmentDeliveryConfiguration *SourceLocationDefaultSegmentDeliveryConfiguration `pulumi:"defaultSegmentDeliveryConfiguration"`
	HttpConfiguration                   *SourceLocationHttpConfiguration                   `pulumi:"httpConfiguration"`
	// <p>A list of the segment delivery configurations associated with this resource.</p>
	SegmentDeliveryConfigurations []SourceLocationSegmentDeliveryConfiguration `pulumi:"segmentDeliveryConfigurations"`
	// The tags to assign to the source location.
	Tags []SourceLocationTag `pulumi:"tags"`
}

func LookupSourceLocationOutput(ctx *pulumi.Context, args LookupSourceLocationOutputArgs, opts ...pulumi.InvokeOption) LookupSourceLocationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceLocationResult, error) {
			args := v.(LookupSourceLocationArgs)
			r, err := LookupSourceLocation(ctx, &args, opts...)
			var s LookupSourceLocationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceLocationResultOutput)
}

type LookupSourceLocationOutputArgs struct {
	SourceLocationName pulumi.StringInput `pulumi:"sourceLocationName"`
}

func (LookupSourceLocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceLocationArgs)(nil)).Elem()
}

type LookupSourceLocationResultOutput struct{ *pulumi.OutputState }

func (LookupSourceLocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceLocationResult)(nil)).Elem()
}

func (o LookupSourceLocationResultOutput) ToLookupSourceLocationResultOutput() LookupSourceLocationResultOutput {
	return o
}

func (o LookupSourceLocationResultOutput) ToLookupSourceLocationResultOutputWithContext(ctx context.Context) LookupSourceLocationResultOutput {
	return o
}

func (o LookupSourceLocationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSourceLocationResult] {
	return pulumix.Output[LookupSourceLocationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSourceLocationResultOutput) AccessConfiguration() SourceLocationAccessConfigurationPtrOutput {
	return o.ApplyT(func(v LookupSourceLocationResult) *SourceLocationAccessConfiguration { return v.AccessConfiguration }).(SourceLocationAccessConfigurationPtrOutput)
}

// <p>The ARN of the source location.</p>
func (o LookupSourceLocationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceLocationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupSourceLocationResultOutput) DefaultSegmentDeliveryConfiguration() SourceLocationDefaultSegmentDeliveryConfigurationPtrOutput {
	return o.ApplyT(func(v LookupSourceLocationResult) *SourceLocationDefaultSegmentDeliveryConfiguration {
		return v.DefaultSegmentDeliveryConfiguration
	}).(SourceLocationDefaultSegmentDeliveryConfigurationPtrOutput)
}

func (o LookupSourceLocationResultOutput) HttpConfiguration() SourceLocationHttpConfigurationPtrOutput {
	return o.ApplyT(func(v LookupSourceLocationResult) *SourceLocationHttpConfiguration { return v.HttpConfiguration }).(SourceLocationHttpConfigurationPtrOutput)
}

// <p>A list of the segment delivery configurations associated with this resource.</p>
func (o LookupSourceLocationResultOutput) SegmentDeliveryConfigurations() SourceLocationSegmentDeliveryConfigurationArrayOutput {
	return o.ApplyT(func(v LookupSourceLocationResult) []SourceLocationSegmentDeliveryConfiguration {
		return v.SegmentDeliveryConfigurations
	}).(SourceLocationSegmentDeliveryConfigurationArrayOutput)
}

// The tags to assign to the source location.
func (o LookupSourceLocationResultOutput) Tags() SourceLocationTagArrayOutput {
	return o.ApplyT(func(v LookupSourceLocationResult) []SourceLocationTag { return v.Tags }).(SourceLocationTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceLocationResultOutput{})
}
