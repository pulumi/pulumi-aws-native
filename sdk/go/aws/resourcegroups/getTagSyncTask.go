// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcegroups

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for ResourceGroups::TagSyncTask
func LookupTagSyncTask(ctx *pulumi.Context, args *LookupTagSyncTaskArgs, opts ...pulumi.InvokeOption) (*LookupTagSyncTaskResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagSyncTaskResult
	err := ctx.Invoke("aws-native:resourcegroups:getTagSyncTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTagSyncTaskArgs struct {
	// The ARN of the TagSyncTask resource
	TaskArn string `pulumi:"taskArn"`
}

type LookupTagSyncTaskResult struct {
	// The Amazon resource name (ARN) of the ApplicationGroup for which the TagSyncTask is created
	GroupArn *string `pulumi:"groupArn"`
	// The Name of the application group for which the TagSyncTask is created
	GroupName *string `pulumi:"groupName"`
	// The status of the TagSyncTask
	Status *TagSyncTaskStatus `pulumi:"status"`
	// The ARN of the TagSyncTask resource
	TaskArn *string `pulumi:"taskArn"`
}

func LookupTagSyncTaskOutput(ctx *pulumi.Context, args LookupTagSyncTaskOutputArgs, opts ...pulumi.InvokeOption) LookupTagSyncTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagSyncTaskResultOutput, error) {
			args := v.(LookupTagSyncTaskArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTagSyncTaskResult
			secret, err := ctx.InvokePackageRaw("aws-native:resourcegroups:getTagSyncTask", args, &rv, "", opts...)
			if err != nil {
				return LookupTagSyncTaskResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTagSyncTaskResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTagSyncTaskResultOutput), nil
			}
			return output, nil
		}).(LookupTagSyncTaskResultOutput)
}

type LookupTagSyncTaskOutputArgs struct {
	// The ARN of the TagSyncTask resource
	TaskArn pulumi.StringInput `pulumi:"taskArn"`
}

func (LookupTagSyncTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagSyncTaskArgs)(nil)).Elem()
}

type LookupTagSyncTaskResultOutput struct{ *pulumi.OutputState }

func (LookupTagSyncTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagSyncTaskResult)(nil)).Elem()
}

func (o LookupTagSyncTaskResultOutput) ToLookupTagSyncTaskResultOutput() LookupTagSyncTaskResultOutput {
	return o
}

func (o LookupTagSyncTaskResultOutput) ToLookupTagSyncTaskResultOutputWithContext(ctx context.Context) LookupTagSyncTaskResultOutput {
	return o
}

// The Amazon resource name (ARN) of the ApplicationGroup for which the TagSyncTask is created
func (o LookupTagSyncTaskResultOutput) GroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTagSyncTaskResult) *string { return v.GroupArn }).(pulumi.StringPtrOutput)
}

// The Name of the application group for which the TagSyncTask is created
func (o LookupTagSyncTaskResultOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTagSyncTaskResult) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The status of the TagSyncTask
func (o LookupTagSyncTaskResultOutput) Status() TagSyncTaskStatusPtrOutput {
	return o.ApplyT(func(v LookupTagSyncTaskResult) *TagSyncTaskStatus { return v.Status }).(TagSyncTaskStatusPtrOutput)
}

// The ARN of the TagSyncTask resource
func (o LookupTagSyncTaskResultOutput) TaskArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTagSyncTaskResult) *string { return v.TaskArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagSyncTaskResultOutput{})
}
