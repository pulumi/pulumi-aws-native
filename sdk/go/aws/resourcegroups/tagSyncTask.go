// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcegroups

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for ResourceGroups::TagSyncTask
type TagSyncTask struct {
	pulumi.CustomResourceState

	// The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
	Group pulumi.StringOutput `pulumi:"group"`
	// The Amazon resource name (ARN) of the ApplicationGroup for which the TagSyncTask is created
	GroupArn pulumi.StringOutput `pulumi:"groupArn"`
	// The Name of the application group for which the TagSyncTask is created
	GroupName pulumi.StringOutput `pulumi:"groupName"`
	// The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The status of the TagSyncTask
	Status TagSyncTaskStatusOutput `pulumi:"status"`
	// The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
	TagKey pulumi.StringOutput `pulumi:"tagKey"`
	// The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
	TagValue pulumi.StringOutput `pulumi:"tagValue"`
	// The ARN of the TagSyncTask resource
	TaskArn pulumi.StringOutput `pulumi:"taskArn"`
}

// NewTagSyncTask registers a new resource with the given unique name, arguments, and options.
func NewTagSyncTask(ctx *pulumi.Context,
	name string, args *TagSyncTaskArgs, opts ...pulumi.ResourceOption) (*TagSyncTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Group == nil {
		return nil, errors.New("invalid value for required argument 'Group'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.TagKey == nil {
		return nil, errors.New("invalid value for required argument 'TagKey'")
	}
	if args.TagValue == nil {
		return nil, errors.New("invalid value for required argument 'TagValue'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"group",
		"roleArn",
		"tagKey",
		"tagValue",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagSyncTask
	err := ctx.RegisterResource("aws-native:resourcegroups:TagSyncTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagSyncTask gets an existing TagSyncTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagSyncTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagSyncTaskState, opts ...pulumi.ResourceOption) (*TagSyncTask, error) {
	var resource TagSyncTask
	err := ctx.ReadResource("aws-native:resourcegroups:TagSyncTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagSyncTask resources.
type tagSyncTaskState struct {
}

type TagSyncTaskState struct {
}

func (TagSyncTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagSyncTaskState)(nil)).Elem()
}

type tagSyncTaskArgs struct {
	// The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
	Group string `pulumi:"group"`
	// The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
	RoleArn string `pulumi:"roleArn"`
	// The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
	TagKey string `pulumi:"tagKey"`
	// The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
	TagValue string `pulumi:"tagValue"`
}

// The set of arguments for constructing a TagSyncTask resource.
type TagSyncTaskArgs struct {
	// The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
	Group pulumi.StringInput
	// The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
	RoleArn pulumi.StringInput
	// The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
	TagKey pulumi.StringInput
	// The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
	TagValue pulumi.StringInput
}

func (TagSyncTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagSyncTaskArgs)(nil)).Elem()
}

type TagSyncTaskInput interface {
	pulumi.Input

	ToTagSyncTaskOutput() TagSyncTaskOutput
	ToTagSyncTaskOutputWithContext(ctx context.Context) TagSyncTaskOutput
}

func (*TagSyncTask) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSyncTask)(nil)).Elem()
}

func (i *TagSyncTask) ToTagSyncTaskOutput() TagSyncTaskOutput {
	return i.ToTagSyncTaskOutputWithContext(context.Background())
}

func (i *TagSyncTask) ToTagSyncTaskOutputWithContext(ctx context.Context) TagSyncTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSyncTaskOutput)
}

type TagSyncTaskOutput struct{ *pulumi.OutputState }

func (TagSyncTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSyncTask)(nil)).Elem()
}

func (o TagSyncTaskOutput) ToTagSyncTaskOutput() TagSyncTaskOutput {
	return o
}

func (o TagSyncTaskOutput) ToTagSyncTaskOutputWithContext(ctx context.Context) TagSyncTaskOutput {
	return o
}

// The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
func (o TagSyncTaskOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// The Amazon resource name (ARN) of the ApplicationGroup for which the TagSyncTask is created
func (o TagSyncTaskOutput) GroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.GroupArn }).(pulumi.StringOutput)
}

// The Name of the application group for which the TagSyncTask is created
func (o TagSyncTaskOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.GroupName }).(pulumi.StringOutput)
}

// The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
func (o TagSyncTaskOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The status of the TagSyncTask
func (o TagSyncTaskOutput) Status() TagSyncTaskStatusOutput {
	return o.ApplyT(func(v *TagSyncTask) TagSyncTaskStatusOutput { return v.Status }).(TagSyncTaskStatusOutput)
}

// The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
func (o TagSyncTaskOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.TagKey }).(pulumi.StringOutput)
}

// The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
func (o TagSyncTaskOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.TagValue }).(pulumi.StringOutput)
}

// The ARN of the TagSyncTask resource
func (o TagSyncTaskOutput) TaskArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TagSyncTask) pulumi.StringOutput { return v.TaskArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagSyncTaskInput)(nil)).Elem(), &TagSyncTask{})
	pulumi.RegisterOutputType(TagSyncTaskOutput{})
}
