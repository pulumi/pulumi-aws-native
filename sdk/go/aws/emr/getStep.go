// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EMR::Step
func LookupStep(ctx *pulumi.Context, args *LookupStepArgs, opts ...pulumi.InvokeOption) (*LookupStepResult, error) {
	var rv LookupStepResult
	err := ctx.Invoke("aws-native:emr:getStep", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStepArgs struct {
	Id string `pulumi:"id"`
}

type LookupStepResult struct {
	Id *string `pulumi:"id"`
}

func LookupStepOutput(ctx *pulumi.Context, args LookupStepOutputArgs, opts ...pulumi.InvokeOption) LookupStepResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStepResult, error) {
			args := v.(LookupStepArgs)
			r, err := LookupStep(ctx, &args, opts...)
			var s LookupStepResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStepResultOutput)
}

type LookupStepOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupStepOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStepArgs)(nil)).Elem()
}

type LookupStepResultOutput struct{ *pulumi.OutputState }

func (LookupStepResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStepResult)(nil)).Elem()
}

func (o LookupStepResultOutput) ToLookupStepResultOutput() LookupStepResultOutput {
	return o
}

func (o LookupStepResultOutput) ToLookupStepResultOutputWithContext(ctx context.Context) LookupStepResultOutput {
	return o
}

func (o LookupStepResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStepResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStepResultOutput{})
}
