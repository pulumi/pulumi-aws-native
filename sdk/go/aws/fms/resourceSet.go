// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an AWS Firewall Manager resource set.
type ResourceSet struct {
	pulumi.CustomResourceState

	AwsId            pulumi.StringOutput      `pulumi:"awsId"`
	Description      pulumi.StringPtrOutput   `pulumi:"description"`
	Name             pulumi.StringOutput      `pulumi:"name"`
	ResourceTypeList pulumi.StringArrayOutput `pulumi:"resourceTypeList"`
	Resources        pulumi.StringArrayOutput `pulumi:"resources"`
	Tags             aws.TagArrayOutput       `pulumi:"tags"`
}

// NewResourceSet registers a new resource with the given unique name, arguments, and options.
func NewResourceSet(ctx *pulumi.Context,
	name string, args *ResourceSetArgs, opts ...pulumi.ResourceOption) (*ResourceSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceTypeList == nil {
		return nil, errors.New("invalid value for required argument 'ResourceTypeList'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourceSet
	err := ctx.RegisterResource("aws-native:fms:ResourceSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceSet gets an existing ResourceSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceSetState, opts ...pulumi.ResourceOption) (*ResourceSet, error) {
	var resource ResourceSet
	err := ctx.ReadResource("aws-native:fms:ResourceSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceSet resources.
type resourceSetState struct {
}

type ResourceSetState struct {
}

func (ResourceSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceSetState)(nil)).Elem()
}

type resourceSetArgs struct {
	Description      *string   `pulumi:"description"`
	Name             *string   `pulumi:"name"`
	ResourceTypeList []string  `pulumi:"resourceTypeList"`
	Resources        []string  `pulumi:"resources"`
	Tags             []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ResourceSet resource.
type ResourceSetArgs struct {
	Description      pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	ResourceTypeList pulumi.StringArrayInput
	Resources        pulumi.StringArrayInput
	Tags             aws.TagArrayInput
}

func (ResourceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceSetArgs)(nil)).Elem()
}

type ResourceSetInput interface {
	pulumi.Input

	ToResourceSetOutput() ResourceSetOutput
	ToResourceSetOutputWithContext(ctx context.Context) ResourceSetOutput
}

func (*ResourceSet) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSet)(nil)).Elem()
}

func (i *ResourceSet) ToResourceSetOutput() ResourceSetOutput {
	return i.ToResourceSetOutputWithContext(context.Background())
}

func (i *ResourceSet) ToResourceSetOutputWithContext(ctx context.Context) ResourceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetOutput)
}

type ResourceSetOutput struct{ *pulumi.OutputState }

func (ResourceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSet)(nil)).Elem()
}

func (o ResourceSetOutput) ToResourceSetOutput() ResourceSetOutput {
	return o
}

func (o ResourceSetOutput) ToResourceSetOutputWithContext(ctx context.Context) ResourceSetOutput {
	return o
}

func (o ResourceSetOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceSet) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o ResourceSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResourceSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ResourceSetOutput) ResourceTypeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceSet) pulumi.StringArrayOutput { return v.ResourceTypeList }).(pulumi.StringArrayOutput)
}

func (o ResourceSetOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceSet) pulumi.StringArrayOutput { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o ResourceSetOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ResourceSet) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetInput)(nil)).Elem(), &ResourceSet{})
	pulumi.RegisterOutputType(ResourceSetOutput{})
}
