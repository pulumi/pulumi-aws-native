// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an AWS Firewall Manager policy.
type Policy struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput                   `pulumi:"arn"`
	DeleteAllPolicyResources  pulumi.BoolPtrOutput                  `pulumi:"deleteAllPolicyResources"`
	ExcludeMap                PolicyIeMapPtrOutput                  `pulumi:"excludeMap"`
	ExcludeResourceTags       pulumi.BoolOutput                     `pulumi:"excludeResourceTags"`
	IncludeMap                PolicyIeMapPtrOutput                  `pulumi:"includeMap"`
	PolicyDescription         pulumi.StringPtrOutput                `pulumi:"policyDescription"`
	PolicyName                pulumi.StringOutput                   `pulumi:"policyName"`
	RemediationEnabled        pulumi.BoolOutput                     `pulumi:"remediationEnabled"`
	ResourceSetIds            pulumi.StringArrayOutput              `pulumi:"resourceSetIds"`
	ResourceTags              PolicyResourceTagArrayOutput          `pulumi:"resourceTags"`
	ResourceType              pulumi.StringPtrOutput                `pulumi:"resourceType"`
	ResourceTypeList          pulumi.StringArrayOutput              `pulumi:"resourceTypeList"`
	ResourcesCleanUp          pulumi.BoolPtrOutput                  `pulumi:"resourcesCleanUp"`
	SecurityServicePolicyData PolicySecurityServicePolicyDataOutput `pulumi:"securityServicePolicyData"`
	Tags                      aws.TagArrayOutput                    `pulumi:"tags"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExcludeResourceTags == nil {
		return nil, errors.New("invalid value for required argument 'ExcludeResourceTags'")
	}
	if args.RemediationEnabled == nil {
		return nil, errors.New("invalid value for required argument 'RemediationEnabled'")
	}
	if args.SecurityServicePolicyData == nil {
		return nil, errors.New("invalid value for required argument 'SecurityServicePolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Policy
	err := ctx.RegisterResource("aws-native:fms:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("aws-native:fms:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
}

type PolicyState struct {
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	DeleteAllPolicyResources  *bool                           `pulumi:"deleteAllPolicyResources"`
	ExcludeMap                *PolicyIeMap                    `pulumi:"excludeMap"`
	ExcludeResourceTags       bool                            `pulumi:"excludeResourceTags"`
	IncludeMap                *PolicyIeMap                    `pulumi:"includeMap"`
	PolicyDescription         *string                         `pulumi:"policyDescription"`
	PolicyName                *string                         `pulumi:"policyName"`
	RemediationEnabled        bool                            `pulumi:"remediationEnabled"`
	ResourceSetIds            []string                        `pulumi:"resourceSetIds"`
	ResourceTags              []PolicyResourceTag             `pulumi:"resourceTags"`
	ResourceType              *string                         `pulumi:"resourceType"`
	ResourceTypeList          []string                        `pulumi:"resourceTypeList"`
	ResourcesCleanUp          *bool                           `pulumi:"resourcesCleanUp"`
	SecurityServicePolicyData PolicySecurityServicePolicyData `pulumi:"securityServicePolicyData"`
	Tags                      []aws.Tag                       `pulumi:"tags"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	DeleteAllPolicyResources  pulumi.BoolPtrInput
	ExcludeMap                PolicyIeMapPtrInput
	ExcludeResourceTags       pulumi.BoolInput
	IncludeMap                PolicyIeMapPtrInput
	PolicyDescription         pulumi.StringPtrInput
	PolicyName                pulumi.StringPtrInput
	RemediationEnabled        pulumi.BoolInput
	ResourceSetIds            pulumi.StringArrayInput
	ResourceTags              PolicyResourceTagArrayInput
	ResourceType              pulumi.StringPtrInput
	ResourceTypeList          pulumi.StringArrayInput
	ResourcesCleanUp          pulumi.BoolPtrInput
	SecurityServicePolicyData PolicySecurityServicePolicyDataInput
	Tags                      aws.TagArrayInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}

type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(ctx context.Context) PolicyOutput
}

func (*Policy) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (i *Policy) ToPolicyOutput() PolicyOutput {
	return i.ToPolicyOutputWithContext(context.Background())
}

func (i *Policy) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOutput)
}

type PolicyOutput struct{ *pulumi.OutputState }

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

func (o PolicyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o PolicyOutput) DeleteAllPolicyResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.BoolPtrOutput { return v.DeleteAllPolicyResources }).(pulumi.BoolPtrOutput)
}

func (o PolicyOutput) ExcludeMap() PolicyIeMapPtrOutput {
	return o.ApplyT(func(v *Policy) PolicyIeMapPtrOutput { return v.ExcludeMap }).(PolicyIeMapPtrOutput)
}

func (o PolicyOutput) ExcludeResourceTags() pulumi.BoolOutput {
	return o.ApplyT(func(v *Policy) pulumi.BoolOutput { return v.ExcludeResourceTags }).(pulumi.BoolOutput)
}

func (o PolicyOutput) IncludeMap() PolicyIeMapPtrOutput {
	return o.ApplyT(func(v *Policy) PolicyIeMapPtrOutput { return v.IncludeMap }).(PolicyIeMapPtrOutput)
}

func (o PolicyOutput) PolicyDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringPtrOutput { return v.PolicyDescription }).(pulumi.StringPtrOutput)
}

func (o PolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.PolicyName }).(pulumi.StringOutput)
}

func (o PolicyOutput) RemediationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Policy) pulumi.BoolOutput { return v.RemediationEnabled }).(pulumi.BoolOutput)
}

func (o PolicyOutput) ResourceSetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringArrayOutput { return v.ResourceSetIds }).(pulumi.StringArrayOutput)
}

func (o PolicyOutput) ResourceTags() PolicyResourceTagArrayOutput {
	return o.ApplyT(func(v *Policy) PolicyResourceTagArrayOutput { return v.ResourceTags }).(PolicyResourceTagArrayOutput)
}

func (o PolicyOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringPtrOutput { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o PolicyOutput) ResourceTypeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringArrayOutput { return v.ResourceTypeList }).(pulumi.StringArrayOutput)
}

func (o PolicyOutput) ResourcesCleanUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Policy) pulumi.BoolPtrOutput { return v.ResourcesCleanUp }).(pulumi.BoolPtrOutput)
}

func (o PolicyOutput) SecurityServicePolicyData() PolicySecurityServicePolicyDataOutput {
	return o.ApplyT(func(v *Policy) PolicySecurityServicePolicyDataOutput { return v.SecurityServicePolicyData }).(PolicySecurityServicePolicyDataOutput)
}

func (o PolicyOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Policy) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInput)(nil)).Elem(), &Policy{})
	pulumi.RegisterOutputType(PolicyOutput{})
}
