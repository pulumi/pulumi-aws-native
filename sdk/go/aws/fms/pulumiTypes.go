// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// An FMS includeMap or excludeMap.
type PolicyIeMap struct {
	// The account list for the map.
	Account []string `pulumi:"account"`
	// The organizational unit list for the map.
	Orgunit []string `pulumi:"orgunit"`
}

// PolicyIeMapInput is an input type that accepts PolicyIeMap and PolicyIeMapOutput values.
// You can construct a concrete instance of `PolicyIeMapInput` via:
//
//	PolicyIeMap{ "key": PolicyIeArgs{...} }
type PolicyIeMapInput interface {
	pulumi.Input

	ToPolicyIeMapOutput() PolicyIeMapOutput
	ToPolicyIeMapOutputWithContext(context.Context) PolicyIeMapOutput
}

// An FMS includeMap or excludeMap.
type PolicyIeMapArgs struct {
	// The account list for the map.
	Account pulumi.StringArrayInput `pulumi:"account"`
	// The organizational unit list for the map.
	Orgunit pulumi.StringArrayInput `pulumi:"orgunit"`
}

func (PolicyIeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIeMap)(nil)).Elem()
}

func (i PolicyIeMapArgs) ToPolicyIeMapOutput() PolicyIeMapOutput {
	return i.ToPolicyIeMapOutputWithContext(context.Background())
}

func (i PolicyIeMapArgs) ToPolicyIeMapOutputWithContext(ctx context.Context) PolicyIeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIeMapOutput)
}

func (i PolicyIeMapArgs) ToPolicyIeMapPtrOutput() PolicyIeMapPtrOutput {
	return i.ToPolicyIeMapPtrOutputWithContext(context.Background())
}

func (i PolicyIeMapArgs) ToPolicyIeMapPtrOutputWithContext(ctx context.Context) PolicyIeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIeMapOutput).ToPolicyIeMapPtrOutputWithContext(ctx)
}

// PolicyIeMapPtrInput is an input type that accepts PolicyIeMapArgs, PolicyIeMapPtr and PolicyIeMapPtrOutput values.
// You can construct a concrete instance of `PolicyIeMapPtrInput` via:
//
//	        PolicyIeMapArgs{...}
//
//	or:
//
//	        nil
type PolicyIeMapPtrInput interface {
	pulumi.Input

	ToPolicyIeMapPtrOutput() PolicyIeMapPtrOutput
	ToPolicyIeMapPtrOutputWithContext(context.Context) PolicyIeMapPtrOutput
}

type policyIeMapPtrType PolicyIeMapArgs

func PolicyIeMapPtr(v *PolicyIeMapArgs) PolicyIeMapPtrInput {
	return (*policyIeMapPtrType)(v)
}

func (*policyIeMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyIeMap)(nil)).Elem()
}

func (i *policyIeMapPtrType) ToPolicyIeMapPtrOutput() PolicyIeMapPtrOutput {
	return i.ToPolicyIeMapPtrOutputWithContext(context.Background())
}

func (i *policyIeMapPtrType) ToPolicyIeMapPtrOutputWithContext(ctx context.Context) PolicyIeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIeMapPtrOutput)
}

// An FMS includeMap or excludeMap.
type PolicyIeMapOutput struct{ *pulumi.OutputState }

func (PolicyIeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIeMap)(nil)).Elem()
}

func (o PolicyIeMapOutput) ToPolicyIeMapOutput() PolicyIeMapOutput {
	return o
}

func (o PolicyIeMapOutput) ToPolicyIeMapOutputWithContext(ctx context.Context) PolicyIeMapOutput {
	return o
}

func (o PolicyIeMapOutput) ToPolicyIeMapPtrOutput() PolicyIeMapPtrOutput {
	return o.ToPolicyIeMapPtrOutputWithContext(context.Background())
}

func (o PolicyIeMapOutput) ToPolicyIeMapPtrOutputWithContext(ctx context.Context) PolicyIeMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyIeMap) *PolicyIeMap {
		return &v
	}).(PolicyIeMapPtrOutput)
}

// The account list for the map.
func (o PolicyIeMapOutput) Account() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyIeMap) []string { return v.Account }).(pulumi.StringArrayOutput)
}

// The organizational unit list for the map.
func (o PolicyIeMapOutput) Orgunit() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyIeMap) []string { return v.Orgunit }).(pulumi.StringArrayOutput)
}

type PolicyIeMapPtrOutput struct{ *pulumi.OutputState }

func (PolicyIeMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyIeMap)(nil)).Elem()
}

func (o PolicyIeMapPtrOutput) ToPolicyIeMapPtrOutput() PolicyIeMapPtrOutput {
	return o
}

func (o PolicyIeMapPtrOutput) ToPolicyIeMapPtrOutputWithContext(ctx context.Context) PolicyIeMapPtrOutput {
	return o
}

func (o PolicyIeMapPtrOutput) Elem() PolicyIeMapOutput {
	return o.ApplyT(func(v *PolicyIeMap) PolicyIeMap {
		if v != nil {
			return *v
		}
		var ret PolicyIeMap
		return ret
	}).(PolicyIeMapOutput)
}

// The account list for the map.
func (o PolicyIeMapPtrOutput) Account() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyIeMap) []string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringArrayOutput)
}

// The organizational unit list for the map.
func (o PolicyIeMapPtrOutput) Orgunit() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyIeMap) []string {
		if v == nil {
			return nil
		}
		return v.Orgunit
	}).(pulumi.StringArrayOutput)
}

// Network ACL common policy.
type PolicyNetworkAclCommonPolicy struct {
	// The definition of the first and last rules for the network ACL policy.
	NetworkAclEntrySet PolicyNetworkAclEntrySet `pulumi:"networkAclEntrySet"`
}

// PolicyNetworkAclCommonPolicyInput is an input type that accepts PolicyNetworkAclCommonPolicyArgs and PolicyNetworkAclCommonPolicyOutput values.
// You can construct a concrete instance of `PolicyNetworkAclCommonPolicyInput` via:
//
//	PolicyNetworkAclCommonPolicyArgs{...}
type PolicyNetworkAclCommonPolicyInput interface {
	pulumi.Input

	ToPolicyNetworkAclCommonPolicyOutput() PolicyNetworkAclCommonPolicyOutput
	ToPolicyNetworkAclCommonPolicyOutputWithContext(context.Context) PolicyNetworkAclCommonPolicyOutput
}

// Network ACL common policy.
type PolicyNetworkAclCommonPolicyArgs struct {
	// The definition of the first and last rules for the network ACL policy.
	NetworkAclEntrySet PolicyNetworkAclEntrySetInput `pulumi:"networkAclEntrySet"`
}

func (PolicyNetworkAclCommonPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclCommonPolicy)(nil)).Elem()
}

func (i PolicyNetworkAclCommonPolicyArgs) ToPolicyNetworkAclCommonPolicyOutput() PolicyNetworkAclCommonPolicyOutput {
	return i.ToPolicyNetworkAclCommonPolicyOutputWithContext(context.Background())
}

func (i PolicyNetworkAclCommonPolicyArgs) ToPolicyNetworkAclCommonPolicyOutputWithContext(ctx context.Context) PolicyNetworkAclCommonPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclCommonPolicyOutput)
}

func (i PolicyNetworkAclCommonPolicyArgs) ToPolicyNetworkAclCommonPolicyPtrOutput() PolicyNetworkAclCommonPolicyPtrOutput {
	return i.ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyNetworkAclCommonPolicyArgs) ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkAclCommonPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclCommonPolicyOutput).ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(ctx)
}

// PolicyNetworkAclCommonPolicyPtrInput is an input type that accepts PolicyNetworkAclCommonPolicyArgs, PolicyNetworkAclCommonPolicyPtr and PolicyNetworkAclCommonPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyNetworkAclCommonPolicyPtrInput` via:
//
//	        PolicyNetworkAclCommonPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyNetworkAclCommonPolicyPtrInput interface {
	pulumi.Input

	ToPolicyNetworkAclCommonPolicyPtrOutput() PolicyNetworkAclCommonPolicyPtrOutput
	ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(context.Context) PolicyNetworkAclCommonPolicyPtrOutput
}

type policyNetworkAclCommonPolicyPtrType PolicyNetworkAclCommonPolicyArgs

func PolicyNetworkAclCommonPolicyPtr(v *PolicyNetworkAclCommonPolicyArgs) PolicyNetworkAclCommonPolicyPtrInput {
	return (*policyNetworkAclCommonPolicyPtrType)(v)
}

func (*policyNetworkAclCommonPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclCommonPolicy)(nil)).Elem()
}

func (i *policyNetworkAclCommonPolicyPtrType) ToPolicyNetworkAclCommonPolicyPtrOutput() PolicyNetworkAclCommonPolicyPtrOutput {
	return i.ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(context.Background())
}

func (i *policyNetworkAclCommonPolicyPtrType) ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkAclCommonPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclCommonPolicyPtrOutput)
}

// Network ACL common policy.
type PolicyNetworkAclCommonPolicyOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclCommonPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclCommonPolicy)(nil)).Elem()
}

func (o PolicyNetworkAclCommonPolicyOutput) ToPolicyNetworkAclCommonPolicyOutput() PolicyNetworkAclCommonPolicyOutput {
	return o
}

func (o PolicyNetworkAclCommonPolicyOutput) ToPolicyNetworkAclCommonPolicyOutputWithContext(ctx context.Context) PolicyNetworkAclCommonPolicyOutput {
	return o
}

func (o PolicyNetworkAclCommonPolicyOutput) ToPolicyNetworkAclCommonPolicyPtrOutput() PolicyNetworkAclCommonPolicyPtrOutput {
	return o.ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyNetworkAclCommonPolicyOutput) ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkAclCommonPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyNetworkAclCommonPolicy) *PolicyNetworkAclCommonPolicy {
		return &v
	}).(PolicyNetworkAclCommonPolicyPtrOutput)
}

// The definition of the first and last rules for the network ACL policy.
func (o PolicyNetworkAclCommonPolicyOutput) NetworkAclEntrySet() PolicyNetworkAclEntrySetOutput {
	return o.ApplyT(func(v PolicyNetworkAclCommonPolicy) PolicyNetworkAclEntrySet { return v.NetworkAclEntrySet }).(PolicyNetworkAclEntrySetOutput)
}

type PolicyNetworkAclCommonPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclCommonPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclCommonPolicy)(nil)).Elem()
}

func (o PolicyNetworkAclCommonPolicyPtrOutput) ToPolicyNetworkAclCommonPolicyPtrOutput() PolicyNetworkAclCommonPolicyPtrOutput {
	return o
}

func (o PolicyNetworkAclCommonPolicyPtrOutput) ToPolicyNetworkAclCommonPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkAclCommonPolicyPtrOutput {
	return o
}

func (o PolicyNetworkAclCommonPolicyPtrOutput) Elem() PolicyNetworkAclCommonPolicyOutput {
	return o.ApplyT(func(v *PolicyNetworkAclCommonPolicy) PolicyNetworkAclCommonPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyNetworkAclCommonPolicy
		return ret
	}).(PolicyNetworkAclCommonPolicyOutput)
}

// The definition of the first and last rules for the network ACL policy.
func (o PolicyNetworkAclCommonPolicyPtrOutput) NetworkAclEntrySet() PolicyNetworkAclEntrySetPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclCommonPolicy) *PolicyNetworkAclEntrySet {
		if v == nil {
			return nil
		}
		return &v.NetworkAclEntrySet
	}).(PolicyNetworkAclEntrySetPtrOutput)
}

// Network ACL entry.
type PolicyNetworkAclEntry struct {
	// CIDR block.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Whether the entry is an egress entry.
	Egress bool `pulumi:"egress"`
	// ICMP type and code.
	IcmpTypeCode *PolicyNetworkAclEntryIcmpTypeCodeProperties `pulumi:"icmpTypeCode"`
	// IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Port range.
	PortRange *PolicyNetworkAclEntryPortRangeProperties `pulumi:"portRange"`
	// Protocol.
	Protocol string `pulumi:"protocol"`
	// Rule Action.
	RuleAction PolicyNetworkAclEntryRuleAction `pulumi:"ruleAction"`
}

// PolicyNetworkAclEntryInput is an input type that accepts PolicyNetworkAclEntryArgs and PolicyNetworkAclEntryOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntryInput` via:
//
//	PolicyNetworkAclEntryArgs{...}
type PolicyNetworkAclEntryInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntryOutput() PolicyNetworkAclEntryOutput
	ToPolicyNetworkAclEntryOutputWithContext(context.Context) PolicyNetworkAclEntryOutput
}

// Network ACL entry.
type PolicyNetworkAclEntryArgs struct {
	// CIDR block.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Whether the entry is an egress entry.
	Egress pulumi.BoolInput `pulumi:"egress"`
	// ICMP type and code.
	IcmpTypeCode PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrInput `pulumi:"icmpTypeCode"`
	// IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Port range.
	PortRange PolicyNetworkAclEntryPortRangePropertiesPtrInput `pulumi:"portRange"`
	// Protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Rule Action.
	RuleAction PolicyNetworkAclEntryRuleActionInput `pulumi:"ruleAction"`
}

func (PolicyNetworkAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntry)(nil)).Elem()
}

func (i PolicyNetworkAclEntryArgs) ToPolicyNetworkAclEntryOutput() PolicyNetworkAclEntryOutput {
	return i.ToPolicyNetworkAclEntryOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntryArgs) ToPolicyNetworkAclEntryOutputWithContext(ctx context.Context) PolicyNetworkAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryOutput)
}

// PolicyNetworkAclEntryArrayInput is an input type that accepts PolicyNetworkAclEntryArray and PolicyNetworkAclEntryArrayOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntryArrayInput` via:
//
//	PolicyNetworkAclEntryArray{ PolicyNetworkAclEntryArgs{...} }
type PolicyNetworkAclEntryArrayInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntryArrayOutput() PolicyNetworkAclEntryArrayOutput
	ToPolicyNetworkAclEntryArrayOutputWithContext(context.Context) PolicyNetworkAclEntryArrayOutput
}

type PolicyNetworkAclEntryArray []PolicyNetworkAclEntryInput

func (PolicyNetworkAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkAclEntry)(nil)).Elem()
}

func (i PolicyNetworkAclEntryArray) ToPolicyNetworkAclEntryArrayOutput() PolicyNetworkAclEntryArrayOutput {
	return i.ToPolicyNetworkAclEntryArrayOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntryArray) ToPolicyNetworkAclEntryArrayOutputWithContext(ctx context.Context) PolicyNetworkAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryArrayOutput)
}

// Network ACL entry.
type PolicyNetworkAclEntryOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntry)(nil)).Elem()
}

func (o PolicyNetworkAclEntryOutput) ToPolicyNetworkAclEntryOutput() PolicyNetworkAclEntryOutput {
	return o
}

func (o PolicyNetworkAclEntryOutput) ToPolicyNetworkAclEntryOutputWithContext(ctx context.Context) PolicyNetworkAclEntryOutput {
	return o
}

// CIDR block.
func (o PolicyNetworkAclEntryOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Whether the entry is an egress entry.
func (o PolicyNetworkAclEntryOutput) Egress() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) bool { return v.Egress }).(pulumi.BoolOutput)
}

// ICMP type and code.
func (o PolicyNetworkAclEntryOutput) IcmpTypeCode() PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) *PolicyNetworkAclEntryIcmpTypeCodeProperties { return v.IcmpTypeCode }).(PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput)
}

// IPv6 CIDR block.
func (o PolicyNetworkAclEntryOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Port range.
func (o PolicyNetworkAclEntryOutput) PortRange() PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) *PolicyNetworkAclEntryPortRangeProperties { return v.PortRange }).(PolicyNetworkAclEntryPortRangePropertiesPtrOutput)
}

// Protocol.
func (o PolicyNetworkAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

// Rule Action.
func (o PolicyNetworkAclEntryOutput) RuleAction() PolicyNetworkAclEntryRuleActionOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntry) PolicyNetworkAclEntryRuleAction { return v.RuleAction }).(PolicyNetworkAclEntryRuleActionOutput)
}

type PolicyNetworkAclEntryArrayOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkAclEntry)(nil)).Elem()
}

func (o PolicyNetworkAclEntryArrayOutput) ToPolicyNetworkAclEntryArrayOutput() PolicyNetworkAclEntryArrayOutput {
	return o
}

func (o PolicyNetworkAclEntryArrayOutput) ToPolicyNetworkAclEntryArrayOutputWithContext(ctx context.Context) PolicyNetworkAclEntryArrayOutput {
	return o
}

func (o PolicyNetworkAclEntryArrayOutput) Index(i pulumi.IntInput) PolicyNetworkAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNetworkAclEntry {
		return vs[0].([]PolicyNetworkAclEntry)[vs[1].(int)]
	}).(PolicyNetworkAclEntryOutput)
}

// ICMP type and code.
type PolicyNetworkAclEntryIcmpTypeCodeProperties struct {
	// Code.
	Code int `pulumi:"code"`
	// Type.
	Type int `pulumi:"type"`
}

// PolicyNetworkAclEntryIcmpTypeCodePropertiesInput is an input type that accepts PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs and PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntryIcmpTypeCodePropertiesInput` via:
//
//	PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs{...}
type PolicyNetworkAclEntryIcmpTypeCodePropertiesInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput
	ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutputWithContext(context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput
}

// ICMP type and code.
type PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs struct {
	// Code.
	Code pulumi.IntInput `pulumi:"code"`
	// Type.
	Type pulumi.IntInput `pulumi:"type"`
}

func (PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntryIcmpTypeCodeProperties)(nil)).Elem()
}

func (i PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput {
	return i.ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutputWithContext(ctx context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput)
}

func (i PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return i.ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput).ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(ctx)
}

// PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrInput is an input type that accepts PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs, PolicyNetworkAclEntryIcmpTypeCodePropertiesPtr and PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrInput` via:
//
//	        PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs{...}
//
//	or:
//
//	        nil
type PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput
	ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput
}

type policyNetworkAclEntryIcmpTypeCodePropertiesPtrType PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs

func PolicyNetworkAclEntryIcmpTypeCodePropertiesPtr(v *PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs) PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrInput {
	return (*policyNetworkAclEntryIcmpTypeCodePropertiesPtrType)(v)
}

func (*policyNetworkAclEntryIcmpTypeCodePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclEntryIcmpTypeCodeProperties)(nil)).Elem()
}

func (i *policyNetworkAclEntryIcmpTypeCodePropertiesPtrType) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return i.ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(context.Background())
}

func (i *policyNetworkAclEntryIcmpTypeCodePropertiesPtrType) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput)
}

// ICMP type and code.
type PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntryIcmpTypeCodeProperties)(nil)).Elem()
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput {
	return o
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesOutputWithContext(ctx context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput {
	return o
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return o.ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(context.Background())
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyNetworkAclEntryIcmpTypeCodeProperties) *PolicyNetworkAclEntryIcmpTypeCodeProperties {
		return &v
	}).(PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput)
}

// Code.
func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntryIcmpTypeCodeProperties) int { return v.Code }).(pulumi.IntOutput)
}

// Type.
func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntryIcmpTypeCodeProperties) int { return v.Type }).(pulumi.IntOutput)
}

type PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclEntryIcmpTypeCodeProperties)(nil)).Elem()
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput() PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return o
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput) ToPolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput {
	return o
}

func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput) Elem() PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntryIcmpTypeCodeProperties) PolicyNetworkAclEntryIcmpTypeCodeProperties {
		if v != nil {
			return *v
		}
		var ret PolicyNetworkAclEntryIcmpTypeCodeProperties
		return ret
	}).(PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput)
}

// Code.
func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntryIcmpTypeCodeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.IntPtrOutput)
}

// Type.
func (o PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntryIcmpTypeCodeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.IntPtrOutput)
}

// Port range.
type PolicyNetworkAclEntryPortRangeProperties struct {
	// From Port.
	From int `pulumi:"from"`
	// To Port.
	To int `pulumi:"to"`
}

// PolicyNetworkAclEntryPortRangePropertiesInput is an input type that accepts PolicyNetworkAclEntryPortRangePropertiesArgs and PolicyNetworkAclEntryPortRangePropertiesOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntryPortRangePropertiesInput` via:
//
//	PolicyNetworkAclEntryPortRangePropertiesArgs{...}
type PolicyNetworkAclEntryPortRangePropertiesInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntryPortRangePropertiesOutput() PolicyNetworkAclEntryPortRangePropertiesOutput
	ToPolicyNetworkAclEntryPortRangePropertiesOutputWithContext(context.Context) PolicyNetworkAclEntryPortRangePropertiesOutput
}

// Port range.
type PolicyNetworkAclEntryPortRangePropertiesArgs struct {
	// From Port.
	From pulumi.IntInput `pulumi:"from"`
	// To Port.
	To pulumi.IntInput `pulumi:"to"`
}

func (PolicyNetworkAclEntryPortRangePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntryPortRangeProperties)(nil)).Elem()
}

func (i PolicyNetworkAclEntryPortRangePropertiesArgs) ToPolicyNetworkAclEntryPortRangePropertiesOutput() PolicyNetworkAclEntryPortRangePropertiesOutput {
	return i.ToPolicyNetworkAclEntryPortRangePropertiesOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntryPortRangePropertiesArgs) ToPolicyNetworkAclEntryPortRangePropertiesOutputWithContext(ctx context.Context) PolicyNetworkAclEntryPortRangePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryPortRangePropertiesOutput)
}

func (i PolicyNetworkAclEntryPortRangePropertiesArgs) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutput() PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return i.ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntryPortRangePropertiesArgs) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryPortRangePropertiesOutput).ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(ctx)
}

// PolicyNetworkAclEntryPortRangePropertiesPtrInput is an input type that accepts PolicyNetworkAclEntryPortRangePropertiesArgs, PolicyNetworkAclEntryPortRangePropertiesPtr and PolicyNetworkAclEntryPortRangePropertiesPtrOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntryPortRangePropertiesPtrInput` via:
//
//	        PolicyNetworkAclEntryPortRangePropertiesArgs{...}
//
//	or:
//
//	        nil
type PolicyNetworkAclEntryPortRangePropertiesPtrInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntryPortRangePropertiesPtrOutput() PolicyNetworkAclEntryPortRangePropertiesPtrOutput
	ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(context.Context) PolicyNetworkAclEntryPortRangePropertiesPtrOutput
}

type policyNetworkAclEntryPortRangePropertiesPtrType PolicyNetworkAclEntryPortRangePropertiesArgs

func PolicyNetworkAclEntryPortRangePropertiesPtr(v *PolicyNetworkAclEntryPortRangePropertiesArgs) PolicyNetworkAclEntryPortRangePropertiesPtrInput {
	return (*policyNetworkAclEntryPortRangePropertiesPtrType)(v)
}

func (*policyNetworkAclEntryPortRangePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclEntryPortRangeProperties)(nil)).Elem()
}

func (i *policyNetworkAclEntryPortRangePropertiesPtrType) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutput() PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return i.ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(context.Background())
}

func (i *policyNetworkAclEntryPortRangePropertiesPtrType) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntryPortRangePropertiesPtrOutput)
}

// Port range.
type PolicyNetworkAclEntryPortRangePropertiesOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntryPortRangePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntryPortRangeProperties)(nil)).Elem()
}

func (o PolicyNetworkAclEntryPortRangePropertiesOutput) ToPolicyNetworkAclEntryPortRangePropertiesOutput() PolicyNetworkAclEntryPortRangePropertiesOutput {
	return o
}

func (o PolicyNetworkAclEntryPortRangePropertiesOutput) ToPolicyNetworkAclEntryPortRangePropertiesOutputWithContext(ctx context.Context) PolicyNetworkAclEntryPortRangePropertiesOutput {
	return o
}

func (o PolicyNetworkAclEntryPortRangePropertiesOutput) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutput() PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return o.ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(context.Background())
}

func (o PolicyNetworkAclEntryPortRangePropertiesOutput) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyNetworkAclEntryPortRangeProperties) *PolicyNetworkAclEntryPortRangeProperties {
		return &v
	}).(PolicyNetworkAclEntryPortRangePropertiesPtrOutput)
}

// From Port.
func (o PolicyNetworkAclEntryPortRangePropertiesOutput) From() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntryPortRangeProperties) int { return v.From }).(pulumi.IntOutput)
}

// To Port.
func (o PolicyNetworkAclEntryPortRangePropertiesOutput) To() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntryPortRangeProperties) int { return v.To }).(pulumi.IntOutput)
}

type PolicyNetworkAclEntryPortRangePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntryPortRangePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclEntryPortRangeProperties)(nil)).Elem()
}

func (o PolicyNetworkAclEntryPortRangePropertiesPtrOutput) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutput() PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return o
}

func (o PolicyNetworkAclEntryPortRangePropertiesPtrOutput) ToPolicyNetworkAclEntryPortRangePropertiesPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntryPortRangePropertiesPtrOutput {
	return o
}

func (o PolicyNetworkAclEntryPortRangePropertiesPtrOutput) Elem() PolicyNetworkAclEntryPortRangePropertiesOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntryPortRangeProperties) PolicyNetworkAclEntryPortRangeProperties {
		if v != nil {
			return *v
		}
		var ret PolicyNetworkAclEntryPortRangeProperties
		return ret
	}).(PolicyNetworkAclEntryPortRangePropertiesOutput)
}

// From Port.
func (o PolicyNetworkAclEntryPortRangePropertiesPtrOutput) From() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntryPortRangeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.From
	}).(pulumi.IntPtrOutput)
}

// To Port.
func (o PolicyNetworkAclEntryPortRangePropertiesPtrOutput) To() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntryPortRangeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.To
	}).(pulumi.IntPtrOutput)
}

// Network ACL entry set.
type PolicyNetworkAclEntrySet struct {
	// The rules that you want to run first in the Firewall Manager managed network ACLs.
	//
	// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
	//
	// You must specify at least one first entry or one last entry in any network ACL policy.
	FirstEntries []PolicyNetworkAclEntry `pulumi:"firstEntries"`
	// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
	//
	// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
	ForceRemediateForFirstEntries bool `pulumi:"forceRemediateForFirstEntries"`
	// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
	//
	// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
	ForceRemediateForLastEntries bool `pulumi:"forceRemediateForLastEntries"`
	// The rules that you want to run last in the Firewall Manager managed network ACLs.
	//
	// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
	//
	// You must specify at least one first entry or one last entry in any network ACL policy.
	LastEntries []PolicyNetworkAclEntry `pulumi:"lastEntries"`
}

// PolicyNetworkAclEntrySetInput is an input type that accepts PolicyNetworkAclEntrySetArgs and PolicyNetworkAclEntrySetOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntrySetInput` via:
//
//	PolicyNetworkAclEntrySetArgs{...}
type PolicyNetworkAclEntrySetInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntrySetOutput() PolicyNetworkAclEntrySetOutput
	ToPolicyNetworkAclEntrySetOutputWithContext(context.Context) PolicyNetworkAclEntrySetOutput
}

// Network ACL entry set.
type PolicyNetworkAclEntrySetArgs struct {
	// The rules that you want to run first in the Firewall Manager managed network ACLs.
	//
	// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
	//
	// You must specify at least one first entry or one last entry in any network ACL policy.
	FirstEntries PolicyNetworkAclEntryArrayInput `pulumi:"firstEntries"`
	// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
	//
	// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
	ForceRemediateForFirstEntries pulumi.BoolInput `pulumi:"forceRemediateForFirstEntries"`
	// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
	//
	// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
	ForceRemediateForLastEntries pulumi.BoolInput `pulumi:"forceRemediateForLastEntries"`
	// The rules that you want to run last in the Firewall Manager managed network ACLs.
	//
	// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
	//
	// You must specify at least one first entry or one last entry in any network ACL policy.
	LastEntries PolicyNetworkAclEntryArrayInput `pulumi:"lastEntries"`
}

func (PolicyNetworkAclEntrySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntrySet)(nil)).Elem()
}

func (i PolicyNetworkAclEntrySetArgs) ToPolicyNetworkAclEntrySetOutput() PolicyNetworkAclEntrySetOutput {
	return i.ToPolicyNetworkAclEntrySetOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntrySetArgs) ToPolicyNetworkAclEntrySetOutputWithContext(ctx context.Context) PolicyNetworkAclEntrySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntrySetOutput)
}

func (i PolicyNetworkAclEntrySetArgs) ToPolicyNetworkAclEntrySetPtrOutput() PolicyNetworkAclEntrySetPtrOutput {
	return i.ToPolicyNetworkAclEntrySetPtrOutputWithContext(context.Background())
}

func (i PolicyNetworkAclEntrySetArgs) ToPolicyNetworkAclEntrySetPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntrySetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntrySetOutput).ToPolicyNetworkAclEntrySetPtrOutputWithContext(ctx)
}

// PolicyNetworkAclEntrySetPtrInput is an input type that accepts PolicyNetworkAclEntrySetArgs, PolicyNetworkAclEntrySetPtr and PolicyNetworkAclEntrySetPtrOutput values.
// You can construct a concrete instance of `PolicyNetworkAclEntrySetPtrInput` via:
//
//	        PolicyNetworkAclEntrySetArgs{...}
//
//	or:
//
//	        nil
type PolicyNetworkAclEntrySetPtrInput interface {
	pulumi.Input

	ToPolicyNetworkAclEntrySetPtrOutput() PolicyNetworkAclEntrySetPtrOutput
	ToPolicyNetworkAclEntrySetPtrOutputWithContext(context.Context) PolicyNetworkAclEntrySetPtrOutput
}

type policyNetworkAclEntrySetPtrType PolicyNetworkAclEntrySetArgs

func PolicyNetworkAclEntrySetPtr(v *PolicyNetworkAclEntrySetArgs) PolicyNetworkAclEntrySetPtrInput {
	return (*policyNetworkAclEntrySetPtrType)(v)
}

func (*policyNetworkAclEntrySetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclEntrySet)(nil)).Elem()
}

func (i *policyNetworkAclEntrySetPtrType) ToPolicyNetworkAclEntrySetPtrOutput() PolicyNetworkAclEntrySetPtrOutput {
	return i.ToPolicyNetworkAclEntrySetPtrOutputWithContext(context.Background())
}

func (i *policyNetworkAclEntrySetPtrType) ToPolicyNetworkAclEntrySetPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntrySetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkAclEntrySetPtrOutput)
}

// Network ACL entry set.
type PolicyNetworkAclEntrySetOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntrySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkAclEntrySet)(nil)).Elem()
}

func (o PolicyNetworkAclEntrySetOutput) ToPolicyNetworkAclEntrySetOutput() PolicyNetworkAclEntrySetOutput {
	return o
}

func (o PolicyNetworkAclEntrySetOutput) ToPolicyNetworkAclEntrySetOutputWithContext(ctx context.Context) PolicyNetworkAclEntrySetOutput {
	return o
}

func (o PolicyNetworkAclEntrySetOutput) ToPolicyNetworkAclEntrySetPtrOutput() PolicyNetworkAclEntrySetPtrOutput {
	return o.ToPolicyNetworkAclEntrySetPtrOutputWithContext(context.Background())
}

func (o PolicyNetworkAclEntrySetOutput) ToPolicyNetworkAclEntrySetPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntrySetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyNetworkAclEntrySet) *PolicyNetworkAclEntrySet {
		return &v
	}).(PolicyNetworkAclEntrySetPtrOutput)
}

// The rules that you want to run first in the Firewall Manager managed network ACLs.
//
// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
//
// You must specify at least one first entry or one last entry in any network ACL policy.
func (o PolicyNetworkAclEntrySetOutput) FirstEntries() PolicyNetworkAclEntryArrayOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntrySet) []PolicyNetworkAclEntry { return v.FirstEntries }).(PolicyNetworkAclEntryArrayOutput)
}

// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
//
// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
func (o PolicyNetworkAclEntrySetOutput) ForceRemediateForFirstEntries() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntrySet) bool { return v.ForceRemediateForFirstEntries }).(pulumi.BoolOutput)
}

// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
//
// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
func (o PolicyNetworkAclEntrySetOutput) ForceRemediateForLastEntries() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntrySet) bool { return v.ForceRemediateForLastEntries }).(pulumi.BoolOutput)
}

// The rules that you want to run last in the Firewall Manager managed network ACLs.
//
// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
//
// You must specify at least one first entry or one last entry in any network ACL policy.
func (o PolicyNetworkAclEntrySetOutput) LastEntries() PolicyNetworkAclEntryArrayOutput {
	return o.ApplyT(func(v PolicyNetworkAclEntrySet) []PolicyNetworkAclEntry { return v.LastEntries }).(PolicyNetworkAclEntryArrayOutput)
}

type PolicyNetworkAclEntrySetPtrOutput struct{ *pulumi.OutputState }

func (PolicyNetworkAclEntrySetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkAclEntrySet)(nil)).Elem()
}

func (o PolicyNetworkAclEntrySetPtrOutput) ToPolicyNetworkAclEntrySetPtrOutput() PolicyNetworkAclEntrySetPtrOutput {
	return o
}

func (o PolicyNetworkAclEntrySetPtrOutput) ToPolicyNetworkAclEntrySetPtrOutputWithContext(ctx context.Context) PolicyNetworkAclEntrySetPtrOutput {
	return o
}

func (o PolicyNetworkAclEntrySetPtrOutput) Elem() PolicyNetworkAclEntrySetOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntrySet) PolicyNetworkAclEntrySet {
		if v != nil {
			return *v
		}
		var ret PolicyNetworkAclEntrySet
		return ret
	}).(PolicyNetworkAclEntrySetOutput)
}

// The rules that you want to run first in the Firewall Manager managed network ACLs.
//
// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
//
// You must specify at least one first entry or one last entry in any network ACL policy.
func (o PolicyNetworkAclEntrySetPtrOutput) FirstEntries() PolicyNetworkAclEntryArrayOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntrySet) []PolicyNetworkAclEntry {
		if v == nil {
			return nil
		}
		return v.FirstEntries
	}).(PolicyNetworkAclEntryArrayOutput)
}

// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
//
// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
func (o PolicyNetworkAclEntrySetPtrOutput) ForceRemediateForFirstEntries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntrySet) *bool {
		if v == nil {
			return nil
		}
		return &v.ForceRemediateForFirstEntries
	}).(pulumi.BoolPtrOutput)
}

// Applies only when remediation is enabled for the policy as a whole. Firewall Manager uses this setting when it finds policy violations that involve conflicts between the custom entries and the policy entries.
//
// If forced remediation is disabled, Firewall Manager marks the network ACL as noncompliant and does not try to remediate. For more information about the remediation behavior, see [Remediation for managed network ACLs](https://docs.aws.amazon.com/waf/latest/developerguide/network-acl-policies.html#network-acls-remediation) in the *AWS Firewall Manager Developer Guide* .
func (o PolicyNetworkAclEntrySetPtrOutput) ForceRemediateForLastEntries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntrySet) *bool {
		if v == nil {
			return nil
		}
		return &v.ForceRemediateForLastEntries
	}).(pulumi.BoolPtrOutput)
}

// The rules that you want to run last in the Firewall Manager managed network ACLs.
//
// > Provide these in the order in which you want them to run. Firewall Manager will assign the specific rule numbers for you, in the network ACLs that it creates.
//
// You must specify at least one first entry or one last entry in any network ACL policy.
func (o PolicyNetworkAclEntrySetPtrOutput) LastEntries() PolicyNetworkAclEntryArrayOutput {
	return o.ApplyT(func(v *PolicyNetworkAclEntrySet) []PolicyNetworkAclEntry {
		if v == nil {
			return nil
		}
		return v.LastEntries
	}).(PolicyNetworkAclEntryArrayOutput)
}

// Network firewall policy.
type PolicyNetworkFirewallPolicy struct {
	// Defines the deployment model to use for the firewall policy. To use a distributed model, set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
	FirewallDeploymentModel PolicyFirewallDeploymentModel `pulumi:"firewallDeploymentModel"`
}

// PolicyNetworkFirewallPolicyInput is an input type that accepts PolicyNetworkFirewallPolicyArgs and PolicyNetworkFirewallPolicyOutput values.
// You can construct a concrete instance of `PolicyNetworkFirewallPolicyInput` via:
//
//	PolicyNetworkFirewallPolicyArgs{...}
type PolicyNetworkFirewallPolicyInput interface {
	pulumi.Input

	ToPolicyNetworkFirewallPolicyOutput() PolicyNetworkFirewallPolicyOutput
	ToPolicyNetworkFirewallPolicyOutputWithContext(context.Context) PolicyNetworkFirewallPolicyOutput
}

// Network firewall policy.
type PolicyNetworkFirewallPolicyArgs struct {
	// Defines the deployment model to use for the firewall policy. To use a distributed model, set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
	FirewallDeploymentModel PolicyFirewallDeploymentModelInput `pulumi:"firewallDeploymentModel"`
}

func (PolicyNetworkFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkFirewallPolicy)(nil)).Elem()
}

func (i PolicyNetworkFirewallPolicyArgs) ToPolicyNetworkFirewallPolicyOutput() PolicyNetworkFirewallPolicyOutput {
	return i.ToPolicyNetworkFirewallPolicyOutputWithContext(context.Background())
}

func (i PolicyNetworkFirewallPolicyArgs) ToPolicyNetworkFirewallPolicyOutputWithContext(ctx context.Context) PolicyNetworkFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkFirewallPolicyOutput)
}

func (i PolicyNetworkFirewallPolicyArgs) ToPolicyNetworkFirewallPolicyPtrOutput() PolicyNetworkFirewallPolicyPtrOutput {
	return i.ToPolicyNetworkFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyNetworkFirewallPolicyArgs) ToPolicyNetworkFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkFirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkFirewallPolicyOutput).ToPolicyNetworkFirewallPolicyPtrOutputWithContext(ctx)
}

// PolicyNetworkFirewallPolicyPtrInput is an input type that accepts PolicyNetworkFirewallPolicyArgs, PolicyNetworkFirewallPolicyPtr and PolicyNetworkFirewallPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyNetworkFirewallPolicyPtrInput` via:
//
//	        PolicyNetworkFirewallPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyNetworkFirewallPolicyPtrInput interface {
	pulumi.Input

	ToPolicyNetworkFirewallPolicyPtrOutput() PolicyNetworkFirewallPolicyPtrOutput
	ToPolicyNetworkFirewallPolicyPtrOutputWithContext(context.Context) PolicyNetworkFirewallPolicyPtrOutput
}

type policyNetworkFirewallPolicyPtrType PolicyNetworkFirewallPolicyArgs

func PolicyNetworkFirewallPolicyPtr(v *PolicyNetworkFirewallPolicyArgs) PolicyNetworkFirewallPolicyPtrInput {
	return (*policyNetworkFirewallPolicyPtrType)(v)
}

func (*policyNetworkFirewallPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkFirewallPolicy)(nil)).Elem()
}

func (i *policyNetworkFirewallPolicyPtrType) ToPolicyNetworkFirewallPolicyPtrOutput() PolicyNetworkFirewallPolicyPtrOutput {
	return i.ToPolicyNetworkFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i *policyNetworkFirewallPolicyPtrType) ToPolicyNetworkFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkFirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkFirewallPolicyPtrOutput)
}

// Network firewall policy.
type PolicyNetworkFirewallPolicyOutput struct{ *pulumi.OutputState }

func (PolicyNetworkFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkFirewallPolicy)(nil)).Elem()
}

func (o PolicyNetworkFirewallPolicyOutput) ToPolicyNetworkFirewallPolicyOutput() PolicyNetworkFirewallPolicyOutput {
	return o
}

func (o PolicyNetworkFirewallPolicyOutput) ToPolicyNetworkFirewallPolicyOutputWithContext(ctx context.Context) PolicyNetworkFirewallPolicyOutput {
	return o
}

func (o PolicyNetworkFirewallPolicyOutput) ToPolicyNetworkFirewallPolicyPtrOutput() PolicyNetworkFirewallPolicyPtrOutput {
	return o.ToPolicyNetworkFirewallPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyNetworkFirewallPolicyOutput) ToPolicyNetworkFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkFirewallPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyNetworkFirewallPolicy) *PolicyNetworkFirewallPolicy {
		return &v
	}).(PolicyNetworkFirewallPolicyPtrOutput)
}

// Defines the deployment model to use for the firewall policy. To use a distributed model, set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
func (o PolicyNetworkFirewallPolicyOutput) FirewallDeploymentModel() PolicyFirewallDeploymentModelOutput {
	return o.ApplyT(func(v PolicyNetworkFirewallPolicy) PolicyFirewallDeploymentModel { return v.FirewallDeploymentModel }).(PolicyFirewallDeploymentModelOutput)
}

type PolicyNetworkFirewallPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyNetworkFirewallPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyNetworkFirewallPolicy)(nil)).Elem()
}

func (o PolicyNetworkFirewallPolicyPtrOutput) ToPolicyNetworkFirewallPolicyPtrOutput() PolicyNetworkFirewallPolicyPtrOutput {
	return o
}

func (o PolicyNetworkFirewallPolicyPtrOutput) ToPolicyNetworkFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyNetworkFirewallPolicyPtrOutput {
	return o
}

func (o PolicyNetworkFirewallPolicyPtrOutput) Elem() PolicyNetworkFirewallPolicyOutput {
	return o.ApplyT(func(v *PolicyNetworkFirewallPolicy) PolicyNetworkFirewallPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyNetworkFirewallPolicy
		return ret
	}).(PolicyNetworkFirewallPolicyOutput)
}

// Defines the deployment model to use for the firewall policy. To use a distributed model, set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
func (o PolicyNetworkFirewallPolicyPtrOutput) FirewallDeploymentModel() PolicyFirewallDeploymentModelPtrOutput {
	return o.ApplyT(func(v *PolicyNetworkFirewallPolicy) *PolicyFirewallDeploymentModel {
		if v == nil {
			return nil
		}
		return &v.FirewallDeploymentModel
	}).(PolicyFirewallDeploymentModelPtrOutput)
}

// Firewall policy option.
type PolicyOption struct {
	// Defines a Firewall Manager network ACL policy.
	NetworkAclCommonPolicy *PolicyNetworkAclCommonPolicy `pulumi:"networkAclCommonPolicy"`
	// Defines the deployment model to use for the firewall policy.
	NetworkFirewallPolicy *PolicyNetworkFirewallPolicy `pulumi:"networkFirewallPolicy"`
	// Defines the policy options for a third-party firewall policy.
	ThirdPartyFirewallPolicy *PolicyThirdPartyFirewallPolicy `pulumi:"thirdPartyFirewallPolicy"`
}

// PolicyOptionInput is an input type that accepts PolicyOptionArgs and PolicyOptionOutput values.
// You can construct a concrete instance of `PolicyOptionInput` via:
//
//	PolicyOptionArgs{...}
type PolicyOptionInput interface {
	pulumi.Input

	ToPolicyOptionOutput() PolicyOptionOutput
	ToPolicyOptionOutputWithContext(context.Context) PolicyOptionOutput
}

// Firewall policy option.
type PolicyOptionArgs struct {
	// Defines a Firewall Manager network ACL policy.
	NetworkAclCommonPolicy PolicyNetworkAclCommonPolicyPtrInput `pulumi:"networkAclCommonPolicy"`
	// Defines the deployment model to use for the firewall policy.
	NetworkFirewallPolicy PolicyNetworkFirewallPolicyPtrInput `pulumi:"networkFirewallPolicy"`
	// Defines the policy options for a third-party firewall policy.
	ThirdPartyFirewallPolicy PolicyThirdPartyFirewallPolicyPtrInput `pulumi:"thirdPartyFirewallPolicy"`
}

func (PolicyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyOption)(nil)).Elem()
}

func (i PolicyOptionArgs) ToPolicyOptionOutput() PolicyOptionOutput {
	return i.ToPolicyOptionOutputWithContext(context.Background())
}

func (i PolicyOptionArgs) ToPolicyOptionOutputWithContext(ctx context.Context) PolicyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionOutput)
}

func (i PolicyOptionArgs) ToPolicyOptionPtrOutput() PolicyOptionPtrOutput {
	return i.ToPolicyOptionPtrOutputWithContext(context.Background())
}

func (i PolicyOptionArgs) ToPolicyOptionPtrOutputWithContext(ctx context.Context) PolicyOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionOutput).ToPolicyOptionPtrOutputWithContext(ctx)
}

// PolicyOptionPtrInput is an input type that accepts PolicyOptionArgs, PolicyOptionPtr and PolicyOptionPtrOutput values.
// You can construct a concrete instance of `PolicyOptionPtrInput` via:
//
//	        PolicyOptionArgs{...}
//
//	or:
//
//	        nil
type PolicyOptionPtrInput interface {
	pulumi.Input

	ToPolicyOptionPtrOutput() PolicyOptionPtrOutput
	ToPolicyOptionPtrOutputWithContext(context.Context) PolicyOptionPtrOutput
}

type policyOptionPtrType PolicyOptionArgs

func PolicyOptionPtr(v *PolicyOptionArgs) PolicyOptionPtrInput {
	return (*policyOptionPtrType)(v)
}

func (*policyOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyOption)(nil)).Elem()
}

func (i *policyOptionPtrType) ToPolicyOptionPtrOutput() PolicyOptionPtrOutput {
	return i.ToPolicyOptionPtrOutputWithContext(context.Background())
}

func (i *policyOptionPtrType) ToPolicyOptionPtrOutputWithContext(ctx context.Context) PolicyOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionPtrOutput)
}

// Firewall policy option.
type PolicyOptionOutput struct{ *pulumi.OutputState }

func (PolicyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyOption)(nil)).Elem()
}

func (o PolicyOptionOutput) ToPolicyOptionOutput() PolicyOptionOutput {
	return o
}

func (o PolicyOptionOutput) ToPolicyOptionOutputWithContext(ctx context.Context) PolicyOptionOutput {
	return o
}

func (o PolicyOptionOutput) ToPolicyOptionPtrOutput() PolicyOptionPtrOutput {
	return o.ToPolicyOptionPtrOutputWithContext(context.Background())
}

func (o PolicyOptionOutput) ToPolicyOptionPtrOutputWithContext(ctx context.Context) PolicyOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyOption) *PolicyOption {
		return &v
	}).(PolicyOptionPtrOutput)
}

// Defines a Firewall Manager network ACL policy.
func (o PolicyOptionOutput) NetworkAclCommonPolicy() PolicyNetworkAclCommonPolicyPtrOutput {
	return o.ApplyT(func(v PolicyOption) *PolicyNetworkAclCommonPolicy { return v.NetworkAclCommonPolicy }).(PolicyNetworkAclCommonPolicyPtrOutput)
}

// Defines the deployment model to use for the firewall policy.
func (o PolicyOptionOutput) NetworkFirewallPolicy() PolicyNetworkFirewallPolicyPtrOutput {
	return o.ApplyT(func(v PolicyOption) *PolicyNetworkFirewallPolicy { return v.NetworkFirewallPolicy }).(PolicyNetworkFirewallPolicyPtrOutput)
}

// Defines the policy options for a third-party firewall policy.
func (o PolicyOptionOutput) ThirdPartyFirewallPolicy() PolicyThirdPartyFirewallPolicyPtrOutput {
	return o.ApplyT(func(v PolicyOption) *PolicyThirdPartyFirewallPolicy { return v.ThirdPartyFirewallPolicy }).(PolicyThirdPartyFirewallPolicyPtrOutput)
}

type PolicyOptionPtrOutput struct{ *pulumi.OutputState }

func (PolicyOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyOption)(nil)).Elem()
}

func (o PolicyOptionPtrOutput) ToPolicyOptionPtrOutput() PolicyOptionPtrOutput {
	return o
}

func (o PolicyOptionPtrOutput) ToPolicyOptionPtrOutputWithContext(ctx context.Context) PolicyOptionPtrOutput {
	return o
}

func (o PolicyOptionPtrOutput) Elem() PolicyOptionOutput {
	return o.ApplyT(func(v *PolicyOption) PolicyOption {
		if v != nil {
			return *v
		}
		var ret PolicyOption
		return ret
	}).(PolicyOptionOutput)
}

// Defines a Firewall Manager network ACL policy.
func (o PolicyOptionPtrOutput) NetworkAclCommonPolicy() PolicyNetworkAclCommonPolicyPtrOutput {
	return o.ApplyT(func(v *PolicyOption) *PolicyNetworkAclCommonPolicy {
		if v == nil {
			return nil
		}
		return v.NetworkAclCommonPolicy
	}).(PolicyNetworkAclCommonPolicyPtrOutput)
}

// Defines the deployment model to use for the firewall policy.
func (o PolicyOptionPtrOutput) NetworkFirewallPolicy() PolicyNetworkFirewallPolicyPtrOutput {
	return o.ApplyT(func(v *PolicyOption) *PolicyNetworkFirewallPolicy {
		if v == nil {
			return nil
		}
		return v.NetworkFirewallPolicy
	}).(PolicyNetworkFirewallPolicyPtrOutput)
}

// Defines the policy options for a third-party firewall policy.
func (o PolicyOptionPtrOutput) ThirdPartyFirewallPolicy() PolicyThirdPartyFirewallPolicyPtrOutput {
	return o.ApplyT(func(v *PolicyOption) *PolicyThirdPartyFirewallPolicy {
		if v == nil {
			return nil
		}
		return v.ThirdPartyFirewallPolicy
	}).(PolicyThirdPartyFirewallPolicyPtrOutput)
}

// A resource tag.
type PolicyResourceTag struct {
	// The resource tag key.
	Key string `pulumi:"key"`
	// The resource tag value.
	Value *string `pulumi:"value"`
}

// PolicyResourceTagInput is an input type that accepts PolicyResourceTagArgs and PolicyResourceTagOutput values.
// You can construct a concrete instance of `PolicyResourceTagInput` via:
//
//	PolicyResourceTagArgs{...}
type PolicyResourceTagInput interface {
	pulumi.Input

	ToPolicyResourceTagOutput() PolicyResourceTagOutput
	ToPolicyResourceTagOutputWithContext(context.Context) PolicyResourceTagOutput
}

// A resource tag.
type PolicyResourceTagArgs struct {
	// The resource tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The resource tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PolicyResourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyResourceTag)(nil)).Elem()
}

func (i PolicyResourceTagArgs) ToPolicyResourceTagOutput() PolicyResourceTagOutput {
	return i.ToPolicyResourceTagOutputWithContext(context.Background())
}

func (i PolicyResourceTagArgs) ToPolicyResourceTagOutputWithContext(ctx context.Context) PolicyResourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyResourceTagOutput)
}

// PolicyResourceTagArrayInput is an input type that accepts PolicyResourceTagArray and PolicyResourceTagArrayOutput values.
// You can construct a concrete instance of `PolicyResourceTagArrayInput` via:
//
//	PolicyResourceTagArray{ PolicyResourceTagArgs{...} }
type PolicyResourceTagArrayInput interface {
	pulumi.Input

	ToPolicyResourceTagArrayOutput() PolicyResourceTagArrayOutput
	ToPolicyResourceTagArrayOutputWithContext(context.Context) PolicyResourceTagArrayOutput
}

type PolicyResourceTagArray []PolicyResourceTagInput

func (PolicyResourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyResourceTag)(nil)).Elem()
}

func (i PolicyResourceTagArray) ToPolicyResourceTagArrayOutput() PolicyResourceTagArrayOutput {
	return i.ToPolicyResourceTagArrayOutputWithContext(context.Background())
}

func (i PolicyResourceTagArray) ToPolicyResourceTagArrayOutputWithContext(ctx context.Context) PolicyResourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyResourceTagArrayOutput)
}

// A resource tag.
type PolicyResourceTagOutput struct{ *pulumi.OutputState }

func (PolicyResourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyResourceTag)(nil)).Elem()
}

func (o PolicyResourceTagOutput) ToPolicyResourceTagOutput() PolicyResourceTagOutput {
	return o
}

func (o PolicyResourceTagOutput) ToPolicyResourceTagOutputWithContext(ctx context.Context) PolicyResourceTagOutput {
	return o
}

// The resource tag key.
func (o PolicyResourceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyResourceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The resource tag value.
func (o PolicyResourceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyResourceTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PolicyResourceTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyResourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyResourceTag)(nil)).Elem()
}

func (o PolicyResourceTagArrayOutput) ToPolicyResourceTagArrayOutput() PolicyResourceTagArrayOutput {
	return o
}

func (o PolicyResourceTagArrayOutput) ToPolicyResourceTagArrayOutputWithContext(ctx context.Context) PolicyResourceTagArrayOutput {
	return o
}

func (o PolicyResourceTagArrayOutput) Index(i pulumi.IntInput) PolicyResourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyResourceTag {
		return vs[0].([]PolicyResourceTag)[vs[1].(int)]
	}).(PolicyResourceTagOutput)
}

// Firewall security service policy data.
type PolicySecurityServicePolicyData struct {
	// Details about the service that are specific to the service type, in JSON format.
	//
	// - Example: `DNS_FIREWALL`
	//
	// `"{\"type\":\"DNS_FIREWALL\",\"preProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-1\",\"priority\":10}],\"postProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-2\",\"priority\":9911}]}"`
	//
	// > Valid values for `preProcessRuleGroups` are between 1 and 99. Valid values for `postProcessRuleGroups` are between 9901 and 10000.
	// - Example: `NETWORK_FIREWALL` - Centralized deployment model
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"awsNetworkFirewallConfig\":{\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}},\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"OFF\"},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
	//
	// With automatic Availbility Zone configuration, Firewall Manager chooses which Availability Zones to create the endpoints in. To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration and route management
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"]},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\": \"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\", \"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{ \"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[ \"10.0.0.0/28\"]}]} },\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"OFF\",\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
	//
	// With custom Availability Zone configuration, you define which specific Availability Zones to create endpoints in by configuring `firewallCreationConfig` . To configure the Availability Zones in `firewallCreationConfig` , specify either the `availabilityZoneName` or `availabilityZoneId` parameter, not both parameters.
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration and route management
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"],\"routeManagementConfig\":{\"allowCrossAZTrafficIfNoEndpoint\":true}},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall centralized deployment model
	//
	// `"{ \"type\":\"THIRD_PARTY_FIREWALL\", \"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\", \"thirdPartyFirewallConfig\":{ \"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `CENTRALIZED` .
	// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall distributed deployment model
	//
	// `"{\"type\":\"THIRD_PARTY_FIREWALL\",\"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\",\"thirdPartyFirewallConfig\":{\"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{ \"distributedFirewallDeploymentModel\":{ \"distributedFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{ \"availabilityZoneConfigList\":[ {\"availabilityZoneName\":\"${AvailabilityZone}\" } ] } }, \"allowedIPV4CidrList\":[ ] } } } }"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
	// - Specification for `SHIELD_ADVANCED` for Amazon CloudFront distributions
	//
	// `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED|IGNORED|DISABLED\", \"automaticResponseAction\":\"BLOCK|COUNT\"}, \"overrideCustomerWebaclClassic\":true|false}"`
	//
	// For example: `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED\", \"automaticResponseAction\":\"COUNT\"}}"`
	//
	// The default value for `automaticResponseStatus` is `IGNORED` . The value for `automaticResponseAction` is only required when `automaticResponseStatus` is set to `ENABLED` . The default value for `overrideCustomerWebaclClassic` is `false` .
	//
	// For other resource types that you can protect with a Shield Advanced policy, this `ManagedServiceData` configuration is an empty string.
	// - Example: `WAFV2`
	//
	// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"version\":null,\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesAmazonIpReputationList\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
	//
	// In the `loggingConfiguration` , you can specify one `logDestinationConfigs` , you can optionally provide up to 20 `redactedFields` , and the `RedactedFieldType` must be one of `URI` , `QUERY_STRING` , `HEADER` , or `METHOD` .
	// - Example: `AWS WAF Classic`
	//
	// `"{\"type\": \"WAF\", \"ruleGroups\": [{\"id\":\"12345678-1bcd-9012-efga-0987654321ab\", \"overrideAction\" : {\"type\": \"COUNT\"}}], \"defaultAction\": {\"type\": \"BLOCK\"}}"`
	// - Example: `WAFV2` - AWS Firewall Manager support for AWS WAF managed rule group versioning
	//
	// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"versionEnabled\":true,\"version\":\"Version_2.0\",\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesCommonRuleSet\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
	//
	// To use a specific version of a AWS WAF managed rule group in your Firewall Manager policy, you must set `versionEnabled` to `true` , and set `version` to the version you'd like to use. If you don't set `versionEnabled` to `true` , or if you omit `versionEnabled` , then Firewall Manager uses the default version of the AWS WAF managed rule group.
	// - Example: `SECURITY_GROUPS_COMMON`
	//
	// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
	// - Example: Shared VPCs. Apply the preceding policy to resources in shared VPCs as well as to those in VPCs that the account owns
	//
	// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"includeSharedVPC\":true,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
	// - Example: `SECURITY_GROUPS_CONTENT_AUDIT`
	//
	// `"{\"type\":\"SECURITY_GROUPS_CONTENT_AUDIT\",\"securityGroups\":[{\"id\":\"sg-000e55995d61a06bd\"}],\"securityGroupAction\":{\"type\":\"ALLOW\"}}"`
	//
	// The security group action for content audit can be `ALLOW` or `DENY` . For `ALLOW` , all in-scope security group rules must be within the allowed range of the policy's security group rules. For `DENY` , all in-scope security group rules must not contain a value or a range that matches a rule value or range in the policy security group.
	// - Example: `SECURITY_GROUPS_USAGE_AUDIT`
	//
	// `"{\"type\":\"SECURITY_GROUPS_USAGE_AUDIT\",\"deleteUnusedSecurityGroups\":true,\"coalesceRedundantSecurityGroups\":true}"`
	ManagedServiceData *string `pulumi:"managedServiceData"`
	// Contains the settings to configure a network ACL policy, a AWS Network Firewall firewall policy deployment model, or a third-party firewall policy.
	PolicyOption *PolicyOption `pulumi:"policyOption"`
	// The service that the policy is using to protect the resources. This specifies the type of policy that is created, either an AWS WAF policy, a Shield Advanced policy, or a security group policy. For security group policies, Firewall Manager supports one security group for each common policy and for each content audit policy. This is an adjustable limit that you can increase by contacting AWS Support .
	Type PolicyType `pulumi:"type"`
}

// PolicySecurityServicePolicyDataInput is an input type that accepts PolicySecurityServicePolicyDataArgs and PolicySecurityServicePolicyDataOutput values.
// You can construct a concrete instance of `PolicySecurityServicePolicyDataInput` via:
//
//	PolicySecurityServicePolicyDataArgs{...}
type PolicySecurityServicePolicyDataInput interface {
	pulumi.Input

	ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput
	ToPolicySecurityServicePolicyDataOutputWithContext(context.Context) PolicySecurityServicePolicyDataOutput
}

// Firewall security service policy data.
type PolicySecurityServicePolicyDataArgs struct {
	// Details about the service that are specific to the service type, in JSON format.
	//
	// - Example: `DNS_FIREWALL`
	//
	// `"{\"type\":\"DNS_FIREWALL\",\"preProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-1\",\"priority\":10}],\"postProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-2\",\"priority\":9911}]}"`
	//
	// > Valid values for `preProcessRuleGroups` are between 1 and 99. Valid values for `postProcessRuleGroups` are between 9901 and 10000.
	// - Example: `NETWORK_FIREWALL` - Centralized deployment model
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"awsNetworkFirewallConfig\":{\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}},\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"OFF\"},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
	//
	// With automatic Availbility Zone configuration, Firewall Manager chooses which Availability Zones to create the endpoints in. To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration and route management
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"]},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\": \"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\", \"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{ \"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[ \"10.0.0.0/28\"]}]} },\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"OFF\",\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
	//
	// With custom Availability Zone configuration, you define which specific Availability Zones to create endpoints in by configuring `firewallCreationConfig` . To configure the Availability Zones in `firewallCreationConfig` , specify either the `availabilityZoneName` or `availabilityZoneId` parameter, not both parameters.
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration and route management
	//
	// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"],\"routeManagementConfig\":{\"allowCrossAZTrafficIfNoEndpoint\":true}},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
	// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall centralized deployment model
	//
	// `"{ \"type\":\"THIRD_PARTY_FIREWALL\", \"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\", \"thirdPartyFirewallConfig\":{ \"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `CENTRALIZED` .
	// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall distributed deployment model
	//
	// `"{\"type\":\"THIRD_PARTY_FIREWALL\",\"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\",\"thirdPartyFirewallConfig\":{\"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{ \"distributedFirewallDeploymentModel\":{ \"distributedFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{ \"availabilityZoneConfigList\":[ {\"availabilityZoneName\":\"${AvailabilityZone}\" } ] } }, \"allowedIPV4CidrList\":[ ] } } } }"`
	//
	// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
	// - Specification for `SHIELD_ADVANCED` for Amazon CloudFront distributions
	//
	// `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED|IGNORED|DISABLED\", \"automaticResponseAction\":\"BLOCK|COUNT\"}, \"overrideCustomerWebaclClassic\":true|false}"`
	//
	// For example: `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED\", \"automaticResponseAction\":\"COUNT\"}}"`
	//
	// The default value for `automaticResponseStatus` is `IGNORED` . The value for `automaticResponseAction` is only required when `automaticResponseStatus` is set to `ENABLED` . The default value for `overrideCustomerWebaclClassic` is `false` .
	//
	// For other resource types that you can protect with a Shield Advanced policy, this `ManagedServiceData` configuration is an empty string.
	// - Example: `WAFV2`
	//
	// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"version\":null,\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesAmazonIpReputationList\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
	//
	// In the `loggingConfiguration` , you can specify one `logDestinationConfigs` , you can optionally provide up to 20 `redactedFields` , and the `RedactedFieldType` must be one of `URI` , `QUERY_STRING` , `HEADER` , or `METHOD` .
	// - Example: `AWS WAF Classic`
	//
	// `"{\"type\": \"WAF\", \"ruleGroups\": [{\"id\":\"12345678-1bcd-9012-efga-0987654321ab\", \"overrideAction\" : {\"type\": \"COUNT\"}}], \"defaultAction\": {\"type\": \"BLOCK\"}}"`
	// - Example: `WAFV2` - AWS Firewall Manager support for AWS WAF managed rule group versioning
	//
	// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"versionEnabled\":true,\"version\":\"Version_2.0\",\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesCommonRuleSet\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
	//
	// To use a specific version of a AWS WAF managed rule group in your Firewall Manager policy, you must set `versionEnabled` to `true` , and set `version` to the version you'd like to use. If you don't set `versionEnabled` to `true` , or if you omit `versionEnabled` , then Firewall Manager uses the default version of the AWS WAF managed rule group.
	// - Example: `SECURITY_GROUPS_COMMON`
	//
	// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
	// - Example: Shared VPCs. Apply the preceding policy to resources in shared VPCs as well as to those in VPCs that the account owns
	//
	// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"includeSharedVPC\":true,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
	// - Example: `SECURITY_GROUPS_CONTENT_AUDIT`
	//
	// `"{\"type\":\"SECURITY_GROUPS_CONTENT_AUDIT\",\"securityGroups\":[{\"id\":\"sg-000e55995d61a06bd\"}],\"securityGroupAction\":{\"type\":\"ALLOW\"}}"`
	//
	// The security group action for content audit can be `ALLOW` or `DENY` . For `ALLOW` , all in-scope security group rules must be within the allowed range of the policy's security group rules. For `DENY` , all in-scope security group rules must not contain a value or a range that matches a rule value or range in the policy security group.
	// - Example: `SECURITY_GROUPS_USAGE_AUDIT`
	//
	// `"{\"type\":\"SECURITY_GROUPS_USAGE_AUDIT\",\"deleteUnusedSecurityGroups\":true,\"coalesceRedundantSecurityGroups\":true}"`
	ManagedServiceData pulumi.StringPtrInput `pulumi:"managedServiceData"`
	// Contains the settings to configure a network ACL policy, a AWS Network Firewall firewall policy deployment model, or a third-party firewall policy.
	PolicyOption PolicyOptionPtrInput `pulumi:"policyOption"`
	// The service that the policy is using to protect the resources. This specifies the type of policy that is created, either an AWS WAF policy, a Shield Advanced policy, or a security group policy. For security group policies, Firewall Manager supports one security group for each common policy and for each content audit policy. This is an adjustable limit that you can increase by contacting AWS Support .
	Type PolicyTypeInput `pulumi:"type"`
}

func (PolicySecurityServicePolicyDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyData)(nil)).Elem()
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput {
	return i.ToPolicySecurityServicePolicyDataOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataOutput)
}

// Firewall security service policy data.
type PolicySecurityServicePolicyDataOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyData)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput {
	return o
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataOutput {
	return o
}

// Details about the service that are specific to the service type, in JSON format.
//
// - Example: `DNS_FIREWALL`
//
// `"{\"type\":\"DNS_FIREWALL\",\"preProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-1\",\"priority\":10}],\"postProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-2\",\"priority\":9911}]}"`
//
// > Valid values for `preProcessRuleGroups` are between 1 and 99. Valid values for `postProcessRuleGroups` are between 9901 and 10000.
// - Example: `NETWORK_FIREWALL` - Centralized deployment model
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"awsNetworkFirewallConfig\":{\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}},\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"OFF\"},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
//
// With automatic Availbility Zone configuration, Firewall Manager chooses which Availability Zones to create the endpoints in. To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration and route management
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"]},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\": \"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\", \"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{ \"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[ \"10.0.0.0/28\"]}]} },\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"OFF\",\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
//
// With custom Availability Zone configuration, you define which specific Availability Zones to create endpoints in by configuring `firewallCreationConfig` . To configure the Availability Zones in `firewallCreationConfig` , specify either the `availabilityZoneName` or `availabilityZoneId` parameter, not both parameters.
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration and route management
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"],\"routeManagementConfig\":{\"allowCrossAZTrafficIfNoEndpoint\":true}},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall centralized deployment model
//
// `"{ \"type\":\"THIRD_PARTY_FIREWALL\", \"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\", \"thirdPartyFirewallConfig\":{ \"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `CENTRALIZED` .
// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall distributed deployment model
//
// `"{\"type\":\"THIRD_PARTY_FIREWALL\",\"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\",\"thirdPartyFirewallConfig\":{\"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{ \"distributedFirewallDeploymentModel\":{ \"distributedFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{ \"availabilityZoneConfigList\":[ {\"availabilityZoneName\":\"${AvailabilityZone}\" } ] } }, \"allowedIPV4CidrList\":[ ] } } } }"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
// - Specification for `SHIELD_ADVANCED` for Amazon CloudFront distributions
//
// `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED|IGNORED|DISABLED\", \"automaticResponseAction\":\"BLOCK|COUNT\"}, \"overrideCustomerWebaclClassic\":true|false}"`
//
// For example: `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED\", \"automaticResponseAction\":\"COUNT\"}}"`
//
// The default value for `automaticResponseStatus` is `IGNORED` . The value for `automaticResponseAction` is only required when `automaticResponseStatus` is set to `ENABLED` . The default value for `overrideCustomerWebaclClassic` is `false` .
//
// For other resource types that you can protect with a Shield Advanced policy, this `ManagedServiceData` configuration is an empty string.
// - Example: `WAFV2`
//
// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"version\":null,\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesAmazonIpReputationList\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
//
// In the `loggingConfiguration` , you can specify one `logDestinationConfigs` , you can optionally provide up to 20 `redactedFields` , and the `RedactedFieldType` must be one of `URI` , `QUERY_STRING` , `HEADER` , or `METHOD` .
// - Example: `AWS WAF Classic`
//
// `"{\"type\": \"WAF\", \"ruleGroups\": [{\"id\":\"12345678-1bcd-9012-efga-0987654321ab\", \"overrideAction\" : {\"type\": \"COUNT\"}}], \"defaultAction\": {\"type\": \"BLOCK\"}}"`
// - Example: `WAFV2` - AWS Firewall Manager support for AWS WAF managed rule group versioning
//
// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"versionEnabled\":true,\"version\":\"Version_2.0\",\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesCommonRuleSet\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
//
// To use a specific version of a AWS WAF managed rule group in your Firewall Manager policy, you must set `versionEnabled` to `true` , and set `version` to the version you'd like to use. If you don't set `versionEnabled` to `true` , or if you omit `versionEnabled` , then Firewall Manager uses the default version of the AWS WAF managed rule group.
// - Example: `SECURITY_GROUPS_COMMON`
//
// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
// - Example: Shared VPCs. Apply the preceding policy to resources in shared VPCs as well as to those in VPCs that the account owns
//
// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"includeSharedVPC\":true,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
// - Example: `SECURITY_GROUPS_CONTENT_AUDIT`
//
// `"{\"type\":\"SECURITY_GROUPS_CONTENT_AUDIT\",\"securityGroups\":[{\"id\":\"sg-000e55995d61a06bd\"}],\"securityGroupAction\":{\"type\":\"ALLOW\"}}"`
//
// The security group action for content audit can be `ALLOW` or `DENY` . For `ALLOW` , all in-scope security group rules must be within the allowed range of the policy's security group rules. For `DENY` , all in-scope security group rules must not contain a value or a range that matches a rule value or range in the policy security group.
// - Example: `SECURITY_GROUPS_USAGE_AUDIT`
//
// `"{\"type\":\"SECURITY_GROUPS_USAGE_AUDIT\",\"deleteUnusedSecurityGroups\":true,\"coalesceRedundantSecurityGroups\":true}"`
func (o PolicySecurityServicePolicyDataOutput) ManagedServiceData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityServicePolicyData) *string { return v.ManagedServiceData }).(pulumi.StringPtrOutput)
}

// Contains the settings to configure a network ACL policy, a AWS Network Firewall firewall policy deployment model, or a third-party firewall policy.
func (o PolicySecurityServicePolicyDataOutput) PolicyOption() PolicyOptionPtrOutput {
	return o.ApplyT(func(v PolicySecurityServicePolicyData) *PolicyOption { return v.PolicyOption }).(PolicyOptionPtrOutput)
}

// The service that the policy is using to protect the resources. This specifies the type of policy that is created, either an AWS WAF policy, a Shield Advanced policy, or a security group policy. For security group policies, Firewall Manager supports one security group for each common policy and for each content audit policy. This is an adjustable limit that you can increase by contacting AWS Support .
func (o PolicySecurityServicePolicyDataOutput) Type() PolicyTypeOutput {
	return o.ApplyT(func(v PolicySecurityServicePolicyData) PolicyType { return v.Type }).(PolicyTypeOutput)
}

type PolicySecurityServicePolicyDataPtrOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySecurityServicePolicyData)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataPtrOutput) ToPolicySecurityServicePolicyDataPtrOutput() PolicySecurityServicePolicyDataPtrOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPtrOutput) ToPolicySecurityServicePolicyDataPtrOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPtrOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPtrOutput) Elem() PolicySecurityServicePolicyDataOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) PolicySecurityServicePolicyData {
		if v != nil {
			return *v
		}
		var ret PolicySecurityServicePolicyData
		return ret
	}).(PolicySecurityServicePolicyDataOutput)
}

// Details about the service that are specific to the service type, in JSON format.
//
// - Example: `DNS_FIREWALL`
//
// `"{\"type\":\"DNS_FIREWALL\",\"preProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-1\",\"priority\":10}],\"postProcessRuleGroups\":[{\"ruleGroupId\":\"rslvr-frg-2\",\"priority\":9911}]}"`
//
// > Valid values for `preProcessRuleGroups` are between 1 and 99. Valid values for `postProcessRuleGroups` are between 9901 and 10000.
// - Example: `NETWORK_FIREWALL` - Centralized deployment model
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"awsNetworkFirewallConfig\":{\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}},\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"OFF\"},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
//
// With automatic Availbility Zone configuration, Firewall Manager chooses which Availability Zones to create the endpoints in. To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with automatic Availability Zone configuration and route management
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":[\"10.0.0.0/28\",\"192.168.0.0/28\"],\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"]},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\": \"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":true}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\", \"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{ \"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[ \"10.0.0.0/28\"]}]} },\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"OFF\",\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
//
// With custom Availability Zone configuration, you define which specific Availability Zones to create endpoints in by configuring `firewallCreationConfig` . To configure the Availability Zones in `firewallCreationConfig` , specify either the `availabilityZoneName` or `availabilityZoneId` parameter, not both parameters.
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `NETWORK_FIREWALL` - Distributed deployment model with custom Availability Zone configuration and route management
//
// `"{\"type\":\"NETWORK_FIREWALL\",\"networkFirewallStatelessRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateless-rulegroup/test\",\"priority\":1}],\"networkFirewallStatelessDefaultActions\":[\"aws:forward_to_sfe\",\"customActionName\"],\"networkFirewallStatelessFragmentDefaultActions\":[\"aws:forward_to_sfe\",\"fragmentcustomactionname\"],\"networkFirewallStatelessCustomActions\":[{\"actionName\":\"customActionName\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"metricdimensionvalue\"}]}}},{\"actionName\":\"fragmentcustomactionname\",\"actionDefinition\":{\"publishMetricAction\":{\"dimensions\":[{\"value\":\"fragmentmetricdimensionvalue\"}]}}}],\"networkFirewallStatefulRuleGroupReferences\":[{\"resourceARN\":\"arn:aws:network-firewall:us-east-1:123456789011:stateful-rulegroup/test\"}],\"networkFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]},{\"availabilityZoneName\":\"us-east-1b\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"singleFirewallEndpointPerVPC\":false,\"allowedIPV4CidrList\":null,\"routeManagementAction\":\"MONITOR\",\"routeManagementTargetTypes\":[\"InternetGateway\"],\"routeManagementConfig\":{\"allowCrossAZTrafficIfNoEndpoint\":true}},\"networkFirewallLoggingConfiguration\":{\"logDestinationConfigs\":[{\"logDestinationType\":\"S3\",\"logType\":\"ALERT\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}},{\"logDestinationType\":\"S3\",\"logType\":\"FLOW\",\"logDestination\":{\"bucketName\":\"s3-bucket-name\"}}],\"overrideExistingConfig\":boolean}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-networkfirewallpolicy.html) to `DISTRIBUTED` .
// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall centralized deployment model
//
// `"{ \"type\":\"THIRD_PARTY_FIREWALL\", \"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\", \"thirdPartyFirewallConfig\":{ \"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{\"centralizedFirewallDeploymentModel\":{\"centralizedFirewallOrchestrationConfig\":{\"inspectionVpcIds\":[{\"resourceId\":\"vpc-1234\",\"accountId\":\"123456789011\"}],\"firewallCreationConfig\":{\"endpointLocation\":{\"availabilityZoneConfigList\":[{\"availabilityZoneId\":null,\"availabilityZoneName\":\"us-east-1a\",\"allowedIPV4CidrList\":[\"10.0.0.0/28\"]}]}},\"allowedIPV4CidrList\":[]}}}}"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `CENTRALIZED` .
// - Example: `THIRD_PARTY_FIREWALL` - Palo Alto Networks Cloud Next-Generation Firewall distributed deployment model
//
// `"{\"type\":\"THIRD_PARTY_FIREWALL\",\"thirdPartyFirewall\":\"PALO_ALTO_NETWORKS_CLOUD_NGFW\",\"thirdPartyFirewallConfig\":{\"thirdPartyFirewallPolicyList\":[\"global-1\"] },\"firewallDeploymentModel\":{ \"distributedFirewallDeploymentModel\":{ \"distributedFirewallOrchestrationConfig\":{\"firewallCreationConfig\":{\"endpointLocation\":{ \"availabilityZoneConfigList\":[ {\"availabilityZoneName\":\"${AvailabilityZone}\" } ] } }, \"allowedIPV4CidrList\":[ ] } } } }"`
//
// To use the distributed deployment model, you must set [FirewallDeploymentModel](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-fms-policy-thirdpartyfirewallpolicy.html) to `DISTRIBUTED` .
// - Specification for `SHIELD_ADVANCED` for Amazon CloudFront distributions
//
// `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED|IGNORED|DISABLED\", \"automaticResponseAction\":\"BLOCK|COUNT\"}, \"overrideCustomerWebaclClassic\":true|false}"`
//
// For example: `"{\"type\":\"SHIELD_ADVANCED\",\"automaticResponseConfiguration\": {\"automaticResponseStatus\":\"ENABLED\", \"automaticResponseAction\":\"COUNT\"}}"`
//
// The default value for `automaticResponseStatus` is `IGNORED` . The value for `automaticResponseAction` is only required when `automaticResponseStatus` is set to `ENABLED` . The default value for `overrideCustomerWebaclClassic` is `false` .
//
// For other resource types that you can protect with a Shield Advanced policy, this `ManagedServiceData` configuration is an empty string.
// - Example: `WAFV2`
//
// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"version\":null,\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesAmazonIpReputationList\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
//
// In the `loggingConfiguration` , you can specify one `logDestinationConfigs` , you can optionally provide up to 20 `redactedFields` , and the `RedactedFieldType` must be one of `URI` , `QUERY_STRING` , `HEADER` , or `METHOD` .
// - Example: `AWS WAF Classic`
//
// `"{\"type\": \"WAF\", \"ruleGroups\": [{\"id\":\"12345678-1bcd-9012-efga-0987654321ab\", \"overrideAction\" : {\"type\": \"COUNT\"}}], \"defaultAction\": {\"type\": \"BLOCK\"}}"`
// - Example: `WAFV2` - AWS Firewall Manager support for AWS WAF managed rule group versioning
//
// `"{\"type\":\"WAFV2\",\"preProcessRuleGroups\":[{\"ruleGroupArn\":null,\"overrideAction\":{\"type\":\"NONE\"},\"managedRuleGroupIdentifier\":{\"versionEnabled\":true,\"version\":\"Version_2.0\",\"vendorName\":\"AWS\",\"managedRuleGroupName\":\"AWSManagedRulesCommonRuleSet\"},\"ruleGroupType\":\"ManagedRuleGroup\",\"excludeRules\":[{\"name\":\"NoUserAgent_HEADER\"}]}],\"postProcessRuleGroups\":[],\"defaultAction\":{\"type\":\"ALLOW\"},\"overrideCustomerWebACLAssociation\":false,\"loggingConfiguration\":{\"logDestinationConfigs\":[\"arn:aws:firehose:us-west-2:12345678912:deliverystream/aws-waf-logs-fms-admin-destination\"],\"redactedFields\":[{\"redactedFieldType\":\"SingleHeader\",\"redactedFieldValue\":\"Cookies\"},{\"redactedFieldType\":\"Method\"}]}}"`
//
// To use a specific version of a AWS WAF managed rule group in your Firewall Manager policy, you must set `versionEnabled` to `true` , and set `version` to the version you'd like to use. If you don't set `versionEnabled` to `true` , or if you omit `versionEnabled` , then Firewall Manager uses the default version of the AWS WAF managed rule group.
// - Example: `SECURITY_GROUPS_COMMON`
//
// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
// - Example: Shared VPCs. Apply the preceding policy to resources in shared VPCs as well as to those in VPCs that the account owns
//
// `"{\"type\":\"SECURITY_GROUPS_COMMON\",\"revertManualSecurityGroupChanges\":false,\"exclusiveResourceSecurityGroupManagement\":false, \"applyToAllEC2InstanceENIs\":false,\"includeSharedVPC\":true,\"securityGroups\":[{\"id\":\" sg-000e55995d61a06bd\"}]}"`
// - Example: `SECURITY_GROUPS_CONTENT_AUDIT`
//
// `"{\"type\":\"SECURITY_GROUPS_CONTENT_AUDIT\",\"securityGroups\":[{\"id\":\"sg-000e55995d61a06bd\"}],\"securityGroupAction\":{\"type\":\"ALLOW\"}}"`
//
// The security group action for content audit can be `ALLOW` or `DENY` . For `ALLOW` , all in-scope security group rules must be within the allowed range of the policy's security group rules. For `DENY` , all in-scope security group rules must not contain a value or a range that matches a rule value or range in the policy security group.
// - Example: `SECURITY_GROUPS_USAGE_AUDIT`
//
// `"{\"type\":\"SECURITY_GROUPS_USAGE_AUDIT\",\"deleteUnusedSecurityGroups\":true,\"coalesceRedundantSecurityGroups\":true}"`
func (o PolicySecurityServicePolicyDataPtrOutput) ManagedServiceData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) *string {
		if v == nil {
			return nil
		}
		return v.ManagedServiceData
	}).(pulumi.StringPtrOutput)
}

// Contains the settings to configure a network ACL policy, a AWS Network Firewall firewall policy deployment model, or a third-party firewall policy.
func (o PolicySecurityServicePolicyDataPtrOutput) PolicyOption() PolicyOptionPtrOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) *PolicyOption {
		if v == nil {
			return nil
		}
		return v.PolicyOption
	}).(PolicyOptionPtrOutput)
}

// The service that the policy is using to protect the resources. This specifies the type of policy that is created, either an AWS WAF policy, a Shield Advanced policy, or a security group policy. For security group policies, Firewall Manager supports one security group for each common policy and for each content audit policy. This is an adjustable limit that you can increase by contacting AWS Support .
func (o PolicySecurityServicePolicyDataPtrOutput) Type() PolicyTypePtrOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) *PolicyType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(PolicyTypePtrOutput)
}

// A policy tag.
type PolicyTag struct {
	// Part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as "customer." Tag keys are case-sensitive.
	Key string `pulumi:"key"`
	// Part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as "companyA" or "companyB." Tag values are case-sensitive.
	Value string `pulumi:"value"`
}

// Third party firewall policy.
type PolicyThirdPartyFirewallPolicy struct {
	// Defines the deployment model to use for the third-party firewall policy.
	FirewallDeploymentModel PolicyFirewallDeploymentModel `pulumi:"firewallDeploymentModel"`
}

// PolicyThirdPartyFirewallPolicyInput is an input type that accepts PolicyThirdPartyFirewallPolicyArgs and PolicyThirdPartyFirewallPolicyOutput values.
// You can construct a concrete instance of `PolicyThirdPartyFirewallPolicyInput` via:
//
//	PolicyThirdPartyFirewallPolicyArgs{...}
type PolicyThirdPartyFirewallPolicyInput interface {
	pulumi.Input

	ToPolicyThirdPartyFirewallPolicyOutput() PolicyThirdPartyFirewallPolicyOutput
	ToPolicyThirdPartyFirewallPolicyOutputWithContext(context.Context) PolicyThirdPartyFirewallPolicyOutput
}

// Third party firewall policy.
type PolicyThirdPartyFirewallPolicyArgs struct {
	// Defines the deployment model to use for the third-party firewall policy.
	FirewallDeploymentModel PolicyFirewallDeploymentModelInput `pulumi:"firewallDeploymentModel"`
}

func (PolicyThirdPartyFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyThirdPartyFirewallPolicy)(nil)).Elem()
}

func (i PolicyThirdPartyFirewallPolicyArgs) ToPolicyThirdPartyFirewallPolicyOutput() PolicyThirdPartyFirewallPolicyOutput {
	return i.ToPolicyThirdPartyFirewallPolicyOutputWithContext(context.Background())
}

func (i PolicyThirdPartyFirewallPolicyArgs) ToPolicyThirdPartyFirewallPolicyOutputWithContext(ctx context.Context) PolicyThirdPartyFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyThirdPartyFirewallPolicyOutput)
}

func (i PolicyThirdPartyFirewallPolicyArgs) ToPolicyThirdPartyFirewallPolicyPtrOutput() PolicyThirdPartyFirewallPolicyPtrOutput {
	return i.ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyThirdPartyFirewallPolicyArgs) ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyThirdPartyFirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyThirdPartyFirewallPolicyOutput).ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(ctx)
}

// PolicyThirdPartyFirewallPolicyPtrInput is an input type that accepts PolicyThirdPartyFirewallPolicyArgs, PolicyThirdPartyFirewallPolicyPtr and PolicyThirdPartyFirewallPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyThirdPartyFirewallPolicyPtrInput` via:
//
//	        PolicyThirdPartyFirewallPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyThirdPartyFirewallPolicyPtrInput interface {
	pulumi.Input

	ToPolicyThirdPartyFirewallPolicyPtrOutput() PolicyThirdPartyFirewallPolicyPtrOutput
	ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(context.Context) PolicyThirdPartyFirewallPolicyPtrOutput
}

type policyThirdPartyFirewallPolicyPtrType PolicyThirdPartyFirewallPolicyArgs

func PolicyThirdPartyFirewallPolicyPtr(v *PolicyThirdPartyFirewallPolicyArgs) PolicyThirdPartyFirewallPolicyPtrInput {
	return (*policyThirdPartyFirewallPolicyPtrType)(v)
}

func (*policyThirdPartyFirewallPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyThirdPartyFirewallPolicy)(nil)).Elem()
}

func (i *policyThirdPartyFirewallPolicyPtrType) ToPolicyThirdPartyFirewallPolicyPtrOutput() PolicyThirdPartyFirewallPolicyPtrOutput {
	return i.ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i *policyThirdPartyFirewallPolicyPtrType) ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyThirdPartyFirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyThirdPartyFirewallPolicyPtrOutput)
}

// Third party firewall policy.
type PolicyThirdPartyFirewallPolicyOutput struct{ *pulumi.OutputState }

func (PolicyThirdPartyFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyThirdPartyFirewallPolicy)(nil)).Elem()
}

func (o PolicyThirdPartyFirewallPolicyOutput) ToPolicyThirdPartyFirewallPolicyOutput() PolicyThirdPartyFirewallPolicyOutput {
	return o
}

func (o PolicyThirdPartyFirewallPolicyOutput) ToPolicyThirdPartyFirewallPolicyOutputWithContext(ctx context.Context) PolicyThirdPartyFirewallPolicyOutput {
	return o
}

func (o PolicyThirdPartyFirewallPolicyOutput) ToPolicyThirdPartyFirewallPolicyPtrOutput() PolicyThirdPartyFirewallPolicyPtrOutput {
	return o.ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyThirdPartyFirewallPolicyOutput) ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyThirdPartyFirewallPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyThirdPartyFirewallPolicy) *PolicyThirdPartyFirewallPolicy {
		return &v
	}).(PolicyThirdPartyFirewallPolicyPtrOutput)
}

// Defines the deployment model to use for the third-party firewall policy.
func (o PolicyThirdPartyFirewallPolicyOutput) FirewallDeploymentModel() PolicyFirewallDeploymentModelOutput {
	return o.ApplyT(func(v PolicyThirdPartyFirewallPolicy) PolicyFirewallDeploymentModel { return v.FirewallDeploymentModel }).(PolicyFirewallDeploymentModelOutput)
}

type PolicyThirdPartyFirewallPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyThirdPartyFirewallPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyThirdPartyFirewallPolicy)(nil)).Elem()
}

func (o PolicyThirdPartyFirewallPolicyPtrOutput) ToPolicyThirdPartyFirewallPolicyPtrOutput() PolicyThirdPartyFirewallPolicyPtrOutput {
	return o
}

func (o PolicyThirdPartyFirewallPolicyPtrOutput) ToPolicyThirdPartyFirewallPolicyPtrOutputWithContext(ctx context.Context) PolicyThirdPartyFirewallPolicyPtrOutput {
	return o
}

func (o PolicyThirdPartyFirewallPolicyPtrOutput) Elem() PolicyThirdPartyFirewallPolicyOutput {
	return o.ApplyT(func(v *PolicyThirdPartyFirewallPolicy) PolicyThirdPartyFirewallPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyThirdPartyFirewallPolicy
		return ret
	}).(PolicyThirdPartyFirewallPolicyOutput)
}

// Defines the deployment model to use for the third-party firewall policy.
func (o PolicyThirdPartyFirewallPolicyPtrOutput) FirewallDeploymentModel() PolicyFirewallDeploymentModelPtrOutput {
	return o.ApplyT(func(v *PolicyThirdPartyFirewallPolicy) *PolicyFirewallDeploymentModel {
		if v == nil {
			return nil
		}
		return &v.FirewallDeploymentModel
	}).(PolicyFirewallDeploymentModelPtrOutput)
}

// A tag.
type ResourceSetTag struct {
	// Part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as "customer." Tag keys are case-sensitive.
	Key string `pulumi:"key"`
	// Part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as "companyA" or "companyB." Tag values are case-sensitive.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIeMapInput)(nil)).Elem(), PolicyIeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIeMapPtrInput)(nil)).Elem(), PolicyIeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclCommonPolicyInput)(nil)).Elem(), PolicyNetworkAclCommonPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclCommonPolicyPtrInput)(nil)).Elem(), PolicyNetworkAclCommonPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntryInput)(nil)).Elem(), PolicyNetworkAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntryArrayInput)(nil)).Elem(), PolicyNetworkAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntryIcmpTypeCodePropertiesInput)(nil)).Elem(), PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrInput)(nil)).Elem(), PolicyNetworkAclEntryIcmpTypeCodePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntryPortRangePropertiesInput)(nil)).Elem(), PolicyNetworkAclEntryPortRangePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntryPortRangePropertiesPtrInput)(nil)).Elem(), PolicyNetworkAclEntryPortRangePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntrySetInput)(nil)).Elem(), PolicyNetworkAclEntrySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkAclEntrySetPtrInput)(nil)).Elem(), PolicyNetworkAclEntrySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkFirewallPolicyInput)(nil)).Elem(), PolicyNetworkFirewallPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyNetworkFirewallPolicyPtrInput)(nil)).Elem(), PolicyNetworkFirewallPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyOptionInput)(nil)).Elem(), PolicyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyOptionPtrInput)(nil)).Elem(), PolicyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyResourceTagInput)(nil)).Elem(), PolicyResourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyResourceTagArrayInput)(nil)).Elem(), PolicyResourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySecurityServicePolicyDataInput)(nil)).Elem(), PolicySecurityServicePolicyDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyThirdPartyFirewallPolicyInput)(nil)).Elem(), PolicyThirdPartyFirewallPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyThirdPartyFirewallPolicyPtrInput)(nil)).Elem(), PolicyThirdPartyFirewallPolicyArgs{})
	pulumi.RegisterOutputType(PolicyIeMapOutput{})
	pulumi.RegisterOutputType(PolicyIeMapPtrOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclCommonPolicyOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclCommonPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntryOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntryArrayOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntryIcmpTypeCodePropertiesOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntryIcmpTypeCodePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntryPortRangePropertiesOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntryPortRangePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntrySetOutput{})
	pulumi.RegisterOutputType(PolicyNetworkAclEntrySetPtrOutput{})
	pulumi.RegisterOutputType(PolicyNetworkFirewallPolicyOutput{})
	pulumi.RegisterOutputType(PolicyNetworkFirewallPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyOptionOutput{})
	pulumi.RegisterOutputType(PolicyOptionPtrOutput{})
	pulumi.RegisterOutputType(PolicyResourceTagOutput{})
	pulumi.RegisterOutputType(PolicyResourceTagArrayOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataPtrOutput{})
	pulumi.RegisterOutputType(PolicyThirdPartyFirewallPolicyOutput{})
	pulumi.RegisterOutputType(PolicyThirdPartyFirewallPolicyPtrOutput{})
}
