// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ivs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Definition for type AWS::IVS::Stage.
func LookupStage(ctx *pulumi.Context, args *LookupStageArgs, opts ...pulumi.InvokeOption) (*LookupStageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStageResult
	err := ctx.Invoke("aws-native:ivs:getStage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStageArgs struct {
	// Stage ARN is automatically generated on creation and assigned as the unique identifier.
	Arn string `pulumi:"arn"`
}

type LookupStageResult struct {
	// ID of the active session within the stage.
	ActiveSessionId *string `pulumi:"activeSessionId"`
	// Stage ARN is automatically generated on creation and assigned as the unique identifier.
	Arn *string `pulumi:"arn"`
	// Stage name
	Name *string `pulumi:"name"`
	// An array of key-value pairs to apply to this resource.
	Tags []StageTag `pulumi:"tags"`
}

func LookupStageOutput(ctx *pulumi.Context, args LookupStageOutputArgs, opts ...pulumi.InvokeOption) LookupStageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStageResult, error) {
			args := v.(LookupStageArgs)
			r, err := LookupStage(ctx, &args, opts...)
			var s LookupStageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStageResultOutput)
}

type LookupStageOutputArgs struct {
	// Stage ARN is automatically generated on creation and assigned as the unique identifier.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupStageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStageArgs)(nil)).Elem()
}

type LookupStageResultOutput struct{ *pulumi.OutputState }

func (LookupStageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStageResult)(nil)).Elem()
}

func (o LookupStageResultOutput) ToLookupStageResultOutput() LookupStageResultOutput {
	return o
}

func (o LookupStageResultOutput) ToLookupStageResultOutputWithContext(ctx context.Context) LookupStageResultOutput {
	return o
}

// ID of the active session within the stage.
func (o LookupStageResultOutput) ActiveSessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStageResult) *string { return v.ActiveSessionId }).(pulumi.StringPtrOutput)
}

// Stage ARN is automatically generated on creation and assigned as the unique identifier.
func (o LookupStageResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStageResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Stage name
func (o LookupStageResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStageResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupStageResultOutput) Tags() StageTagArrayOutput {
	return o.ApplyT(func(v LookupStageResult) []StageTag { return v.Tags }).(StageTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStageResultOutput{})
}
