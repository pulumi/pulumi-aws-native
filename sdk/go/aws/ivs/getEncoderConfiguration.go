// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ivs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IVS::EncoderConfiguration.
func LookupEncoderConfiguration(ctx *pulumi.Context, args *LookupEncoderConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupEncoderConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEncoderConfigurationResult
	err := ctx.Invoke("aws-native:ivs:getEncoderConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEncoderConfigurationArgs struct {
	// Encoder configuration identifier.
	Arn string `pulumi:"arn"`
}

type LookupEncoderConfigurationResult struct {
	// Encoder configuration identifier.
	Arn *string `pulumi:"arn"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupEncoderConfigurationOutput(ctx *pulumi.Context, args LookupEncoderConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupEncoderConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEncoderConfigurationResultOutput, error) {
			args := v.(LookupEncoderConfigurationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupEncoderConfigurationResult
			secret, err := ctx.InvokePackageRaw("aws-native:ivs:getEncoderConfiguration", args, &rv, "", opts...)
			if err != nil {
				return LookupEncoderConfigurationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupEncoderConfigurationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupEncoderConfigurationResultOutput), nil
			}
			return output, nil
		}).(LookupEncoderConfigurationResultOutput)
}

type LookupEncoderConfigurationOutputArgs struct {
	// Encoder configuration identifier.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupEncoderConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEncoderConfigurationArgs)(nil)).Elem()
}

type LookupEncoderConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupEncoderConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEncoderConfigurationResult)(nil)).Elem()
}

func (o LookupEncoderConfigurationResultOutput) ToLookupEncoderConfigurationResultOutput() LookupEncoderConfigurationResultOutput {
	return o
}

func (o LookupEncoderConfigurationResultOutput) ToLookupEncoderConfigurationResultOutputWithContext(ctx context.Context) LookupEncoderConfigurationResultOutput {
	return o
}

// Encoder configuration identifier.
func (o LookupEncoderConfigurationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEncoderConfigurationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupEncoderConfigurationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupEncoderConfigurationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEncoderConfigurationResultOutput{})
}
