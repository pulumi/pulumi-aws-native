// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ivs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates which content-packaging format is used (MPEG-TS or fMP4). If multitrackInputConfiguration is specified and enabled is true, then containerFormat is required and must be set to FRAGMENTED_MP4. Otherwise, containerFormat may be set to TS or FRAGMENTED_MP4. Default: TS.
type ChannelContainerFormat string

const (
	ChannelContainerFormatTs            = ChannelContainerFormat("TS")
	ChannelContainerFormatFragmentedMp4 = ChannelContainerFormat("FRAGMENTED_MP4")
)

func (ChannelContainerFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelContainerFormat)(nil)).Elem()
}

func (e ChannelContainerFormat) ToChannelContainerFormatOutput() ChannelContainerFormatOutput {
	return pulumi.ToOutput(e).(ChannelContainerFormatOutput)
}

func (e ChannelContainerFormat) ToChannelContainerFormatOutputWithContext(ctx context.Context) ChannelContainerFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelContainerFormatOutput)
}

func (e ChannelContainerFormat) ToChannelContainerFormatPtrOutput() ChannelContainerFormatPtrOutput {
	return e.ToChannelContainerFormatPtrOutputWithContext(context.Background())
}

func (e ChannelContainerFormat) ToChannelContainerFormatPtrOutputWithContext(ctx context.Context) ChannelContainerFormatPtrOutput {
	return ChannelContainerFormat(e).ToChannelContainerFormatOutputWithContext(ctx).ToChannelContainerFormatPtrOutputWithContext(ctx)
}

func (e ChannelContainerFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelContainerFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelContainerFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelContainerFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelContainerFormatOutput struct{ *pulumi.OutputState }

func (ChannelContainerFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelContainerFormat)(nil)).Elem()
}

func (o ChannelContainerFormatOutput) ToChannelContainerFormatOutput() ChannelContainerFormatOutput {
	return o
}

func (o ChannelContainerFormatOutput) ToChannelContainerFormatOutputWithContext(ctx context.Context) ChannelContainerFormatOutput {
	return o
}

func (o ChannelContainerFormatOutput) ToChannelContainerFormatPtrOutput() ChannelContainerFormatPtrOutput {
	return o.ToChannelContainerFormatPtrOutputWithContext(context.Background())
}

func (o ChannelContainerFormatOutput) ToChannelContainerFormatPtrOutputWithContext(ctx context.Context) ChannelContainerFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelContainerFormat) *ChannelContainerFormat {
		return &v
	}).(ChannelContainerFormatPtrOutput)
}

func (o ChannelContainerFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelContainerFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelContainerFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelContainerFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelContainerFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelContainerFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelContainerFormatPtrOutput struct{ *pulumi.OutputState }

func (ChannelContainerFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelContainerFormat)(nil)).Elem()
}

func (o ChannelContainerFormatPtrOutput) ToChannelContainerFormatPtrOutput() ChannelContainerFormatPtrOutput {
	return o
}

func (o ChannelContainerFormatPtrOutput) ToChannelContainerFormatPtrOutputWithContext(ctx context.Context) ChannelContainerFormatPtrOutput {
	return o
}

func (o ChannelContainerFormatPtrOutput) Elem() ChannelContainerFormatOutput {
	return o.ApplyT(func(v *ChannelContainerFormat) ChannelContainerFormat {
		if v != nil {
			return *v
		}
		var ret ChannelContainerFormat
		return ret
	}).(ChannelContainerFormatOutput)
}

func (o ChannelContainerFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelContainerFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelContainerFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelContainerFormatInput is an input type that accepts values of the ChannelContainerFormat enum
// A concrete instance of `ChannelContainerFormatInput` can be one of the following:
//
//	ChannelContainerFormatTs
//	ChannelContainerFormatFragmentedMp4
type ChannelContainerFormatInput interface {
	pulumi.Input

	ToChannelContainerFormatOutput() ChannelContainerFormatOutput
	ToChannelContainerFormatOutputWithContext(context.Context) ChannelContainerFormatOutput
}

var channelContainerFormatPtrType = reflect.TypeOf((**ChannelContainerFormat)(nil)).Elem()

type ChannelContainerFormatPtrInput interface {
	pulumi.Input

	ToChannelContainerFormatPtrOutput() ChannelContainerFormatPtrOutput
	ToChannelContainerFormatPtrOutputWithContext(context.Context) ChannelContainerFormatPtrOutput
}

type channelContainerFormatPtr string

func ChannelContainerFormatPtr(v string) ChannelContainerFormatPtrInput {
	return (*channelContainerFormatPtr)(&v)
}

func (*channelContainerFormatPtr) ElementType() reflect.Type {
	return channelContainerFormatPtrType
}

func (in *channelContainerFormatPtr) ToChannelContainerFormatPtrOutput() ChannelContainerFormatPtrOutput {
	return pulumi.ToOutput(in).(ChannelContainerFormatPtrOutput)
}

func (in *channelContainerFormatPtr) ToChannelContainerFormatPtrOutputWithContext(ctx context.Context) ChannelContainerFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelContainerFormatPtrOutput)
}

// Channel latency mode.
type ChannelLatencyMode string

const (
	ChannelLatencyModeNormal = ChannelLatencyMode("NORMAL")
	ChannelLatencyModeLow    = ChannelLatencyMode("LOW")
)

func (ChannelLatencyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelLatencyMode)(nil)).Elem()
}

func (e ChannelLatencyMode) ToChannelLatencyModeOutput() ChannelLatencyModeOutput {
	return pulumi.ToOutput(e).(ChannelLatencyModeOutput)
}

func (e ChannelLatencyMode) ToChannelLatencyModeOutputWithContext(ctx context.Context) ChannelLatencyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelLatencyModeOutput)
}

func (e ChannelLatencyMode) ToChannelLatencyModePtrOutput() ChannelLatencyModePtrOutput {
	return e.ToChannelLatencyModePtrOutputWithContext(context.Background())
}

func (e ChannelLatencyMode) ToChannelLatencyModePtrOutputWithContext(ctx context.Context) ChannelLatencyModePtrOutput {
	return ChannelLatencyMode(e).ToChannelLatencyModeOutputWithContext(ctx).ToChannelLatencyModePtrOutputWithContext(ctx)
}

func (e ChannelLatencyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelLatencyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelLatencyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelLatencyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelLatencyModeOutput struct{ *pulumi.OutputState }

func (ChannelLatencyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelLatencyMode)(nil)).Elem()
}

func (o ChannelLatencyModeOutput) ToChannelLatencyModeOutput() ChannelLatencyModeOutput {
	return o
}

func (o ChannelLatencyModeOutput) ToChannelLatencyModeOutputWithContext(ctx context.Context) ChannelLatencyModeOutput {
	return o
}

func (o ChannelLatencyModeOutput) ToChannelLatencyModePtrOutput() ChannelLatencyModePtrOutput {
	return o.ToChannelLatencyModePtrOutputWithContext(context.Background())
}

func (o ChannelLatencyModeOutput) ToChannelLatencyModePtrOutputWithContext(ctx context.Context) ChannelLatencyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelLatencyMode) *ChannelLatencyMode {
		return &v
	}).(ChannelLatencyModePtrOutput)
}

func (o ChannelLatencyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelLatencyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelLatencyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelLatencyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelLatencyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelLatencyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelLatencyModePtrOutput struct{ *pulumi.OutputState }

func (ChannelLatencyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelLatencyMode)(nil)).Elem()
}

func (o ChannelLatencyModePtrOutput) ToChannelLatencyModePtrOutput() ChannelLatencyModePtrOutput {
	return o
}

func (o ChannelLatencyModePtrOutput) ToChannelLatencyModePtrOutputWithContext(ctx context.Context) ChannelLatencyModePtrOutput {
	return o
}

func (o ChannelLatencyModePtrOutput) Elem() ChannelLatencyModeOutput {
	return o.ApplyT(func(v *ChannelLatencyMode) ChannelLatencyMode {
		if v != nil {
			return *v
		}
		var ret ChannelLatencyMode
		return ret
	}).(ChannelLatencyModeOutput)
}

func (o ChannelLatencyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelLatencyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelLatencyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelLatencyModeInput is an input type that accepts values of the ChannelLatencyMode enum
// A concrete instance of `ChannelLatencyModeInput` can be one of the following:
//
//	ChannelLatencyModeNormal
//	ChannelLatencyModeLow
type ChannelLatencyModeInput interface {
	pulumi.Input

	ToChannelLatencyModeOutput() ChannelLatencyModeOutput
	ToChannelLatencyModeOutputWithContext(context.Context) ChannelLatencyModeOutput
}

var channelLatencyModePtrType = reflect.TypeOf((**ChannelLatencyMode)(nil)).Elem()

type ChannelLatencyModePtrInput interface {
	pulumi.Input

	ToChannelLatencyModePtrOutput() ChannelLatencyModePtrOutput
	ToChannelLatencyModePtrOutputWithContext(context.Context) ChannelLatencyModePtrOutput
}

type channelLatencyModePtr string

func ChannelLatencyModePtr(v string) ChannelLatencyModePtrInput {
	return (*channelLatencyModePtr)(&v)
}

func (*channelLatencyModePtr) ElementType() reflect.Type {
	return channelLatencyModePtrType
}

func (in *channelLatencyModePtr) ToChannelLatencyModePtrOutput() ChannelLatencyModePtrOutput {
	return pulumi.ToOutput(in).(ChannelLatencyModePtrOutput)
}

func (in *channelLatencyModePtr) ToChannelLatencyModePtrOutputWithContext(ctx context.Context) ChannelLatencyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelLatencyModePtrOutput)
}

// Maximum resolution for multitrack input. Required if enabled is true.
type ChannelMultitrackInputConfigurationMaximumResolution string

const (
	ChannelMultitrackInputConfigurationMaximumResolutionSd     = ChannelMultitrackInputConfigurationMaximumResolution("SD")
	ChannelMultitrackInputConfigurationMaximumResolutionHd     = ChannelMultitrackInputConfigurationMaximumResolution("HD")
	ChannelMultitrackInputConfigurationMaximumResolutionFullHd = ChannelMultitrackInputConfigurationMaximumResolution("FULL_HD")
)

func (ChannelMultitrackInputConfigurationMaximumResolution) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultitrackInputConfigurationMaximumResolution)(nil)).Elem()
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToChannelMultitrackInputConfigurationMaximumResolutionOutput() ChannelMultitrackInputConfigurationMaximumResolutionOutput {
	return pulumi.ToOutput(e).(ChannelMultitrackInputConfigurationMaximumResolutionOutput)
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToChannelMultitrackInputConfigurationMaximumResolutionOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationMaximumResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelMultitrackInputConfigurationMaximumResolutionOutput)
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutput() ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return e.ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(context.Background())
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return ChannelMultitrackInputConfigurationMaximumResolution(e).ToChannelMultitrackInputConfigurationMaximumResolutionOutputWithContext(ctx).ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(ctx)
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelMultitrackInputConfigurationMaximumResolution) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelMultitrackInputConfigurationMaximumResolutionOutput struct{ *pulumi.OutputState }

func (ChannelMultitrackInputConfigurationMaximumResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultitrackInputConfigurationMaximumResolution)(nil)).Elem()
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToChannelMultitrackInputConfigurationMaximumResolutionOutput() ChannelMultitrackInputConfigurationMaximumResolutionOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToChannelMultitrackInputConfigurationMaximumResolutionOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationMaximumResolutionOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutput() ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return o.ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMultitrackInputConfigurationMaximumResolution) *ChannelMultitrackInputConfigurationMaximumResolution {
		return &v
	}).(ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput)
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelMultitrackInputConfigurationMaximumResolution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelMultitrackInputConfigurationMaximumResolution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput struct{ *pulumi.OutputState }

func (ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultitrackInputConfigurationMaximumResolution)(nil)).Elem()
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutput() ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput) Elem() ChannelMultitrackInputConfigurationMaximumResolutionOutput {
	return o.ApplyT(func(v *ChannelMultitrackInputConfigurationMaximumResolution) ChannelMultitrackInputConfigurationMaximumResolution {
		if v != nil {
			return *v
		}
		var ret ChannelMultitrackInputConfigurationMaximumResolution
		return ret
	}).(ChannelMultitrackInputConfigurationMaximumResolutionOutput)
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelMultitrackInputConfigurationMaximumResolution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelMultitrackInputConfigurationMaximumResolutionInput is an input type that accepts values of the ChannelMultitrackInputConfigurationMaximumResolution enum
// A concrete instance of `ChannelMultitrackInputConfigurationMaximumResolutionInput` can be one of the following:
//
//	ChannelMultitrackInputConfigurationMaximumResolutionSd
//	ChannelMultitrackInputConfigurationMaximumResolutionHd
//	ChannelMultitrackInputConfigurationMaximumResolutionFullHd
type ChannelMultitrackInputConfigurationMaximumResolutionInput interface {
	pulumi.Input

	ToChannelMultitrackInputConfigurationMaximumResolutionOutput() ChannelMultitrackInputConfigurationMaximumResolutionOutput
	ToChannelMultitrackInputConfigurationMaximumResolutionOutputWithContext(context.Context) ChannelMultitrackInputConfigurationMaximumResolutionOutput
}

var channelMultitrackInputConfigurationMaximumResolutionPtrType = reflect.TypeOf((**ChannelMultitrackInputConfigurationMaximumResolution)(nil)).Elem()

type ChannelMultitrackInputConfigurationMaximumResolutionPtrInput interface {
	pulumi.Input

	ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutput() ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput
	ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(context.Context) ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput
}

type channelMultitrackInputConfigurationMaximumResolutionPtr string

func ChannelMultitrackInputConfigurationMaximumResolutionPtr(v string) ChannelMultitrackInputConfigurationMaximumResolutionPtrInput {
	return (*channelMultitrackInputConfigurationMaximumResolutionPtr)(&v)
}

func (*channelMultitrackInputConfigurationMaximumResolutionPtr) ElementType() reflect.Type {
	return channelMultitrackInputConfigurationMaximumResolutionPtrType
}

func (in *channelMultitrackInputConfigurationMaximumResolutionPtr) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutput() ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return pulumi.ToOutput(in).(ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput)
}

func (in *channelMultitrackInputConfigurationMaximumResolutionPtr) ToChannelMultitrackInputConfigurationMaximumResolutionPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput)
}

// Indicates whether multitrack input is allowed or required. Required if enabled is true.
type ChannelMultitrackInputConfigurationPolicy string

const (
	ChannelMultitrackInputConfigurationPolicyAllow   = ChannelMultitrackInputConfigurationPolicy("ALLOW")
	ChannelMultitrackInputConfigurationPolicyRequire = ChannelMultitrackInputConfigurationPolicy("REQUIRE")
)

func (ChannelMultitrackInputConfigurationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultitrackInputConfigurationPolicy)(nil)).Elem()
}

func (e ChannelMultitrackInputConfigurationPolicy) ToChannelMultitrackInputConfigurationPolicyOutput() ChannelMultitrackInputConfigurationPolicyOutput {
	return pulumi.ToOutput(e).(ChannelMultitrackInputConfigurationPolicyOutput)
}

func (e ChannelMultitrackInputConfigurationPolicy) ToChannelMultitrackInputConfigurationPolicyOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelMultitrackInputConfigurationPolicyOutput)
}

func (e ChannelMultitrackInputConfigurationPolicy) ToChannelMultitrackInputConfigurationPolicyPtrOutput() ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return e.ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(context.Background())
}

func (e ChannelMultitrackInputConfigurationPolicy) ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return ChannelMultitrackInputConfigurationPolicy(e).ToChannelMultitrackInputConfigurationPolicyOutputWithContext(ctx).ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(ctx)
}

func (e ChannelMultitrackInputConfigurationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelMultitrackInputConfigurationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelMultitrackInputConfigurationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelMultitrackInputConfigurationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelMultitrackInputConfigurationPolicyOutput struct{ *pulumi.OutputState }

func (ChannelMultitrackInputConfigurationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultitrackInputConfigurationPolicy)(nil)).Elem()
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToChannelMultitrackInputConfigurationPolicyOutput() ChannelMultitrackInputConfigurationPolicyOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToChannelMultitrackInputConfigurationPolicyOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationPolicyOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToChannelMultitrackInputConfigurationPolicyPtrOutput() ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return o.ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMultitrackInputConfigurationPolicy) *ChannelMultitrackInputConfigurationPolicy {
		return &v
	}).(ChannelMultitrackInputConfigurationPolicyPtrOutput)
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelMultitrackInputConfigurationPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelMultitrackInputConfigurationPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelMultitrackInputConfigurationPolicyPtrOutput struct{ *pulumi.OutputState }

func (ChannelMultitrackInputConfigurationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultitrackInputConfigurationPolicy)(nil)).Elem()
}

func (o ChannelMultitrackInputConfigurationPolicyPtrOutput) ToChannelMultitrackInputConfigurationPolicyPtrOutput() ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationPolicyPtrOutput) ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return o
}

func (o ChannelMultitrackInputConfigurationPolicyPtrOutput) Elem() ChannelMultitrackInputConfigurationPolicyOutput {
	return o.ApplyT(func(v *ChannelMultitrackInputConfigurationPolicy) ChannelMultitrackInputConfigurationPolicy {
		if v != nil {
			return *v
		}
		var ret ChannelMultitrackInputConfigurationPolicy
		return ret
	}).(ChannelMultitrackInputConfigurationPolicyOutput)
}

func (o ChannelMultitrackInputConfigurationPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelMultitrackInputConfigurationPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelMultitrackInputConfigurationPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelMultitrackInputConfigurationPolicyInput is an input type that accepts values of the ChannelMultitrackInputConfigurationPolicy enum
// A concrete instance of `ChannelMultitrackInputConfigurationPolicyInput` can be one of the following:
//
//	ChannelMultitrackInputConfigurationPolicyAllow
//	ChannelMultitrackInputConfigurationPolicyRequire
type ChannelMultitrackInputConfigurationPolicyInput interface {
	pulumi.Input

	ToChannelMultitrackInputConfigurationPolicyOutput() ChannelMultitrackInputConfigurationPolicyOutput
	ToChannelMultitrackInputConfigurationPolicyOutputWithContext(context.Context) ChannelMultitrackInputConfigurationPolicyOutput
}

var channelMultitrackInputConfigurationPolicyPtrType = reflect.TypeOf((**ChannelMultitrackInputConfigurationPolicy)(nil)).Elem()

type ChannelMultitrackInputConfigurationPolicyPtrInput interface {
	pulumi.Input

	ToChannelMultitrackInputConfigurationPolicyPtrOutput() ChannelMultitrackInputConfigurationPolicyPtrOutput
	ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(context.Context) ChannelMultitrackInputConfigurationPolicyPtrOutput
}

type channelMultitrackInputConfigurationPolicyPtr string

func ChannelMultitrackInputConfigurationPolicyPtr(v string) ChannelMultitrackInputConfigurationPolicyPtrInput {
	return (*channelMultitrackInputConfigurationPolicyPtr)(&v)
}

func (*channelMultitrackInputConfigurationPolicyPtr) ElementType() reflect.Type {
	return channelMultitrackInputConfigurationPolicyPtrType
}

func (in *channelMultitrackInputConfigurationPolicyPtr) ToChannelMultitrackInputConfigurationPolicyPtrOutput() ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return pulumi.ToOutput(in).(ChannelMultitrackInputConfigurationPolicyPtrOutput)
}

func (in *channelMultitrackInputConfigurationPolicyPtr) ToChannelMultitrackInputConfigurationPolicyPtrOutputWithContext(ctx context.Context) ChannelMultitrackInputConfigurationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelMultitrackInputConfigurationPolicyPtrOutput)
}

// Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD), preset is the empty string ("").
type ChannelPreset string

const (
	ChannelPresetEmpty                        = ChannelPreset("")
	ChannelPresetHigherBandwidthDelivery      = ChannelPreset("HIGHER_BANDWIDTH_DELIVERY")
	ChannelPresetConstrainedBandwidthDelivery = ChannelPreset("CONSTRAINED_BANDWIDTH_DELIVERY")
)

func (ChannelPreset) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelPreset)(nil)).Elem()
}

func (e ChannelPreset) ToChannelPresetOutput() ChannelPresetOutput {
	return pulumi.ToOutput(e).(ChannelPresetOutput)
}

func (e ChannelPreset) ToChannelPresetOutputWithContext(ctx context.Context) ChannelPresetOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelPresetOutput)
}

func (e ChannelPreset) ToChannelPresetPtrOutput() ChannelPresetPtrOutput {
	return e.ToChannelPresetPtrOutputWithContext(context.Background())
}

func (e ChannelPreset) ToChannelPresetPtrOutputWithContext(ctx context.Context) ChannelPresetPtrOutput {
	return ChannelPreset(e).ToChannelPresetOutputWithContext(ctx).ToChannelPresetPtrOutputWithContext(ctx)
}

func (e ChannelPreset) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelPreset) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelPreset) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelPreset) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelPresetOutput struct{ *pulumi.OutputState }

func (ChannelPresetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelPreset)(nil)).Elem()
}

func (o ChannelPresetOutput) ToChannelPresetOutput() ChannelPresetOutput {
	return o
}

func (o ChannelPresetOutput) ToChannelPresetOutputWithContext(ctx context.Context) ChannelPresetOutput {
	return o
}

func (o ChannelPresetOutput) ToChannelPresetPtrOutput() ChannelPresetPtrOutput {
	return o.ToChannelPresetPtrOutputWithContext(context.Background())
}

func (o ChannelPresetOutput) ToChannelPresetPtrOutputWithContext(ctx context.Context) ChannelPresetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelPreset) *ChannelPreset {
		return &v
	}).(ChannelPresetPtrOutput)
}

func (o ChannelPresetOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelPresetOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelPreset) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelPresetOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelPresetOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelPreset) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelPresetPtrOutput struct{ *pulumi.OutputState }

func (ChannelPresetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelPreset)(nil)).Elem()
}

func (o ChannelPresetPtrOutput) ToChannelPresetPtrOutput() ChannelPresetPtrOutput {
	return o
}

func (o ChannelPresetPtrOutput) ToChannelPresetPtrOutputWithContext(ctx context.Context) ChannelPresetPtrOutput {
	return o
}

func (o ChannelPresetPtrOutput) Elem() ChannelPresetOutput {
	return o.ApplyT(func(v *ChannelPreset) ChannelPreset {
		if v != nil {
			return *v
		}
		var ret ChannelPreset
		return ret
	}).(ChannelPresetOutput)
}

func (o ChannelPresetPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelPresetPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelPreset) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelPresetInput is an input type that accepts values of the ChannelPreset enum
// A concrete instance of `ChannelPresetInput` can be one of the following:
//
//	ChannelPresetEmpty
//	ChannelPresetHigherBandwidthDelivery
//	ChannelPresetConstrainedBandwidthDelivery
type ChannelPresetInput interface {
	pulumi.Input

	ToChannelPresetOutput() ChannelPresetOutput
	ToChannelPresetOutputWithContext(context.Context) ChannelPresetOutput
}

var channelPresetPtrType = reflect.TypeOf((**ChannelPreset)(nil)).Elem()

type ChannelPresetPtrInput interface {
	pulumi.Input

	ToChannelPresetPtrOutput() ChannelPresetPtrOutput
	ToChannelPresetPtrOutputWithContext(context.Context) ChannelPresetPtrOutput
}

type channelPresetPtr string

func ChannelPresetPtr(v string) ChannelPresetPtrInput {
	return (*channelPresetPtr)(&v)
}

func (*channelPresetPtr) ElementType() reflect.Type {
	return channelPresetPtrType
}

func (in *channelPresetPtr) ToChannelPresetPtrOutput() ChannelPresetPtrOutput {
	return pulumi.ToOutput(in).(ChannelPresetPtrOutput)
}

func (in *channelPresetPtr) ToChannelPresetPtrOutputWithContext(ctx context.Context) ChannelPresetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelPresetPtrOutput)
}

// Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
type ChannelType string

const (
	ChannelTypeStandard   = ChannelType("STANDARD")
	ChannelTypeBasic      = ChannelType("BASIC")
	ChannelTypeAdvancedSd = ChannelType("ADVANCED_SD")
	ChannelTypeAdvancedHd = ChannelType("ADVANCED_HD")
)

func (ChannelType) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelType)(nil)).Elem()
}

func (e ChannelType) ToChannelTypeOutput() ChannelTypeOutput {
	return pulumi.ToOutput(e).(ChannelTypeOutput)
}

func (e ChannelType) ToChannelTypeOutputWithContext(ctx context.Context) ChannelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelTypeOutput)
}

func (e ChannelType) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return e.ToChannelTypePtrOutputWithContext(context.Background())
}

func (e ChannelType) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return ChannelType(e).ToChannelTypeOutputWithContext(ctx).ToChannelTypePtrOutputWithContext(ctx)
}

func (e ChannelType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelTypeOutput struct{ *pulumi.OutputState }

func (ChannelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelType)(nil)).Elem()
}

func (o ChannelTypeOutput) ToChannelTypeOutput() ChannelTypeOutput {
	return o
}

func (o ChannelTypeOutput) ToChannelTypeOutputWithContext(ctx context.Context) ChannelTypeOutput {
	return o
}

func (o ChannelTypeOutput) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return o.ToChannelTypePtrOutputWithContext(context.Background())
}

func (o ChannelTypeOutput) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelType) *ChannelType {
		return &v
	}).(ChannelTypePtrOutput)
}

func (o ChannelTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelTypePtrOutput struct{ *pulumi.OutputState }

func (ChannelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelType)(nil)).Elem()
}

func (o ChannelTypePtrOutput) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return o
}

func (o ChannelTypePtrOutput) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return o
}

func (o ChannelTypePtrOutput) Elem() ChannelTypeOutput {
	return o.ApplyT(func(v *ChannelType) ChannelType {
		if v != nil {
			return *v
		}
		var ret ChannelType
		return ret
	}).(ChannelTypeOutput)
}

func (o ChannelTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelTypeInput is an input type that accepts values of the ChannelType enum
// A concrete instance of `ChannelTypeInput` can be one of the following:
//
//	ChannelTypeStandard
//	ChannelTypeBasic
//	ChannelTypeAdvancedSd
//	ChannelTypeAdvancedHd
type ChannelTypeInput interface {
	pulumi.Input

	ToChannelTypeOutput() ChannelTypeOutput
	ToChannelTypeOutputWithContext(context.Context) ChannelTypeOutput
}

var channelTypePtrType = reflect.TypeOf((**ChannelType)(nil)).Elem()

type ChannelTypePtrInput interface {
	pulumi.Input

	ToChannelTypePtrOutput() ChannelTypePtrOutput
	ToChannelTypePtrOutputWithContext(context.Context) ChannelTypePtrOutput
}

type channelTypePtr string

func ChannelTypePtr(v string) ChannelTypePtrInput {
	return (*channelTypePtr)(&v)
}

func (*channelTypePtr) ElementType() reflect.Type {
	return channelTypePtrType
}

func (in *channelTypePtr) ToChannelTypePtrOutput() ChannelTypePtrOutput {
	return pulumi.ToOutput(in).(ChannelTypePtrOutput)
}

func (in *channelTypePtr) ToChannelTypePtrOutputWithContext(ctx context.Context) ChannelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelTypePtrOutput)
}

// Ingest Protocol.
type IngestConfigurationIngestProtocol string

const (
	IngestConfigurationIngestProtocolRtmp  = IngestConfigurationIngestProtocol("RTMP")
	IngestConfigurationIngestProtocolRtmps = IngestConfigurationIngestProtocol("RTMPS")
)

func (IngestConfigurationIngestProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestConfigurationIngestProtocol)(nil)).Elem()
}

func (e IngestConfigurationIngestProtocol) ToIngestConfigurationIngestProtocolOutput() IngestConfigurationIngestProtocolOutput {
	return pulumi.ToOutput(e).(IngestConfigurationIngestProtocolOutput)
}

func (e IngestConfigurationIngestProtocol) ToIngestConfigurationIngestProtocolOutputWithContext(ctx context.Context) IngestConfigurationIngestProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IngestConfigurationIngestProtocolOutput)
}

func (e IngestConfigurationIngestProtocol) ToIngestConfigurationIngestProtocolPtrOutput() IngestConfigurationIngestProtocolPtrOutput {
	return e.ToIngestConfigurationIngestProtocolPtrOutputWithContext(context.Background())
}

func (e IngestConfigurationIngestProtocol) ToIngestConfigurationIngestProtocolPtrOutputWithContext(ctx context.Context) IngestConfigurationIngestProtocolPtrOutput {
	return IngestConfigurationIngestProtocol(e).ToIngestConfigurationIngestProtocolOutputWithContext(ctx).ToIngestConfigurationIngestProtocolPtrOutputWithContext(ctx)
}

func (e IngestConfigurationIngestProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngestConfigurationIngestProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngestConfigurationIngestProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IngestConfigurationIngestProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IngestConfigurationIngestProtocolOutput struct{ *pulumi.OutputState }

func (IngestConfigurationIngestProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestConfigurationIngestProtocol)(nil)).Elem()
}

func (o IngestConfigurationIngestProtocolOutput) ToIngestConfigurationIngestProtocolOutput() IngestConfigurationIngestProtocolOutput {
	return o
}

func (o IngestConfigurationIngestProtocolOutput) ToIngestConfigurationIngestProtocolOutputWithContext(ctx context.Context) IngestConfigurationIngestProtocolOutput {
	return o
}

func (o IngestConfigurationIngestProtocolOutput) ToIngestConfigurationIngestProtocolPtrOutput() IngestConfigurationIngestProtocolPtrOutput {
	return o.ToIngestConfigurationIngestProtocolPtrOutputWithContext(context.Background())
}

func (o IngestConfigurationIngestProtocolOutput) ToIngestConfigurationIngestProtocolPtrOutputWithContext(ctx context.Context) IngestConfigurationIngestProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestConfigurationIngestProtocol) *IngestConfigurationIngestProtocol {
		return &v
	}).(IngestConfigurationIngestProtocolPtrOutput)
}

func (o IngestConfigurationIngestProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IngestConfigurationIngestProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngestConfigurationIngestProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IngestConfigurationIngestProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngestConfigurationIngestProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngestConfigurationIngestProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IngestConfigurationIngestProtocolPtrOutput struct{ *pulumi.OutputState }

func (IngestConfigurationIngestProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestConfigurationIngestProtocol)(nil)).Elem()
}

func (o IngestConfigurationIngestProtocolPtrOutput) ToIngestConfigurationIngestProtocolPtrOutput() IngestConfigurationIngestProtocolPtrOutput {
	return o
}

func (o IngestConfigurationIngestProtocolPtrOutput) ToIngestConfigurationIngestProtocolPtrOutputWithContext(ctx context.Context) IngestConfigurationIngestProtocolPtrOutput {
	return o
}

func (o IngestConfigurationIngestProtocolPtrOutput) Elem() IngestConfigurationIngestProtocolOutput {
	return o.ApplyT(func(v *IngestConfigurationIngestProtocol) IngestConfigurationIngestProtocol {
		if v != nil {
			return *v
		}
		var ret IngestConfigurationIngestProtocol
		return ret
	}).(IngestConfigurationIngestProtocolOutput)
}

func (o IngestConfigurationIngestProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngestConfigurationIngestProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IngestConfigurationIngestProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IngestConfigurationIngestProtocolInput is an input type that accepts values of the IngestConfigurationIngestProtocol enum
// A concrete instance of `IngestConfigurationIngestProtocolInput` can be one of the following:
//
//	IngestConfigurationIngestProtocolRtmp
//	IngestConfigurationIngestProtocolRtmps
type IngestConfigurationIngestProtocolInput interface {
	pulumi.Input

	ToIngestConfigurationIngestProtocolOutput() IngestConfigurationIngestProtocolOutput
	ToIngestConfigurationIngestProtocolOutputWithContext(context.Context) IngestConfigurationIngestProtocolOutput
}

var ingestConfigurationIngestProtocolPtrType = reflect.TypeOf((**IngestConfigurationIngestProtocol)(nil)).Elem()

type IngestConfigurationIngestProtocolPtrInput interface {
	pulumi.Input

	ToIngestConfigurationIngestProtocolPtrOutput() IngestConfigurationIngestProtocolPtrOutput
	ToIngestConfigurationIngestProtocolPtrOutputWithContext(context.Context) IngestConfigurationIngestProtocolPtrOutput
}

type ingestConfigurationIngestProtocolPtr string

func IngestConfigurationIngestProtocolPtr(v string) IngestConfigurationIngestProtocolPtrInput {
	return (*ingestConfigurationIngestProtocolPtr)(&v)
}

func (*ingestConfigurationIngestProtocolPtr) ElementType() reflect.Type {
	return ingestConfigurationIngestProtocolPtrType
}

func (in *ingestConfigurationIngestProtocolPtr) ToIngestConfigurationIngestProtocolPtrOutput() IngestConfigurationIngestProtocolPtrOutput {
	return pulumi.ToOutput(in).(IngestConfigurationIngestProtocolPtrOutput)
}

func (in *ingestConfigurationIngestProtocolPtr) ToIngestConfigurationIngestProtocolPtrOutputWithContext(ctx context.Context) IngestConfigurationIngestProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IngestConfigurationIngestProtocolPtrOutput)
}

// State of IngestConfiguration which determines whether IngestConfiguration is in use or not.
type IngestConfigurationStateEnum string

const (
	IngestConfigurationStateEnumActive   = IngestConfigurationStateEnum("ACTIVE")
	IngestConfigurationStateEnumInactive = IngestConfigurationStateEnum("INACTIVE")
)

type IngestConfigurationStateEnumOutput struct{ *pulumi.OutputState }

func (IngestConfigurationStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestConfigurationStateEnum)(nil)).Elem()
}

func (o IngestConfigurationStateEnumOutput) ToIngestConfigurationStateEnumOutput() IngestConfigurationStateEnumOutput {
	return o
}

func (o IngestConfigurationStateEnumOutput) ToIngestConfigurationStateEnumOutputWithContext(ctx context.Context) IngestConfigurationStateEnumOutput {
	return o
}

func (o IngestConfigurationStateEnumOutput) ToIngestConfigurationStateEnumPtrOutput() IngestConfigurationStateEnumPtrOutput {
	return o.ToIngestConfigurationStateEnumPtrOutputWithContext(context.Background())
}

func (o IngestConfigurationStateEnumOutput) ToIngestConfigurationStateEnumPtrOutputWithContext(ctx context.Context) IngestConfigurationStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestConfigurationStateEnum) *IngestConfigurationStateEnum {
		return &v
	}).(IngestConfigurationStateEnumPtrOutput)
}

func (o IngestConfigurationStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IngestConfigurationStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngestConfigurationStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IngestConfigurationStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngestConfigurationStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngestConfigurationStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IngestConfigurationStateEnumPtrOutput struct{ *pulumi.OutputState }

func (IngestConfigurationStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestConfigurationStateEnum)(nil)).Elem()
}

func (o IngestConfigurationStateEnumPtrOutput) ToIngestConfigurationStateEnumPtrOutput() IngestConfigurationStateEnumPtrOutput {
	return o
}

func (o IngestConfigurationStateEnumPtrOutput) ToIngestConfigurationStateEnumPtrOutputWithContext(ctx context.Context) IngestConfigurationStateEnumPtrOutput {
	return o
}

func (o IngestConfigurationStateEnumPtrOutput) Elem() IngestConfigurationStateEnumOutput {
	return o.ApplyT(func(v *IngestConfigurationStateEnum) IngestConfigurationStateEnum {
		if v != nil {
			return *v
		}
		var ret IngestConfigurationStateEnum
		return ret
	}).(IngestConfigurationStateEnumOutput)
}

func (o IngestConfigurationStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngestConfigurationStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IngestConfigurationStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Resolution Selection indicates which set of renditions are recorded for a stream.
type RecordingConfigurationRenditionConfigurationRenditionSelection string

const (
	RecordingConfigurationRenditionConfigurationRenditionSelectionAll    = RecordingConfigurationRenditionConfigurationRenditionSelection("ALL")
	RecordingConfigurationRenditionConfigurationRenditionSelectionNone   = RecordingConfigurationRenditionConfigurationRenditionSelection("NONE")
	RecordingConfigurationRenditionConfigurationRenditionSelectionCustom = RecordingConfigurationRenditionConfigurationRenditionSelection("CUSTOM")
)

func (RecordingConfigurationRenditionConfigurationRenditionSelection) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionSelection)(nil)).Elem()
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionOutput {
	return pulumi.ToOutput(e).(RecordingConfigurationRenditionConfigurationRenditionSelectionOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecordingConfigurationRenditionConfigurationRenditionSelectionOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return e.ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return RecordingConfigurationRenditionConfigurationRenditionSelection(e).ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutputWithContext(ctx).ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(ctx)
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationRenditionConfigurationRenditionSelection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecordingConfigurationRenditionConfigurationRenditionSelectionOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionSelection)(nil)).Elem()
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return o.ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingConfigurationRenditionConfigurationRenditionSelection) *RecordingConfigurationRenditionConfigurationRenditionSelection {
		return &v
	}).(RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput)
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationRenditionConfigurationRenditionSelection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationRenditionConfigurationRenditionSelection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingConfigurationRenditionConfigurationRenditionSelection)(nil)).Elem()
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput) Elem() RecordingConfigurationRenditionConfigurationRenditionSelectionOutput {
	return o.ApplyT(func(v *RecordingConfigurationRenditionConfigurationRenditionSelection) RecordingConfigurationRenditionConfigurationRenditionSelection {
		if v != nil {
			return *v
		}
		var ret RecordingConfigurationRenditionConfigurationRenditionSelection
		return ret
	}).(RecordingConfigurationRenditionConfigurationRenditionSelectionOutput)
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordingConfigurationRenditionConfigurationRenditionSelection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecordingConfigurationRenditionConfigurationRenditionSelectionInput is an input type that accepts values of the RecordingConfigurationRenditionConfigurationRenditionSelection enum
// A concrete instance of `RecordingConfigurationRenditionConfigurationRenditionSelectionInput` can be one of the following:
//
//	RecordingConfigurationRenditionConfigurationRenditionSelectionAll
//	RecordingConfigurationRenditionConfigurationRenditionSelectionNone
//	RecordingConfigurationRenditionConfigurationRenditionSelectionCustom
type RecordingConfigurationRenditionConfigurationRenditionSelectionInput interface {
	pulumi.Input

	ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionOutput
	ToRecordingConfigurationRenditionConfigurationRenditionSelectionOutputWithContext(context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionOutput
}

var recordingConfigurationRenditionConfigurationRenditionSelectionPtrType = reflect.TypeOf((**RecordingConfigurationRenditionConfigurationRenditionSelection)(nil)).Elem()

type RecordingConfigurationRenditionConfigurationRenditionSelectionPtrInput interface {
	pulumi.Input

	ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput
	ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput
}

type recordingConfigurationRenditionConfigurationRenditionSelectionPtr string

func RecordingConfigurationRenditionConfigurationRenditionSelectionPtr(v string) RecordingConfigurationRenditionConfigurationRenditionSelectionPtrInput {
	return (*recordingConfigurationRenditionConfigurationRenditionSelectionPtr)(&v)
}

func (*recordingConfigurationRenditionConfigurationRenditionSelectionPtr) ElementType() reflect.Type {
	return recordingConfigurationRenditionConfigurationRenditionSelectionPtrType
}

func (in *recordingConfigurationRenditionConfigurationRenditionSelectionPtr) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput() RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return pulumi.ToOutput(in).(RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput)
}

func (in *recordingConfigurationRenditionConfigurationRenditionSelectionPtr) ToRecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput)
}

type RecordingConfigurationRenditionConfigurationRenditionsItem string

const (
	RecordingConfigurationRenditionConfigurationRenditionsItemFullHd           = RecordingConfigurationRenditionConfigurationRenditionsItem("FULL_HD")
	RecordingConfigurationRenditionConfigurationRenditionsItemHd               = RecordingConfigurationRenditionConfigurationRenditionsItem("HD")
	RecordingConfigurationRenditionConfigurationRenditionsItemSd               = RecordingConfigurationRenditionConfigurationRenditionsItem("SD")
	RecordingConfigurationRenditionConfigurationRenditionsItemLowestResolution = RecordingConfigurationRenditionConfigurationRenditionsItem("LOWEST_RESOLUTION")
)

func (RecordingConfigurationRenditionConfigurationRenditionsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionsItem)(nil)).Elem()
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToRecordingConfigurationRenditionConfigurationRenditionsItemOutput() RecordingConfigurationRenditionConfigurationRenditionsItemOutput {
	return pulumi.ToOutput(e).(RecordingConfigurationRenditionConfigurationRenditionsItemOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToRecordingConfigurationRenditionConfigurationRenditionsItemOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecordingConfigurationRenditionConfigurationRenditionsItemOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput() RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return e.ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return RecordingConfigurationRenditionConfigurationRenditionsItem(e).ToRecordingConfigurationRenditionConfigurationRenditionsItemOutputWithContext(ctx).ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(ctx)
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationRenditionConfigurationRenditionsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecordingConfigurationRenditionConfigurationRenditionsItemOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionsItem)(nil)).Elem()
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemOutput() RecordingConfigurationRenditionConfigurationRenditionsItemOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput() RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return o.ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingConfigurationRenditionConfigurationRenditionsItem) *RecordingConfigurationRenditionConfigurationRenditionsItem {
		return &v
	}).(RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput)
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationRenditionConfigurationRenditionsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationRenditionConfigurationRenditionsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingConfigurationRenditionConfigurationRenditionsItem)(nil)).Elem()
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput() RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput) Elem() RecordingConfigurationRenditionConfigurationRenditionsItemOutput {
	return o.ApplyT(func(v *RecordingConfigurationRenditionConfigurationRenditionsItem) RecordingConfigurationRenditionConfigurationRenditionsItem {
		if v != nil {
			return *v
		}
		var ret RecordingConfigurationRenditionConfigurationRenditionsItem
		return ret
	}).(RecordingConfigurationRenditionConfigurationRenditionsItemOutput)
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordingConfigurationRenditionConfigurationRenditionsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecordingConfigurationRenditionConfigurationRenditionsItemInput is an input type that accepts values of the RecordingConfigurationRenditionConfigurationRenditionsItem enum
// A concrete instance of `RecordingConfigurationRenditionConfigurationRenditionsItemInput` can be one of the following:
//
//	RecordingConfigurationRenditionConfigurationRenditionsItemFullHd
//	RecordingConfigurationRenditionConfigurationRenditionsItemHd
//	RecordingConfigurationRenditionConfigurationRenditionsItemSd
//	RecordingConfigurationRenditionConfigurationRenditionsItemLowestResolution
type RecordingConfigurationRenditionConfigurationRenditionsItemInput interface {
	pulumi.Input

	ToRecordingConfigurationRenditionConfigurationRenditionsItemOutput() RecordingConfigurationRenditionConfigurationRenditionsItemOutput
	ToRecordingConfigurationRenditionConfigurationRenditionsItemOutputWithContext(context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemOutput
}

var recordingConfigurationRenditionConfigurationRenditionsItemPtrType = reflect.TypeOf((**RecordingConfigurationRenditionConfigurationRenditionsItem)(nil)).Elem()

type RecordingConfigurationRenditionConfigurationRenditionsItemPtrInput interface {
	pulumi.Input

	ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput() RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput
	ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput
}

type recordingConfigurationRenditionConfigurationRenditionsItemPtr string

func RecordingConfigurationRenditionConfigurationRenditionsItemPtr(v string) RecordingConfigurationRenditionConfigurationRenditionsItemPtrInput {
	return (*recordingConfigurationRenditionConfigurationRenditionsItemPtr)(&v)
}

func (*recordingConfigurationRenditionConfigurationRenditionsItemPtr) ElementType() reflect.Type {
	return recordingConfigurationRenditionConfigurationRenditionsItemPtrType
}

func (in *recordingConfigurationRenditionConfigurationRenditionsItemPtr) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput() RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return pulumi.ToOutput(in).(RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput)
}

func (in *recordingConfigurationRenditionConfigurationRenditionsItemPtr) ToRecordingConfigurationRenditionConfigurationRenditionsItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput)
}

// RecordingConfigurationRenditionConfigurationRenditionsItemArrayInput is an input type that accepts RecordingConfigurationRenditionConfigurationRenditionsItemArray and RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput values.
// You can construct a concrete instance of `RecordingConfigurationRenditionConfigurationRenditionsItemArrayInput` via:
//
//	RecordingConfigurationRenditionConfigurationRenditionsItemArray{ RecordingConfigurationRenditionConfigurationRenditionsItemArgs{...} }
type RecordingConfigurationRenditionConfigurationRenditionsItemArrayInput interface {
	pulumi.Input

	ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput() RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput
	ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutputWithContext(context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput
}

type RecordingConfigurationRenditionConfigurationRenditionsItemArray []RecordingConfigurationRenditionConfigurationRenditionsItem

func (RecordingConfigurationRenditionConfigurationRenditionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingConfigurationRenditionConfigurationRenditionsItem)(nil)).Elem()
}

func (i RecordingConfigurationRenditionConfigurationRenditionsItemArray) ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput() RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput {
	return i.ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutputWithContext(context.Background())
}

func (i RecordingConfigurationRenditionConfigurationRenditionsItemArray) ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput)
}

type RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingConfigurationRenditionConfigurationRenditionsItem)(nil)).Elem()
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput() RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput) ToRecordingConfigurationRenditionConfigurationRenditionsItemArrayOutputWithContext(ctx context.Context) RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput {
	return o
}

func (o RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput) Index(i pulumi.IntInput) RecordingConfigurationRenditionConfigurationRenditionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordingConfigurationRenditionConfigurationRenditionsItem {
		return vs[0].([]RecordingConfigurationRenditionConfigurationRenditionsItem)[vs[1].(int)]
	}).(RecordingConfigurationRenditionConfigurationRenditionsItemOutput)
}

// Recording Configuration State.
type RecordingConfigurationStateEnum string

const (
	RecordingConfigurationStateEnumCreating     = RecordingConfigurationStateEnum("CREATING")
	RecordingConfigurationStateEnumCreateFailed = RecordingConfigurationStateEnum("CREATE_FAILED")
	RecordingConfigurationStateEnumActive       = RecordingConfigurationStateEnum("ACTIVE")
)

type RecordingConfigurationStateEnumOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationStateEnum)(nil)).Elem()
}

func (o RecordingConfigurationStateEnumOutput) ToRecordingConfigurationStateEnumOutput() RecordingConfigurationStateEnumOutput {
	return o
}

func (o RecordingConfigurationStateEnumOutput) ToRecordingConfigurationStateEnumOutputWithContext(ctx context.Context) RecordingConfigurationStateEnumOutput {
	return o
}

func (o RecordingConfigurationStateEnumOutput) ToRecordingConfigurationStateEnumPtrOutput() RecordingConfigurationStateEnumPtrOutput {
	return o.ToRecordingConfigurationStateEnumPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationStateEnumOutput) ToRecordingConfigurationStateEnumPtrOutputWithContext(ctx context.Context) RecordingConfigurationStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingConfigurationStateEnum) *RecordingConfigurationStateEnum {
		return &v
	}).(RecordingConfigurationStateEnumPtrOutput)
}

func (o RecordingConfigurationStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordingConfigurationStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordingConfigurationStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordingConfigurationStateEnumPtrOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingConfigurationStateEnum)(nil)).Elem()
}

func (o RecordingConfigurationStateEnumPtrOutput) ToRecordingConfigurationStateEnumPtrOutput() RecordingConfigurationStateEnumPtrOutput {
	return o
}

func (o RecordingConfigurationStateEnumPtrOutput) ToRecordingConfigurationStateEnumPtrOutputWithContext(ctx context.Context) RecordingConfigurationStateEnumPtrOutput {
	return o
}

func (o RecordingConfigurationStateEnumPtrOutput) Elem() RecordingConfigurationStateEnumOutput {
	return o.ApplyT(func(v *RecordingConfigurationStateEnum) RecordingConfigurationStateEnum {
		if v != nil {
			return *v
		}
		var ret RecordingConfigurationStateEnum
		return ret
	}).(RecordingConfigurationStateEnumOutput)
}

func (o RecordingConfigurationStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordingConfigurationStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Thumbnail Recording Mode, which determines whether thumbnails are recorded at an interval or are disabled.
type RecordingConfigurationThumbnailConfigurationRecordingMode string

const (
	RecordingConfigurationThumbnailConfigurationRecordingModeInterval = RecordingConfigurationThumbnailConfigurationRecordingMode("INTERVAL")
	RecordingConfigurationThumbnailConfigurationRecordingModeDisabled = RecordingConfigurationThumbnailConfigurationRecordingMode("DISABLED")
)

func (RecordingConfigurationThumbnailConfigurationRecordingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationRecordingMode)(nil)).Elem()
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToRecordingConfigurationThumbnailConfigurationRecordingModeOutput() RecordingConfigurationThumbnailConfigurationRecordingModeOutput {
	return pulumi.ToOutput(e).(RecordingConfigurationThumbnailConfigurationRecordingModeOutput)
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToRecordingConfigurationThumbnailConfigurationRecordingModeOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationRecordingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecordingConfigurationThumbnailConfigurationRecordingModeOutput)
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutput() RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return e.ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return RecordingConfigurationThumbnailConfigurationRecordingMode(e).ToRecordingConfigurationThumbnailConfigurationRecordingModeOutputWithContext(ctx).ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(ctx)
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationThumbnailConfigurationRecordingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecordingConfigurationThumbnailConfigurationRecordingModeOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationRecordingMode)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToRecordingConfigurationThumbnailConfigurationRecordingModeOutput() RecordingConfigurationThumbnailConfigurationRecordingModeOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToRecordingConfigurationThumbnailConfigurationRecordingModeOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationRecordingModeOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutput() RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return o.ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingConfigurationThumbnailConfigurationRecordingMode) *RecordingConfigurationThumbnailConfigurationRecordingMode {
		return &v
	}).(RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput)
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationThumbnailConfigurationRecordingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationThumbnailConfigurationRecordingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingConfigurationThumbnailConfigurationRecordingMode)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutput() RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput) Elem() RecordingConfigurationThumbnailConfigurationRecordingModeOutput {
	return o.ApplyT(func(v *RecordingConfigurationThumbnailConfigurationRecordingMode) RecordingConfigurationThumbnailConfigurationRecordingMode {
		if v != nil {
			return *v
		}
		var ret RecordingConfigurationThumbnailConfigurationRecordingMode
		return ret
	}).(RecordingConfigurationThumbnailConfigurationRecordingModeOutput)
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordingConfigurationThumbnailConfigurationRecordingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecordingConfigurationThumbnailConfigurationRecordingModeInput is an input type that accepts values of the RecordingConfigurationThumbnailConfigurationRecordingMode enum
// A concrete instance of `RecordingConfigurationThumbnailConfigurationRecordingModeInput` can be one of the following:
//
//	RecordingConfigurationThumbnailConfigurationRecordingModeInterval
//	RecordingConfigurationThumbnailConfigurationRecordingModeDisabled
type RecordingConfigurationThumbnailConfigurationRecordingModeInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationRecordingModeOutput() RecordingConfigurationThumbnailConfigurationRecordingModeOutput
	ToRecordingConfigurationThumbnailConfigurationRecordingModeOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationRecordingModeOutput
}

var recordingConfigurationThumbnailConfigurationRecordingModePtrType = reflect.TypeOf((**RecordingConfigurationThumbnailConfigurationRecordingMode)(nil)).Elem()

type RecordingConfigurationThumbnailConfigurationRecordingModePtrInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutput() RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput
	ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput
}

type recordingConfigurationThumbnailConfigurationRecordingModePtr string

func RecordingConfigurationThumbnailConfigurationRecordingModePtr(v string) RecordingConfigurationThumbnailConfigurationRecordingModePtrInput {
	return (*recordingConfigurationThumbnailConfigurationRecordingModePtr)(&v)
}

func (*recordingConfigurationThumbnailConfigurationRecordingModePtr) ElementType() reflect.Type {
	return recordingConfigurationThumbnailConfigurationRecordingModePtrType
}

func (in *recordingConfigurationThumbnailConfigurationRecordingModePtr) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutput() RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return pulumi.ToOutput(in).(RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput)
}

func (in *recordingConfigurationThumbnailConfigurationRecordingModePtr) ToRecordingConfigurationThumbnailConfigurationRecordingModePtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput)
}

// Resolution indicates the desired resolution of recorded thumbnails.
type RecordingConfigurationThumbnailConfigurationResolution string

const (
	RecordingConfigurationThumbnailConfigurationResolutionFullHd           = RecordingConfigurationThumbnailConfigurationResolution("FULL_HD")
	RecordingConfigurationThumbnailConfigurationResolutionHd               = RecordingConfigurationThumbnailConfigurationResolution("HD")
	RecordingConfigurationThumbnailConfigurationResolutionSd               = RecordingConfigurationThumbnailConfigurationResolution("SD")
	RecordingConfigurationThumbnailConfigurationResolutionLowestResolution = RecordingConfigurationThumbnailConfigurationResolution("LOWEST_RESOLUTION")
)

func (RecordingConfigurationThumbnailConfigurationResolution) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationResolution)(nil)).Elem()
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToRecordingConfigurationThumbnailConfigurationResolutionOutput() RecordingConfigurationThumbnailConfigurationResolutionOutput {
	return pulumi.ToOutput(e).(RecordingConfigurationThumbnailConfigurationResolutionOutput)
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToRecordingConfigurationThumbnailConfigurationResolutionOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecordingConfigurationThumbnailConfigurationResolutionOutput)
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutput() RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return e.ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return RecordingConfigurationThumbnailConfigurationResolution(e).ToRecordingConfigurationThumbnailConfigurationResolutionOutputWithContext(ctx).ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(ctx)
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationThumbnailConfigurationResolution) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecordingConfigurationThumbnailConfigurationResolutionOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationResolution)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToRecordingConfigurationThumbnailConfigurationResolutionOutput() RecordingConfigurationThumbnailConfigurationResolutionOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToRecordingConfigurationThumbnailConfigurationResolutionOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationResolutionOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutput() RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return o.ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingConfigurationThumbnailConfigurationResolution) *RecordingConfigurationThumbnailConfigurationResolution {
		return &v
	}).(RecordingConfigurationThumbnailConfigurationResolutionPtrOutput)
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationThumbnailConfigurationResolution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationResolutionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationThumbnailConfigurationResolution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordingConfigurationThumbnailConfigurationResolutionPtrOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingConfigurationThumbnailConfigurationResolution)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationResolutionPtrOutput) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutput() RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationResolutionPtrOutput) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationResolutionPtrOutput) Elem() RecordingConfigurationThumbnailConfigurationResolutionOutput {
	return o.ApplyT(func(v *RecordingConfigurationThumbnailConfigurationResolution) RecordingConfigurationThumbnailConfigurationResolution {
		if v != nil {
			return *v
		}
		var ret RecordingConfigurationThumbnailConfigurationResolution
		return ret
	}).(RecordingConfigurationThumbnailConfigurationResolutionOutput)
}

func (o RecordingConfigurationThumbnailConfigurationResolutionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationResolutionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordingConfigurationThumbnailConfigurationResolution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecordingConfigurationThumbnailConfigurationResolutionInput is an input type that accepts values of the RecordingConfigurationThumbnailConfigurationResolution enum
// A concrete instance of `RecordingConfigurationThumbnailConfigurationResolutionInput` can be one of the following:
//
//	RecordingConfigurationThumbnailConfigurationResolutionFullHd
//	RecordingConfigurationThumbnailConfigurationResolutionHd
//	RecordingConfigurationThumbnailConfigurationResolutionSd
//	RecordingConfigurationThumbnailConfigurationResolutionLowestResolution
type RecordingConfigurationThumbnailConfigurationResolutionInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationResolutionOutput() RecordingConfigurationThumbnailConfigurationResolutionOutput
	ToRecordingConfigurationThumbnailConfigurationResolutionOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationResolutionOutput
}

var recordingConfigurationThumbnailConfigurationResolutionPtrType = reflect.TypeOf((**RecordingConfigurationThumbnailConfigurationResolution)(nil)).Elem()

type RecordingConfigurationThumbnailConfigurationResolutionPtrInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutput() RecordingConfigurationThumbnailConfigurationResolutionPtrOutput
	ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationResolutionPtrOutput
}

type recordingConfigurationThumbnailConfigurationResolutionPtr string

func RecordingConfigurationThumbnailConfigurationResolutionPtr(v string) RecordingConfigurationThumbnailConfigurationResolutionPtrInput {
	return (*recordingConfigurationThumbnailConfigurationResolutionPtr)(&v)
}

func (*recordingConfigurationThumbnailConfigurationResolutionPtr) ElementType() reflect.Type {
	return recordingConfigurationThumbnailConfigurationResolutionPtrType
}

func (in *recordingConfigurationThumbnailConfigurationResolutionPtr) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutput() RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return pulumi.ToOutput(in).(RecordingConfigurationThumbnailConfigurationResolutionPtrOutput)
}

func (in *recordingConfigurationThumbnailConfigurationResolutionPtr) ToRecordingConfigurationThumbnailConfigurationResolutionPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecordingConfigurationThumbnailConfigurationResolutionPtrOutput)
}

type RecordingConfigurationThumbnailConfigurationStorageItem string

const (
	RecordingConfigurationThumbnailConfigurationStorageItemSequential = RecordingConfigurationThumbnailConfigurationStorageItem("SEQUENTIAL")
	RecordingConfigurationThumbnailConfigurationStorageItemLatest     = RecordingConfigurationThumbnailConfigurationStorageItem("LATEST")
)

func (RecordingConfigurationThumbnailConfigurationStorageItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationStorageItem)(nil)).Elem()
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToRecordingConfigurationThumbnailConfigurationStorageItemOutput() RecordingConfigurationThumbnailConfigurationStorageItemOutput {
	return pulumi.ToOutput(e).(RecordingConfigurationThumbnailConfigurationStorageItemOutput)
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToRecordingConfigurationThumbnailConfigurationStorageItemOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecordingConfigurationThumbnailConfigurationStorageItemOutput)
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutput() RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return e.ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return RecordingConfigurationThumbnailConfigurationStorageItem(e).ToRecordingConfigurationThumbnailConfigurationStorageItemOutputWithContext(ctx).ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(ctx)
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecordingConfigurationThumbnailConfigurationStorageItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecordingConfigurationThumbnailConfigurationStorageItemOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationStorageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationStorageItem)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemOutput() RecordingConfigurationThumbnailConfigurationStorageItemOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutput() RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return o.ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordingConfigurationThumbnailConfigurationStorageItem) *RecordingConfigurationThumbnailConfigurationStorageItem {
		return &v
	}).(RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput)
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationThumbnailConfigurationStorageItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordingConfigurationThumbnailConfigurationStorageItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordingConfigurationThumbnailConfigurationStorageItem)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutput() RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput) Elem() RecordingConfigurationThumbnailConfigurationStorageItemOutput {
	return o.ApplyT(func(v *RecordingConfigurationThumbnailConfigurationStorageItem) RecordingConfigurationThumbnailConfigurationStorageItem {
		if v != nil {
			return *v
		}
		var ret RecordingConfigurationThumbnailConfigurationStorageItem
		return ret
	}).(RecordingConfigurationThumbnailConfigurationStorageItemOutput)
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordingConfigurationThumbnailConfigurationStorageItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecordingConfigurationThumbnailConfigurationStorageItemInput is an input type that accepts values of the RecordingConfigurationThumbnailConfigurationStorageItem enum
// A concrete instance of `RecordingConfigurationThumbnailConfigurationStorageItemInput` can be one of the following:
//
//	RecordingConfigurationThumbnailConfigurationStorageItemSequential
//	RecordingConfigurationThumbnailConfigurationStorageItemLatest
type RecordingConfigurationThumbnailConfigurationStorageItemInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationStorageItemOutput() RecordingConfigurationThumbnailConfigurationStorageItemOutput
	ToRecordingConfigurationThumbnailConfigurationStorageItemOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationStorageItemOutput
}

var recordingConfigurationThumbnailConfigurationStorageItemPtrType = reflect.TypeOf((**RecordingConfigurationThumbnailConfigurationStorageItem)(nil)).Elem()

type RecordingConfigurationThumbnailConfigurationStorageItemPtrInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutput() RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput
	ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput
}

type recordingConfigurationThumbnailConfigurationStorageItemPtr string

func RecordingConfigurationThumbnailConfigurationStorageItemPtr(v string) RecordingConfigurationThumbnailConfigurationStorageItemPtrInput {
	return (*recordingConfigurationThumbnailConfigurationStorageItemPtr)(&v)
}

func (*recordingConfigurationThumbnailConfigurationStorageItemPtr) ElementType() reflect.Type {
	return recordingConfigurationThumbnailConfigurationStorageItemPtrType
}

func (in *recordingConfigurationThumbnailConfigurationStorageItemPtr) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutput() RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return pulumi.ToOutput(in).(RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput)
}

func (in *recordingConfigurationThumbnailConfigurationStorageItemPtr) ToRecordingConfigurationThumbnailConfigurationStorageItemPtrOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput)
}

// RecordingConfigurationThumbnailConfigurationStorageItemArrayInput is an input type that accepts RecordingConfigurationThumbnailConfigurationStorageItemArray and RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput values.
// You can construct a concrete instance of `RecordingConfigurationThumbnailConfigurationStorageItemArrayInput` via:
//
//	RecordingConfigurationThumbnailConfigurationStorageItemArray{ RecordingConfigurationThumbnailConfigurationStorageItemArgs{...} }
type RecordingConfigurationThumbnailConfigurationStorageItemArrayInput interface {
	pulumi.Input

	ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutput() RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput
	ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutputWithContext(context.Context) RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput
}

type RecordingConfigurationThumbnailConfigurationStorageItemArray []RecordingConfigurationThumbnailConfigurationStorageItem

func (RecordingConfigurationThumbnailConfigurationStorageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingConfigurationThumbnailConfigurationStorageItem)(nil)).Elem()
}

func (i RecordingConfigurationThumbnailConfigurationStorageItemArray) ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutput() RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput {
	return i.ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutputWithContext(context.Background())
}

func (i RecordingConfigurationThumbnailConfigurationStorageItemArray) ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput)
}

type RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordingConfigurationThumbnailConfigurationStorageItem)(nil)).Elem()
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutput() RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput) ToRecordingConfigurationThumbnailConfigurationStorageItemArrayOutputWithContext(ctx context.Context) RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput {
	return o
}

func (o RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput) Index(i pulumi.IntInput) RecordingConfigurationThumbnailConfigurationStorageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordingConfigurationThumbnailConfigurationStorageItem {
		return vs[0].([]RecordingConfigurationThumbnailConfigurationStorageItem)[vs[1].(int)]
	}).(RecordingConfigurationThumbnailConfigurationStorageItemOutput)
}

type StageAutoParticipantRecordingConfigurationMediaTypesItem string

const (
	StageAutoParticipantRecordingConfigurationMediaTypesItemAudioVideo = StageAutoParticipantRecordingConfigurationMediaTypesItem("AUDIO_VIDEO")
	StageAutoParticipantRecordingConfigurationMediaTypesItemAudioOnly  = StageAutoParticipantRecordingConfigurationMediaTypesItem("AUDIO_ONLY")
)

func (StageAutoParticipantRecordingConfigurationMediaTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*StageAutoParticipantRecordingConfigurationMediaTypesItem)(nil)).Elem()
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemOutput {
	return pulumi.ToOutput(e).(StageAutoParticipantRecordingConfigurationMediaTypesItemOutput)
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StageAutoParticipantRecordingConfigurationMediaTypesItemOutput)
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return e.ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(context.Background())
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return StageAutoParticipantRecordingConfigurationMediaTypesItem(e).ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutputWithContext(ctx).ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(ctx)
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StageAutoParticipantRecordingConfigurationMediaTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StageAutoParticipantRecordingConfigurationMediaTypesItemOutput struct{ *pulumi.OutputState }

func (StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageAutoParticipantRecordingConfigurationMediaTypesItem)(nil)).Elem()
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemOutput {
	return o
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemOutput {
	return o
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return o.ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(context.Background())
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageAutoParticipantRecordingConfigurationMediaTypesItem) *StageAutoParticipantRecordingConfigurationMediaTypesItem {
		return &v
	}).(StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput)
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StageAutoParticipantRecordingConfigurationMediaTypesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StageAutoParticipantRecordingConfigurationMediaTypesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput struct{ *pulumi.OutputState }

func (StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageAutoParticipantRecordingConfigurationMediaTypesItem)(nil)).Elem()
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return o
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return o
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput) Elem() StageAutoParticipantRecordingConfigurationMediaTypesItemOutput {
	return o.ApplyT(func(v *StageAutoParticipantRecordingConfigurationMediaTypesItem) StageAutoParticipantRecordingConfigurationMediaTypesItem {
		if v != nil {
			return *v
		}
		var ret StageAutoParticipantRecordingConfigurationMediaTypesItem
		return ret
	}).(StageAutoParticipantRecordingConfigurationMediaTypesItemOutput)
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StageAutoParticipantRecordingConfigurationMediaTypesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StageAutoParticipantRecordingConfigurationMediaTypesItemInput is an input type that accepts values of the StageAutoParticipantRecordingConfigurationMediaTypesItem enum
// A concrete instance of `StageAutoParticipantRecordingConfigurationMediaTypesItemInput` can be one of the following:
//
//	StageAutoParticipantRecordingConfigurationMediaTypesItemAudioVideo
//	StageAutoParticipantRecordingConfigurationMediaTypesItemAudioOnly
type StageAutoParticipantRecordingConfigurationMediaTypesItemInput interface {
	pulumi.Input

	ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemOutput
	ToStageAutoParticipantRecordingConfigurationMediaTypesItemOutputWithContext(context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemOutput
}

var stageAutoParticipantRecordingConfigurationMediaTypesItemPtrType = reflect.TypeOf((**StageAutoParticipantRecordingConfigurationMediaTypesItem)(nil)).Elem()

type StageAutoParticipantRecordingConfigurationMediaTypesItemPtrInput interface {
	pulumi.Input

	ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput
	ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput
}

type stageAutoParticipantRecordingConfigurationMediaTypesItemPtr string

func StageAutoParticipantRecordingConfigurationMediaTypesItemPtr(v string) StageAutoParticipantRecordingConfigurationMediaTypesItemPtrInput {
	return (*stageAutoParticipantRecordingConfigurationMediaTypesItemPtr)(&v)
}

func (*stageAutoParticipantRecordingConfigurationMediaTypesItemPtr) ElementType() reflect.Type {
	return stageAutoParticipantRecordingConfigurationMediaTypesItemPtrType
}

func (in *stageAutoParticipantRecordingConfigurationMediaTypesItemPtr) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return pulumi.ToOutput(in).(StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput)
}

func (in *stageAutoParticipantRecordingConfigurationMediaTypesItemPtr) ToStageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput)
}

// StageAutoParticipantRecordingConfigurationMediaTypesItemArrayInput is an input type that accepts StageAutoParticipantRecordingConfigurationMediaTypesItemArray and StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput values.
// You can construct a concrete instance of `StageAutoParticipantRecordingConfigurationMediaTypesItemArrayInput` via:
//
//	StageAutoParticipantRecordingConfigurationMediaTypesItemArray{ StageAutoParticipantRecordingConfigurationMediaTypesItemArgs{...} }
type StageAutoParticipantRecordingConfigurationMediaTypesItemArrayInput interface {
	pulumi.Input

	ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput
	ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutputWithContext(context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput
}

type StageAutoParticipantRecordingConfigurationMediaTypesItemArray []StageAutoParticipantRecordingConfigurationMediaTypesItem

func (StageAutoParticipantRecordingConfigurationMediaTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageAutoParticipantRecordingConfigurationMediaTypesItem)(nil)).Elem()
}

func (i StageAutoParticipantRecordingConfigurationMediaTypesItemArray) ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput {
	return i.ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutputWithContext(context.Background())
}

func (i StageAutoParticipantRecordingConfigurationMediaTypesItemArray) ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput)
}

type StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput struct{ *pulumi.OutputState }

func (StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageAutoParticipantRecordingConfigurationMediaTypesItem)(nil)).Elem()
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput() StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput {
	return o
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput) ToStageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutputWithContext(ctx context.Context) StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput {
	return o
}

func (o StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput) Index(i pulumi.IntInput) StageAutoParticipantRecordingConfigurationMediaTypesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageAutoParticipantRecordingConfigurationMediaTypesItem {
		return vs[0].([]StageAutoParticipantRecordingConfigurationMediaTypesItem)[vs[1].(int)]
	}).(StageAutoParticipantRecordingConfigurationMediaTypesItemOutput)
}

// Thumbnail recording mode. Default: DISABLED.
type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode string

const (
	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeInterval = StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode("INTERVAL")
	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeDisabled = StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode("DISABLED")
)

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode)(nil)).Elem()
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput {
	return pulumi.ToOutput(e).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return e.ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(context.Background())
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode(e).ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutputWithContext(ctx).ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(ctx)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput struct{ *pulumi.OutputState }

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode)(nil)).Elem()
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return o.ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) *StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode {
		return &v
	}).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput)
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput struct{ *pulumi.OutputState }

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode)(nil)).Elem()
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput) Elem() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput {
	return o.ApplyT(func(v *StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode {
		if v != nil {
			return *v
		}
		var ret StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode
		return ret
	}).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput)
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeInput is an input type that accepts values of the StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode enum
// A concrete instance of `StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeInput` can be one of the following:
//
//	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeInterval
//	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeDisabled
type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeInput interface {
	pulumi.Input

	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput
	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutputWithContext(context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput
}

var stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrType = reflect.TypeOf((**StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode)(nil)).Elem()

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrInput interface {
	pulumi.Input

	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput
	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput
}

type stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtr string

func StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtr(v string) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrInput {
	return (*stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtr)(&v)
}

func (*stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtr) ElementType() reflect.Type {
	return stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrType
}

func (in *stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtr) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return pulumi.ToOutput(in).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput)
}

func (in *stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtr) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput)
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem string

const (
	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemSequential = StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem("SEQUENTIAL")
	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemLatest     = StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem("LATEST")
)

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ElementType() reflect.Type {
	return reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)(nil)).Elem()
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput {
	return pulumi.ToOutput(e).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return e.ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(context.Background())
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem(e).ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutputWithContext(ctx).ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(ctx)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput struct{ *pulumi.OutputState }

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)(nil)).Elem()
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return o.ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) *StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem {
		return &v
	}).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput)
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput struct{ *pulumi.OutputState }

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)(nil)).Elem()
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput) Elem() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput {
	return o.ApplyT(func(v *StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem {
		if v != nil {
			return *v
		}
		var ret StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem
		return ret
	}).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput)
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemInput is an input type that accepts values of the StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem enum
// A concrete instance of `StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemInput` can be one of the following:
//
//	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemSequential
//	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemLatest
type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemInput interface {
	pulumi.Input

	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput
	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutputWithContext(context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput
}

var stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrType = reflect.TypeOf((**StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)(nil)).Elem()

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrInput interface {
	pulumi.Input

	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput
	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput
}

type stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtr string

func StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtr(v string) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrInput {
	return (*stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtr)(&v)
}

func (*stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtr) ElementType() reflect.Type {
	return stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrType
}

func (in *stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtr) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return pulumi.ToOutput(in).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput)
}

func (in *stageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtr) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput)
}

// StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayInput is an input type that accepts StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray and StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput values.
// You can construct a concrete instance of `StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayInput` via:
//
//	StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray{ StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArgs{...} }
type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayInput interface {
	pulumi.Input

	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput
	ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutputWithContext(context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray []StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)(nil)).Elem()
}

func (i StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput {
	return i.ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutputWithContext(context.Background())
}

func (i StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput)
}

type StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput struct{ *pulumi.OutputState }

func (StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)(nil)).Elem()
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput() StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput) ToStageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutputWithContext(ctx context.Context) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput {
	return o
}

func (o StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput) Index(i pulumi.IntInput) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem {
		return vs[0].([]StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem)[vs[1].(int)]
	}).(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelContainerFormatInput)(nil)).Elem(), ChannelContainerFormat("TS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelContainerFormatPtrInput)(nil)).Elem(), ChannelContainerFormat("TS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelLatencyModeInput)(nil)).Elem(), ChannelLatencyMode("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelLatencyModePtrInput)(nil)).Elem(), ChannelLatencyMode("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelMultitrackInputConfigurationMaximumResolutionInput)(nil)).Elem(), ChannelMultitrackInputConfigurationMaximumResolution("SD"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelMultitrackInputConfigurationMaximumResolutionPtrInput)(nil)).Elem(), ChannelMultitrackInputConfigurationMaximumResolution("SD"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelMultitrackInputConfigurationPolicyInput)(nil)).Elem(), ChannelMultitrackInputConfigurationPolicy("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelMultitrackInputConfigurationPolicyPtrInput)(nil)).Elem(), ChannelMultitrackInputConfigurationPolicy("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelPresetInput)(nil)).Elem(), ChannelPreset(""))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelPresetPtrInput)(nil)).Elem(), ChannelPreset(""))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTypeInput)(nil)).Elem(), ChannelType("STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTypePtrInput)(nil)).Elem(), ChannelType("STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*IngestConfigurationIngestProtocolInput)(nil)).Elem(), IngestConfigurationIngestProtocol("RTMP"))
	pulumi.RegisterInputType(reflect.TypeOf((*IngestConfigurationIngestProtocolPtrInput)(nil)).Elem(), IngestConfigurationIngestProtocol("RTMP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionSelectionInput)(nil)).Elem(), RecordingConfigurationRenditionConfigurationRenditionSelection("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionSelectionPtrInput)(nil)).Elem(), RecordingConfigurationRenditionConfigurationRenditionSelection("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionsItemInput)(nil)).Elem(), RecordingConfigurationRenditionConfigurationRenditionsItem("FULL_HD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionsItemPtrInput)(nil)).Elem(), RecordingConfigurationRenditionConfigurationRenditionsItem("FULL_HD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationRenditionConfigurationRenditionsItemArrayInput)(nil)).Elem(), RecordingConfigurationRenditionConfigurationRenditionsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationRecordingModeInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationRecordingMode("INTERVAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationRecordingModePtrInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationRecordingMode("INTERVAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationResolutionInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationResolution("FULL_HD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationResolutionPtrInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationResolution("FULL_HD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationStorageItemInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationStorageItem("SEQUENTIAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationStorageItemPtrInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationStorageItem("SEQUENTIAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordingConfigurationThumbnailConfigurationStorageItemArrayInput)(nil)).Elem(), RecordingConfigurationThumbnailConfigurationStorageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageAutoParticipantRecordingConfigurationMediaTypesItemInput)(nil)).Elem(), StageAutoParticipantRecordingConfigurationMediaTypesItem("AUDIO_VIDEO"))
	pulumi.RegisterInputType(reflect.TypeOf((*StageAutoParticipantRecordingConfigurationMediaTypesItemPtrInput)(nil)).Elem(), StageAutoParticipantRecordingConfigurationMediaTypesItem("AUDIO_VIDEO"))
	pulumi.RegisterInputType(reflect.TypeOf((*StageAutoParticipantRecordingConfigurationMediaTypesItemArrayInput)(nil)).Elem(), StageAutoParticipantRecordingConfigurationMediaTypesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeInput)(nil)).Elem(), StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode("INTERVAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrInput)(nil)).Elem(), StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingMode("INTERVAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemInput)(nil)).Elem(), StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem("SEQUENTIAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrInput)(nil)).Elem(), StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItem("SEQUENTIAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayInput)(nil)).Elem(), StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArray{})
	pulumi.RegisterOutputType(ChannelContainerFormatOutput{})
	pulumi.RegisterOutputType(ChannelContainerFormatPtrOutput{})
	pulumi.RegisterOutputType(ChannelLatencyModeOutput{})
	pulumi.RegisterOutputType(ChannelLatencyModePtrOutput{})
	pulumi.RegisterOutputType(ChannelMultitrackInputConfigurationMaximumResolutionOutput{})
	pulumi.RegisterOutputType(ChannelMultitrackInputConfigurationMaximumResolutionPtrOutput{})
	pulumi.RegisterOutputType(ChannelMultitrackInputConfigurationPolicyOutput{})
	pulumi.RegisterOutputType(ChannelMultitrackInputConfigurationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ChannelPresetOutput{})
	pulumi.RegisterOutputType(ChannelPresetPtrOutput{})
	pulumi.RegisterOutputType(ChannelTypeOutput{})
	pulumi.RegisterOutputType(ChannelTypePtrOutput{})
	pulumi.RegisterOutputType(IngestConfigurationIngestProtocolOutput{})
	pulumi.RegisterOutputType(IngestConfigurationIngestProtocolPtrOutput{})
	pulumi.RegisterOutputType(IngestConfigurationStateEnumOutput{})
	pulumi.RegisterOutputType(IngestConfigurationStateEnumPtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationRenditionConfigurationRenditionSelectionOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationRenditionConfigurationRenditionSelectionPtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationRenditionConfigurationRenditionsItemOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationRenditionConfigurationRenditionsItemPtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationRenditionConfigurationRenditionsItemArrayOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationStateEnumOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationStateEnumPtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationRecordingModeOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationRecordingModePtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationResolutionOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationResolutionPtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationStorageItemOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationStorageItemPtrOutput{})
	pulumi.RegisterOutputType(RecordingConfigurationThumbnailConfigurationStorageItemArrayOutput{})
	pulumi.RegisterOutputType(StageAutoParticipantRecordingConfigurationMediaTypesItemOutput{})
	pulumi.RegisterOutputType(StageAutoParticipantRecordingConfigurationMediaTypesItemPtrOutput{})
	pulumi.RegisterOutputType(StageAutoParticipantRecordingConfigurationMediaTypesItemArrayOutput{})
	pulumi.RegisterOutputType(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModeOutput{})
	pulumi.RegisterOutputType(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesRecordingModePtrOutput{})
	pulumi.RegisterOutputType(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemOutput{})
	pulumi.RegisterOutputType(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemPtrOutput{})
	pulumi.RegisterOutputType(StageThumbnailConfigurationParticipantThumbnailConfigurationPropertiesStorageItemArrayOutput{})
}
