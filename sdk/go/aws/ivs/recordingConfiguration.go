// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ivs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html
type RecordingConfiguration struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-destinationconfiguration
	DestinationConfiguration RecordingConfigurationDestinationConfigurationOutput `pulumi:"destinationConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-name
	Name  pulumi.StringPtrOutput `pulumi:"name"`
	State pulumi.StringOutput    `pulumi:"state"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewRecordingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewRecordingConfiguration(ctx *pulumi.Context,
	name string, args *RecordingConfigurationArgs, opts ...pulumi.ResourceOption) (*RecordingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'DestinationConfiguration'")
	}
	var resource RecordingConfiguration
	err := ctx.RegisterResource("aws-native:ivs:RecordingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecordingConfiguration gets an existing RecordingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecordingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecordingConfigurationState, opts ...pulumi.ResourceOption) (*RecordingConfiguration, error) {
	var resource RecordingConfiguration
	err := ctx.ReadResource("aws-native:ivs:RecordingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RecordingConfiguration resources.
type recordingConfigurationState struct {
}

type RecordingConfigurationState struct {
}

func (RecordingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*recordingConfigurationState)(nil)).Elem()
}

type recordingConfigurationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-destinationconfiguration
	DestinationConfiguration RecordingConfigurationDestinationConfiguration `pulumi:"destinationConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a RecordingConfiguration resource.
type RecordingConfigurationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-destinationconfiguration
	DestinationConfiguration RecordingConfigurationDestinationConfigurationInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-name
	Name pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-tags
	Tags aws.TagArrayInput
}

func (RecordingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recordingConfigurationArgs)(nil)).Elem()
}

type RecordingConfigurationInput interface {
	pulumi.Input

	ToRecordingConfigurationOutput() RecordingConfigurationOutput
	ToRecordingConfigurationOutputWithContext(ctx context.Context) RecordingConfigurationOutput
}

func (*RecordingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfiguration)(nil))
}

func (i *RecordingConfiguration) ToRecordingConfigurationOutput() RecordingConfigurationOutput {
	return i.ToRecordingConfigurationOutputWithContext(context.Background())
}

func (i *RecordingConfiguration) ToRecordingConfigurationOutputWithContext(ctx context.Context) RecordingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordingConfigurationOutput)
}

type RecordingConfigurationOutput struct{ *pulumi.OutputState }

func (RecordingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordingConfiguration)(nil))
}

func (o RecordingConfigurationOutput) ToRecordingConfigurationOutput() RecordingConfigurationOutput {
	return o
}

func (o RecordingConfigurationOutput) ToRecordingConfigurationOutputWithContext(ctx context.Context) RecordingConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RecordingConfigurationOutput{})
}
