// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aps

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AnomalyDetector schema for cloudformation.
type AnomalyDetector struct {
	pulumi.CustomResourceState

	// The AnomalyDetector alias.
	Alias pulumi.StringOutput `pulumi:"alias"`
	// The AnomalyDetector ARN.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Determines the anomaly detector's algorithm and its configuration.
	Configuration AnomalyDetectorConfigurationOutput `pulumi:"configuration"`
	// The AnomalyDetector period of detection and metric generation.
	EvaluationIntervalInSeconds pulumi.IntPtrOutput `pulumi:"evaluationIntervalInSeconds"`
	// An array of key-value pairs to provide meta-data.
	Labels AnomalyDetectorLabelArrayOutput `pulumi:"labels"`
	// The action to perform when running the expression returns no data.
	MissingDataAction AnomalyDetectorMissingDataActionPtrOutput `pulumi:"missingDataAction"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Required to identify a specific APS Workspace associated with this Anomaly Detector.
	Workspace pulumi.StringOutput `pulumi:"workspace"`
}

// NewAnomalyDetector registers a new resource with the given unique name, arguments, and options.
func NewAnomalyDetector(ctx *pulumi.Context,
	name string, args *AnomalyDetectorArgs, opts ...pulumi.ResourceOption) (*AnomalyDetector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Alias == nil {
		return nil, errors.New("invalid value for required argument 'Alias'")
	}
	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Workspace == nil {
		return nil, errors.New("invalid value for required argument 'Workspace'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"alias",
		"workspace",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnomalyDetector
	err := ctx.RegisterResource("aws-native:aps:AnomalyDetector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnomalyDetector gets an existing AnomalyDetector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnomalyDetector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnomalyDetectorState, opts ...pulumi.ResourceOption) (*AnomalyDetector, error) {
	var resource AnomalyDetector
	err := ctx.ReadResource("aws-native:aps:AnomalyDetector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnomalyDetector resources.
type anomalyDetectorState struct {
}

type AnomalyDetectorState struct {
}

func (AnomalyDetectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyDetectorState)(nil)).Elem()
}

type anomalyDetectorArgs struct {
	// The AnomalyDetector alias.
	Alias string `pulumi:"alias"`
	// Determines the anomaly detector's algorithm and its configuration.
	Configuration AnomalyDetectorConfiguration `pulumi:"configuration"`
	// The AnomalyDetector period of detection and metric generation.
	EvaluationIntervalInSeconds *int `pulumi:"evaluationIntervalInSeconds"`
	// An array of key-value pairs to provide meta-data.
	Labels []AnomalyDetectorLabel `pulumi:"labels"`
	// The action to perform when running the expression returns no data.
	MissingDataAction *AnomalyDetectorMissingDataAction `pulumi:"missingDataAction"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// Required to identify a specific APS Workspace associated with this Anomaly Detector.
	Workspace string `pulumi:"workspace"`
}

// The set of arguments for constructing a AnomalyDetector resource.
type AnomalyDetectorArgs struct {
	// The AnomalyDetector alias.
	Alias pulumi.StringInput
	// Determines the anomaly detector's algorithm and its configuration.
	Configuration AnomalyDetectorConfigurationInput
	// The AnomalyDetector period of detection and metric generation.
	EvaluationIntervalInSeconds pulumi.IntPtrInput
	// An array of key-value pairs to provide meta-data.
	Labels AnomalyDetectorLabelArrayInput
	// The action to perform when running the expression returns no data.
	MissingDataAction AnomalyDetectorMissingDataActionPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
	// Required to identify a specific APS Workspace associated with this Anomaly Detector.
	Workspace pulumi.StringInput
}

func (AnomalyDetectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyDetectorArgs)(nil)).Elem()
}

type AnomalyDetectorInput interface {
	pulumi.Input

	ToAnomalyDetectorOutput() AnomalyDetectorOutput
	ToAnomalyDetectorOutputWithContext(ctx context.Context) AnomalyDetectorOutput
}

func (*AnomalyDetector) ElementType() reflect.Type {
	return reflect.TypeOf((**AnomalyDetector)(nil)).Elem()
}

func (i *AnomalyDetector) ToAnomalyDetectorOutput() AnomalyDetectorOutput {
	return i.ToAnomalyDetectorOutputWithContext(context.Background())
}

func (i *AnomalyDetector) ToAnomalyDetectorOutputWithContext(ctx context.Context) AnomalyDetectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyDetectorOutput)
}

type AnomalyDetectorOutput struct{ *pulumi.OutputState }

func (AnomalyDetectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnomalyDetector)(nil)).Elem()
}

func (o AnomalyDetectorOutput) ToAnomalyDetectorOutput() AnomalyDetectorOutput {
	return o
}

func (o AnomalyDetectorOutput) ToAnomalyDetectorOutputWithContext(ctx context.Context) AnomalyDetectorOutput {
	return o
}

// The AnomalyDetector alias.
func (o AnomalyDetectorOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v *AnomalyDetector) pulumi.StringOutput { return v.Alias }).(pulumi.StringOutput)
}

// The AnomalyDetector ARN.
func (o AnomalyDetectorOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AnomalyDetector) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Determines the anomaly detector's algorithm and its configuration.
func (o AnomalyDetectorOutput) Configuration() AnomalyDetectorConfigurationOutput {
	return o.ApplyT(func(v *AnomalyDetector) AnomalyDetectorConfigurationOutput { return v.Configuration }).(AnomalyDetectorConfigurationOutput)
}

// The AnomalyDetector period of detection and metric generation.
func (o AnomalyDetectorOutput) EvaluationIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnomalyDetector) pulumi.IntPtrOutput { return v.EvaluationIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// An array of key-value pairs to provide meta-data.
func (o AnomalyDetectorOutput) Labels() AnomalyDetectorLabelArrayOutput {
	return o.ApplyT(func(v *AnomalyDetector) AnomalyDetectorLabelArrayOutput { return v.Labels }).(AnomalyDetectorLabelArrayOutput)
}

// The action to perform when running the expression returns no data.
func (o AnomalyDetectorOutput) MissingDataAction() AnomalyDetectorMissingDataActionPtrOutput {
	return o.ApplyT(func(v *AnomalyDetector) AnomalyDetectorMissingDataActionPtrOutput { return v.MissingDataAction }).(AnomalyDetectorMissingDataActionPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o AnomalyDetectorOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *AnomalyDetector) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Required to identify a specific APS Workspace associated with this Anomaly Detector.
func (o AnomalyDetectorOutput) Workspace() pulumi.StringOutput {
	return o.ApplyT(func(v *AnomalyDetector) pulumi.StringOutput { return v.Workspace }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalyDetectorInput)(nil)).Elem(), &AnomalyDetector{})
	pulumi.RegisterOutputType(AnomalyDetectorOutput{})
}
