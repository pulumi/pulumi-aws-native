// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type WorkspaceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// WorkspaceTagInput is an input type that accepts WorkspaceTagArgs and WorkspaceTagOutput values.
// You can construct a concrete instance of `WorkspaceTagInput` via:
//
//          WorkspaceTagArgs{...}
type WorkspaceTagInput interface {
	pulumi.Input

	ToWorkspaceTagOutput() WorkspaceTagOutput
	ToWorkspaceTagOutputWithContext(context.Context) WorkspaceTagOutput
}

// A key-value pair to associate with a resource.
type WorkspaceTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkspaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTag)(nil)).Elem()
}

func (i WorkspaceTagArgs) ToWorkspaceTagOutput() WorkspaceTagOutput {
	return i.ToWorkspaceTagOutputWithContext(context.Background())
}

func (i WorkspaceTagArgs) ToWorkspaceTagOutputWithContext(ctx context.Context) WorkspaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTagOutput)
}

// WorkspaceTagArrayInput is an input type that accepts WorkspaceTagArray and WorkspaceTagArrayOutput values.
// You can construct a concrete instance of `WorkspaceTagArrayInput` via:
//
//          WorkspaceTagArray{ WorkspaceTagArgs{...} }
type WorkspaceTagArrayInput interface {
	pulumi.Input

	ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput
	ToWorkspaceTagArrayOutputWithContext(context.Context) WorkspaceTagArrayOutput
}

type WorkspaceTagArray []WorkspaceTagInput

func (WorkspaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTag)(nil)).Elem()
}

func (i WorkspaceTagArray) ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput {
	return i.ToWorkspaceTagArrayOutputWithContext(context.Background())
}

func (i WorkspaceTagArray) ToWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTagArrayOutput)
}

// A key-value pair to associate with a resource.
type WorkspaceTagOutput struct{ *pulumi.OutputState }

func (WorkspaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTag)(nil)).Elem()
}

func (o WorkspaceTagOutput) ToWorkspaceTagOutput() WorkspaceTagOutput {
	return o
}

func (o WorkspaceTagOutput) ToWorkspaceTagOutputWithContext(ctx context.Context) WorkspaceTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o WorkspaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o WorkspaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkspaceTagArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTag)(nil)).Elem()
}

func (o WorkspaceTagArrayOutput) ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput {
	return o
}

func (o WorkspaceTagArrayOutput) ToWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspaceTagArrayOutput {
	return o
}

func (o WorkspaceTagArrayOutput) Index(i pulumi.IntInput) WorkspaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceTag {
		return vs[0].([]WorkspaceTag)[vs[1].(int)]
	}).(WorkspaceTagOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkspaceTagOutput{})
	pulumi.RegisterOutputType(WorkspaceTagArrayOutput{})
}
