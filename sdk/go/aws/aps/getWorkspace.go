// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::APS::Workspace
func LookupWorkspace(ctx *pulumi.Context, args *LookupWorkspaceArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceResult, error) {
	var rv LookupWorkspaceResult
	err := ctx.Invoke("aws-native:aps:getWorkspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkspaceArgs struct {
	// Workspace arn.
	Arn string `pulumi:"arn"`
}

type LookupWorkspaceResult struct {
	// The AMP Workspace alert manager definition data
	AlertManagerDefinition *string `pulumi:"alertManagerDefinition"`
	// AMP Workspace alias.
	Alias *string `pulumi:"alias"`
	// Workspace arn.
	Arn *string `pulumi:"arn"`
	// AMP Workspace prometheus endpoint
	PrometheusEndpoint *string `pulumi:"prometheusEndpoint"`
	// An array of key-value pairs to apply to this resource.
	Tags []WorkspaceTag `pulumi:"tags"`
	// Required to identify a specific APS Workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
}

func LookupWorkspaceOutput(ctx *pulumi.Context, args LookupWorkspaceOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceResult, error) {
			args := v.(LookupWorkspaceArgs)
			r, err := LookupWorkspace(ctx, &args, opts...)
			var s LookupWorkspaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceResultOutput)
}

type LookupWorkspaceOutputArgs struct {
	// Workspace arn.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupWorkspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceArgs)(nil)).Elem()
}

type LookupWorkspaceResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceResult)(nil)).Elem()
}

func (o LookupWorkspaceResultOutput) ToLookupWorkspaceResultOutput() LookupWorkspaceResultOutput {
	return o
}

func (o LookupWorkspaceResultOutput) ToLookupWorkspaceResultOutputWithContext(ctx context.Context) LookupWorkspaceResultOutput {
	return o
}

// The AMP Workspace alert manager definition data
func (o LookupWorkspaceResultOutput) AlertManagerDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.AlertManagerDefinition }).(pulumi.StringPtrOutput)
}

// AMP Workspace alias.
func (o LookupWorkspaceResultOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Workspace arn.
func (o LookupWorkspaceResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// AMP Workspace prometheus endpoint
func (o LookupWorkspaceResultOutput) PrometheusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.PrometheusEndpoint }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupWorkspaceResultOutput) Tags() WorkspaceTagArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) []WorkspaceTag { return v.Tags }).(WorkspaceTagArrayOutput)
}

// Required to identify a specific APS Workspace.
func (o LookupWorkspaceResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceResultOutput{})
}
