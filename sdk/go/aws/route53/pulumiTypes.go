// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
type HealthCheckAlarmIdentifier struct {
	// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
	Name string `pulumi:"name"`
	// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
	Region string `pulumi:"region"`
}

// HealthCheckAlarmIdentifierInput is an input type that accepts HealthCheckAlarmIdentifierArgs and HealthCheckAlarmIdentifierOutput values.
// You can construct a concrete instance of `HealthCheckAlarmIdentifierInput` via:
//
//          HealthCheckAlarmIdentifierArgs{...}
type HealthCheckAlarmIdentifierInput interface {
	pulumi.Input

	ToHealthCheckAlarmIdentifierOutput() HealthCheckAlarmIdentifierOutput
	ToHealthCheckAlarmIdentifierOutputWithContext(context.Context) HealthCheckAlarmIdentifierOutput
}

// A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
type HealthCheckAlarmIdentifierArgs struct {
	// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
	Name pulumi.StringInput `pulumi:"name"`
	// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
	Region pulumi.StringInput `pulumi:"region"`
}

func (HealthCheckAlarmIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierOutput() HealthCheckAlarmIdentifierOutput {
	return i.ToHealthCheckAlarmIdentifierOutputWithContext(context.Background())
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckAlarmIdentifierOutput)
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return i.ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Background())
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckAlarmIdentifierOutput).ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx)
}

// HealthCheckAlarmIdentifierPtrInput is an input type that accepts HealthCheckAlarmIdentifierArgs, HealthCheckAlarmIdentifierPtr and HealthCheckAlarmIdentifierPtrOutput values.
// You can construct a concrete instance of `HealthCheckAlarmIdentifierPtrInput` via:
//
//          HealthCheckAlarmIdentifierArgs{...}
//
//  or:
//
//          nil
type HealthCheckAlarmIdentifierPtrInput interface {
	pulumi.Input

	ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput
	ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Context) HealthCheckAlarmIdentifierPtrOutput
}

type healthCheckAlarmIdentifierPtrType HealthCheckAlarmIdentifierArgs

func HealthCheckAlarmIdentifierPtr(v *HealthCheckAlarmIdentifierArgs) HealthCheckAlarmIdentifierPtrInput {
	return (*healthCheckAlarmIdentifierPtrType)(v)
}

func (*healthCheckAlarmIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (i *healthCheckAlarmIdentifierPtrType) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return i.ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Background())
}

func (i *healthCheckAlarmIdentifierPtrType) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckAlarmIdentifierPtrOutput)
}

// A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
type HealthCheckAlarmIdentifierOutput struct{ *pulumi.OutputState }

func (HealthCheckAlarmIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierOutput() HealthCheckAlarmIdentifierOutput {
	return o
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierOutput {
	return o
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return o.ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Background())
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthCheckAlarmIdentifier) *HealthCheckAlarmIdentifier {
		return &v
	}).(HealthCheckAlarmIdentifierPtrOutput)
}

// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
func (o HealthCheckAlarmIdentifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckAlarmIdentifier) string { return v.Name }).(pulumi.StringOutput)
}

// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
func (o HealthCheckAlarmIdentifierOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckAlarmIdentifier) string { return v.Region }).(pulumi.StringOutput)
}

type HealthCheckAlarmIdentifierPtrOutput struct{ *pulumi.OutputState }

func (HealthCheckAlarmIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (o HealthCheckAlarmIdentifierPtrOutput) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return o
}

func (o HealthCheckAlarmIdentifierPtrOutput) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return o
}

func (o HealthCheckAlarmIdentifierPtrOutput) Elem() HealthCheckAlarmIdentifierOutput {
	return o.ApplyT(func(v *HealthCheckAlarmIdentifier) HealthCheckAlarmIdentifier {
		if v != nil {
			return *v
		}
		var ret HealthCheckAlarmIdentifier
		return ret
	}).(HealthCheckAlarmIdentifierOutput)
}

// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
func (o HealthCheckAlarmIdentifierPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckAlarmIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
func (o HealthCheckAlarmIdentifierPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckAlarmIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about the health check.
type HealthCheckConfigProperties struct {
	AlarmIdentifier              *HealthCheckAlarmIdentifier                              `pulumi:"alarmIdentifier"`
	ChildHealthChecks            []string                                                 `pulumi:"childHealthChecks"`
	EnableSNI                    *bool                                                    `pulumi:"enableSNI"`
	FailureThreshold             *int                                                     `pulumi:"failureThreshold"`
	FullyQualifiedDomainName     *string                                                  `pulumi:"fullyQualifiedDomainName"`
	HealthThreshold              *int                                                     `pulumi:"healthThreshold"`
	IPAddress                    *string                                                  `pulumi:"iPAddress"`
	InsufficientDataHealthStatus *HealthCheckConfigPropertiesInsufficientDataHealthStatus `pulumi:"insufficientDataHealthStatus"`
	Inverted                     *bool                                                    `pulumi:"inverted"`
	MeasureLatency               *bool                                                    `pulumi:"measureLatency"`
	Port                         *int                                                     `pulumi:"port"`
	Regions                      []string                                                 `pulumi:"regions"`
	RequestInterval              *int                                                     `pulumi:"requestInterval"`
	ResourcePath                 *string                                                  `pulumi:"resourcePath"`
	RoutingControlArn            *string                                                  `pulumi:"routingControlArn"`
	SearchString                 *string                                                  `pulumi:"searchString"`
	Type                         HealthCheckConfigPropertiesType                          `pulumi:"type"`
}

// HealthCheckConfigPropertiesInput is an input type that accepts HealthCheckConfigPropertiesArgs and HealthCheckConfigPropertiesOutput values.
// You can construct a concrete instance of `HealthCheckConfigPropertiesInput` via:
//
//          HealthCheckConfigPropertiesArgs{...}
type HealthCheckConfigPropertiesInput interface {
	pulumi.Input

	ToHealthCheckConfigPropertiesOutput() HealthCheckConfigPropertiesOutput
	ToHealthCheckConfigPropertiesOutputWithContext(context.Context) HealthCheckConfigPropertiesOutput
}

// A complex type that contains information about the health check.
type HealthCheckConfigPropertiesArgs struct {
	AlarmIdentifier              HealthCheckAlarmIdentifierPtrInput                              `pulumi:"alarmIdentifier"`
	ChildHealthChecks            pulumi.StringArrayInput                                         `pulumi:"childHealthChecks"`
	EnableSNI                    pulumi.BoolPtrInput                                             `pulumi:"enableSNI"`
	FailureThreshold             pulumi.IntPtrInput                                              `pulumi:"failureThreshold"`
	FullyQualifiedDomainName     pulumi.StringPtrInput                                           `pulumi:"fullyQualifiedDomainName"`
	HealthThreshold              pulumi.IntPtrInput                                              `pulumi:"healthThreshold"`
	IPAddress                    pulumi.StringPtrInput                                           `pulumi:"iPAddress"`
	InsufficientDataHealthStatus HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrInput `pulumi:"insufficientDataHealthStatus"`
	Inverted                     pulumi.BoolPtrInput                                             `pulumi:"inverted"`
	MeasureLatency               pulumi.BoolPtrInput                                             `pulumi:"measureLatency"`
	Port                         pulumi.IntPtrInput                                              `pulumi:"port"`
	Regions                      pulumi.StringArrayInput                                         `pulumi:"regions"`
	RequestInterval              pulumi.IntPtrInput                                              `pulumi:"requestInterval"`
	ResourcePath                 pulumi.StringPtrInput                                           `pulumi:"resourcePath"`
	RoutingControlArn            pulumi.StringPtrInput                                           `pulumi:"routingControlArn"`
	SearchString                 pulumi.StringPtrInput                                           `pulumi:"searchString"`
	Type                         HealthCheckConfigPropertiesTypeInput                            `pulumi:"type"`
}

func (HealthCheckConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckConfigProperties)(nil)).Elem()
}

func (i HealthCheckConfigPropertiesArgs) ToHealthCheckConfigPropertiesOutput() HealthCheckConfigPropertiesOutput {
	return i.ToHealthCheckConfigPropertiesOutputWithContext(context.Background())
}

func (i HealthCheckConfigPropertiesArgs) ToHealthCheckConfigPropertiesOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckConfigPropertiesOutput)
}

func (i HealthCheckConfigPropertiesArgs) ToHealthCheckConfigPropertiesPtrOutput() HealthCheckConfigPropertiesPtrOutput {
	return i.ToHealthCheckConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i HealthCheckConfigPropertiesArgs) ToHealthCheckConfigPropertiesPtrOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckConfigPropertiesOutput).ToHealthCheckConfigPropertiesPtrOutputWithContext(ctx)
}

// HealthCheckConfigPropertiesPtrInput is an input type that accepts HealthCheckConfigPropertiesArgs, HealthCheckConfigPropertiesPtr and HealthCheckConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `HealthCheckConfigPropertiesPtrInput` via:
//
//          HealthCheckConfigPropertiesArgs{...}
//
//  or:
//
//          nil
type HealthCheckConfigPropertiesPtrInput interface {
	pulumi.Input

	ToHealthCheckConfigPropertiesPtrOutput() HealthCheckConfigPropertiesPtrOutput
	ToHealthCheckConfigPropertiesPtrOutputWithContext(context.Context) HealthCheckConfigPropertiesPtrOutput
}

type healthCheckConfigPropertiesPtrType HealthCheckConfigPropertiesArgs

func HealthCheckConfigPropertiesPtr(v *HealthCheckConfigPropertiesArgs) HealthCheckConfigPropertiesPtrInput {
	return (*healthCheckConfigPropertiesPtrType)(v)
}

func (*healthCheckConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckConfigProperties)(nil)).Elem()
}

func (i *healthCheckConfigPropertiesPtrType) ToHealthCheckConfigPropertiesPtrOutput() HealthCheckConfigPropertiesPtrOutput {
	return i.ToHealthCheckConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *healthCheckConfigPropertiesPtrType) ToHealthCheckConfigPropertiesPtrOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckConfigPropertiesPtrOutput)
}

// A complex type that contains information about the health check.
type HealthCheckConfigPropertiesOutput struct{ *pulumi.OutputState }

func (HealthCheckConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckConfigProperties)(nil)).Elem()
}

func (o HealthCheckConfigPropertiesOutput) ToHealthCheckConfigPropertiesOutput() HealthCheckConfigPropertiesOutput {
	return o
}

func (o HealthCheckConfigPropertiesOutput) ToHealthCheckConfigPropertiesOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesOutput {
	return o
}

func (o HealthCheckConfigPropertiesOutput) ToHealthCheckConfigPropertiesPtrOutput() HealthCheckConfigPropertiesPtrOutput {
	return o.ToHealthCheckConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o HealthCheckConfigPropertiesOutput) ToHealthCheckConfigPropertiesPtrOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthCheckConfigProperties) *HealthCheckConfigProperties {
		return &v
	}).(HealthCheckConfigPropertiesPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) AlarmIdentifier() HealthCheckAlarmIdentifierPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *HealthCheckAlarmIdentifier { return v.AlarmIdentifier }).(HealthCheckAlarmIdentifierPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) ChildHealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) []string { return v.ChildHealthChecks }).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesOutput) EnableSNI() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *bool { return v.EnableSNI }).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) FullyQualifiedDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.FullyQualifiedDomainName }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) HealthThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.HealthThreshold }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) IPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.IPAddress }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) InsufficientDataHealthStatus() HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *HealthCheckConfigPropertiesInsufficientDataHealthStatus {
		return v.InsufficientDataHealthStatus
	}).(HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *bool { return v.Inverted }).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) MeasureLatency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *bool { return v.MeasureLatency }).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesOutput) RequestInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.RequestInterval }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) RoutingControlArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.RoutingControlArn }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.SearchString }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Type() HealthCheckConfigPropertiesTypeOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) HealthCheckConfigPropertiesType { return v.Type }).(HealthCheckConfigPropertiesTypeOutput)
}

type HealthCheckConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HealthCheckConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckConfigProperties)(nil)).Elem()
}

func (o HealthCheckConfigPropertiesPtrOutput) ToHealthCheckConfigPropertiesPtrOutput() HealthCheckConfigPropertiesPtrOutput {
	return o
}

func (o HealthCheckConfigPropertiesPtrOutput) ToHealthCheckConfigPropertiesPtrOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesPtrOutput {
	return o
}

func (o HealthCheckConfigPropertiesPtrOutput) Elem() HealthCheckConfigPropertiesOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) HealthCheckConfigProperties {
		if v != nil {
			return *v
		}
		var ret HealthCheckConfigProperties
		return ret
	}).(HealthCheckConfigPropertiesOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) AlarmIdentifier() HealthCheckAlarmIdentifierPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *HealthCheckAlarmIdentifier {
		if v == nil {
			return nil
		}
		return v.AlarmIdentifier
	}).(HealthCheckAlarmIdentifierPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) ChildHealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.ChildHealthChecks
	}).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) EnableSNI() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSNI
	}).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) FullyQualifiedDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.FullyQualifiedDomainName
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) HealthThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.HealthThreshold
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) IPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.IPAddress
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) InsufficientDataHealthStatus() HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *HealthCheckConfigPropertiesInsufficientDataHealthStatus {
		if v == nil {
			return nil
		}
		return v.InsufficientDataHealthStatus
	}).(HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Inverted
	}).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) MeasureLatency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.MeasureLatency
	}).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) RequestInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.RequestInterval
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourcePath
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) RoutingControlArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.RoutingControlArn
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.SearchString
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Type() HealthCheckConfigPropertiesTypePtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *HealthCheckConfigPropertiesType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(HealthCheckConfigPropertiesTypePtrOutput)
}

// A key-value pair to associate with a resource.
type HealthCheckTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// HealthCheckTagInput is an input type that accepts HealthCheckTagArgs and HealthCheckTagOutput values.
// You can construct a concrete instance of `HealthCheckTagInput` via:
//
//          HealthCheckTagArgs{...}
type HealthCheckTagInput interface {
	pulumi.Input

	ToHealthCheckTagOutput() HealthCheckTagOutput
	ToHealthCheckTagOutputWithContext(context.Context) HealthCheckTagOutput
}

// A key-value pair to associate with a resource.
type HealthCheckTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HealthCheckTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckTag)(nil)).Elem()
}

func (i HealthCheckTagArgs) ToHealthCheckTagOutput() HealthCheckTagOutput {
	return i.ToHealthCheckTagOutputWithContext(context.Background())
}

func (i HealthCheckTagArgs) ToHealthCheckTagOutputWithContext(ctx context.Context) HealthCheckTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckTagOutput)
}

// HealthCheckTagArrayInput is an input type that accepts HealthCheckTagArray and HealthCheckTagArrayOutput values.
// You can construct a concrete instance of `HealthCheckTagArrayInput` via:
//
//          HealthCheckTagArray{ HealthCheckTagArgs{...} }
type HealthCheckTagArrayInput interface {
	pulumi.Input

	ToHealthCheckTagArrayOutput() HealthCheckTagArrayOutput
	ToHealthCheckTagArrayOutputWithContext(context.Context) HealthCheckTagArrayOutput
}

type HealthCheckTagArray []HealthCheckTagInput

func (HealthCheckTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckTag)(nil)).Elem()
}

func (i HealthCheckTagArray) ToHealthCheckTagArrayOutput() HealthCheckTagArrayOutput {
	return i.ToHealthCheckTagArrayOutputWithContext(context.Background())
}

func (i HealthCheckTagArray) ToHealthCheckTagArrayOutputWithContext(ctx context.Context) HealthCheckTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckTagArrayOutput)
}

// A key-value pair to associate with a resource.
type HealthCheckTagOutput struct{ *pulumi.OutputState }

func (HealthCheckTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckTag)(nil)).Elem()
}

func (o HealthCheckTagOutput) ToHealthCheckTagOutput() HealthCheckTagOutput {
	return o
}

func (o HealthCheckTagOutput) ToHealthCheckTagOutputWithContext(ctx context.Context) HealthCheckTagOutput {
	return o
}

// The key name of the tag.
func (o HealthCheckTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o HealthCheckTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTag) string { return v.Value }).(pulumi.StringOutput)
}

type HealthCheckTagArrayOutput struct{ *pulumi.OutputState }

func (HealthCheckTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckTag)(nil)).Elem()
}

func (o HealthCheckTagArrayOutput) ToHealthCheckTagArrayOutput() HealthCheckTagArrayOutput {
	return o
}

func (o HealthCheckTagArrayOutput) ToHealthCheckTagArrayOutputWithContext(ctx context.Context) HealthCheckTagArrayOutput {
	return o
}

func (o HealthCheckTagArrayOutput) Index(i pulumi.IntInput) HealthCheckTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthCheckTag {
		return vs[0].([]HealthCheckTag)[vs[1].(int)]
	}).(HealthCheckTagOutput)
}

// A complex type that contains an optional comment.
//
// If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
type HostedZoneConfig struct {
	// Any comments that you want to include about the hosted zone.
	Comment *string `pulumi:"comment"`
}

// HostedZoneConfigInput is an input type that accepts HostedZoneConfigArgs and HostedZoneConfigOutput values.
// You can construct a concrete instance of `HostedZoneConfigInput` via:
//
//          HostedZoneConfigArgs{...}
type HostedZoneConfigInput interface {
	pulumi.Input

	ToHostedZoneConfigOutput() HostedZoneConfigOutput
	ToHostedZoneConfigOutputWithContext(context.Context) HostedZoneConfigOutput
}

// A complex type that contains an optional comment.
//
// If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
type HostedZoneConfigArgs struct {
	// Any comments that you want to include about the hosted zone.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
}

func (HostedZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneConfig)(nil)).Elem()
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigOutput() HostedZoneConfigOutput {
	return i.ToHostedZoneConfigOutputWithContext(context.Background())
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigOutputWithContext(ctx context.Context) HostedZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneConfigOutput)
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return i.ToHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneConfigOutput).ToHostedZoneConfigPtrOutputWithContext(ctx)
}

// HostedZoneConfigPtrInput is an input type that accepts HostedZoneConfigArgs, HostedZoneConfigPtr and HostedZoneConfigPtrOutput values.
// You can construct a concrete instance of `HostedZoneConfigPtrInput` via:
//
//          HostedZoneConfigArgs{...}
//
//  or:
//
//          nil
type HostedZoneConfigPtrInput interface {
	pulumi.Input

	ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput
	ToHostedZoneConfigPtrOutputWithContext(context.Context) HostedZoneConfigPtrOutput
}

type hostedZoneConfigPtrType HostedZoneConfigArgs

func HostedZoneConfigPtr(v *HostedZoneConfigArgs) HostedZoneConfigPtrInput {
	return (*hostedZoneConfigPtrType)(v)
}

func (*hostedZoneConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneConfig)(nil)).Elem()
}

func (i *hostedZoneConfigPtrType) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return i.ToHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (i *hostedZoneConfigPtrType) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneConfigPtrOutput)
}

// A complex type that contains an optional comment.
//
// If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
type HostedZoneConfigOutput struct{ *pulumi.OutputState }

func (HostedZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneConfig)(nil)).Elem()
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigOutput() HostedZoneConfigOutput {
	return o
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigOutputWithContext(ctx context.Context) HostedZoneConfigOutput {
	return o
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return o.ToHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostedZoneConfig) *HostedZoneConfig {
		return &v
	}).(HostedZoneConfigPtrOutput)
}

// Any comments that you want to include about the hosted zone.
func (o HostedZoneConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostedZoneConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

type HostedZoneConfigPtrOutput struct{ *pulumi.OutputState }

func (HostedZoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneConfig)(nil)).Elem()
}

func (o HostedZoneConfigPtrOutput) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return o
}

func (o HostedZoneConfigPtrOutput) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return o
}

func (o HostedZoneConfigPtrOutput) Elem() HostedZoneConfigOutput {
	return o.ApplyT(func(v *HostedZoneConfig) HostedZoneConfig {
		if v != nil {
			return *v
		}
		var ret HostedZoneConfig
		return ret
	}).(HostedZoneConfigOutput)
}

// Any comments that you want to include about the hosted zone.
func (o HostedZoneConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedZoneConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfig struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn string `pulumi:"cloudWatchLogsLogGroupArn"`
}

// HostedZoneQueryLoggingConfigInput is an input type that accepts HostedZoneQueryLoggingConfigArgs and HostedZoneQueryLoggingConfigOutput values.
// You can construct a concrete instance of `HostedZoneQueryLoggingConfigInput` via:
//
//          HostedZoneQueryLoggingConfigArgs{...}
type HostedZoneQueryLoggingConfigInput interface {
	pulumi.Input

	ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput
	ToHostedZoneQueryLoggingConfigOutputWithContext(context.Context) HostedZoneQueryLoggingConfigOutput
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfigArgs struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn pulumi.StringInput `pulumi:"cloudWatchLogsLogGroupArn"`
}

func (HostedZoneQueryLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput {
	return i.ToHostedZoneQueryLoggingConfigOutputWithContext(context.Background())
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigOutput)
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return i.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigOutput).ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx)
}

// HostedZoneQueryLoggingConfigPtrInput is an input type that accepts HostedZoneQueryLoggingConfigArgs, HostedZoneQueryLoggingConfigPtr and HostedZoneQueryLoggingConfigPtrOutput values.
// You can construct a concrete instance of `HostedZoneQueryLoggingConfigPtrInput` via:
//
//          HostedZoneQueryLoggingConfigArgs{...}
//
//  or:
//
//          nil
type HostedZoneQueryLoggingConfigPtrInput interface {
	pulumi.Input

	ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput
	ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Context) HostedZoneQueryLoggingConfigPtrOutput
}

type hostedZoneQueryLoggingConfigPtrType HostedZoneQueryLoggingConfigArgs

func HostedZoneQueryLoggingConfigPtr(v *HostedZoneQueryLoggingConfigArgs) HostedZoneQueryLoggingConfigPtrInput {
	return (*hostedZoneQueryLoggingConfigPtrType)(v)
}

func (*hostedZoneQueryLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (i *hostedZoneQueryLoggingConfigPtrType) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return i.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *hostedZoneQueryLoggingConfigPtrType) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigPtrOutput)
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfigOutput struct{ *pulumi.OutputState }

func (HostedZoneQueryLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return o.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostedZoneQueryLoggingConfig) *HostedZoneQueryLoggingConfig {
		return &v
	}).(HostedZoneQueryLoggingConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o HostedZoneQueryLoggingConfigOutput) CloudWatchLogsLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneQueryLoggingConfig) string { return v.CloudWatchLogsLogGroupArn }).(pulumi.StringOutput)
}

type HostedZoneQueryLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (HostedZoneQueryLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (o HostedZoneQueryLoggingConfigPtrOutput) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigPtrOutput) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigPtrOutput) Elem() HostedZoneQueryLoggingConfigOutput {
	return o.ApplyT(func(v *HostedZoneQueryLoggingConfig) HostedZoneQueryLoggingConfig {
		if v != nil {
			return *v
		}
		var ret HostedZoneQueryLoggingConfig
		return ret
	}).(HostedZoneQueryLoggingConfigOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o HostedZoneQueryLoggingConfigPtrOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedZoneQueryLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CloudWatchLogsLogGroupArn
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// HostedZoneTagInput is an input type that accepts HostedZoneTagArgs and HostedZoneTagOutput values.
// You can construct a concrete instance of `HostedZoneTagInput` via:
//
//          HostedZoneTagArgs{...}
type HostedZoneTagInput interface {
	pulumi.Input

	ToHostedZoneTagOutput() HostedZoneTagOutput
	ToHostedZoneTagOutputWithContext(context.Context) HostedZoneTagOutput
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HostedZoneTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneTag)(nil)).Elem()
}

func (i HostedZoneTagArgs) ToHostedZoneTagOutput() HostedZoneTagOutput {
	return i.ToHostedZoneTagOutputWithContext(context.Background())
}

func (i HostedZoneTagArgs) ToHostedZoneTagOutputWithContext(ctx context.Context) HostedZoneTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneTagOutput)
}

// HostedZoneTagArrayInput is an input type that accepts HostedZoneTagArray and HostedZoneTagArrayOutput values.
// You can construct a concrete instance of `HostedZoneTagArrayInput` via:
//
//          HostedZoneTagArray{ HostedZoneTagArgs{...} }
type HostedZoneTagArrayInput interface {
	pulumi.Input

	ToHostedZoneTagArrayOutput() HostedZoneTagArrayOutput
	ToHostedZoneTagArrayOutputWithContext(context.Context) HostedZoneTagArrayOutput
}

type HostedZoneTagArray []HostedZoneTagInput

func (HostedZoneTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneTag)(nil)).Elem()
}

func (i HostedZoneTagArray) ToHostedZoneTagArrayOutput() HostedZoneTagArrayOutput {
	return i.ToHostedZoneTagArrayOutputWithContext(context.Background())
}

func (i HostedZoneTagArray) ToHostedZoneTagArrayOutputWithContext(ctx context.Context) HostedZoneTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneTagArrayOutput)
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneTagOutput struct{ *pulumi.OutputState }

func (HostedZoneTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneTag)(nil)).Elem()
}

func (o HostedZoneTagOutput) ToHostedZoneTagOutput() HostedZoneTagOutput {
	return o
}

func (o HostedZoneTagOutput) ToHostedZoneTagOutputWithContext(ctx context.Context) HostedZoneTagOutput {
	return o
}

// The key name of the tag.
func (o HostedZoneTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o HostedZoneTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneTag) string { return v.Value }).(pulumi.StringOutput)
}

type HostedZoneTagArrayOutput struct{ *pulumi.OutputState }

func (HostedZoneTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneTag)(nil)).Elem()
}

func (o HostedZoneTagArrayOutput) ToHostedZoneTagArrayOutput() HostedZoneTagArrayOutput {
	return o
}

func (o HostedZoneTagArrayOutput) ToHostedZoneTagArrayOutputWithContext(ctx context.Context) HostedZoneTagArrayOutput {
	return o
}

func (o HostedZoneTagArrayOutput) Index(i pulumi.IntInput) HostedZoneTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostedZoneTag {
		return vs[0].([]HostedZoneTag)[vs[1].(int)]
	}).(HostedZoneTagOutput)
}

// A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
type HostedZoneVPC struct {
	// The ID of an Amazon VPC.
	VPCId string `pulumi:"vPCId"`
	// The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
	VPCRegion string `pulumi:"vPCRegion"`
}

// HostedZoneVPCInput is an input type that accepts HostedZoneVPCArgs and HostedZoneVPCOutput values.
// You can construct a concrete instance of `HostedZoneVPCInput` via:
//
//          HostedZoneVPCArgs{...}
type HostedZoneVPCInput interface {
	pulumi.Input

	ToHostedZoneVPCOutput() HostedZoneVPCOutput
	ToHostedZoneVPCOutputWithContext(context.Context) HostedZoneVPCOutput
}

// A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
type HostedZoneVPCArgs struct {
	// The ID of an Amazon VPC.
	VPCId pulumi.StringInput `pulumi:"vPCId"`
	// The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
	VPCRegion pulumi.StringInput `pulumi:"vPCRegion"`
}

func (HostedZoneVPCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneVPC)(nil)).Elem()
}

func (i HostedZoneVPCArgs) ToHostedZoneVPCOutput() HostedZoneVPCOutput {
	return i.ToHostedZoneVPCOutputWithContext(context.Background())
}

func (i HostedZoneVPCArgs) ToHostedZoneVPCOutputWithContext(ctx context.Context) HostedZoneVPCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneVPCOutput)
}

// HostedZoneVPCArrayInput is an input type that accepts HostedZoneVPCArray and HostedZoneVPCArrayOutput values.
// You can construct a concrete instance of `HostedZoneVPCArrayInput` via:
//
//          HostedZoneVPCArray{ HostedZoneVPCArgs{...} }
type HostedZoneVPCArrayInput interface {
	pulumi.Input

	ToHostedZoneVPCArrayOutput() HostedZoneVPCArrayOutput
	ToHostedZoneVPCArrayOutputWithContext(context.Context) HostedZoneVPCArrayOutput
}

type HostedZoneVPCArray []HostedZoneVPCInput

func (HostedZoneVPCArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneVPC)(nil)).Elem()
}

func (i HostedZoneVPCArray) ToHostedZoneVPCArrayOutput() HostedZoneVPCArrayOutput {
	return i.ToHostedZoneVPCArrayOutputWithContext(context.Background())
}

func (i HostedZoneVPCArray) ToHostedZoneVPCArrayOutputWithContext(ctx context.Context) HostedZoneVPCArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneVPCArrayOutput)
}

// A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
type HostedZoneVPCOutput struct{ *pulumi.OutputState }

func (HostedZoneVPCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneVPC)(nil)).Elem()
}

func (o HostedZoneVPCOutput) ToHostedZoneVPCOutput() HostedZoneVPCOutput {
	return o
}

func (o HostedZoneVPCOutput) ToHostedZoneVPCOutputWithContext(ctx context.Context) HostedZoneVPCOutput {
	return o
}

// The ID of an Amazon VPC.
func (o HostedZoneVPCOutput) VPCId() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneVPC) string { return v.VPCId }).(pulumi.StringOutput)
}

// The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
func (o HostedZoneVPCOutput) VPCRegion() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneVPC) string { return v.VPCRegion }).(pulumi.StringOutput)
}

type HostedZoneVPCArrayOutput struct{ *pulumi.OutputState }

func (HostedZoneVPCArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneVPC)(nil)).Elem()
}

func (o HostedZoneVPCArrayOutput) ToHostedZoneVPCArrayOutput() HostedZoneVPCArrayOutput {
	return o
}

func (o HostedZoneVPCArrayOutput) ToHostedZoneVPCArrayOutputWithContext(ctx context.Context) HostedZoneVPCArrayOutput {
	return o
}

func (o HostedZoneVPCArrayOutput) Index(i pulumi.IntInput) HostedZoneVPCOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostedZoneVPC {
		return vs[0].([]HostedZoneVPC)[vs[1].(int)]
	}).(HostedZoneVPCOutput)
}

type RecordSetAliasTarget struct {
	DNSName              string `pulumi:"dNSName"`
	EvaluateTargetHealth *bool  `pulumi:"evaluateTargetHealth"`
	HostedZoneId         string `pulumi:"hostedZoneId"`
}

// RecordSetAliasTargetInput is an input type that accepts RecordSetAliasTargetArgs and RecordSetAliasTargetOutput values.
// You can construct a concrete instance of `RecordSetAliasTargetInput` via:
//
//          RecordSetAliasTargetArgs{...}
type RecordSetAliasTargetInput interface {
	pulumi.Input

	ToRecordSetAliasTargetOutput() RecordSetAliasTargetOutput
	ToRecordSetAliasTargetOutputWithContext(context.Context) RecordSetAliasTargetOutput
}

type RecordSetAliasTargetArgs struct {
	DNSName              pulumi.StringInput  `pulumi:"dNSName"`
	EvaluateTargetHealth pulumi.BoolPtrInput `pulumi:"evaluateTargetHealth"`
	HostedZoneId         pulumi.StringInput  `pulumi:"hostedZoneId"`
}

func (RecordSetAliasTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetAliasTarget)(nil)).Elem()
}

func (i RecordSetAliasTargetArgs) ToRecordSetAliasTargetOutput() RecordSetAliasTargetOutput {
	return i.ToRecordSetAliasTargetOutputWithContext(context.Background())
}

func (i RecordSetAliasTargetArgs) ToRecordSetAliasTargetOutputWithContext(ctx context.Context) RecordSetAliasTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetAliasTargetOutput)
}

func (i RecordSetAliasTargetArgs) ToRecordSetAliasTargetPtrOutput() RecordSetAliasTargetPtrOutput {
	return i.ToRecordSetAliasTargetPtrOutputWithContext(context.Background())
}

func (i RecordSetAliasTargetArgs) ToRecordSetAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetAliasTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetAliasTargetOutput).ToRecordSetAliasTargetPtrOutputWithContext(ctx)
}

// RecordSetAliasTargetPtrInput is an input type that accepts RecordSetAliasTargetArgs, RecordSetAliasTargetPtr and RecordSetAliasTargetPtrOutput values.
// You can construct a concrete instance of `RecordSetAliasTargetPtrInput` via:
//
//          RecordSetAliasTargetArgs{...}
//
//  or:
//
//          nil
type RecordSetAliasTargetPtrInput interface {
	pulumi.Input

	ToRecordSetAliasTargetPtrOutput() RecordSetAliasTargetPtrOutput
	ToRecordSetAliasTargetPtrOutputWithContext(context.Context) RecordSetAliasTargetPtrOutput
}

type recordSetAliasTargetPtrType RecordSetAliasTargetArgs

func RecordSetAliasTargetPtr(v *RecordSetAliasTargetArgs) RecordSetAliasTargetPtrInput {
	return (*recordSetAliasTargetPtrType)(v)
}

func (*recordSetAliasTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetAliasTarget)(nil)).Elem()
}

func (i *recordSetAliasTargetPtrType) ToRecordSetAliasTargetPtrOutput() RecordSetAliasTargetPtrOutput {
	return i.ToRecordSetAliasTargetPtrOutputWithContext(context.Background())
}

func (i *recordSetAliasTargetPtrType) ToRecordSetAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetAliasTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetAliasTargetPtrOutput)
}

type RecordSetAliasTargetOutput struct{ *pulumi.OutputState }

func (RecordSetAliasTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetAliasTarget)(nil)).Elem()
}

func (o RecordSetAliasTargetOutput) ToRecordSetAliasTargetOutput() RecordSetAliasTargetOutput {
	return o
}

func (o RecordSetAliasTargetOutput) ToRecordSetAliasTargetOutputWithContext(ctx context.Context) RecordSetAliasTargetOutput {
	return o
}

func (o RecordSetAliasTargetOutput) ToRecordSetAliasTargetPtrOutput() RecordSetAliasTargetPtrOutput {
	return o.ToRecordSetAliasTargetPtrOutputWithContext(context.Background())
}

func (o RecordSetAliasTargetOutput) ToRecordSetAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetAliasTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordSetAliasTarget) *RecordSetAliasTarget {
		return &v
	}).(RecordSetAliasTargetPtrOutput)
}

func (o RecordSetAliasTargetOutput) DNSName() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetAliasTarget) string { return v.DNSName }).(pulumi.StringOutput)
}

func (o RecordSetAliasTargetOutput) EvaluateTargetHealth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordSetAliasTarget) *bool { return v.EvaluateTargetHealth }).(pulumi.BoolPtrOutput)
}

func (o RecordSetAliasTargetOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetAliasTarget) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

type RecordSetAliasTargetPtrOutput struct{ *pulumi.OutputState }

func (RecordSetAliasTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetAliasTarget)(nil)).Elem()
}

func (o RecordSetAliasTargetPtrOutput) ToRecordSetAliasTargetPtrOutput() RecordSetAliasTargetPtrOutput {
	return o
}

func (o RecordSetAliasTargetPtrOutput) ToRecordSetAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetAliasTargetPtrOutput {
	return o
}

func (o RecordSetAliasTargetPtrOutput) Elem() RecordSetAliasTargetOutput {
	return o.ApplyT(func(v *RecordSetAliasTarget) RecordSetAliasTarget {
		if v != nil {
			return *v
		}
		var ret RecordSetAliasTarget
		return ret
	}).(RecordSetAliasTargetOutput)
}

func (o RecordSetAliasTargetPtrOutput) DNSName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetAliasTarget) *string {
		if v == nil {
			return nil
		}
		return &v.DNSName
	}).(pulumi.StringPtrOutput)
}

func (o RecordSetAliasTargetPtrOutput) EvaluateTargetHealth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecordSetAliasTarget) *bool {
		if v == nil {
			return nil
		}
		return v.EvaluateTargetHealth
	}).(pulumi.BoolPtrOutput)
}

func (o RecordSetAliasTargetPtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetAliasTarget) *string {
		if v == nil {
			return nil
		}
		return &v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

type RecordSetGeoLocation struct {
	ContinentCode   *string `pulumi:"continentCode"`
	CountryCode     *string `pulumi:"countryCode"`
	SubdivisionCode *string `pulumi:"subdivisionCode"`
}

// RecordSetGeoLocationInput is an input type that accepts RecordSetGeoLocationArgs and RecordSetGeoLocationOutput values.
// You can construct a concrete instance of `RecordSetGeoLocationInput` via:
//
//          RecordSetGeoLocationArgs{...}
type RecordSetGeoLocationInput interface {
	pulumi.Input

	ToRecordSetGeoLocationOutput() RecordSetGeoLocationOutput
	ToRecordSetGeoLocationOutputWithContext(context.Context) RecordSetGeoLocationOutput
}

type RecordSetGeoLocationArgs struct {
	ContinentCode   pulumi.StringPtrInput `pulumi:"continentCode"`
	CountryCode     pulumi.StringPtrInput `pulumi:"countryCode"`
	SubdivisionCode pulumi.StringPtrInput `pulumi:"subdivisionCode"`
}

func (RecordSetGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGeoLocation)(nil)).Elem()
}

func (i RecordSetGeoLocationArgs) ToRecordSetGeoLocationOutput() RecordSetGeoLocationOutput {
	return i.ToRecordSetGeoLocationOutputWithContext(context.Background())
}

func (i RecordSetGeoLocationArgs) ToRecordSetGeoLocationOutputWithContext(ctx context.Context) RecordSetGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGeoLocationOutput)
}

func (i RecordSetGeoLocationArgs) ToRecordSetGeoLocationPtrOutput() RecordSetGeoLocationPtrOutput {
	return i.ToRecordSetGeoLocationPtrOutputWithContext(context.Background())
}

func (i RecordSetGeoLocationArgs) ToRecordSetGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGeoLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGeoLocationOutput).ToRecordSetGeoLocationPtrOutputWithContext(ctx)
}

// RecordSetGeoLocationPtrInput is an input type that accepts RecordSetGeoLocationArgs, RecordSetGeoLocationPtr and RecordSetGeoLocationPtrOutput values.
// You can construct a concrete instance of `RecordSetGeoLocationPtrInput` via:
//
//          RecordSetGeoLocationArgs{...}
//
//  or:
//
//          nil
type RecordSetGeoLocationPtrInput interface {
	pulumi.Input

	ToRecordSetGeoLocationPtrOutput() RecordSetGeoLocationPtrOutput
	ToRecordSetGeoLocationPtrOutputWithContext(context.Context) RecordSetGeoLocationPtrOutput
}

type recordSetGeoLocationPtrType RecordSetGeoLocationArgs

func RecordSetGeoLocationPtr(v *RecordSetGeoLocationArgs) RecordSetGeoLocationPtrInput {
	return (*recordSetGeoLocationPtrType)(v)
}

func (*recordSetGeoLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetGeoLocation)(nil)).Elem()
}

func (i *recordSetGeoLocationPtrType) ToRecordSetGeoLocationPtrOutput() RecordSetGeoLocationPtrOutput {
	return i.ToRecordSetGeoLocationPtrOutputWithContext(context.Background())
}

func (i *recordSetGeoLocationPtrType) ToRecordSetGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGeoLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGeoLocationPtrOutput)
}

type RecordSetGeoLocationOutput struct{ *pulumi.OutputState }

func (RecordSetGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGeoLocation)(nil)).Elem()
}

func (o RecordSetGeoLocationOutput) ToRecordSetGeoLocationOutput() RecordSetGeoLocationOutput {
	return o
}

func (o RecordSetGeoLocationOutput) ToRecordSetGeoLocationOutputWithContext(ctx context.Context) RecordSetGeoLocationOutput {
	return o
}

func (o RecordSetGeoLocationOutput) ToRecordSetGeoLocationPtrOutput() RecordSetGeoLocationPtrOutput {
	return o.ToRecordSetGeoLocationPtrOutputWithContext(context.Background())
}

func (o RecordSetGeoLocationOutput) ToRecordSetGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGeoLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordSetGeoLocation) *RecordSetGeoLocation {
		return &v
	}).(RecordSetGeoLocationPtrOutput)
}

func (o RecordSetGeoLocationOutput) ContinentCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGeoLocation) *string { return v.ContinentCode }).(pulumi.StringPtrOutput)
}

func (o RecordSetGeoLocationOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGeoLocation) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o RecordSetGeoLocationOutput) SubdivisionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGeoLocation) *string { return v.SubdivisionCode }).(pulumi.StringPtrOutput)
}

type RecordSetGeoLocationPtrOutput struct{ *pulumi.OutputState }

func (RecordSetGeoLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetGeoLocation)(nil)).Elem()
}

func (o RecordSetGeoLocationPtrOutput) ToRecordSetGeoLocationPtrOutput() RecordSetGeoLocationPtrOutput {
	return o
}

func (o RecordSetGeoLocationPtrOutput) ToRecordSetGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGeoLocationPtrOutput {
	return o
}

func (o RecordSetGeoLocationPtrOutput) Elem() RecordSetGeoLocationOutput {
	return o.ApplyT(func(v *RecordSetGeoLocation) RecordSetGeoLocation {
		if v != nil {
			return *v
		}
		var ret RecordSetGeoLocation
		return ret
	}).(RecordSetGeoLocationOutput)
}

func (o RecordSetGeoLocationPtrOutput) ContinentCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGeoLocation) *string {
		if v == nil {
			return nil
		}
		return v.ContinentCode
	}).(pulumi.StringPtrOutput)
}

func (o RecordSetGeoLocationPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGeoLocation) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

func (o RecordSetGeoLocationPtrOutput) SubdivisionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGeoLocation) *string {
		if v == nil {
			return nil
		}
		return v.SubdivisionCode
	}).(pulumi.StringPtrOutput)
}

type RecordSetGroupAliasTarget struct {
	DNSName              string `pulumi:"dNSName"`
	EvaluateTargetHealth *bool  `pulumi:"evaluateTargetHealth"`
	HostedZoneId         string `pulumi:"hostedZoneId"`
}

// RecordSetGroupAliasTargetInput is an input type that accepts RecordSetGroupAliasTargetArgs and RecordSetGroupAliasTargetOutput values.
// You can construct a concrete instance of `RecordSetGroupAliasTargetInput` via:
//
//          RecordSetGroupAliasTargetArgs{...}
type RecordSetGroupAliasTargetInput interface {
	pulumi.Input

	ToRecordSetGroupAliasTargetOutput() RecordSetGroupAliasTargetOutput
	ToRecordSetGroupAliasTargetOutputWithContext(context.Context) RecordSetGroupAliasTargetOutput
}

type RecordSetGroupAliasTargetArgs struct {
	DNSName              pulumi.StringInput  `pulumi:"dNSName"`
	EvaluateTargetHealth pulumi.BoolPtrInput `pulumi:"evaluateTargetHealth"`
	HostedZoneId         pulumi.StringInput  `pulumi:"hostedZoneId"`
}

func (RecordSetGroupAliasTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGroupAliasTarget)(nil)).Elem()
}

func (i RecordSetGroupAliasTargetArgs) ToRecordSetGroupAliasTargetOutput() RecordSetGroupAliasTargetOutput {
	return i.ToRecordSetGroupAliasTargetOutputWithContext(context.Background())
}

func (i RecordSetGroupAliasTargetArgs) ToRecordSetGroupAliasTargetOutputWithContext(ctx context.Context) RecordSetGroupAliasTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupAliasTargetOutput)
}

func (i RecordSetGroupAliasTargetArgs) ToRecordSetGroupAliasTargetPtrOutput() RecordSetGroupAliasTargetPtrOutput {
	return i.ToRecordSetGroupAliasTargetPtrOutputWithContext(context.Background())
}

func (i RecordSetGroupAliasTargetArgs) ToRecordSetGroupAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetGroupAliasTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupAliasTargetOutput).ToRecordSetGroupAliasTargetPtrOutputWithContext(ctx)
}

// RecordSetGroupAliasTargetPtrInput is an input type that accepts RecordSetGroupAliasTargetArgs, RecordSetGroupAliasTargetPtr and RecordSetGroupAliasTargetPtrOutput values.
// You can construct a concrete instance of `RecordSetGroupAliasTargetPtrInput` via:
//
//          RecordSetGroupAliasTargetArgs{...}
//
//  or:
//
//          nil
type RecordSetGroupAliasTargetPtrInput interface {
	pulumi.Input

	ToRecordSetGroupAliasTargetPtrOutput() RecordSetGroupAliasTargetPtrOutput
	ToRecordSetGroupAliasTargetPtrOutputWithContext(context.Context) RecordSetGroupAliasTargetPtrOutput
}

type recordSetGroupAliasTargetPtrType RecordSetGroupAliasTargetArgs

func RecordSetGroupAliasTargetPtr(v *RecordSetGroupAliasTargetArgs) RecordSetGroupAliasTargetPtrInput {
	return (*recordSetGroupAliasTargetPtrType)(v)
}

func (*recordSetGroupAliasTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetGroupAliasTarget)(nil)).Elem()
}

func (i *recordSetGroupAliasTargetPtrType) ToRecordSetGroupAliasTargetPtrOutput() RecordSetGroupAliasTargetPtrOutput {
	return i.ToRecordSetGroupAliasTargetPtrOutputWithContext(context.Background())
}

func (i *recordSetGroupAliasTargetPtrType) ToRecordSetGroupAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetGroupAliasTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupAliasTargetPtrOutput)
}

type RecordSetGroupAliasTargetOutput struct{ *pulumi.OutputState }

func (RecordSetGroupAliasTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGroupAliasTarget)(nil)).Elem()
}

func (o RecordSetGroupAliasTargetOutput) ToRecordSetGroupAliasTargetOutput() RecordSetGroupAliasTargetOutput {
	return o
}

func (o RecordSetGroupAliasTargetOutput) ToRecordSetGroupAliasTargetOutputWithContext(ctx context.Context) RecordSetGroupAliasTargetOutput {
	return o
}

func (o RecordSetGroupAliasTargetOutput) ToRecordSetGroupAliasTargetPtrOutput() RecordSetGroupAliasTargetPtrOutput {
	return o.ToRecordSetGroupAliasTargetPtrOutputWithContext(context.Background())
}

func (o RecordSetGroupAliasTargetOutput) ToRecordSetGroupAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetGroupAliasTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordSetGroupAliasTarget) *RecordSetGroupAliasTarget {
		return &v
	}).(RecordSetGroupAliasTargetPtrOutput)
}

func (o RecordSetGroupAliasTargetOutput) DNSName() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetGroupAliasTarget) string { return v.DNSName }).(pulumi.StringOutput)
}

func (o RecordSetGroupAliasTargetOutput) EvaluateTargetHealth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordSetGroupAliasTarget) *bool { return v.EvaluateTargetHealth }).(pulumi.BoolPtrOutput)
}

func (o RecordSetGroupAliasTargetOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetGroupAliasTarget) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

type RecordSetGroupAliasTargetPtrOutput struct{ *pulumi.OutputState }

func (RecordSetGroupAliasTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetGroupAliasTarget)(nil)).Elem()
}

func (o RecordSetGroupAliasTargetPtrOutput) ToRecordSetGroupAliasTargetPtrOutput() RecordSetGroupAliasTargetPtrOutput {
	return o
}

func (o RecordSetGroupAliasTargetPtrOutput) ToRecordSetGroupAliasTargetPtrOutputWithContext(ctx context.Context) RecordSetGroupAliasTargetPtrOutput {
	return o
}

func (o RecordSetGroupAliasTargetPtrOutput) Elem() RecordSetGroupAliasTargetOutput {
	return o.ApplyT(func(v *RecordSetGroupAliasTarget) RecordSetGroupAliasTarget {
		if v != nil {
			return *v
		}
		var ret RecordSetGroupAliasTarget
		return ret
	}).(RecordSetGroupAliasTargetOutput)
}

func (o RecordSetGroupAliasTargetPtrOutput) DNSName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGroupAliasTarget) *string {
		if v == nil {
			return nil
		}
		return &v.DNSName
	}).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupAliasTargetPtrOutput) EvaluateTargetHealth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecordSetGroupAliasTarget) *bool {
		if v == nil {
			return nil
		}
		return v.EvaluateTargetHealth
	}).(pulumi.BoolPtrOutput)
}

func (o RecordSetGroupAliasTargetPtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGroupAliasTarget) *string {
		if v == nil {
			return nil
		}
		return &v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

type RecordSetGroupGeoLocation struct {
	ContinentCode   *string `pulumi:"continentCode"`
	CountryCode     *string `pulumi:"countryCode"`
	SubdivisionCode *string `pulumi:"subdivisionCode"`
}

// RecordSetGroupGeoLocationInput is an input type that accepts RecordSetGroupGeoLocationArgs and RecordSetGroupGeoLocationOutput values.
// You can construct a concrete instance of `RecordSetGroupGeoLocationInput` via:
//
//          RecordSetGroupGeoLocationArgs{...}
type RecordSetGroupGeoLocationInput interface {
	pulumi.Input

	ToRecordSetGroupGeoLocationOutput() RecordSetGroupGeoLocationOutput
	ToRecordSetGroupGeoLocationOutputWithContext(context.Context) RecordSetGroupGeoLocationOutput
}

type RecordSetGroupGeoLocationArgs struct {
	ContinentCode   pulumi.StringPtrInput `pulumi:"continentCode"`
	CountryCode     pulumi.StringPtrInput `pulumi:"countryCode"`
	SubdivisionCode pulumi.StringPtrInput `pulumi:"subdivisionCode"`
}

func (RecordSetGroupGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGroupGeoLocation)(nil)).Elem()
}

func (i RecordSetGroupGeoLocationArgs) ToRecordSetGroupGeoLocationOutput() RecordSetGroupGeoLocationOutput {
	return i.ToRecordSetGroupGeoLocationOutputWithContext(context.Background())
}

func (i RecordSetGroupGeoLocationArgs) ToRecordSetGroupGeoLocationOutputWithContext(ctx context.Context) RecordSetGroupGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupGeoLocationOutput)
}

func (i RecordSetGroupGeoLocationArgs) ToRecordSetGroupGeoLocationPtrOutput() RecordSetGroupGeoLocationPtrOutput {
	return i.ToRecordSetGroupGeoLocationPtrOutputWithContext(context.Background())
}

func (i RecordSetGroupGeoLocationArgs) ToRecordSetGroupGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGroupGeoLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupGeoLocationOutput).ToRecordSetGroupGeoLocationPtrOutputWithContext(ctx)
}

// RecordSetGroupGeoLocationPtrInput is an input type that accepts RecordSetGroupGeoLocationArgs, RecordSetGroupGeoLocationPtr and RecordSetGroupGeoLocationPtrOutput values.
// You can construct a concrete instance of `RecordSetGroupGeoLocationPtrInput` via:
//
//          RecordSetGroupGeoLocationArgs{...}
//
//  or:
//
//          nil
type RecordSetGroupGeoLocationPtrInput interface {
	pulumi.Input

	ToRecordSetGroupGeoLocationPtrOutput() RecordSetGroupGeoLocationPtrOutput
	ToRecordSetGroupGeoLocationPtrOutputWithContext(context.Context) RecordSetGroupGeoLocationPtrOutput
}

type recordSetGroupGeoLocationPtrType RecordSetGroupGeoLocationArgs

func RecordSetGroupGeoLocationPtr(v *RecordSetGroupGeoLocationArgs) RecordSetGroupGeoLocationPtrInput {
	return (*recordSetGroupGeoLocationPtrType)(v)
}

func (*recordSetGroupGeoLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetGroupGeoLocation)(nil)).Elem()
}

func (i *recordSetGroupGeoLocationPtrType) ToRecordSetGroupGeoLocationPtrOutput() RecordSetGroupGeoLocationPtrOutput {
	return i.ToRecordSetGroupGeoLocationPtrOutputWithContext(context.Background())
}

func (i *recordSetGroupGeoLocationPtrType) ToRecordSetGroupGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGroupGeoLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupGeoLocationPtrOutput)
}

type RecordSetGroupGeoLocationOutput struct{ *pulumi.OutputState }

func (RecordSetGroupGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGroupGeoLocation)(nil)).Elem()
}

func (o RecordSetGroupGeoLocationOutput) ToRecordSetGroupGeoLocationOutput() RecordSetGroupGeoLocationOutput {
	return o
}

func (o RecordSetGroupGeoLocationOutput) ToRecordSetGroupGeoLocationOutputWithContext(ctx context.Context) RecordSetGroupGeoLocationOutput {
	return o
}

func (o RecordSetGroupGeoLocationOutput) ToRecordSetGroupGeoLocationPtrOutput() RecordSetGroupGeoLocationPtrOutput {
	return o.ToRecordSetGroupGeoLocationPtrOutputWithContext(context.Background())
}

func (o RecordSetGroupGeoLocationOutput) ToRecordSetGroupGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGroupGeoLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordSetGroupGeoLocation) *RecordSetGroupGeoLocation {
		return &v
	}).(RecordSetGroupGeoLocationPtrOutput)
}

func (o RecordSetGroupGeoLocationOutput) ContinentCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupGeoLocation) *string { return v.ContinentCode }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupGeoLocationOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupGeoLocation) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupGeoLocationOutput) SubdivisionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupGeoLocation) *string { return v.SubdivisionCode }).(pulumi.StringPtrOutput)
}

type RecordSetGroupGeoLocationPtrOutput struct{ *pulumi.OutputState }

func (RecordSetGroupGeoLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordSetGroupGeoLocation)(nil)).Elem()
}

func (o RecordSetGroupGeoLocationPtrOutput) ToRecordSetGroupGeoLocationPtrOutput() RecordSetGroupGeoLocationPtrOutput {
	return o
}

func (o RecordSetGroupGeoLocationPtrOutput) ToRecordSetGroupGeoLocationPtrOutputWithContext(ctx context.Context) RecordSetGroupGeoLocationPtrOutput {
	return o
}

func (o RecordSetGroupGeoLocationPtrOutput) Elem() RecordSetGroupGeoLocationOutput {
	return o.ApplyT(func(v *RecordSetGroupGeoLocation) RecordSetGroupGeoLocation {
		if v != nil {
			return *v
		}
		var ret RecordSetGroupGeoLocation
		return ret
	}).(RecordSetGroupGeoLocationOutput)
}

func (o RecordSetGroupGeoLocationPtrOutput) ContinentCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGroupGeoLocation) *string {
		if v == nil {
			return nil
		}
		return v.ContinentCode
	}).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupGeoLocationPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGroupGeoLocation) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupGeoLocationPtrOutput) SubdivisionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecordSetGroupGeoLocation) *string {
		if v == nil {
			return nil
		}
		return v.SubdivisionCode
	}).(pulumi.StringPtrOutput)
}

type RecordSetGroupRecordSet struct {
	AliasTarget      *RecordSetGroupAliasTarget `pulumi:"aliasTarget"`
	Comment          *string                    `pulumi:"comment"`
	Failover         *string                    `pulumi:"failover"`
	GeoLocation      *RecordSetGroupGeoLocation `pulumi:"geoLocation"`
	HealthCheckId    *string                    `pulumi:"healthCheckId"`
	HostedZoneId     *string                    `pulumi:"hostedZoneId"`
	HostedZoneName   *string                    `pulumi:"hostedZoneName"`
	MultiValueAnswer *bool                      `pulumi:"multiValueAnswer"`
	Name             string                     `pulumi:"name"`
	Region           *string                    `pulumi:"region"`
	ResourceRecords  []string                   `pulumi:"resourceRecords"`
	SetIdentifier    *string                    `pulumi:"setIdentifier"`
	TTL              *string                    `pulumi:"tTL"`
	Type             string                     `pulumi:"type"`
	Weight           *int                       `pulumi:"weight"`
}

// RecordSetGroupRecordSetInput is an input type that accepts RecordSetGroupRecordSetArgs and RecordSetGroupRecordSetOutput values.
// You can construct a concrete instance of `RecordSetGroupRecordSetInput` via:
//
//          RecordSetGroupRecordSetArgs{...}
type RecordSetGroupRecordSetInput interface {
	pulumi.Input

	ToRecordSetGroupRecordSetOutput() RecordSetGroupRecordSetOutput
	ToRecordSetGroupRecordSetOutputWithContext(context.Context) RecordSetGroupRecordSetOutput
}

type RecordSetGroupRecordSetArgs struct {
	AliasTarget      RecordSetGroupAliasTargetPtrInput `pulumi:"aliasTarget"`
	Comment          pulumi.StringPtrInput             `pulumi:"comment"`
	Failover         pulumi.StringPtrInput             `pulumi:"failover"`
	GeoLocation      RecordSetGroupGeoLocationPtrInput `pulumi:"geoLocation"`
	HealthCheckId    pulumi.StringPtrInput             `pulumi:"healthCheckId"`
	HostedZoneId     pulumi.StringPtrInput             `pulumi:"hostedZoneId"`
	HostedZoneName   pulumi.StringPtrInput             `pulumi:"hostedZoneName"`
	MultiValueAnswer pulumi.BoolPtrInput               `pulumi:"multiValueAnswer"`
	Name             pulumi.StringInput                `pulumi:"name"`
	Region           pulumi.StringPtrInput             `pulumi:"region"`
	ResourceRecords  pulumi.StringArrayInput           `pulumi:"resourceRecords"`
	SetIdentifier    pulumi.StringPtrInput             `pulumi:"setIdentifier"`
	TTL              pulumi.StringPtrInput             `pulumi:"tTL"`
	Type             pulumi.StringInput                `pulumi:"type"`
	Weight           pulumi.IntPtrInput                `pulumi:"weight"`
}

func (RecordSetGroupRecordSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGroupRecordSet)(nil)).Elem()
}

func (i RecordSetGroupRecordSetArgs) ToRecordSetGroupRecordSetOutput() RecordSetGroupRecordSetOutput {
	return i.ToRecordSetGroupRecordSetOutputWithContext(context.Background())
}

func (i RecordSetGroupRecordSetArgs) ToRecordSetGroupRecordSetOutputWithContext(ctx context.Context) RecordSetGroupRecordSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupRecordSetOutput)
}

// RecordSetGroupRecordSetArrayInput is an input type that accepts RecordSetGroupRecordSetArray and RecordSetGroupRecordSetArrayOutput values.
// You can construct a concrete instance of `RecordSetGroupRecordSetArrayInput` via:
//
//          RecordSetGroupRecordSetArray{ RecordSetGroupRecordSetArgs{...} }
type RecordSetGroupRecordSetArrayInput interface {
	pulumi.Input

	ToRecordSetGroupRecordSetArrayOutput() RecordSetGroupRecordSetArrayOutput
	ToRecordSetGroupRecordSetArrayOutputWithContext(context.Context) RecordSetGroupRecordSetArrayOutput
}

type RecordSetGroupRecordSetArray []RecordSetGroupRecordSetInput

func (RecordSetGroupRecordSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordSetGroupRecordSet)(nil)).Elem()
}

func (i RecordSetGroupRecordSetArray) ToRecordSetGroupRecordSetArrayOutput() RecordSetGroupRecordSetArrayOutput {
	return i.ToRecordSetGroupRecordSetArrayOutputWithContext(context.Background())
}

func (i RecordSetGroupRecordSetArray) ToRecordSetGroupRecordSetArrayOutputWithContext(ctx context.Context) RecordSetGroupRecordSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetGroupRecordSetArrayOutput)
}

type RecordSetGroupRecordSetOutput struct{ *pulumi.OutputState }

func (RecordSetGroupRecordSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetGroupRecordSet)(nil)).Elem()
}

func (o RecordSetGroupRecordSetOutput) ToRecordSetGroupRecordSetOutput() RecordSetGroupRecordSetOutput {
	return o
}

func (o RecordSetGroupRecordSetOutput) ToRecordSetGroupRecordSetOutputWithContext(ctx context.Context) RecordSetGroupRecordSetOutput {
	return o
}

func (o RecordSetGroupRecordSetOutput) AliasTarget() RecordSetGroupAliasTargetPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *RecordSetGroupAliasTarget { return v.AliasTarget }).(RecordSetGroupAliasTargetPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) Failover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.Failover }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) GeoLocation() RecordSetGroupGeoLocationPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *RecordSetGroupGeoLocation { return v.GeoLocation }).(RecordSetGroupGeoLocationPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) HealthCheckId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.HealthCheckId }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) MultiValueAnswer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *bool { return v.MultiValueAnswer }).(pulumi.BoolPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) string { return v.Name }).(pulumi.StringOutput)
}

func (o RecordSetGroupRecordSetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) ResourceRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) []string { return v.ResourceRecords }).(pulumi.StringArrayOutput)
}

func (o RecordSetGroupRecordSetOutput) SetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.SetIdentifier }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) TTL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *string { return v.TTL }).(pulumi.StringPtrOutput)
}

func (o RecordSetGroupRecordSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) string { return v.Type }).(pulumi.StringOutput)
}

func (o RecordSetGroupRecordSetOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordSetGroupRecordSet) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RecordSetGroupRecordSetArrayOutput struct{ *pulumi.OutputState }

func (RecordSetGroupRecordSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordSetGroupRecordSet)(nil)).Elem()
}

func (o RecordSetGroupRecordSetArrayOutput) ToRecordSetGroupRecordSetArrayOutput() RecordSetGroupRecordSetArrayOutput {
	return o
}

func (o RecordSetGroupRecordSetArrayOutput) ToRecordSetGroupRecordSetArrayOutputWithContext(ctx context.Context) RecordSetGroupRecordSetArrayOutput {
	return o
}

func (o RecordSetGroupRecordSetArrayOutput) Index(i pulumi.IntInput) RecordSetGroupRecordSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordSetGroupRecordSet {
		return vs[0].([]RecordSetGroupRecordSet)[vs[1].(int)]
	}).(RecordSetGroupRecordSetOutput)
}

func init() {
	pulumi.RegisterOutputType(HealthCheckAlarmIdentifierOutput{})
	pulumi.RegisterOutputType(HealthCheckAlarmIdentifierPtrOutput{})
	pulumi.RegisterOutputType(HealthCheckConfigPropertiesOutput{})
	pulumi.RegisterOutputType(HealthCheckConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HealthCheckTagOutput{})
	pulumi.RegisterOutputType(HealthCheckTagArrayOutput{})
	pulumi.RegisterOutputType(HostedZoneConfigOutput{})
	pulumi.RegisterOutputType(HostedZoneConfigPtrOutput{})
	pulumi.RegisterOutputType(HostedZoneQueryLoggingConfigOutput{})
	pulumi.RegisterOutputType(HostedZoneQueryLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(HostedZoneTagOutput{})
	pulumi.RegisterOutputType(HostedZoneTagArrayOutput{})
	pulumi.RegisterOutputType(HostedZoneVPCOutput{})
	pulumi.RegisterOutputType(HostedZoneVPCArrayOutput{})
	pulumi.RegisterOutputType(RecordSetAliasTargetOutput{})
	pulumi.RegisterOutputType(RecordSetAliasTargetPtrOutput{})
	pulumi.RegisterOutputType(RecordSetGeoLocationOutput{})
	pulumi.RegisterOutputType(RecordSetGeoLocationPtrOutput{})
	pulumi.RegisterOutputType(RecordSetGroupAliasTargetOutput{})
	pulumi.RegisterOutputType(RecordSetGroupAliasTargetPtrOutput{})
	pulumi.RegisterOutputType(RecordSetGroupGeoLocationOutput{})
	pulumi.RegisterOutputType(RecordSetGroupGeoLocationPtrOutput{})
	pulumi.RegisterOutputType(RecordSetGroupRecordSetOutput{})
	pulumi.RegisterOutputType(RecordSetGroupRecordSetArrayOutput{})
}
