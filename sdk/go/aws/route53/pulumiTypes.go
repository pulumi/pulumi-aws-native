// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type HealthCheckHealthCheckTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// HealthCheckHealthCheckTagInput is an input type that accepts HealthCheckHealthCheckTagArgs and HealthCheckHealthCheckTagOutput values.
// You can construct a concrete instance of `HealthCheckHealthCheckTagInput` via:
//
//          HealthCheckHealthCheckTagArgs{...}
type HealthCheckHealthCheckTagInput interface {
	pulumi.Input

	ToHealthCheckHealthCheckTagOutput() HealthCheckHealthCheckTagOutput
	ToHealthCheckHealthCheckTagOutputWithContext(context.Context) HealthCheckHealthCheckTagOutput
}

// A key-value pair to associate with a resource.
type HealthCheckHealthCheckTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HealthCheckHealthCheckTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckHealthCheckTag)(nil)).Elem()
}

func (i HealthCheckHealthCheckTagArgs) ToHealthCheckHealthCheckTagOutput() HealthCheckHealthCheckTagOutput {
	return i.ToHealthCheckHealthCheckTagOutputWithContext(context.Background())
}

func (i HealthCheckHealthCheckTagArgs) ToHealthCheckHealthCheckTagOutputWithContext(ctx context.Context) HealthCheckHealthCheckTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckHealthCheckTagOutput)
}

// HealthCheckHealthCheckTagArrayInput is an input type that accepts HealthCheckHealthCheckTagArray and HealthCheckHealthCheckTagArrayOutput values.
// You can construct a concrete instance of `HealthCheckHealthCheckTagArrayInput` via:
//
//          HealthCheckHealthCheckTagArray{ HealthCheckHealthCheckTagArgs{...} }
type HealthCheckHealthCheckTagArrayInput interface {
	pulumi.Input

	ToHealthCheckHealthCheckTagArrayOutput() HealthCheckHealthCheckTagArrayOutput
	ToHealthCheckHealthCheckTagArrayOutputWithContext(context.Context) HealthCheckHealthCheckTagArrayOutput
}

type HealthCheckHealthCheckTagArray []HealthCheckHealthCheckTagInput

func (HealthCheckHealthCheckTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckHealthCheckTag)(nil)).Elem()
}

func (i HealthCheckHealthCheckTagArray) ToHealthCheckHealthCheckTagArrayOutput() HealthCheckHealthCheckTagArrayOutput {
	return i.ToHealthCheckHealthCheckTagArrayOutputWithContext(context.Background())
}

func (i HealthCheckHealthCheckTagArray) ToHealthCheckHealthCheckTagArrayOutputWithContext(ctx context.Context) HealthCheckHealthCheckTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckHealthCheckTagArrayOutput)
}

// A key-value pair to associate with a resource.
type HealthCheckHealthCheckTagOutput struct{ *pulumi.OutputState }

func (HealthCheckHealthCheckTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckHealthCheckTag)(nil)).Elem()
}

func (o HealthCheckHealthCheckTagOutput) ToHealthCheckHealthCheckTagOutput() HealthCheckHealthCheckTagOutput {
	return o
}

func (o HealthCheckHealthCheckTagOutput) ToHealthCheckHealthCheckTagOutputWithContext(ctx context.Context) HealthCheckHealthCheckTagOutput {
	return o
}

// The key name of the tag.
func (o HealthCheckHealthCheckTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckHealthCheckTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o HealthCheckHealthCheckTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckHealthCheckTag) string { return v.Value }).(pulumi.StringOutput)
}

type HealthCheckHealthCheckTagArrayOutput struct{ *pulumi.OutputState }

func (HealthCheckHealthCheckTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckHealthCheckTag)(nil)).Elem()
}

func (o HealthCheckHealthCheckTagArrayOutput) ToHealthCheckHealthCheckTagArrayOutput() HealthCheckHealthCheckTagArrayOutput {
	return o
}

func (o HealthCheckHealthCheckTagArrayOutput) ToHealthCheckHealthCheckTagArrayOutputWithContext(ctx context.Context) HealthCheckHealthCheckTagArrayOutput {
	return o
}

func (o HealthCheckHealthCheckTagArrayOutput) Index(i pulumi.IntInput) HealthCheckHealthCheckTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthCheckHealthCheckTag {
		return vs[0].([]HealthCheckHealthCheckTag)[vs[1].(int)]
	}).(HealthCheckHealthCheckTagOutput)
}

// A complex type that contains an optional comment.
//
// If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
type HostedZoneHostedZoneConfig struct {
	// Any comments that you want to include about the hosted zone.
	Comment *string `pulumi:"comment"`
}

// HostedZoneHostedZoneConfigInput is an input type that accepts HostedZoneHostedZoneConfigArgs and HostedZoneHostedZoneConfigOutput values.
// You can construct a concrete instance of `HostedZoneHostedZoneConfigInput` via:
//
//          HostedZoneHostedZoneConfigArgs{...}
type HostedZoneHostedZoneConfigInput interface {
	pulumi.Input

	ToHostedZoneHostedZoneConfigOutput() HostedZoneHostedZoneConfigOutput
	ToHostedZoneHostedZoneConfigOutputWithContext(context.Context) HostedZoneHostedZoneConfigOutput
}

// A complex type that contains an optional comment.
//
// If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
type HostedZoneHostedZoneConfigArgs struct {
	// Any comments that you want to include about the hosted zone.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
}

func (HostedZoneHostedZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneHostedZoneConfig)(nil)).Elem()
}

func (i HostedZoneHostedZoneConfigArgs) ToHostedZoneHostedZoneConfigOutput() HostedZoneHostedZoneConfigOutput {
	return i.ToHostedZoneHostedZoneConfigOutputWithContext(context.Background())
}

func (i HostedZoneHostedZoneConfigArgs) ToHostedZoneHostedZoneConfigOutputWithContext(ctx context.Context) HostedZoneHostedZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneHostedZoneConfigOutput)
}

func (i HostedZoneHostedZoneConfigArgs) ToHostedZoneHostedZoneConfigPtrOutput() HostedZoneHostedZoneConfigPtrOutput {
	return i.ToHostedZoneHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (i HostedZoneHostedZoneConfigArgs) ToHostedZoneHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneHostedZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneHostedZoneConfigOutput).ToHostedZoneHostedZoneConfigPtrOutputWithContext(ctx)
}

// HostedZoneHostedZoneConfigPtrInput is an input type that accepts HostedZoneHostedZoneConfigArgs, HostedZoneHostedZoneConfigPtr and HostedZoneHostedZoneConfigPtrOutput values.
// You can construct a concrete instance of `HostedZoneHostedZoneConfigPtrInput` via:
//
//          HostedZoneHostedZoneConfigArgs{...}
//
//  or:
//
//          nil
type HostedZoneHostedZoneConfigPtrInput interface {
	pulumi.Input

	ToHostedZoneHostedZoneConfigPtrOutput() HostedZoneHostedZoneConfigPtrOutput
	ToHostedZoneHostedZoneConfigPtrOutputWithContext(context.Context) HostedZoneHostedZoneConfigPtrOutput
}

type hostedZoneHostedZoneConfigPtrType HostedZoneHostedZoneConfigArgs

func HostedZoneHostedZoneConfigPtr(v *HostedZoneHostedZoneConfigArgs) HostedZoneHostedZoneConfigPtrInput {
	return (*hostedZoneHostedZoneConfigPtrType)(v)
}

func (*hostedZoneHostedZoneConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneHostedZoneConfig)(nil)).Elem()
}

func (i *hostedZoneHostedZoneConfigPtrType) ToHostedZoneHostedZoneConfigPtrOutput() HostedZoneHostedZoneConfigPtrOutput {
	return i.ToHostedZoneHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (i *hostedZoneHostedZoneConfigPtrType) ToHostedZoneHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneHostedZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneHostedZoneConfigPtrOutput)
}

// A complex type that contains an optional comment.
//
// If you don't want to specify a comment, omit the HostedZoneConfig and Comment elements.
type HostedZoneHostedZoneConfigOutput struct{ *pulumi.OutputState }

func (HostedZoneHostedZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneHostedZoneConfig)(nil)).Elem()
}

func (o HostedZoneHostedZoneConfigOutput) ToHostedZoneHostedZoneConfigOutput() HostedZoneHostedZoneConfigOutput {
	return o
}

func (o HostedZoneHostedZoneConfigOutput) ToHostedZoneHostedZoneConfigOutputWithContext(ctx context.Context) HostedZoneHostedZoneConfigOutput {
	return o
}

func (o HostedZoneHostedZoneConfigOutput) ToHostedZoneHostedZoneConfigPtrOutput() HostedZoneHostedZoneConfigPtrOutput {
	return o.ToHostedZoneHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (o HostedZoneHostedZoneConfigOutput) ToHostedZoneHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneHostedZoneConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostedZoneHostedZoneConfig) *HostedZoneHostedZoneConfig {
		return &v
	}).(HostedZoneHostedZoneConfigPtrOutput)
}

// Any comments that you want to include about the hosted zone.
func (o HostedZoneHostedZoneConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostedZoneHostedZoneConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

type HostedZoneHostedZoneConfigPtrOutput struct{ *pulumi.OutputState }

func (HostedZoneHostedZoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneHostedZoneConfig)(nil)).Elem()
}

func (o HostedZoneHostedZoneConfigPtrOutput) ToHostedZoneHostedZoneConfigPtrOutput() HostedZoneHostedZoneConfigPtrOutput {
	return o
}

func (o HostedZoneHostedZoneConfigPtrOutput) ToHostedZoneHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneHostedZoneConfigPtrOutput {
	return o
}

func (o HostedZoneHostedZoneConfigPtrOutput) Elem() HostedZoneHostedZoneConfigOutput {
	return o.ApplyT(func(v *HostedZoneHostedZoneConfig) HostedZoneHostedZoneConfig {
		if v != nil {
			return *v
		}
		var ret HostedZoneHostedZoneConfig
		return ret
	}).(HostedZoneHostedZoneConfigOutput)
}

// Any comments that you want to include about the hosted zone.
func (o HostedZoneHostedZoneConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedZoneHostedZoneConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneHostedZoneTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// HostedZoneHostedZoneTagInput is an input type that accepts HostedZoneHostedZoneTagArgs and HostedZoneHostedZoneTagOutput values.
// You can construct a concrete instance of `HostedZoneHostedZoneTagInput` via:
//
//          HostedZoneHostedZoneTagArgs{...}
type HostedZoneHostedZoneTagInput interface {
	pulumi.Input

	ToHostedZoneHostedZoneTagOutput() HostedZoneHostedZoneTagOutput
	ToHostedZoneHostedZoneTagOutputWithContext(context.Context) HostedZoneHostedZoneTagOutput
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneHostedZoneTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HostedZoneHostedZoneTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneHostedZoneTag)(nil)).Elem()
}

func (i HostedZoneHostedZoneTagArgs) ToHostedZoneHostedZoneTagOutput() HostedZoneHostedZoneTagOutput {
	return i.ToHostedZoneHostedZoneTagOutputWithContext(context.Background())
}

func (i HostedZoneHostedZoneTagArgs) ToHostedZoneHostedZoneTagOutputWithContext(ctx context.Context) HostedZoneHostedZoneTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneHostedZoneTagOutput)
}

// HostedZoneHostedZoneTagArrayInput is an input type that accepts HostedZoneHostedZoneTagArray and HostedZoneHostedZoneTagArrayOutput values.
// You can construct a concrete instance of `HostedZoneHostedZoneTagArrayInput` via:
//
//          HostedZoneHostedZoneTagArray{ HostedZoneHostedZoneTagArgs{...} }
type HostedZoneHostedZoneTagArrayInput interface {
	pulumi.Input

	ToHostedZoneHostedZoneTagArrayOutput() HostedZoneHostedZoneTagArrayOutput
	ToHostedZoneHostedZoneTagArrayOutputWithContext(context.Context) HostedZoneHostedZoneTagArrayOutput
}

type HostedZoneHostedZoneTagArray []HostedZoneHostedZoneTagInput

func (HostedZoneHostedZoneTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneHostedZoneTag)(nil)).Elem()
}

func (i HostedZoneHostedZoneTagArray) ToHostedZoneHostedZoneTagArrayOutput() HostedZoneHostedZoneTagArrayOutput {
	return i.ToHostedZoneHostedZoneTagArrayOutputWithContext(context.Background())
}

func (i HostedZoneHostedZoneTagArray) ToHostedZoneHostedZoneTagArrayOutputWithContext(ctx context.Context) HostedZoneHostedZoneTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneHostedZoneTagArrayOutput)
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneHostedZoneTagOutput struct{ *pulumi.OutputState }

func (HostedZoneHostedZoneTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneHostedZoneTag)(nil)).Elem()
}

func (o HostedZoneHostedZoneTagOutput) ToHostedZoneHostedZoneTagOutput() HostedZoneHostedZoneTagOutput {
	return o
}

func (o HostedZoneHostedZoneTagOutput) ToHostedZoneHostedZoneTagOutputWithContext(ctx context.Context) HostedZoneHostedZoneTagOutput {
	return o
}

// The key name of the tag.
func (o HostedZoneHostedZoneTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneHostedZoneTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o HostedZoneHostedZoneTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneHostedZoneTag) string { return v.Value }).(pulumi.StringOutput)
}

type HostedZoneHostedZoneTagArrayOutput struct{ *pulumi.OutputState }

func (HostedZoneHostedZoneTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneHostedZoneTag)(nil)).Elem()
}

func (o HostedZoneHostedZoneTagArrayOutput) ToHostedZoneHostedZoneTagArrayOutput() HostedZoneHostedZoneTagArrayOutput {
	return o
}

func (o HostedZoneHostedZoneTagArrayOutput) ToHostedZoneHostedZoneTagArrayOutputWithContext(ctx context.Context) HostedZoneHostedZoneTagArrayOutput {
	return o
}

func (o HostedZoneHostedZoneTagArrayOutput) Index(i pulumi.IntInput) HostedZoneHostedZoneTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostedZoneHostedZoneTag {
		return vs[0].([]HostedZoneHostedZoneTag)[vs[1].(int)]
	}).(HostedZoneHostedZoneTagOutput)
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfig struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn string `pulumi:"cloudWatchLogsLogGroupArn"`
}

// HostedZoneQueryLoggingConfigInput is an input type that accepts HostedZoneQueryLoggingConfigArgs and HostedZoneQueryLoggingConfigOutput values.
// You can construct a concrete instance of `HostedZoneQueryLoggingConfigInput` via:
//
//          HostedZoneQueryLoggingConfigArgs{...}
type HostedZoneQueryLoggingConfigInput interface {
	pulumi.Input

	ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput
	ToHostedZoneQueryLoggingConfigOutputWithContext(context.Context) HostedZoneQueryLoggingConfigOutput
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfigArgs struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn pulumi.StringInput `pulumi:"cloudWatchLogsLogGroupArn"`
}

func (HostedZoneQueryLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput {
	return i.ToHostedZoneQueryLoggingConfigOutputWithContext(context.Background())
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigOutput)
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return i.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigOutput).ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx)
}

// HostedZoneQueryLoggingConfigPtrInput is an input type that accepts HostedZoneQueryLoggingConfigArgs, HostedZoneQueryLoggingConfigPtr and HostedZoneQueryLoggingConfigPtrOutput values.
// You can construct a concrete instance of `HostedZoneQueryLoggingConfigPtrInput` via:
//
//          HostedZoneQueryLoggingConfigArgs{...}
//
//  or:
//
//          nil
type HostedZoneQueryLoggingConfigPtrInput interface {
	pulumi.Input

	ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput
	ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Context) HostedZoneQueryLoggingConfigPtrOutput
}

type hostedZoneQueryLoggingConfigPtrType HostedZoneQueryLoggingConfigArgs

func HostedZoneQueryLoggingConfigPtr(v *HostedZoneQueryLoggingConfigArgs) HostedZoneQueryLoggingConfigPtrInput {
	return (*hostedZoneQueryLoggingConfigPtrType)(v)
}

func (*hostedZoneQueryLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (i *hostedZoneQueryLoggingConfigPtrType) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return i.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *hostedZoneQueryLoggingConfigPtrType) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigPtrOutput)
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfigOutput struct{ *pulumi.OutputState }

func (HostedZoneQueryLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return o.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostedZoneQueryLoggingConfig) *HostedZoneQueryLoggingConfig {
		return &v
	}).(HostedZoneQueryLoggingConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o HostedZoneQueryLoggingConfigOutput) CloudWatchLogsLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneQueryLoggingConfig) string { return v.CloudWatchLogsLogGroupArn }).(pulumi.StringOutput)
}

type HostedZoneQueryLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (HostedZoneQueryLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (o HostedZoneQueryLoggingConfigPtrOutput) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigPtrOutput) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigPtrOutput) Elem() HostedZoneQueryLoggingConfigOutput {
	return o.ApplyT(func(v *HostedZoneQueryLoggingConfig) HostedZoneQueryLoggingConfig {
		if v != nil {
			return *v
		}
		var ret HostedZoneQueryLoggingConfig
		return ret
	}).(HostedZoneQueryLoggingConfigOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o HostedZoneQueryLoggingConfigPtrOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedZoneQueryLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CloudWatchLogsLogGroupArn
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
type HostedZoneVPC struct {
	// The ID of an Amazon VPC.
	VPCId string `pulumi:"vPCId"`
	// The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
	VPCRegion string `pulumi:"vPCRegion"`
}

// HostedZoneVPCInput is an input type that accepts HostedZoneVPCArgs and HostedZoneVPCOutput values.
// You can construct a concrete instance of `HostedZoneVPCInput` via:
//
//          HostedZoneVPCArgs{...}
type HostedZoneVPCInput interface {
	pulumi.Input

	ToHostedZoneVPCOutput() HostedZoneVPCOutput
	ToHostedZoneVPCOutputWithContext(context.Context) HostedZoneVPCOutput
}

// A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
type HostedZoneVPCArgs struct {
	// The ID of an Amazon VPC.
	VPCId pulumi.StringInput `pulumi:"vPCId"`
	// The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
	VPCRegion pulumi.StringInput `pulumi:"vPCRegion"`
}

func (HostedZoneVPCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneVPC)(nil)).Elem()
}

func (i HostedZoneVPCArgs) ToHostedZoneVPCOutput() HostedZoneVPCOutput {
	return i.ToHostedZoneVPCOutputWithContext(context.Background())
}

func (i HostedZoneVPCArgs) ToHostedZoneVPCOutputWithContext(ctx context.Context) HostedZoneVPCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneVPCOutput)
}

// HostedZoneVPCArrayInput is an input type that accepts HostedZoneVPCArray and HostedZoneVPCArrayOutput values.
// You can construct a concrete instance of `HostedZoneVPCArrayInput` via:
//
//          HostedZoneVPCArray{ HostedZoneVPCArgs{...} }
type HostedZoneVPCArrayInput interface {
	pulumi.Input

	ToHostedZoneVPCArrayOutput() HostedZoneVPCArrayOutput
	ToHostedZoneVPCArrayOutputWithContext(context.Context) HostedZoneVPCArrayOutput
}

type HostedZoneVPCArray []HostedZoneVPCInput

func (HostedZoneVPCArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneVPC)(nil)).Elem()
}

func (i HostedZoneVPCArray) ToHostedZoneVPCArrayOutput() HostedZoneVPCArrayOutput {
	return i.ToHostedZoneVPCArrayOutputWithContext(context.Background())
}

func (i HostedZoneVPCArray) ToHostedZoneVPCArrayOutputWithContext(ctx context.Context) HostedZoneVPCArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneVPCArrayOutput)
}

// A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
type HostedZoneVPCOutput struct{ *pulumi.OutputState }

func (HostedZoneVPCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneVPC)(nil)).Elem()
}

func (o HostedZoneVPCOutput) ToHostedZoneVPCOutput() HostedZoneVPCOutput {
	return o
}

func (o HostedZoneVPCOutput) ToHostedZoneVPCOutputWithContext(ctx context.Context) HostedZoneVPCOutput {
	return o
}

// The ID of an Amazon VPC.
func (o HostedZoneVPCOutput) VPCId() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneVPC) string { return v.VPCId }).(pulumi.StringOutput)
}

// The region that an Amazon VPC was created in. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a list of up to date regions.
func (o HostedZoneVPCOutput) VPCRegion() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneVPC) string { return v.VPCRegion }).(pulumi.StringOutput)
}

type HostedZoneVPCArrayOutput struct{ *pulumi.OutputState }

func (HostedZoneVPCArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneVPC)(nil)).Elem()
}

func (o HostedZoneVPCArrayOutput) ToHostedZoneVPCArrayOutput() HostedZoneVPCArrayOutput {
	return o
}

func (o HostedZoneVPCArrayOutput) ToHostedZoneVPCArrayOutputWithContext(ctx context.Context) HostedZoneVPCArrayOutput {
	return o
}

func (o HostedZoneVPCArrayOutput) Index(i pulumi.IntInput) HostedZoneVPCOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostedZoneVPC {
		return vs[0].([]HostedZoneVPC)[vs[1].(int)]
	}).(HostedZoneVPCOutput)
}

func init() {
	pulumi.RegisterOutputType(HealthCheckHealthCheckTagOutput{})
	pulumi.RegisterOutputType(HealthCheckHealthCheckTagArrayOutput{})
	pulumi.RegisterOutputType(HostedZoneHostedZoneConfigOutput{})
	pulumi.RegisterOutputType(HostedZoneHostedZoneConfigPtrOutput{})
	pulumi.RegisterOutputType(HostedZoneHostedZoneTagOutput{})
	pulumi.RegisterOutputType(HostedZoneHostedZoneTagArrayOutput{})
	pulumi.RegisterOutputType(HostedZoneQueryLoggingConfigOutput{})
	pulumi.RegisterOutputType(HostedZoneQueryLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(HostedZoneVPCOutput{})
	pulumi.RegisterOutputType(HostedZoneVPCArrayOutput{})
}
