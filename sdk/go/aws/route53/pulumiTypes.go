// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CidrCollectionLocation struct {
	// A list of CIDR blocks.
	CidrList []string `pulumi:"cidrList"`
	// The name of the location that is associated with the CIDR collection.
	LocationName string `pulumi:"locationName"`
}

// CidrCollectionLocationInput is an input type that accepts CidrCollectionLocationArgs and CidrCollectionLocationOutput values.
// You can construct a concrete instance of `CidrCollectionLocationInput` via:
//
//	CidrCollectionLocationArgs{...}
type CidrCollectionLocationInput interface {
	pulumi.Input

	ToCidrCollectionLocationOutput() CidrCollectionLocationOutput
	ToCidrCollectionLocationOutputWithContext(context.Context) CidrCollectionLocationOutput
}

type CidrCollectionLocationArgs struct {
	// A list of CIDR blocks.
	CidrList pulumi.StringArrayInput `pulumi:"cidrList"`
	// The name of the location that is associated with the CIDR collection.
	LocationName pulumi.StringInput `pulumi:"locationName"`
}

func (CidrCollectionLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CidrCollectionLocation)(nil)).Elem()
}

func (i CidrCollectionLocationArgs) ToCidrCollectionLocationOutput() CidrCollectionLocationOutput {
	return i.ToCidrCollectionLocationOutputWithContext(context.Background())
}

func (i CidrCollectionLocationArgs) ToCidrCollectionLocationOutputWithContext(ctx context.Context) CidrCollectionLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CidrCollectionLocationOutput)
}

// CidrCollectionLocationArrayInput is an input type that accepts CidrCollectionLocationArray and CidrCollectionLocationArrayOutput values.
// You can construct a concrete instance of `CidrCollectionLocationArrayInput` via:
//
//	CidrCollectionLocationArray{ CidrCollectionLocationArgs{...} }
type CidrCollectionLocationArrayInput interface {
	pulumi.Input

	ToCidrCollectionLocationArrayOutput() CidrCollectionLocationArrayOutput
	ToCidrCollectionLocationArrayOutputWithContext(context.Context) CidrCollectionLocationArrayOutput
}

type CidrCollectionLocationArray []CidrCollectionLocationInput

func (CidrCollectionLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CidrCollectionLocation)(nil)).Elem()
}

func (i CidrCollectionLocationArray) ToCidrCollectionLocationArrayOutput() CidrCollectionLocationArrayOutput {
	return i.ToCidrCollectionLocationArrayOutputWithContext(context.Background())
}

func (i CidrCollectionLocationArray) ToCidrCollectionLocationArrayOutputWithContext(ctx context.Context) CidrCollectionLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CidrCollectionLocationArrayOutput)
}

type CidrCollectionLocationOutput struct{ *pulumi.OutputState }

func (CidrCollectionLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CidrCollectionLocation)(nil)).Elem()
}

func (o CidrCollectionLocationOutput) ToCidrCollectionLocationOutput() CidrCollectionLocationOutput {
	return o
}

func (o CidrCollectionLocationOutput) ToCidrCollectionLocationOutputWithContext(ctx context.Context) CidrCollectionLocationOutput {
	return o
}

// A list of CIDR blocks.
func (o CidrCollectionLocationOutput) CidrList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CidrCollectionLocation) []string { return v.CidrList }).(pulumi.StringArrayOutput)
}

// The name of the location that is associated with the CIDR collection.
func (o CidrCollectionLocationOutput) LocationName() pulumi.StringOutput {
	return o.ApplyT(func(v CidrCollectionLocation) string { return v.LocationName }).(pulumi.StringOutput)
}

type CidrCollectionLocationArrayOutput struct{ *pulumi.OutputState }

func (CidrCollectionLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CidrCollectionLocation)(nil)).Elem()
}

func (o CidrCollectionLocationArrayOutput) ToCidrCollectionLocationArrayOutput() CidrCollectionLocationArrayOutput {
	return o
}

func (o CidrCollectionLocationArrayOutput) ToCidrCollectionLocationArrayOutputWithContext(ctx context.Context) CidrCollectionLocationArrayOutput {
	return o
}

func (o CidrCollectionLocationArrayOutput) Index(i pulumi.IntInput) CidrCollectionLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CidrCollectionLocation {
		return vs[0].([]CidrCollectionLocation)[vs[1].(int)]
	}).(CidrCollectionLocationOutput)
}

// A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
type HealthCheckAlarmIdentifier struct {
	// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
	Name string `pulumi:"name"`
	// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
	Region string `pulumi:"region"`
}

// HealthCheckAlarmIdentifierInput is an input type that accepts HealthCheckAlarmIdentifierArgs and HealthCheckAlarmIdentifierOutput values.
// You can construct a concrete instance of `HealthCheckAlarmIdentifierInput` via:
//
//	HealthCheckAlarmIdentifierArgs{...}
type HealthCheckAlarmIdentifierInput interface {
	pulumi.Input

	ToHealthCheckAlarmIdentifierOutput() HealthCheckAlarmIdentifierOutput
	ToHealthCheckAlarmIdentifierOutputWithContext(context.Context) HealthCheckAlarmIdentifierOutput
}

// A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
type HealthCheckAlarmIdentifierArgs struct {
	// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
	Name pulumi.StringInput `pulumi:"name"`
	// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
	Region pulumi.StringInput `pulumi:"region"`
}

func (HealthCheckAlarmIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierOutput() HealthCheckAlarmIdentifierOutput {
	return i.ToHealthCheckAlarmIdentifierOutputWithContext(context.Background())
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckAlarmIdentifierOutput)
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return i.ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Background())
}

func (i HealthCheckAlarmIdentifierArgs) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckAlarmIdentifierOutput).ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx)
}

// HealthCheckAlarmIdentifierPtrInput is an input type that accepts HealthCheckAlarmIdentifierArgs, HealthCheckAlarmIdentifierPtr and HealthCheckAlarmIdentifierPtrOutput values.
// You can construct a concrete instance of `HealthCheckAlarmIdentifierPtrInput` via:
//
//	        HealthCheckAlarmIdentifierArgs{...}
//
//	or:
//
//	        nil
type HealthCheckAlarmIdentifierPtrInput interface {
	pulumi.Input

	ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput
	ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Context) HealthCheckAlarmIdentifierPtrOutput
}

type healthCheckAlarmIdentifierPtrType HealthCheckAlarmIdentifierArgs

func HealthCheckAlarmIdentifierPtr(v *HealthCheckAlarmIdentifierArgs) HealthCheckAlarmIdentifierPtrInput {
	return (*healthCheckAlarmIdentifierPtrType)(v)
}

func (*healthCheckAlarmIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (i *healthCheckAlarmIdentifierPtrType) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return i.ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Background())
}

func (i *healthCheckAlarmIdentifierPtrType) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckAlarmIdentifierPtrOutput)
}

// A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
type HealthCheckAlarmIdentifierOutput struct{ *pulumi.OutputState }

func (HealthCheckAlarmIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierOutput() HealthCheckAlarmIdentifierOutput {
	return o
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierOutput {
	return o
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return o.ToHealthCheckAlarmIdentifierPtrOutputWithContext(context.Background())
}

func (o HealthCheckAlarmIdentifierOutput) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthCheckAlarmIdentifier) *HealthCheckAlarmIdentifier {
		return &v
	}).(HealthCheckAlarmIdentifierPtrOutput)
}

// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
func (o HealthCheckAlarmIdentifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckAlarmIdentifier) string { return v.Name }).(pulumi.StringOutput)
}

// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
func (o HealthCheckAlarmIdentifierOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckAlarmIdentifier) string { return v.Region }).(pulumi.StringOutput)
}

type HealthCheckAlarmIdentifierPtrOutput struct{ *pulumi.OutputState }

func (HealthCheckAlarmIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckAlarmIdentifier)(nil)).Elem()
}

func (o HealthCheckAlarmIdentifierPtrOutput) ToHealthCheckAlarmIdentifierPtrOutput() HealthCheckAlarmIdentifierPtrOutput {
	return o
}

func (o HealthCheckAlarmIdentifierPtrOutput) ToHealthCheckAlarmIdentifierPtrOutputWithContext(ctx context.Context) HealthCheckAlarmIdentifierPtrOutput {
	return o
}

func (o HealthCheckAlarmIdentifierPtrOutput) Elem() HealthCheckAlarmIdentifierOutput {
	return o.ApplyT(func(v *HealthCheckAlarmIdentifier) HealthCheckAlarmIdentifier {
		if v != nil {
			return *v
		}
		var ret HealthCheckAlarmIdentifier
		return ret
	}).(HealthCheckAlarmIdentifierOutput)
}

// The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
func (o HealthCheckAlarmIdentifierPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckAlarmIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
func (o HealthCheckAlarmIdentifierPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckAlarmIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about the health check.
type HealthCheckConfigProperties struct {
	AlarmIdentifier              *HealthCheckAlarmIdentifier                              `pulumi:"alarmIdentifier"`
	ChildHealthChecks            []string                                                 `pulumi:"childHealthChecks"`
	EnableSni                    *bool                                                    `pulumi:"enableSni"`
	FailureThreshold             *int                                                     `pulumi:"failureThreshold"`
	FullyQualifiedDomainName     *string                                                  `pulumi:"fullyQualifiedDomainName"`
	HealthThreshold              *int                                                     `pulumi:"healthThreshold"`
	InsufficientDataHealthStatus *HealthCheckConfigPropertiesInsufficientDataHealthStatus `pulumi:"insufficientDataHealthStatus"`
	Inverted                     *bool                                                    `pulumi:"inverted"`
	IpAddress                    *string                                                  `pulumi:"ipAddress"`
	MeasureLatency               *bool                                                    `pulumi:"measureLatency"`
	Port                         *int                                                     `pulumi:"port"`
	Regions                      []string                                                 `pulumi:"regions"`
	RequestInterval              *int                                                     `pulumi:"requestInterval"`
	ResourcePath                 *string                                                  `pulumi:"resourcePath"`
	RoutingControlArn            *string                                                  `pulumi:"routingControlArn"`
	SearchString                 *string                                                  `pulumi:"searchString"`
	Type                         HealthCheckConfigPropertiesType                          `pulumi:"type"`
}

// HealthCheckConfigPropertiesInput is an input type that accepts HealthCheckConfigPropertiesArgs and HealthCheckConfigPropertiesOutput values.
// You can construct a concrete instance of `HealthCheckConfigPropertiesInput` via:
//
//	HealthCheckConfigPropertiesArgs{...}
type HealthCheckConfigPropertiesInput interface {
	pulumi.Input

	ToHealthCheckConfigPropertiesOutput() HealthCheckConfigPropertiesOutput
	ToHealthCheckConfigPropertiesOutputWithContext(context.Context) HealthCheckConfigPropertiesOutput
}

// A complex type that contains information about the health check.
type HealthCheckConfigPropertiesArgs struct {
	AlarmIdentifier              HealthCheckAlarmIdentifierPtrInput                              `pulumi:"alarmIdentifier"`
	ChildHealthChecks            pulumi.StringArrayInput                                         `pulumi:"childHealthChecks"`
	EnableSni                    pulumi.BoolPtrInput                                             `pulumi:"enableSni"`
	FailureThreshold             pulumi.IntPtrInput                                              `pulumi:"failureThreshold"`
	FullyQualifiedDomainName     pulumi.StringPtrInput                                           `pulumi:"fullyQualifiedDomainName"`
	HealthThreshold              pulumi.IntPtrInput                                              `pulumi:"healthThreshold"`
	InsufficientDataHealthStatus HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrInput `pulumi:"insufficientDataHealthStatus"`
	Inverted                     pulumi.BoolPtrInput                                             `pulumi:"inverted"`
	IpAddress                    pulumi.StringPtrInput                                           `pulumi:"ipAddress"`
	MeasureLatency               pulumi.BoolPtrInput                                             `pulumi:"measureLatency"`
	Port                         pulumi.IntPtrInput                                              `pulumi:"port"`
	Regions                      pulumi.StringArrayInput                                         `pulumi:"regions"`
	RequestInterval              pulumi.IntPtrInput                                              `pulumi:"requestInterval"`
	ResourcePath                 pulumi.StringPtrInput                                           `pulumi:"resourcePath"`
	RoutingControlArn            pulumi.StringPtrInput                                           `pulumi:"routingControlArn"`
	SearchString                 pulumi.StringPtrInput                                           `pulumi:"searchString"`
	Type                         HealthCheckConfigPropertiesTypeInput                            `pulumi:"type"`
}

func (HealthCheckConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckConfigProperties)(nil)).Elem()
}

func (i HealthCheckConfigPropertiesArgs) ToHealthCheckConfigPropertiesOutput() HealthCheckConfigPropertiesOutput {
	return i.ToHealthCheckConfigPropertiesOutputWithContext(context.Background())
}

func (i HealthCheckConfigPropertiesArgs) ToHealthCheckConfigPropertiesOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckConfigPropertiesOutput)
}

// A complex type that contains information about the health check.
type HealthCheckConfigPropertiesOutput struct{ *pulumi.OutputState }

func (HealthCheckConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckConfigProperties)(nil)).Elem()
}

func (o HealthCheckConfigPropertiesOutput) ToHealthCheckConfigPropertiesOutput() HealthCheckConfigPropertiesOutput {
	return o
}

func (o HealthCheckConfigPropertiesOutput) ToHealthCheckConfigPropertiesOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesOutput {
	return o
}

func (o HealthCheckConfigPropertiesOutput) AlarmIdentifier() HealthCheckAlarmIdentifierPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *HealthCheckAlarmIdentifier { return v.AlarmIdentifier }).(HealthCheckAlarmIdentifierPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) ChildHealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) []string { return v.ChildHealthChecks }).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesOutput) EnableSni() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *bool { return v.EnableSni }).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) FullyQualifiedDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.FullyQualifiedDomainName }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) HealthThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.HealthThreshold }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) InsufficientDataHealthStatus() HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *HealthCheckConfigPropertiesInsufficientDataHealthStatus {
		return v.InsufficientDataHealthStatus
	}).(HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *bool { return v.Inverted }).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) MeasureLatency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *bool { return v.MeasureLatency }).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesOutput) RequestInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *int { return v.RequestInterval }).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) RoutingControlArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.RoutingControlArn }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) *string { return v.SearchString }).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesOutput) Type() HealthCheckConfigPropertiesTypeOutput {
	return o.ApplyT(func(v HealthCheckConfigProperties) HealthCheckConfigPropertiesType { return v.Type }).(HealthCheckConfigPropertiesTypeOutput)
}

type HealthCheckConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HealthCheckConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckConfigProperties)(nil)).Elem()
}

func (o HealthCheckConfigPropertiesPtrOutput) ToHealthCheckConfigPropertiesPtrOutput() HealthCheckConfigPropertiesPtrOutput {
	return o
}

func (o HealthCheckConfigPropertiesPtrOutput) ToHealthCheckConfigPropertiesPtrOutputWithContext(ctx context.Context) HealthCheckConfigPropertiesPtrOutput {
	return o
}

func (o HealthCheckConfigPropertiesPtrOutput) Elem() HealthCheckConfigPropertiesOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) HealthCheckConfigProperties {
		if v != nil {
			return *v
		}
		var ret HealthCheckConfigProperties
		return ret
	}).(HealthCheckConfigPropertiesOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) AlarmIdentifier() HealthCheckAlarmIdentifierPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *HealthCheckAlarmIdentifier {
		if v == nil {
			return nil
		}
		return v.AlarmIdentifier
	}).(HealthCheckAlarmIdentifierPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) ChildHealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.ChildHealthChecks
	}).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) EnableSni() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSni
	}).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) FullyQualifiedDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.FullyQualifiedDomainName
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) HealthThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.HealthThreshold
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) InsufficientDataHealthStatus() HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *HealthCheckConfigPropertiesInsufficientDataHealthStatus {
		if v == nil {
			return nil
		}
		return v.InsufficientDataHealthStatus
	}).(HealthCheckConfigPropertiesInsufficientDataHealthStatusPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Inverted
	}).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) MeasureLatency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.MeasureLatency
	}).(pulumi.BoolPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) RequestInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.RequestInterval
	}).(pulumi.IntPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourcePath
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) RoutingControlArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.RoutingControlArn
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.SearchString
	}).(pulumi.StringPtrOutput)
}

func (o HealthCheckConfigPropertiesPtrOutput) Type() HealthCheckConfigPropertiesTypePtrOutput {
	return o.ApplyT(func(v *HealthCheckConfigProperties) *HealthCheckConfigPropertiesType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(HealthCheckConfigPropertiesTypePtrOutput)
}

// A key-value pair to associate with a resource.
type HealthCheckTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// HealthCheckTagInput is an input type that accepts HealthCheckTagArgs and HealthCheckTagOutput values.
// You can construct a concrete instance of `HealthCheckTagInput` via:
//
//	HealthCheckTagArgs{...}
type HealthCheckTagInput interface {
	pulumi.Input

	ToHealthCheckTagOutput() HealthCheckTagOutput
	ToHealthCheckTagOutputWithContext(context.Context) HealthCheckTagOutput
}

// A key-value pair to associate with a resource.
type HealthCheckTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HealthCheckTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckTag)(nil)).Elem()
}

func (i HealthCheckTagArgs) ToHealthCheckTagOutput() HealthCheckTagOutput {
	return i.ToHealthCheckTagOutputWithContext(context.Background())
}

func (i HealthCheckTagArgs) ToHealthCheckTagOutputWithContext(ctx context.Context) HealthCheckTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckTagOutput)
}

// HealthCheckTagArrayInput is an input type that accepts HealthCheckTagArray and HealthCheckTagArrayOutput values.
// You can construct a concrete instance of `HealthCheckTagArrayInput` via:
//
//	HealthCheckTagArray{ HealthCheckTagArgs{...} }
type HealthCheckTagArrayInput interface {
	pulumi.Input

	ToHealthCheckTagArrayOutput() HealthCheckTagArrayOutput
	ToHealthCheckTagArrayOutputWithContext(context.Context) HealthCheckTagArrayOutput
}

type HealthCheckTagArray []HealthCheckTagInput

func (HealthCheckTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckTag)(nil)).Elem()
}

func (i HealthCheckTagArray) ToHealthCheckTagArrayOutput() HealthCheckTagArrayOutput {
	return i.ToHealthCheckTagArrayOutputWithContext(context.Background())
}

func (i HealthCheckTagArray) ToHealthCheckTagArrayOutputWithContext(ctx context.Context) HealthCheckTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckTagArrayOutput)
}

// A key-value pair to associate with a resource.
type HealthCheckTagOutput struct{ *pulumi.OutputState }

func (HealthCheckTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckTag)(nil)).Elem()
}

func (o HealthCheckTagOutput) ToHealthCheckTagOutput() HealthCheckTagOutput {
	return o
}

func (o HealthCheckTagOutput) ToHealthCheckTagOutputWithContext(ctx context.Context) HealthCheckTagOutput {
	return o
}

// The key name of the tag.
func (o HealthCheckTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o HealthCheckTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTag) string { return v.Value }).(pulumi.StringOutput)
}

type HealthCheckTagArrayOutput struct{ *pulumi.OutputState }

func (HealthCheckTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckTag)(nil)).Elem()
}

func (o HealthCheckTagArrayOutput) ToHealthCheckTagArrayOutput() HealthCheckTagArrayOutput {
	return o
}

func (o HealthCheckTagArrayOutput) ToHealthCheckTagArrayOutputWithContext(ctx context.Context) HealthCheckTagArrayOutput {
	return o
}

func (o HealthCheckTagArrayOutput) Index(i pulumi.IntInput) HealthCheckTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthCheckTag {
		return vs[0].([]HealthCheckTag)[vs[1].(int)]
	}).(HealthCheckTagOutput)
}

// A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, omit both the “HostedZoneConfig“ and “Comment“ elements.
type HostedZoneConfig struct {
	// Any comments that you want to include about the hosted zone.
	Comment *string `pulumi:"comment"`
}

// HostedZoneConfigInput is an input type that accepts HostedZoneConfigArgs and HostedZoneConfigOutput values.
// You can construct a concrete instance of `HostedZoneConfigInput` via:
//
//	HostedZoneConfigArgs{...}
type HostedZoneConfigInput interface {
	pulumi.Input

	ToHostedZoneConfigOutput() HostedZoneConfigOutput
	ToHostedZoneConfigOutputWithContext(context.Context) HostedZoneConfigOutput
}

// A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, omit both the “HostedZoneConfig“ and “Comment“ elements.
type HostedZoneConfigArgs struct {
	// Any comments that you want to include about the hosted zone.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
}

func (HostedZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneConfig)(nil)).Elem()
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigOutput() HostedZoneConfigOutput {
	return i.ToHostedZoneConfigOutputWithContext(context.Background())
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigOutputWithContext(ctx context.Context) HostedZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneConfigOutput)
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return i.ToHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (i HostedZoneConfigArgs) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneConfigOutput).ToHostedZoneConfigPtrOutputWithContext(ctx)
}

// HostedZoneConfigPtrInput is an input type that accepts HostedZoneConfigArgs, HostedZoneConfigPtr and HostedZoneConfigPtrOutput values.
// You can construct a concrete instance of `HostedZoneConfigPtrInput` via:
//
//	        HostedZoneConfigArgs{...}
//
//	or:
//
//	        nil
type HostedZoneConfigPtrInput interface {
	pulumi.Input

	ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput
	ToHostedZoneConfigPtrOutputWithContext(context.Context) HostedZoneConfigPtrOutput
}

type hostedZoneConfigPtrType HostedZoneConfigArgs

func HostedZoneConfigPtr(v *HostedZoneConfigArgs) HostedZoneConfigPtrInput {
	return (*hostedZoneConfigPtrType)(v)
}

func (*hostedZoneConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneConfig)(nil)).Elem()
}

func (i *hostedZoneConfigPtrType) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return i.ToHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (i *hostedZoneConfigPtrType) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneConfigPtrOutput)
}

// A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, omit both the “HostedZoneConfig“ and “Comment“ elements.
type HostedZoneConfigOutput struct{ *pulumi.OutputState }

func (HostedZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneConfig)(nil)).Elem()
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigOutput() HostedZoneConfigOutput {
	return o
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigOutputWithContext(ctx context.Context) HostedZoneConfigOutput {
	return o
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return o.ToHostedZoneConfigPtrOutputWithContext(context.Background())
}

func (o HostedZoneConfigOutput) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostedZoneConfig) *HostedZoneConfig {
		return &v
	}).(HostedZoneConfigPtrOutput)
}

// Any comments that you want to include about the hosted zone.
func (o HostedZoneConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostedZoneConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

type HostedZoneConfigPtrOutput struct{ *pulumi.OutputState }

func (HostedZoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneConfig)(nil)).Elem()
}

func (o HostedZoneConfigPtrOutput) ToHostedZoneConfigPtrOutput() HostedZoneConfigPtrOutput {
	return o
}

func (o HostedZoneConfigPtrOutput) ToHostedZoneConfigPtrOutputWithContext(ctx context.Context) HostedZoneConfigPtrOutput {
	return o
}

func (o HostedZoneConfigPtrOutput) Elem() HostedZoneConfigOutput {
	return o.ApplyT(func(v *HostedZoneConfig) HostedZoneConfig {
		if v != nil {
			return *v
		}
		var ret HostedZoneConfig
		return ret
	}).(HostedZoneConfigOutput)
}

// Any comments that you want to include about the hosted zone.
func (o HostedZoneConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedZoneConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfig struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn string `pulumi:"cloudWatchLogsLogGroupArn"`
}

// HostedZoneQueryLoggingConfigInput is an input type that accepts HostedZoneQueryLoggingConfigArgs and HostedZoneQueryLoggingConfigOutput values.
// You can construct a concrete instance of `HostedZoneQueryLoggingConfigInput` via:
//
//	HostedZoneQueryLoggingConfigArgs{...}
type HostedZoneQueryLoggingConfigInput interface {
	pulumi.Input

	ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput
	ToHostedZoneQueryLoggingConfigOutputWithContext(context.Context) HostedZoneQueryLoggingConfigOutput
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfigArgs struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
	CloudWatchLogsLogGroupArn pulumi.StringInput `pulumi:"cloudWatchLogsLogGroupArn"`
}

func (HostedZoneQueryLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput {
	return i.ToHostedZoneQueryLoggingConfigOutputWithContext(context.Background())
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigOutput)
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return i.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i HostedZoneQueryLoggingConfigArgs) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigOutput).ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx)
}

// HostedZoneQueryLoggingConfigPtrInput is an input type that accepts HostedZoneQueryLoggingConfigArgs, HostedZoneQueryLoggingConfigPtr and HostedZoneQueryLoggingConfigPtrOutput values.
// You can construct a concrete instance of `HostedZoneQueryLoggingConfigPtrInput` via:
//
//	        HostedZoneQueryLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type HostedZoneQueryLoggingConfigPtrInput interface {
	pulumi.Input

	ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput
	ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Context) HostedZoneQueryLoggingConfigPtrOutput
}

type hostedZoneQueryLoggingConfigPtrType HostedZoneQueryLoggingConfigArgs

func HostedZoneQueryLoggingConfigPtr(v *HostedZoneQueryLoggingConfigArgs) HostedZoneQueryLoggingConfigPtrInput {
	return (*hostedZoneQueryLoggingConfigPtrType)(v)
}

func (*hostedZoneQueryLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (i *hostedZoneQueryLoggingConfigPtrType) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return i.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *hostedZoneQueryLoggingConfigPtrType) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneQueryLoggingConfigPtrOutput)
}

// A complex type that contains information about a configuration for DNS query logging.
type HostedZoneQueryLoggingConfigOutput struct{ *pulumi.OutputState }

func (HostedZoneQueryLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigOutput() HostedZoneQueryLoggingConfigOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return o.ToHostedZoneQueryLoggingConfigPtrOutputWithContext(context.Background())
}

func (o HostedZoneQueryLoggingConfigOutput) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostedZoneQueryLoggingConfig) *HostedZoneQueryLoggingConfig {
		return &v
	}).(HostedZoneQueryLoggingConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o HostedZoneQueryLoggingConfigOutput) CloudWatchLogsLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneQueryLoggingConfig) string { return v.CloudWatchLogsLogGroupArn }).(pulumi.StringOutput)
}

type HostedZoneQueryLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (HostedZoneQueryLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedZoneQueryLoggingConfig)(nil)).Elem()
}

func (o HostedZoneQueryLoggingConfigPtrOutput) ToHostedZoneQueryLoggingConfigPtrOutput() HostedZoneQueryLoggingConfigPtrOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigPtrOutput) ToHostedZoneQueryLoggingConfigPtrOutputWithContext(ctx context.Context) HostedZoneQueryLoggingConfigPtrOutput {
	return o
}

func (o HostedZoneQueryLoggingConfigPtrOutput) Elem() HostedZoneQueryLoggingConfigOutput {
	return o.ApplyT(func(v *HostedZoneQueryLoggingConfig) HostedZoneQueryLoggingConfig {
		if v != nil {
			return *v
		}
		var ret HostedZoneQueryLoggingConfig
		return ret
	}).(HostedZoneQueryLoggingConfigOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
func (o HostedZoneQueryLoggingConfigPtrOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedZoneQueryLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CloudWatchLogsLogGroupArn
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneTag struct {
	// The value of ``Key`` depends on the operation that you want to perform:
	//   +   *Add a tag to a health check or hosted zone*: ``Key`` is the name that you want to give the new tag.
	//   +   *Edit a tag*: ``Key`` is the name of the tag that you want to change the ``Value`` for.
	//   +   *Delete a key*: ``Key`` is the name of the tag you want to remove.
	//   +   *Give a name to a health check*: Edit the default ``Name`` tag. In the Amazon Route 53 console, the list of your health checks includes a *Name* column that lets you see the name that you've given to each health check.
	Key string `pulumi:"key"`
	// The value of ``Value`` depends on the operation that you want to perform:
	//   +   *Add a tag to a health check or hosted zone*: ``Value`` is the value that you want to give the new tag.
	//   +   *Edit a tag*: ``Value`` is the new value that you want to assign the tag.
	Value string `pulumi:"value"`
}

// HostedZoneTagInput is an input type that accepts HostedZoneTagArgs and HostedZoneTagOutput values.
// You can construct a concrete instance of `HostedZoneTagInput` via:
//
//	HostedZoneTagArgs{...}
type HostedZoneTagInput interface {
	pulumi.Input

	ToHostedZoneTagOutput() HostedZoneTagOutput
	ToHostedZoneTagOutputWithContext(context.Context) HostedZoneTagOutput
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneTagArgs struct {
	// The value of ``Key`` depends on the operation that you want to perform:
	//   +   *Add a tag to a health check or hosted zone*: ``Key`` is the name that you want to give the new tag.
	//   +   *Edit a tag*: ``Key`` is the name of the tag that you want to change the ``Value`` for.
	//   +   *Delete a key*: ``Key`` is the name of the tag you want to remove.
	//   +   *Give a name to a health check*: Edit the default ``Name`` tag. In the Amazon Route 53 console, the list of your health checks includes a *Name* column that lets you see the name that you've given to each health check.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of ``Value`` depends on the operation that you want to perform:
	//   +   *Add a tag to a health check or hosted zone*: ``Value`` is the value that you want to give the new tag.
	//   +   *Edit a tag*: ``Value`` is the new value that you want to assign the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HostedZoneTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneTag)(nil)).Elem()
}

func (i HostedZoneTagArgs) ToHostedZoneTagOutput() HostedZoneTagOutput {
	return i.ToHostedZoneTagOutputWithContext(context.Background())
}

func (i HostedZoneTagArgs) ToHostedZoneTagOutputWithContext(ctx context.Context) HostedZoneTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneTagOutput)
}

// HostedZoneTagArrayInput is an input type that accepts HostedZoneTagArray and HostedZoneTagArrayOutput values.
// You can construct a concrete instance of `HostedZoneTagArrayInput` via:
//
//	HostedZoneTagArray{ HostedZoneTagArgs{...} }
type HostedZoneTagArrayInput interface {
	pulumi.Input

	ToHostedZoneTagArrayOutput() HostedZoneTagArrayOutput
	ToHostedZoneTagArrayOutputWithContext(context.Context) HostedZoneTagArrayOutput
}

type HostedZoneTagArray []HostedZoneTagInput

func (HostedZoneTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneTag)(nil)).Elem()
}

func (i HostedZoneTagArray) ToHostedZoneTagArrayOutput() HostedZoneTagArrayOutput {
	return i.ToHostedZoneTagArrayOutputWithContext(context.Background())
}

func (i HostedZoneTagArray) ToHostedZoneTagArrayOutputWithContext(ctx context.Context) HostedZoneTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneTagArrayOutput)
}

// A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
type HostedZoneTagOutput struct{ *pulumi.OutputState }

func (HostedZoneTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneTag)(nil)).Elem()
}

func (o HostedZoneTagOutput) ToHostedZoneTagOutput() HostedZoneTagOutput {
	return o
}

func (o HostedZoneTagOutput) ToHostedZoneTagOutputWithContext(ctx context.Context) HostedZoneTagOutput {
	return o
}

// The value of “Key“ depends on the operation that you want to perform:
//   - *Add a tag to a health check or hosted zone*: “Key“ is the name that you want to give the new tag.
//   - *Edit a tag*: “Key“ is the name of the tag that you want to change the “Value“ for.
//   - *Delete a key*: “Key“ is the name of the tag you want to remove.
//   - *Give a name to a health check*: Edit the default “Name“ tag. In the Amazon Route 53 console, the list of your health checks includes a *Name* column that lets you see the name that you've given to each health check.
func (o HostedZoneTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of “Value“ depends on the operation that you want to perform:
//   - *Add a tag to a health check or hosted zone*: “Value“ is the value that you want to give the new tag.
//   - *Edit a tag*: “Value“ is the new value that you want to assign the tag.
func (o HostedZoneTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneTag) string { return v.Value }).(pulumi.StringOutput)
}

type HostedZoneTagArrayOutput struct{ *pulumi.OutputState }

func (HostedZoneTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneTag)(nil)).Elem()
}

func (o HostedZoneTagArrayOutput) ToHostedZoneTagArrayOutput() HostedZoneTagArrayOutput {
	return o
}

func (o HostedZoneTagArrayOutput) ToHostedZoneTagArrayOutputWithContext(ctx context.Context) HostedZoneTagArrayOutput {
	return o
}

func (o HostedZoneTagArrayOutput) Index(i pulumi.IntInput) HostedZoneTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostedZoneTag {
		return vs[0].([]HostedZoneTag)[vs[1].(int)]
	}).(HostedZoneTagOutput)
}

// *Private hosted zones only:* A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
//
//	For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
type HostedZoneVpc struct {
	// *Private hosted zones only:* The ID of an Amazon VPC.
	//  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcId string `pulumi:"vpcId"`
	// *Private hosted zones only:* The region that an Amazon VPC was created in.
	//  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcRegion string `pulumi:"vpcRegion"`
}

// HostedZoneVpcInput is an input type that accepts HostedZoneVpcArgs and HostedZoneVpcOutput values.
// You can construct a concrete instance of `HostedZoneVpcInput` via:
//
//	HostedZoneVpcArgs{...}
type HostedZoneVpcInput interface {
	pulumi.Input

	ToHostedZoneVpcOutput() HostedZoneVpcOutput
	ToHostedZoneVpcOutputWithContext(context.Context) HostedZoneVpcOutput
}

// *Private hosted zones only:* A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
//
//	For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
type HostedZoneVpcArgs struct {
	// *Private hosted zones only:* The ID of an Amazon VPC.
	//  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// *Private hosted zones only:* The region that an Amazon VPC was created in.
	//  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
	VpcRegion pulumi.StringInput `pulumi:"vpcRegion"`
}

func (HostedZoneVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneVpc)(nil)).Elem()
}

func (i HostedZoneVpcArgs) ToHostedZoneVpcOutput() HostedZoneVpcOutput {
	return i.ToHostedZoneVpcOutputWithContext(context.Background())
}

func (i HostedZoneVpcArgs) ToHostedZoneVpcOutputWithContext(ctx context.Context) HostedZoneVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneVpcOutput)
}

// HostedZoneVpcArrayInput is an input type that accepts HostedZoneVpcArray and HostedZoneVpcArrayOutput values.
// You can construct a concrete instance of `HostedZoneVpcArrayInput` via:
//
//	HostedZoneVpcArray{ HostedZoneVpcArgs{...} }
type HostedZoneVpcArrayInput interface {
	pulumi.Input

	ToHostedZoneVpcArrayOutput() HostedZoneVpcArrayOutput
	ToHostedZoneVpcArrayOutputWithContext(context.Context) HostedZoneVpcArrayOutput
}

type HostedZoneVpcArray []HostedZoneVpcInput

func (HostedZoneVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneVpc)(nil)).Elem()
}

func (i HostedZoneVpcArray) ToHostedZoneVpcArrayOutput() HostedZoneVpcArrayOutput {
	return i.ToHostedZoneVpcArrayOutputWithContext(context.Background())
}

func (i HostedZoneVpcArray) ToHostedZoneVpcArrayOutputWithContext(ctx context.Context) HostedZoneVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedZoneVpcArrayOutput)
}

// *Private hosted zones only:* A complex type that contains information about an Amazon VPC. Route 53 Resolver uses the records in the private hosted zone to route traffic in that VPC.
//
//	For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
type HostedZoneVpcOutput struct{ *pulumi.OutputState }

func (HostedZoneVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedZoneVpc)(nil)).Elem()
}

func (o HostedZoneVpcOutput) ToHostedZoneVpcOutput() HostedZoneVpcOutput {
	return o
}

func (o HostedZoneVpcOutput) ToHostedZoneVpcOutputWithContext(ctx context.Context) HostedZoneVpcOutput {
	return o
}

// *Private hosted zones only:* The ID of an Amazon VPC.
//
//	For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
func (o HostedZoneVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// *Private hosted zones only:* The region that an Amazon VPC was created in.
//
//	For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
func (o HostedZoneVpcOutput) VpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v HostedZoneVpc) string { return v.VpcRegion }).(pulumi.StringOutput)
}

type HostedZoneVpcArrayOutput struct{ *pulumi.OutputState }

func (HostedZoneVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostedZoneVpc)(nil)).Elem()
}

func (o HostedZoneVpcArrayOutput) ToHostedZoneVpcArrayOutput() HostedZoneVpcArrayOutput {
	return o
}

func (o HostedZoneVpcArrayOutput) ToHostedZoneVpcArrayOutputWithContext(ctx context.Context) HostedZoneVpcArrayOutput {
	return o
}

func (o HostedZoneVpcArrayOutput) Index(i pulumi.IntInput) HostedZoneVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostedZoneVpc {
		return vs[0].([]HostedZoneVpc)[vs[1].(int)]
	}).(HostedZoneVpcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CidrCollectionLocationInput)(nil)).Elem(), CidrCollectionLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CidrCollectionLocationArrayInput)(nil)).Elem(), CidrCollectionLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckAlarmIdentifierInput)(nil)).Elem(), HealthCheckAlarmIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckAlarmIdentifierPtrInput)(nil)).Elem(), HealthCheckAlarmIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckConfigPropertiesInput)(nil)).Elem(), HealthCheckConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckTagInput)(nil)).Elem(), HealthCheckTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckTagArrayInput)(nil)).Elem(), HealthCheckTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneConfigInput)(nil)).Elem(), HostedZoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneConfigPtrInput)(nil)).Elem(), HostedZoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneQueryLoggingConfigInput)(nil)).Elem(), HostedZoneQueryLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneQueryLoggingConfigPtrInput)(nil)).Elem(), HostedZoneQueryLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneTagInput)(nil)).Elem(), HostedZoneTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneTagArrayInput)(nil)).Elem(), HostedZoneTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneVpcInput)(nil)).Elem(), HostedZoneVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedZoneVpcArrayInput)(nil)).Elem(), HostedZoneVpcArray{})
	pulumi.RegisterOutputType(CidrCollectionLocationOutput{})
	pulumi.RegisterOutputType(CidrCollectionLocationArrayOutput{})
	pulumi.RegisterOutputType(HealthCheckAlarmIdentifierOutput{})
	pulumi.RegisterOutputType(HealthCheckAlarmIdentifierPtrOutput{})
	pulumi.RegisterOutputType(HealthCheckConfigPropertiesOutput{})
	pulumi.RegisterOutputType(HealthCheckConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HealthCheckTagOutput{})
	pulumi.RegisterOutputType(HealthCheckTagArrayOutput{})
	pulumi.RegisterOutputType(HostedZoneConfigOutput{})
	pulumi.RegisterOutputType(HostedZoneConfigPtrOutput{})
	pulumi.RegisterOutputType(HostedZoneQueryLoggingConfigOutput{})
	pulumi.RegisterOutputType(HostedZoneQueryLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(HostedZoneTagOutput{})
	pulumi.RegisterOutputType(HostedZoneTagArrayOutput{})
	pulumi.RegisterOutputType(HostedZoneVpcOutput{})
	pulumi.RegisterOutputType(HostedZoneVpcArrayOutput{})
}
