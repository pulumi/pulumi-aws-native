// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sso

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for SSO application access grant to a user or group.
type ApplicationAssignment struct {
	pulumi.CustomResourceState

	// The ARN of the application.
	ApplicationArn pulumi.StringOutput `pulumi:"applicationArn"`
	// An identifier for an object in IAM Identity Center, such as a user or group
	PrincipalId pulumi.StringOutput `pulumi:"principalId"`
	// The entity type for which the assignment will be created.
	PrincipalType ApplicationAssignmentPrincipalTypeOutput `pulumi:"principalType"`
}

// NewApplicationAssignment registers a new resource with the given unique name, arguments, and options.
func NewApplicationAssignment(ctx *pulumi.Context,
	name string, args *ApplicationAssignmentArgs, opts ...pulumi.ResourceOption) (*ApplicationAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationArn == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationArn'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.PrincipalType == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationArn",
		"principalId",
		"principalType",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationAssignment
	err := ctx.RegisterResource("aws-native:sso:ApplicationAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationAssignment gets an existing ApplicationAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationAssignmentState, opts ...pulumi.ResourceOption) (*ApplicationAssignment, error) {
	var resource ApplicationAssignment
	err := ctx.ReadResource("aws-native:sso:ApplicationAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationAssignment resources.
type applicationAssignmentState struct {
}

type ApplicationAssignmentState struct {
}

func (ApplicationAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAssignmentState)(nil)).Elem()
}

type applicationAssignmentArgs struct {
	// The ARN of the application.
	ApplicationArn string `pulumi:"applicationArn"`
	// An identifier for an object in IAM Identity Center, such as a user or group
	PrincipalId string `pulumi:"principalId"`
	// The entity type for which the assignment will be created.
	PrincipalType ApplicationAssignmentPrincipalType `pulumi:"principalType"`
}

// The set of arguments for constructing a ApplicationAssignment resource.
type ApplicationAssignmentArgs struct {
	// The ARN of the application.
	ApplicationArn pulumi.StringInput
	// An identifier for an object in IAM Identity Center, such as a user or group
	PrincipalId pulumi.StringInput
	// The entity type for which the assignment will be created.
	PrincipalType ApplicationAssignmentPrincipalTypeInput
}

func (ApplicationAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAssignmentArgs)(nil)).Elem()
}

type ApplicationAssignmentInput interface {
	pulumi.Input

	ToApplicationAssignmentOutput() ApplicationAssignmentOutput
	ToApplicationAssignmentOutputWithContext(ctx context.Context) ApplicationAssignmentOutput
}

func (*ApplicationAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAssignment)(nil)).Elem()
}

func (i *ApplicationAssignment) ToApplicationAssignmentOutput() ApplicationAssignmentOutput {
	return i.ToApplicationAssignmentOutputWithContext(context.Background())
}

func (i *ApplicationAssignment) ToApplicationAssignmentOutputWithContext(ctx context.Context) ApplicationAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAssignmentOutput)
}

type ApplicationAssignmentOutput struct{ *pulumi.OutputState }

func (ApplicationAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAssignment)(nil)).Elem()
}

func (o ApplicationAssignmentOutput) ToApplicationAssignmentOutput() ApplicationAssignmentOutput {
	return o
}

func (o ApplicationAssignmentOutput) ToApplicationAssignmentOutputWithContext(ctx context.Context) ApplicationAssignmentOutput {
	return o
}

// The ARN of the application.
func (o ApplicationAssignmentOutput) ApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAssignment) pulumi.StringOutput { return v.ApplicationArn }).(pulumi.StringOutput)
}

// An identifier for an object in IAM Identity Center, such as a user or group
func (o ApplicationAssignmentOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAssignment) pulumi.StringOutput { return v.PrincipalId }).(pulumi.StringOutput)
}

// The entity type for which the assignment will be created.
func (o ApplicationAssignmentOutput) PrincipalType() ApplicationAssignmentPrincipalTypeOutput {
	return o.ApplyT(func(v *ApplicationAssignment) ApplicationAssignmentPrincipalTypeOutput { return v.PrincipalType }).(ApplicationAssignmentPrincipalTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAssignmentInput)(nil)).Elem(), &ApplicationAssignment{})
	pulumi.RegisterOutputType(ApplicationAssignmentOutput{})
}
