// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sso

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for Identity Center (SSO) Application
type Application struct {
	pulumi.CustomResourceState

	// The Application ARN that is returned upon creation of the Identity Center (SSO) Application
	ApplicationArn pulumi.StringOutput `pulumi:"applicationArn"`
	// The ARN of the application provider under which the operation will run
	ApplicationProviderArn pulumi.StringOutput `pulumi:"applicationProviderArn"`
	// The description information for the Identity Center (SSO) Application
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ARN of the instance of IAM Identity Center under which the operation will run
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// The name you want to assign to this Identity Center (SSO) Application
	Name pulumi.StringOutput `pulumi:"name"`
	// A structure that describes the options for the portal associated with an application
	PortalOptions ApplicationPortalOptionsConfigurationPtrOutput `pulumi:"portalOptions"`
	// Specifies whether the application is enabled or disabled
	Status ApplicationStatusPtrOutput `pulumi:"status"`
	Tags   aws.TagArrayOutput         `pulumi:"tags"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationProviderArn == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationProviderArn'")
	}
	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationProviderArn",
		"instanceArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws-native:sso:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws-native:sso:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
}

type ApplicationState struct {
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// The ARN of the application provider under which the operation will run
	ApplicationProviderArn string `pulumi:"applicationProviderArn"`
	// The description information for the Identity Center (SSO) Application
	Description *string `pulumi:"description"`
	// The ARN of the instance of IAM Identity Center under which the operation will run
	InstanceArn string `pulumi:"instanceArn"`
	// The name you want to assign to this Identity Center (SSO) Application
	Name *string `pulumi:"name"`
	// A structure that describes the options for the portal associated with an application
	PortalOptions *ApplicationPortalOptionsConfiguration `pulumi:"portalOptions"`
	// Specifies whether the application is enabled or disabled
	Status *ApplicationStatus `pulumi:"status"`
	Tags   []aws.Tag          `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// The ARN of the application provider under which the operation will run
	ApplicationProviderArn pulumi.StringInput
	// The description information for the Identity Center (SSO) Application
	Description pulumi.StringPtrInput
	// The ARN of the instance of IAM Identity Center under which the operation will run
	InstanceArn pulumi.StringInput
	// The name you want to assign to this Identity Center (SSO) Application
	Name pulumi.StringPtrInput
	// A structure that describes the options for the portal associated with an application
	PortalOptions ApplicationPortalOptionsConfigurationPtrInput
	// Specifies whether the application is enabled or disabled
	Status ApplicationStatusPtrInput
	Tags   aws.TagArrayInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

// The Application ARN that is returned upon creation of the Identity Center (SSO) Application
func (o ApplicationOutput) ApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationArn }).(pulumi.StringOutput)
}

// The ARN of the application provider under which the operation will run
func (o ApplicationOutput) ApplicationProviderArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationProviderArn }).(pulumi.StringOutput)
}

// The description information for the Identity Center (SSO) Application
func (o ApplicationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ARN of the instance of IAM Identity Center under which the operation will run
func (o ApplicationOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.InstanceArn }).(pulumi.StringOutput)
}

// The name you want to assign to this Identity Center (SSO) Application
func (o ApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A structure that describes the options for the portal associated with an application
func (o ApplicationOutput) PortalOptions() ApplicationPortalOptionsConfigurationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationPortalOptionsConfigurationPtrOutput { return v.PortalOptions }).(ApplicationPortalOptionsConfigurationPtrOutput)
}

// Specifies whether the application is enabled or disabled
func (o ApplicationOutput) Status() ApplicationStatusPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationStatusPtrOutput { return v.Status }).(ApplicationStatusPtrOutput)
}

func (o ApplicationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Application) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInput)(nil)).Elem(), &Application{})
	pulumi.RegisterOutputType(ApplicationOutput{})
}
