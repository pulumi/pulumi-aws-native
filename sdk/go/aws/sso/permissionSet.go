// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sso

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for SSO PermissionSet
type PermissionSet struct {
	pulumi.CustomResourceState

	// The permission set description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The inline policy to put in permission set.
	InlinePolicy pulumi.AnyOutput `pulumi:"inlinePolicy"`
	// The sso instance arn that the permission set is owned.
	InstanceArn     pulumi.StringOutput      `pulumi:"instanceArn"`
	ManagedPolicies pulumi.StringArrayOutput `pulumi:"managedPolicies"`
	// The name you want to assign to this permission set.
	Name pulumi.StringOutput `pulumi:"name"`
	// The permission set that the policy will be attached to
	PermissionSetArn pulumi.StringOutput `pulumi:"permissionSetArn"`
	// The relay state URL that redirect links to any service in the AWS Management Console.
	RelayStateType pulumi.StringPtrOutput `pulumi:"relayStateType"`
	// The length of time that a user can be signed in to an AWS account.
	SessionDuration pulumi.StringPtrOutput      `pulumi:"sessionDuration"`
	Tags            PermissionSetTagArrayOutput `pulumi:"tags"`
}

// NewPermissionSet registers a new resource with the given unique name, arguments, and options.
func NewPermissionSet(ctx *pulumi.Context,
	name string, args *PermissionSetArgs, opts ...pulumi.ResourceOption) (*PermissionSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource PermissionSet
	err := ctx.RegisterResource("aws-native:sso:PermissionSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPermissionSet gets an existing PermissionSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPermissionSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PermissionSetState, opts ...pulumi.ResourceOption) (*PermissionSet, error) {
	var resource PermissionSet
	err := ctx.ReadResource("aws-native:sso:PermissionSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PermissionSet resources.
type permissionSetState struct {
}

type PermissionSetState struct {
}

func (PermissionSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetState)(nil)).Elem()
}

type permissionSetArgs struct {
	// The permission set description.
	Description *string `pulumi:"description"`
	// The inline policy to put in permission set.
	InlinePolicy interface{} `pulumi:"inlinePolicy"`
	// The sso instance arn that the permission set is owned.
	InstanceArn     string   `pulumi:"instanceArn"`
	ManagedPolicies []string `pulumi:"managedPolicies"`
	// The name you want to assign to this permission set.
	Name string `pulumi:"name"`
	// The relay state URL that redirect links to any service in the AWS Management Console.
	RelayStateType *string `pulumi:"relayStateType"`
	// The length of time that a user can be signed in to an AWS account.
	SessionDuration *string            `pulumi:"sessionDuration"`
	Tags            []PermissionSetTag `pulumi:"tags"`
}

// The set of arguments for constructing a PermissionSet resource.
type PermissionSetArgs struct {
	// The permission set description.
	Description pulumi.StringPtrInput
	// The inline policy to put in permission set.
	InlinePolicy pulumi.Input
	// The sso instance arn that the permission set is owned.
	InstanceArn     pulumi.StringInput
	ManagedPolicies pulumi.StringArrayInput
	// The name you want to assign to this permission set.
	Name pulumi.StringInput
	// The relay state URL that redirect links to any service in the AWS Management Console.
	RelayStateType pulumi.StringPtrInput
	// The length of time that a user can be signed in to an AWS account.
	SessionDuration pulumi.StringPtrInput
	Tags            PermissionSetTagArrayInput
}

func (PermissionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetArgs)(nil)).Elem()
}

type PermissionSetInput interface {
	pulumi.Input

	ToPermissionSetOutput() PermissionSetOutput
	ToPermissionSetOutputWithContext(ctx context.Context) PermissionSetOutput
}

func (*PermissionSet) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSet)(nil))
}

func (i *PermissionSet) ToPermissionSetOutput() PermissionSetOutput {
	return i.ToPermissionSetOutputWithContext(context.Background())
}

func (i *PermissionSet) ToPermissionSetOutputWithContext(ctx context.Context) PermissionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetOutput)
}

type PermissionSetOutput struct{ *pulumi.OutputState }

func (PermissionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSet)(nil))
}

func (o PermissionSetOutput) ToPermissionSetOutput() PermissionSetOutput {
	return o
}

func (o PermissionSetOutput) ToPermissionSetOutputWithContext(ctx context.Context) PermissionSetOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetInput)(nil)).Elem(), &PermissionSet{})
	pulumi.RegisterOutputType(PermissionSetOutput{})
}
