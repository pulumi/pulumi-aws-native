// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sso

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A structure that describes the options for the access portal associated with an application
type ApplicationPortalOptionsConfiguration struct {
	// A structure that describes the sign-in options for the access portal
	SignInOptions *ApplicationSignInOptions `pulumi:"signInOptions"`
	// Indicates whether this application is visible in the access portal
	Visibility *ApplicationPortalOptionsConfigurationVisibility `pulumi:"visibility"`
}

// ApplicationPortalOptionsConfigurationInput is an input type that accepts ApplicationPortalOptionsConfigurationArgs and ApplicationPortalOptionsConfigurationOutput values.
// You can construct a concrete instance of `ApplicationPortalOptionsConfigurationInput` via:
//
//	ApplicationPortalOptionsConfigurationArgs{...}
type ApplicationPortalOptionsConfigurationInput interface {
	pulumi.Input

	ToApplicationPortalOptionsConfigurationOutput() ApplicationPortalOptionsConfigurationOutput
	ToApplicationPortalOptionsConfigurationOutputWithContext(context.Context) ApplicationPortalOptionsConfigurationOutput
}

// A structure that describes the options for the access portal associated with an application
type ApplicationPortalOptionsConfigurationArgs struct {
	// A structure that describes the sign-in options for the access portal
	SignInOptions ApplicationSignInOptionsPtrInput `pulumi:"signInOptions"`
	// Indicates whether this application is visible in the access portal
	Visibility ApplicationPortalOptionsConfigurationVisibilityPtrInput `pulumi:"visibility"`
}

func (ApplicationPortalOptionsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPortalOptionsConfiguration)(nil)).Elem()
}

func (i ApplicationPortalOptionsConfigurationArgs) ToApplicationPortalOptionsConfigurationOutput() ApplicationPortalOptionsConfigurationOutput {
	return i.ToApplicationPortalOptionsConfigurationOutputWithContext(context.Background())
}

func (i ApplicationPortalOptionsConfigurationArgs) ToApplicationPortalOptionsConfigurationOutputWithContext(ctx context.Context) ApplicationPortalOptionsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPortalOptionsConfigurationOutput)
}

func (i ApplicationPortalOptionsConfigurationArgs) ToApplicationPortalOptionsConfigurationPtrOutput() ApplicationPortalOptionsConfigurationPtrOutput {
	return i.ToApplicationPortalOptionsConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationPortalOptionsConfigurationArgs) ToApplicationPortalOptionsConfigurationPtrOutputWithContext(ctx context.Context) ApplicationPortalOptionsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPortalOptionsConfigurationOutput).ToApplicationPortalOptionsConfigurationPtrOutputWithContext(ctx)
}

// ApplicationPortalOptionsConfigurationPtrInput is an input type that accepts ApplicationPortalOptionsConfigurationArgs, ApplicationPortalOptionsConfigurationPtr and ApplicationPortalOptionsConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationPortalOptionsConfigurationPtrInput` via:
//
//	        ApplicationPortalOptionsConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationPortalOptionsConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationPortalOptionsConfigurationPtrOutput() ApplicationPortalOptionsConfigurationPtrOutput
	ToApplicationPortalOptionsConfigurationPtrOutputWithContext(context.Context) ApplicationPortalOptionsConfigurationPtrOutput
}

type applicationPortalOptionsConfigurationPtrType ApplicationPortalOptionsConfigurationArgs

func ApplicationPortalOptionsConfigurationPtr(v *ApplicationPortalOptionsConfigurationArgs) ApplicationPortalOptionsConfigurationPtrInput {
	return (*applicationPortalOptionsConfigurationPtrType)(v)
}

func (*applicationPortalOptionsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPortalOptionsConfiguration)(nil)).Elem()
}

func (i *applicationPortalOptionsConfigurationPtrType) ToApplicationPortalOptionsConfigurationPtrOutput() ApplicationPortalOptionsConfigurationPtrOutput {
	return i.ToApplicationPortalOptionsConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationPortalOptionsConfigurationPtrType) ToApplicationPortalOptionsConfigurationPtrOutputWithContext(ctx context.Context) ApplicationPortalOptionsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPortalOptionsConfigurationPtrOutput)
}

// A structure that describes the options for the access portal associated with an application
type ApplicationPortalOptionsConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationPortalOptionsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPortalOptionsConfiguration)(nil)).Elem()
}

func (o ApplicationPortalOptionsConfigurationOutput) ToApplicationPortalOptionsConfigurationOutput() ApplicationPortalOptionsConfigurationOutput {
	return o
}

func (o ApplicationPortalOptionsConfigurationOutput) ToApplicationPortalOptionsConfigurationOutputWithContext(ctx context.Context) ApplicationPortalOptionsConfigurationOutput {
	return o
}

func (o ApplicationPortalOptionsConfigurationOutput) ToApplicationPortalOptionsConfigurationPtrOutput() ApplicationPortalOptionsConfigurationPtrOutput {
	return o.ToApplicationPortalOptionsConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationPortalOptionsConfigurationOutput) ToApplicationPortalOptionsConfigurationPtrOutputWithContext(ctx context.Context) ApplicationPortalOptionsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationPortalOptionsConfiguration) *ApplicationPortalOptionsConfiguration {
		return &v
	}).(ApplicationPortalOptionsConfigurationPtrOutput)
}

// A structure that describes the sign-in options for the access portal
func (o ApplicationPortalOptionsConfigurationOutput) SignInOptions() ApplicationSignInOptionsPtrOutput {
	return o.ApplyT(func(v ApplicationPortalOptionsConfiguration) *ApplicationSignInOptions { return v.SignInOptions }).(ApplicationSignInOptionsPtrOutput)
}

// Indicates whether this application is visible in the access portal
func (o ApplicationPortalOptionsConfigurationOutput) Visibility() ApplicationPortalOptionsConfigurationVisibilityPtrOutput {
	return o.ApplyT(func(v ApplicationPortalOptionsConfiguration) *ApplicationPortalOptionsConfigurationVisibility {
		return v.Visibility
	}).(ApplicationPortalOptionsConfigurationVisibilityPtrOutput)
}

type ApplicationPortalOptionsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationPortalOptionsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPortalOptionsConfiguration)(nil)).Elem()
}

func (o ApplicationPortalOptionsConfigurationPtrOutput) ToApplicationPortalOptionsConfigurationPtrOutput() ApplicationPortalOptionsConfigurationPtrOutput {
	return o
}

func (o ApplicationPortalOptionsConfigurationPtrOutput) ToApplicationPortalOptionsConfigurationPtrOutputWithContext(ctx context.Context) ApplicationPortalOptionsConfigurationPtrOutput {
	return o
}

func (o ApplicationPortalOptionsConfigurationPtrOutput) Elem() ApplicationPortalOptionsConfigurationOutput {
	return o.ApplyT(func(v *ApplicationPortalOptionsConfiguration) ApplicationPortalOptionsConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationPortalOptionsConfiguration
		return ret
	}).(ApplicationPortalOptionsConfigurationOutput)
}

// A structure that describes the sign-in options for the access portal
func (o ApplicationPortalOptionsConfigurationPtrOutput) SignInOptions() ApplicationSignInOptionsPtrOutput {
	return o.ApplyT(func(v *ApplicationPortalOptionsConfiguration) *ApplicationSignInOptions {
		if v == nil {
			return nil
		}
		return v.SignInOptions
	}).(ApplicationSignInOptionsPtrOutput)
}

// Indicates whether this application is visible in the access portal
func (o ApplicationPortalOptionsConfigurationPtrOutput) Visibility() ApplicationPortalOptionsConfigurationVisibilityPtrOutput {
	return o.ApplyT(func(v *ApplicationPortalOptionsConfiguration) *ApplicationPortalOptionsConfigurationVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(ApplicationPortalOptionsConfigurationVisibilityPtrOutput)
}

// A structure that describes the sign-in options for an application portal
type ApplicationSignInOptions struct {
	// The URL that accepts authentication requests for an application, this is a required parameter if the Origin parameter is APPLICATION
	ApplicationUrl *string `pulumi:"applicationUrl"`
	// This determines how IAM Identity Center navigates the user to the target application
	Origin ApplicationSignInOptionsOrigin `pulumi:"origin"`
}

// ApplicationSignInOptionsInput is an input type that accepts ApplicationSignInOptionsArgs and ApplicationSignInOptionsOutput values.
// You can construct a concrete instance of `ApplicationSignInOptionsInput` via:
//
//	ApplicationSignInOptionsArgs{...}
type ApplicationSignInOptionsInput interface {
	pulumi.Input

	ToApplicationSignInOptionsOutput() ApplicationSignInOptionsOutput
	ToApplicationSignInOptionsOutputWithContext(context.Context) ApplicationSignInOptionsOutput
}

// A structure that describes the sign-in options for an application portal
type ApplicationSignInOptionsArgs struct {
	// The URL that accepts authentication requests for an application, this is a required parameter if the Origin parameter is APPLICATION
	ApplicationUrl pulumi.StringPtrInput `pulumi:"applicationUrl"`
	// This determines how IAM Identity Center navigates the user to the target application
	Origin ApplicationSignInOptionsOriginInput `pulumi:"origin"`
}

func (ApplicationSignInOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSignInOptions)(nil)).Elem()
}

func (i ApplicationSignInOptionsArgs) ToApplicationSignInOptionsOutput() ApplicationSignInOptionsOutput {
	return i.ToApplicationSignInOptionsOutputWithContext(context.Background())
}

func (i ApplicationSignInOptionsArgs) ToApplicationSignInOptionsOutputWithContext(ctx context.Context) ApplicationSignInOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSignInOptionsOutput)
}

func (i ApplicationSignInOptionsArgs) ToApplicationSignInOptionsPtrOutput() ApplicationSignInOptionsPtrOutput {
	return i.ToApplicationSignInOptionsPtrOutputWithContext(context.Background())
}

func (i ApplicationSignInOptionsArgs) ToApplicationSignInOptionsPtrOutputWithContext(ctx context.Context) ApplicationSignInOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSignInOptionsOutput).ToApplicationSignInOptionsPtrOutputWithContext(ctx)
}

// ApplicationSignInOptionsPtrInput is an input type that accepts ApplicationSignInOptionsArgs, ApplicationSignInOptionsPtr and ApplicationSignInOptionsPtrOutput values.
// You can construct a concrete instance of `ApplicationSignInOptionsPtrInput` via:
//
//	        ApplicationSignInOptionsArgs{...}
//
//	or:
//
//	        nil
type ApplicationSignInOptionsPtrInput interface {
	pulumi.Input

	ToApplicationSignInOptionsPtrOutput() ApplicationSignInOptionsPtrOutput
	ToApplicationSignInOptionsPtrOutputWithContext(context.Context) ApplicationSignInOptionsPtrOutput
}

type applicationSignInOptionsPtrType ApplicationSignInOptionsArgs

func ApplicationSignInOptionsPtr(v *ApplicationSignInOptionsArgs) ApplicationSignInOptionsPtrInput {
	return (*applicationSignInOptionsPtrType)(v)
}

func (*applicationSignInOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSignInOptions)(nil)).Elem()
}

func (i *applicationSignInOptionsPtrType) ToApplicationSignInOptionsPtrOutput() ApplicationSignInOptionsPtrOutput {
	return i.ToApplicationSignInOptionsPtrOutputWithContext(context.Background())
}

func (i *applicationSignInOptionsPtrType) ToApplicationSignInOptionsPtrOutputWithContext(ctx context.Context) ApplicationSignInOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSignInOptionsPtrOutput)
}

// A structure that describes the sign-in options for an application portal
type ApplicationSignInOptionsOutput struct{ *pulumi.OutputState }

func (ApplicationSignInOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSignInOptions)(nil)).Elem()
}

func (o ApplicationSignInOptionsOutput) ToApplicationSignInOptionsOutput() ApplicationSignInOptionsOutput {
	return o
}

func (o ApplicationSignInOptionsOutput) ToApplicationSignInOptionsOutputWithContext(ctx context.Context) ApplicationSignInOptionsOutput {
	return o
}

func (o ApplicationSignInOptionsOutput) ToApplicationSignInOptionsPtrOutput() ApplicationSignInOptionsPtrOutput {
	return o.ToApplicationSignInOptionsPtrOutputWithContext(context.Background())
}

func (o ApplicationSignInOptionsOutput) ToApplicationSignInOptionsPtrOutputWithContext(ctx context.Context) ApplicationSignInOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSignInOptions) *ApplicationSignInOptions {
		return &v
	}).(ApplicationSignInOptionsPtrOutput)
}

// The URL that accepts authentication requests for an application, this is a required parameter if the Origin parameter is APPLICATION
func (o ApplicationSignInOptionsOutput) ApplicationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSignInOptions) *string { return v.ApplicationUrl }).(pulumi.StringPtrOutput)
}

// This determines how IAM Identity Center navigates the user to the target application
func (o ApplicationSignInOptionsOutput) Origin() ApplicationSignInOptionsOriginOutput {
	return o.ApplyT(func(v ApplicationSignInOptions) ApplicationSignInOptionsOrigin { return v.Origin }).(ApplicationSignInOptionsOriginOutput)
}

type ApplicationSignInOptionsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSignInOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSignInOptions)(nil)).Elem()
}

func (o ApplicationSignInOptionsPtrOutput) ToApplicationSignInOptionsPtrOutput() ApplicationSignInOptionsPtrOutput {
	return o
}

func (o ApplicationSignInOptionsPtrOutput) ToApplicationSignInOptionsPtrOutputWithContext(ctx context.Context) ApplicationSignInOptionsPtrOutput {
	return o
}

func (o ApplicationSignInOptionsPtrOutput) Elem() ApplicationSignInOptionsOutput {
	return o.ApplyT(func(v *ApplicationSignInOptions) ApplicationSignInOptions {
		if v != nil {
			return *v
		}
		var ret ApplicationSignInOptions
		return ret
	}).(ApplicationSignInOptionsOutput)
}

// The URL that accepts authentication requests for an application, this is a required parameter if the Origin parameter is APPLICATION
func (o ApplicationSignInOptionsPtrOutput) ApplicationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSignInOptions) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationUrl
	}).(pulumi.StringPtrOutput)
}

// This determines how IAM Identity Center navigates the user to the target application
func (o ApplicationSignInOptionsPtrOutput) Origin() ApplicationSignInOptionsOriginPtrOutput {
	return o.ApplyT(func(v *ApplicationSignInOptions) *ApplicationSignInOptionsOrigin {
		if v == nil {
			return nil
		}
		return &v.Origin
	}).(ApplicationSignInOptionsOriginPtrOutput)
}

// The metadata that you apply to the Identity Center (SSO) Application to help you categorize and organize them.
type ApplicationTag struct {
	// The key for the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

type InstanceAccessControlAttributeConfigurationAccessControlAttribute struct {
	Key   string                                                                 `pulumi:"key"`
	Value InstanceAccessControlAttributeConfigurationAccessControlAttributeValue `pulumi:"value"`
}

// InstanceAccessControlAttributeConfigurationAccessControlAttributeInput is an input type that accepts InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs and InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput values.
// You can construct a concrete instance of `InstanceAccessControlAttributeConfigurationAccessControlAttributeInput` via:
//
//	InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs{...}
type InstanceAccessControlAttributeConfigurationAccessControlAttributeInput interface {
	pulumi.Input

	ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput
	ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutputWithContext(context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs struct {
	Key   pulumi.StringInput                                                          `pulumi:"key"`
	Value InstanceAccessControlAttributeConfigurationAccessControlAttributeValueInput `pulumi:"value"`
}

func (InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttribute)(nil)).Elem()
}

func (i InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput {
	return i.ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput)
}

// InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayInput is an input type that accepts InstanceAccessControlAttributeConfigurationAccessControlAttributeArray and InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput values.
// You can construct a concrete instance of `InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayInput` via:
//
//	InstanceAccessControlAttributeConfigurationAccessControlAttributeArray{ InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs{...} }
type InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayInput interface {
	pulumi.Input

	ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput
	ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutputWithContext(context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeArray []InstanceAccessControlAttributeConfigurationAccessControlAttributeInput

func (InstanceAccessControlAttributeConfigurationAccessControlAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAccessControlAttributeConfigurationAccessControlAttribute)(nil)).Elem()
}

func (i InstanceAccessControlAttributeConfigurationAccessControlAttributeArray) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput {
	return i.ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributeConfigurationAccessControlAttributeArray) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput)
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttribute)(nil)).Elem()
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAccessControlAttributeConfigurationAccessControlAttribute) string { return v.Key }).(pulumi.StringOutput)
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput) Value() InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput {
	return o.ApplyT(func(v InstanceAccessControlAttributeConfigurationAccessControlAttribute) InstanceAccessControlAttributeConfigurationAccessControlAttributeValue {
		return v.Value
	}).(InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput)
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAccessControlAttributeConfigurationAccessControlAttribute)(nil)).Elem()
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput) Index(i pulumi.IntInput) InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceAccessControlAttributeConfigurationAccessControlAttribute {
		return vs[0].([]InstanceAccessControlAttributeConfigurationAccessControlAttribute)[vs[1].(int)]
	}).(InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput)
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeValue struct {
	Source []string `pulumi:"source"`
}

// InstanceAccessControlAttributeConfigurationAccessControlAttributeValueInput is an input type that accepts InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs and InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput values.
// You can construct a concrete instance of `InstanceAccessControlAttributeConfigurationAccessControlAttributeValueInput` via:
//
//	InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs{...}
type InstanceAccessControlAttributeConfigurationAccessControlAttributeValueInput interface {
	pulumi.Input

	ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput
	ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutputWithContext(context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs struct {
	Source pulumi.StringArrayInput `pulumi:"source"`
}

func (InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttributeValue)(nil)).Elem()
}

func (i InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput {
	return i.ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput)
}

type InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttributeValue)(nil)).Elem()
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput() InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput) ToInstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput) Source() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceAccessControlAttributeConfigurationAccessControlAttributeValue) []string {
		return v.Source
	}).(pulumi.StringArrayOutput)
}

// The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
type InstanceAccessControlAttributeConfigurationProperties struct {
	AccessControlAttributes []InstanceAccessControlAttributeConfigurationAccessControlAttribute `pulumi:"accessControlAttributes"`
}

// InstanceAccessControlAttributeConfigurationPropertiesInput is an input type that accepts InstanceAccessControlAttributeConfigurationPropertiesArgs and InstanceAccessControlAttributeConfigurationPropertiesOutput values.
// You can construct a concrete instance of `InstanceAccessControlAttributeConfigurationPropertiesInput` via:
//
//	InstanceAccessControlAttributeConfigurationPropertiesArgs{...}
type InstanceAccessControlAttributeConfigurationPropertiesInput interface {
	pulumi.Input

	ToInstanceAccessControlAttributeConfigurationPropertiesOutput() InstanceAccessControlAttributeConfigurationPropertiesOutput
	ToInstanceAccessControlAttributeConfigurationPropertiesOutputWithContext(context.Context) InstanceAccessControlAttributeConfigurationPropertiesOutput
}

// The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
type InstanceAccessControlAttributeConfigurationPropertiesArgs struct {
	AccessControlAttributes InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayInput `pulumi:"accessControlAttributes"`
}

func (InstanceAccessControlAttributeConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributeConfigurationProperties)(nil)).Elem()
}

func (i InstanceAccessControlAttributeConfigurationPropertiesArgs) ToInstanceAccessControlAttributeConfigurationPropertiesOutput() InstanceAccessControlAttributeConfigurationPropertiesOutput {
	return i.ToInstanceAccessControlAttributeConfigurationPropertiesOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributeConfigurationPropertiesArgs) ToInstanceAccessControlAttributeConfigurationPropertiesOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributeConfigurationPropertiesOutput)
}

func (i InstanceAccessControlAttributeConfigurationPropertiesArgs) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutput() InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return i.ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributeConfigurationPropertiesArgs) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributeConfigurationPropertiesOutput).ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(ctx)
}

// InstanceAccessControlAttributeConfigurationPropertiesPtrInput is an input type that accepts InstanceAccessControlAttributeConfigurationPropertiesArgs, InstanceAccessControlAttributeConfigurationPropertiesPtr and InstanceAccessControlAttributeConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `InstanceAccessControlAttributeConfigurationPropertiesPtrInput` via:
//
//	        InstanceAccessControlAttributeConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type InstanceAccessControlAttributeConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutput() InstanceAccessControlAttributeConfigurationPropertiesPtrOutput
	ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(context.Context) InstanceAccessControlAttributeConfigurationPropertiesPtrOutput
}

type instanceAccessControlAttributeConfigurationPropertiesPtrType InstanceAccessControlAttributeConfigurationPropertiesArgs

func InstanceAccessControlAttributeConfigurationPropertiesPtr(v *InstanceAccessControlAttributeConfigurationPropertiesArgs) InstanceAccessControlAttributeConfigurationPropertiesPtrInput {
	return (*instanceAccessControlAttributeConfigurationPropertiesPtrType)(v)
}

func (*instanceAccessControlAttributeConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAccessControlAttributeConfigurationProperties)(nil)).Elem()
}

func (i *instanceAccessControlAttributeConfigurationPropertiesPtrType) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutput() InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return i.ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *instanceAccessControlAttributeConfigurationPropertiesPtrType) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributeConfigurationPropertiesPtrOutput)
}

// The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
type InstanceAccessControlAttributeConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributeConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributeConfigurationProperties)(nil)).Elem()
}

func (o InstanceAccessControlAttributeConfigurationPropertiesOutput) ToInstanceAccessControlAttributeConfigurationPropertiesOutput() InstanceAccessControlAttributeConfigurationPropertiesOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationPropertiesOutput) ToInstanceAccessControlAttributeConfigurationPropertiesOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationPropertiesOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationPropertiesOutput) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutput() InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return o.ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o InstanceAccessControlAttributeConfigurationPropertiesOutput) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAccessControlAttributeConfigurationProperties) *InstanceAccessControlAttributeConfigurationProperties {
		return &v
	}).(InstanceAccessControlAttributeConfigurationPropertiesPtrOutput)
}

func (o InstanceAccessControlAttributeConfigurationPropertiesOutput) AccessControlAttributes() InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput {
	return o.ApplyT(func(v InstanceAccessControlAttributeConfigurationProperties) []InstanceAccessControlAttributeConfigurationAccessControlAttribute {
		return v.AccessControlAttributes
	}).(InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput)
}

type InstanceAccessControlAttributeConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributeConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAccessControlAttributeConfigurationProperties)(nil)).Elem()
}

func (o InstanceAccessControlAttributeConfigurationPropertiesPtrOutput) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutput() InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationPropertiesPtrOutput) ToInstanceAccessControlAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) InstanceAccessControlAttributeConfigurationPropertiesPtrOutput {
	return o
}

func (o InstanceAccessControlAttributeConfigurationPropertiesPtrOutput) Elem() InstanceAccessControlAttributeConfigurationPropertiesOutput {
	return o.ApplyT(func(v *InstanceAccessControlAttributeConfigurationProperties) InstanceAccessControlAttributeConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret InstanceAccessControlAttributeConfigurationProperties
		return ret
	}).(InstanceAccessControlAttributeConfigurationPropertiesOutput)
}

func (o InstanceAccessControlAttributeConfigurationPropertiesPtrOutput) AccessControlAttributes() InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput {
	return o.ApplyT(func(v *InstanceAccessControlAttributeConfigurationProperties) []InstanceAccessControlAttributeConfigurationAccessControlAttribute {
		if v == nil {
			return nil
		}
		return v.AccessControlAttributes
	}).(InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput)
}

// The metadata that you apply to the Identity Center (SSO) Instance to help you categorize and organize them.
type InstanceTag struct {
	// The key for the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

type PermissionSetCustomerManagedPolicyReference struct {
	// The name of the IAM policy that you have configured in each account where you want to deploy your permission set.
	Name string `pulumi:"name"`
	// The path to the IAM policy that you have configured in each account where you want to deploy your permission set. The default is `/` . For more information, see [Friendly names and paths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) in the *IAM User Guide* .
	Path *string `pulumi:"path"`
}

// PermissionSetCustomerManagedPolicyReferenceInput is an input type that accepts PermissionSetCustomerManagedPolicyReferenceArgs and PermissionSetCustomerManagedPolicyReferenceOutput values.
// You can construct a concrete instance of `PermissionSetCustomerManagedPolicyReferenceInput` via:
//
//	PermissionSetCustomerManagedPolicyReferenceArgs{...}
type PermissionSetCustomerManagedPolicyReferenceInput interface {
	pulumi.Input

	ToPermissionSetCustomerManagedPolicyReferenceOutput() PermissionSetCustomerManagedPolicyReferenceOutput
	ToPermissionSetCustomerManagedPolicyReferenceOutputWithContext(context.Context) PermissionSetCustomerManagedPolicyReferenceOutput
}

type PermissionSetCustomerManagedPolicyReferenceArgs struct {
	// The name of the IAM policy that you have configured in each account where you want to deploy your permission set.
	Name pulumi.StringInput `pulumi:"name"`
	// The path to the IAM policy that you have configured in each account where you want to deploy your permission set. The default is `/` . For more information, see [Friendly names and paths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) in the *IAM User Guide* .
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (PermissionSetCustomerManagedPolicyReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSetCustomerManagedPolicyReference)(nil)).Elem()
}

func (i PermissionSetCustomerManagedPolicyReferenceArgs) ToPermissionSetCustomerManagedPolicyReferenceOutput() PermissionSetCustomerManagedPolicyReferenceOutput {
	return i.ToPermissionSetCustomerManagedPolicyReferenceOutputWithContext(context.Background())
}

func (i PermissionSetCustomerManagedPolicyReferenceArgs) ToPermissionSetCustomerManagedPolicyReferenceOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetCustomerManagedPolicyReferenceOutput)
}

func (i PermissionSetCustomerManagedPolicyReferenceArgs) ToPermissionSetCustomerManagedPolicyReferencePtrOutput() PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return i.ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(context.Background())
}

func (i PermissionSetCustomerManagedPolicyReferenceArgs) ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetCustomerManagedPolicyReferenceOutput).ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(ctx)
}

// PermissionSetCustomerManagedPolicyReferencePtrInput is an input type that accepts PermissionSetCustomerManagedPolicyReferenceArgs, PermissionSetCustomerManagedPolicyReferencePtr and PermissionSetCustomerManagedPolicyReferencePtrOutput values.
// You can construct a concrete instance of `PermissionSetCustomerManagedPolicyReferencePtrInput` via:
//
//	        PermissionSetCustomerManagedPolicyReferenceArgs{...}
//
//	or:
//
//	        nil
type PermissionSetCustomerManagedPolicyReferencePtrInput interface {
	pulumi.Input

	ToPermissionSetCustomerManagedPolicyReferencePtrOutput() PermissionSetCustomerManagedPolicyReferencePtrOutput
	ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(context.Context) PermissionSetCustomerManagedPolicyReferencePtrOutput
}

type permissionSetCustomerManagedPolicyReferencePtrType PermissionSetCustomerManagedPolicyReferenceArgs

func PermissionSetCustomerManagedPolicyReferencePtr(v *PermissionSetCustomerManagedPolicyReferenceArgs) PermissionSetCustomerManagedPolicyReferencePtrInput {
	return (*permissionSetCustomerManagedPolicyReferencePtrType)(v)
}

func (*permissionSetCustomerManagedPolicyReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetCustomerManagedPolicyReference)(nil)).Elem()
}

func (i *permissionSetCustomerManagedPolicyReferencePtrType) ToPermissionSetCustomerManagedPolicyReferencePtrOutput() PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return i.ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(context.Background())
}

func (i *permissionSetCustomerManagedPolicyReferencePtrType) ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetCustomerManagedPolicyReferencePtrOutput)
}

// PermissionSetCustomerManagedPolicyReferenceArrayInput is an input type that accepts PermissionSetCustomerManagedPolicyReferenceArray and PermissionSetCustomerManagedPolicyReferenceArrayOutput values.
// You can construct a concrete instance of `PermissionSetCustomerManagedPolicyReferenceArrayInput` via:
//
//	PermissionSetCustomerManagedPolicyReferenceArray{ PermissionSetCustomerManagedPolicyReferenceArgs{...} }
type PermissionSetCustomerManagedPolicyReferenceArrayInput interface {
	pulumi.Input

	ToPermissionSetCustomerManagedPolicyReferenceArrayOutput() PermissionSetCustomerManagedPolicyReferenceArrayOutput
	ToPermissionSetCustomerManagedPolicyReferenceArrayOutputWithContext(context.Context) PermissionSetCustomerManagedPolicyReferenceArrayOutput
}

type PermissionSetCustomerManagedPolicyReferenceArray []PermissionSetCustomerManagedPolicyReferenceInput

func (PermissionSetCustomerManagedPolicyReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionSetCustomerManagedPolicyReference)(nil)).Elem()
}

func (i PermissionSetCustomerManagedPolicyReferenceArray) ToPermissionSetCustomerManagedPolicyReferenceArrayOutput() PermissionSetCustomerManagedPolicyReferenceArrayOutput {
	return i.ToPermissionSetCustomerManagedPolicyReferenceArrayOutputWithContext(context.Background())
}

func (i PermissionSetCustomerManagedPolicyReferenceArray) ToPermissionSetCustomerManagedPolicyReferenceArrayOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetCustomerManagedPolicyReferenceArrayOutput)
}

type PermissionSetCustomerManagedPolicyReferenceOutput struct{ *pulumi.OutputState }

func (PermissionSetCustomerManagedPolicyReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSetCustomerManagedPolicyReference)(nil)).Elem()
}

func (o PermissionSetCustomerManagedPolicyReferenceOutput) ToPermissionSetCustomerManagedPolicyReferenceOutput() PermissionSetCustomerManagedPolicyReferenceOutput {
	return o
}

func (o PermissionSetCustomerManagedPolicyReferenceOutput) ToPermissionSetCustomerManagedPolicyReferenceOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferenceOutput {
	return o
}

func (o PermissionSetCustomerManagedPolicyReferenceOutput) ToPermissionSetCustomerManagedPolicyReferencePtrOutput() PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return o.ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(context.Background())
}

func (o PermissionSetCustomerManagedPolicyReferenceOutput) ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionSetCustomerManagedPolicyReference) *PermissionSetCustomerManagedPolicyReference {
		return &v
	}).(PermissionSetCustomerManagedPolicyReferencePtrOutput)
}

// The name of the IAM policy that you have configured in each account where you want to deploy your permission set.
func (o PermissionSetCustomerManagedPolicyReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionSetCustomerManagedPolicyReference) string { return v.Name }).(pulumi.StringOutput)
}

// The path to the IAM policy that you have configured in each account where you want to deploy your permission set. The default is `/` . For more information, see [Friendly names and paths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) in the *IAM User Guide* .
func (o PermissionSetCustomerManagedPolicyReferenceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionSetCustomerManagedPolicyReference) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type PermissionSetCustomerManagedPolicyReferencePtrOutput struct{ *pulumi.OutputState }

func (PermissionSetCustomerManagedPolicyReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetCustomerManagedPolicyReference)(nil)).Elem()
}

func (o PermissionSetCustomerManagedPolicyReferencePtrOutput) ToPermissionSetCustomerManagedPolicyReferencePtrOutput() PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return o
}

func (o PermissionSetCustomerManagedPolicyReferencePtrOutput) ToPermissionSetCustomerManagedPolicyReferencePtrOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return o
}

func (o PermissionSetCustomerManagedPolicyReferencePtrOutput) Elem() PermissionSetCustomerManagedPolicyReferenceOutput {
	return o.ApplyT(func(v *PermissionSetCustomerManagedPolicyReference) PermissionSetCustomerManagedPolicyReference {
		if v != nil {
			return *v
		}
		var ret PermissionSetCustomerManagedPolicyReference
		return ret
	}).(PermissionSetCustomerManagedPolicyReferenceOutput)
}

// The name of the IAM policy that you have configured in each account where you want to deploy your permission set.
func (o PermissionSetCustomerManagedPolicyReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionSetCustomerManagedPolicyReference) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The path to the IAM policy that you have configured in each account where you want to deploy your permission set. The default is `/` . For more information, see [Friendly names and paths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) in the *IAM User Guide* .
func (o PermissionSetCustomerManagedPolicyReferencePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionSetCustomerManagedPolicyReference) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type PermissionSetCustomerManagedPolicyReferenceArrayOutput struct{ *pulumi.OutputState }

func (PermissionSetCustomerManagedPolicyReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionSetCustomerManagedPolicyReference)(nil)).Elem()
}

func (o PermissionSetCustomerManagedPolicyReferenceArrayOutput) ToPermissionSetCustomerManagedPolicyReferenceArrayOutput() PermissionSetCustomerManagedPolicyReferenceArrayOutput {
	return o
}

func (o PermissionSetCustomerManagedPolicyReferenceArrayOutput) ToPermissionSetCustomerManagedPolicyReferenceArrayOutputWithContext(ctx context.Context) PermissionSetCustomerManagedPolicyReferenceArrayOutput {
	return o
}

func (o PermissionSetCustomerManagedPolicyReferenceArrayOutput) Index(i pulumi.IntInput) PermissionSetCustomerManagedPolicyReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionSetCustomerManagedPolicyReference {
		return vs[0].([]PermissionSetCustomerManagedPolicyReference)[vs[1].(int)]
	}).(PermissionSetCustomerManagedPolicyReferenceOutput)
}

type PermissionSetPermissionsBoundary struct {
	// Specifies the name and path of a customer managed policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your permission set.
	CustomerManagedPolicyReference *PermissionSetCustomerManagedPolicyReference `pulumi:"customerManagedPolicyReference"`
	// The AWS managed policy ARN that you want to attach to a permission set as a permissions boundary.
	ManagedPolicyArn *string `pulumi:"managedPolicyArn"`
}

// PermissionSetPermissionsBoundaryInput is an input type that accepts PermissionSetPermissionsBoundaryArgs and PermissionSetPermissionsBoundaryOutput values.
// You can construct a concrete instance of `PermissionSetPermissionsBoundaryInput` via:
//
//	PermissionSetPermissionsBoundaryArgs{...}
type PermissionSetPermissionsBoundaryInput interface {
	pulumi.Input

	ToPermissionSetPermissionsBoundaryOutput() PermissionSetPermissionsBoundaryOutput
	ToPermissionSetPermissionsBoundaryOutputWithContext(context.Context) PermissionSetPermissionsBoundaryOutput
}

type PermissionSetPermissionsBoundaryArgs struct {
	// Specifies the name and path of a customer managed policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your permission set.
	CustomerManagedPolicyReference PermissionSetCustomerManagedPolicyReferencePtrInput `pulumi:"customerManagedPolicyReference"`
	// The AWS managed policy ARN that you want to attach to a permission set as a permissions boundary.
	ManagedPolicyArn pulumi.StringPtrInput `pulumi:"managedPolicyArn"`
}

func (PermissionSetPermissionsBoundaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSetPermissionsBoundary)(nil)).Elem()
}

func (i PermissionSetPermissionsBoundaryArgs) ToPermissionSetPermissionsBoundaryOutput() PermissionSetPermissionsBoundaryOutput {
	return i.ToPermissionSetPermissionsBoundaryOutputWithContext(context.Background())
}

func (i PermissionSetPermissionsBoundaryArgs) ToPermissionSetPermissionsBoundaryOutputWithContext(ctx context.Context) PermissionSetPermissionsBoundaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetPermissionsBoundaryOutput)
}

func (i PermissionSetPermissionsBoundaryArgs) ToPermissionSetPermissionsBoundaryPtrOutput() PermissionSetPermissionsBoundaryPtrOutput {
	return i.ToPermissionSetPermissionsBoundaryPtrOutputWithContext(context.Background())
}

func (i PermissionSetPermissionsBoundaryArgs) ToPermissionSetPermissionsBoundaryPtrOutputWithContext(ctx context.Context) PermissionSetPermissionsBoundaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetPermissionsBoundaryOutput).ToPermissionSetPermissionsBoundaryPtrOutputWithContext(ctx)
}

// PermissionSetPermissionsBoundaryPtrInput is an input type that accepts PermissionSetPermissionsBoundaryArgs, PermissionSetPermissionsBoundaryPtr and PermissionSetPermissionsBoundaryPtrOutput values.
// You can construct a concrete instance of `PermissionSetPermissionsBoundaryPtrInput` via:
//
//	        PermissionSetPermissionsBoundaryArgs{...}
//
//	or:
//
//	        nil
type PermissionSetPermissionsBoundaryPtrInput interface {
	pulumi.Input

	ToPermissionSetPermissionsBoundaryPtrOutput() PermissionSetPermissionsBoundaryPtrOutput
	ToPermissionSetPermissionsBoundaryPtrOutputWithContext(context.Context) PermissionSetPermissionsBoundaryPtrOutput
}

type permissionSetPermissionsBoundaryPtrType PermissionSetPermissionsBoundaryArgs

func PermissionSetPermissionsBoundaryPtr(v *PermissionSetPermissionsBoundaryArgs) PermissionSetPermissionsBoundaryPtrInput {
	return (*permissionSetPermissionsBoundaryPtrType)(v)
}

func (*permissionSetPermissionsBoundaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetPermissionsBoundary)(nil)).Elem()
}

func (i *permissionSetPermissionsBoundaryPtrType) ToPermissionSetPermissionsBoundaryPtrOutput() PermissionSetPermissionsBoundaryPtrOutput {
	return i.ToPermissionSetPermissionsBoundaryPtrOutputWithContext(context.Background())
}

func (i *permissionSetPermissionsBoundaryPtrType) ToPermissionSetPermissionsBoundaryPtrOutputWithContext(ctx context.Context) PermissionSetPermissionsBoundaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetPermissionsBoundaryPtrOutput)
}

type PermissionSetPermissionsBoundaryOutput struct{ *pulumi.OutputState }

func (PermissionSetPermissionsBoundaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSetPermissionsBoundary)(nil)).Elem()
}

func (o PermissionSetPermissionsBoundaryOutput) ToPermissionSetPermissionsBoundaryOutput() PermissionSetPermissionsBoundaryOutput {
	return o
}

func (o PermissionSetPermissionsBoundaryOutput) ToPermissionSetPermissionsBoundaryOutputWithContext(ctx context.Context) PermissionSetPermissionsBoundaryOutput {
	return o
}

func (o PermissionSetPermissionsBoundaryOutput) ToPermissionSetPermissionsBoundaryPtrOutput() PermissionSetPermissionsBoundaryPtrOutput {
	return o.ToPermissionSetPermissionsBoundaryPtrOutputWithContext(context.Background())
}

func (o PermissionSetPermissionsBoundaryOutput) ToPermissionSetPermissionsBoundaryPtrOutputWithContext(ctx context.Context) PermissionSetPermissionsBoundaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionSetPermissionsBoundary) *PermissionSetPermissionsBoundary {
		return &v
	}).(PermissionSetPermissionsBoundaryPtrOutput)
}

// Specifies the name and path of a customer managed policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your permission set.
func (o PermissionSetPermissionsBoundaryOutput) CustomerManagedPolicyReference() PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return o.ApplyT(func(v PermissionSetPermissionsBoundary) *PermissionSetCustomerManagedPolicyReference {
		return v.CustomerManagedPolicyReference
	}).(PermissionSetCustomerManagedPolicyReferencePtrOutput)
}

// The AWS managed policy ARN that you want to attach to a permission set as a permissions boundary.
func (o PermissionSetPermissionsBoundaryOutput) ManagedPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionSetPermissionsBoundary) *string { return v.ManagedPolicyArn }).(pulumi.StringPtrOutput)
}

type PermissionSetPermissionsBoundaryPtrOutput struct{ *pulumi.OutputState }

func (PermissionSetPermissionsBoundaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetPermissionsBoundary)(nil)).Elem()
}

func (o PermissionSetPermissionsBoundaryPtrOutput) ToPermissionSetPermissionsBoundaryPtrOutput() PermissionSetPermissionsBoundaryPtrOutput {
	return o
}

func (o PermissionSetPermissionsBoundaryPtrOutput) ToPermissionSetPermissionsBoundaryPtrOutputWithContext(ctx context.Context) PermissionSetPermissionsBoundaryPtrOutput {
	return o
}

func (o PermissionSetPermissionsBoundaryPtrOutput) Elem() PermissionSetPermissionsBoundaryOutput {
	return o.ApplyT(func(v *PermissionSetPermissionsBoundary) PermissionSetPermissionsBoundary {
		if v != nil {
			return *v
		}
		var ret PermissionSetPermissionsBoundary
		return ret
	}).(PermissionSetPermissionsBoundaryOutput)
}

// Specifies the name and path of a customer managed policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your permission set.
func (o PermissionSetPermissionsBoundaryPtrOutput) CustomerManagedPolicyReference() PermissionSetCustomerManagedPolicyReferencePtrOutput {
	return o.ApplyT(func(v *PermissionSetPermissionsBoundary) *PermissionSetCustomerManagedPolicyReference {
		if v == nil {
			return nil
		}
		return v.CustomerManagedPolicyReference
	}).(PermissionSetCustomerManagedPolicyReferencePtrOutput)
}

// The AWS managed policy ARN that you want to attach to a permission set as a permissions boundary.
func (o PermissionSetPermissionsBoundaryPtrOutput) ManagedPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionSetPermissionsBoundary) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPolicyArn
	}).(pulumi.StringPtrOutput)
}

// The metadata that you apply to the permission set to help you categorize and organize them.
type PermissionSetTag struct {
	// The key for the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPortalOptionsConfigurationInput)(nil)).Elem(), ApplicationPortalOptionsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPortalOptionsConfigurationPtrInput)(nil)).Elem(), ApplicationPortalOptionsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSignInOptionsInput)(nil)).Elem(), ApplicationSignInOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSignInOptionsPtrInput)(nil)).Elem(), ApplicationSignInOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttributeInput)(nil)).Elem(), InstanceAccessControlAttributeConfigurationAccessControlAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayInput)(nil)).Elem(), InstanceAccessControlAttributeConfigurationAccessControlAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccessControlAttributeConfigurationAccessControlAttributeValueInput)(nil)).Elem(), InstanceAccessControlAttributeConfigurationAccessControlAttributeValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccessControlAttributeConfigurationPropertiesInput)(nil)).Elem(), InstanceAccessControlAttributeConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAccessControlAttributeConfigurationPropertiesPtrInput)(nil)).Elem(), InstanceAccessControlAttributeConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetCustomerManagedPolicyReferenceInput)(nil)).Elem(), PermissionSetCustomerManagedPolicyReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetCustomerManagedPolicyReferencePtrInput)(nil)).Elem(), PermissionSetCustomerManagedPolicyReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetCustomerManagedPolicyReferenceArrayInput)(nil)).Elem(), PermissionSetCustomerManagedPolicyReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetPermissionsBoundaryInput)(nil)).Elem(), PermissionSetPermissionsBoundaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetPermissionsBoundaryPtrInput)(nil)).Elem(), PermissionSetPermissionsBoundaryArgs{})
	pulumi.RegisterOutputType(ApplicationPortalOptionsConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationPortalOptionsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSignInOptionsOutput{})
	pulumi.RegisterOutputType(ApplicationSignInOptionsPtrOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributeConfigurationAccessControlAttributeOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributeConfigurationAccessControlAttributeArrayOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributeConfigurationAccessControlAttributeValueOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributeConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributeConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PermissionSetCustomerManagedPolicyReferenceOutput{})
	pulumi.RegisterOutputType(PermissionSetCustomerManagedPolicyReferencePtrOutput{})
	pulumi.RegisterOutputType(PermissionSetCustomerManagedPolicyReferenceArrayOutput{})
	pulumi.RegisterOutputType(PermissionSetPermissionsBoundaryOutput{})
	pulumi.RegisterOutputType(PermissionSetPermissionsBoundaryPtrOutput{})
}
