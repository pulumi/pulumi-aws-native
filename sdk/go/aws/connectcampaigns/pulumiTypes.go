// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connectcampaigns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The possible types of dialer config parameters
type CampaignDialerConfig struct {
}

// CampaignDialerConfigInput is an input type that accepts CampaignDialerConfigArgs and CampaignDialerConfigOutput values.
// You can construct a concrete instance of `CampaignDialerConfigInput` via:
//
//          CampaignDialerConfigArgs{...}
type CampaignDialerConfigInput interface {
	pulumi.Input

	ToCampaignDialerConfigOutput() CampaignDialerConfigOutput
	ToCampaignDialerConfigOutputWithContext(context.Context) CampaignDialerConfigOutput
}

// The possible types of dialer config parameters
type CampaignDialerConfigArgs struct {
}

func (CampaignDialerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CampaignDialerConfig)(nil)).Elem()
}

func (i CampaignDialerConfigArgs) ToCampaignDialerConfigOutput() CampaignDialerConfigOutput {
	return i.ToCampaignDialerConfigOutputWithContext(context.Background())
}

func (i CampaignDialerConfigArgs) ToCampaignDialerConfigOutputWithContext(ctx context.Context) CampaignDialerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CampaignDialerConfigOutput)
}

// The possible types of dialer config parameters
type CampaignDialerConfigOutput struct{ *pulumi.OutputState }

func (CampaignDialerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CampaignDialerConfig)(nil)).Elem()
}

func (o CampaignDialerConfigOutput) ToCampaignDialerConfigOutput() CampaignDialerConfigOutput {
	return o
}

func (o CampaignDialerConfigOutput) ToCampaignDialerConfigOutputWithContext(ctx context.Context) CampaignDialerConfigOutput {
	return o
}

type CampaignDialerConfigPtrOutput struct{ *pulumi.OutputState }

func (CampaignDialerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CampaignDialerConfig)(nil)).Elem()
}

func (o CampaignDialerConfigPtrOutput) ToCampaignDialerConfigPtrOutput() CampaignDialerConfigPtrOutput {
	return o
}

func (o CampaignDialerConfigPtrOutput) ToCampaignDialerConfigPtrOutputWithContext(ctx context.Context) CampaignDialerConfigPtrOutput {
	return o
}

func (o CampaignDialerConfigPtrOutput) Elem() CampaignDialerConfigOutput {
	return o.ApplyT(func(v *CampaignDialerConfig) CampaignDialerConfig {
		if v != nil {
			return *v
		}
		var ret CampaignDialerConfig
		return ret
	}).(CampaignDialerConfigOutput)
}

// The configuration used for outbound calls.
type CampaignOutboundCallConfig struct {
	// The identifier of the contact flow for the outbound call.
	ConnectContactFlowArn string `pulumi:"connectContactFlowArn"`
	// The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
	ConnectQueueArn string `pulumi:"connectQueueArn"`
	// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
	ConnectSourcePhoneNumber *string `pulumi:"connectSourcePhoneNumber"`
}

// CampaignOutboundCallConfigInput is an input type that accepts CampaignOutboundCallConfigArgs and CampaignOutboundCallConfigOutput values.
// You can construct a concrete instance of `CampaignOutboundCallConfigInput` via:
//
//          CampaignOutboundCallConfigArgs{...}
type CampaignOutboundCallConfigInput interface {
	pulumi.Input

	ToCampaignOutboundCallConfigOutput() CampaignOutboundCallConfigOutput
	ToCampaignOutboundCallConfigOutputWithContext(context.Context) CampaignOutboundCallConfigOutput
}

// The configuration used for outbound calls.
type CampaignOutboundCallConfigArgs struct {
	// The identifier of the contact flow for the outbound call.
	ConnectContactFlowArn pulumi.StringInput `pulumi:"connectContactFlowArn"`
	// The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
	ConnectQueueArn pulumi.StringInput `pulumi:"connectQueueArn"`
	// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
	ConnectSourcePhoneNumber pulumi.StringPtrInput `pulumi:"connectSourcePhoneNumber"`
}

func (CampaignOutboundCallConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CampaignOutboundCallConfig)(nil)).Elem()
}

func (i CampaignOutboundCallConfigArgs) ToCampaignOutboundCallConfigOutput() CampaignOutboundCallConfigOutput {
	return i.ToCampaignOutboundCallConfigOutputWithContext(context.Background())
}

func (i CampaignOutboundCallConfigArgs) ToCampaignOutboundCallConfigOutputWithContext(ctx context.Context) CampaignOutboundCallConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CampaignOutboundCallConfigOutput)
}

// The configuration used for outbound calls.
type CampaignOutboundCallConfigOutput struct{ *pulumi.OutputState }

func (CampaignOutboundCallConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CampaignOutboundCallConfig)(nil)).Elem()
}

func (o CampaignOutboundCallConfigOutput) ToCampaignOutboundCallConfigOutput() CampaignOutboundCallConfigOutput {
	return o
}

func (o CampaignOutboundCallConfigOutput) ToCampaignOutboundCallConfigOutputWithContext(ctx context.Context) CampaignOutboundCallConfigOutput {
	return o
}

// The identifier of the contact flow for the outbound call.
func (o CampaignOutboundCallConfigOutput) ConnectContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v CampaignOutboundCallConfig) string { return v.ConnectContactFlowArn }).(pulumi.StringOutput)
}

// The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
func (o CampaignOutboundCallConfigOutput) ConnectQueueArn() pulumi.StringOutput {
	return o.ApplyT(func(v CampaignOutboundCallConfig) string { return v.ConnectQueueArn }).(pulumi.StringOutput)
}

// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
func (o CampaignOutboundCallConfigOutput) ConnectSourcePhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CampaignOutboundCallConfig) *string { return v.ConnectSourcePhoneNumber }).(pulumi.StringPtrOutput)
}

type CampaignOutboundCallConfigPtrOutput struct{ *pulumi.OutputState }

func (CampaignOutboundCallConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CampaignOutboundCallConfig)(nil)).Elem()
}

func (o CampaignOutboundCallConfigPtrOutput) ToCampaignOutboundCallConfigPtrOutput() CampaignOutboundCallConfigPtrOutput {
	return o
}

func (o CampaignOutboundCallConfigPtrOutput) ToCampaignOutboundCallConfigPtrOutputWithContext(ctx context.Context) CampaignOutboundCallConfigPtrOutput {
	return o
}

func (o CampaignOutboundCallConfigPtrOutput) Elem() CampaignOutboundCallConfigOutput {
	return o.ApplyT(func(v *CampaignOutboundCallConfig) CampaignOutboundCallConfig {
		if v != nil {
			return *v
		}
		var ret CampaignOutboundCallConfig
		return ret
	}).(CampaignOutboundCallConfigOutput)
}

// The identifier of the contact flow for the outbound call.
func (o CampaignOutboundCallConfigPtrOutput) ConnectContactFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CampaignOutboundCallConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectContactFlowArn
	}).(pulumi.StringPtrOutput)
}

// The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
func (o CampaignOutboundCallConfigPtrOutput) ConnectQueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CampaignOutboundCallConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectQueueArn
	}).(pulumi.StringPtrOutput)
}

// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
func (o CampaignOutboundCallConfigPtrOutput) ConnectSourcePhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CampaignOutboundCallConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectSourcePhoneNumber
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type CampaignTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Value string `pulumi:"value"`
}

// CampaignTagInput is an input type that accepts CampaignTagArgs and CampaignTagOutput values.
// You can construct a concrete instance of `CampaignTagInput` via:
//
//          CampaignTagArgs{...}
type CampaignTagInput interface {
	pulumi.Input

	ToCampaignTagOutput() CampaignTagOutput
	ToCampaignTagOutputWithContext(context.Context) CampaignTagOutput
}

// A key-value pair to associate with a resource.
type CampaignTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CampaignTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CampaignTag)(nil)).Elem()
}

func (i CampaignTagArgs) ToCampaignTagOutput() CampaignTagOutput {
	return i.ToCampaignTagOutputWithContext(context.Background())
}

func (i CampaignTagArgs) ToCampaignTagOutputWithContext(ctx context.Context) CampaignTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CampaignTagOutput)
}

// CampaignTagArrayInput is an input type that accepts CampaignTagArray and CampaignTagArrayOutput values.
// You can construct a concrete instance of `CampaignTagArrayInput` via:
//
//          CampaignTagArray{ CampaignTagArgs{...} }
type CampaignTagArrayInput interface {
	pulumi.Input

	ToCampaignTagArrayOutput() CampaignTagArrayOutput
	ToCampaignTagArrayOutputWithContext(context.Context) CampaignTagArrayOutput
}

type CampaignTagArray []CampaignTagInput

func (CampaignTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CampaignTag)(nil)).Elem()
}

func (i CampaignTagArray) ToCampaignTagArrayOutput() CampaignTagArrayOutput {
	return i.ToCampaignTagArrayOutputWithContext(context.Background())
}

func (i CampaignTagArray) ToCampaignTagArrayOutputWithContext(ctx context.Context) CampaignTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CampaignTagArrayOutput)
}

// A key-value pair to associate with a resource.
type CampaignTagOutput struct{ *pulumi.OutputState }

func (CampaignTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CampaignTag)(nil)).Elem()
}

func (o CampaignTagOutput) ToCampaignTagOutput() CampaignTagOutput {
	return o
}

func (o CampaignTagOutput) ToCampaignTagOutputWithContext(ctx context.Context) CampaignTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CampaignTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CampaignTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that's 1 to 256 characters in length.
func (o CampaignTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CampaignTag) string { return v.Value }).(pulumi.StringOutput)
}

type CampaignTagArrayOutput struct{ *pulumi.OutputState }

func (CampaignTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CampaignTag)(nil)).Elem()
}

func (o CampaignTagArrayOutput) ToCampaignTagArrayOutput() CampaignTagArrayOutput {
	return o
}

func (o CampaignTagArrayOutput) ToCampaignTagArrayOutputWithContext(ctx context.Context) CampaignTagArrayOutput {
	return o
}

func (o CampaignTagArrayOutput) Index(i pulumi.IntInput) CampaignTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CampaignTag {
		return vs[0].([]CampaignTag)[vs[1].(int)]
	}).(CampaignTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CampaignDialerConfigInput)(nil)).Elem(), CampaignDialerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CampaignOutboundCallConfigInput)(nil)).Elem(), CampaignOutboundCallConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CampaignTagInput)(nil)).Elem(), CampaignTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CampaignTagArrayInput)(nil)).Elem(), CampaignTagArray{})
	pulumi.RegisterOutputType(CampaignDialerConfigOutput{})
	pulumi.RegisterOutputType(CampaignDialerConfigPtrOutput{})
	pulumi.RegisterOutputType(CampaignOutboundCallConfigOutput{})
	pulumi.RegisterOutputType(CampaignOutboundCallConfigPtrOutput{})
	pulumi.RegisterOutputType(CampaignTagOutput{})
	pulumi.RegisterOutputType(CampaignTagArrayOutput{})
}
