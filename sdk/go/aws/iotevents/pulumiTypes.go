// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotevents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The actions to be performed.
type DetectorModelAction struct {
	ClearTimer      *DetectorModelClearTimer      `pulumi:"clearTimer"`
	DynamoDB        *DetectorModelDynamoDB        `pulumi:"dynamoDB"`
	DynamoDBv2      *DetectorModelDynamoDBv2      `pulumi:"dynamoDBv2"`
	Firehose        *DetectorModelFirehose        `pulumi:"firehose"`
	IotEvents       *DetectorModelIotEvents       `pulumi:"iotEvents"`
	IotSiteWise     *DetectorModelIotSiteWise     `pulumi:"iotSiteWise"`
	IotTopicPublish *DetectorModelIotTopicPublish `pulumi:"iotTopicPublish"`
	Lambda          *DetectorModelLambda          `pulumi:"lambda"`
	ResetTimer      *DetectorModelResetTimer      `pulumi:"resetTimer"`
	SetTimer        *DetectorModelSetTimer        `pulumi:"setTimer"`
	SetVariable     *DetectorModelSetVariable     `pulumi:"setVariable"`
	Sns             *DetectorModelSns             `pulumi:"sns"`
	Sqs             *DetectorModelSqs             `pulumi:"sqs"`
}

// DetectorModelActionInput is an input type that accepts DetectorModelActionArgs and DetectorModelActionOutput values.
// You can construct a concrete instance of `DetectorModelActionInput` via:
//
//          DetectorModelActionArgs{...}
type DetectorModelActionInput interface {
	pulumi.Input

	ToDetectorModelActionOutput() DetectorModelActionOutput
	ToDetectorModelActionOutputWithContext(context.Context) DetectorModelActionOutput
}

// The actions to be performed.
type DetectorModelActionArgs struct {
	ClearTimer      DetectorModelClearTimerPtrInput      `pulumi:"clearTimer"`
	DynamoDB        DetectorModelDynamoDBPtrInput        `pulumi:"dynamoDB"`
	DynamoDBv2      DetectorModelDynamoDBv2PtrInput      `pulumi:"dynamoDBv2"`
	Firehose        DetectorModelFirehosePtrInput        `pulumi:"firehose"`
	IotEvents       DetectorModelIotEventsPtrInput       `pulumi:"iotEvents"`
	IotSiteWise     DetectorModelIotSiteWisePtrInput     `pulumi:"iotSiteWise"`
	IotTopicPublish DetectorModelIotTopicPublishPtrInput `pulumi:"iotTopicPublish"`
	Lambda          DetectorModelLambdaPtrInput          `pulumi:"lambda"`
	ResetTimer      DetectorModelResetTimerPtrInput      `pulumi:"resetTimer"`
	SetTimer        DetectorModelSetTimerPtrInput        `pulumi:"setTimer"`
	SetVariable     DetectorModelSetVariablePtrInput     `pulumi:"setVariable"`
	Sns             DetectorModelSnsPtrInput             `pulumi:"sns"`
	Sqs             DetectorModelSqsPtrInput             `pulumi:"sqs"`
}

func (DetectorModelActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAction)(nil)).Elem()
}

func (i DetectorModelActionArgs) ToDetectorModelActionOutput() DetectorModelActionOutput {
	return i.ToDetectorModelActionOutputWithContext(context.Background())
}

func (i DetectorModelActionArgs) ToDetectorModelActionOutputWithContext(ctx context.Context) DetectorModelActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelActionOutput)
}

// DetectorModelActionArrayInput is an input type that accepts DetectorModelActionArray and DetectorModelActionArrayOutput values.
// You can construct a concrete instance of `DetectorModelActionArrayInput` via:
//
//          DetectorModelActionArray{ DetectorModelActionArgs{...} }
type DetectorModelActionArrayInput interface {
	pulumi.Input

	ToDetectorModelActionArrayOutput() DetectorModelActionArrayOutput
	ToDetectorModelActionArrayOutputWithContext(context.Context) DetectorModelActionArrayOutput
}

type DetectorModelActionArray []DetectorModelActionInput

func (DetectorModelActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelAction)(nil)).Elem()
}

func (i DetectorModelActionArray) ToDetectorModelActionArrayOutput() DetectorModelActionArrayOutput {
	return i.ToDetectorModelActionArrayOutputWithContext(context.Background())
}

func (i DetectorModelActionArray) ToDetectorModelActionArrayOutputWithContext(ctx context.Context) DetectorModelActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelActionArrayOutput)
}

// The actions to be performed.
type DetectorModelActionOutput struct{ *pulumi.OutputState }

func (DetectorModelActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAction)(nil)).Elem()
}

func (o DetectorModelActionOutput) ToDetectorModelActionOutput() DetectorModelActionOutput {
	return o
}

func (o DetectorModelActionOutput) ToDetectorModelActionOutputWithContext(ctx context.Context) DetectorModelActionOutput {
	return o
}

func (o DetectorModelActionOutput) ClearTimer() DetectorModelClearTimerPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelClearTimer { return v.ClearTimer }).(DetectorModelClearTimerPtrOutput)
}

func (o DetectorModelActionOutput) DynamoDB() DetectorModelDynamoDBPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelDynamoDB { return v.DynamoDB }).(DetectorModelDynamoDBPtrOutput)
}

func (o DetectorModelActionOutput) DynamoDBv2() DetectorModelDynamoDBv2PtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelDynamoDBv2 { return v.DynamoDBv2 }).(DetectorModelDynamoDBv2PtrOutput)
}

func (o DetectorModelActionOutput) Firehose() DetectorModelFirehosePtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelFirehose { return v.Firehose }).(DetectorModelFirehosePtrOutput)
}

func (o DetectorModelActionOutput) IotEvents() DetectorModelIotEventsPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelIotEvents { return v.IotEvents }).(DetectorModelIotEventsPtrOutput)
}

func (o DetectorModelActionOutput) IotSiteWise() DetectorModelIotSiteWisePtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelIotSiteWise { return v.IotSiteWise }).(DetectorModelIotSiteWisePtrOutput)
}

func (o DetectorModelActionOutput) IotTopicPublish() DetectorModelIotTopicPublishPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelIotTopicPublish { return v.IotTopicPublish }).(DetectorModelIotTopicPublishPtrOutput)
}

func (o DetectorModelActionOutput) Lambda() DetectorModelLambdaPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelLambda { return v.Lambda }).(DetectorModelLambdaPtrOutput)
}

func (o DetectorModelActionOutput) ResetTimer() DetectorModelResetTimerPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelResetTimer { return v.ResetTimer }).(DetectorModelResetTimerPtrOutput)
}

func (o DetectorModelActionOutput) SetTimer() DetectorModelSetTimerPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelSetTimer { return v.SetTimer }).(DetectorModelSetTimerPtrOutput)
}

func (o DetectorModelActionOutput) SetVariable() DetectorModelSetVariablePtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelSetVariable { return v.SetVariable }).(DetectorModelSetVariablePtrOutput)
}

func (o DetectorModelActionOutput) Sns() DetectorModelSnsPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelSns { return v.Sns }).(DetectorModelSnsPtrOutput)
}

func (o DetectorModelActionOutput) Sqs() DetectorModelSqsPtrOutput {
	return o.ApplyT(func(v DetectorModelAction) *DetectorModelSqs { return v.Sqs }).(DetectorModelSqsPtrOutput)
}

type DetectorModelActionArrayOutput struct{ *pulumi.OutputState }

func (DetectorModelActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelAction)(nil)).Elem()
}

func (o DetectorModelActionArrayOutput) ToDetectorModelActionArrayOutput() DetectorModelActionArrayOutput {
	return o
}

func (o DetectorModelActionArrayOutput) ToDetectorModelActionArrayOutputWithContext(ctx context.Context) DetectorModelActionArrayOutput {
	return o
}

func (o DetectorModelActionArrayOutput) Index(i pulumi.IntInput) DetectorModelActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorModelAction {
		return vs[0].([]DetectorModelAction)[vs[1].(int)]
	}).(DetectorModelActionOutput)
}

// A structure that contains timestamp information. For more information, see [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyTimestamp struct {
	// The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
	OffsetInNanos *string `pulumi:"offsetInNanos"`
	// The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
	TimeInSeconds string `pulumi:"timeInSeconds"`
}

// DetectorModelAssetPropertyTimestampInput is an input type that accepts DetectorModelAssetPropertyTimestampArgs and DetectorModelAssetPropertyTimestampOutput values.
// You can construct a concrete instance of `DetectorModelAssetPropertyTimestampInput` via:
//
//          DetectorModelAssetPropertyTimestampArgs{...}
type DetectorModelAssetPropertyTimestampInput interface {
	pulumi.Input

	ToDetectorModelAssetPropertyTimestampOutput() DetectorModelAssetPropertyTimestampOutput
	ToDetectorModelAssetPropertyTimestampOutputWithContext(context.Context) DetectorModelAssetPropertyTimestampOutput
}

// A structure that contains timestamp information. For more information, see [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyTimestampArgs struct {
	// The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
	OffsetInNanos pulumi.StringPtrInput `pulumi:"offsetInNanos"`
	// The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
	TimeInSeconds pulumi.StringInput `pulumi:"timeInSeconds"`
}

func (DetectorModelAssetPropertyTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAssetPropertyTimestamp)(nil)).Elem()
}

func (i DetectorModelAssetPropertyTimestampArgs) ToDetectorModelAssetPropertyTimestampOutput() DetectorModelAssetPropertyTimestampOutput {
	return i.ToDetectorModelAssetPropertyTimestampOutputWithContext(context.Background())
}

func (i DetectorModelAssetPropertyTimestampArgs) ToDetectorModelAssetPropertyTimestampOutputWithContext(ctx context.Context) DetectorModelAssetPropertyTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyTimestampOutput)
}

func (i DetectorModelAssetPropertyTimestampArgs) ToDetectorModelAssetPropertyTimestampPtrOutput() DetectorModelAssetPropertyTimestampPtrOutput {
	return i.ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(context.Background())
}

func (i DetectorModelAssetPropertyTimestampArgs) ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyTimestampOutput).ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(ctx)
}

// DetectorModelAssetPropertyTimestampPtrInput is an input type that accepts DetectorModelAssetPropertyTimestampArgs, DetectorModelAssetPropertyTimestampPtr and DetectorModelAssetPropertyTimestampPtrOutput values.
// You can construct a concrete instance of `DetectorModelAssetPropertyTimestampPtrInput` via:
//
//          DetectorModelAssetPropertyTimestampArgs{...}
//
//  or:
//
//          nil
type DetectorModelAssetPropertyTimestampPtrInput interface {
	pulumi.Input

	ToDetectorModelAssetPropertyTimestampPtrOutput() DetectorModelAssetPropertyTimestampPtrOutput
	ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(context.Context) DetectorModelAssetPropertyTimestampPtrOutput
}

type detectorModelAssetPropertyTimestampPtrType DetectorModelAssetPropertyTimestampArgs

func DetectorModelAssetPropertyTimestampPtr(v *DetectorModelAssetPropertyTimestampArgs) DetectorModelAssetPropertyTimestampPtrInput {
	return (*detectorModelAssetPropertyTimestampPtrType)(v)
}

func (*detectorModelAssetPropertyTimestampPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelAssetPropertyTimestamp)(nil)).Elem()
}

func (i *detectorModelAssetPropertyTimestampPtrType) ToDetectorModelAssetPropertyTimestampPtrOutput() DetectorModelAssetPropertyTimestampPtrOutput {
	return i.ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(context.Background())
}

func (i *detectorModelAssetPropertyTimestampPtrType) ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyTimestampPtrOutput)
}

// A structure that contains timestamp information. For more information, see [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyTimestampOutput struct{ *pulumi.OutputState }

func (DetectorModelAssetPropertyTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAssetPropertyTimestamp)(nil)).Elem()
}

func (o DetectorModelAssetPropertyTimestampOutput) ToDetectorModelAssetPropertyTimestampOutput() DetectorModelAssetPropertyTimestampOutput {
	return o
}

func (o DetectorModelAssetPropertyTimestampOutput) ToDetectorModelAssetPropertyTimestampOutputWithContext(ctx context.Context) DetectorModelAssetPropertyTimestampOutput {
	return o
}

func (o DetectorModelAssetPropertyTimestampOutput) ToDetectorModelAssetPropertyTimestampPtrOutput() DetectorModelAssetPropertyTimestampPtrOutput {
	return o.ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(context.Background())
}

func (o DetectorModelAssetPropertyTimestampOutput) ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyTimestampPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelAssetPropertyTimestamp) *DetectorModelAssetPropertyTimestamp {
		return &v
	}).(DetectorModelAssetPropertyTimestampPtrOutput)
}

// The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
func (o DetectorModelAssetPropertyTimestampOutput) OffsetInNanos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyTimestamp) *string { return v.OffsetInNanos }).(pulumi.StringPtrOutput)
}

// The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
func (o DetectorModelAssetPropertyTimestampOutput) TimeInSeconds() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyTimestamp) string { return v.TimeInSeconds }).(pulumi.StringOutput)
}

type DetectorModelAssetPropertyTimestampPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelAssetPropertyTimestampPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelAssetPropertyTimestamp)(nil)).Elem()
}

func (o DetectorModelAssetPropertyTimestampPtrOutput) ToDetectorModelAssetPropertyTimestampPtrOutput() DetectorModelAssetPropertyTimestampPtrOutput {
	return o
}

func (o DetectorModelAssetPropertyTimestampPtrOutput) ToDetectorModelAssetPropertyTimestampPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyTimestampPtrOutput {
	return o
}

func (o DetectorModelAssetPropertyTimestampPtrOutput) Elem() DetectorModelAssetPropertyTimestampOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyTimestamp) DetectorModelAssetPropertyTimestamp {
		if v != nil {
			return *v
		}
		var ret DetectorModelAssetPropertyTimestamp
		return ret
	}).(DetectorModelAssetPropertyTimestampOutput)
}

// The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
func (o DetectorModelAssetPropertyTimestampPtrOutput) OffsetInNanos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyTimestamp) *string {
		if v == nil {
			return nil
		}
		return v.OffsetInNanos
	}).(pulumi.StringPtrOutput)
}

// The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
func (o DetectorModelAssetPropertyTimestampPtrOutput) TimeInSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyTimestamp) *string {
		if v == nil {
			return nil
		}
		return &v.TimeInSeconds
	}).(pulumi.StringPtrOutput)
}

// A structure that contains value information. For more information, see [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyValue struct {
	// The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
	Quality   *string                              `pulumi:"quality"`
	Timestamp *DetectorModelAssetPropertyTimestamp `pulumi:"timestamp"`
	Value     DetectorModelAssetPropertyVariant    `pulumi:"value"`
}

// DetectorModelAssetPropertyValueInput is an input type that accepts DetectorModelAssetPropertyValueArgs and DetectorModelAssetPropertyValueOutput values.
// You can construct a concrete instance of `DetectorModelAssetPropertyValueInput` via:
//
//          DetectorModelAssetPropertyValueArgs{...}
type DetectorModelAssetPropertyValueInput interface {
	pulumi.Input

	ToDetectorModelAssetPropertyValueOutput() DetectorModelAssetPropertyValueOutput
	ToDetectorModelAssetPropertyValueOutputWithContext(context.Context) DetectorModelAssetPropertyValueOutput
}

// A structure that contains value information. For more information, see [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyValueArgs struct {
	// The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
	Quality   pulumi.StringPtrInput                       `pulumi:"quality"`
	Timestamp DetectorModelAssetPropertyTimestampPtrInput `pulumi:"timestamp"`
	Value     DetectorModelAssetPropertyVariantInput      `pulumi:"value"`
}

func (DetectorModelAssetPropertyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAssetPropertyValue)(nil)).Elem()
}

func (i DetectorModelAssetPropertyValueArgs) ToDetectorModelAssetPropertyValueOutput() DetectorModelAssetPropertyValueOutput {
	return i.ToDetectorModelAssetPropertyValueOutputWithContext(context.Background())
}

func (i DetectorModelAssetPropertyValueArgs) ToDetectorModelAssetPropertyValueOutputWithContext(ctx context.Context) DetectorModelAssetPropertyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyValueOutput)
}

func (i DetectorModelAssetPropertyValueArgs) ToDetectorModelAssetPropertyValuePtrOutput() DetectorModelAssetPropertyValuePtrOutput {
	return i.ToDetectorModelAssetPropertyValuePtrOutputWithContext(context.Background())
}

func (i DetectorModelAssetPropertyValueArgs) ToDetectorModelAssetPropertyValuePtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyValueOutput).ToDetectorModelAssetPropertyValuePtrOutputWithContext(ctx)
}

// DetectorModelAssetPropertyValuePtrInput is an input type that accepts DetectorModelAssetPropertyValueArgs, DetectorModelAssetPropertyValuePtr and DetectorModelAssetPropertyValuePtrOutput values.
// You can construct a concrete instance of `DetectorModelAssetPropertyValuePtrInput` via:
//
//          DetectorModelAssetPropertyValueArgs{...}
//
//  or:
//
//          nil
type DetectorModelAssetPropertyValuePtrInput interface {
	pulumi.Input

	ToDetectorModelAssetPropertyValuePtrOutput() DetectorModelAssetPropertyValuePtrOutput
	ToDetectorModelAssetPropertyValuePtrOutputWithContext(context.Context) DetectorModelAssetPropertyValuePtrOutput
}

type detectorModelAssetPropertyValuePtrType DetectorModelAssetPropertyValueArgs

func DetectorModelAssetPropertyValuePtr(v *DetectorModelAssetPropertyValueArgs) DetectorModelAssetPropertyValuePtrInput {
	return (*detectorModelAssetPropertyValuePtrType)(v)
}

func (*detectorModelAssetPropertyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelAssetPropertyValue)(nil)).Elem()
}

func (i *detectorModelAssetPropertyValuePtrType) ToDetectorModelAssetPropertyValuePtrOutput() DetectorModelAssetPropertyValuePtrOutput {
	return i.ToDetectorModelAssetPropertyValuePtrOutputWithContext(context.Background())
}

func (i *detectorModelAssetPropertyValuePtrType) ToDetectorModelAssetPropertyValuePtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyValuePtrOutput)
}

// A structure that contains value information. For more information, see [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyValueOutput struct{ *pulumi.OutputState }

func (DetectorModelAssetPropertyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAssetPropertyValue)(nil)).Elem()
}

func (o DetectorModelAssetPropertyValueOutput) ToDetectorModelAssetPropertyValueOutput() DetectorModelAssetPropertyValueOutput {
	return o
}

func (o DetectorModelAssetPropertyValueOutput) ToDetectorModelAssetPropertyValueOutputWithContext(ctx context.Context) DetectorModelAssetPropertyValueOutput {
	return o
}

func (o DetectorModelAssetPropertyValueOutput) ToDetectorModelAssetPropertyValuePtrOutput() DetectorModelAssetPropertyValuePtrOutput {
	return o.ToDetectorModelAssetPropertyValuePtrOutputWithContext(context.Background())
}

func (o DetectorModelAssetPropertyValueOutput) ToDetectorModelAssetPropertyValuePtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelAssetPropertyValue) *DetectorModelAssetPropertyValue {
		return &v
	}).(DetectorModelAssetPropertyValuePtrOutput)
}

// The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
func (o DetectorModelAssetPropertyValueOutput) Quality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyValue) *string { return v.Quality }).(pulumi.StringPtrOutput)
}

func (o DetectorModelAssetPropertyValueOutput) Timestamp() DetectorModelAssetPropertyTimestampPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyValue) *DetectorModelAssetPropertyTimestamp { return v.Timestamp }).(DetectorModelAssetPropertyTimestampPtrOutput)
}

func (o DetectorModelAssetPropertyValueOutput) Value() DetectorModelAssetPropertyVariantOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyValue) DetectorModelAssetPropertyVariant { return v.Value }).(DetectorModelAssetPropertyVariantOutput)
}

type DetectorModelAssetPropertyValuePtrOutput struct{ *pulumi.OutputState }

func (DetectorModelAssetPropertyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelAssetPropertyValue)(nil)).Elem()
}

func (o DetectorModelAssetPropertyValuePtrOutput) ToDetectorModelAssetPropertyValuePtrOutput() DetectorModelAssetPropertyValuePtrOutput {
	return o
}

func (o DetectorModelAssetPropertyValuePtrOutput) ToDetectorModelAssetPropertyValuePtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyValuePtrOutput {
	return o
}

func (o DetectorModelAssetPropertyValuePtrOutput) Elem() DetectorModelAssetPropertyValueOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyValue) DetectorModelAssetPropertyValue {
		if v != nil {
			return *v
		}
		var ret DetectorModelAssetPropertyValue
		return ret
	}).(DetectorModelAssetPropertyValueOutput)
}

// The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
func (o DetectorModelAssetPropertyValuePtrOutput) Quality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyValue) *string {
		if v == nil {
			return nil
		}
		return v.Quality
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelAssetPropertyValuePtrOutput) Timestamp() DetectorModelAssetPropertyTimestampPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyValue) *DetectorModelAssetPropertyTimestamp {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(DetectorModelAssetPropertyTimestampPtrOutput)
}

func (o DetectorModelAssetPropertyValuePtrOutput) Value() DetectorModelAssetPropertyVariantPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyValue) *DetectorModelAssetPropertyVariant {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(DetectorModelAssetPropertyVariantPtrOutput)
}

// A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyVariant struct {
	// The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
	BooleanValue *string `pulumi:"booleanValue"`
	// The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
	DoubleValue *string `pulumi:"doubleValue"`
	// The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
	IntegerValue *string `pulumi:"integerValue"`
	// The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
	StringValue *string `pulumi:"stringValue"`
}

// DetectorModelAssetPropertyVariantInput is an input type that accepts DetectorModelAssetPropertyVariantArgs and DetectorModelAssetPropertyVariantOutput values.
// You can construct a concrete instance of `DetectorModelAssetPropertyVariantInput` via:
//
//          DetectorModelAssetPropertyVariantArgs{...}
type DetectorModelAssetPropertyVariantInput interface {
	pulumi.Input

	ToDetectorModelAssetPropertyVariantOutput() DetectorModelAssetPropertyVariantOutput
	ToDetectorModelAssetPropertyVariantOutputWithContext(context.Context) DetectorModelAssetPropertyVariantOutput
}

// A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyVariantArgs struct {
	// The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
	BooleanValue pulumi.StringPtrInput `pulumi:"booleanValue"`
	// The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
	DoubleValue pulumi.StringPtrInput `pulumi:"doubleValue"`
	// The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
	IntegerValue pulumi.StringPtrInput `pulumi:"integerValue"`
	// The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (DetectorModelAssetPropertyVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAssetPropertyVariant)(nil)).Elem()
}

func (i DetectorModelAssetPropertyVariantArgs) ToDetectorModelAssetPropertyVariantOutput() DetectorModelAssetPropertyVariantOutput {
	return i.ToDetectorModelAssetPropertyVariantOutputWithContext(context.Background())
}

func (i DetectorModelAssetPropertyVariantArgs) ToDetectorModelAssetPropertyVariantOutputWithContext(ctx context.Context) DetectorModelAssetPropertyVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyVariantOutput)
}

func (i DetectorModelAssetPropertyVariantArgs) ToDetectorModelAssetPropertyVariantPtrOutput() DetectorModelAssetPropertyVariantPtrOutput {
	return i.ToDetectorModelAssetPropertyVariantPtrOutputWithContext(context.Background())
}

func (i DetectorModelAssetPropertyVariantArgs) ToDetectorModelAssetPropertyVariantPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyVariantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyVariantOutput).ToDetectorModelAssetPropertyVariantPtrOutputWithContext(ctx)
}

// DetectorModelAssetPropertyVariantPtrInput is an input type that accepts DetectorModelAssetPropertyVariantArgs, DetectorModelAssetPropertyVariantPtr and DetectorModelAssetPropertyVariantPtrOutput values.
// You can construct a concrete instance of `DetectorModelAssetPropertyVariantPtrInput` via:
//
//          DetectorModelAssetPropertyVariantArgs{...}
//
//  or:
//
//          nil
type DetectorModelAssetPropertyVariantPtrInput interface {
	pulumi.Input

	ToDetectorModelAssetPropertyVariantPtrOutput() DetectorModelAssetPropertyVariantPtrOutput
	ToDetectorModelAssetPropertyVariantPtrOutputWithContext(context.Context) DetectorModelAssetPropertyVariantPtrOutput
}

type detectorModelAssetPropertyVariantPtrType DetectorModelAssetPropertyVariantArgs

func DetectorModelAssetPropertyVariantPtr(v *DetectorModelAssetPropertyVariantArgs) DetectorModelAssetPropertyVariantPtrInput {
	return (*detectorModelAssetPropertyVariantPtrType)(v)
}

func (*detectorModelAssetPropertyVariantPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelAssetPropertyVariant)(nil)).Elem()
}

func (i *detectorModelAssetPropertyVariantPtrType) ToDetectorModelAssetPropertyVariantPtrOutput() DetectorModelAssetPropertyVariantPtrOutput {
	return i.ToDetectorModelAssetPropertyVariantPtrOutputWithContext(context.Background())
}

func (i *detectorModelAssetPropertyVariantPtrType) ToDetectorModelAssetPropertyVariantPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyVariantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelAssetPropertyVariantPtrOutput)
}

// A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the *AWS IoT SiteWise API Reference*.
type DetectorModelAssetPropertyVariantOutput struct{ *pulumi.OutputState }

func (DetectorModelAssetPropertyVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelAssetPropertyVariant)(nil)).Elem()
}

func (o DetectorModelAssetPropertyVariantOutput) ToDetectorModelAssetPropertyVariantOutput() DetectorModelAssetPropertyVariantOutput {
	return o
}

func (o DetectorModelAssetPropertyVariantOutput) ToDetectorModelAssetPropertyVariantOutputWithContext(ctx context.Context) DetectorModelAssetPropertyVariantOutput {
	return o
}

func (o DetectorModelAssetPropertyVariantOutput) ToDetectorModelAssetPropertyVariantPtrOutput() DetectorModelAssetPropertyVariantPtrOutput {
	return o.ToDetectorModelAssetPropertyVariantPtrOutputWithContext(context.Background())
}

func (o DetectorModelAssetPropertyVariantOutput) ToDetectorModelAssetPropertyVariantPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyVariantPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelAssetPropertyVariant) *DetectorModelAssetPropertyVariant {
		return &v
	}).(DetectorModelAssetPropertyVariantPtrOutput)
}

// The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
func (o DetectorModelAssetPropertyVariantOutput) BooleanValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyVariant) *string { return v.BooleanValue }).(pulumi.StringPtrOutput)
}

// The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
func (o DetectorModelAssetPropertyVariantOutput) DoubleValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyVariant) *string { return v.DoubleValue }).(pulumi.StringPtrOutput)
}

// The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
func (o DetectorModelAssetPropertyVariantOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyVariant) *string { return v.IntegerValue }).(pulumi.StringPtrOutput)
}

// The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
func (o DetectorModelAssetPropertyVariantOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelAssetPropertyVariant) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type DetectorModelAssetPropertyVariantPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelAssetPropertyVariantPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelAssetPropertyVariant)(nil)).Elem()
}

func (o DetectorModelAssetPropertyVariantPtrOutput) ToDetectorModelAssetPropertyVariantPtrOutput() DetectorModelAssetPropertyVariantPtrOutput {
	return o
}

func (o DetectorModelAssetPropertyVariantPtrOutput) ToDetectorModelAssetPropertyVariantPtrOutputWithContext(ctx context.Context) DetectorModelAssetPropertyVariantPtrOutput {
	return o
}

func (o DetectorModelAssetPropertyVariantPtrOutput) Elem() DetectorModelAssetPropertyVariantOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyVariant) DetectorModelAssetPropertyVariant {
		if v != nil {
			return *v
		}
		var ret DetectorModelAssetPropertyVariant
		return ret
	}).(DetectorModelAssetPropertyVariantOutput)
}

// The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
func (o DetectorModelAssetPropertyVariantPtrOutput) BooleanValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyVariant) *string {
		if v == nil {
			return nil
		}
		return v.BooleanValue
	}).(pulumi.StringPtrOutput)
}

// The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
func (o DetectorModelAssetPropertyVariantPtrOutput) DoubleValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyVariant) *string {
		if v == nil {
			return nil
		}
		return v.DoubleValue
	}).(pulumi.StringPtrOutput)
}

// The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
func (o DetectorModelAssetPropertyVariantPtrOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyVariant) *string {
		if v == nil {
			return nil
		}
		return v.IntegerValue
	}).(pulumi.StringPtrOutput)
}

// The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
func (o DetectorModelAssetPropertyVariantPtrOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelAssetPropertyVariant) *string {
		if v == nil {
			return nil
		}
		return v.StringValue
	}).(pulumi.StringPtrOutput)
}

// Information needed to clear the timer.
type DetectorModelClearTimer struct {
	TimerName string `pulumi:"timerName"`
}

// DetectorModelClearTimerInput is an input type that accepts DetectorModelClearTimerArgs and DetectorModelClearTimerOutput values.
// You can construct a concrete instance of `DetectorModelClearTimerInput` via:
//
//          DetectorModelClearTimerArgs{...}
type DetectorModelClearTimerInput interface {
	pulumi.Input

	ToDetectorModelClearTimerOutput() DetectorModelClearTimerOutput
	ToDetectorModelClearTimerOutputWithContext(context.Context) DetectorModelClearTimerOutput
}

// Information needed to clear the timer.
type DetectorModelClearTimerArgs struct {
	TimerName pulumi.StringInput `pulumi:"timerName"`
}

func (DetectorModelClearTimerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelClearTimer)(nil)).Elem()
}

func (i DetectorModelClearTimerArgs) ToDetectorModelClearTimerOutput() DetectorModelClearTimerOutput {
	return i.ToDetectorModelClearTimerOutputWithContext(context.Background())
}

func (i DetectorModelClearTimerArgs) ToDetectorModelClearTimerOutputWithContext(ctx context.Context) DetectorModelClearTimerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelClearTimerOutput)
}

func (i DetectorModelClearTimerArgs) ToDetectorModelClearTimerPtrOutput() DetectorModelClearTimerPtrOutput {
	return i.ToDetectorModelClearTimerPtrOutputWithContext(context.Background())
}

func (i DetectorModelClearTimerArgs) ToDetectorModelClearTimerPtrOutputWithContext(ctx context.Context) DetectorModelClearTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelClearTimerOutput).ToDetectorModelClearTimerPtrOutputWithContext(ctx)
}

// DetectorModelClearTimerPtrInput is an input type that accepts DetectorModelClearTimerArgs, DetectorModelClearTimerPtr and DetectorModelClearTimerPtrOutput values.
// You can construct a concrete instance of `DetectorModelClearTimerPtrInput` via:
//
//          DetectorModelClearTimerArgs{...}
//
//  or:
//
//          nil
type DetectorModelClearTimerPtrInput interface {
	pulumi.Input

	ToDetectorModelClearTimerPtrOutput() DetectorModelClearTimerPtrOutput
	ToDetectorModelClearTimerPtrOutputWithContext(context.Context) DetectorModelClearTimerPtrOutput
}

type detectorModelClearTimerPtrType DetectorModelClearTimerArgs

func DetectorModelClearTimerPtr(v *DetectorModelClearTimerArgs) DetectorModelClearTimerPtrInput {
	return (*detectorModelClearTimerPtrType)(v)
}

func (*detectorModelClearTimerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelClearTimer)(nil)).Elem()
}

func (i *detectorModelClearTimerPtrType) ToDetectorModelClearTimerPtrOutput() DetectorModelClearTimerPtrOutput {
	return i.ToDetectorModelClearTimerPtrOutputWithContext(context.Background())
}

func (i *detectorModelClearTimerPtrType) ToDetectorModelClearTimerPtrOutputWithContext(ctx context.Context) DetectorModelClearTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelClearTimerPtrOutput)
}

// Information needed to clear the timer.
type DetectorModelClearTimerOutput struct{ *pulumi.OutputState }

func (DetectorModelClearTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelClearTimer)(nil)).Elem()
}

func (o DetectorModelClearTimerOutput) ToDetectorModelClearTimerOutput() DetectorModelClearTimerOutput {
	return o
}

func (o DetectorModelClearTimerOutput) ToDetectorModelClearTimerOutputWithContext(ctx context.Context) DetectorModelClearTimerOutput {
	return o
}

func (o DetectorModelClearTimerOutput) ToDetectorModelClearTimerPtrOutput() DetectorModelClearTimerPtrOutput {
	return o.ToDetectorModelClearTimerPtrOutputWithContext(context.Background())
}

func (o DetectorModelClearTimerOutput) ToDetectorModelClearTimerPtrOutputWithContext(ctx context.Context) DetectorModelClearTimerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelClearTimer) *DetectorModelClearTimer {
		return &v
	}).(DetectorModelClearTimerPtrOutput)
}

func (o DetectorModelClearTimerOutput) TimerName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelClearTimer) string { return v.TimerName }).(pulumi.StringOutput)
}

type DetectorModelClearTimerPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelClearTimerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelClearTimer)(nil)).Elem()
}

func (o DetectorModelClearTimerPtrOutput) ToDetectorModelClearTimerPtrOutput() DetectorModelClearTimerPtrOutput {
	return o
}

func (o DetectorModelClearTimerPtrOutput) ToDetectorModelClearTimerPtrOutputWithContext(ctx context.Context) DetectorModelClearTimerPtrOutput {
	return o
}

func (o DetectorModelClearTimerPtrOutput) Elem() DetectorModelClearTimerOutput {
	return o.ApplyT(func(v *DetectorModelClearTimer) DetectorModelClearTimer {
		if v != nil {
			return *v
		}
		var ret DetectorModelClearTimer
		return ret
	}).(DetectorModelClearTimerOutput)
}

func (o DetectorModelClearTimerPtrOutput) TimerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelClearTimer) *string {
		if v == nil {
			return nil
		}
		return &v.TimerName
	}).(pulumi.StringPtrOutput)
}

// Information that defines how a detector operates.
type DetectorModelDetectorModelDefinition struct {
	// The state that is entered at the creation of each detector (instance).
	InitialStateName string `pulumi:"initialStateName"`
	// Information about the states of the detector.
	States []DetectorModelStateType `pulumi:"states"`
}

// DetectorModelDetectorModelDefinitionInput is an input type that accepts DetectorModelDetectorModelDefinitionArgs and DetectorModelDetectorModelDefinitionOutput values.
// You can construct a concrete instance of `DetectorModelDetectorModelDefinitionInput` via:
//
//          DetectorModelDetectorModelDefinitionArgs{...}
type DetectorModelDetectorModelDefinitionInput interface {
	pulumi.Input

	ToDetectorModelDetectorModelDefinitionOutput() DetectorModelDetectorModelDefinitionOutput
	ToDetectorModelDetectorModelDefinitionOutputWithContext(context.Context) DetectorModelDetectorModelDefinitionOutput
}

// Information that defines how a detector operates.
type DetectorModelDetectorModelDefinitionArgs struct {
	// The state that is entered at the creation of each detector (instance).
	InitialStateName pulumi.StringInput `pulumi:"initialStateName"`
	// Information about the states of the detector.
	States DetectorModelStateTypeArrayInput `pulumi:"states"`
}

func (DetectorModelDetectorModelDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelDetectorModelDefinition)(nil)).Elem()
}

func (i DetectorModelDetectorModelDefinitionArgs) ToDetectorModelDetectorModelDefinitionOutput() DetectorModelDetectorModelDefinitionOutput {
	return i.ToDetectorModelDetectorModelDefinitionOutputWithContext(context.Background())
}

func (i DetectorModelDetectorModelDefinitionArgs) ToDetectorModelDetectorModelDefinitionOutputWithContext(ctx context.Context) DetectorModelDetectorModelDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDetectorModelDefinitionOutput)
}

func (i DetectorModelDetectorModelDefinitionArgs) ToDetectorModelDetectorModelDefinitionPtrOutput() DetectorModelDetectorModelDefinitionPtrOutput {
	return i.ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(context.Background())
}

func (i DetectorModelDetectorModelDefinitionArgs) ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(ctx context.Context) DetectorModelDetectorModelDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDetectorModelDefinitionOutput).ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(ctx)
}

// DetectorModelDetectorModelDefinitionPtrInput is an input type that accepts DetectorModelDetectorModelDefinitionArgs, DetectorModelDetectorModelDefinitionPtr and DetectorModelDetectorModelDefinitionPtrOutput values.
// You can construct a concrete instance of `DetectorModelDetectorModelDefinitionPtrInput` via:
//
//          DetectorModelDetectorModelDefinitionArgs{...}
//
//  or:
//
//          nil
type DetectorModelDetectorModelDefinitionPtrInput interface {
	pulumi.Input

	ToDetectorModelDetectorModelDefinitionPtrOutput() DetectorModelDetectorModelDefinitionPtrOutput
	ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(context.Context) DetectorModelDetectorModelDefinitionPtrOutput
}

type detectorModelDetectorModelDefinitionPtrType DetectorModelDetectorModelDefinitionArgs

func DetectorModelDetectorModelDefinitionPtr(v *DetectorModelDetectorModelDefinitionArgs) DetectorModelDetectorModelDefinitionPtrInput {
	return (*detectorModelDetectorModelDefinitionPtrType)(v)
}

func (*detectorModelDetectorModelDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelDetectorModelDefinition)(nil)).Elem()
}

func (i *detectorModelDetectorModelDefinitionPtrType) ToDetectorModelDetectorModelDefinitionPtrOutput() DetectorModelDetectorModelDefinitionPtrOutput {
	return i.ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(context.Background())
}

func (i *detectorModelDetectorModelDefinitionPtrType) ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(ctx context.Context) DetectorModelDetectorModelDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDetectorModelDefinitionPtrOutput)
}

// Information that defines how a detector operates.
type DetectorModelDetectorModelDefinitionOutput struct{ *pulumi.OutputState }

func (DetectorModelDetectorModelDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelDetectorModelDefinition)(nil)).Elem()
}

func (o DetectorModelDetectorModelDefinitionOutput) ToDetectorModelDetectorModelDefinitionOutput() DetectorModelDetectorModelDefinitionOutput {
	return o
}

func (o DetectorModelDetectorModelDefinitionOutput) ToDetectorModelDetectorModelDefinitionOutputWithContext(ctx context.Context) DetectorModelDetectorModelDefinitionOutput {
	return o
}

func (o DetectorModelDetectorModelDefinitionOutput) ToDetectorModelDetectorModelDefinitionPtrOutput() DetectorModelDetectorModelDefinitionPtrOutput {
	return o.ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(context.Background())
}

func (o DetectorModelDetectorModelDefinitionOutput) ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(ctx context.Context) DetectorModelDetectorModelDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelDetectorModelDefinition) *DetectorModelDetectorModelDefinition {
		return &v
	}).(DetectorModelDetectorModelDefinitionPtrOutput)
}

// The state that is entered at the creation of each detector (instance).
func (o DetectorModelDetectorModelDefinitionOutput) InitialStateName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelDetectorModelDefinition) string { return v.InitialStateName }).(pulumi.StringOutput)
}

// Information about the states of the detector.
func (o DetectorModelDetectorModelDefinitionOutput) States() DetectorModelStateTypeArrayOutput {
	return o.ApplyT(func(v DetectorModelDetectorModelDefinition) []DetectorModelStateType { return v.States }).(DetectorModelStateTypeArrayOutput)
}

type DetectorModelDetectorModelDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelDetectorModelDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelDetectorModelDefinition)(nil)).Elem()
}

func (o DetectorModelDetectorModelDefinitionPtrOutput) ToDetectorModelDetectorModelDefinitionPtrOutput() DetectorModelDetectorModelDefinitionPtrOutput {
	return o
}

func (o DetectorModelDetectorModelDefinitionPtrOutput) ToDetectorModelDetectorModelDefinitionPtrOutputWithContext(ctx context.Context) DetectorModelDetectorModelDefinitionPtrOutput {
	return o
}

func (o DetectorModelDetectorModelDefinitionPtrOutput) Elem() DetectorModelDetectorModelDefinitionOutput {
	return o.ApplyT(func(v *DetectorModelDetectorModelDefinition) DetectorModelDetectorModelDefinition {
		if v != nil {
			return *v
		}
		var ret DetectorModelDetectorModelDefinition
		return ret
	}).(DetectorModelDetectorModelDefinitionOutput)
}

// The state that is entered at the creation of each detector (instance).
func (o DetectorModelDetectorModelDefinitionPtrOutput) InitialStateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDetectorModelDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.InitialStateName
	}).(pulumi.StringPtrOutput)
}

// Information about the states of the detector.
func (o DetectorModelDetectorModelDefinitionPtrOutput) States() DetectorModelStateTypeArrayOutput {
	return o.ApplyT(func(v *DetectorModelDetectorModelDefinition) []DetectorModelStateType {
		if v == nil {
			return nil
		}
		return v.States
	}).(DetectorModelStateTypeArrayOutput)
}

// Writes to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see [Actions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html) in *AWS IoT Events Developer Guide*.
type DetectorModelDynamoDB struct {
	// The name of the hash key (also called the partition key).
	HashKeyField string `pulumi:"hashKeyField"`
	// The data type for the hash key (also called the partition key). You can specify the following values:
	//
	// * `STRING` - The hash key is a string.
	//
	// * `NUMBER` - The hash key is a number.
	//
	// If you don't specify `hashKeyType`, the default value is `STRING`.
	HashKeyType *string `pulumi:"hashKeyType"`
	// The value of the hash key (also called the partition key).
	HashKeyValue string `pulumi:"hashKeyValue"`
	// The type of operation to perform. You can specify the following values:
	//
	// * `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.
	//
	// * `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
	//
	// * `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
	//
	// If you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation.
	Operation *string               `pulumi:"operation"`
	Payload   *DetectorModelPayload `pulumi:"payload"`
	// The name of the DynamoDB column that receives the action payload.
	//
	// If you don't specify this parameter, the name of the DynamoDB column is `payload`.
	PayloadField *string `pulumi:"payloadField"`
	// The name of the range key (also called the sort key).
	RangeKeyField *string `pulumi:"rangeKeyField"`
	// The data type for the range key (also called the sort key), You can specify the following values:
	//
	// * `STRING` - The range key is a string.
	//
	// * `NUMBER` - The range key is number.
	//
	// If you don't specify `rangeKeyField`, the default value is `STRING`.
	RangeKeyType *string `pulumi:"rangeKeyType"`
	// The value of the range key (also called the sort key).
	RangeKeyValue *string `pulumi:"rangeKeyValue"`
	// The name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
}

// DetectorModelDynamoDBInput is an input type that accepts DetectorModelDynamoDBArgs and DetectorModelDynamoDBOutput values.
// You can construct a concrete instance of `DetectorModelDynamoDBInput` via:
//
//          DetectorModelDynamoDBArgs{...}
type DetectorModelDynamoDBInput interface {
	pulumi.Input

	ToDetectorModelDynamoDBOutput() DetectorModelDynamoDBOutput
	ToDetectorModelDynamoDBOutputWithContext(context.Context) DetectorModelDynamoDBOutput
}

// Writes to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see [Actions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html) in *AWS IoT Events Developer Guide*.
type DetectorModelDynamoDBArgs struct {
	// The name of the hash key (also called the partition key).
	HashKeyField pulumi.StringInput `pulumi:"hashKeyField"`
	// The data type for the hash key (also called the partition key). You can specify the following values:
	//
	// * `STRING` - The hash key is a string.
	//
	// * `NUMBER` - The hash key is a number.
	//
	// If you don't specify `hashKeyType`, the default value is `STRING`.
	HashKeyType pulumi.StringPtrInput `pulumi:"hashKeyType"`
	// The value of the hash key (also called the partition key).
	HashKeyValue pulumi.StringInput `pulumi:"hashKeyValue"`
	// The type of operation to perform. You can specify the following values:
	//
	// * `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.
	//
	// * `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
	//
	// * `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
	//
	// If you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation.
	Operation pulumi.StringPtrInput        `pulumi:"operation"`
	Payload   DetectorModelPayloadPtrInput `pulumi:"payload"`
	// The name of the DynamoDB column that receives the action payload.
	//
	// If you don't specify this parameter, the name of the DynamoDB column is `payload`.
	PayloadField pulumi.StringPtrInput `pulumi:"payloadField"`
	// The name of the range key (also called the sort key).
	RangeKeyField pulumi.StringPtrInput `pulumi:"rangeKeyField"`
	// The data type for the range key (also called the sort key), You can specify the following values:
	//
	// * `STRING` - The range key is a string.
	//
	// * `NUMBER` - The range key is number.
	//
	// If you don't specify `rangeKeyField`, the default value is `STRING`.
	RangeKeyType pulumi.StringPtrInput `pulumi:"rangeKeyType"`
	// The value of the range key (also called the sort key).
	RangeKeyValue pulumi.StringPtrInput `pulumi:"rangeKeyValue"`
	// The name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (DetectorModelDynamoDBArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelDynamoDB)(nil)).Elem()
}

func (i DetectorModelDynamoDBArgs) ToDetectorModelDynamoDBOutput() DetectorModelDynamoDBOutput {
	return i.ToDetectorModelDynamoDBOutputWithContext(context.Background())
}

func (i DetectorModelDynamoDBArgs) ToDetectorModelDynamoDBOutputWithContext(ctx context.Context) DetectorModelDynamoDBOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDynamoDBOutput)
}

func (i DetectorModelDynamoDBArgs) ToDetectorModelDynamoDBPtrOutput() DetectorModelDynamoDBPtrOutput {
	return i.ToDetectorModelDynamoDBPtrOutputWithContext(context.Background())
}

func (i DetectorModelDynamoDBArgs) ToDetectorModelDynamoDBPtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDynamoDBOutput).ToDetectorModelDynamoDBPtrOutputWithContext(ctx)
}

// DetectorModelDynamoDBPtrInput is an input type that accepts DetectorModelDynamoDBArgs, DetectorModelDynamoDBPtr and DetectorModelDynamoDBPtrOutput values.
// You can construct a concrete instance of `DetectorModelDynamoDBPtrInput` via:
//
//          DetectorModelDynamoDBArgs{...}
//
//  or:
//
//          nil
type DetectorModelDynamoDBPtrInput interface {
	pulumi.Input

	ToDetectorModelDynamoDBPtrOutput() DetectorModelDynamoDBPtrOutput
	ToDetectorModelDynamoDBPtrOutputWithContext(context.Context) DetectorModelDynamoDBPtrOutput
}

type detectorModelDynamoDBPtrType DetectorModelDynamoDBArgs

func DetectorModelDynamoDBPtr(v *DetectorModelDynamoDBArgs) DetectorModelDynamoDBPtrInput {
	return (*detectorModelDynamoDBPtrType)(v)
}

func (*detectorModelDynamoDBPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelDynamoDB)(nil)).Elem()
}

func (i *detectorModelDynamoDBPtrType) ToDetectorModelDynamoDBPtrOutput() DetectorModelDynamoDBPtrOutput {
	return i.ToDetectorModelDynamoDBPtrOutputWithContext(context.Background())
}

func (i *detectorModelDynamoDBPtrType) ToDetectorModelDynamoDBPtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDynamoDBPtrOutput)
}

// Writes to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see [Actions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html) in *AWS IoT Events Developer Guide*.
type DetectorModelDynamoDBOutput struct{ *pulumi.OutputState }

func (DetectorModelDynamoDBOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelDynamoDB)(nil)).Elem()
}

func (o DetectorModelDynamoDBOutput) ToDetectorModelDynamoDBOutput() DetectorModelDynamoDBOutput {
	return o
}

func (o DetectorModelDynamoDBOutput) ToDetectorModelDynamoDBOutputWithContext(ctx context.Context) DetectorModelDynamoDBOutput {
	return o
}

func (o DetectorModelDynamoDBOutput) ToDetectorModelDynamoDBPtrOutput() DetectorModelDynamoDBPtrOutput {
	return o.ToDetectorModelDynamoDBPtrOutputWithContext(context.Background())
}

func (o DetectorModelDynamoDBOutput) ToDetectorModelDynamoDBPtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelDynamoDB) *DetectorModelDynamoDB {
		return &v
	}).(DetectorModelDynamoDBPtrOutput)
}

// The name of the hash key (also called the partition key).
func (o DetectorModelDynamoDBOutput) HashKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) string { return v.HashKeyField }).(pulumi.StringOutput)
}

// The data type for the hash key (also called the partition key). You can specify the following values:
//
// * `STRING` - The hash key is a string.
//
// * `NUMBER` - The hash key is a number.
//
// If you don't specify `hashKeyType`, the default value is `STRING`.
func (o DetectorModelDynamoDBOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *string { return v.HashKeyType }).(pulumi.StringPtrOutput)
}

// The value of the hash key (also called the partition key).
func (o DetectorModelDynamoDBOutput) HashKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) string { return v.HashKeyValue }).(pulumi.StringOutput)
}

// The type of operation to perform. You can specify the following values:
//
// * `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.
//
// * `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
//
// * `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
//
// If you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation.
func (o DetectorModelDynamoDBOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

func (o DetectorModelDynamoDBOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

// The name of the DynamoDB column that receives the action payload.
//
// If you don't specify this parameter, the name of the DynamoDB column is `payload`.
func (o DetectorModelDynamoDBOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *string { return v.PayloadField }).(pulumi.StringPtrOutput)
}

// The name of the range key (also called the sort key).
func (o DetectorModelDynamoDBOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *string { return v.RangeKeyField }).(pulumi.StringPtrOutput)
}

// The data type for the range key (also called the sort key), You can specify the following values:
//
// * `STRING` - The range key is a string.
//
// * `NUMBER` - The range key is number.
//
// If you don't specify `rangeKeyField`, the default value is `STRING`.
func (o DetectorModelDynamoDBOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *string { return v.RangeKeyType }).(pulumi.StringPtrOutput)
}

// The value of the range key (also called the sort key).
func (o DetectorModelDynamoDBOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) *string { return v.RangeKeyValue }).(pulumi.StringPtrOutput)
}

// The name of the DynamoDB table.
func (o DetectorModelDynamoDBOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelDynamoDB) string { return v.TableName }).(pulumi.StringOutput)
}

type DetectorModelDynamoDBPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelDynamoDBPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelDynamoDB)(nil)).Elem()
}

func (o DetectorModelDynamoDBPtrOutput) ToDetectorModelDynamoDBPtrOutput() DetectorModelDynamoDBPtrOutput {
	return o
}

func (o DetectorModelDynamoDBPtrOutput) ToDetectorModelDynamoDBPtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBPtrOutput {
	return o
}

func (o DetectorModelDynamoDBPtrOutput) Elem() DetectorModelDynamoDBOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) DetectorModelDynamoDB {
		if v != nil {
			return *v
		}
		var ret DetectorModelDynamoDB
		return ret
	}).(DetectorModelDynamoDBOutput)
}

// The name of the hash key (also called the partition key).
func (o DetectorModelDynamoDBPtrOutput) HashKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyField
	}).(pulumi.StringPtrOutput)
}

// The data type for the hash key (also called the partition key). You can specify the following values:
//
// * `STRING` - The hash key is a string.
//
// * `NUMBER` - The hash key is a number.
//
// If you don't specify `hashKeyType`, the default value is `STRING`.
func (o DetectorModelDynamoDBPtrOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return v.HashKeyType
	}).(pulumi.StringPtrOutput)
}

// The value of the hash key (also called the partition key).
func (o DetectorModelDynamoDBPtrOutput) HashKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyValue
	}).(pulumi.StringPtrOutput)
}

// The type of operation to perform. You can specify the following values:
//
// * `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.
//
// * `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
//
// * `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.
//
// If you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation.
func (o DetectorModelDynamoDBPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelDynamoDBPtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// The name of the DynamoDB column that receives the action payload.
//
// If you don't specify this parameter, the name of the DynamoDB column is `payload`.
func (o DetectorModelDynamoDBPtrOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return v.PayloadField
	}).(pulumi.StringPtrOutput)
}

// The name of the range key (also called the sort key).
func (o DetectorModelDynamoDBPtrOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyField
	}).(pulumi.StringPtrOutput)
}

// The data type for the range key (also called the sort key), You can specify the following values:
//
// * `STRING` - The range key is a string.
//
// * `NUMBER` - The range key is number.
//
// If you don't specify `rangeKeyField`, the default value is `STRING`.
func (o DetectorModelDynamoDBPtrOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyType
	}).(pulumi.StringPtrOutput)
}

// The value of the range key (also called the sort key).
func (o DetectorModelDynamoDBPtrOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyValue
	}).(pulumi.StringPtrOutput)
}

// The name of the DynamoDB table.
func (o DetectorModelDynamoDBPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDB) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.
//
// You can use expressions for parameters that are strings. For more information, see [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html) in the *AWS IoT Events Developer Guide*.
type DetectorModelDynamoDBv2 struct {
	Payload *DetectorModelPayload `pulumi:"payload"`
	// The name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
}

// DetectorModelDynamoDBv2Input is an input type that accepts DetectorModelDynamoDBv2Args and DetectorModelDynamoDBv2Output values.
// You can construct a concrete instance of `DetectorModelDynamoDBv2Input` via:
//
//          DetectorModelDynamoDBv2Args{...}
type DetectorModelDynamoDBv2Input interface {
	pulumi.Input

	ToDetectorModelDynamoDBv2Output() DetectorModelDynamoDBv2Output
	ToDetectorModelDynamoDBv2OutputWithContext(context.Context) DetectorModelDynamoDBv2Output
}

// Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.
//
// You can use expressions for parameters that are strings. For more information, see [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html) in the *AWS IoT Events Developer Guide*.
type DetectorModelDynamoDBv2Args struct {
	Payload DetectorModelPayloadPtrInput `pulumi:"payload"`
	// The name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (DetectorModelDynamoDBv2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelDynamoDBv2)(nil)).Elem()
}

func (i DetectorModelDynamoDBv2Args) ToDetectorModelDynamoDBv2Output() DetectorModelDynamoDBv2Output {
	return i.ToDetectorModelDynamoDBv2OutputWithContext(context.Background())
}

func (i DetectorModelDynamoDBv2Args) ToDetectorModelDynamoDBv2OutputWithContext(ctx context.Context) DetectorModelDynamoDBv2Output {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDynamoDBv2Output)
}

func (i DetectorModelDynamoDBv2Args) ToDetectorModelDynamoDBv2PtrOutput() DetectorModelDynamoDBv2PtrOutput {
	return i.ToDetectorModelDynamoDBv2PtrOutputWithContext(context.Background())
}

func (i DetectorModelDynamoDBv2Args) ToDetectorModelDynamoDBv2PtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBv2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDynamoDBv2Output).ToDetectorModelDynamoDBv2PtrOutputWithContext(ctx)
}

// DetectorModelDynamoDBv2PtrInput is an input type that accepts DetectorModelDynamoDBv2Args, DetectorModelDynamoDBv2Ptr and DetectorModelDynamoDBv2PtrOutput values.
// You can construct a concrete instance of `DetectorModelDynamoDBv2PtrInput` via:
//
//          DetectorModelDynamoDBv2Args{...}
//
//  or:
//
//          nil
type DetectorModelDynamoDBv2PtrInput interface {
	pulumi.Input

	ToDetectorModelDynamoDBv2PtrOutput() DetectorModelDynamoDBv2PtrOutput
	ToDetectorModelDynamoDBv2PtrOutputWithContext(context.Context) DetectorModelDynamoDBv2PtrOutput
}

type detectorModelDynamoDBv2PtrType DetectorModelDynamoDBv2Args

func DetectorModelDynamoDBv2Ptr(v *DetectorModelDynamoDBv2Args) DetectorModelDynamoDBv2PtrInput {
	return (*detectorModelDynamoDBv2PtrType)(v)
}

func (*detectorModelDynamoDBv2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelDynamoDBv2)(nil)).Elem()
}

func (i *detectorModelDynamoDBv2PtrType) ToDetectorModelDynamoDBv2PtrOutput() DetectorModelDynamoDBv2PtrOutput {
	return i.ToDetectorModelDynamoDBv2PtrOutputWithContext(context.Background())
}

func (i *detectorModelDynamoDBv2PtrType) ToDetectorModelDynamoDBv2PtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBv2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelDynamoDBv2PtrOutput)
}

// Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.
//
// You can use expressions for parameters that are strings. For more information, see [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html) in the *AWS IoT Events Developer Guide*.
type DetectorModelDynamoDBv2Output struct{ *pulumi.OutputState }

func (DetectorModelDynamoDBv2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelDynamoDBv2)(nil)).Elem()
}

func (o DetectorModelDynamoDBv2Output) ToDetectorModelDynamoDBv2Output() DetectorModelDynamoDBv2Output {
	return o
}

func (o DetectorModelDynamoDBv2Output) ToDetectorModelDynamoDBv2OutputWithContext(ctx context.Context) DetectorModelDynamoDBv2Output {
	return o
}

func (o DetectorModelDynamoDBv2Output) ToDetectorModelDynamoDBv2PtrOutput() DetectorModelDynamoDBv2PtrOutput {
	return o.ToDetectorModelDynamoDBv2PtrOutputWithContext(context.Background())
}

func (o DetectorModelDynamoDBv2Output) ToDetectorModelDynamoDBv2PtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBv2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelDynamoDBv2) *DetectorModelDynamoDBv2 {
		return &v
	}).(DetectorModelDynamoDBv2PtrOutput)
}

func (o DetectorModelDynamoDBv2Output) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelDynamoDBv2) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

// The name of the DynamoDB table.
func (o DetectorModelDynamoDBv2Output) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelDynamoDBv2) string { return v.TableName }).(pulumi.StringOutput)
}

type DetectorModelDynamoDBv2PtrOutput struct{ *pulumi.OutputState }

func (DetectorModelDynamoDBv2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelDynamoDBv2)(nil)).Elem()
}

func (o DetectorModelDynamoDBv2PtrOutput) ToDetectorModelDynamoDBv2PtrOutput() DetectorModelDynamoDBv2PtrOutput {
	return o
}

func (o DetectorModelDynamoDBv2PtrOutput) ToDetectorModelDynamoDBv2PtrOutputWithContext(ctx context.Context) DetectorModelDynamoDBv2PtrOutput {
	return o
}

func (o DetectorModelDynamoDBv2PtrOutput) Elem() DetectorModelDynamoDBv2Output {
	return o.ApplyT(func(v *DetectorModelDynamoDBv2) DetectorModelDynamoDBv2 {
		if v != nil {
			return *v
		}
		var ret DetectorModelDynamoDBv2
		return ret
	}).(DetectorModelDynamoDBv2Output)
}

func (o DetectorModelDynamoDBv2PtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDBv2) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// The name of the DynamoDB table.
func (o DetectorModelDynamoDBv2PtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelDynamoDBv2) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Specifies the `actions` to be performed when the `condition` evaluates to `TRUE`.
type DetectorModelEvent struct {
	// The actions to be performed.
	Actions []DetectorModelAction `pulumi:"actions"`
	// The Boolean expression that, when `TRUE`, causes the `actions` to be performed. If not present, the `actions` are performed (=`TRUE`). If the expression result is not a `Boolean` value, the `actions` are not performed (=`FALSE`).
	Condition *string `pulumi:"condition"`
	// The name of the event.
	EventName string `pulumi:"eventName"`
}

// DetectorModelEventInput is an input type that accepts DetectorModelEventArgs and DetectorModelEventOutput values.
// You can construct a concrete instance of `DetectorModelEventInput` via:
//
//          DetectorModelEventArgs{...}
type DetectorModelEventInput interface {
	pulumi.Input

	ToDetectorModelEventOutput() DetectorModelEventOutput
	ToDetectorModelEventOutputWithContext(context.Context) DetectorModelEventOutput
}

// Specifies the `actions` to be performed when the `condition` evaluates to `TRUE`.
type DetectorModelEventArgs struct {
	// The actions to be performed.
	Actions DetectorModelActionArrayInput `pulumi:"actions"`
	// The Boolean expression that, when `TRUE`, causes the `actions` to be performed. If not present, the `actions` are performed (=`TRUE`). If the expression result is not a `Boolean` value, the `actions` are not performed (=`FALSE`).
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The name of the event.
	EventName pulumi.StringInput `pulumi:"eventName"`
}

func (DetectorModelEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelEvent)(nil)).Elem()
}

func (i DetectorModelEventArgs) ToDetectorModelEventOutput() DetectorModelEventOutput {
	return i.ToDetectorModelEventOutputWithContext(context.Background())
}

func (i DetectorModelEventArgs) ToDetectorModelEventOutputWithContext(ctx context.Context) DetectorModelEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelEventOutput)
}

// DetectorModelEventArrayInput is an input type that accepts DetectorModelEventArray and DetectorModelEventArrayOutput values.
// You can construct a concrete instance of `DetectorModelEventArrayInput` via:
//
//          DetectorModelEventArray{ DetectorModelEventArgs{...} }
type DetectorModelEventArrayInput interface {
	pulumi.Input

	ToDetectorModelEventArrayOutput() DetectorModelEventArrayOutput
	ToDetectorModelEventArrayOutputWithContext(context.Context) DetectorModelEventArrayOutput
}

type DetectorModelEventArray []DetectorModelEventInput

func (DetectorModelEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelEvent)(nil)).Elem()
}

func (i DetectorModelEventArray) ToDetectorModelEventArrayOutput() DetectorModelEventArrayOutput {
	return i.ToDetectorModelEventArrayOutputWithContext(context.Background())
}

func (i DetectorModelEventArray) ToDetectorModelEventArrayOutputWithContext(ctx context.Context) DetectorModelEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelEventArrayOutput)
}

// Specifies the `actions` to be performed when the `condition` evaluates to `TRUE`.
type DetectorModelEventOutput struct{ *pulumi.OutputState }

func (DetectorModelEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelEvent)(nil)).Elem()
}

func (o DetectorModelEventOutput) ToDetectorModelEventOutput() DetectorModelEventOutput {
	return o
}

func (o DetectorModelEventOutput) ToDetectorModelEventOutputWithContext(ctx context.Context) DetectorModelEventOutput {
	return o
}

// The actions to be performed.
func (o DetectorModelEventOutput) Actions() DetectorModelActionArrayOutput {
	return o.ApplyT(func(v DetectorModelEvent) []DetectorModelAction { return v.Actions }).(DetectorModelActionArrayOutput)
}

// The Boolean expression that, when `TRUE`, causes the `actions` to be performed. If not present, the `actions` are performed (=`TRUE`). If the expression result is not a `Boolean` value, the `actions` are not performed (=`FALSE`).
func (o DetectorModelEventOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelEvent) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The name of the event.
func (o DetectorModelEventOutput) EventName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelEvent) string { return v.EventName }).(pulumi.StringOutput)
}

type DetectorModelEventArrayOutput struct{ *pulumi.OutputState }

func (DetectorModelEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelEvent)(nil)).Elem()
}

func (o DetectorModelEventArrayOutput) ToDetectorModelEventArrayOutput() DetectorModelEventArrayOutput {
	return o
}

func (o DetectorModelEventArrayOutput) ToDetectorModelEventArrayOutputWithContext(ctx context.Context) DetectorModelEventArrayOutput {
	return o
}

func (o DetectorModelEventArrayOutput) Index(i pulumi.IntInput) DetectorModelEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorModelEvent {
		return vs[0].([]DetectorModelEvent)[vs[1].(int)]
	}).(DetectorModelEventOutput)
}

// Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
type DetectorModelFirehose struct {
	// The name of the Kinesis Data Firehose delivery stream where the data is written.
	DeliveryStreamName string                `pulumi:"deliveryStreamName"`
	Payload            *DetectorModelPayload `pulumi:"payload"`
	// A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `pulumi:"separator"`
}

// DetectorModelFirehoseInput is an input type that accepts DetectorModelFirehoseArgs and DetectorModelFirehoseOutput values.
// You can construct a concrete instance of `DetectorModelFirehoseInput` via:
//
//          DetectorModelFirehoseArgs{...}
type DetectorModelFirehoseInput interface {
	pulumi.Input

	ToDetectorModelFirehoseOutput() DetectorModelFirehoseOutput
	ToDetectorModelFirehoseOutputWithContext(context.Context) DetectorModelFirehoseOutput
}

// Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
type DetectorModelFirehoseArgs struct {
	// The name of the Kinesis Data Firehose delivery stream where the data is written.
	DeliveryStreamName pulumi.StringInput           `pulumi:"deliveryStreamName"`
	Payload            DetectorModelPayloadPtrInput `pulumi:"payload"`
	// A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator pulumi.StringPtrInput `pulumi:"separator"`
}

func (DetectorModelFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelFirehose)(nil)).Elem()
}

func (i DetectorModelFirehoseArgs) ToDetectorModelFirehoseOutput() DetectorModelFirehoseOutput {
	return i.ToDetectorModelFirehoseOutputWithContext(context.Background())
}

func (i DetectorModelFirehoseArgs) ToDetectorModelFirehoseOutputWithContext(ctx context.Context) DetectorModelFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelFirehoseOutput)
}

func (i DetectorModelFirehoseArgs) ToDetectorModelFirehosePtrOutput() DetectorModelFirehosePtrOutput {
	return i.ToDetectorModelFirehosePtrOutputWithContext(context.Background())
}

func (i DetectorModelFirehoseArgs) ToDetectorModelFirehosePtrOutputWithContext(ctx context.Context) DetectorModelFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelFirehoseOutput).ToDetectorModelFirehosePtrOutputWithContext(ctx)
}

// DetectorModelFirehosePtrInput is an input type that accepts DetectorModelFirehoseArgs, DetectorModelFirehosePtr and DetectorModelFirehosePtrOutput values.
// You can construct a concrete instance of `DetectorModelFirehosePtrInput` via:
//
//          DetectorModelFirehoseArgs{...}
//
//  or:
//
//          nil
type DetectorModelFirehosePtrInput interface {
	pulumi.Input

	ToDetectorModelFirehosePtrOutput() DetectorModelFirehosePtrOutput
	ToDetectorModelFirehosePtrOutputWithContext(context.Context) DetectorModelFirehosePtrOutput
}

type detectorModelFirehosePtrType DetectorModelFirehoseArgs

func DetectorModelFirehosePtr(v *DetectorModelFirehoseArgs) DetectorModelFirehosePtrInput {
	return (*detectorModelFirehosePtrType)(v)
}

func (*detectorModelFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelFirehose)(nil)).Elem()
}

func (i *detectorModelFirehosePtrType) ToDetectorModelFirehosePtrOutput() DetectorModelFirehosePtrOutput {
	return i.ToDetectorModelFirehosePtrOutputWithContext(context.Background())
}

func (i *detectorModelFirehosePtrType) ToDetectorModelFirehosePtrOutputWithContext(ctx context.Context) DetectorModelFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelFirehosePtrOutput)
}

// Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
type DetectorModelFirehoseOutput struct{ *pulumi.OutputState }

func (DetectorModelFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelFirehose)(nil)).Elem()
}

func (o DetectorModelFirehoseOutput) ToDetectorModelFirehoseOutput() DetectorModelFirehoseOutput {
	return o
}

func (o DetectorModelFirehoseOutput) ToDetectorModelFirehoseOutputWithContext(ctx context.Context) DetectorModelFirehoseOutput {
	return o
}

func (o DetectorModelFirehoseOutput) ToDetectorModelFirehosePtrOutput() DetectorModelFirehosePtrOutput {
	return o.ToDetectorModelFirehosePtrOutputWithContext(context.Background())
}

func (o DetectorModelFirehoseOutput) ToDetectorModelFirehosePtrOutputWithContext(ctx context.Context) DetectorModelFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelFirehose) *DetectorModelFirehose {
		return &v
	}).(DetectorModelFirehosePtrOutput)
}

// The name of the Kinesis Data Firehose delivery stream where the data is written.
func (o DetectorModelFirehoseOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelFirehose) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

func (o DetectorModelFirehoseOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelFirehose) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

// A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o DetectorModelFirehoseOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelFirehose) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

type DetectorModelFirehosePtrOutput struct{ *pulumi.OutputState }

func (DetectorModelFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelFirehose)(nil)).Elem()
}

func (o DetectorModelFirehosePtrOutput) ToDetectorModelFirehosePtrOutput() DetectorModelFirehosePtrOutput {
	return o
}

func (o DetectorModelFirehosePtrOutput) ToDetectorModelFirehosePtrOutputWithContext(ctx context.Context) DetectorModelFirehosePtrOutput {
	return o
}

func (o DetectorModelFirehosePtrOutput) Elem() DetectorModelFirehoseOutput {
	return o.ApplyT(func(v *DetectorModelFirehose) DetectorModelFirehose {
		if v != nil {
			return *v
		}
		var ret DetectorModelFirehose
		return ret
	}).(DetectorModelFirehoseOutput)
}

// The name of the Kinesis Data Firehose delivery stream where the data is written.
func (o DetectorModelFirehosePtrOutput) DeliveryStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStreamName
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelFirehosePtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelFirehose) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o DetectorModelFirehosePtrOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelFirehose) *string {
		if v == nil {
			return nil
		}
		return v.Separator
	}).(pulumi.StringPtrOutput)
}

// Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.
type DetectorModelIotEvents struct {
	// The name of the AWS IoT Events input where the data is sent.
	InputName string                `pulumi:"inputName"`
	Payload   *DetectorModelPayload `pulumi:"payload"`
}

// DetectorModelIotEventsInput is an input type that accepts DetectorModelIotEventsArgs and DetectorModelIotEventsOutput values.
// You can construct a concrete instance of `DetectorModelIotEventsInput` via:
//
//          DetectorModelIotEventsArgs{...}
type DetectorModelIotEventsInput interface {
	pulumi.Input

	ToDetectorModelIotEventsOutput() DetectorModelIotEventsOutput
	ToDetectorModelIotEventsOutputWithContext(context.Context) DetectorModelIotEventsOutput
}

// Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.
type DetectorModelIotEventsArgs struct {
	// The name of the AWS IoT Events input where the data is sent.
	InputName pulumi.StringInput           `pulumi:"inputName"`
	Payload   DetectorModelPayloadPtrInput `pulumi:"payload"`
}

func (DetectorModelIotEventsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelIotEvents)(nil)).Elem()
}

func (i DetectorModelIotEventsArgs) ToDetectorModelIotEventsOutput() DetectorModelIotEventsOutput {
	return i.ToDetectorModelIotEventsOutputWithContext(context.Background())
}

func (i DetectorModelIotEventsArgs) ToDetectorModelIotEventsOutputWithContext(ctx context.Context) DetectorModelIotEventsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotEventsOutput)
}

func (i DetectorModelIotEventsArgs) ToDetectorModelIotEventsPtrOutput() DetectorModelIotEventsPtrOutput {
	return i.ToDetectorModelIotEventsPtrOutputWithContext(context.Background())
}

func (i DetectorModelIotEventsArgs) ToDetectorModelIotEventsPtrOutputWithContext(ctx context.Context) DetectorModelIotEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotEventsOutput).ToDetectorModelIotEventsPtrOutputWithContext(ctx)
}

// DetectorModelIotEventsPtrInput is an input type that accepts DetectorModelIotEventsArgs, DetectorModelIotEventsPtr and DetectorModelIotEventsPtrOutput values.
// You can construct a concrete instance of `DetectorModelIotEventsPtrInput` via:
//
//          DetectorModelIotEventsArgs{...}
//
//  or:
//
//          nil
type DetectorModelIotEventsPtrInput interface {
	pulumi.Input

	ToDetectorModelIotEventsPtrOutput() DetectorModelIotEventsPtrOutput
	ToDetectorModelIotEventsPtrOutputWithContext(context.Context) DetectorModelIotEventsPtrOutput
}

type detectorModelIotEventsPtrType DetectorModelIotEventsArgs

func DetectorModelIotEventsPtr(v *DetectorModelIotEventsArgs) DetectorModelIotEventsPtrInput {
	return (*detectorModelIotEventsPtrType)(v)
}

func (*detectorModelIotEventsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelIotEvents)(nil)).Elem()
}

func (i *detectorModelIotEventsPtrType) ToDetectorModelIotEventsPtrOutput() DetectorModelIotEventsPtrOutput {
	return i.ToDetectorModelIotEventsPtrOutputWithContext(context.Background())
}

func (i *detectorModelIotEventsPtrType) ToDetectorModelIotEventsPtrOutputWithContext(ctx context.Context) DetectorModelIotEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotEventsPtrOutput)
}

// Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.
type DetectorModelIotEventsOutput struct{ *pulumi.OutputState }

func (DetectorModelIotEventsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelIotEvents)(nil)).Elem()
}

func (o DetectorModelIotEventsOutput) ToDetectorModelIotEventsOutput() DetectorModelIotEventsOutput {
	return o
}

func (o DetectorModelIotEventsOutput) ToDetectorModelIotEventsOutputWithContext(ctx context.Context) DetectorModelIotEventsOutput {
	return o
}

func (o DetectorModelIotEventsOutput) ToDetectorModelIotEventsPtrOutput() DetectorModelIotEventsPtrOutput {
	return o.ToDetectorModelIotEventsPtrOutputWithContext(context.Background())
}

func (o DetectorModelIotEventsOutput) ToDetectorModelIotEventsPtrOutputWithContext(ctx context.Context) DetectorModelIotEventsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelIotEvents) *DetectorModelIotEvents {
		return &v
	}).(DetectorModelIotEventsPtrOutput)
}

// The name of the AWS IoT Events input where the data is sent.
func (o DetectorModelIotEventsOutput) InputName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelIotEvents) string { return v.InputName }).(pulumi.StringOutput)
}

func (o DetectorModelIotEventsOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelIotEvents) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

type DetectorModelIotEventsPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelIotEventsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelIotEvents)(nil)).Elem()
}

func (o DetectorModelIotEventsPtrOutput) ToDetectorModelIotEventsPtrOutput() DetectorModelIotEventsPtrOutput {
	return o
}

func (o DetectorModelIotEventsPtrOutput) ToDetectorModelIotEventsPtrOutputWithContext(ctx context.Context) DetectorModelIotEventsPtrOutput {
	return o
}

func (o DetectorModelIotEventsPtrOutput) Elem() DetectorModelIotEventsOutput {
	return o.ApplyT(func(v *DetectorModelIotEvents) DetectorModelIotEvents {
		if v != nil {
			return *v
		}
		var ret DetectorModelIotEvents
		return ret
	}).(DetectorModelIotEventsOutput)
}

// The name of the AWS IoT Events input where the data is sent.
func (o DetectorModelIotEventsPtrOutput) InputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotEvents) *string {
		if v == nil {
			return nil
		}
		return &v.InputName
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelIotEventsPtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotEvents) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.
type DetectorModelIotSiteWise struct {
	// The ID of the asset that has the specified property. You can specify an expression.
	AssetId *string `pulumi:"assetId"`
	// A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression.
	EntryId *string `pulumi:"entryId"`
	// The alias of the asset property. You can also specify an expression.
	PropertyAlias *string `pulumi:"propertyAlias"`
	// The ID of the asset property. You can specify an expression.
	PropertyId    *string                         `pulumi:"propertyId"`
	PropertyValue DetectorModelAssetPropertyValue `pulumi:"propertyValue"`
}

// DetectorModelIotSiteWiseInput is an input type that accepts DetectorModelIotSiteWiseArgs and DetectorModelIotSiteWiseOutput values.
// You can construct a concrete instance of `DetectorModelIotSiteWiseInput` via:
//
//          DetectorModelIotSiteWiseArgs{...}
type DetectorModelIotSiteWiseInput interface {
	pulumi.Input

	ToDetectorModelIotSiteWiseOutput() DetectorModelIotSiteWiseOutput
	ToDetectorModelIotSiteWiseOutputWithContext(context.Context) DetectorModelIotSiteWiseOutput
}

// Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.
type DetectorModelIotSiteWiseArgs struct {
	// The ID of the asset that has the specified property. You can specify an expression.
	AssetId pulumi.StringPtrInput `pulumi:"assetId"`
	// A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression.
	EntryId pulumi.StringPtrInput `pulumi:"entryId"`
	// The alias of the asset property. You can also specify an expression.
	PropertyAlias pulumi.StringPtrInput `pulumi:"propertyAlias"`
	// The ID of the asset property. You can specify an expression.
	PropertyId    pulumi.StringPtrInput                `pulumi:"propertyId"`
	PropertyValue DetectorModelAssetPropertyValueInput `pulumi:"propertyValue"`
}

func (DetectorModelIotSiteWiseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelIotSiteWise)(nil)).Elem()
}

func (i DetectorModelIotSiteWiseArgs) ToDetectorModelIotSiteWiseOutput() DetectorModelIotSiteWiseOutput {
	return i.ToDetectorModelIotSiteWiseOutputWithContext(context.Background())
}

func (i DetectorModelIotSiteWiseArgs) ToDetectorModelIotSiteWiseOutputWithContext(ctx context.Context) DetectorModelIotSiteWiseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotSiteWiseOutput)
}

func (i DetectorModelIotSiteWiseArgs) ToDetectorModelIotSiteWisePtrOutput() DetectorModelIotSiteWisePtrOutput {
	return i.ToDetectorModelIotSiteWisePtrOutputWithContext(context.Background())
}

func (i DetectorModelIotSiteWiseArgs) ToDetectorModelIotSiteWisePtrOutputWithContext(ctx context.Context) DetectorModelIotSiteWisePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotSiteWiseOutput).ToDetectorModelIotSiteWisePtrOutputWithContext(ctx)
}

// DetectorModelIotSiteWisePtrInput is an input type that accepts DetectorModelIotSiteWiseArgs, DetectorModelIotSiteWisePtr and DetectorModelIotSiteWisePtrOutput values.
// You can construct a concrete instance of `DetectorModelIotSiteWisePtrInput` via:
//
//          DetectorModelIotSiteWiseArgs{...}
//
//  or:
//
//          nil
type DetectorModelIotSiteWisePtrInput interface {
	pulumi.Input

	ToDetectorModelIotSiteWisePtrOutput() DetectorModelIotSiteWisePtrOutput
	ToDetectorModelIotSiteWisePtrOutputWithContext(context.Context) DetectorModelIotSiteWisePtrOutput
}

type detectorModelIotSiteWisePtrType DetectorModelIotSiteWiseArgs

func DetectorModelIotSiteWisePtr(v *DetectorModelIotSiteWiseArgs) DetectorModelIotSiteWisePtrInput {
	return (*detectorModelIotSiteWisePtrType)(v)
}

func (*detectorModelIotSiteWisePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelIotSiteWise)(nil)).Elem()
}

func (i *detectorModelIotSiteWisePtrType) ToDetectorModelIotSiteWisePtrOutput() DetectorModelIotSiteWisePtrOutput {
	return i.ToDetectorModelIotSiteWisePtrOutputWithContext(context.Background())
}

func (i *detectorModelIotSiteWisePtrType) ToDetectorModelIotSiteWisePtrOutputWithContext(ctx context.Context) DetectorModelIotSiteWisePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotSiteWisePtrOutput)
}

// Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.
type DetectorModelIotSiteWiseOutput struct{ *pulumi.OutputState }

func (DetectorModelIotSiteWiseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelIotSiteWise)(nil)).Elem()
}

func (o DetectorModelIotSiteWiseOutput) ToDetectorModelIotSiteWiseOutput() DetectorModelIotSiteWiseOutput {
	return o
}

func (o DetectorModelIotSiteWiseOutput) ToDetectorModelIotSiteWiseOutputWithContext(ctx context.Context) DetectorModelIotSiteWiseOutput {
	return o
}

func (o DetectorModelIotSiteWiseOutput) ToDetectorModelIotSiteWisePtrOutput() DetectorModelIotSiteWisePtrOutput {
	return o.ToDetectorModelIotSiteWisePtrOutputWithContext(context.Background())
}

func (o DetectorModelIotSiteWiseOutput) ToDetectorModelIotSiteWisePtrOutputWithContext(ctx context.Context) DetectorModelIotSiteWisePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelIotSiteWise) *DetectorModelIotSiteWise {
		return &v
	}).(DetectorModelIotSiteWisePtrOutput)
}

// The ID of the asset that has the specified property. You can specify an expression.
func (o DetectorModelIotSiteWiseOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelIotSiteWise) *string { return v.AssetId }).(pulumi.StringPtrOutput)
}

// A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression.
func (o DetectorModelIotSiteWiseOutput) EntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelIotSiteWise) *string { return v.EntryId }).(pulumi.StringPtrOutput)
}

// The alias of the asset property. You can also specify an expression.
func (o DetectorModelIotSiteWiseOutput) PropertyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelIotSiteWise) *string { return v.PropertyAlias }).(pulumi.StringPtrOutput)
}

// The ID of the asset property. You can specify an expression.
func (o DetectorModelIotSiteWiseOutput) PropertyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelIotSiteWise) *string { return v.PropertyId }).(pulumi.StringPtrOutput)
}

func (o DetectorModelIotSiteWiseOutput) PropertyValue() DetectorModelAssetPropertyValueOutput {
	return o.ApplyT(func(v DetectorModelIotSiteWise) DetectorModelAssetPropertyValue { return v.PropertyValue }).(DetectorModelAssetPropertyValueOutput)
}

type DetectorModelIotSiteWisePtrOutput struct{ *pulumi.OutputState }

func (DetectorModelIotSiteWisePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelIotSiteWise)(nil)).Elem()
}

func (o DetectorModelIotSiteWisePtrOutput) ToDetectorModelIotSiteWisePtrOutput() DetectorModelIotSiteWisePtrOutput {
	return o
}

func (o DetectorModelIotSiteWisePtrOutput) ToDetectorModelIotSiteWisePtrOutputWithContext(ctx context.Context) DetectorModelIotSiteWisePtrOutput {
	return o
}

func (o DetectorModelIotSiteWisePtrOutput) Elem() DetectorModelIotSiteWiseOutput {
	return o.ApplyT(func(v *DetectorModelIotSiteWise) DetectorModelIotSiteWise {
		if v != nil {
			return *v
		}
		var ret DetectorModelIotSiteWise
		return ret
	}).(DetectorModelIotSiteWiseOutput)
}

// The ID of the asset that has the specified property. You can specify an expression.
func (o DetectorModelIotSiteWisePtrOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotSiteWise) *string {
		if v == nil {
			return nil
		}
		return v.AssetId
	}).(pulumi.StringPtrOutput)
}

// A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression.
func (o DetectorModelIotSiteWisePtrOutput) EntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotSiteWise) *string {
		if v == nil {
			return nil
		}
		return v.EntryId
	}).(pulumi.StringPtrOutput)
}

// The alias of the asset property. You can also specify an expression.
func (o DetectorModelIotSiteWisePtrOutput) PropertyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotSiteWise) *string {
		if v == nil {
			return nil
		}
		return v.PropertyAlias
	}).(pulumi.StringPtrOutput)
}

// The ID of the asset property. You can specify an expression.
func (o DetectorModelIotSiteWisePtrOutput) PropertyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotSiteWise) *string {
		if v == nil {
			return nil
		}
		return v.PropertyId
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelIotSiteWisePtrOutput) PropertyValue() DetectorModelAssetPropertyValuePtrOutput {
	return o.ApplyT(func(v *DetectorModelIotSiteWise) *DetectorModelAssetPropertyValue {
		if v == nil {
			return nil
		}
		return &v.PropertyValue
	}).(DetectorModelAssetPropertyValuePtrOutput)
}

// Information required to publish the MQTT message through the AWS IoT message broker.
type DetectorModelIotTopicPublish struct {
	// The MQTT topic of the message. You can use a string expression that includes variables (`$variable.<variable-name>`) and input values (`$input.<input-name>.<path-to-datum>`) as the topic string.
	MqttTopic string                `pulumi:"mqttTopic"`
	Payload   *DetectorModelPayload `pulumi:"payload"`
}

// DetectorModelIotTopicPublishInput is an input type that accepts DetectorModelIotTopicPublishArgs and DetectorModelIotTopicPublishOutput values.
// You can construct a concrete instance of `DetectorModelIotTopicPublishInput` via:
//
//          DetectorModelIotTopicPublishArgs{...}
type DetectorModelIotTopicPublishInput interface {
	pulumi.Input

	ToDetectorModelIotTopicPublishOutput() DetectorModelIotTopicPublishOutput
	ToDetectorModelIotTopicPublishOutputWithContext(context.Context) DetectorModelIotTopicPublishOutput
}

// Information required to publish the MQTT message through the AWS IoT message broker.
type DetectorModelIotTopicPublishArgs struct {
	// The MQTT topic of the message. You can use a string expression that includes variables (`$variable.<variable-name>`) and input values (`$input.<input-name>.<path-to-datum>`) as the topic string.
	MqttTopic pulumi.StringInput           `pulumi:"mqttTopic"`
	Payload   DetectorModelPayloadPtrInput `pulumi:"payload"`
}

func (DetectorModelIotTopicPublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelIotTopicPublish)(nil)).Elem()
}

func (i DetectorModelIotTopicPublishArgs) ToDetectorModelIotTopicPublishOutput() DetectorModelIotTopicPublishOutput {
	return i.ToDetectorModelIotTopicPublishOutputWithContext(context.Background())
}

func (i DetectorModelIotTopicPublishArgs) ToDetectorModelIotTopicPublishOutputWithContext(ctx context.Context) DetectorModelIotTopicPublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotTopicPublishOutput)
}

func (i DetectorModelIotTopicPublishArgs) ToDetectorModelIotTopicPublishPtrOutput() DetectorModelIotTopicPublishPtrOutput {
	return i.ToDetectorModelIotTopicPublishPtrOutputWithContext(context.Background())
}

func (i DetectorModelIotTopicPublishArgs) ToDetectorModelIotTopicPublishPtrOutputWithContext(ctx context.Context) DetectorModelIotTopicPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotTopicPublishOutput).ToDetectorModelIotTopicPublishPtrOutputWithContext(ctx)
}

// DetectorModelIotTopicPublishPtrInput is an input type that accepts DetectorModelIotTopicPublishArgs, DetectorModelIotTopicPublishPtr and DetectorModelIotTopicPublishPtrOutput values.
// You can construct a concrete instance of `DetectorModelIotTopicPublishPtrInput` via:
//
//          DetectorModelIotTopicPublishArgs{...}
//
//  or:
//
//          nil
type DetectorModelIotTopicPublishPtrInput interface {
	pulumi.Input

	ToDetectorModelIotTopicPublishPtrOutput() DetectorModelIotTopicPublishPtrOutput
	ToDetectorModelIotTopicPublishPtrOutputWithContext(context.Context) DetectorModelIotTopicPublishPtrOutput
}

type detectorModelIotTopicPublishPtrType DetectorModelIotTopicPublishArgs

func DetectorModelIotTopicPublishPtr(v *DetectorModelIotTopicPublishArgs) DetectorModelIotTopicPublishPtrInput {
	return (*detectorModelIotTopicPublishPtrType)(v)
}

func (*detectorModelIotTopicPublishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelIotTopicPublish)(nil)).Elem()
}

func (i *detectorModelIotTopicPublishPtrType) ToDetectorModelIotTopicPublishPtrOutput() DetectorModelIotTopicPublishPtrOutput {
	return i.ToDetectorModelIotTopicPublishPtrOutputWithContext(context.Background())
}

func (i *detectorModelIotTopicPublishPtrType) ToDetectorModelIotTopicPublishPtrOutputWithContext(ctx context.Context) DetectorModelIotTopicPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelIotTopicPublishPtrOutput)
}

// Information required to publish the MQTT message through the AWS IoT message broker.
type DetectorModelIotTopicPublishOutput struct{ *pulumi.OutputState }

func (DetectorModelIotTopicPublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelIotTopicPublish)(nil)).Elem()
}

func (o DetectorModelIotTopicPublishOutput) ToDetectorModelIotTopicPublishOutput() DetectorModelIotTopicPublishOutput {
	return o
}

func (o DetectorModelIotTopicPublishOutput) ToDetectorModelIotTopicPublishOutputWithContext(ctx context.Context) DetectorModelIotTopicPublishOutput {
	return o
}

func (o DetectorModelIotTopicPublishOutput) ToDetectorModelIotTopicPublishPtrOutput() DetectorModelIotTopicPublishPtrOutput {
	return o.ToDetectorModelIotTopicPublishPtrOutputWithContext(context.Background())
}

func (o DetectorModelIotTopicPublishOutput) ToDetectorModelIotTopicPublishPtrOutputWithContext(ctx context.Context) DetectorModelIotTopicPublishPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelIotTopicPublish) *DetectorModelIotTopicPublish {
		return &v
	}).(DetectorModelIotTopicPublishPtrOutput)
}

// The MQTT topic of the message. You can use a string expression that includes variables (`$variable.<variable-name>`) and input values (`$input.<input-name>.<path-to-datum>`) as the topic string.
func (o DetectorModelIotTopicPublishOutput) MqttTopic() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelIotTopicPublish) string { return v.MqttTopic }).(pulumi.StringOutput)
}

func (o DetectorModelIotTopicPublishOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelIotTopicPublish) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

type DetectorModelIotTopicPublishPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelIotTopicPublishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelIotTopicPublish)(nil)).Elem()
}

func (o DetectorModelIotTopicPublishPtrOutput) ToDetectorModelIotTopicPublishPtrOutput() DetectorModelIotTopicPublishPtrOutput {
	return o
}

func (o DetectorModelIotTopicPublishPtrOutput) ToDetectorModelIotTopicPublishPtrOutputWithContext(ctx context.Context) DetectorModelIotTopicPublishPtrOutput {
	return o
}

func (o DetectorModelIotTopicPublishPtrOutput) Elem() DetectorModelIotTopicPublishOutput {
	return o.ApplyT(func(v *DetectorModelIotTopicPublish) DetectorModelIotTopicPublish {
		if v != nil {
			return *v
		}
		var ret DetectorModelIotTopicPublish
		return ret
	}).(DetectorModelIotTopicPublishOutput)
}

// The MQTT topic of the message. You can use a string expression that includes variables (`$variable.<variable-name>`) and input values (`$input.<input-name>.<path-to-datum>`) as the topic string.
func (o DetectorModelIotTopicPublishPtrOutput) MqttTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotTopicPublish) *string {
		if v == nil {
			return nil
		}
		return &v.MqttTopic
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelIotTopicPublishPtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelIotTopicPublish) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

type DetectorModelLambda struct {
	// The ARN of the Lambda function that is executed.
	FunctionArn string                `pulumi:"functionArn"`
	Payload     *DetectorModelPayload `pulumi:"payload"`
}

// DetectorModelLambdaInput is an input type that accepts DetectorModelLambdaArgs and DetectorModelLambdaOutput values.
// You can construct a concrete instance of `DetectorModelLambdaInput` via:
//
//          DetectorModelLambdaArgs{...}
type DetectorModelLambdaInput interface {
	pulumi.Input

	ToDetectorModelLambdaOutput() DetectorModelLambdaOutput
	ToDetectorModelLambdaOutputWithContext(context.Context) DetectorModelLambdaOutput
}

type DetectorModelLambdaArgs struct {
	// The ARN of the Lambda function that is executed.
	FunctionArn pulumi.StringInput           `pulumi:"functionArn"`
	Payload     DetectorModelPayloadPtrInput `pulumi:"payload"`
}

func (DetectorModelLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelLambda)(nil)).Elem()
}

func (i DetectorModelLambdaArgs) ToDetectorModelLambdaOutput() DetectorModelLambdaOutput {
	return i.ToDetectorModelLambdaOutputWithContext(context.Background())
}

func (i DetectorModelLambdaArgs) ToDetectorModelLambdaOutputWithContext(ctx context.Context) DetectorModelLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelLambdaOutput)
}

func (i DetectorModelLambdaArgs) ToDetectorModelLambdaPtrOutput() DetectorModelLambdaPtrOutput {
	return i.ToDetectorModelLambdaPtrOutputWithContext(context.Background())
}

func (i DetectorModelLambdaArgs) ToDetectorModelLambdaPtrOutputWithContext(ctx context.Context) DetectorModelLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelLambdaOutput).ToDetectorModelLambdaPtrOutputWithContext(ctx)
}

// DetectorModelLambdaPtrInput is an input type that accepts DetectorModelLambdaArgs, DetectorModelLambdaPtr and DetectorModelLambdaPtrOutput values.
// You can construct a concrete instance of `DetectorModelLambdaPtrInput` via:
//
//          DetectorModelLambdaArgs{...}
//
//  or:
//
//          nil
type DetectorModelLambdaPtrInput interface {
	pulumi.Input

	ToDetectorModelLambdaPtrOutput() DetectorModelLambdaPtrOutput
	ToDetectorModelLambdaPtrOutputWithContext(context.Context) DetectorModelLambdaPtrOutput
}

type detectorModelLambdaPtrType DetectorModelLambdaArgs

func DetectorModelLambdaPtr(v *DetectorModelLambdaArgs) DetectorModelLambdaPtrInput {
	return (*detectorModelLambdaPtrType)(v)
}

func (*detectorModelLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelLambda)(nil)).Elem()
}

func (i *detectorModelLambdaPtrType) ToDetectorModelLambdaPtrOutput() DetectorModelLambdaPtrOutput {
	return i.ToDetectorModelLambdaPtrOutputWithContext(context.Background())
}

func (i *detectorModelLambdaPtrType) ToDetectorModelLambdaPtrOutputWithContext(ctx context.Context) DetectorModelLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelLambdaPtrOutput)
}

type DetectorModelLambdaOutput struct{ *pulumi.OutputState }

func (DetectorModelLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelLambda)(nil)).Elem()
}

func (o DetectorModelLambdaOutput) ToDetectorModelLambdaOutput() DetectorModelLambdaOutput {
	return o
}

func (o DetectorModelLambdaOutput) ToDetectorModelLambdaOutputWithContext(ctx context.Context) DetectorModelLambdaOutput {
	return o
}

func (o DetectorModelLambdaOutput) ToDetectorModelLambdaPtrOutput() DetectorModelLambdaPtrOutput {
	return o.ToDetectorModelLambdaPtrOutputWithContext(context.Background())
}

func (o DetectorModelLambdaOutput) ToDetectorModelLambdaPtrOutputWithContext(ctx context.Context) DetectorModelLambdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelLambda) *DetectorModelLambda {
		return &v
	}).(DetectorModelLambdaPtrOutput)
}

// The ARN of the Lambda function that is executed.
func (o DetectorModelLambdaOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelLambda) string { return v.FunctionArn }).(pulumi.StringOutput)
}

func (o DetectorModelLambdaOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelLambda) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

type DetectorModelLambdaPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelLambda)(nil)).Elem()
}

func (o DetectorModelLambdaPtrOutput) ToDetectorModelLambdaPtrOutput() DetectorModelLambdaPtrOutput {
	return o
}

func (o DetectorModelLambdaPtrOutput) ToDetectorModelLambdaPtrOutputWithContext(ctx context.Context) DetectorModelLambdaPtrOutput {
	return o
}

func (o DetectorModelLambdaPtrOutput) Elem() DetectorModelLambdaOutput {
	return o.ApplyT(func(v *DetectorModelLambda) DetectorModelLambda {
		if v != nil {
			return *v
		}
		var ret DetectorModelLambda
		return ret
	}).(DetectorModelLambdaOutput)
}

// The ARN of the Lambda function that is executed.
func (o DetectorModelLambdaPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelLambda) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

func (o DetectorModelLambdaPtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelLambda) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// When entering this state, perform these `actions` if the `condition` is `TRUE`.
type DetectorModelOnEnter struct {
	// Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
	Events []DetectorModelEvent `pulumi:"events"`
}

// DetectorModelOnEnterInput is an input type that accepts DetectorModelOnEnterArgs and DetectorModelOnEnterOutput values.
// You can construct a concrete instance of `DetectorModelOnEnterInput` via:
//
//          DetectorModelOnEnterArgs{...}
type DetectorModelOnEnterInput interface {
	pulumi.Input

	ToDetectorModelOnEnterOutput() DetectorModelOnEnterOutput
	ToDetectorModelOnEnterOutputWithContext(context.Context) DetectorModelOnEnterOutput
}

// When entering this state, perform these `actions` if the `condition` is `TRUE`.
type DetectorModelOnEnterArgs struct {
	// Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
	Events DetectorModelEventArrayInput `pulumi:"events"`
}

func (DetectorModelOnEnterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelOnEnter)(nil)).Elem()
}

func (i DetectorModelOnEnterArgs) ToDetectorModelOnEnterOutput() DetectorModelOnEnterOutput {
	return i.ToDetectorModelOnEnterOutputWithContext(context.Background())
}

func (i DetectorModelOnEnterArgs) ToDetectorModelOnEnterOutputWithContext(ctx context.Context) DetectorModelOnEnterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnEnterOutput)
}

func (i DetectorModelOnEnterArgs) ToDetectorModelOnEnterPtrOutput() DetectorModelOnEnterPtrOutput {
	return i.ToDetectorModelOnEnterPtrOutputWithContext(context.Background())
}

func (i DetectorModelOnEnterArgs) ToDetectorModelOnEnterPtrOutputWithContext(ctx context.Context) DetectorModelOnEnterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnEnterOutput).ToDetectorModelOnEnterPtrOutputWithContext(ctx)
}

// DetectorModelOnEnterPtrInput is an input type that accepts DetectorModelOnEnterArgs, DetectorModelOnEnterPtr and DetectorModelOnEnterPtrOutput values.
// You can construct a concrete instance of `DetectorModelOnEnterPtrInput` via:
//
//          DetectorModelOnEnterArgs{...}
//
//  or:
//
//          nil
type DetectorModelOnEnterPtrInput interface {
	pulumi.Input

	ToDetectorModelOnEnterPtrOutput() DetectorModelOnEnterPtrOutput
	ToDetectorModelOnEnterPtrOutputWithContext(context.Context) DetectorModelOnEnterPtrOutput
}

type detectorModelOnEnterPtrType DetectorModelOnEnterArgs

func DetectorModelOnEnterPtr(v *DetectorModelOnEnterArgs) DetectorModelOnEnterPtrInput {
	return (*detectorModelOnEnterPtrType)(v)
}

func (*detectorModelOnEnterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelOnEnter)(nil)).Elem()
}

func (i *detectorModelOnEnterPtrType) ToDetectorModelOnEnterPtrOutput() DetectorModelOnEnterPtrOutput {
	return i.ToDetectorModelOnEnterPtrOutputWithContext(context.Background())
}

func (i *detectorModelOnEnterPtrType) ToDetectorModelOnEnterPtrOutputWithContext(ctx context.Context) DetectorModelOnEnterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnEnterPtrOutput)
}

// When entering this state, perform these `actions` if the `condition` is `TRUE`.
type DetectorModelOnEnterOutput struct{ *pulumi.OutputState }

func (DetectorModelOnEnterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelOnEnter)(nil)).Elem()
}

func (o DetectorModelOnEnterOutput) ToDetectorModelOnEnterOutput() DetectorModelOnEnterOutput {
	return o
}

func (o DetectorModelOnEnterOutput) ToDetectorModelOnEnterOutputWithContext(ctx context.Context) DetectorModelOnEnterOutput {
	return o
}

func (o DetectorModelOnEnterOutput) ToDetectorModelOnEnterPtrOutput() DetectorModelOnEnterPtrOutput {
	return o.ToDetectorModelOnEnterPtrOutputWithContext(context.Background())
}

func (o DetectorModelOnEnterOutput) ToDetectorModelOnEnterPtrOutputWithContext(ctx context.Context) DetectorModelOnEnterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelOnEnter) *DetectorModelOnEnter {
		return &v
	}).(DetectorModelOnEnterPtrOutput)
}

// Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
func (o DetectorModelOnEnterOutput) Events() DetectorModelEventArrayOutput {
	return o.ApplyT(func(v DetectorModelOnEnter) []DetectorModelEvent { return v.Events }).(DetectorModelEventArrayOutput)
}

type DetectorModelOnEnterPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelOnEnterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelOnEnter)(nil)).Elem()
}

func (o DetectorModelOnEnterPtrOutput) ToDetectorModelOnEnterPtrOutput() DetectorModelOnEnterPtrOutput {
	return o
}

func (o DetectorModelOnEnterPtrOutput) ToDetectorModelOnEnterPtrOutputWithContext(ctx context.Context) DetectorModelOnEnterPtrOutput {
	return o
}

func (o DetectorModelOnEnterPtrOutput) Elem() DetectorModelOnEnterOutput {
	return o.ApplyT(func(v *DetectorModelOnEnter) DetectorModelOnEnter {
		if v != nil {
			return *v
		}
		var ret DetectorModelOnEnter
		return ret
	}).(DetectorModelOnEnterOutput)
}

// Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
func (o DetectorModelOnEnterPtrOutput) Events() DetectorModelEventArrayOutput {
	return o.ApplyT(func(v *DetectorModelOnEnter) []DetectorModelEvent {
		if v == nil {
			return nil
		}
		return v.Events
	}).(DetectorModelEventArrayOutput)
}

// When exiting this state, perform these `actions` if the specified `condition` is `TRUE`.
type DetectorModelOnExit struct {
	// Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`.
	Events []DetectorModelEvent `pulumi:"events"`
}

// DetectorModelOnExitInput is an input type that accepts DetectorModelOnExitArgs and DetectorModelOnExitOutput values.
// You can construct a concrete instance of `DetectorModelOnExitInput` via:
//
//          DetectorModelOnExitArgs{...}
type DetectorModelOnExitInput interface {
	pulumi.Input

	ToDetectorModelOnExitOutput() DetectorModelOnExitOutput
	ToDetectorModelOnExitOutputWithContext(context.Context) DetectorModelOnExitOutput
}

// When exiting this state, perform these `actions` if the specified `condition` is `TRUE`.
type DetectorModelOnExitArgs struct {
	// Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`.
	Events DetectorModelEventArrayInput `pulumi:"events"`
}

func (DetectorModelOnExitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelOnExit)(nil)).Elem()
}

func (i DetectorModelOnExitArgs) ToDetectorModelOnExitOutput() DetectorModelOnExitOutput {
	return i.ToDetectorModelOnExitOutputWithContext(context.Background())
}

func (i DetectorModelOnExitArgs) ToDetectorModelOnExitOutputWithContext(ctx context.Context) DetectorModelOnExitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnExitOutput)
}

func (i DetectorModelOnExitArgs) ToDetectorModelOnExitPtrOutput() DetectorModelOnExitPtrOutput {
	return i.ToDetectorModelOnExitPtrOutputWithContext(context.Background())
}

func (i DetectorModelOnExitArgs) ToDetectorModelOnExitPtrOutputWithContext(ctx context.Context) DetectorModelOnExitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnExitOutput).ToDetectorModelOnExitPtrOutputWithContext(ctx)
}

// DetectorModelOnExitPtrInput is an input type that accepts DetectorModelOnExitArgs, DetectorModelOnExitPtr and DetectorModelOnExitPtrOutput values.
// You can construct a concrete instance of `DetectorModelOnExitPtrInput` via:
//
//          DetectorModelOnExitArgs{...}
//
//  or:
//
//          nil
type DetectorModelOnExitPtrInput interface {
	pulumi.Input

	ToDetectorModelOnExitPtrOutput() DetectorModelOnExitPtrOutput
	ToDetectorModelOnExitPtrOutputWithContext(context.Context) DetectorModelOnExitPtrOutput
}

type detectorModelOnExitPtrType DetectorModelOnExitArgs

func DetectorModelOnExitPtr(v *DetectorModelOnExitArgs) DetectorModelOnExitPtrInput {
	return (*detectorModelOnExitPtrType)(v)
}

func (*detectorModelOnExitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelOnExit)(nil)).Elem()
}

func (i *detectorModelOnExitPtrType) ToDetectorModelOnExitPtrOutput() DetectorModelOnExitPtrOutput {
	return i.ToDetectorModelOnExitPtrOutputWithContext(context.Background())
}

func (i *detectorModelOnExitPtrType) ToDetectorModelOnExitPtrOutputWithContext(ctx context.Context) DetectorModelOnExitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnExitPtrOutput)
}

// When exiting this state, perform these `actions` if the specified `condition` is `TRUE`.
type DetectorModelOnExitOutput struct{ *pulumi.OutputState }

func (DetectorModelOnExitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelOnExit)(nil)).Elem()
}

func (o DetectorModelOnExitOutput) ToDetectorModelOnExitOutput() DetectorModelOnExitOutput {
	return o
}

func (o DetectorModelOnExitOutput) ToDetectorModelOnExitOutputWithContext(ctx context.Context) DetectorModelOnExitOutput {
	return o
}

func (o DetectorModelOnExitOutput) ToDetectorModelOnExitPtrOutput() DetectorModelOnExitPtrOutput {
	return o.ToDetectorModelOnExitPtrOutputWithContext(context.Background())
}

func (o DetectorModelOnExitOutput) ToDetectorModelOnExitPtrOutputWithContext(ctx context.Context) DetectorModelOnExitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelOnExit) *DetectorModelOnExit {
		return &v
	}).(DetectorModelOnExitPtrOutput)
}

// Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`.
func (o DetectorModelOnExitOutput) Events() DetectorModelEventArrayOutput {
	return o.ApplyT(func(v DetectorModelOnExit) []DetectorModelEvent { return v.Events }).(DetectorModelEventArrayOutput)
}

type DetectorModelOnExitPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelOnExitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelOnExit)(nil)).Elem()
}

func (o DetectorModelOnExitPtrOutput) ToDetectorModelOnExitPtrOutput() DetectorModelOnExitPtrOutput {
	return o
}

func (o DetectorModelOnExitPtrOutput) ToDetectorModelOnExitPtrOutputWithContext(ctx context.Context) DetectorModelOnExitPtrOutput {
	return o
}

func (o DetectorModelOnExitPtrOutput) Elem() DetectorModelOnExitOutput {
	return o.ApplyT(func(v *DetectorModelOnExit) DetectorModelOnExit {
		if v != nil {
			return *v
		}
		var ret DetectorModelOnExit
		return ret
	}).(DetectorModelOnExitOutput)
}

// Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`.
func (o DetectorModelOnExitPtrOutput) Events() DetectorModelEventArrayOutput {
	return o.ApplyT(func(v *DetectorModelOnExit) []DetectorModelEvent {
		if v == nil {
			return nil
		}
		return v.Events
	}).(DetectorModelEventArrayOutput)
}

// When an input is received and the `condition` is `TRUE`, perform the specified `actions`.
type DetectorModelOnInput struct {
	// Specifies the `actions` performed when the `condition` evaluates to `TRUE`.
	Events []DetectorModelEvent `pulumi:"events"`
	// Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.
	TransitionEvents []DetectorModelTransitionEvent `pulumi:"transitionEvents"`
}

// DetectorModelOnInputInput is an input type that accepts DetectorModelOnInputArgs and DetectorModelOnInputOutput values.
// You can construct a concrete instance of `DetectorModelOnInputInput` via:
//
//          DetectorModelOnInputArgs{...}
type DetectorModelOnInputInput interface {
	pulumi.Input

	ToDetectorModelOnInputOutput() DetectorModelOnInputOutput
	ToDetectorModelOnInputOutputWithContext(context.Context) DetectorModelOnInputOutput
}

// When an input is received and the `condition` is `TRUE`, perform the specified `actions`.
type DetectorModelOnInputArgs struct {
	// Specifies the `actions` performed when the `condition` evaluates to `TRUE`.
	Events DetectorModelEventArrayInput `pulumi:"events"`
	// Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.
	TransitionEvents DetectorModelTransitionEventArrayInput `pulumi:"transitionEvents"`
}

func (DetectorModelOnInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelOnInput)(nil)).Elem()
}

func (i DetectorModelOnInputArgs) ToDetectorModelOnInputOutput() DetectorModelOnInputOutput {
	return i.ToDetectorModelOnInputOutputWithContext(context.Background())
}

func (i DetectorModelOnInputArgs) ToDetectorModelOnInputOutputWithContext(ctx context.Context) DetectorModelOnInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnInputOutput)
}

func (i DetectorModelOnInputArgs) ToDetectorModelOnInputPtrOutput() DetectorModelOnInputPtrOutput {
	return i.ToDetectorModelOnInputPtrOutputWithContext(context.Background())
}

func (i DetectorModelOnInputArgs) ToDetectorModelOnInputPtrOutputWithContext(ctx context.Context) DetectorModelOnInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnInputOutput).ToDetectorModelOnInputPtrOutputWithContext(ctx)
}

// DetectorModelOnInputPtrInput is an input type that accepts DetectorModelOnInputArgs, DetectorModelOnInputPtr and DetectorModelOnInputPtrOutput values.
// You can construct a concrete instance of `DetectorModelOnInputPtrInput` via:
//
//          DetectorModelOnInputArgs{...}
//
//  or:
//
//          nil
type DetectorModelOnInputPtrInput interface {
	pulumi.Input

	ToDetectorModelOnInputPtrOutput() DetectorModelOnInputPtrOutput
	ToDetectorModelOnInputPtrOutputWithContext(context.Context) DetectorModelOnInputPtrOutput
}

type detectorModelOnInputPtrType DetectorModelOnInputArgs

func DetectorModelOnInputPtr(v *DetectorModelOnInputArgs) DetectorModelOnInputPtrInput {
	return (*detectorModelOnInputPtrType)(v)
}

func (*detectorModelOnInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelOnInput)(nil)).Elem()
}

func (i *detectorModelOnInputPtrType) ToDetectorModelOnInputPtrOutput() DetectorModelOnInputPtrOutput {
	return i.ToDetectorModelOnInputPtrOutputWithContext(context.Background())
}

func (i *detectorModelOnInputPtrType) ToDetectorModelOnInputPtrOutputWithContext(ctx context.Context) DetectorModelOnInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOnInputPtrOutput)
}

// When an input is received and the `condition` is `TRUE`, perform the specified `actions`.
type DetectorModelOnInputOutput struct{ *pulumi.OutputState }

func (DetectorModelOnInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelOnInput)(nil)).Elem()
}

func (o DetectorModelOnInputOutput) ToDetectorModelOnInputOutput() DetectorModelOnInputOutput {
	return o
}

func (o DetectorModelOnInputOutput) ToDetectorModelOnInputOutputWithContext(ctx context.Context) DetectorModelOnInputOutput {
	return o
}

func (o DetectorModelOnInputOutput) ToDetectorModelOnInputPtrOutput() DetectorModelOnInputPtrOutput {
	return o.ToDetectorModelOnInputPtrOutputWithContext(context.Background())
}

func (o DetectorModelOnInputOutput) ToDetectorModelOnInputPtrOutputWithContext(ctx context.Context) DetectorModelOnInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelOnInput) *DetectorModelOnInput {
		return &v
	}).(DetectorModelOnInputPtrOutput)
}

// Specifies the `actions` performed when the `condition` evaluates to `TRUE`.
func (o DetectorModelOnInputOutput) Events() DetectorModelEventArrayOutput {
	return o.ApplyT(func(v DetectorModelOnInput) []DetectorModelEvent { return v.Events }).(DetectorModelEventArrayOutput)
}

// Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.
func (o DetectorModelOnInputOutput) TransitionEvents() DetectorModelTransitionEventArrayOutput {
	return o.ApplyT(func(v DetectorModelOnInput) []DetectorModelTransitionEvent { return v.TransitionEvents }).(DetectorModelTransitionEventArrayOutput)
}

type DetectorModelOnInputPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelOnInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelOnInput)(nil)).Elem()
}

func (o DetectorModelOnInputPtrOutput) ToDetectorModelOnInputPtrOutput() DetectorModelOnInputPtrOutput {
	return o
}

func (o DetectorModelOnInputPtrOutput) ToDetectorModelOnInputPtrOutputWithContext(ctx context.Context) DetectorModelOnInputPtrOutput {
	return o
}

func (o DetectorModelOnInputPtrOutput) Elem() DetectorModelOnInputOutput {
	return o.ApplyT(func(v *DetectorModelOnInput) DetectorModelOnInput {
		if v != nil {
			return *v
		}
		var ret DetectorModelOnInput
		return ret
	}).(DetectorModelOnInputOutput)
}

// Specifies the `actions` performed when the `condition` evaluates to `TRUE`.
func (o DetectorModelOnInputPtrOutput) Events() DetectorModelEventArrayOutput {
	return o.ApplyT(func(v *DetectorModelOnInput) []DetectorModelEvent {
		if v == nil {
			return nil
		}
		return v.Events
	}).(DetectorModelEventArrayOutput)
}

// Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.
func (o DetectorModelOnInputPtrOutput) TransitionEvents() DetectorModelTransitionEventArrayOutput {
	return o.ApplyT(func(v *DetectorModelOnInput) []DetectorModelTransitionEvent {
		if v == nil {
			return nil
		}
		return v.TransitionEvents
	}).(DetectorModelTransitionEventArrayOutput)
}

// Information needed to configure the payload.
//
// By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use `contentExpression`.
type DetectorModelPayload struct {
	// The content of the payload. You can use a string expression that includes quoted strings (`'<string>'`), variables (`$variable.<variable-name>`), input values (`$input.<input-name>.<path-to-datum>`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB.
	ContentExpression string `pulumi:"contentExpression"`
	// The value of the payload type can be either `STRING` or `JSON`.
	Type string `pulumi:"type"`
}

// DetectorModelPayloadInput is an input type that accepts DetectorModelPayloadArgs and DetectorModelPayloadOutput values.
// You can construct a concrete instance of `DetectorModelPayloadInput` via:
//
//          DetectorModelPayloadArgs{...}
type DetectorModelPayloadInput interface {
	pulumi.Input

	ToDetectorModelPayloadOutput() DetectorModelPayloadOutput
	ToDetectorModelPayloadOutputWithContext(context.Context) DetectorModelPayloadOutput
}

// Information needed to configure the payload.
//
// By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use `contentExpression`.
type DetectorModelPayloadArgs struct {
	// The content of the payload. You can use a string expression that includes quoted strings (`'<string>'`), variables (`$variable.<variable-name>`), input values (`$input.<input-name>.<path-to-datum>`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB.
	ContentExpression pulumi.StringInput `pulumi:"contentExpression"`
	// The value of the payload type can be either `STRING` or `JSON`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DetectorModelPayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelPayload)(nil)).Elem()
}

func (i DetectorModelPayloadArgs) ToDetectorModelPayloadOutput() DetectorModelPayloadOutput {
	return i.ToDetectorModelPayloadOutputWithContext(context.Background())
}

func (i DetectorModelPayloadArgs) ToDetectorModelPayloadOutputWithContext(ctx context.Context) DetectorModelPayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelPayloadOutput)
}

func (i DetectorModelPayloadArgs) ToDetectorModelPayloadPtrOutput() DetectorModelPayloadPtrOutput {
	return i.ToDetectorModelPayloadPtrOutputWithContext(context.Background())
}

func (i DetectorModelPayloadArgs) ToDetectorModelPayloadPtrOutputWithContext(ctx context.Context) DetectorModelPayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelPayloadOutput).ToDetectorModelPayloadPtrOutputWithContext(ctx)
}

// DetectorModelPayloadPtrInput is an input type that accepts DetectorModelPayloadArgs, DetectorModelPayloadPtr and DetectorModelPayloadPtrOutput values.
// You can construct a concrete instance of `DetectorModelPayloadPtrInput` via:
//
//          DetectorModelPayloadArgs{...}
//
//  or:
//
//          nil
type DetectorModelPayloadPtrInput interface {
	pulumi.Input

	ToDetectorModelPayloadPtrOutput() DetectorModelPayloadPtrOutput
	ToDetectorModelPayloadPtrOutputWithContext(context.Context) DetectorModelPayloadPtrOutput
}

type detectorModelPayloadPtrType DetectorModelPayloadArgs

func DetectorModelPayloadPtr(v *DetectorModelPayloadArgs) DetectorModelPayloadPtrInput {
	return (*detectorModelPayloadPtrType)(v)
}

func (*detectorModelPayloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelPayload)(nil)).Elem()
}

func (i *detectorModelPayloadPtrType) ToDetectorModelPayloadPtrOutput() DetectorModelPayloadPtrOutput {
	return i.ToDetectorModelPayloadPtrOutputWithContext(context.Background())
}

func (i *detectorModelPayloadPtrType) ToDetectorModelPayloadPtrOutputWithContext(ctx context.Context) DetectorModelPayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelPayloadPtrOutput)
}

// Information needed to configure the payload.
//
// By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use `contentExpression`.
type DetectorModelPayloadOutput struct{ *pulumi.OutputState }

func (DetectorModelPayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelPayload)(nil)).Elem()
}

func (o DetectorModelPayloadOutput) ToDetectorModelPayloadOutput() DetectorModelPayloadOutput {
	return o
}

func (o DetectorModelPayloadOutput) ToDetectorModelPayloadOutputWithContext(ctx context.Context) DetectorModelPayloadOutput {
	return o
}

func (o DetectorModelPayloadOutput) ToDetectorModelPayloadPtrOutput() DetectorModelPayloadPtrOutput {
	return o.ToDetectorModelPayloadPtrOutputWithContext(context.Background())
}

func (o DetectorModelPayloadOutput) ToDetectorModelPayloadPtrOutputWithContext(ctx context.Context) DetectorModelPayloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelPayload) *DetectorModelPayload {
		return &v
	}).(DetectorModelPayloadPtrOutput)
}

// The content of the payload. You can use a string expression that includes quoted strings (`'<string>'`), variables (`$variable.<variable-name>`), input values (`$input.<input-name>.<path-to-datum>`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB.
func (o DetectorModelPayloadOutput) ContentExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelPayload) string { return v.ContentExpression }).(pulumi.StringOutput)
}

// The value of the payload type can be either `STRING` or `JSON`.
func (o DetectorModelPayloadOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelPayload) string { return v.Type }).(pulumi.StringOutput)
}

type DetectorModelPayloadPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelPayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelPayload)(nil)).Elem()
}

func (o DetectorModelPayloadPtrOutput) ToDetectorModelPayloadPtrOutput() DetectorModelPayloadPtrOutput {
	return o
}

func (o DetectorModelPayloadPtrOutput) ToDetectorModelPayloadPtrOutputWithContext(ctx context.Context) DetectorModelPayloadPtrOutput {
	return o
}

func (o DetectorModelPayloadPtrOutput) Elem() DetectorModelPayloadOutput {
	return o.ApplyT(func(v *DetectorModelPayload) DetectorModelPayload {
		if v != nil {
			return *v
		}
		var ret DetectorModelPayload
		return ret
	}).(DetectorModelPayloadOutput)
}

// The content of the payload. You can use a string expression that includes quoted strings (`'<string>'`), variables (`$variable.<variable-name>`), input values (`$input.<input-name>.<path-to-datum>`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB.
func (o DetectorModelPayloadPtrOutput) ContentExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelPayload) *string {
		if v == nil {
			return nil
		}
		return &v.ContentExpression
	}).(pulumi.StringPtrOutput)
}

// The value of the payload type can be either `STRING` or `JSON`.
func (o DetectorModelPayloadPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelPayload) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Information required to reset the timer. The timer is reset to the previously evaluated result of the duration. The duration expression isn't reevaluated when you reset the timer.
type DetectorModelResetTimer struct {
	// The name of the timer to reset.
	TimerName string `pulumi:"timerName"`
}

// DetectorModelResetTimerInput is an input type that accepts DetectorModelResetTimerArgs and DetectorModelResetTimerOutput values.
// You can construct a concrete instance of `DetectorModelResetTimerInput` via:
//
//          DetectorModelResetTimerArgs{...}
type DetectorModelResetTimerInput interface {
	pulumi.Input

	ToDetectorModelResetTimerOutput() DetectorModelResetTimerOutput
	ToDetectorModelResetTimerOutputWithContext(context.Context) DetectorModelResetTimerOutput
}

// Information required to reset the timer. The timer is reset to the previously evaluated result of the duration. The duration expression isn't reevaluated when you reset the timer.
type DetectorModelResetTimerArgs struct {
	// The name of the timer to reset.
	TimerName pulumi.StringInput `pulumi:"timerName"`
}

func (DetectorModelResetTimerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelResetTimer)(nil)).Elem()
}

func (i DetectorModelResetTimerArgs) ToDetectorModelResetTimerOutput() DetectorModelResetTimerOutput {
	return i.ToDetectorModelResetTimerOutputWithContext(context.Background())
}

func (i DetectorModelResetTimerArgs) ToDetectorModelResetTimerOutputWithContext(ctx context.Context) DetectorModelResetTimerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelResetTimerOutput)
}

func (i DetectorModelResetTimerArgs) ToDetectorModelResetTimerPtrOutput() DetectorModelResetTimerPtrOutput {
	return i.ToDetectorModelResetTimerPtrOutputWithContext(context.Background())
}

func (i DetectorModelResetTimerArgs) ToDetectorModelResetTimerPtrOutputWithContext(ctx context.Context) DetectorModelResetTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelResetTimerOutput).ToDetectorModelResetTimerPtrOutputWithContext(ctx)
}

// DetectorModelResetTimerPtrInput is an input type that accepts DetectorModelResetTimerArgs, DetectorModelResetTimerPtr and DetectorModelResetTimerPtrOutput values.
// You can construct a concrete instance of `DetectorModelResetTimerPtrInput` via:
//
//          DetectorModelResetTimerArgs{...}
//
//  or:
//
//          nil
type DetectorModelResetTimerPtrInput interface {
	pulumi.Input

	ToDetectorModelResetTimerPtrOutput() DetectorModelResetTimerPtrOutput
	ToDetectorModelResetTimerPtrOutputWithContext(context.Context) DetectorModelResetTimerPtrOutput
}

type detectorModelResetTimerPtrType DetectorModelResetTimerArgs

func DetectorModelResetTimerPtr(v *DetectorModelResetTimerArgs) DetectorModelResetTimerPtrInput {
	return (*detectorModelResetTimerPtrType)(v)
}

func (*detectorModelResetTimerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelResetTimer)(nil)).Elem()
}

func (i *detectorModelResetTimerPtrType) ToDetectorModelResetTimerPtrOutput() DetectorModelResetTimerPtrOutput {
	return i.ToDetectorModelResetTimerPtrOutputWithContext(context.Background())
}

func (i *detectorModelResetTimerPtrType) ToDetectorModelResetTimerPtrOutputWithContext(ctx context.Context) DetectorModelResetTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelResetTimerPtrOutput)
}

// Information required to reset the timer. The timer is reset to the previously evaluated result of the duration. The duration expression isn't reevaluated when you reset the timer.
type DetectorModelResetTimerOutput struct{ *pulumi.OutputState }

func (DetectorModelResetTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelResetTimer)(nil)).Elem()
}

func (o DetectorModelResetTimerOutput) ToDetectorModelResetTimerOutput() DetectorModelResetTimerOutput {
	return o
}

func (o DetectorModelResetTimerOutput) ToDetectorModelResetTimerOutputWithContext(ctx context.Context) DetectorModelResetTimerOutput {
	return o
}

func (o DetectorModelResetTimerOutput) ToDetectorModelResetTimerPtrOutput() DetectorModelResetTimerPtrOutput {
	return o.ToDetectorModelResetTimerPtrOutputWithContext(context.Background())
}

func (o DetectorModelResetTimerOutput) ToDetectorModelResetTimerPtrOutputWithContext(ctx context.Context) DetectorModelResetTimerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelResetTimer) *DetectorModelResetTimer {
		return &v
	}).(DetectorModelResetTimerPtrOutput)
}

// The name of the timer to reset.
func (o DetectorModelResetTimerOutput) TimerName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelResetTimer) string { return v.TimerName }).(pulumi.StringOutput)
}

type DetectorModelResetTimerPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelResetTimerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelResetTimer)(nil)).Elem()
}

func (o DetectorModelResetTimerPtrOutput) ToDetectorModelResetTimerPtrOutput() DetectorModelResetTimerPtrOutput {
	return o
}

func (o DetectorModelResetTimerPtrOutput) ToDetectorModelResetTimerPtrOutputWithContext(ctx context.Context) DetectorModelResetTimerPtrOutput {
	return o
}

func (o DetectorModelResetTimerPtrOutput) Elem() DetectorModelResetTimerOutput {
	return o.ApplyT(func(v *DetectorModelResetTimer) DetectorModelResetTimer {
		if v != nil {
			return *v
		}
		var ret DetectorModelResetTimer
		return ret
	}).(DetectorModelResetTimerOutput)
}

// The name of the timer to reset.
func (o DetectorModelResetTimerPtrOutput) TimerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelResetTimer) *string {
		if v == nil {
			return nil
		}
		return &v.TimerName
	}).(pulumi.StringPtrOutput)
}

// Information needed to set the timer.
type DetectorModelSetTimer struct {
	// The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.<variable-name>`), and input values (`$input.<input-name>.<path-to-datum>`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number.
	DurationExpression *string `pulumi:"durationExpression"`
	// The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds.
	Seconds *int `pulumi:"seconds"`
	// The name of the timer.
	TimerName string `pulumi:"timerName"`
}

// DetectorModelSetTimerInput is an input type that accepts DetectorModelSetTimerArgs and DetectorModelSetTimerOutput values.
// You can construct a concrete instance of `DetectorModelSetTimerInput` via:
//
//          DetectorModelSetTimerArgs{...}
type DetectorModelSetTimerInput interface {
	pulumi.Input

	ToDetectorModelSetTimerOutput() DetectorModelSetTimerOutput
	ToDetectorModelSetTimerOutputWithContext(context.Context) DetectorModelSetTimerOutput
}

// Information needed to set the timer.
type DetectorModelSetTimerArgs struct {
	// The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.<variable-name>`), and input values (`$input.<input-name>.<path-to-datum>`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number.
	DurationExpression pulumi.StringPtrInput `pulumi:"durationExpression"`
	// The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
	// The name of the timer.
	TimerName pulumi.StringInput `pulumi:"timerName"`
}

func (DetectorModelSetTimerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSetTimer)(nil)).Elem()
}

func (i DetectorModelSetTimerArgs) ToDetectorModelSetTimerOutput() DetectorModelSetTimerOutput {
	return i.ToDetectorModelSetTimerOutputWithContext(context.Background())
}

func (i DetectorModelSetTimerArgs) ToDetectorModelSetTimerOutputWithContext(ctx context.Context) DetectorModelSetTimerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSetTimerOutput)
}

func (i DetectorModelSetTimerArgs) ToDetectorModelSetTimerPtrOutput() DetectorModelSetTimerPtrOutput {
	return i.ToDetectorModelSetTimerPtrOutputWithContext(context.Background())
}

func (i DetectorModelSetTimerArgs) ToDetectorModelSetTimerPtrOutputWithContext(ctx context.Context) DetectorModelSetTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSetTimerOutput).ToDetectorModelSetTimerPtrOutputWithContext(ctx)
}

// DetectorModelSetTimerPtrInput is an input type that accepts DetectorModelSetTimerArgs, DetectorModelSetTimerPtr and DetectorModelSetTimerPtrOutput values.
// You can construct a concrete instance of `DetectorModelSetTimerPtrInput` via:
//
//          DetectorModelSetTimerArgs{...}
//
//  or:
//
//          nil
type DetectorModelSetTimerPtrInput interface {
	pulumi.Input

	ToDetectorModelSetTimerPtrOutput() DetectorModelSetTimerPtrOutput
	ToDetectorModelSetTimerPtrOutputWithContext(context.Context) DetectorModelSetTimerPtrOutput
}

type detectorModelSetTimerPtrType DetectorModelSetTimerArgs

func DetectorModelSetTimerPtr(v *DetectorModelSetTimerArgs) DetectorModelSetTimerPtrInput {
	return (*detectorModelSetTimerPtrType)(v)
}

func (*detectorModelSetTimerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSetTimer)(nil)).Elem()
}

func (i *detectorModelSetTimerPtrType) ToDetectorModelSetTimerPtrOutput() DetectorModelSetTimerPtrOutput {
	return i.ToDetectorModelSetTimerPtrOutputWithContext(context.Background())
}

func (i *detectorModelSetTimerPtrType) ToDetectorModelSetTimerPtrOutputWithContext(ctx context.Context) DetectorModelSetTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSetTimerPtrOutput)
}

// Information needed to set the timer.
type DetectorModelSetTimerOutput struct{ *pulumi.OutputState }

func (DetectorModelSetTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSetTimer)(nil)).Elem()
}

func (o DetectorModelSetTimerOutput) ToDetectorModelSetTimerOutput() DetectorModelSetTimerOutput {
	return o
}

func (o DetectorModelSetTimerOutput) ToDetectorModelSetTimerOutputWithContext(ctx context.Context) DetectorModelSetTimerOutput {
	return o
}

func (o DetectorModelSetTimerOutput) ToDetectorModelSetTimerPtrOutput() DetectorModelSetTimerPtrOutput {
	return o.ToDetectorModelSetTimerPtrOutputWithContext(context.Background())
}

func (o DetectorModelSetTimerOutput) ToDetectorModelSetTimerPtrOutputWithContext(ctx context.Context) DetectorModelSetTimerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelSetTimer) *DetectorModelSetTimer {
		return &v
	}).(DetectorModelSetTimerPtrOutput)
}

// The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.<variable-name>`), and input values (`$input.<input-name>.<path-to-datum>`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number.
func (o DetectorModelSetTimerOutput) DurationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorModelSetTimer) *string { return v.DurationExpression }).(pulumi.StringPtrOutput)
}

// The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds.
func (o DetectorModelSetTimerOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DetectorModelSetTimer) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

// The name of the timer.
func (o DetectorModelSetTimerOutput) TimerName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelSetTimer) string { return v.TimerName }).(pulumi.StringOutput)
}

type DetectorModelSetTimerPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelSetTimerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSetTimer)(nil)).Elem()
}

func (o DetectorModelSetTimerPtrOutput) ToDetectorModelSetTimerPtrOutput() DetectorModelSetTimerPtrOutput {
	return o
}

func (o DetectorModelSetTimerPtrOutput) ToDetectorModelSetTimerPtrOutputWithContext(ctx context.Context) DetectorModelSetTimerPtrOutput {
	return o
}

func (o DetectorModelSetTimerPtrOutput) Elem() DetectorModelSetTimerOutput {
	return o.ApplyT(func(v *DetectorModelSetTimer) DetectorModelSetTimer {
		if v != nil {
			return *v
		}
		var ret DetectorModelSetTimer
		return ret
	}).(DetectorModelSetTimerOutput)
}

// The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.<variable-name>`), and input values (`$input.<input-name>.<path-to-datum>`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number.
func (o DetectorModelSetTimerPtrOutput) DurationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelSetTimer) *string {
		if v == nil {
			return nil
		}
		return v.DurationExpression
	}).(pulumi.StringPtrOutput)
}

// The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds.
func (o DetectorModelSetTimerPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DetectorModelSetTimer) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

// The name of the timer.
func (o DetectorModelSetTimerPtrOutput) TimerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelSetTimer) *string {
		if v == nil {
			return nil
		}
		return &v.TimerName
	}).(pulumi.StringPtrOutput)
}

// Information about the variable and its new value.
type DetectorModelSetVariable struct {
	// The new value of the variable.
	Value string `pulumi:"value"`
	// The name of the variable.
	VariableName string `pulumi:"variableName"`
}

// DetectorModelSetVariableInput is an input type that accepts DetectorModelSetVariableArgs and DetectorModelSetVariableOutput values.
// You can construct a concrete instance of `DetectorModelSetVariableInput` via:
//
//          DetectorModelSetVariableArgs{...}
type DetectorModelSetVariableInput interface {
	pulumi.Input

	ToDetectorModelSetVariableOutput() DetectorModelSetVariableOutput
	ToDetectorModelSetVariableOutputWithContext(context.Context) DetectorModelSetVariableOutput
}

// Information about the variable and its new value.
type DetectorModelSetVariableArgs struct {
	// The new value of the variable.
	Value pulumi.StringInput `pulumi:"value"`
	// The name of the variable.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (DetectorModelSetVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSetVariable)(nil)).Elem()
}

func (i DetectorModelSetVariableArgs) ToDetectorModelSetVariableOutput() DetectorModelSetVariableOutput {
	return i.ToDetectorModelSetVariableOutputWithContext(context.Background())
}

func (i DetectorModelSetVariableArgs) ToDetectorModelSetVariableOutputWithContext(ctx context.Context) DetectorModelSetVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSetVariableOutput)
}

func (i DetectorModelSetVariableArgs) ToDetectorModelSetVariablePtrOutput() DetectorModelSetVariablePtrOutput {
	return i.ToDetectorModelSetVariablePtrOutputWithContext(context.Background())
}

func (i DetectorModelSetVariableArgs) ToDetectorModelSetVariablePtrOutputWithContext(ctx context.Context) DetectorModelSetVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSetVariableOutput).ToDetectorModelSetVariablePtrOutputWithContext(ctx)
}

// DetectorModelSetVariablePtrInput is an input type that accepts DetectorModelSetVariableArgs, DetectorModelSetVariablePtr and DetectorModelSetVariablePtrOutput values.
// You can construct a concrete instance of `DetectorModelSetVariablePtrInput` via:
//
//          DetectorModelSetVariableArgs{...}
//
//  or:
//
//          nil
type DetectorModelSetVariablePtrInput interface {
	pulumi.Input

	ToDetectorModelSetVariablePtrOutput() DetectorModelSetVariablePtrOutput
	ToDetectorModelSetVariablePtrOutputWithContext(context.Context) DetectorModelSetVariablePtrOutput
}

type detectorModelSetVariablePtrType DetectorModelSetVariableArgs

func DetectorModelSetVariablePtr(v *DetectorModelSetVariableArgs) DetectorModelSetVariablePtrInput {
	return (*detectorModelSetVariablePtrType)(v)
}

func (*detectorModelSetVariablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSetVariable)(nil)).Elem()
}

func (i *detectorModelSetVariablePtrType) ToDetectorModelSetVariablePtrOutput() DetectorModelSetVariablePtrOutput {
	return i.ToDetectorModelSetVariablePtrOutputWithContext(context.Background())
}

func (i *detectorModelSetVariablePtrType) ToDetectorModelSetVariablePtrOutputWithContext(ctx context.Context) DetectorModelSetVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSetVariablePtrOutput)
}

// Information about the variable and its new value.
type DetectorModelSetVariableOutput struct{ *pulumi.OutputState }

func (DetectorModelSetVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSetVariable)(nil)).Elem()
}

func (o DetectorModelSetVariableOutput) ToDetectorModelSetVariableOutput() DetectorModelSetVariableOutput {
	return o
}

func (o DetectorModelSetVariableOutput) ToDetectorModelSetVariableOutputWithContext(ctx context.Context) DetectorModelSetVariableOutput {
	return o
}

func (o DetectorModelSetVariableOutput) ToDetectorModelSetVariablePtrOutput() DetectorModelSetVariablePtrOutput {
	return o.ToDetectorModelSetVariablePtrOutputWithContext(context.Background())
}

func (o DetectorModelSetVariableOutput) ToDetectorModelSetVariablePtrOutputWithContext(ctx context.Context) DetectorModelSetVariablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelSetVariable) *DetectorModelSetVariable {
		return &v
	}).(DetectorModelSetVariablePtrOutput)
}

// The new value of the variable.
func (o DetectorModelSetVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelSetVariable) string { return v.Value }).(pulumi.StringOutput)
}

// The name of the variable.
func (o DetectorModelSetVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelSetVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type DetectorModelSetVariablePtrOutput struct{ *pulumi.OutputState }

func (DetectorModelSetVariablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSetVariable)(nil)).Elem()
}

func (o DetectorModelSetVariablePtrOutput) ToDetectorModelSetVariablePtrOutput() DetectorModelSetVariablePtrOutput {
	return o
}

func (o DetectorModelSetVariablePtrOutput) ToDetectorModelSetVariablePtrOutputWithContext(ctx context.Context) DetectorModelSetVariablePtrOutput {
	return o
}

func (o DetectorModelSetVariablePtrOutput) Elem() DetectorModelSetVariableOutput {
	return o.ApplyT(func(v *DetectorModelSetVariable) DetectorModelSetVariable {
		if v != nil {
			return *v
		}
		var ret DetectorModelSetVariable
		return ret
	}).(DetectorModelSetVariableOutput)
}

// The new value of the variable.
func (o DetectorModelSetVariablePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelSetVariable) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// The name of the variable.
func (o DetectorModelSetVariablePtrOutput) VariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelSetVariable) *string {
		if v == nil {
			return nil
		}
		return &v.VariableName
	}).(pulumi.StringPtrOutput)
}

// Information required to publish the Amazon SNS message.
type DetectorModelSns struct {
	Payload *DetectorModelPayload `pulumi:"payload"`
	// The ARN of the Amazon SNS target where the message is sent.
	TargetArn string `pulumi:"targetArn"`
}

// DetectorModelSnsInput is an input type that accepts DetectorModelSnsArgs and DetectorModelSnsOutput values.
// You can construct a concrete instance of `DetectorModelSnsInput` via:
//
//          DetectorModelSnsArgs{...}
type DetectorModelSnsInput interface {
	pulumi.Input

	ToDetectorModelSnsOutput() DetectorModelSnsOutput
	ToDetectorModelSnsOutputWithContext(context.Context) DetectorModelSnsOutput
}

// Information required to publish the Amazon SNS message.
type DetectorModelSnsArgs struct {
	Payload DetectorModelPayloadPtrInput `pulumi:"payload"`
	// The ARN of the Amazon SNS target where the message is sent.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (DetectorModelSnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSns)(nil)).Elem()
}

func (i DetectorModelSnsArgs) ToDetectorModelSnsOutput() DetectorModelSnsOutput {
	return i.ToDetectorModelSnsOutputWithContext(context.Background())
}

func (i DetectorModelSnsArgs) ToDetectorModelSnsOutputWithContext(ctx context.Context) DetectorModelSnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSnsOutput)
}

func (i DetectorModelSnsArgs) ToDetectorModelSnsPtrOutput() DetectorModelSnsPtrOutput {
	return i.ToDetectorModelSnsPtrOutputWithContext(context.Background())
}

func (i DetectorModelSnsArgs) ToDetectorModelSnsPtrOutputWithContext(ctx context.Context) DetectorModelSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSnsOutput).ToDetectorModelSnsPtrOutputWithContext(ctx)
}

// DetectorModelSnsPtrInput is an input type that accepts DetectorModelSnsArgs, DetectorModelSnsPtr and DetectorModelSnsPtrOutput values.
// You can construct a concrete instance of `DetectorModelSnsPtrInput` via:
//
//          DetectorModelSnsArgs{...}
//
//  or:
//
//          nil
type DetectorModelSnsPtrInput interface {
	pulumi.Input

	ToDetectorModelSnsPtrOutput() DetectorModelSnsPtrOutput
	ToDetectorModelSnsPtrOutputWithContext(context.Context) DetectorModelSnsPtrOutput
}

type detectorModelSnsPtrType DetectorModelSnsArgs

func DetectorModelSnsPtr(v *DetectorModelSnsArgs) DetectorModelSnsPtrInput {
	return (*detectorModelSnsPtrType)(v)
}

func (*detectorModelSnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSns)(nil)).Elem()
}

func (i *detectorModelSnsPtrType) ToDetectorModelSnsPtrOutput() DetectorModelSnsPtrOutput {
	return i.ToDetectorModelSnsPtrOutputWithContext(context.Background())
}

func (i *detectorModelSnsPtrType) ToDetectorModelSnsPtrOutputWithContext(ctx context.Context) DetectorModelSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSnsPtrOutput)
}

// Information required to publish the Amazon SNS message.
type DetectorModelSnsOutput struct{ *pulumi.OutputState }

func (DetectorModelSnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSns)(nil)).Elem()
}

func (o DetectorModelSnsOutput) ToDetectorModelSnsOutput() DetectorModelSnsOutput {
	return o
}

func (o DetectorModelSnsOutput) ToDetectorModelSnsOutputWithContext(ctx context.Context) DetectorModelSnsOutput {
	return o
}

func (o DetectorModelSnsOutput) ToDetectorModelSnsPtrOutput() DetectorModelSnsPtrOutput {
	return o.ToDetectorModelSnsPtrOutputWithContext(context.Background())
}

func (o DetectorModelSnsOutput) ToDetectorModelSnsPtrOutputWithContext(ctx context.Context) DetectorModelSnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelSns) *DetectorModelSns {
		return &v
	}).(DetectorModelSnsPtrOutput)
}

func (o DetectorModelSnsOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelSns) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

// The ARN of the Amazon SNS target where the message is sent.
func (o DetectorModelSnsOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelSns) string { return v.TargetArn }).(pulumi.StringOutput)
}

type DetectorModelSnsPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelSnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSns)(nil)).Elem()
}

func (o DetectorModelSnsPtrOutput) ToDetectorModelSnsPtrOutput() DetectorModelSnsPtrOutput {
	return o
}

func (o DetectorModelSnsPtrOutput) ToDetectorModelSnsPtrOutputWithContext(ctx context.Context) DetectorModelSnsPtrOutput {
	return o
}

func (o DetectorModelSnsPtrOutput) Elem() DetectorModelSnsOutput {
	return o.ApplyT(func(v *DetectorModelSns) DetectorModelSns {
		if v != nil {
			return *v
		}
		var ret DetectorModelSns
		return ret
	}).(DetectorModelSnsOutput)
}

func (o DetectorModelSnsPtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelSns) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// The ARN of the Amazon SNS target where the message is sent.
func (o DetectorModelSnsPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelSns) *string {
		if v == nil {
			return nil
		}
		return &v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type DetectorModelSqs struct {
	Payload *DetectorModelPayload `pulumi:"payload"`
	// The URL of the SQS queue where the data is written.
	QueueUrl string `pulumi:"queueUrl"`
	// Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
	UseBase64 *bool `pulumi:"useBase64"`
}

// DetectorModelSqsInput is an input type that accepts DetectorModelSqsArgs and DetectorModelSqsOutput values.
// You can construct a concrete instance of `DetectorModelSqsInput` via:
//
//          DetectorModelSqsArgs{...}
type DetectorModelSqsInput interface {
	pulumi.Input

	ToDetectorModelSqsOutput() DetectorModelSqsOutput
	ToDetectorModelSqsOutputWithContext(context.Context) DetectorModelSqsOutput
}

type DetectorModelSqsArgs struct {
	Payload DetectorModelPayloadPtrInput `pulumi:"payload"`
	// The URL of the SQS queue where the data is written.
	QueueUrl pulumi.StringInput `pulumi:"queueUrl"`
	// Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
	UseBase64 pulumi.BoolPtrInput `pulumi:"useBase64"`
}

func (DetectorModelSqsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSqs)(nil)).Elem()
}

func (i DetectorModelSqsArgs) ToDetectorModelSqsOutput() DetectorModelSqsOutput {
	return i.ToDetectorModelSqsOutputWithContext(context.Background())
}

func (i DetectorModelSqsArgs) ToDetectorModelSqsOutputWithContext(ctx context.Context) DetectorModelSqsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSqsOutput)
}

func (i DetectorModelSqsArgs) ToDetectorModelSqsPtrOutput() DetectorModelSqsPtrOutput {
	return i.ToDetectorModelSqsPtrOutputWithContext(context.Background())
}

func (i DetectorModelSqsArgs) ToDetectorModelSqsPtrOutputWithContext(ctx context.Context) DetectorModelSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSqsOutput).ToDetectorModelSqsPtrOutputWithContext(ctx)
}

// DetectorModelSqsPtrInput is an input type that accepts DetectorModelSqsArgs, DetectorModelSqsPtr and DetectorModelSqsPtrOutput values.
// You can construct a concrete instance of `DetectorModelSqsPtrInput` via:
//
//          DetectorModelSqsArgs{...}
//
//  or:
//
//          nil
type DetectorModelSqsPtrInput interface {
	pulumi.Input

	ToDetectorModelSqsPtrOutput() DetectorModelSqsPtrOutput
	ToDetectorModelSqsPtrOutputWithContext(context.Context) DetectorModelSqsPtrOutput
}

type detectorModelSqsPtrType DetectorModelSqsArgs

func DetectorModelSqsPtr(v *DetectorModelSqsArgs) DetectorModelSqsPtrInput {
	return (*detectorModelSqsPtrType)(v)
}

func (*detectorModelSqsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSqs)(nil)).Elem()
}

func (i *detectorModelSqsPtrType) ToDetectorModelSqsPtrOutput() DetectorModelSqsPtrOutput {
	return i.ToDetectorModelSqsPtrOutputWithContext(context.Background())
}

func (i *detectorModelSqsPtrType) ToDetectorModelSqsPtrOutputWithContext(ctx context.Context) DetectorModelSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelSqsPtrOutput)
}

type DetectorModelSqsOutput struct{ *pulumi.OutputState }

func (DetectorModelSqsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelSqs)(nil)).Elem()
}

func (o DetectorModelSqsOutput) ToDetectorModelSqsOutput() DetectorModelSqsOutput {
	return o
}

func (o DetectorModelSqsOutput) ToDetectorModelSqsOutputWithContext(ctx context.Context) DetectorModelSqsOutput {
	return o
}

func (o DetectorModelSqsOutput) ToDetectorModelSqsPtrOutput() DetectorModelSqsPtrOutput {
	return o.ToDetectorModelSqsPtrOutputWithContext(context.Background())
}

func (o DetectorModelSqsOutput) ToDetectorModelSqsPtrOutputWithContext(ctx context.Context) DetectorModelSqsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorModelSqs) *DetectorModelSqs {
		return &v
	}).(DetectorModelSqsPtrOutput)
}

func (o DetectorModelSqsOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v DetectorModelSqs) *DetectorModelPayload { return v.Payload }).(DetectorModelPayloadPtrOutput)
}

// The URL of the SQS queue where the data is written.
func (o DetectorModelSqsOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelSqs) string { return v.QueueUrl }).(pulumi.StringOutput)
}

// Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
func (o DetectorModelSqsOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorModelSqs) *bool { return v.UseBase64 }).(pulumi.BoolPtrOutput)
}

type DetectorModelSqsPtrOutput struct{ *pulumi.OutputState }

func (DetectorModelSqsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModelSqs)(nil)).Elem()
}

func (o DetectorModelSqsPtrOutput) ToDetectorModelSqsPtrOutput() DetectorModelSqsPtrOutput {
	return o
}

func (o DetectorModelSqsPtrOutput) ToDetectorModelSqsPtrOutputWithContext(ctx context.Context) DetectorModelSqsPtrOutput {
	return o
}

func (o DetectorModelSqsPtrOutput) Elem() DetectorModelSqsOutput {
	return o.ApplyT(func(v *DetectorModelSqs) DetectorModelSqs {
		if v != nil {
			return *v
		}
		var ret DetectorModelSqs
		return ret
	}).(DetectorModelSqsOutput)
}

func (o DetectorModelSqsPtrOutput) Payload() DetectorModelPayloadPtrOutput {
	return o.ApplyT(func(v *DetectorModelSqs) *DetectorModelPayload {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(DetectorModelPayloadPtrOutput)
}

// The URL of the SQS queue where the data is written.
func (o DetectorModelSqsPtrOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModelSqs) *string {
		if v == nil {
			return nil
		}
		return &v.QueueUrl
	}).(pulumi.StringPtrOutput)
}

// Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
func (o DetectorModelSqsPtrOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorModelSqs) *bool {
		if v == nil {
			return nil
		}
		return v.UseBase64
	}).(pulumi.BoolPtrOutput)
}

// Information that defines a state of a detector.
type DetectorModelStateType struct {
	OnEnter *DetectorModelOnEnter `pulumi:"onEnter"`
	OnExit  *DetectorModelOnExit  `pulumi:"onExit"`
	OnInput *DetectorModelOnInput `pulumi:"onInput"`
	// The name of the state.
	StateName string `pulumi:"stateName"`
}

// DetectorModelStateTypeInput is an input type that accepts DetectorModelStateTypeArgs and DetectorModelStateTypeOutput values.
// You can construct a concrete instance of `DetectorModelStateTypeInput` via:
//
//          DetectorModelStateTypeArgs{...}
type DetectorModelStateTypeInput interface {
	pulumi.Input

	ToDetectorModelStateTypeOutput() DetectorModelStateTypeOutput
	ToDetectorModelStateTypeOutputWithContext(context.Context) DetectorModelStateTypeOutput
}

// Information that defines a state of a detector.
type DetectorModelStateTypeArgs struct {
	OnEnter DetectorModelOnEnterPtrInput `pulumi:"onEnter"`
	OnExit  DetectorModelOnExitPtrInput  `pulumi:"onExit"`
	OnInput DetectorModelOnInputPtrInput `pulumi:"onInput"`
	// The name of the state.
	StateName pulumi.StringInput `pulumi:"stateName"`
}

func (DetectorModelStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelStateType)(nil)).Elem()
}

func (i DetectorModelStateTypeArgs) ToDetectorModelStateTypeOutput() DetectorModelStateTypeOutput {
	return i.ToDetectorModelStateTypeOutputWithContext(context.Background())
}

func (i DetectorModelStateTypeArgs) ToDetectorModelStateTypeOutputWithContext(ctx context.Context) DetectorModelStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelStateTypeOutput)
}

// DetectorModelStateTypeArrayInput is an input type that accepts DetectorModelStateTypeArray and DetectorModelStateTypeArrayOutput values.
// You can construct a concrete instance of `DetectorModelStateTypeArrayInput` via:
//
//          DetectorModelStateTypeArray{ DetectorModelStateTypeArgs{...} }
type DetectorModelStateTypeArrayInput interface {
	pulumi.Input

	ToDetectorModelStateTypeArrayOutput() DetectorModelStateTypeArrayOutput
	ToDetectorModelStateTypeArrayOutputWithContext(context.Context) DetectorModelStateTypeArrayOutput
}

type DetectorModelStateTypeArray []DetectorModelStateTypeInput

func (DetectorModelStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelStateType)(nil)).Elem()
}

func (i DetectorModelStateTypeArray) ToDetectorModelStateTypeArrayOutput() DetectorModelStateTypeArrayOutput {
	return i.ToDetectorModelStateTypeArrayOutputWithContext(context.Background())
}

func (i DetectorModelStateTypeArray) ToDetectorModelStateTypeArrayOutputWithContext(ctx context.Context) DetectorModelStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelStateTypeArrayOutput)
}

// Information that defines a state of a detector.
type DetectorModelStateTypeOutput struct{ *pulumi.OutputState }

func (DetectorModelStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelStateType)(nil)).Elem()
}

func (o DetectorModelStateTypeOutput) ToDetectorModelStateTypeOutput() DetectorModelStateTypeOutput {
	return o
}

func (o DetectorModelStateTypeOutput) ToDetectorModelStateTypeOutputWithContext(ctx context.Context) DetectorModelStateTypeOutput {
	return o
}

func (o DetectorModelStateTypeOutput) OnEnter() DetectorModelOnEnterPtrOutput {
	return o.ApplyT(func(v DetectorModelStateType) *DetectorModelOnEnter { return v.OnEnter }).(DetectorModelOnEnterPtrOutput)
}

func (o DetectorModelStateTypeOutput) OnExit() DetectorModelOnExitPtrOutput {
	return o.ApplyT(func(v DetectorModelStateType) *DetectorModelOnExit { return v.OnExit }).(DetectorModelOnExitPtrOutput)
}

func (o DetectorModelStateTypeOutput) OnInput() DetectorModelOnInputPtrOutput {
	return o.ApplyT(func(v DetectorModelStateType) *DetectorModelOnInput { return v.OnInput }).(DetectorModelOnInputPtrOutput)
}

// The name of the state.
func (o DetectorModelStateTypeOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelStateType) string { return v.StateName }).(pulumi.StringOutput)
}

type DetectorModelStateTypeArrayOutput struct{ *pulumi.OutputState }

func (DetectorModelStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelStateType)(nil)).Elem()
}

func (o DetectorModelStateTypeArrayOutput) ToDetectorModelStateTypeArrayOutput() DetectorModelStateTypeArrayOutput {
	return o
}

func (o DetectorModelStateTypeArrayOutput) ToDetectorModelStateTypeArrayOutputWithContext(ctx context.Context) DetectorModelStateTypeArrayOutput {
	return o
}

func (o DetectorModelStateTypeArrayOutput) Index(i pulumi.IntInput) DetectorModelStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorModelStateType {
		return vs[0].([]DetectorModelStateType)[vs[1].(int)]
	}).(DetectorModelStateTypeOutput)
}

// Tags to be applied to Input.
type DetectorModelTag struct {
	// Key of the Tag.
	Key string `pulumi:"key"`
	// Value of the Tag.
	Value string `pulumi:"value"`
}

// DetectorModelTagInput is an input type that accepts DetectorModelTagArgs and DetectorModelTagOutput values.
// You can construct a concrete instance of `DetectorModelTagInput` via:
//
//          DetectorModelTagArgs{...}
type DetectorModelTagInput interface {
	pulumi.Input

	ToDetectorModelTagOutput() DetectorModelTagOutput
	ToDetectorModelTagOutputWithContext(context.Context) DetectorModelTagOutput
}

// Tags to be applied to Input.
type DetectorModelTagArgs struct {
	// Key of the Tag.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the Tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DetectorModelTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelTag)(nil)).Elem()
}

func (i DetectorModelTagArgs) ToDetectorModelTagOutput() DetectorModelTagOutput {
	return i.ToDetectorModelTagOutputWithContext(context.Background())
}

func (i DetectorModelTagArgs) ToDetectorModelTagOutputWithContext(ctx context.Context) DetectorModelTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelTagOutput)
}

// DetectorModelTagArrayInput is an input type that accepts DetectorModelTagArray and DetectorModelTagArrayOutput values.
// You can construct a concrete instance of `DetectorModelTagArrayInput` via:
//
//          DetectorModelTagArray{ DetectorModelTagArgs{...} }
type DetectorModelTagArrayInput interface {
	pulumi.Input

	ToDetectorModelTagArrayOutput() DetectorModelTagArrayOutput
	ToDetectorModelTagArrayOutputWithContext(context.Context) DetectorModelTagArrayOutput
}

type DetectorModelTagArray []DetectorModelTagInput

func (DetectorModelTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelTag)(nil)).Elem()
}

func (i DetectorModelTagArray) ToDetectorModelTagArrayOutput() DetectorModelTagArrayOutput {
	return i.ToDetectorModelTagArrayOutputWithContext(context.Background())
}

func (i DetectorModelTagArray) ToDetectorModelTagArrayOutputWithContext(ctx context.Context) DetectorModelTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelTagArrayOutput)
}

// Tags to be applied to Input.
type DetectorModelTagOutput struct{ *pulumi.OutputState }

func (DetectorModelTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelTag)(nil)).Elem()
}

func (o DetectorModelTagOutput) ToDetectorModelTagOutput() DetectorModelTagOutput {
	return o
}

func (o DetectorModelTagOutput) ToDetectorModelTagOutputWithContext(ctx context.Context) DetectorModelTagOutput {
	return o
}

// Key of the Tag.
func (o DetectorModelTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelTag) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the Tag.
func (o DetectorModelTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelTag) string { return v.Value }).(pulumi.StringOutput)
}

type DetectorModelTagArrayOutput struct{ *pulumi.OutputState }

func (DetectorModelTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelTag)(nil)).Elem()
}

func (o DetectorModelTagArrayOutput) ToDetectorModelTagArrayOutput() DetectorModelTagArrayOutput {
	return o
}

func (o DetectorModelTagArrayOutput) ToDetectorModelTagArrayOutputWithContext(ctx context.Context) DetectorModelTagArrayOutput {
	return o
}

func (o DetectorModelTagArrayOutput) Index(i pulumi.IntInput) DetectorModelTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorModelTag {
		return vs[0].([]DetectorModelTag)[vs[1].(int)]
	}).(DetectorModelTagOutput)
}

// Specifies the ` actions  `performed and the next `state` entered when a `condition` evaluates to `TRUE`.
type DetectorModelTransitionEvent struct {
	// The actions to be performed.
	Actions []DetectorModelAction `pulumi:"actions"`
	// A Boolean expression that when `TRUE` causes the `actions` to be performed and the `nextState` to be entered.
	Condition string `pulumi:"condition"`
	// The name of the event.
	EventName string `pulumi:"eventName"`
	// The next state to enter.
	NextState string `pulumi:"nextState"`
}

// DetectorModelTransitionEventInput is an input type that accepts DetectorModelTransitionEventArgs and DetectorModelTransitionEventOutput values.
// You can construct a concrete instance of `DetectorModelTransitionEventInput` via:
//
//          DetectorModelTransitionEventArgs{...}
type DetectorModelTransitionEventInput interface {
	pulumi.Input

	ToDetectorModelTransitionEventOutput() DetectorModelTransitionEventOutput
	ToDetectorModelTransitionEventOutputWithContext(context.Context) DetectorModelTransitionEventOutput
}

// Specifies the ` actions  `performed and the next `state` entered when a `condition` evaluates to `TRUE`.
type DetectorModelTransitionEventArgs struct {
	// The actions to be performed.
	Actions DetectorModelActionArrayInput `pulumi:"actions"`
	// A Boolean expression that when `TRUE` causes the `actions` to be performed and the `nextState` to be entered.
	Condition pulumi.StringInput `pulumi:"condition"`
	// The name of the event.
	EventName pulumi.StringInput `pulumi:"eventName"`
	// The next state to enter.
	NextState pulumi.StringInput `pulumi:"nextState"`
}

func (DetectorModelTransitionEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelTransitionEvent)(nil)).Elem()
}

func (i DetectorModelTransitionEventArgs) ToDetectorModelTransitionEventOutput() DetectorModelTransitionEventOutput {
	return i.ToDetectorModelTransitionEventOutputWithContext(context.Background())
}

func (i DetectorModelTransitionEventArgs) ToDetectorModelTransitionEventOutputWithContext(ctx context.Context) DetectorModelTransitionEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelTransitionEventOutput)
}

// DetectorModelTransitionEventArrayInput is an input type that accepts DetectorModelTransitionEventArray and DetectorModelTransitionEventArrayOutput values.
// You can construct a concrete instance of `DetectorModelTransitionEventArrayInput` via:
//
//          DetectorModelTransitionEventArray{ DetectorModelTransitionEventArgs{...} }
type DetectorModelTransitionEventArrayInput interface {
	pulumi.Input

	ToDetectorModelTransitionEventArrayOutput() DetectorModelTransitionEventArrayOutput
	ToDetectorModelTransitionEventArrayOutputWithContext(context.Context) DetectorModelTransitionEventArrayOutput
}

type DetectorModelTransitionEventArray []DetectorModelTransitionEventInput

func (DetectorModelTransitionEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelTransitionEvent)(nil)).Elem()
}

func (i DetectorModelTransitionEventArray) ToDetectorModelTransitionEventArrayOutput() DetectorModelTransitionEventArrayOutput {
	return i.ToDetectorModelTransitionEventArrayOutputWithContext(context.Background())
}

func (i DetectorModelTransitionEventArray) ToDetectorModelTransitionEventArrayOutputWithContext(ctx context.Context) DetectorModelTransitionEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelTransitionEventArrayOutput)
}

// Specifies the ` actions  `performed and the next `state` entered when a `condition` evaluates to `TRUE`.
type DetectorModelTransitionEventOutput struct{ *pulumi.OutputState }

func (DetectorModelTransitionEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorModelTransitionEvent)(nil)).Elem()
}

func (o DetectorModelTransitionEventOutput) ToDetectorModelTransitionEventOutput() DetectorModelTransitionEventOutput {
	return o
}

func (o DetectorModelTransitionEventOutput) ToDetectorModelTransitionEventOutputWithContext(ctx context.Context) DetectorModelTransitionEventOutput {
	return o
}

// The actions to be performed.
func (o DetectorModelTransitionEventOutput) Actions() DetectorModelActionArrayOutput {
	return o.ApplyT(func(v DetectorModelTransitionEvent) []DetectorModelAction { return v.Actions }).(DetectorModelActionArrayOutput)
}

// A Boolean expression that when `TRUE` causes the `actions` to be performed and the `nextState` to be entered.
func (o DetectorModelTransitionEventOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelTransitionEvent) string { return v.Condition }).(pulumi.StringOutput)
}

// The name of the event.
func (o DetectorModelTransitionEventOutput) EventName() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelTransitionEvent) string { return v.EventName }).(pulumi.StringOutput)
}

// The next state to enter.
func (o DetectorModelTransitionEventOutput) NextState() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorModelTransitionEvent) string { return v.NextState }).(pulumi.StringOutput)
}

type DetectorModelTransitionEventArrayOutput struct{ *pulumi.OutputState }

func (DetectorModelTransitionEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorModelTransitionEvent)(nil)).Elem()
}

func (o DetectorModelTransitionEventArrayOutput) ToDetectorModelTransitionEventArrayOutput() DetectorModelTransitionEventArrayOutput {
	return o
}

func (o DetectorModelTransitionEventArrayOutput) ToDetectorModelTransitionEventArrayOutputWithContext(ctx context.Context) DetectorModelTransitionEventArrayOutput {
	return o
}

func (o DetectorModelTransitionEventArrayOutput) Index(i pulumi.IntInput) DetectorModelTransitionEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorModelTransitionEvent {
		return vs[0].([]DetectorModelTransitionEvent)[vs[1].(int)]
	}).(DetectorModelTransitionEventOutput)
}

// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
type InputAttribute struct {
	// An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.
	//
	// _Syntax_: `<field-name>.<field-name>...`
	JsonPath string `pulumi:"jsonPath"`
}

// InputAttributeInput is an input type that accepts InputAttributeArgs and InputAttributeOutput values.
// You can construct a concrete instance of `InputAttributeInput` via:
//
//          InputAttributeArgs{...}
type InputAttributeInput interface {
	pulumi.Input

	ToInputAttributeOutput() InputAttributeOutput
	ToInputAttributeOutputWithContext(context.Context) InputAttributeOutput
}

// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
type InputAttributeArgs struct {
	// An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.
	//
	// _Syntax_: `<field-name>.<field-name>...`
	JsonPath pulumi.StringInput `pulumi:"jsonPath"`
}

func (InputAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputAttribute)(nil)).Elem()
}

func (i InputAttributeArgs) ToInputAttributeOutput() InputAttributeOutput {
	return i.ToInputAttributeOutputWithContext(context.Background())
}

func (i InputAttributeArgs) ToInputAttributeOutputWithContext(ctx context.Context) InputAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputAttributeOutput)
}

// InputAttributeArrayInput is an input type that accepts InputAttributeArray and InputAttributeArrayOutput values.
// You can construct a concrete instance of `InputAttributeArrayInput` via:
//
//          InputAttributeArray{ InputAttributeArgs{...} }
type InputAttributeArrayInput interface {
	pulumi.Input

	ToInputAttributeArrayOutput() InputAttributeArrayOutput
	ToInputAttributeArrayOutputWithContext(context.Context) InputAttributeArrayOutput
}

type InputAttributeArray []InputAttributeInput

func (InputAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputAttribute)(nil)).Elem()
}

func (i InputAttributeArray) ToInputAttributeArrayOutput() InputAttributeArrayOutput {
	return i.ToInputAttributeArrayOutputWithContext(context.Background())
}

func (i InputAttributeArray) ToInputAttributeArrayOutputWithContext(ctx context.Context) InputAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputAttributeArrayOutput)
}

// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
type InputAttributeOutput struct{ *pulumi.OutputState }

func (InputAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputAttribute)(nil)).Elem()
}

func (o InputAttributeOutput) ToInputAttributeOutput() InputAttributeOutput {
	return o
}

func (o InputAttributeOutput) ToInputAttributeOutputWithContext(ctx context.Context) InputAttributeOutput {
	return o
}

// An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.
//
// _Syntax_: `<field-name>.<field-name>...`
func (o InputAttributeOutput) JsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v InputAttribute) string { return v.JsonPath }).(pulumi.StringOutput)
}

type InputAttributeArrayOutput struct{ *pulumi.OutputState }

func (InputAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputAttribute)(nil)).Elem()
}

func (o InputAttributeArrayOutput) ToInputAttributeArrayOutput() InputAttributeArrayOutput {
	return o
}

func (o InputAttributeArrayOutput) ToInputAttributeArrayOutputWithContext(ctx context.Context) InputAttributeArrayOutput {
	return o
}

func (o InputAttributeArrayOutput) Index(i pulumi.IntInput) InputAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputAttribute {
		return vs[0].([]InputAttribute)[vs[1].(int)]
	}).(InputAttributeOutput)
}

// The definition of the input.
type InputInputDefinition struct {
	// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
	Attributes []InputAttribute `pulumi:"attributes"`
}

// InputInputDefinitionInput is an input type that accepts InputInputDefinitionArgs and InputInputDefinitionOutput values.
// You can construct a concrete instance of `InputInputDefinitionInput` via:
//
//          InputInputDefinitionArgs{...}
type InputInputDefinitionInput interface {
	pulumi.Input

	ToInputInputDefinitionOutput() InputInputDefinitionOutput
	ToInputInputDefinitionOutputWithContext(context.Context) InputInputDefinitionOutput
}

// The definition of the input.
type InputInputDefinitionArgs struct {
	// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
	Attributes InputAttributeArrayInput `pulumi:"attributes"`
}

func (InputInputDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputInputDefinition)(nil)).Elem()
}

func (i InputInputDefinitionArgs) ToInputInputDefinitionOutput() InputInputDefinitionOutput {
	return i.ToInputInputDefinitionOutputWithContext(context.Background())
}

func (i InputInputDefinitionArgs) ToInputInputDefinitionOutputWithContext(ctx context.Context) InputInputDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputInputDefinitionOutput)
}

func (i InputInputDefinitionArgs) ToInputInputDefinitionPtrOutput() InputInputDefinitionPtrOutput {
	return i.ToInputInputDefinitionPtrOutputWithContext(context.Background())
}

func (i InputInputDefinitionArgs) ToInputInputDefinitionPtrOutputWithContext(ctx context.Context) InputInputDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputInputDefinitionOutput).ToInputInputDefinitionPtrOutputWithContext(ctx)
}

// InputInputDefinitionPtrInput is an input type that accepts InputInputDefinitionArgs, InputInputDefinitionPtr and InputInputDefinitionPtrOutput values.
// You can construct a concrete instance of `InputInputDefinitionPtrInput` via:
//
//          InputInputDefinitionArgs{...}
//
//  or:
//
//          nil
type InputInputDefinitionPtrInput interface {
	pulumi.Input

	ToInputInputDefinitionPtrOutput() InputInputDefinitionPtrOutput
	ToInputInputDefinitionPtrOutputWithContext(context.Context) InputInputDefinitionPtrOutput
}

type inputInputDefinitionPtrType InputInputDefinitionArgs

func InputInputDefinitionPtr(v *InputInputDefinitionArgs) InputInputDefinitionPtrInput {
	return (*inputInputDefinitionPtrType)(v)
}

func (*inputInputDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputInputDefinition)(nil)).Elem()
}

func (i *inputInputDefinitionPtrType) ToInputInputDefinitionPtrOutput() InputInputDefinitionPtrOutput {
	return i.ToInputInputDefinitionPtrOutputWithContext(context.Background())
}

func (i *inputInputDefinitionPtrType) ToInputInputDefinitionPtrOutputWithContext(ctx context.Context) InputInputDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputInputDefinitionPtrOutput)
}

// The definition of the input.
type InputInputDefinitionOutput struct{ *pulumi.OutputState }

func (InputInputDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputInputDefinition)(nil)).Elem()
}

func (o InputInputDefinitionOutput) ToInputInputDefinitionOutput() InputInputDefinitionOutput {
	return o
}

func (o InputInputDefinitionOutput) ToInputInputDefinitionOutputWithContext(ctx context.Context) InputInputDefinitionOutput {
	return o
}

func (o InputInputDefinitionOutput) ToInputInputDefinitionPtrOutput() InputInputDefinitionPtrOutput {
	return o.ToInputInputDefinitionPtrOutputWithContext(context.Background())
}

func (o InputInputDefinitionOutput) ToInputInputDefinitionPtrOutputWithContext(ctx context.Context) InputInputDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputInputDefinition) *InputInputDefinition {
		return &v
	}).(InputInputDefinitionPtrOutput)
}

// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
func (o InputInputDefinitionOutput) Attributes() InputAttributeArrayOutput {
	return o.ApplyT(func(v InputInputDefinition) []InputAttribute { return v.Attributes }).(InputAttributeArrayOutput)
}

type InputInputDefinitionPtrOutput struct{ *pulumi.OutputState }

func (InputInputDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputInputDefinition)(nil)).Elem()
}

func (o InputInputDefinitionPtrOutput) ToInputInputDefinitionPtrOutput() InputInputDefinitionPtrOutput {
	return o
}

func (o InputInputDefinitionPtrOutput) ToInputInputDefinitionPtrOutputWithContext(ctx context.Context) InputInputDefinitionPtrOutput {
	return o
}

func (o InputInputDefinitionPtrOutput) Elem() InputInputDefinitionOutput {
	return o.ApplyT(func(v *InputInputDefinition) InputInputDefinition {
		if v != nil {
			return *v
		}
		var ret InputInputDefinition
		return ret
	}).(InputInputDefinitionOutput)
}

// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
func (o InputInputDefinitionPtrOutput) Attributes() InputAttributeArrayOutput {
	return o.ApplyT(func(v *InputInputDefinition) []InputAttribute {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(InputAttributeArrayOutput)
}

// Tags to be applied to Input.
type InputTag struct {
	// Key of the Tag.
	Key string `pulumi:"key"`
	// Value of the Tag.
	Value string `pulumi:"value"`
}

// InputTagInput is an input type that accepts InputTagArgs and InputTagOutput values.
// You can construct a concrete instance of `InputTagInput` via:
//
//          InputTagArgs{...}
type InputTagInput interface {
	pulumi.Input

	ToInputTagOutput() InputTagOutput
	ToInputTagOutputWithContext(context.Context) InputTagOutput
}

// Tags to be applied to Input.
type InputTagArgs struct {
	// Key of the Tag.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the Tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InputTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputTag)(nil)).Elem()
}

func (i InputTagArgs) ToInputTagOutput() InputTagOutput {
	return i.ToInputTagOutputWithContext(context.Background())
}

func (i InputTagArgs) ToInputTagOutputWithContext(ctx context.Context) InputTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputTagOutput)
}

// InputTagArrayInput is an input type that accepts InputTagArray and InputTagArrayOutput values.
// You can construct a concrete instance of `InputTagArrayInput` via:
//
//          InputTagArray{ InputTagArgs{...} }
type InputTagArrayInput interface {
	pulumi.Input

	ToInputTagArrayOutput() InputTagArrayOutput
	ToInputTagArrayOutputWithContext(context.Context) InputTagArrayOutput
}

type InputTagArray []InputTagInput

func (InputTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputTag)(nil)).Elem()
}

func (i InputTagArray) ToInputTagArrayOutput() InputTagArrayOutput {
	return i.ToInputTagArrayOutputWithContext(context.Background())
}

func (i InputTagArray) ToInputTagArrayOutputWithContext(ctx context.Context) InputTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputTagArrayOutput)
}

// Tags to be applied to Input.
type InputTagOutput struct{ *pulumi.OutputState }

func (InputTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputTag)(nil)).Elem()
}

func (o InputTagOutput) ToInputTagOutput() InputTagOutput {
	return o
}

func (o InputTagOutput) ToInputTagOutputWithContext(ctx context.Context) InputTagOutput {
	return o
}

// Key of the Tag.
func (o InputTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InputTag) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the Tag.
func (o InputTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InputTag) string { return v.Value }).(pulumi.StringOutput)
}

type InputTagArrayOutput struct{ *pulumi.OutputState }

func (InputTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputTag)(nil)).Elem()
}

func (o InputTagArrayOutput) ToInputTagArrayOutput() InputTagArrayOutput {
	return o
}

func (o InputTagArrayOutput) ToInputTagArrayOutputWithContext(ctx context.Context) InputTagArrayOutput {
	return o
}

func (o InputTagArrayOutput) Index(i pulumi.IntInput) InputTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputTag {
		return vs[0].([]InputTag)[vs[1].(int)]
	}).(InputTagOutput)
}

func init() {
	pulumi.RegisterOutputType(DetectorModelActionOutput{})
	pulumi.RegisterOutputType(DetectorModelActionArrayOutput{})
	pulumi.RegisterOutputType(DetectorModelAssetPropertyTimestampOutput{})
	pulumi.RegisterOutputType(DetectorModelAssetPropertyTimestampPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelAssetPropertyValueOutput{})
	pulumi.RegisterOutputType(DetectorModelAssetPropertyValuePtrOutput{})
	pulumi.RegisterOutputType(DetectorModelAssetPropertyVariantOutput{})
	pulumi.RegisterOutputType(DetectorModelAssetPropertyVariantPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelClearTimerOutput{})
	pulumi.RegisterOutputType(DetectorModelClearTimerPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelDetectorModelDefinitionOutput{})
	pulumi.RegisterOutputType(DetectorModelDetectorModelDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelDynamoDBOutput{})
	pulumi.RegisterOutputType(DetectorModelDynamoDBPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelDynamoDBv2Output{})
	pulumi.RegisterOutputType(DetectorModelDynamoDBv2PtrOutput{})
	pulumi.RegisterOutputType(DetectorModelEventOutput{})
	pulumi.RegisterOutputType(DetectorModelEventArrayOutput{})
	pulumi.RegisterOutputType(DetectorModelFirehoseOutput{})
	pulumi.RegisterOutputType(DetectorModelFirehosePtrOutput{})
	pulumi.RegisterOutputType(DetectorModelIotEventsOutput{})
	pulumi.RegisterOutputType(DetectorModelIotEventsPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelIotSiteWiseOutput{})
	pulumi.RegisterOutputType(DetectorModelIotSiteWisePtrOutput{})
	pulumi.RegisterOutputType(DetectorModelIotTopicPublishOutput{})
	pulumi.RegisterOutputType(DetectorModelIotTopicPublishPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelLambdaOutput{})
	pulumi.RegisterOutputType(DetectorModelLambdaPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelOnEnterOutput{})
	pulumi.RegisterOutputType(DetectorModelOnEnterPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelOnExitOutput{})
	pulumi.RegisterOutputType(DetectorModelOnExitPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelOnInputOutput{})
	pulumi.RegisterOutputType(DetectorModelOnInputPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelPayloadOutput{})
	pulumi.RegisterOutputType(DetectorModelPayloadPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelResetTimerOutput{})
	pulumi.RegisterOutputType(DetectorModelResetTimerPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelSetTimerOutput{})
	pulumi.RegisterOutputType(DetectorModelSetTimerPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelSetVariableOutput{})
	pulumi.RegisterOutputType(DetectorModelSetVariablePtrOutput{})
	pulumi.RegisterOutputType(DetectorModelSnsOutput{})
	pulumi.RegisterOutputType(DetectorModelSnsPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelSqsOutput{})
	pulumi.RegisterOutputType(DetectorModelSqsPtrOutput{})
	pulumi.RegisterOutputType(DetectorModelStateTypeOutput{})
	pulumi.RegisterOutputType(DetectorModelStateTypeArrayOutput{})
	pulumi.RegisterOutputType(DetectorModelTagOutput{})
	pulumi.RegisterOutputType(DetectorModelTagArrayOutput{})
	pulumi.RegisterOutputType(DetectorModelTransitionEventOutput{})
	pulumi.RegisterOutputType(DetectorModelTransitionEventArrayOutput{})
	pulumi.RegisterOutputType(InputAttributeOutput{})
	pulumi.RegisterOutputType(InputAttributeArrayOutput{})
	pulumi.RegisterOutputType(InputInputDefinitionOutput{})
	pulumi.RegisterOutputType(InputInputDefinitionPtrOutput{})
	pulumi.RegisterOutputType(InputTagOutput{})
	pulumi.RegisterOutputType(InputTagArrayOutput{})
}
