// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotevents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an alarm model to monitor an ITE input attribute. You can use the alarm to get notified when the value is outside a specified range. For more information, see [Create an alarm model](https://docs.aws.amazon.com/iotevents/latest/developerguide/create-alarms.html) in the *Developer Guide*.
func LookupAlarmModel(ctx *pulumi.Context, args *LookupAlarmModelArgs, opts ...pulumi.InvokeOption) (*LookupAlarmModelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAlarmModelResult
	err := ctx.Invoke("aws-native:iotevents:getAlarmModel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAlarmModelArgs struct {
	// The name of the alarm model.
	AlarmModelName string `pulumi:"alarmModelName"`
}

type LookupAlarmModelResult struct {
	// Contains the configuration information of alarm state changes.
	AlarmCapabilities *AlarmModelAlarmCapabilities `pulumi:"alarmCapabilities"`
	// Contains information about one or more alarm actions.
	AlarmEventActions *AlarmModelAlarmEventActions `pulumi:"alarmEventActions"`
	// The description of the alarm model.
	AlarmModelDescription *string `pulumi:"alarmModelDescription"`
	// Defines when your alarm is invoked.
	AlarmRule *AlarmModelAlarmRule `pulumi:"alarmRule"`
	// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
	RoleArn *string `pulumi:"roleArn"`
	// A non-negative integer that reflects the severity level of the alarm.
	Severity *int `pulumi:"severity"`
	// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
	//  You can create up to 50 tags for one alarm model.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupAlarmModelOutput(ctx *pulumi.Context, args LookupAlarmModelOutputArgs, opts ...pulumi.InvokeOption) LookupAlarmModelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAlarmModelResultOutput, error) {
			args := v.(LookupAlarmModelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iotevents:getAlarmModel", args, LookupAlarmModelResultOutput{}, options).(LookupAlarmModelResultOutput), nil
		}).(LookupAlarmModelResultOutput)
}

type LookupAlarmModelOutputArgs struct {
	// The name of the alarm model.
	AlarmModelName pulumi.StringInput `pulumi:"alarmModelName"`
}

func (LookupAlarmModelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlarmModelArgs)(nil)).Elem()
}

type LookupAlarmModelResultOutput struct{ *pulumi.OutputState }

func (LookupAlarmModelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlarmModelResult)(nil)).Elem()
}

func (o LookupAlarmModelResultOutput) ToLookupAlarmModelResultOutput() LookupAlarmModelResultOutput {
	return o
}

func (o LookupAlarmModelResultOutput) ToLookupAlarmModelResultOutputWithContext(ctx context.Context) LookupAlarmModelResultOutput {
	return o
}

// Contains the configuration information of alarm state changes.
func (o LookupAlarmModelResultOutput) AlarmCapabilities() AlarmModelAlarmCapabilitiesPtrOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) *AlarmModelAlarmCapabilities { return v.AlarmCapabilities }).(AlarmModelAlarmCapabilitiesPtrOutput)
}

// Contains information about one or more alarm actions.
func (o LookupAlarmModelResultOutput) AlarmEventActions() AlarmModelAlarmEventActionsPtrOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) *AlarmModelAlarmEventActions { return v.AlarmEventActions }).(AlarmModelAlarmEventActionsPtrOutput)
}

// The description of the alarm model.
func (o LookupAlarmModelResultOutput) AlarmModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) *string { return v.AlarmModelDescription }).(pulumi.StringPtrOutput)
}

// Defines when your alarm is invoked.
func (o LookupAlarmModelResultOutput) AlarmRule() AlarmModelAlarmRulePtrOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) *AlarmModelAlarmRule { return v.AlarmRule }).(AlarmModelAlarmRulePtrOutput)
}

// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
func (o LookupAlarmModelResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// A non-negative integer that reflects the severity level of the alarm.
func (o LookupAlarmModelResultOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
//
//	You can create up to 50 tags for one alarm model.
func (o LookupAlarmModelResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupAlarmModelResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAlarmModelResultOutput{})
}
