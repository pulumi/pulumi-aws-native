// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotevents

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an alarm model to monitor an ITE input attribute. You can use the alarm to get notified when the value is outside a specified range. For more information, see [Create an alarm model](https://docs.aws.amazon.com/iotevents/latest/developerguide/create-alarms.html) in the *Developer Guide*.
type AlarmModel struct {
	pulumi.CustomResourceState

	// Contains the configuration information of alarm state changes.
	AlarmCapabilities AlarmModelAlarmCapabilitiesPtrOutput `pulumi:"alarmCapabilities"`
	// Contains information about one or more alarm actions.
	AlarmEventActions AlarmModelAlarmEventActionsPtrOutput `pulumi:"alarmEventActions"`
	// The description of the alarm model.
	AlarmModelDescription pulumi.StringPtrOutput `pulumi:"alarmModelDescription"`
	// The name of the alarm model.
	AlarmModelName pulumi.StringPtrOutput `pulumi:"alarmModelName"`
	// Defines when your alarm is invoked.
	AlarmRule AlarmModelAlarmRuleOutput `pulumi:"alarmRule"`
	// An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// A non-negative integer that reflects the severity level of the alarm.
	Severity pulumi.IntPtrOutput `pulumi:"severity"`
	// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
	//  You can create up to 50 tags for one alarm model.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewAlarmModel registers a new resource with the given unique name, arguments, and options.
func NewAlarmModel(ctx *pulumi.Context,
	name string, args *AlarmModelArgs, opts ...pulumi.ResourceOption) (*AlarmModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlarmRule == nil {
		return nil, errors.New("invalid value for required argument 'AlarmRule'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"alarmModelName",
		"key",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlarmModel
	err := ctx.RegisterResource("aws-native:iotevents:AlarmModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlarmModel gets an existing AlarmModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlarmModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlarmModelState, opts ...pulumi.ResourceOption) (*AlarmModel, error) {
	var resource AlarmModel
	err := ctx.ReadResource("aws-native:iotevents:AlarmModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlarmModel resources.
type alarmModelState struct {
}

type AlarmModelState struct {
}

func (AlarmModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmModelState)(nil)).Elem()
}

type alarmModelArgs struct {
	// Contains the configuration information of alarm state changes.
	AlarmCapabilities *AlarmModelAlarmCapabilities `pulumi:"alarmCapabilities"`
	// Contains information about one or more alarm actions.
	AlarmEventActions *AlarmModelAlarmEventActions `pulumi:"alarmEventActions"`
	// The description of the alarm model.
	AlarmModelDescription *string `pulumi:"alarmModelDescription"`
	// The name of the alarm model.
	AlarmModelName *string `pulumi:"alarmModelName"`
	// Defines when your alarm is invoked.
	AlarmRule AlarmModelAlarmRule `pulumi:"alarmRule"`
	// An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
	Key *string `pulumi:"key"`
	// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
	RoleArn string `pulumi:"roleArn"`
	// A non-negative integer that reflects the severity level of the alarm.
	Severity *int `pulumi:"severity"`
	// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
	//  You can create up to 50 tags for one alarm model.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a AlarmModel resource.
type AlarmModelArgs struct {
	// Contains the configuration information of alarm state changes.
	AlarmCapabilities AlarmModelAlarmCapabilitiesPtrInput
	// Contains information about one or more alarm actions.
	AlarmEventActions AlarmModelAlarmEventActionsPtrInput
	// The description of the alarm model.
	AlarmModelDescription pulumi.StringPtrInput
	// The name of the alarm model.
	AlarmModelName pulumi.StringPtrInput
	// Defines when your alarm is invoked.
	AlarmRule AlarmModelAlarmRuleInput
	// An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
	Key pulumi.StringPtrInput
	// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
	RoleArn pulumi.StringInput
	// A non-negative integer that reflects the severity level of the alarm.
	Severity pulumi.IntPtrInput
	// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
	//  You can create up to 50 tags for one alarm model.
	Tags aws.TagArrayInput
}

func (AlarmModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmModelArgs)(nil)).Elem()
}

type AlarmModelInput interface {
	pulumi.Input

	ToAlarmModelOutput() AlarmModelOutput
	ToAlarmModelOutputWithContext(ctx context.Context) AlarmModelOutput
}

func (*AlarmModel) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmModel)(nil)).Elem()
}

func (i *AlarmModel) ToAlarmModelOutput() AlarmModelOutput {
	return i.ToAlarmModelOutputWithContext(context.Background())
}

func (i *AlarmModel) ToAlarmModelOutputWithContext(ctx context.Context) AlarmModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmModelOutput)
}

type AlarmModelOutput struct{ *pulumi.OutputState }

func (AlarmModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmModel)(nil)).Elem()
}

func (o AlarmModelOutput) ToAlarmModelOutput() AlarmModelOutput {
	return o
}

func (o AlarmModelOutput) ToAlarmModelOutputWithContext(ctx context.Context) AlarmModelOutput {
	return o
}

// Contains the configuration information of alarm state changes.
func (o AlarmModelOutput) AlarmCapabilities() AlarmModelAlarmCapabilitiesPtrOutput {
	return o.ApplyT(func(v *AlarmModel) AlarmModelAlarmCapabilitiesPtrOutput { return v.AlarmCapabilities }).(AlarmModelAlarmCapabilitiesPtrOutput)
}

// Contains information about one or more alarm actions.
func (o AlarmModelOutput) AlarmEventActions() AlarmModelAlarmEventActionsPtrOutput {
	return o.ApplyT(func(v *AlarmModel) AlarmModelAlarmEventActionsPtrOutput { return v.AlarmEventActions }).(AlarmModelAlarmEventActionsPtrOutput)
}

// The description of the alarm model.
func (o AlarmModelOutput) AlarmModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmModel) pulumi.StringPtrOutput { return v.AlarmModelDescription }).(pulumi.StringPtrOutput)
}

// The name of the alarm model.
func (o AlarmModelOutput) AlarmModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmModel) pulumi.StringPtrOutput { return v.AlarmModelName }).(pulumi.StringPtrOutput)
}

// Defines when your alarm is invoked.
func (o AlarmModelOutput) AlarmRule() AlarmModelAlarmRuleOutput {
	return o.ApplyT(func(v *AlarmModel) AlarmModelAlarmRuleOutput { return v.AlarmRule }).(AlarmModelAlarmRuleOutput)
}

// An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
func (o AlarmModelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmModel) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
func (o AlarmModelOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmModel) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// A non-negative integer that reflects the severity level of the alarm.
func (o AlarmModelOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmModel) pulumi.IntPtrOutput { return v.Severity }).(pulumi.IntPtrOutput)
}

// A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
//
//	You can create up to 50 tags for one alarm model.
func (o AlarmModelOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *AlarmModel) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmModelInput)(nil)).Elem(), &AlarmModel{})
	pulumi.RegisterOutputType(AlarmModelOutput{})
}
