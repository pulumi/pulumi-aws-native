// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotevents

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::IoTEvents::AlarmModel resource creates a alarm model. AWS IoT Events alarms help you monitor your data for changes. The data can be metrics that you measure for your equipment and processes. You can create alarms that send notifications when a threshold is breached. Alarms help you detect issues, streamline maintenance, and optimize performance of your equipment and processes.
//
// Alarms are instances of alarm models. The alarm model specifies what to detect, when to send notifications, who gets notified, and more. You can also specify one or more supported actions that occur when the alarm state changes. AWS IoT Events routes input attributes derived from your data to the appropriate alarms. If the data that you're monitoring is outside the specified range, the alarm is invoked. You can also acknowledge the alarms or set them to the snooze mode.
type AlarmModel struct {
	pulumi.CustomResourceState

	AlarmCapabilities AlarmModelAlarmCapabilitiesPtrOutput `pulumi:"alarmCapabilities"`
	AlarmEventActions AlarmModelAlarmEventActionsPtrOutput `pulumi:"alarmEventActions"`
	// A brief description of the alarm model.
	AlarmModelDescription pulumi.StringPtrOutput `pulumi:"alarmModelDescription"`
	// The name of the alarm model.
	AlarmModelName pulumi.StringPtrOutput    `pulumi:"alarmModelName"`
	AlarmRule      AlarmModelAlarmRuleOutput `pulumi:"alarmRule"`
	// The value used to identify a alarm instance. When a device or system sends input, a new alarm instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding alarm instance based on this identifying information.
	//
	// This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct alarm instance, the device must send a message payload that contains the same attribute-value.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// A non-negative integer that reflects the severity level of the alarm.
	Severity pulumi.IntPtrOutput `pulumi:"severity"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	Tags AlarmModelTagArrayOutput `pulumi:"tags"`
}

// NewAlarmModel registers a new resource with the given unique name, arguments, and options.
func NewAlarmModel(ctx *pulumi.Context,
	name string, args *AlarmModelArgs, opts ...pulumi.ResourceOption) (*AlarmModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlarmRule == nil {
		return nil, errors.New("invalid value for required argument 'AlarmRule'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource AlarmModel
	err := ctx.RegisterResource("aws-native:iotevents:AlarmModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlarmModel gets an existing AlarmModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlarmModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlarmModelState, opts ...pulumi.ResourceOption) (*AlarmModel, error) {
	var resource AlarmModel
	err := ctx.ReadResource("aws-native:iotevents:AlarmModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlarmModel resources.
type alarmModelState struct {
}

type AlarmModelState struct {
}

func (AlarmModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmModelState)(nil)).Elem()
}

type alarmModelArgs struct {
	AlarmCapabilities *AlarmModelAlarmCapabilities `pulumi:"alarmCapabilities"`
	AlarmEventActions *AlarmModelAlarmEventActions `pulumi:"alarmEventActions"`
	// A brief description of the alarm model.
	AlarmModelDescription *string `pulumi:"alarmModelDescription"`
	// The name of the alarm model.
	AlarmModelName *string             `pulumi:"alarmModelName"`
	AlarmRule      AlarmModelAlarmRule `pulumi:"alarmRule"`
	// The value used to identify a alarm instance. When a device or system sends input, a new alarm instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding alarm instance based on this identifying information.
	//
	// This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct alarm instance, the device must send a message payload that contains the same attribute-value.
	Key *string `pulumi:"key"`
	// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
	RoleArn string `pulumi:"roleArn"`
	// A non-negative integer that reflects the severity level of the alarm.
	Severity *int `pulumi:"severity"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	Tags []AlarmModelTag `pulumi:"tags"`
}

// The set of arguments for constructing a AlarmModel resource.
type AlarmModelArgs struct {
	AlarmCapabilities AlarmModelAlarmCapabilitiesPtrInput
	AlarmEventActions AlarmModelAlarmEventActionsPtrInput
	// A brief description of the alarm model.
	AlarmModelDescription pulumi.StringPtrInput
	// The name of the alarm model.
	AlarmModelName pulumi.StringPtrInput
	AlarmRule      AlarmModelAlarmRuleInput
	// The value used to identify a alarm instance. When a device or system sends input, a new alarm instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding alarm instance based on this identifying information.
	//
	// This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct alarm instance, the device must send a message payload that contains the same attribute-value.
	Key pulumi.StringPtrInput
	// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
	RoleArn pulumi.StringInput
	// A non-negative integer that reflects the severity level of the alarm.
	Severity pulumi.IntPtrInput
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	Tags AlarmModelTagArrayInput
}

func (AlarmModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmModelArgs)(nil)).Elem()
}

type AlarmModelInput interface {
	pulumi.Input

	ToAlarmModelOutput() AlarmModelOutput
	ToAlarmModelOutputWithContext(ctx context.Context) AlarmModelOutput
}

func (*AlarmModel) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmModel)(nil)).Elem()
}

func (i *AlarmModel) ToAlarmModelOutput() AlarmModelOutput {
	return i.ToAlarmModelOutputWithContext(context.Background())
}

func (i *AlarmModel) ToAlarmModelOutputWithContext(ctx context.Context) AlarmModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmModelOutput)
}

type AlarmModelOutput struct{ *pulumi.OutputState }

func (AlarmModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmModel)(nil)).Elem()
}

func (o AlarmModelOutput) ToAlarmModelOutput() AlarmModelOutput {
	return o
}

func (o AlarmModelOutput) ToAlarmModelOutputWithContext(ctx context.Context) AlarmModelOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmModelInput)(nil)).Elem(), &AlarmModel{})
	pulumi.RegisterOutputType(AlarmModelOutput{})
}
