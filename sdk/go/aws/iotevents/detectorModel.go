// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotevents

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *Developer Guide*.
//
//	 When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) all detector instances created by the model are reset to their initial states. (The detector's ``state``, and the values of any variables and timers are reset.)
//	When you successfully update a detector model (using the ITE console, ITE API or CLI commands, or CFN) the version number of the detector model is incremented. (A detector model with version number 1 before the update has version number 2 after the update succeeds.)
//	If you attempt to update a detector model using CFN and the update does not succeed, the system may, in some cases, restore the original detector model. When this occurs, the detector model's version is incremented twice (for example, from version 1 to version 3) and the detector instances are reset.
//	Also, be aware that if you attempt to update several detector models at once using CFN, some updates may succeed and others fail. In this case, the effects on each detector model's detector instances and version number depend on whether the update succeeded or failed, with the results as stated.
type DetectorModel struct {
	pulumi.CustomResourceState

	// Information that defines how a detector operates.
	DetectorModelDefinition DetectorModelDefinitionOutput `pulumi:"detectorModelDefinition"`
	// A brief description of the detector model.
	DetectorModelDescription pulumi.StringPtrOutput `pulumi:"detectorModelDescription"`
	// The name of the detector model.
	DetectorModelName pulumi.StringPtrOutput `pulumi:"detectorModelName"`
	// Information about the order in which events are evaluated and how actions are executed.
	EvaluationMethod DetectorModelEvaluationMethodPtrOutput `pulumi:"evaluationMethod"`
	// The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. ITE can continue to route input to its corresponding detector instance based on this identifying information.
	//  This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// The ARN of the role that grants permission to ITE to perform its operations.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// An array of key-value pairs to apply to this resource.
	//  For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDetectorModel registers a new resource with the given unique name, arguments, and options.
func NewDetectorModel(ctx *pulumi.Context,
	name string, args *DetectorModelArgs, opts ...pulumi.ResourceOption) (*DetectorModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DetectorModelDefinition == nil {
		return nil, errors.New("invalid value for required argument 'DetectorModelDefinition'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"detectorModelName",
		"key",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DetectorModel
	err := ctx.RegisterResource("aws-native:iotevents:DetectorModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDetectorModel gets an existing DetectorModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDetectorModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DetectorModelState, opts ...pulumi.ResourceOption) (*DetectorModel, error) {
	var resource DetectorModel
	err := ctx.ReadResource("aws-native:iotevents:DetectorModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DetectorModel resources.
type detectorModelState struct {
}

type DetectorModelState struct {
}

func (DetectorModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*detectorModelState)(nil)).Elem()
}

type detectorModelArgs struct {
	// Information that defines how a detector operates.
	DetectorModelDefinition DetectorModelDefinition `pulumi:"detectorModelDefinition"`
	// A brief description of the detector model.
	DetectorModelDescription *string `pulumi:"detectorModelDescription"`
	// The name of the detector model.
	DetectorModelName *string `pulumi:"detectorModelName"`
	// Information about the order in which events are evaluated and how actions are executed.
	EvaluationMethod *DetectorModelEvaluationMethod `pulumi:"evaluationMethod"`
	// The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. ITE can continue to route input to its corresponding detector instance based on this identifying information.
	//  This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
	Key *string `pulumi:"key"`
	// The ARN of the role that grants permission to ITE to perform its operations.
	RoleArn string `pulumi:"roleArn"`
	// An array of key-value pairs to apply to this resource.
	//  For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DetectorModel resource.
type DetectorModelArgs struct {
	// Information that defines how a detector operates.
	DetectorModelDefinition DetectorModelDefinitionInput
	// A brief description of the detector model.
	DetectorModelDescription pulumi.StringPtrInput
	// The name of the detector model.
	DetectorModelName pulumi.StringPtrInput
	// Information about the order in which events are evaluated and how actions are executed.
	EvaluationMethod DetectorModelEvaluationMethodPtrInput
	// The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. ITE can continue to route input to its corresponding detector instance based on this identifying information.
	//  This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
	Key pulumi.StringPtrInput
	// The ARN of the role that grants permission to ITE to perform its operations.
	RoleArn pulumi.StringInput
	// An array of key-value pairs to apply to this resource.
	//  For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	Tags aws.TagArrayInput
}

func (DetectorModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*detectorModelArgs)(nil)).Elem()
}

type DetectorModelInput interface {
	pulumi.Input

	ToDetectorModelOutput() DetectorModelOutput
	ToDetectorModelOutputWithContext(ctx context.Context) DetectorModelOutput
}

func (*DetectorModel) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModel)(nil)).Elem()
}

func (i *DetectorModel) ToDetectorModelOutput() DetectorModelOutput {
	return i.ToDetectorModelOutputWithContext(context.Background())
}

func (i *DetectorModel) ToDetectorModelOutputWithContext(ctx context.Context) DetectorModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorModelOutput)
}

type DetectorModelOutput struct{ *pulumi.OutputState }

func (DetectorModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorModel)(nil)).Elem()
}

func (o DetectorModelOutput) ToDetectorModelOutput() DetectorModelOutput {
	return o
}

func (o DetectorModelOutput) ToDetectorModelOutputWithContext(ctx context.Context) DetectorModelOutput {
	return o
}

// Information that defines how a detector operates.
func (o DetectorModelOutput) DetectorModelDefinition() DetectorModelDefinitionOutput {
	return o.ApplyT(func(v *DetectorModel) DetectorModelDefinitionOutput { return v.DetectorModelDefinition }).(DetectorModelDefinitionOutput)
}

// A brief description of the detector model.
func (o DetectorModelOutput) DetectorModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModel) pulumi.StringPtrOutput { return v.DetectorModelDescription }).(pulumi.StringPtrOutput)
}

// The name of the detector model.
func (o DetectorModelOutput) DetectorModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModel) pulumi.StringPtrOutput { return v.DetectorModelName }).(pulumi.StringPtrOutput)
}

// Information about the order in which events are evaluated and how actions are executed.
func (o DetectorModelOutput) EvaluationMethod() DetectorModelEvaluationMethodPtrOutput {
	return o.ApplyT(func(v *DetectorModel) DetectorModelEvaluationMethodPtrOutput { return v.EvaluationMethod }).(DetectorModelEvaluationMethodPtrOutput)
}

// The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. ITE can continue to route input to its corresponding detector instance based on this identifying information.
//
//	This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
func (o DetectorModelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorModel) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants permission to ITE to perform its operations.
func (o DetectorModelOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DetectorModel) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
//
//	For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
func (o DetectorModelOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *DetectorModel) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorModelInput)(nil)).Elem(), &DetectorModel{})
	pulumi.RegisterOutputType(DetectorModelOutput{})
}
