// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current state of the ChannelPlacementGroupState
type ChannelPlacementGroupStateEnum string

const (
	ChannelPlacementGroupStateEnumUnassigned  = ChannelPlacementGroupStateEnum("UNASSIGNED")
	ChannelPlacementGroupStateEnumAssigning   = ChannelPlacementGroupStateEnum("ASSIGNING")
	ChannelPlacementGroupStateEnumAssigned    = ChannelPlacementGroupStateEnum("ASSIGNED")
	ChannelPlacementGroupStateEnumDeleting    = ChannelPlacementGroupStateEnum("DELETING")
	ChannelPlacementGroupStateEnumDeleted     = ChannelPlacementGroupStateEnum("DELETED")
	ChannelPlacementGroupStateEnumUnassigning = ChannelPlacementGroupStateEnum("UNASSIGNING")
)

type ChannelPlacementGroupStateEnumOutput struct{ *pulumi.OutputState }

func (ChannelPlacementGroupStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelPlacementGroupStateEnum)(nil)).Elem()
}

func (o ChannelPlacementGroupStateEnumOutput) ToChannelPlacementGroupStateEnumOutput() ChannelPlacementGroupStateEnumOutput {
	return o
}

func (o ChannelPlacementGroupStateEnumOutput) ToChannelPlacementGroupStateEnumOutputWithContext(ctx context.Context) ChannelPlacementGroupStateEnumOutput {
	return o
}

func (o ChannelPlacementGroupStateEnumOutput) ToChannelPlacementGroupStateEnumPtrOutput() ChannelPlacementGroupStateEnumPtrOutput {
	return o.ToChannelPlacementGroupStateEnumPtrOutputWithContext(context.Background())
}

func (o ChannelPlacementGroupStateEnumOutput) ToChannelPlacementGroupStateEnumPtrOutputWithContext(ctx context.Context) ChannelPlacementGroupStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelPlacementGroupStateEnum) *ChannelPlacementGroupStateEnum {
		return &v
	}).(ChannelPlacementGroupStateEnumPtrOutput)
}

func (o ChannelPlacementGroupStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelPlacementGroupStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelPlacementGroupStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelPlacementGroupStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelPlacementGroupStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelPlacementGroupStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelPlacementGroupStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ChannelPlacementGroupStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelPlacementGroupStateEnum)(nil)).Elem()
}

func (o ChannelPlacementGroupStateEnumPtrOutput) ToChannelPlacementGroupStateEnumPtrOutput() ChannelPlacementGroupStateEnumPtrOutput {
	return o
}

func (o ChannelPlacementGroupStateEnumPtrOutput) ToChannelPlacementGroupStateEnumPtrOutputWithContext(ctx context.Context) ChannelPlacementGroupStateEnumPtrOutput {
	return o
}

func (o ChannelPlacementGroupStateEnumPtrOutput) Elem() ChannelPlacementGroupStateEnumOutput {
	return o.ApplyT(func(v *ChannelPlacementGroupStateEnum) ChannelPlacementGroupStateEnum {
		if v != nil {
			return *v
		}
		var ret ChannelPlacementGroupStateEnum
		return ret
	}).(ChannelPlacementGroupStateEnumOutput)
}

func (o ChannelPlacementGroupStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelPlacementGroupStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelPlacementGroupStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The comparison operator used to compare the specified statistic and the threshold.
type CloudWatchAlarmTemplateComparisonOperator string

const (
	CloudWatchAlarmTemplateComparisonOperatorGreaterThanOrEqualToThreshold = CloudWatchAlarmTemplateComparisonOperator("GreaterThanOrEqualToThreshold")
	CloudWatchAlarmTemplateComparisonOperatorGreaterThanThreshold          = CloudWatchAlarmTemplateComparisonOperator("GreaterThanThreshold")
	CloudWatchAlarmTemplateComparisonOperatorLessThanThreshold             = CloudWatchAlarmTemplateComparisonOperator("LessThanThreshold")
	CloudWatchAlarmTemplateComparisonOperatorLessThanOrEqualToThreshold    = CloudWatchAlarmTemplateComparisonOperator("LessThanOrEqualToThreshold")
)

func (CloudWatchAlarmTemplateComparisonOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateComparisonOperator)(nil)).Elem()
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToCloudWatchAlarmTemplateComparisonOperatorOutput() CloudWatchAlarmTemplateComparisonOperatorOutput {
	return pulumi.ToOutput(e).(CloudWatchAlarmTemplateComparisonOperatorOutput)
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToCloudWatchAlarmTemplateComparisonOperatorOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateComparisonOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudWatchAlarmTemplateComparisonOperatorOutput)
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutput() CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return e.ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return CloudWatchAlarmTemplateComparisonOperator(e).ToCloudWatchAlarmTemplateComparisonOperatorOutputWithContext(ctx).ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(ctx)
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateComparisonOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudWatchAlarmTemplateComparisonOperatorOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateComparisonOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateComparisonOperator)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToCloudWatchAlarmTemplateComparisonOperatorOutput() CloudWatchAlarmTemplateComparisonOperatorOutput {
	return o
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToCloudWatchAlarmTemplateComparisonOperatorOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateComparisonOperatorOutput {
	return o
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutput() CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return o.ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudWatchAlarmTemplateComparisonOperator) *CloudWatchAlarmTemplateComparisonOperator {
		return &v
	}).(CloudWatchAlarmTemplateComparisonOperatorPtrOutput)
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateComparisonOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateComparisonOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateComparisonOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudWatchAlarmTemplateComparisonOperatorPtrOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateComparisonOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudWatchAlarmTemplateComparisonOperator)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateComparisonOperatorPtrOutput) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutput() CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateComparisonOperatorPtrOutput) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateComparisonOperatorPtrOutput) Elem() CloudWatchAlarmTemplateComparisonOperatorOutput {
	return o.ApplyT(func(v *CloudWatchAlarmTemplateComparisonOperator) CloudWatchAlarmTemplateComparisonOperator {
		if v != nil {
			return *v
		}
		var ret CloudWatchAlarmTemplateComparisonOperator
		return ret
	}).(CloudWatchAlarmTemplateComparisonOperatorOutput)
}

func (o CloudWatchAlarmTemplateComparisonOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateComparisonOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudWatchAlarmTemplateComparisonOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudWatchAlarmTemplateComparisonOperatorInput is an input type that accepts values of the CloudWatchAlarmTemplateComparisonOperator enum
// A concrete instance of `CloudWatchAlarmTemplateComparisonOperatorInput` can be one of the following:
//
//	CloudWatchAlarmTemplateComparisonOperatorGreaterThanOrEqualToThreshold
//	CloudWatchAlarmTemplateComparisonOperatorGreaterThanThreshold
//	CloudWatchAlarmTemplateComparisonOperatorLessThanThreshold
//	CloudWatchAlarmTemplateComparisonOperatorLessThanOrEqualToThreshold
type CloudWatchAlarmTemplateComparisonOperatorInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateComparisonOperatorOutput() CloudWatchAlarmTemplateComparisonOperatorOutput
	ToCloudWatchAlarmTemplateComparisonOperatorOutputWithContext(context.Context) CloudWatchAlarmTemplateComparisonOperatorOutput
}

var cloudWatchAlarmTemplateComparisonOperatorPtrType = reflect.TypeOf((**CloudWatchAlarmTemplateComparisonOperator)(nil)).Elem()

type CloudWatchAlarmTemplateComparisonOperatorPtrInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateComparisonOperatorPtrOutput() CloudWatchAlarmTemplateComparisonOperatorPtrOutput
	ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(context.Context) CloudWatchAlarmTemplateComparisonOperatorPtrOutput
}

type cloudWatchAlarmTemplateComparisonOperatorPtr string

func CloudWatchAlarmTemplateComparisonOperatorPtr(v string) CloudWatchAlarmTemplateComparisonOperatorPtrInput {
	return (*cloudWatchAlarmTemplateComparisonOperatorPtr)(&v)
}

func (*cloudWatchAlarmTemplateComparisonOperatorPtr) ElementType() reflect.Type {
	return cloudWatchAlarmTemplateComparisonOperatorPtrType
}

func (in *cloudWatchAlarmTemplateComparisonOperatorPtr) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutput() CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return pulumi.ToOutput(in).(CloudWatchAlarmTemplateComparisonOperatorPtrOutput)
}

func (in *cloudWatchAlarmTemplateComparisonOperatorPtr) ToCloudWatchAlarmTemplateComparisonOperatorPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateComparisonOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudWatchAlarmTemplateComparisonOperatorPtrOutput)
}

// The statistic to apply to the alarm's metric data.
type CloudWatchAlarmTemplateStatistic string

const (
	CloudWatchAlarmTemplateStatisticSampleCount = CloudWatchAlarmTemplateStatistic("SampleCount")
	CloudWatchAlarmTemplateStatisticAverage     = CloudWatchAlarmTemplateStatistic("Average")
	CloudWatchAlarmTemplateStatisticSum         = CloudWatchAlarmTemplateStatistic("Sum")
	CloudWatchAlarmTemplateStatisticMinimum     = CloudWatchAlarmTemplateStatistic("Minimum")
	CloudWatchAlarmTemplateStatisticMaximum     = CloudWatchAlarmTemplateStatistic("Maximum")
)

func (CloudWatchAlarmTemplateStatistic) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateStatistic)(nil)).Elem()
}

func (e CloudWatchAlarmTemplateStatistic) ToCloudWatchAlarmTemplateStatisticOutput() CloudWatchAlarmTemplateStatisticOutput {
	return pulumi.ToOutput(e).(CloudWatchAlarmTemplateStatisticOutput)
}

func (e CloudWatchAlarmTemplateStatistic) ToCloudWatchAlarmTemplateStatisticOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudWatchAlarmTemplateStatisticOutput)
}

func (e CloudWatchAlarmTemplateStatistic) ToCloudWatchAlarmTemplateStatisticPtrOutput() CloudWatchAlarmTemplateStatisticPtrOutput {
	return e.ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateStatistic) ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateStatisticPtrOutput {
	return CloudWatchAlarmTemplateStatistic(e).ToCloudWatchAlarmTemplateStatisticOutputWithContext(ctx).ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(ctx)
}

func (e CloudWatchAlarmTemplateStatistic) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateStatistic) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateStatistic) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateStatistic) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudWatchAlarmTemplateStatisticOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateStatistic)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToCloudWatchAlarmTemplateStatisticOutput() CloudWatchAlarmTemplateStatisticOutput {
	return o
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToCloudWatchAlarmTemplateStatisticOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateStatisticOutput {
	return o
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToCloudWatchAlarmTemplateStatisticPtrOutput() CloudWatchAlarmTemplateStatisticPtrOutput {
	return o.ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateStatisticPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudWatchAlarmTemplateStatistic) *CloudWatchAlarmTemplateStatistic {
		return &v
	}).(CloudWatchAlarmTemplateStatisticPtrOutput)
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateStatistic) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateStatisticOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateStatistic) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudWatchAlarmTemplateStatisticPtrOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateStatisticPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudWatchAlarmTemplateStatistic)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateStatisticPtrOutput) ToCloudWatchAlarmTemplateStatisticPtrOutput() CloudWatchAlarmTemplateStatisticPtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateStatisticPtrOutput) ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateStatisticPtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateStatisticPtrOutput) Elem() CloudWatchAlarmTemplateStatisticOutput {
	return o.ApplyT(func(v *CloudWatchAlarmTemplateStatistic) CloudWatchAlarmTemplateStatistic {
		if v != nil {
			return *v
		}
		var ret CloudWatchAlarmTemplateStatistic
		return ret
	}).(CloudWatchAlarmTemplateStatisticOutput)
}

func (o CloudWatchAlarmTemplateStatisticPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateStatisticPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudWatchAlarmTemplateStatistic) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudWatchAlarmTemplateStatisticInput is an input type that accepts values of the CloudWatchAlarmTemplateStatistic enum
// A concrete instance of `CloudWatchAlarmTemplateStatisticInput` can be one of the following:
//
//	CloudWatchAlarmTemplateStatisticSampleCount
//	CloudWatchAlarmTemplateStatisticAverage
//	CloudWatchAlarmTemplateStatisticSum
//	CloudWatchAlarmTemplateStatisticMinimum
//	CloudWatchAlarmTemplateStatisticMaximum
type CloudWatchAlarmTemplateStatisticInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateStatisticOutput() CloudWatchAlarmTemplateStatisticOutput
	ToCloudWatchAlarmTemplateStatisticOutputWithContext(context.Context) CloudWatchAlarmTemplateStatisticOutput
}

var cloudWatchAlarmTemplateStatisticPtrType = reflect.TypeOf((**CloudWatchAlarmTemplateStatistic)(nil)).Elem()

type CloudWatchAlarmTemplateStatisticPtrInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateStatisticPtrOutput() CloudWatchAlarmTemplateStatisticPtrOutput
	ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(context.Context) CloudWatchAlarmTemplateStatisticPtrOutput
}

type cloudWatchAlarmTemplateStatisticPtr string

func CloudWatchAlarmTemplateStatisticPtr(v string) CloudWatchAlarmTemplateStatisticPtrInput {
	return (*cloudWatchAlarmTemplateStatisticPtr)(&v)
}

func (*cloudWatchAlarmTemplateStatisticPtr) ElementType() reflect.Type {
	return cloudWatchAlarmTemplateStatisticPtrType
}

func (in *cloudWatchAlarmTemplateStatisticPtr) ToCloudWatchAlarmTemplateStatisticPtrOutput() CloudWatchAlarmTemplateStatisticPtrOutput {
	return pulumi.ToOutput(in).(CloudWatchAlarmTemplateStatisticPtrOutput)
}

func (in *cloudWatchAlarmTemplateStatisticPtr) ToCloudWatchAlarmTemplateStatisticPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateStatisticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudWatchAlarmTemplateStatisticPtrOutput)
}

// The resource type this template should dynamically generate cloudwatch metric alarms for.
type CloudWatchAlarmTemplateTargetResourceType string

const (
	CloudWatchAlarmTemplateTargetResourceTypeCloudfrontDistribution           = CloudWatchAlarmTemplateTargetResourceType("CLOUDFRONT_DISTRIBUTION")
	CloudWatchAlarmTemplateTargetResourceTypeMedialiveMultiplex               = CloudWatchAlarmTemplateTargetResourceType("MEDIALIVE_MULTIPLEX")
	CloudWatchAlarmTemplateTargetResourceTypeMedialiveChannel                 = CloudWatchAlarmTemplateTargetResourceType("MEDIALIVE_CHANNEL")
	CloudWatchAlarmTemplateTargetResourceTypeMedialiveInputDevice             = CloudWatchAlarmTemplateTargetResourceType("MEDIALIVE_INPUT_DEVICE")
	CloudWatchAlarmTemplateTargetResourceTypeMediapackageChannel              = CloudWatchAlarmTemplateTargetResourceType("MEDIAPACKAGE_CHANNEL")
	CloudWatchAlarmTemplateTargetResourceTypeMediapackageOriginEndpoint       = CloudWatchAlarmTemplateTargetResourceType("MEDIAPACKAGE_ORIGIN_ENDPOINT")
	CloudWatchAlarmTemplateTargetResourceTypeMediaconnectFlow                 = CloudWatchAlarmTemplateTargetResourceType("MEDIACONNECT_FLOW")
	CloudWatchAlarmTemplateTargetResourceTypeMediatailorPlaybackConfiguration = CloudWatchAlarmTemplateTargetResourceType("MEDIATAILOR_PLAYBACK_CONFIGURATION")
	CloudWatchAlarmTemplateTargetResourceTypeS3Bucket                         = CloudWatchAlarmTemplateTargetResourceType("S3_BUCKET")
)

func (CloudWatchAlarmTemplateTargetResourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateTargetResourceType)(nil)).Elem()
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToCloudWatchAlarmTemplateTargetResourceTypeOutput() CloudWatchAlarmTemplateTargetResourceTypeOutput {
	return pulumi.ToOutput(e).(CloudWatchAlarmTemplateTargetResourceTypeOutput)
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToCloudWatchAlarmTemplateTargetResourceTypeOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTargetResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudWatchAlarmTemplateTargetResourceTypeOutput)
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutput() CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return e.ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return CloudWatchAlarmTemplateTargetResourceType(e).ToCloudWatchAlarmTemplateTargetResourceTypeOutputWithContext(ctx).ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(ctx)
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateTargetResourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudWatchAlarmTemplateTargetResourceTypeOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateTargetResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateTargetResourceType)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToCloudWatchAlarmTemplateTargetResourceTypeOutput() CloudWatchAlarmTemplateTargetResourceTypeOutput {
	return o
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToCloudWatchAlarmTemplateTargetResourceTypeOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTargetResourceTypeOutput {
	return o
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutput() CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return o.ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudWatchAlarmTemplateTargetResourceType) *CloudWatchAlarmTemplateTargetResourceType {
		return &v
	}).(CloudWatchAlarmTemplateTargetResourceTypePtrOutput)
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateTargetResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTargetResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateTargetResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudWatchAlarmTemplateTargetResourceTypePtrOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateTargetResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudWatchAlarmTemplateTargetResourceType)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateTargetResourceTypePtrOutput) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutput() CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateTargetResourceTypePtrOutput) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateTargetResourceTypePtrOutput) Elem() CloudWatchAlarmTemplateTargetResourceTypeOutput {
	return o.ApplyT(func(v *CloudWatchAlarmTemplateTargetResourceType) CloudWatchAlarmTemplateTargetResourceType {
		if v != nil {
			return *v
		}
		var ret CloudWatchAlarmTemplateTargetResourceType
		return ret
	}).(CloudWatchAlarmTemplateTargetResourceTypeOutput)
}

func (o CloudWatchAlarmTemplateTargetResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTargetResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudWatchAlarmTemplateTargetResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudWatchAlarmTemplateTargetResourceTypeInput is an input type that accepts values of the CloudWatchAlarmTemplateTargetResourceType enum
// A concrete instance of `CloudWatchAlarmTemplateTargetResourceTypeInput` can be one of the following:
//
//	CloudWatchAlarmTemplateTargetResourceTypeCloudfrontDistribution
//	CloudWatchAlarmTemplateTargetResourceTypeMedialiveMultiplex
//	CloudWatchAlarmTemplateTargetResourceTypeMedialiveChannel
//	CloudWatchAlarmTemplateTargetResourceTypeMedialiveInputDevice
//	CloudWatchAlarmTemplateTargetResourceTypeMediapackageChannel
//	CloudWatchAlarmTemplateTargetResourceTypeMediapackageOriginEndpoint
//	CloudWatchAlarmTemplateTargetResourceTypeMediaconnectFlow
//	CloudWatchAlarmTemplateTargetResourceTypeMediatailorPlaybackConfiguration
//	CloudWatchAlarmTemplateTargetResourceTypeS3Bucket
type CloudWatchAlarmTemplateTargetResourceTypeInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateTargetResourceTypeOutput() CloudWatchAlarmTemplateTargetResourceTypeOutput
	ToCloudWatchAlarmTemplateTargetResourceTypeOutputWithContext(context.Context) CloudWatchAlarmTemplateTargetResourceTypeOutput
}

var cloudWatchAlarmTemplateTargetResourceTypePtrType = reflect.TypeOf((**CloudWatchAlarmTemplateTargetResourceType)(nil)).Elem()

type CloudWatchAlarmTemplateTargetResourceTypePtrInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateTargetResourceTypePtrOutput() CloudWatchAlarmTemplateTargetResourceTypePtrOutput
	ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(context.Context) CloudWatchAlarmTemplateTargetResourceTypePtrOutput
}

type cloudWatchAlarmTemplateTargetResourceTypePtr string

func CloudWatchAlarmTemplateTargetResourceTypePtr(v string) CloudWatchAlarmTemplateTargetResourceTypePtrInput {
	return (*cloudWatchAlarmTemplateTargetResourceTypePtr)(&v)
}

func (*cloudWatchAlarmTemplateTargetResourceTypePtr) ElementType() reflect.Type {
	return cloudWatchAlarmTemplateTargetResourceTypePtrType
}

func (in *cloudWatchAlarmTemplateTargetResourceTypePtr) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutput() CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return pulumi.ToOutput(in).(CloudWatchAlarmTemplateTargetResourceTypePtrOutput)
}

func (in *cloudWatchAlarmTemplateTargetResourceTypePtr) ToCloudWatchAlarmTemplateTargetResourceTypePtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTargetResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudWatchAlarmTemplateTargetResourceTypePtrOutput)
}

// Specifies how missing data points are treated when evaluating the alarm's condition.
type CloudWatchAlarmTemplateTreatMissingData string

const (
	CloudWatchAlarmTemplateTreatMissingDataNotBreaching = CloudWatchAlarmTemplateTreatMissingData("notBreaching")
	CloudWatchAlarmTemplateTreatMissingDataBreaching    = CloudWatchAlarmTemplateTreatMissingData("breaching")
	CloudWatchAlarmTemplateTreatMissingDataIgnore       = CloudWatchAlarmTemplateTreatMissingData("ignore")
	CloudWatchAlarmTemplateTreatMissingDataMissing      = CloudWatchAlarmTemplateTreatMissingData("missing")
)

func (CloudWatchAlarmTemplateTreatMissingData) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateTreatMissingData)(nil)).Elem()
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToCloudWatchAlarmTemplateTreatMissingDataOutput() CloudWatchAlarmTemplateTreatMissingDataOutput {
	return pulumi.ToOutput(e).(CloudWatchAlarmTemplateTreatMissingDataOutput)
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToCloudWatchAlarmTemplateTreatMissingDataOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTreatMissingDataOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudWatchAlarmTemplateTreatMissingDataOutput)
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutput() CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return e.ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return CloudWatchAlarmTemplateTreatMissingData(e).ToCloudWatchAlarmTemplateTreatMissingDataOutputWithContext(ctx).ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(ctx)
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudWatchAlarmTemplateTreatMissingData) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudWatchAlarmTemplateTreatMissingDataOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateTreatMissingDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudWatchAlarmTemplateTreatMissingData)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToCloudWatchAlarmTemplateTreatMissingDataOutput() CloudWatchAlarmTemplateTreatMissingDataOutput {
	return o
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToCloudWatchAlarmTemplateTreatMissingDataOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTreatMissingDataOutput {
	return o
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutput() CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return o.ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudWatchAlarmTemplateTreatMissingData) *CloudWatchAlarmTemplateTreatMissingData {
		return &v
	}).(CloudWatchAlarmTemplateTreatMissingDataPtrOutput)
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateTreatMissingData) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTreatMissingDataOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudWatchAlarmTemplateTreatMissingData) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudWatchAlarmTemplateTreatMissingDataPtrOutput struct{ *pulumi.OutputState }

func (CloudWatchAlarmTemplateTreatMissingDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudWatchAlarmTemplateTreatMissingData)(nil)).Elem()
}

func (o CloudWatchAlarmTemplateTreatMissingDataPtrOutput) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutput() CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateTreatMissingDataPtrOutput) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return o
}

func (o CloudWatchAlarmTemplateTreatMissingDataPtrOutput) Elem() CloudWatchAlarmTemplateTreatMissingDataOutput {
	return o.ApplyT(func(v *CloudWatchAlarmTemplateTreatMissingData) CloudWatchAlarmTemplateTreatMissingData {
		if v != nil {
			return *v
		}
		var ret CloudWatchAlarmTemplateTreatMissingData
		return ret
	}).(CloudWatchAlarmTemplateTreatMissingDataOutput)
}

func (o CloudWatchAlarmTemplateTreatMissingDataPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudWatchAlarmTemplateTreatMissingDataPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudWatchAlarmTemplateTreatMissingData) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudWatchAlarmTemplateTreatMissingDataInput is an input type that accepts values of the CloudWatchAlarmTemplateTreatMissingData enum
// A concrete instance of `CloudWatchAlarmTemplateTreatMissingDataInput` can be one of the following:
//
//	CloudWatchAlarmTemplateTreatMissingDataNotBreaching
//	CloudWatchAlarmTemplateTreatMissingDataBreaching
//	CloudWatchAlarmTemplateTreatMissingDataIgnore
//	CloudWatchAlarmTemplateTreatMissingDataMissing
type CloudWatchAlarmTemplateTreatMissingDataInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateTreatMissingDataOutput() CloudWatchAlarmTemplateTreatMissingDataOutput
	ToCloudWatchAlarmTemplateTreatMissingDataOutputWithContext(context.Context) CloudWatchAlarmTemplateTreatMissingDataOutput
}

var cloudWatchAlarmTemplateTreatMissingDataPtrType = reflect.TypeOf((**CloudWatchAlarmTemplateTreatMissingData)(nil)).Elem()

type CloudWatchAlarmTemplateTreatMissingDataPtrInput interface {
	pulumi.Input

	ToCloudWatchAlarmTemplateTreatMissingDataPtrOutput() CloudWatchAlarmTemplateTreatMissingDataPtrOutput
	ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(context.Context) CloudWatchAlarmTemplateTreatMissingDataPtrOutput
}

type cloudWatchAlarmTemplateTreatMissingDataPtr string

func CloudWatchAlarmTemplateTreatMissingDataPtr(v string) CloudWatchAlarmTemplateTreatMissingDataPtrInput {
	return (*cloudWatchAlarmTemplateTreatMissingDataPtr)(&v)
}

func (*cloudWatchAlarmTemplateTreatMissingDataPtr) ElementType() reflect.Type {
	return cloudWatchAlarmTemplateTreatMissingDataPtrType
}

func (in *cloudWatchAlarmTemplateTreatMissingDataPtr) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutput() CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return pulumi.ToOutput(in).(CloudWatchAlarmTemplateTreatMissingDataPtrOutput)
}

func (in *cloudWatchAlarmTemplateTreatMissingDataPtr) ToCloudWatchAlarmTemplateTreatMissingDataPtrOutputWithContext(ctx context.Context) CloudWatchAlarmTemplateTreatMissingDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudWatchAlarmTemplateTreatMissingDataPtrOutput)
}

// The current state of the Cluster.
type ClusterStateEnum string

const (
	ClusterStateEnumCreating     = ClusterStateEnum("CREATING")
	ClusterStateEnumCreateFailed = ClusterStateEnum("CREATE_FAILED")
	ClusterStateEnumActive       = ClusterStateEnum("ACTIVE")
	ClusterStateEnumDeleting     = ClusterStateEnum("DELETING")
	ClusterStateEnumDeleted      = ClusterStateEnum("DELETED")
)

type ClusterStateEnumOutput struct{ *pulumi.OutputState }

func (ClusterStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStateEnum)(nil)).Elem()
}

func (o ClusterStateEnumOutput) ToClusterStateEnumOutput() ClusterStateEnumOutput {
	return o
}

func (o ClusterStateEnumOutput) ToClusterStateEnumOutputWithContext(ctx context.Context) ClusterStateEnumOutput {
	return o
}

func (o ClusterStateEnumOutput) ToClusterStateEnumPtrOutput() ClusterStateEnumPtrOutput {
	return o.ToClusterStateEnumPtrOutputWithContext(context.Background())
}

func (o ClusterStateEnumOutput) ToClusterStateEnumPtrOutputWithContext(ctx context.Context) ClusterStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStateEnum) *ClusterStateEnum {
		return &v
	}).(ClusterStateEnumPtrOutput)
}

func (o ClusterStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ClusterStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStateEnum)(nil)).Elem()
}

func (o ClusterStateEnumPtrOutput) ToClusterStateEnumPtrOutput() ClusterStateEnumPtrOutput {
	return o
}

func (o ClusterStateEnumPtrOutput) ToClusterStateEnumPtrOutputWithContext(ctx context.Context) ClusterStateEnumPtrOutput {
	return o
}

func (o ClusterStateEnumPtrOutput) Elem() ClusterStateEnumOutput {
	return o.ApplyT(func(v *ClusterStateEnum) ClusterStateEnum {
		if v != nil {
			return *v
		}
		var ret ClusterStateEnum
		return ret
	}).(ClusterStateEnumOutput)
}

func (o ClusterStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The hardware type for the cluster.
type ClusterType string

const (
	ClusterTypeOnPremises     = ClusterType("ON_PREMISES")
	ClusterTypeOutpostsRack   = ClusterType("OUTPOSTS_RACK")
	ClusterTypeOutpostsServer = ClusterType("OUTPOSTS_SERVER")
	ClusterTypeEc2            = ClusterType("EC2")
)

func (ClusterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (e ClusterType) ToClusterTypeOutput() ClusterTypeOutput {
	return pulumi.ToOutput(e).(ClusterTypeOutput)
}

func (e ClusterType) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterTypeOutput)
}

func (e ClusterType) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return e.ToClusterTypePtrOutputWithContext(context.Background())
}

func (e ClusterType) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return ClusterType(e).ToClusterTypeOutputWithContext(ctx).ToClusterTypePtrOutputWithContext(ctx)
}

func (e ClusterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterTypeOutput struct{ *pulumi.OutputState }

func (ClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (o ClusterTypeOutput) ToClusterTypeOutput() ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return o.ToClusterTypePtrOutputWithContext(context.Background())
}

func (o ClusterTypeOutput) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterType) *ClusterType {
		return &v
	}).(ClusterTypePtrOutput)
}

func (o ClusterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterType)(nil)).Elem()
}

func (o ClusterTypePtrOutput) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return o
}

func (o ClusterTypePtrOutput) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return o
}

func (o ClusterTypePtrOutput) Elem() ClusterTypeOutput {
	return o.ApplyT(func(v *ClusterType) ClusterType {
		if v != nil {
			return *v
		}
		var ret ClusterType
		return ret
	}).(ClusterTypeOutput)
}

func (o ClusterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterTypeInput is an input type that accepts values of the ClusterType enum
// A concrete instance of `ClusterTypeInput` can be one of the following:
//
//	ClusterTypeOnPremises
//	ClusterTypeOutpostsRack
//	ClusterTypeOutpostsServer
//	ClusterTypeEc2
type ClusterTypeInput interface {
	pulumi.Input

	ToClusterTypeOutput() ClusterTypeOutput
	ToClusterTypeOutputWithContext(context.Context) ClusterTypeOutput
}

var clusterTypePtrType = reflect.TypeOf((**ClusterType)(nil)).Elem()

type ClusterTypePtrInput interface {
	pulumi.Input

	ToClusterTypePtrOutput() ClusterTypePtrOutput
	ToClusterTypePtrOutputWithContext(context.Context) ClusterTypePtrOutput
}

type clusterTypePtr string

func ClusterTypePtr(v string) ClusterTypePtrInput {
	return (*clusterTypePtr)(&v)
}

func (*clusterTypePtr) ElementType() reflect.Type {
	return clusterTypePtrType
}

func (in *clusterTypePtr) ToClusterTypePtrOutput() ClusterTypePtrOutput {
	return pulumi.ToOutput(in).(ClusterTypePtrOutput)
}

func (in *clusterTypePtr) ToClusterTypePtrOutputWithContext(ctx context.Context) ClusterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterTypePtrOutput)
}

// The type of event to match with the rule.
type EventBridgeRuleTemplateEventType string

const (
	EventBridgeRuleTemplateEventTypeMedialiveMultiplexAlert             = EventBridgeRuleTemplateEventType("MEDIALIVE_MULTIPLEX_ALERT")
	EventBridgeRuleTemplateEventTypeMedialiveMultiplexStateChange       = EventBridgeRuleTemplateEventType("MEDIALIVE_MULTIPLEX_STATE_CHANGE")
	EventBridgeRuleTemplateEventTypeMedialiveChannelAlert               = EventBridgeRuleTemplateEventType("MEDIALIVE_CHANNEL_ALERT")
	EventBridgeRuleTemplateEventTypeMedialiveChannelInputChange         = EventBridgeRuleTemplateEventType("MEDIALIVE_CHANNEL_INPUT_CHANGE")
	EventBridgeRuleTemplateEventTypeMedialiveChannelStateChange         = EventBridgeRuleTemplateEventType("MEDIALIVE_CHANNEL_STATE_CHANGE")
	EventBridgeRuleTemplateEventTypeMediapackageInputNotification       = EventBridgeRuleTemplateEventType("MEDIAPACKAGE_INPUT_NOTIFICATION")
	EventBridgeRuleTemplateEventTypeMediapackageKeyProviderNotification = EventBridgeRuleTemplateEventType("MEDIAPACKAGE_KEY_PROVIDER_NOTIFICATION")
	EventBridgeRuleTemplateEventTypeMediapackageHarvestJobNotification  = EventBridgeRuleTemplateEventType("MEDIAPACKAGE_HARVEST_JOB_NOTIFICATION")
	EventBridgeRuleTemplateEventTypeSignalMapActiveAlarm                = EventBridgeRuleTemplateEventType("SIGNAL_MAP_ACTIVE_ALARM")
	EventBridgeRuleTemplateEventTypeMediaconnectAlert                   = EventBridgeRuleTemplateEventType("MEDIACONNECT_ALERT")
	EventBridgeRuleTemplateEventTypeMediaconnectSourceHealth            = EventBridgeRuleTemplateEventType("MEDIACONNECT_SOURCE_HEALTH")
	EventBridgeRuleTemplateEventTypeMediaconnectOutputHealth            = EventBridgeRuleTemplateEventType("MEDIACONNECT_OUTPUT_HEALTH")
	EventBridgeRuleTemplateEventTypeMediaconnectFlowStatusChange        = EventBridgeRuleTemplateEventType("MEDIACONNECT_FLOW_STATUS_CHANGE")
)

func (EventBridgeRuleTemplateEventType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventBridgeRuleTemplateEventType)(nil)).Elem()
}

func (e EventBridgeRuleTemplateEventType) ToEventBridgeRuleTemplateEventTypeOutput() EventBridgeRuleTemplateEventTypeOutput {
	return pulumi.ToOutput(e).(EventBridgeRuleTemplateEventTypeOutput)
}

func (e EventBridgeRuleTemplateEventType) ToEventBridgeRuleTemplateEventTypeOutputWithContext(ctx context.Context) EventBridgeRuleTemplateEventTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventBridgeRuleTemplateEventTypeOutput)
}

func (e EventBridgeRuleTemplateEventType) ToEventBridgeRuleTemplateEventTypePtrOutput() EventBridgeRuleTemplateEventTypePtrOutput {
	return e.ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(context.Background())
}

func (e EventBridgeRuleTemplateEventType) ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(ctx context.Context) EventBridgeRuleTemplateEventTypePtrOutput {
	return EventBridgeRuleTemplateEventType(e).ToEventBridgeRuleTemplateEventTypeOutputWithContext(ctx).ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(ctx)
}

func (e EventBridgeRuleTemplateEventType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventBridgeRuleTemplateEventType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventBridgeRuleTemplateEventType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventBridgeRuleTemplateEventType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventBridgeRuleTemplateEventTypeOutput struct{ *pulumi.OutputState }

func (EventBridgeRuleTemplateEventTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventBridgeRuleTemplateEventType)(nil)).Elem()
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToEventBridgeRuleTemplateEventTypeOutput() EventBridgeRuleTemplateEventTypeOutput {
	return o
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToEventBridgeRuleTemplateEventTypeOutputWithContext(ctx context.Context) EventBridgeRuleTemplateEventTypeOutput {
	return o
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToEventBridgeRuleTemplateEventTypePtrOutput() EventBridgeRuleTemplateEventTypePtrOutput {
	return o.ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(context.Background())
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(ctx context.Context) EventBridgeRuleTemplateEventTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventBridgeRuleTemplateEventType) *EventBridgeRuleTemplateEventType {
		return &v
	}).(EventBridgeRuleTemplateEventTypePtrOutput)
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventBridgeRuleTemplateEventType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventBridgeRuleTemplateEventTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventBridgeRuleTemplateEventType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventBridgeRuleTemplateEventTypePtrOutput struct{ *pulumi.OutputState }

func (EventBridgeRuleTemplateEventTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBridgeRuleTemplateEventType)(nil)).Elem()
}

func (o EventBridgeRuleTemplateEventTypePtrOutput) ToEventBridgeRuleTemplateEventTypePtrOutput() EventBridgeRuleTemplateEventTypePtrOutput {
	return o
}

func (o EventBridgeRuleTemplateEventTypePtrOutput) ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(ctx context.Context) EventBridgeRuleTemplateEventTypePtrOutput {
	return o
}

func (o EventBridgeRuleTemplateEventTypePtrOutput) Elem() EventBridgeRuleTemplateEventTypeOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateEventType) EventBridgeRuleTemplateEventType {
		if v != nil {
			return *v
		}
		var ret EventBridgeRuleTemplateEventType
		return ret
	}).(EventBridgeRuleTemplateEventTypeOutput)
}

func (o EventBridgeRuleTemplateEventTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventBridgeRuleTemplateEventTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventBridgeRuleTemplateEventType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventBridgeRuleTemplateEventTypeInput is an input type that accepts values of the EventBridgeRuleTemplateEventType enum
// A concrete instance of `EventBridgeRuleTemplateEventTypeInput` can be one of the following:
//
//	EventBridgeRuleTemplateEventTypeMedialiveMultiplexAlert
//	EventBridgeRuleTemplateEventTypeMedialiveMultiplexStateChange
//	EventBridgeRuleTemplateEventTypeMedialiveChannelAlert
//	EventBridgeRuleTemplateEventTypeMedialiveChannelInputChange
//	EventBridgeRuleTemplateEventTypeMedialiveChannelStateChange
//	EventBridgeRuleTemplateEventTypeMediapackageInputNotification
//	EventBridgeRuleTemplateEventTypeMediapackageKeyProviderNotification
//	EventBridgeRuleTemplateEventTypeMediapackageHarvestJobNotification
//	EventBridgeRuleTemplateEventTypeSignalMapActiveAlarm
//	EventBridgeRuleTemplateEventTypeMediaconnectAlert
//	EventBridgeRuleTemplateEventTypeMediaconnectSourceHealth
//	EventBridgeRuleTemplateEventTypeMediaconnectOutputHealth
//	EventBridgeRuleTemplateEventTypeMediaconnectFlowStatusChange
type EventBridgeRuleTemplateEventTypeInput interface {
	pulumi.Input

	ToEventBridgeRuleTemplateEventTypeOutput() EventBridgeRuleTemplateEventTypeOutput
	ToEventBridgeRuleTemplateEventTypeOutputWithContext(context.Context) EventBridgeRuleTemplateEventTypeOutput
}

var eventBridgeRuleTemplateEventTypePtrType = reflect.TypeOf((**EventBridgeRuleTemplateEventType)(nil)).Elem()

type EventBridgeRuleTemplateEventTypePtrInput interface {
	pulumi.Input

	ToEventBridgeRuleTemplateEventTypePtrOutput() EventBridgeRuleTemplateEventTypePtrOutput
	ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(context.Context) EventBridgeRuleTemplateEventTypePtrOutput
}

type eventBridgeRuleTemplateEventTypePtr string

func EventBridgeRuleTemplateEventTypePtr(v string) EventBridgeRuleTemplateEventTypePtrInput {
	return (*eventBridgeRuleTemplateEventTypePtr)(&v)
}

func (*eventBridgeRuleTemplateEventTypePtr) ElementType() reflect.Type {
	return eventBridgeRuleTemplateEventTypePtrType
}

func (in *eventBridgeRuleTemplateEventTypePtr) ToEventBridgeRuleTemplateEventTypePtrOutput() EventBridgeRuleTemplateEventTypePtrOutput {
	return pulumi.ToOutput(in).(EventBridgeRuleTemplateEventTypePtrOutput)
}

func (in *eventBridgeRuleTemplateEventTypePtr) ToEventBridgeRuleTemplateEventTypePtrOutputWithContext(ctx context.Context) EventBridgeRuleTemplateEventTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventBridgeRuleTemplateEventTypePtrOutput)
}

// The current state of the multiplex.
type MultiplexStateEnum string

const (
	MultiplexStateEnumCreating     = MultiplexStateEnum("CREATING")
	MultiplexStateEnumCreateFailed = MultiplexStateEnum("CREATE_FAILED")
	MultiplexStateEnumIdle         = MultiplexStateEnum("IDLE")
	MultiplexStateEnumStarting     = MultiplexStateEnum("STARTING")
	MultiplexStateEnumRunning      = MultiplexStateEnum("RUNNING")
	MultiplexStateEnumRecovering   = MultiplexStateEnum("RECOVERING")
	MultiplexStateEnumStopping     = MultiplexStateEnum("STOPPING")
	MultiplexStateEnumDeleting     = MultiplexStateEnum("DELETING")
	MultiplexStateEnumDeleted      = MultiplexStateEnum("DELETED")
)

type MultiplexStateEnumOutput struct{ *pulumi.OutputState }

func (MultiplexStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexStateEnum)(nil)).Elem()
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumOutput() MultiplexStateEnumOutput {
	return o
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumOutputWithContext(ctx context.Context) MultiplexStateEnumOutput {
	return o
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumPtrOutput() MultiplexStateEnumPtrOutput {
	return o.ToMultiplexStateEnumPtrOutputWithContext(context.Background())
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumPtrOutputWithContext(ctx context.Context) MultiplexStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexStateEnum) *MultiplexStateEnum {
		return &v
	}).(MultiplexStateEnumPtrOutput)
}

func (o MultiplexStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiplexStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiplexStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiplexStateEnumPtrOutput struct{ *pulumi.OutputState }

func (MultiplexStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexStateEnum)(nil)).Elem()
}

func (o MultiplexStateEnumPtrOutput) ToMultiplexStateEnumPtrOutput() MultiplexStateEnumPtrOutput {
	return o
}

func (o MultiplexStateEnumPtrOutput) ToMultiplexStateEnumPtrOutputWithContext(ctx context.Context) MultiplexStateEnumPtrOutput {
	return o
}

func (o MultiplexStateEnumPtrOutput) Elem() MultiplexStateEnumOutput {
	return o.ApplyT(func(v *MultiplexStateEnum) MultiplexStateEnum {
		if v != nil {
			return *v
		}
		var ret MultiplexStateEnum
		return ret
	}).(MultiplexStateEnumOutput)
}

func (o MultiplexStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiplexStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Indicates which pipeline is preferred by the multiplex for program ingest.
// If set to \"PIPELINE_0\" or \"PIPELINE_1\" and an unhealthy ingest causes the multiplex to switch to the non-preferred pipeline,
// it will switch back once that ingest is healthy again. If set to \"CURRENTLY_ACTIVE\",
// it will not switch back to the other pipeline based on it recovering to a healthy state,
// it will only switch if the active pipeline becomes unhealthy.
type MultiplexprogramPreferredChannelPipeline string

const (
	MultiplexprogramPreferredChannelPipelineCurrentlyActive = MultiplexprogramPreferredChannelPipeline("CURRENTLY_ACTIVE")
	MultiplexprogramPreferredChannelPipelinePipeline0       = MultiplexprogramPreferredChannelPipeline("PIPELINE_0")
	MultiplexprogramPreferredChannelPipelinePipeline1       = MultiplexprogramPreferredChannelPipeline("PIPELINE_1")
)

func (MultiplexprogramPreferredChannelPipeline) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramPreferredChannelPipeline)(nil)).Elem()
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelineOutput() MultiplexprogramPreferredChannelPipelineOutput {
	return pulumi.ToOutput(e).(MultiplexprogramPreferredChannelPipelineOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelineOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MultiplexprogramPreferredChannelPipelineOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return e.ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(context.Background())
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return MultiplexprogramPreferredChannelPipeline(e).ToMultiplexprogramPreferredChannelPipelineOutputWithContext(ctx).ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx)
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MultiplexprogramPreferredChannelPipelineOutput struct{ *pulumi.OutputState }

func (MultiplexprogramPreferredChannelPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramPreferredChannelPipeline)(nil)).Elem()
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelineOutput() MultiplexprogramPreferredChannelPipelineOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelineOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelineOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o.ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexprogramPreferredChannelPipeline) *MultiplexprogramPreferredChannelPipeline {
		return &v
	}).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexprogramPreferredChannelPipeline) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexprogramPreferredChannelPipeline) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiplexprogramPreferredChannelPipelinePtrOutput struct{ *pulumi.OutputState }

func (MultiplexprogramPreferredChannelPipelinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramPreferredChannelPipeline)(nil)).Elem()
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) Elem() MultiplexprogramPreferredChannelPipelineOutput {
	return o.ApplyT(func(v *MultiplexprogramPreferredChannelPipeline) MultiplexprogramPreferredChannelPipeline {
		if v != nil {
			return *v
		}
		var ret MultiplexprogramPreferredChannelPipeline
		return ret
	}).(MultiplexprogramPreferredChannelPipelineOutput)
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiplexprogramPreferredChannelPipeline) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MultiplexprogramPreferredChannelPipelineInput is an input type that accepts values of the MultiplexprogramPreferredChannelPipeline enum
// A concrete instance of `MultiplexprogramPreferredChannelPipelineInput` can be one of the following:
//
//	MultiplexprogramPreferredChannelPipelineCurrentlyActive
//	MultiplexprogramPreferredChannelPipelinePipeline0
//	MultiplexprogramPreferredChannelPipelinePipeline1
type MultiplexprogramPreferredChannelPipelineInput interface {
	pulumi.Input

	ToMultiplexprogramPreferredChannelPipelineOutput() MultiplexprogramPreferredChannelPipelineOutput
	ToMultiplexprogramPreferredChannelPipelineOutputWithContext(context.Context) MultiplexprogramPreferredChannelPipelineOutput
}

var multiplexprogramPreferredChannelPipelinePtrType = reflect.TypeOf((**MultiplexprogramPreferredChannelPipeline)(nil)).Elem()

type MultiplexprogramPreferredChannelPipelinePtrInput interface {
	pulumi.Input

	ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput
	ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput
}

type multiplexprogramPreferredChannelPipelinePtr string

func MultiplexprogramPreferredChannelPipelinePtr(v string) MultiplexprogramPreferredChannelPipelinePtrInput {
	return (*multiplexprogramPreferredChannelPipelinePtr)(&v)
}

func (*multiplexprogramPreferredChannelPipelinePtr) ElementType() reflect.Type {
	return multiplexprogramPreferredChannelPipelinePtrType
}

func (in *multiplexprogramPreferredChannelPipelinePtr) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return pulumi.ToOutput(in).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

func (in *multiplexprogramPreferredChannelPipelinePtr) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

type NetworkStateEnum string

const (
	NetworkStateEnumCreating     = NetworkStateEnum("CREATING")
	NetworkStateEnumCreateFailed = NetworkStateEnum("CREATE_FAILED")
	NetworkStateEnumActive       = NetworkStateEnum("ACTIVE")
	NetworkStateEnumDeleting     = NetworkStateEnum("DELETING")
	NetworkStateEnumIdle         = NetworkStateEnum("IDLE")
	NetworkStateEnumInUse        = NetworkStateEnum("IN_USE")
	NetworkStateEnumUpdating     = NetworkStateEnum("UPDATING")
	NetworkStateEnumDeleted      = NetworkStateEnum("DELETED")
	NetworkStateEnumDeleteFailed = NetworkStateEnum("DELETE_FAILED")
)

type NetworkStateEnumOutput struct{ *pulumi.OutputState }

func (NetworkStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkStateEnum)(nil)).Elem()
}

func (o NetworkStateEnumOutput) ToNetworkStateEnumOutput() NetworkStateEnumOutput {
	return o
}

func (o NetworkStateEnumOutput) ToNetworkStateEnumOutputWithContext(ctx context.Context) NetworkStateEnumOutput {
	return o
}

func (o NetworkStateEnumOutput) ToNetworkStateEnumPtrOutput() NetworkStateEnumPtrOutput {
	return o.ToNetworkStateEnumPtrOutputWithContext(context.Background())
}

func (o NetworkStateEnumOutput) ToNetworkStateEnumPtrOutputWithContext(ctx context.Context) NetworkStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkStateEnum) *NetworkStateEnum {
		return &v
	}).(NetworkStateEnumPtrOutput)
}

func (o NetworkStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkStateEnumPtrOutput struct{ *pulumi.OutputState }

func (NetworkStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkStateEnum)(nil)).Elem()
}

func (o NetworkStateEnumPtrOutput) ToNetworkStateEnumPtrOutput() NetworkStateEnumPtrOutput {
	return o
}

func (o NetworkStateEnumPtrOutput) ToNetworkStateEnumPtrOutputWithContext(ctx context.Context) NetworkStateEnumPtrOutput {
	return o
}

func (o NetworkStateEnumPtrOutput) Elem() NetworkStateEnumOutput {
	return o.ApplyT(func(v *NetworkStateEnum) NetworkStateEnum {
		if v != nil {
			return *v
		}
		var ret NetworkStateEnum
		return ret
	}).(NetworkStateEnumOutput)
}

func (o NetworkStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The current state of the SdiSource.
type SdiSourceMode string

const (
	SdiSourceModeQuadrant   = SdiSourceMode("QUADRANT")
	SdiSourceModeInterleave = SdiSourceMode("INTERLEAVE")
)

func (SdiSourceMode) ElementType() reflect.Type {
	return reflect.TypeOf((*SdiSourceMode)(nil)).Elem()
}

func (e SdiSourceMode) ToSdiSourceModeOutput() SdiSourceModeOutput {
	return pulumi.ToOutput(e).(SdiSourceModeOutput)
}

func (e SdiSourceMode) ToSdiSourceModeOutputWithContext(ctx context.Context) SdiSourceModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SdiSourceModeOutput)
}

func (e SdiSourceMode) ToSdiSourceModePtrOutput() SdiSourceModePtrOutput {
	return e.ToSdiSourceModePtrOutputWithContext(context.Background())
}

func (e SdiSourceMode) ToSdiSourceModePtrOutputWithContext(ctx context.Context) SdiSourceModePtrOutput {
	return SdiSourceMode(e).ToSdiSourceModeOutputWithContext(ctx).ToSdiSourceModePtrOutputWithContext(ctx)
}

func (e SdiSourceMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SdiSourceMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SdiSourceMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SdiSourceMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SdiSourceModeOutput struct{ *pulumi.OutputState }

func (SdiSourceModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdiSourceMode)(nil)).Elem()
}

func (o SdiSourceModeOutput) ToSdiSourceModeOutput() SdiSourceModeOutput {
	return o
}

func (o SdiSourceModeOutput) ToSdiSourceModeOutputWithContext(ctx context.Context) SdiSourceModeOutput {
	return o
}

func (o SdiSourceModeOutput) ToSdiSourceModePtrOutput() SdiSourceModePtrOutput {
	return o.ToSdiSourceModePtrOutputWithContext(context.Background())
}

func (o SdiSourceModeOutput) ToSdiSourceModePtrOutputWithContext(ctx context.Context) SdiSourceModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SdiSourceMode) *SdiSourceMode {
		return &v
	}).(SdiSourceModePtrOutput)
}

func (o SdiSourceModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SdiSourceModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdiSourceMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SdiSourceModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdiSourceModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdiSourceMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SdiSourceModePtrOutput struct{ *pulumi.OutputState }

func (SdiSourceModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SdiSourceMode)(nil)).Elem()
}

func (o SdiSourceModePtrOutput) ToSdiSourceModePtrOutput() SdiSourceModePtrOutput {
	return o
}

func (o SdiSourceModePtrOutput) ToSdiSourceModePtrOutputWithContext(ctx context.Context) SdiSourceModePtrOutput {
	return o
}

func (o SdiSourceModePtrOutput) Elem() SdiSourceModeOutput {
	return o.ApplyT(func(v *SdiSourceMode) SdiSourceMode {
		if v != nil {
			return *v
		}
		var ret SdiSourceMode
		return ret
	}).(SdiSourceModeOutput)
}

func (o SdiSourceModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdiSourceModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SdiSourceMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SdiSourceModeInput is an input type that accepts values of the SdiSourceMode enum
// A concrete instance of `SdiSourceModeInput` can be one of the following:
//
//	SdiSourceModeQuadrant
//	SdiSourceModeInterleave
type SdiSourceModeInput interface {
	pulumi.Input

	ToSdiSourceModeOutput() SdiSourceModeOutput
	ToSdiSourceModeOutputWithContext(context.Context) SdiSourceModeOutput
}

var sdiSourceModePtrType = reflect.TypeOf((**SdiSourceMode)(nil)).Elem()

type SdiSourceModePtrInput interface {
	pulumi.Input

	ToSdiSourceModePtrOutput() SdiSourceModePtrOutput
	ToSdiSourceModePtrOutputWithContext(context.Context) SdiSourceModePtrOutput
}

type sdiSourceModePtr string

func SdiSourceModePtr(v string) SdiSourceModePtrInput {
	return (*sdiSourceModePtr)(&v)
}

func (*sdiSourceModePtr) ElementType() reflect.Type {
	return sdiSourceModePtrType
}

func (in *sdiSourceModePtr) ToSdiSourceModePtrOutput() SdiSourceModePtrOutput {
	return pulumi.ToOutput(in).(SdiSourceModePtrOutput)
}

func (in *sdiSourceModePtr) ToSdiSourceModePtrOutputWithContext(ctx context.Context) SdiSourceModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SdiSourceModePtrOutput)
}

// The current state of the SdiSource.
type SdiSourceStateEnum string

const (
	SdiSourceStateEnumIdle    = SdiSourceStateEnum("IDLE")
	SdiSourceStateEnumInUse   = SdiSourceStateEnum("IN_USE")
	SdiSourceStateEnumDeleted = SdiSourceStateEnum("DELETED")
)

type SdiSourceStateEnumOutput struct{ *pulumi.OutputState }

func (SdiSourceStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdiSourceStateEnum)(nil)).Elem()
}

func (o SdiSourceStateEnumOutput) ToSdiSourceStateEnumOutput() SdiSourceStateEnumOutput {
	return o
}

func (o SdiSourceStateEnumOutput) ToSdiSourceStateEnumOutputWithContext(ctx context.Context) SdiSourceStateEnumOutput {
	return o
}

func (o SdiSourceStateEnumOutput) ToSdiSourceStateEnumPtrOutput() SdiSourceStateEnumPtrOutput {
	return o.ToSdiSourceStateEnumPtrOutputWithContext(context.Background())
}

func (o SdiSourceStateEnumOutput) ToSdiSourceStateEnumPtrOutputWithContext(ctx context.Context) SdiSourceStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SdiSourceStateEnum) *SdiSourceStateEnum {
		return &v
	}).(SdiSourceStateEnumPtrOutput)
}

func (o SdiSourceStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SdiSourceStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdiSourceStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SdiSourceStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdiSourceStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdiSourceStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SdiSourceStateEnumPtrOutput struct{ *pulumi.OutputState }

func (SdiSourceStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SdiSourceStateEnum)(nil)).Elem()
}

func (o SdiSourceStateEnumPtrOutput) ToSdiSourceStateEnumPtrOutput() SdiSourceStateEnumPtrOutput {
	return o
}

func (o SdiSourceStateEnumPtrOutput) ToSdiSourceStateEnumPtrOutputWithContext(ctx context.Context) SdiSourceStateEnumPtrOutput {
	return o
}

func (o SdiSourceStateEnumPtrOutput) Elem() SdiSourceStateEnumOutput {
	return o.ApplyT(func(v *SdiSourceStateEnum) SdiSourceStateEnum {
		if v != nil {
			return *v
		}
		var ret SdiSourceStateEnum
		return ret
	}).(SdiSourceStateEnumOutput)
}

func (o SdiSourceStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdiSourceStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SdiSourceStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The interface mode of the SdiSource.
type SdiSourceType string

const (
	SdiSourceTypeSingle = SdiSourceType("SINGLE")
	SdiSourceTypeQuad   = SdiSourceType("QUAD")
)

func (SdiSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*SdiSourceType)(nil)).Elem()
}

func (e SdiSourceType) ToSdiSourceTypeOutput() SdiSourceTypeOutput {
	return pulumi.ToOutput(e).(SdiSourceTypeOutput)
}

func (e SdiSourceType) ToSdiSourceTypeOutputWithContext(ctx context.Context) SdiSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SdiSourceTypeOutput)
}

func (e SdiSourceType) ToSdiSourceTypePtrOutput() SdiSourceTypePtrOutput {
	return e.ToSdiSourceTypePtrOutputWithContext(context.Background())
}

func (e SdiSourceType) ToSdiSourceTypePtrOutputWithContext(ctx context.Context) SdiSourceTypePtrOutput {
	return SdiSourceType(e).ToSdiSourceTypeOutputWithContext(ctx).ToSdiSourceTypePtrOutputWithContext(ctx)
}

func (e SdiSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SdiSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SdiSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SdiSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SdiSourceTypeOutput struct{ *pulumi.OutputState }

func (SdiSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdiSourceType)(nil)).Elem()
}

func (o SdiSourceTypeOutput) ToSdiSourceTypeOutput() SdiSourceTypeOutput {
	return o
}

func (o SdiSourceTypeOutput) ToSdiSourceTypeOutputWithContext(ctx context.Context) SdiSourceTypeOutput {
	return o
}

func (o SdiSourceTypeOutput) ToSdiSourceTypePtrOutput() SdiSourceTypePtrOutput {
	return o.ToSdiSourceTypePtrOutputWithContext(context.Background())
}

func (o SdiSourceTypeOutput) ToSdiSourceTypePtrOutputWithContext(ctx context.Context) SdiSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SdiSourceType) *SdiSourceType {
		return &v
	}).(SdiSourceTypePtrOutput)
}

func (o SdiSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SdiSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdiSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SdiSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdiSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SdiSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SdiSourceTypePtrOutput struct{ *pulumi.OutputState }

func (SdiSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SdiSourceType)(nil)).Elem()
}

func (o SdiSourceTypePtrOutput) ToSdiSourceTypePtrOutput() SdiSourceTypePtrOutput {
	return o
}

func (o SdiSourceTypePtrOutput) ToSdiSourceTypePtrOutputWithContext(ctx context.Context) SdiSourceTypePtrOutput {
	return o
}

func (o SdiSourceTypePtrOutput) Elem() SdiSourceTypeOutput {
	return o.ApplyT(func(v *SdiSourceType) SdiSourceType {
		if v != nil {
			return *v
		}
		var ret SdiSourceType
		return ret
	}).(SdiSourceTypeOutput)
}

func (o SdiSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SdiSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SdiSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SdiSourceTypeInput is an input type that accepts values of the SdiSourceType enum
// A concrete instance of `SdiSourceTypeInput` can be one of the following:
//
//	SdiSourceTypeSingle
//	SdiSourceTypeQuad
type SdiSourceTypeInput interface {
	pulumi.Input

	ToSdiSourceTypeOutput() SdiSourceTypeOutput
	ToSdiSourceTypeOutputWithContext(context.Context) SdiSourceTypeOutput
}

var sdiSourceTypePtrType = reflect.TypeOf((**SdiSourceType)(nil)).Elem()

type SdiSourceTypePtrInput interface {
	pulumi.Input

	ToSdiSourceTypePtrOutput() SdiSourceTypePtrOutput
	ToSdiSourceTypePtrOutputWithContext(context.Context) SdiSourceTypePtrOutput
}

type sdiSourceTypePtr string

func SdiSourceTypePtr(v string) SdiSourceTypePtrInput {
	return (*sdiSourceTypePtr)(&v)
}

func (*sdiSourceTypePtr) ElementType() reflect.Type {
	return sdiSourceTypePtrType
}

func (in *sdiSourceTypePtr) ToSdiSourceTypePtrOutput() SdiSourceTypePtrOutput {
	return pulumi.ToOutput(in).(SdiSourceTypePtrOutput)
}

func (in *sdiSourceTypePtr) ToSdiSourceTypePtrOutputWithContext(ctx context.Context) SdiSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SdiSourceTypePtrOutput)
}

// A signal map's monitor deployment status.
type SignalMapMonitorDeploymentStatus string

const (
	SignalMapMonitorDeploymentStatusNotDeployed                = SignalMapMonitorDeploymentStatus("NOT_DEPLOYED")
	SignalMapMonitorDeploymentStatusDryRunDeploymentComplete   = SignalMapMonitorDeploymentStatus("DRY_RUN_DEPLOYMENT_COMPLETE")
	SignalMapMonitorDeploymentStatusDryRunDeploymentFailed     = SignalMapMonitorDeploymentStatus("DRY_RUN_DEPLOYMENT_FAILED")
	SignalMapMonitorDeploymentStatusDryRunDeploymentInProgress = SignalMapMonitorDeploymentStatus("DRY_RUN_DEPLOYMENT_IN_PROGRESS")
	SignalMapMonitorDeploymentStatusDeploymentComplete         = SignalMapMonitorDeploymentStatus("DEPLOYMENT_COMPLETE")
	SignalMapMonitorDeploymentStatusDeploymentFailed           = SignalMapMonitorDeploymentStatus("DEPLOYMENT_FAILED")
	SignalMapMonitorDeploymentStatusDeploymentInProgress       = SignalMapMonitorDeploymentStatus("DEPLOYMENT_IN_PROGRESS")
	SignalMapMonitorDeploymentStatusDeleteComplete             = SignalMapMonitorDeploymentStatus("DELETE_COMPLETE")
	SignalMapMonitorDeploymentStatusDeleteFailed               = SignalMapMonitorDeploymentStatus("DELETE_FAILED")
	SignalMapMonitorDeploymentStatusDeleteInProgress           = SignalMapMonitorDeploymentStatus("DELETE_IN_PROGRESS")
)

type SignalMapMonitorDeploymentStatusOutput struct{ *pulumi.OutputState }

func (SignalMapMonitorDeploymentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalMapMonitorDeploymentStatus)(nil)).Elem()
}

func (o SignalMapMonitorDeploymentStatusOutput) ToSignalMapMonitorDeploymentStatusOutput() SignalMapMonitorDeploymentStatusOutput {
	return o
}

func (o SignalMapMonitorDeploymentStatusOutput) ToSignalMapMonitorDeploymentStatusOutputWithContext(ctx context.Context) SignalMapMonitorDeploymentStatusOutput {
	return o
}

func (o SignalMapMonitorDeploymentStatusOutput) ToSignalMapMonitorDeploymentStatusPtrOutput() SignalMapMonitorDeploymentStatusPtrOutput {
	return o.ToSignalMapMonitorDeploymentStatusPtrOutputWithContext(context.Background())
}

func (o SignalMapMonitorDeploymentStatusOutput) ToSignalMapMonitorDeploymentStatusPtrOutputWithContext(ctx context.Context) SignalMapMonitorDeploymentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SignalMapMonitorDeploymentStatus) *SignalMapMonitorDeploymentStatus {
		return &v
	}).(SignalMapMonitorDeploymentStatusPtrOutput)
}

func (o SignalMapMonitorDeploymentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SignalMapMonitorDeploymentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SignalMapMonitorDeploymentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SignalMapMonitorDeploymentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SignalMapMonitorDeploymentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SignalMapMonitorDeploymentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SignalMapMonitorDeploymentStatusPtrOutput struct{ *pulumi.OutputState }

func (SignalMapMonitorDeploymentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalMapMonitorDeploymentStatus)(nil)).Elem()
}

func (o SignalMapMonitorDeploymentStatusPtrOutput) ToSignalMapMonitorDeploymentStatusPtrOutput() SignalMapMonitorDeploymentStatusPtrOutput {
	return o
}

func (o SignalMapMonitorDeploymentStatusPtrOutput) ToSignalMapMonitorDeploymentStatusPtrOutputWithContext(ctx context.Context) SignalMapMonitorDeploymentStatusPtrOutput {
	return o
}

func (o SignalMapMonitorDeploymentStatusPtrOutput) Elem() SignalMapMonitorDeploymentStatusOutput {
	return o.ApplyT(func(v *SignalMapMonitorDeploymentStatus) SignalMapMonitorDeploymentStatus {
		if v != nil {
			return *v
		}
		var ret SignalMapMonitorDeploymentStatus
		return ret
	}).(SignalMapMonitorDeploymentStatusOutput)
}

func (o SignalMapMonitorDeploymentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SignalMapMonitorDeploymentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SignalMapMonitorDeploymentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// A signal map's current status which is dependent on its lifecycle actions or associated jobs.
type SignalMapStatus string

const (
	SignalMapStatusCreateInProgress = SignalMapStatus("CREATE_IN_PROGRESS")
	SignalMapStatusCreateComplete   = SignalMapStatus("CREATE_COMPLETE")
	SignalMapStatusCreateFailed     = SignalMapStatus("CREATE_FAILED")
	SignalMapStatusUpdateInProgress = SignalMapStatus("UPDATE_IN_PROGRESS")
	SignalMapStatusUpdateComplete   = SignalMapStatus("UPDATE_COMPLETE")
	SignalMapStatusUpdateReverted   = SignalMapStatus("UPDATE_REVERTED")
	SignalMapStatusUpdateFailed     = SignalMapStatus("UPDATE_FAILED")
	SignalMapStatusReady            = SignalMapStatus("READY")
	SignalMapStatusNotReady         = SignalMapStatus("NOT_READY")
)

type SignalMapStatusOutput struct{ *pulumi.OutputState }

func (SignalMapStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalMapStatus)(nil)).Elem()
}

func (o SignalMapStatusOutput) ToSignalMapStatusOutput() SignalMapStatusOutput {
	return o
}

func (o SignalMapStatusOutput) ToSignalMapStatusOutputWithContext(ctx context.Context) SignalMapStatusOutput {
	return o
}

func (o SignalMapStatusOutput) ToSignalMapStatusPtrOutput() SignalMapStatusPtrOutput {
	return o.ToSignalMapStatusPtrOutputWithContext(context.Background())
}

func (o SignalMapStatusOutput) ToSignalMapStatusPtrOutputWithContext(ctx context.Context) SignalMapStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SignalMapStatus) *SignalMapStatus {
		return &v
	}).(SignalMapStatusPtrOutput)
}

func (o SignalMapStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SignalMapStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SignalMapStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SignalMapStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SignalMapStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SignalMapStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SignalMapStatusPtrOutput struct{ *pulumi.OutputState }

func (SignalMapStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalMapStatus)(nil)).Elem()
}

func (o SignalMapStatusPtrOutput) ToSignalMapStatusPtrOutput() SignalMapStatusPtrOutput {
	return o
}

func (o SignalMapStatusPtrOutput) ToSignalMapStatusPtrOutputWithContext(ctx context.Context) SignalMapStatusPtrOutput {
	return o
}

func (o SignalMapStatusPtrOutput) Elem() SignalMapStatusOutput {
	return o.ApplyT(func(v *SignalMapStatus) SignalMapStatus {
		if v != nil {
			return *v
		}
		var ret SignalMapStatus
		return ret
	}).(SignalMapStatusOutput)
}

func (o SignalMapStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SignalMapStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SignalMapStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateComparisonOperatorInput)(nil)).Elem(), CloudWatchAlarmTemplateComparisonOperator("GreaterThanOrEqualToThreshold"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateComparisonOperatorPtrInput)(nil)).Elem(), CloudWatchAlarmTemplateComparisonOperator("GreaterThanOrEqualToThreshold"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateStatisticInput)(nil)).Elem(), CloudWatchAlarmTemplateStatistic("SampleCount"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateStatisticPtrInput)(nil)).Elem(), CloudWatchAlarmTemplateStatistic("SampleCount"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateTargetResourceTypeInput)(nil)).Elem(), CloudWatchAlarmTemplateTargetResourceType("CLOUDFRONT_DISTRIBUTION"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateTargetResourceTypePtrInput)(nil)).Elem(), CloudWatchAlarmTemplateTargetResourceType("CLOUDFRONT_DISTRIBUTION"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateTreatMissingDataInput)(nil)).Elem(), CloudWatchAlarmTemplateTreatMissingData("notBreaching"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudWatchAlarmTemplateTreatMissingDataPtrInput)(nil)).Elem(), CloudWatchAlarmTemplateTreatMissingData("notBreaching"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTypeInput)(nil)).Elem(), ClusterType("ON_PREMISES"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTypePtrInput)(nil)).Elem(), ClusterType("ON_PREMISES"))
	pulumi.RegisterInputType(reflect.TypeOf((*EventBridgeRuleTemplateEventTypeInput)(nil)).Elem(), EventBridgeRuleTemplateEventType("MEDIALIVE_MULTIPLEX_ALERT"))
	pulumi.RegisterInputType(reflect.TypeOf((*EventBridgeRuleTemplateEventTypePtrInput)(nil)).Elem(), EventBridgeRuleTemplateEventType("MEDIALIVE_MULTIPLEX_ALERT"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramPreferredChannelPipelineInput)(nil)).Elem(), MultiplexprogramPreferredChannelPipeline("CURRENTLY_ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramPreferredChannelPipelinePtrInput)(nil)).Elem(), MultiplexprogramPreferredChannelPipeline("CURRENTLY_ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SdiSourceModeInput)(nil)).Elem(), SdiSourceMode("QUADRANT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SdiSourceModePtrInput)(nil)).Elem(), SdiSourceMode("QUADRANT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SdiSourceTypeInput)(nil)).Elem(), SdiSourceType("SINGLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SdiSourceTypePtrInput)(nil)).Elem(), SdiSourceType("SINGLE"))
	pulumi.RegisterOutputType(ChannelPlacementGroupStateEnumOutput{})
	pulumi.RegisterOutputType(ChannelPlacementGroupStateEnumPtrOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateComparisonOperatorOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateComparisonOperatorPtrOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateStatisticOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateStatisticPtrOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateTargetResourceTypeOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateTargetResourceTypePtrOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateTreatMissingDataOutput{})
	pulumi.RegisterOutputType(CloudWatchAlarmTemplateTreatMissingDataPtrOutput{})
	pulumi.RegisterOutputType(ClusterStateEnumOutput{})
	pulumi.RegisterOutputType(ClusterStateEnumPtrOutput{})
	pulumi.RegisterOutputType(ClusterTypeOutput{})
	pulumi.RegisterOutputType(ClusterTypePtrOutput{})
	pulumi.RegisterOutputType(EventBridgeRuleTemplateEventTypeOutput{})
	pulumi.RegisterOutputType(EventBridgeRuleTemplateEventTypePtrOutput{})
	pulumi.RegisterOutputType(MultiplexStateEnumOutput{})
	pulumi.RegisterOutputType(MultiplexStateEnumPtrOutput{})
	pulumi.RegisterOutputType(MultiplexprogramPreferredChannelPipelineOutput{})
	pulumi.RegisterOutputType(MultiplexprogramPreferredChannelPipelinePtrOutput{})
	pulumi.RegisterOutputType(NetworkStateEnumOutput{})
	pulumi.RegisterOutputType(NetworkStateEnumPtrOutput{})
	pulumi.RegisterOutputType(SdiSourceModeOutput{})
	pulumi.RegisterOutputType(SdiSourceModePtrOutput{})
	pulumi.RegisterOutputType(SdiSourceStateEnumOutput{})
	pulumi.RegisterOutputType(SdiSourceStateEnumPtrOutput{})
	pulumi.RegisterOutputType(SdiSourceTypeOutput{})
	pulumi.RegisterOutputType(SdiSourceTypePtrOutput{})
	pulumi.RegisterOutputType(SignalMapMonitorDeploymentStatusOutput{})
	pulumi.RegisterOutputType(SignalMapMonitorDeploymentStatusPtrOutput{})
	pulumi.RegisterOutputType(SignalMapStatusOutput{})
	pulumi.RegisterOutputType(SignalMapStatusPtrOutput{})
}
