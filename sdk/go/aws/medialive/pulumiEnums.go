// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MultiplexStateEnum string

const (
	MultiplexStateEnumCreating     = MultiplexStateEnum("CREATING")
	MultiplexStateEnumCreateFailed = MultiplexStateEnum("CREATE_FAILED")
	MultiplexStateEnumIdle         = MultiplexStateEnum("IDLE")
	MultiplexStateEnumStarting     = MultiplexStateEnum("STARTING")
	MultiplexStateEnumRunning      = MultiplexStateEnum("RUNNING")
	MultiplexStateEnumRecovering   = MultiplexStateEnum("RECOVERING")
	MultiplexStateEnumStopping     = MultiplexStateEnum("STOPPING")
	MultiplexStateEnumDeleting     = MultiplexStateEnum("DELETING")
	MultiplexStateEnumDeleted      = MultiplexStateEnum("DELETED")
)

type MultiplexStateEnumOutput struct{ *pulumi.OutputState }

func (MultiplexStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexStateEnum)(nil)).Elem()
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumOutput() MultiplexStateEnumOutput {
	return o
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumOutputWithContext(ctx context.Context) MultiplexStateEnumOutput {
	return o
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumPtrOutput() MultiplexStateEnumPtrOutput {
	return o.ToMultiplexStateEnumPtrOutputWithContext(context.Background())
}

func (o MultiplexStateEnumOutput) ToMultiplexStateEnumPtrOutputWithContext(ctx context.Context) MultiplexStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexStateEnum) *MultiplexStateEnum {
		return &v
	}).(MultiplexStateEnumPtrOutput)
}

func (o MultiplexStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiplexStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiplexStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiplexStateEnumPtrOutput struct{ *pulumi.OutputState }

func (MultiplexStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexStateEnum)(nil)).Elem()
}

func (o MultiplexStateEnumPtrOutput) ToMultiplexStateEnumPtrOutput() MultiplexStateEnumPtrOutput {
	return o
}

func (o MultiplexStateEnumPtrOutput) ToMultiplexStateEnumPtrOutputWithContext(ctx context.Context) MultiplexStateEnumPtrOutput {
	return o
}

func (o MultiplexStateEnumPtrOutput) Elem() MultiplexStateEnumOutput {
	return o.ApplyT(func(v *MultiplexStateEnum) MultiplexStateEnum {
		if v != nil {
			return *v
		}
		var ret MultiplexStateEnum
		return ret
	}).(MultiplexStateEnumOutput)
}

func (o MultiplexStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiplexStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Indicates which pipeline is preferred by the multiplex for program ingest.
// If set to \"PIPELINE_0\" or \"PIPELINE_1\" and an unhealthy ingest causes the multiplex to switch to the non-preferred pipeline,
// it will switch back once that ingest is healthy again. If set to \"CURRENTLY_ACTIVE\",
// it will not switch back to the other pipeline based on it recovering to a healthy state,
// it will only switch if the active pipeline becomes unhealthy.
type MultiplexprogramPreferredChannelPipeline string

const (
	MultiplexprogramPreferredChannelPipelineCurrentlyActive = MultiplexprogramPreferredChannelPipeline("CURRENTLY_ACTIVE")
	MultiplexprogramPreferredChannelPipelinePipeline0       = MultiplexprogramPreferredChannelPipeline("PIPELINE_0")
	MultiplexprogramPreferredChannelPipelinePipeline1       = MultiplexprogramPreferredChannelPipeline("PIPELINE_1")
)

func (MultiplexprogramPreferredChannelPipeline) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramPreferredChannelPipeline)(nil)).Elem()
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelineOutput() MultiplexprogramPreferredChannelPipelineOutput {
	return pulumi.ToOutput(e).(MultiplexprogramPreferredChannelPipelineOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelineOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MultiplexprogramPreferredChannelPipelineOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return e.ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(context.Background())
}

func (e MultiplexprogramPreferredChannelPipeline) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return MultiplexprogramPreferredChannelPipeline(e).ToMultiplexprogramPreferredChannelPipelineOutputWithContext(ctx).ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx)
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MultiplexprogramPreferredChannelPipeline) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MultiplexprogramPreferredChannelPipelineOutput struct{ *pulumi.OutputState }

func (MultiplexprogramPreferredChannelPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramPreferredChannelPipeline)(nil)).Elem()
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelineOutput() MultiplexprogramPreferredChannelPipelineOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelineOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelineOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o.ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexprogramPreferredChannelPipeline) *MultiplexprogramPreferredChannelPipeline {
		return &v
	}).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexprogramPreferredChannelPipeline) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiplexprogramPreferredChannelPipeline) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiplexprogramPreferredChannelPipelinePtrOutput struct{ *pulumi.OutputState }

func (MultiplexprogramPreferredChannelPipelinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramPreferredChannelPipeline)(nil)).Elem()
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) Elem() MultiplexprogramPreferredChannelPipelineOutput {
	return o.ApplyT(func(v *MultiplexprogramPreferredChannelPipeline) MultiplexprogramPreferredChannelPipeline {
		if v != nil {
			return *v
		}
		var ret MultiplexprogramPreferredChannelPipeline
		return ret
	}).(MultiplexprogramPreferredChannelPipelineOutput)
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramPreferredChannelPipelinePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiplexprogramPreferredChannelPipeline) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MultiplexprogramPreferredChannelPipelineInput is an input type that accepts values of the MultiplexprogramPreferredChannelPipeline enum
// A concrete instance of `MultiplexprogramPreferredChannelPipelineInput` can be one of the following:
//
//	MultiplexprogramPreferredChannelPipelineCurrentlyActive
//	MultiplexprogramPreferredChannelPipelinePipeline0
//	MultiplexprogramPreferredChannelPipelinePipeline1
type MultiplexprogramPreferredChannelPipelineInput interface {
	pulumi.Input

	ToMultiplexprogramPreferredChannelPipelineOutput() MultiplexprogramPreferredChannelPipelineOutput
	ToMultiplexprogramPreferredChannelPipelineOutputWithContext(context.Context) MultiplexprogramPreferredChannelPipelineOutput
}

var multiplexprogramPreferredChannelPipelinePtrType = reflect.TypeOf((**MultiplexprogramPreferredChannelPipeline)(nil)).Elem()

type MultiplexprogramPreferredChannelPipelinePtrInput interface {
	pulumi.Input

	ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput
	ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput
}

type multiplexprogramPreferredChannelPipelinePtr string

func MultiplexprogramPreferredChannelPipelinePtr(v string) MultiplexprogramPreferredChannelPipelinePtrInput {
	return (*multiplexprogramPreferredChannelPipelinePtr)(&v)
}

func (*multiplexprogramPreferredChannelPipelinePtr) ElementType() reflect.Type {
	return multiplexprogramPreferredChannelPipelinePtrType
}

func (in *multiplexprogramPreferredChannelPipelinePtr) ToMultiplexprogramPreferredChannelPipelinePtrOutput() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return pulumi.ToOutput(in).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

func (in *multiplexprogramPreferredChannelPipelinePtr) ToMultiplexprogramPreferredChannelPipelinePtrOutputWithContext(ctx context.Context) MultiplexprogramPreferredChannelPipelinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramPreferredChannelPipelineInput)(nil)).Elem(), MultiplexprogramPreferredChannelPipeline("CURRENTLY_ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramPreferredChannelPipelinePtrInput)(nil)).Elem(), MultiplexprogramPreferredChannelPipeline("CURRENTLY_ACTIVE"))
	pulumi.RegisterOutputType(MultiplexStateEnumOutput{})
	pulumi.RegisterOutputType(MultiplexStateEnumPtrOutput{})
	pulumi.RegisterOutputType(MultiplexprogramPreferredChannelPipelineOutput{})
	pulumi.RegisterOutputType(MultiplexprogramPreferredChannelPipelinePtrOutput{})
}
