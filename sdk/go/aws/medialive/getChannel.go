// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MediaLive::Channel
func LookupChannel(ctx *pulumi.Context, args *LookupChannelArgs, opts ...pulumi.InvokeOption) (*LookupChannelResult, error) {
	var rv LookupChannelResult
	err := ctx.Invoke("aws-native:medialive:getChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupChannelArgs struct {
	Id string `pulumi:"id"`
}

type LookupChannelResult struct {
	Arn                   *string                       `pulumi:"arn"`
	CdiInputSpecification *ChannelCdiInputSpecification `pulumi:"cdiInputSpecification"`
	ChannelClass          *string                       `pulumi:"channelClass"`
	Destinations          []ChannelOutputDestination    `pulumi:"destinations"`
	EncoderSettings       *ChannelEncoderSettings       `pulumi:"encoderSettings"`
	Id                    *string                       `pulumi:"id"`
	InputAttachments      []ChannelInputAttachment      `pulumi:"inputAttachments"`
	InputSpecification    *ChannelInputSpecification    `pulumi:"inputSpecification"`
	Inputs                []string                      `pulumi:"inputs"`
	LogLevel              *string                       `pulumi:"logLevel"`
	Name                  *string                       `pulumi:"name"`
	RoleArn               *string                       `pulumi:"roleArn"`
	Tags                  interface{}                   `pulumi:"tags"`
}

func LookupChannelOutput(ctx *pulumi.Context, args LookupChannelOutputArgs, opts ...pulumi.InvokeOption) LookupChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupChannelResult, error) {
			args := v.(LookupChannelArgs)
			r, err := LookupChannel(ctx, &args, opts...)
			var s LookupChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupChannelResultOutput)
}

type LookupChannelOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupChannelArgs)(nil)).Elem()
}

type LookupChannelResultOutput struct{ *pulumi.OutputState }

func (LookupChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupChannelResult)(nil)).Elem()
}

func (o LookupChannelResultOutput) ToLookupChannelResultOutput() LookupChannelResultOutput {
	return o
}

func (o LookupChannelResultOutput) ToLookupChannelResultOutputWithContext(ctx context.Context) LookupChannelResultOutput {
	return o
}

func (o LookupChannelResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) CdiInputSpecification() ChannelCdiInputSpecificationPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *ChannelCdiInputSpecification { return v.CdiInputSpecification }).(ChannelCdiInputSpecificationPtrOutput)
}

func (o LookupChannelResultOutput) ChannelClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.ChannelClass }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) Destinations() ChannelOutputDestinationArrayOutput {
	return o.ApplyT(func(v LookupChannelResult) []ChannelOutputDestination { return v.Destinations }).(ChannelOutputDestinationArrayOutput)
}

func (o LookupChannelResultOutput) EncoderSettings() ChannelEncoderSettingsPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *ChannelEncoderSettings { return v.EncoderSettings }).(ChannelEncoderSettingsPtrOutput)
}

func (o LookupChannelResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) InputAttachments() ChannelInputAttachmentArrayOutput {
	return o.ApplyT(func(v LookupChannelResult) []ChannelInputAttachment { return v.InputAttachments }).(ChannelInputAttachmentArrayOutput)
}

func (o LookupChannelResultOutput) InputSpecification() ChannelInputSpecificationPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *ChannelInputSpecification { return v.InputSpecification }).(ChannelInputSpecificationPtrOutput)
}

func (o LookupChannelResultOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupChannelResult) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

func (o LookupChannelResultOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupChannelResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupChannelResultOutput{})
}
