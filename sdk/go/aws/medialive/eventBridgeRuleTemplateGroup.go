// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::MediaLive::EventBridgeRuleTemplateGroup Resource Type
type EventBridgeRuleTemplateGroup struct {
	pulumi.CustomResourceState

	// An eventbridge rule template group's ARN (Amazon Resource Name)
	Arn pulumi.StringOutput `pulumi:"arn"`
	// An eventbridge rule template group's id. AWS provided template groups have ids that start with `aws-`
	AwsId     pulumi.StringOutput `pulumi:"awsId"`
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A resource's optional description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Identifier  pulumi.StringOutput    `pulumi:"identifier"`
	ModifiedAt  pulumi.StringOutput    `pulumi:"modifiedAt"`
	// A resource's name. Names must be unique within the scope of a resource type in a specific region.
	Name pulumi.StringOutput    `pulumi:"name"`
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewEventBridgeRuleTemplateGroup registers a new resource with the given unique name, arguments, and options.
func NewEventBridgeRuleTemplateGroup(ctx *pulumi.Context,
	name string, args *EventBridgeRuleTemplateGroupArgs, opts ...pulumi.ResourceOption) (*EventBridgeRuleTemplateGroup, error) {
	if args == nil {
		args = &EventBridgeRuleTemplateGroupArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
		"tags.*",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventBridgeRuleTemplateGroup
	err := ctx.RegisterResource("aws-native:medialive:EventBridgeRuleTemplateGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventBridgeRuleTemplateGroup gets an existing EventBridgeRuleTemplateGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventBridgeRuleTemplateGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventBridgeRuleTemplateGroupState, opts ...pulumi.ResourceOption) (*EventBridgeRuleTemplateGroup, error) {
	var resource EventBridgeRuleTemplateGroup
	err := ctx.ReadResource("aws-native:medialive:EventBridgeRuleTemplateGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventBridgeRuleTemplateGroup resources.
type eventBridgeRuleTemplateGroupState struct {
}

type EventBridgeRuleTemplateGroupState struct {
}

func (EventBridgeRuleTemplateGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventBridgeRuleTemplateGroupState)(nil)).Elem()
}

type eventBridgeRuleTemplateGroupArgs struct {
	// A resource's optional description.
	Description *string `pulumi:"description"`
	// A resource's name. Names must be unique within the scope of a resource type in a specific region.
	Name *string           `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EventBridgeRuleTemplateGroup resource.
type EventBridgeRuleTemplateGroupArgs struct {
	// A resource's optional description.
	Description pulumi.StringPtrInput
	// A resource's name. Names must be unique within the scope of a resource type in a specific region.
	Name pulumi.StringPtrInput
	Tags pulumi.StringMapInput
}

func (EventBridgeRuleTemplateGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventBridgeRuleTemplateGroupArgs)(nil)).Elem()
}

type EventBridgeRuleTemplateGroupInput interface {
	pulumi.Input

	ToEventBridgeRuleTemplateGroupOutput() EventBridgeRuleTemplateGroupOutput
	ToEventBridgeRuleTemplateGroupOutputWithContext(ctx context.Context) EventBridgeRuleTemplateGroupOutput
}

func (*EventBridgeRuleTemplateGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBridgeRuleTemplateGroup)(nil)).Elem()
}

func (i *EventBridgeRuleTemplateGroup) ToEventBridgeRuleTemplateGroupOutput() EventBridgeRuleTemplateGroupOutput {
	return i.ToEventBridgeRuleTemplateGroupOutputWithContext(context.Background())
}

func (i *EventBridgeRuleTemplateGroup) ToEventBridgeRuleTemplateGroupOutputWithContext(ctx context.Context) EventBridgeRuleTemplateGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBridgeRuleTemplateGroupOutput)
}

type EventBridgeRuleTemplateGroupOutput struct{ *pulumi.OutputState }

func (EventBridgeRuleTemplateGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBridgeRuleTemplateGroup)(nil)).Elem()
}

func (o EventBridgeRuleTemplateGroupOutput) ToEventBridgeRuleTemplateGroupOutput() EventBridgeRuleTemplateGroupOutput {
	return o
}

func (o EventBridgeRuleTemplateGroupOutput) ToEventBridgeRuleTemplateGroupOutputWithContext(ctx context.Context) EventBridgeRuleTemplateGroupOutput {
	return o
}

// An eventbridge rule template group's ARN (Amazon Resource Name)
func (o EventBridgeRuleTemplateGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// An eventbridge rule template group's id. AWS provided template groups have ids that start with `aws-`
func (o EventBridgeRuleTemplateGroupOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o EventBridgeRuleTemplateGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A resource's optional description.
func (o EventBridgeRuleTemplateGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o EventBridgeRuleTemplateGroupOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

func (o EventBridgeRuleTemplateGroupOutput) ModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringOutput { return v.ModifiedAt }).(pulumi.StringOutput)
}

// A resource's name. Names must be unique within the scope of a resource type in a specific region.
func (o EventBridgeRuleTemplateGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EventBridgeRuleTemplateGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplateGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventBridgeRuleTemplateGroupInput)(nil)).Elem(), &EventBridgeRuleTemplateGroup{})
	pulumi.RegisterOutputType(EventBridgeRuleTemplateGroupOutput{})
}
