// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::MediaLive::EventBridgeRuleTemplate Resource Type
type EventBridgeRuleTemplate struct {
	pulumi.CustomResourceState

	// An eventbridge rule template's ARN (Amazon Resource Name)
	Arn pulumi.StringOutput `pulumi:"arn"`
	// An eventbridge rule template's id. AWS provided templates have ids that start with `aws-`
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// Placeholder documentation for __timestampIso8601
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A resource's optional description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
	EventTargets EventBridgeRuleTemplateTargetArrayOutput `pulumi:"eventTargets"`
	// The type of event to match with the rule.
	EventType EventBridgeRuleTemplateEventTypeOutput `pulumi:"eventType"`
	// An eventbridge rule template group's id. AWS provided template groups have ids that start with `aws-`
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// An eventbridge rule template group's identifier. Can be either be its id or current name.
	GroupIdentifier pulumi.StringPtrOutput `pulumi:"groupIdentifier"`
	// Placeholder documentation for __string
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Placeholder documentation for __timestampIso8601
	ModifiedAt pulumi.StringOutput `pulumi:"modifiedAt"`
	// A resource's name. Names must be unique within the scope of a resource type in a specific region.
	Name pulumi.StringOutput    `pulumi:"name"`
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewEventBridgeRuleTemplate registers a new resource with the given unique name, arguments, and options.
func NewEventBridgeRuleTemplate(ctx *pulumi.Context,
	name string, args *EventBridgeRuleTemplateArgs, opts ...pulumi.ResourceOption) (*EventBridgeRuleTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventType == nil {
		return nil, errors.New("invalid value for required argument 'EventType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"tags.*",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventBridgeRuleTemplate
	err := ctx.RegisterResource("aws-native:medialive:EventBridgeRuleTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventBridgeRuleTemplate gets an existing EventBridgeRuleTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventBridgeRuleTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventBridgeRuleTemplateState, opts ...pulumi.ResourceOption) (*EventBridgeRuleTemplate, error) {
	var resource EventBridgeRuleTemplate
	err := ctx.ReadResource("aws-native:medialive:EventBridgeRuleTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventBridgeRuleTemplate resources.
type eventBridgeRuleTemplateState struct {
}

type EventBridgeRuleTemplateState struct {
}

func (EventBridgeRuleTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventBridgeRuleTemplateState)(nil)).Elem()
}

type eventBridgeRuleTemplateArgs struct {
	// A resource's optional description.
	Description *string `pulumi:"description"`
	// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
	EventTargets []EventBridgeRuleTemplateTarget `pulumi:"eventTargets"`
	// The type of event to match with the rule.
	EventType EventBridgeRuleTemplateEventType `pulumi:"eventType"`
	// An eventbridge rule template group's identifier. Can be either be its id or current name.
	GroupIdentifier *string `pulumi:"groupIdentifier"`
	// A resource's name. Names must be unique within the scope of a resource type in a specific region.
	Name *string           `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EventBridgeRuleTemplate resource.
type EventBridgeRuleTemplateArgs struct {
	// A resource's optional description.
	Description pulumi.StringPtrInput
	// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
	EventTargets EventBridgeRuleTemplateTargetArrayInput
	// The type of event to match with the rule.
	EventType EventBridgeRuleTemplateEventTypeInput
	// An eventbridge rule template group's identifier. Can be either be its id or current name.
	GroupIdentifier pulumi.StringPtrInput
	// A resource's name. Names must be unique within the scope of a resource type in a specific region.
	Name pulumi.StringPtrInput
	Tags pulumi.StringMapInput
}

func (EventBridgeRuleTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventBridgeRuleTemplateArgs)(nil)).Elem()
}

type EventBridgeRuleTemplateInput interface {
	pulumi.Input

	ToEventBridgeRuleTemplateOutput() EventBridgeRuleTemplateOutput
	ToEventBridgeRuleTemplateOutputWithContext(ctx context.Context) EventBridgeRuleTemplateOutput
}

func (*EventBridgeRuleTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBridgeRuleTemplate)(nil)).Elem()
}

func (i *EventBridgeRuleTemplate) ToEventBridgeRuleTemplateOutput() EventBridgeRuleTemplateOutput {
	return i.ToEventBridgeRuleTemplateOutputWithContext(context.Background())
}

func (i *EventBridgeRuleTemplate) ToEventBridgeRuleTemplateOutputWithContext(ctx context.Context) EventBridgeRuleTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBridgeRuleTemplateOutput)
}

type EventBridgeRuleTemplateOutput struct{ *pulumi.OutputState }

func (EventBridgeRuleTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBridgeRuleTemplate)(nil)).Elem()
}

func (o EventBridgeRuleTemplateOutput) ToEventBridgeRuleTemplateOutput() EventBridgeRuleTemplateOutput {
	return o
}

func (o EventBridgeRuleTemplateOutput) ToEventBridgeRuleTemplateOutputWithContext(ctx context.Context) EventBridgeRuleTemplateOutput {
	return o
}

// An eventbridge rule template's ARN (Amazon Resource Name)
func (o EventBridgeRuleTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// An eventbridge rule template's id. AWS provided templates have ids that start with `aws-`
func (o EventBridgeRuleTemplateOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// Placeholder documentation for __timestampIso8601
func (o EventBridgeRuleTemplateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A resource's optional description.
func (o EventBridgeRuleTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
func (o EventBridgeRuleTemplateOutput) EventTargets() EventBridgeRuleTemplateTargetArrayOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) EventBridgeRuleTemplateTargetArrayOutput { return v.EventTargets }).(EventBridgeRuleTemplateTargetArrayOutput)
}

// The type of event to match with the rule.
func (o EventBridgeRuleTemplateOutput) EventType() EventBridgeRuleTemplateEventTypeOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) EventBridgeRuleTemplateEventTypeOutput { return v.EventType }).(EventBridgeRuleTemplateEventTypeOutput)
}

// An eventbridge rule template group's id. AWS provided template groups have ids that start with `aws-`
func (o EventBridgeRuleTemplateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// An eventbridge rule template group's identifier. Can be either be its id or current name.
func (o EventBridgeRuleTemplateOutput) GroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringPtrOutput { return v.GroupIdentifier }).(pulumi.StringPtrOutput)
}

// Placeholder documentation for __string
func (o EventBridgeRuleTemplateOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Placeholder documentation for __timestampIso8601
func (o EventBridgeRuleTemplateOutput) ModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.ModifiedAt }).(pulumi.StringOutput)
}

// A resource's name. Names must be unique within the scope of a resource type in a specific region.
func (o EventBridgeRuleTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EventBridgeRuleTemplateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventBridgeRuleTemplate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventBridgeRuleTemplateInput)(nil)).Elem(), &EventBridgeRuleTemplate{})
	pulumi.RegisterOutputType(EventBridgeRuleTemplateOutput{})
}
