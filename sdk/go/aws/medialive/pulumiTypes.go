// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ChannelAacSettings struct {
	Bitrate         *float64 `pulumi:"bitrate"`
	CodingMode      *string  `pulumi:"codingMode"`
	InputType       *string  `pulumi:"inputType"`
	Profile         *string  `pulumi:"profile"`
	RateControlMode *string  `pulumi:"rateControlMode"`
	RawFormat       *string  `pulumi:"rawFormat"`
	SampleRate      *float64 `pulumi:"sampleRate"`
	Spec            *string  `pulumi:"spec"`
	VbrQuality      *string  `pulumi:"vbrQuality"`
}

// ChannelAacSettingsInput is an input type that accepts ChannelAacSettingsArgs and ChannelAacSettingsOutput values.
// You can construct a concrete instance of `ChannelAacSettingsInput` via:
//
//          ChannelAacSettingsArgs{...}
type ChannelAacSettingsInput interface {
	pulumi.Input

	ToChannelAacSettingsOutput() ChannelAacSettingsOutput
	ToChannelAacSettingsOutputWithContext(context.Context) ChannelAacSettingsOutput
}

type ChannelAacSettingsArgs struct {
	Bitrate         pulumi.Float64PtrInput `pulumi:"bitrate"`
	CodingMode      pulumi.StringPtrInput  `pulumi:"codingMode"`
	InputType       pulumi.StringPtrInput  `pulumi:"inputType"`
	Profile         pulumi.StringPtrInput  `pulumi:"profile"`
	RateControlMode pulumi.StringPtrInput  `pulumi:"rateControlMode"`
	RawFormat       pulumi.StringPtrInput  `pulumi:"rawFormat"`
	SampleRate      pulumi.Float64PtrInput `pulumi:"sampleRate"`
	Spec            pulumi.StringPtrInput  `pulumi:"spec"`
	VbrQuality      pulumi.StringPtrInput  `pulumi:"vbrQuality"`
}

func (ChannelAacSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAacSettings)(nil)).Elem()
}

func (i ChannelAacSettingsArgs) ToChannelAacSettingsOutput() ChannelAacSettingsOutput {
	return i.ToChannelAacSettingsOutputWithContext(context.Background())
}

func (i ChannelAacSettingsArgs) ToChannelAacSettingsOutputWithContext(ctx context.Context) ChannelAacSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAacSettingsOutput)
}

func (i ChannelAacSettingsArgs) ToChannelAacSettingsPtrOutput() ChannelAacSettingsPtrOutput {
	return i.ToChannelAacSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAacSettingsArgs) ToChannelAacSettingsPtrOutputWithContext(ctx context.Context) ChannelAacSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAacSettingsOutput).ToChannelAacSettingsPtrOutputWithContext(ctx)
}

// ChannelAacSettingsPtrInput is an input type that accepts ChannelAacSettingsArgs, ChannelAacSettingsPtr and ChannelAacSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAacSettingsPtrInput` via:
//
//          ChannelAacSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAacSettingsPtrInput interface {
	pulumi.Input

	ToChannelAacSettingsPtrOutput() ChannelAacSettingsPtrOutput
	ToChannelAacSettingsPtrOutputWithContext(context.Context) ChannelAacSettingsPtrOutput
}

type channelAacSettingsPtrType ChannelAacSettingsArgs

func ChannelAacSettingsPtr(v *ChannelAacSettingsArgs) ChannelAacSettingsPtrInput {
	return (*channelAacSettingsPtrType)(v)
}

func (*channelAacSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAacSettings)(nil)).Elem()
}

func (i *channelAacSettingsPtrType) ToChannelAacSettingsPtrOutput() ChannelAacSettingsPtrOutput {
	return i.ToChannelAacSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAacSettingsPtrType) ToChannelAacSettingsPtrOutputWithContext(ctx context.Context) ChannelAacSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAacSettingsPtrOutput)
}

type ChannelAacSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAacSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAacSettings)(nil)).Elem()
}

func (o ChannelAacSettingsOutput) ToChannelAacSettingsOutput() ChannelAacSettingsOutput {
	return o
}

func (o ChannelAacSettingsOutput) ToChannelAacSettingsOutputWithContext(ctx context.Context) ChannelAacSettingsOutput {
	return o
}

func (o ChannelAacSettingsOutput) ToChannelAacSettingsPtrOutput() ChannelAacSettingsPtrOutput {
	return o.ToChannelAacSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAacSettingsOutput) ToChannelAacSettingsPtrOutputWithContext(ctx context.Context) ChannelAacSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAacSettings) *ChannelAacSettings {
		return &v
	}).(ChannelAacSettingsPtrOutput)
}

func (o ChannelAacSettingsOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *float64 { return v.Bitrate }).(pulumi.Float64PtrOutput)
}

func (o ChannelAacSettingsOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.CodingMode }).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsOutput) InputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.InputType }).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsOutput) RateControlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.RateControlMode }).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsOutput) RawFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.RawFormat }).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *float64 { return v.SampleRate }).(pulumi.Float64PtrOutput)
}

func (o ChannelAacSettingsOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsOutput) VbrQuality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAacSettings) *string { return v.VbrQuality }).(pulumi.StringPtrOutput)
}

type ChannelAacSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAacSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAacSettings)(nil)).Elem()
}

func (o ChannelAacSettingsPtrOutput) ToChannelAacSettingsPtrOutput() ChannelAacSettingsPtrOutput {
	return o
}

func (o ChannelAacSettingsPtrOutput) ToChannelAacSettingsPtrOutputWithContext(ctx context.Context) ChannelAacSettingsPtrOutput {
	return o
}

func (o ChannelAacSettingsPtrOutput) Elem() ChannelAacSettingsOutput {
	return o.ApplyT(func(v *ChannelAacSettings) ChannelAacSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAacSettings
		return ret
	}).(ChannelAacSettingsOutput)
}

func (o ChannelAacSettingsPtrOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelAacSettingsPtrOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.CodingMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsPtrOutput) InputType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsPtrOutput) RateControlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.RateControlMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsPtrOutput) RawFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.RawFormat
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsPtrOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.SampleRate
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelAacSettingsPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAacSettingsPtrOutput) VbrQuality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAacSettings) *string {
		if v == nil {
			return nil
		}
		return v.VbrQuality
	}).(pulumi.StringPtrOutput)
}

type ChannelAc3Settings struct {
	Bitrate         *float64 `pulumi:"bitrate"`
	BitstreamMode   *string  `pulumi:"bitstreamMode"`
	CodingMode      *string  `pulumi:"codingMode"`
	Dialnorm        *int     `pulumi:"dialnorm"`
	DrcProfile      *string  `pulumi:"drcProfile"`
	LfeFilter       *string  `pulumi:"lfeFilter"`
	MetadataControl *string  `pulumi:"metadataControl"`
}

// ChannelAc3SettingsInput is an input type that accepts ChannelAc3SettingsArgs and ChannelAc3SettingsOutput values.
// You can construct a concrete instance of `ChannelAc3SettingsInput` via:
//
//          ChannelAc3SettingsArgs{...}
type ChannelAc3SettingsInput interface {
	pulumi.Input

	ToChannelAc3SettingsOutput() ChannelAc3SettingsOutput
	ToChannelAc3SettingsOutputWithContext(context.Context) ChannelAc3SettingsOutput
}

type ChannelAc3SettingsArgs struct {
	Bitrate         pulumi.Float64PtrInput `pulumi:"bitrate"`
	BitstreamMode   pulumi.StringPtrInput  `pulumi:"bitstreamMode"`
	CodingMode      pulumi.StringPtrInput  `pulumi:"codingMode"`
	Dialnorm        pulumi.IntPtrInput     `pulumi:"dialnorm"`
	DrcProfile      pulumi.StringPtrInput  `pulumi:"drcProfile"`
	LfeFilter       pulumi.StringPtrInput  `pulumi:"lfeFilter"`
	MetadataControl pulumi.StringPtrInput  `pulumi:"metadataControl"`
}

func (ChannelAc3SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAc3Settings)(nil)).Elem()
}

func (i ChannelAc3SettingsArgs) ToChannelAc3SettingsOutput() ChannelAc3SettingsOutput {
	return i.ToChannelAc3SettingsOutputWithContext(context.Background())
}

func (i ChannelAc3SettingsArgs) ToChannelAc3SettingsOutputWithContext(ctx context.Context) ChannelAc3SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAc3SettingsOutput)
}

func (i ChannelAc3SettingsArgs) ToChannelAc3SettingsPtrOutput() ChannelAc3SettingsPtrOutput {
	return i.ToChannelAc3SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAc3SettingsArgs) ToChannelAc3SettingsPtrOutputWithContext(ctx context.Context) ChannelAc3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAc3SettingsOutput).ToChannelAc3SettingsPtrOutputWithContext(ctx)
}

// ChannelAc3SettingsPtrInput is an input type that accepts ChannelAc3SettingsArgs, ChannelAc3SettingsPtr and ChannelAc3SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAc3SettingsPtrInput` via:
//
//          ChannelAc3SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAc3SettingsPtrInput interface {
	pulumi.Input

	ToChannelAc3SettingsPtrOutput() ChannelAc3SettingsPtrOutput
	ToChannelAc3SettingsPtrOutputWithContext(context.Context) ChannelAc3SettingsPtrOutput
}

type channelAc3SettingsPtrType ChannelAc3SettingsArgs

func ChannelAc3SettingsPtr(v *ChannelAc3SettingsArgs) ChannelAc3SettingsPtrInput {
	return (*channelAc3SettingsPtrType)(v)
}

func (*channelAc3SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAc3Settings)(nil)).Elem()
}

func (i *channelAc3SettingsPtrType) ToChannelAc3SettingsPtrOutput() ChannelAc3SettingsPtrOutput {
	return i.ToChannelAc3SettingsPtrOutputWithContext(context.Background())
}

func (i *channelAc3SettingsPtrType) ToChannelAc3SettingsPtrOutputWithContext(ctx context.Context) ChannelAc3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAc3SettingsPtrOutput)
}

type ChannelAc3SettingsOutput struct{ *pulumi.OutputState }

func (ChannelAc3SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAc3Settings)(nil)).Elem()
}

func (o ChannelAc3SettingsOutput) ToChannelAc3SettingsOutput() ChannelAc3SettingsOutput {
	return o
}

func (o ChannelAc3SettingsOutput) ToChannelAc3SettingsOutputWithContext(ctx context.Context) ChannelAc3SettingsOutput {
	return o
}

func (o ChannelAc3SettingsOutput) ToChannelAc3SettingsPtrOutput() ChannelAc3SettingsPtrOutput {
	return o.ToChannelAc3SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAc3SettingsOutput) ToChannelAc3SettingsPtrOutputWithContext(ctx context.Context) ChannelAc3SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAc3Settings) *ChannelAc3Settings {
		return &v
	}).(ChannelAc3SettingsPtrOutput)
}

func (o ChannelAc3SettingsOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *float64 { return v.Bitrate }).(pulumi.Float64PtrOutput)
}

func (o ChannelAc3SettingsOutput) BitstreamMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *string { return v.BitstreamMode }).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *string { return v.CodingMode }).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsOutput) Dialnorm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *int { return v.Dialnorm }).(pulumi.IntPtrOutput)
}

func (o ChannelAc3SettingsOutput) DrcProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *string { return v.DrcProfile }).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsOutput) LfeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *string { return v.LfeFilter }).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsOutput) MetadataControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAc3Settings) *string { return v.MetadataControl }).(pulumi.StringPtrOutput)
}

type ChannelAc3SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAc3SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAc3Settings)(nil)).Elem()
}

func (o ChannelAc3SettingsPtrOutput) ToChannelAc3SettingsPtrOutput() ChannelAc3SettingsPtrOutput {
	return o
}

func (o ChannelAc3SettingsPtrOutput) ToChannelAc3SettingsPtrOutputWithContext(ctx context.Context) ChannelAc3SettingsPtrOutput {
	return o
}

func (o ChannelAc3SettingsPtrOutput) Elem() ChannelAc3SettingsOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) ChannelAc3Settings {
		if v != nil {
			return *v
		}
		var ret ChannelAc3Settings
		return ret
	}).(ChannelAc3SettingsOutput)
}

func (o ChannelAc3SettingsPtrOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelAc3SettingsPtrOutput) BitstreamMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *string {
		if v == nil {
			return nil
		}
		return v.BitstreamMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsPtrOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CodingMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsPtrOutput) Dialnorm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *int {
		if v == nil {
			return nil
		}
		return v.Dialnorm
	}).(pulumi.IntPtrOutput)
}

func (o ChannelAc3SettingsPtrOutput) DrcProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DrcProfile
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsPtrOutput) LfeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *string {
		if v == nil {
			return nil
		}
		return v.LfeFilter
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAc3SettingsPtrOutput) MetadataControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAc3Settings) *string {
		if v == nil {
			return nil
		}
		return v.MetadataControl
	}).(pulumi.StringPtrOutput)
}

type ChannelAncillarySourceSettings struct {
	SourceAncillaryChannelNumber *int `pulumi:"sourceAncillaryChannelNumber"`
}

// ChannelAncillarySourceSettingsInput is an input type that accepts ChannelAncillarySourceSettingsArgs and ChannelAncillarySourceSettingsOutput values.
// You can construct a concrete instance of `ChannelAncillarySourceSettingsInput` via:
//
//          ChannelAncillarySourceSettingsArgs{...}
type ChannelAncillarySourceSettingsInput interface {
	pulumi.Input

	ToChannelAncillarySourceSettingsOutput() ChannelAncillarySourceSettingsOutput
	ToChannelAncillarySourceSettingsOutputWithContext(context.Context) ChannelAncillarySourceSettingsOutput
}

type ChannelAncillarySourceSettingsArgs struct {
	SourceAncillaryChannelNumber pulumi.IntPtrInput `pulumi:"sourceAncillaryChannelNumber"`
}

func (ChannelAncillarySourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAncillarySourceSettings)(nil)).Elem()
}

func (i ChannelAncillarySourceSettingsArgs) ToChannelAncillarySourceSettingsOutput() ChannelAncillarySourceSettingsOutput {
	return i.ToChannelAncillarySourceSettingsOutputWithContext(context.Background())
}

func (i ChannelAncillarySourceSettingsArgs) ToChannelAncillarySourceSettingsOutputWithContext(ctx context.Context) ChannelAncillarySourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAncillarySourceSettingsOutput)
}

func (i ChannelAncillarySourceSettingsArgs) ToChannelAncillarySourceSettingsPtrOutput() ChannelAncillarySourceSettingsPtrOutput {
	return i.ToChannelAncillarySourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAncillarySourceSettingsArgs) ToChannelAncillarySourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAncillarySourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAncillarySourceSettingsOutput).ToChannelAncillarySourceSettingsPtrOutputWithContext(ctx)
}

// ChannelAncillarySourceSettingsPtrInput is an input type that accepts ChannelAncillarySourceSettingsArgs, ChannelAncillarySourceSettingsPtr and ChannelAncillarySourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAncillarySourceSettingsPtrInput` via:
//
//          ChannelAncillarySourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAncillarySourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelAncillarySourceSettingsPtrOutput() ChannelAncillarySourceSettingsPtrOutput
	ToChannelAncillarySourceSettingsPtrOutputWithContext(context.Context) ChannelAncillarySourceSettingsPtrOutput
}

type channelAncillarySourceSettingsPtrType ChannelAncillarySourceSettingsArgs

func ChannelAncillarySourceSettingsPtr(v *ChannelAncillarySourceSettingsArgs) ChannelAncillarySourceSettingsPtrInput {
	return (*channelAncillarySourceSettingsPtrType)(v)
}

func (*channelAncillarySourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAncillarySourceSettings)(nil)).Elem()
}

func (i *channelAncillarySourceSettingsPtrType) ToChannelAncillarySourceSettingsPtrOutput() ChannelAncillarySourceSettingsPtrOutput {
	return i.ToChannelAncillarySourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAncillarySourceSettingsPtrType) ToChannelAncillarySourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAncillarySourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAncillarySourceSettingsPtrOutput)
}

type ChannelAncillarySourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAncillarySourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAncillarySourceSettings)(nil)).Elem()
}

func (o ChannelAncillarySourceSettingsOutput) ToChannelAncillarySourceSettingsOutput() ChannelAncillarySourceSettingsOutput {
	return o
}

func (o ChannelAncillarySourceSettingsOutput) ToChannelAncillarySourceSettingsOutputWithContext(ctx context.Context) ChannelAncillarySourceSettingsOutput {
	return o
}

func (o ChannelAncillarySourceSettingsOutput) ToChannelAncillarySourceSettingsPtrOutput() ChannelAncillarySourceSettingsPtrOutput {
	return o.ToChannelAncillarySourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAncillarySourceSettingsOutput) ToChannelAncillarySourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAncillarySourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAncillarySourceSettings) *ChannelAncillarySourceSettings {
		return &v
	}).(ChannelAncillarySourceSettingsPtrOutput)
}

func (o ChannelAncillarySourceSettingsOutput) SourceAncillaryChannelNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAncillarySourceSettings) *int { return v.SourceAncillaryChannelNumber }).(pulumi.IntPtrOutput)
}

type ChannelAncillarySourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAncillarySourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAncillarySourceSettings)(nil)).Elem()
}

func (o ChannelAncillarySourceSettingsPtrOutput) ToChannelAncillarySourceSettingsPtrOutput() ChannelAncillarySourceSettingsPtrOutput {
	return o
}

func (o ChannelAncillarySourceSettingsPtrOutput) ToChannelAncillarySourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAncillarySourceSettingsPtrOutput {
	return o
}

func (o ChannelAncillarySourceSettingsPtrOutput) Elem() ChannelAncillarySourceSettingsOutput {
	return o.ApplyT(func(v *ChannelAncillarySourceSettings) ChannelAncillarySourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAncillarySourceSettings
		return ret
	}).(ChannelAncillarySourceSettingsOutput)
}

func (o ChannelAncillarySourceSettingsPtrOutput) SourceAncillaryChannelNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelAncillarySourceSettings) *int {
		if v == nil {
			return nil
		}
		return v.SourceAncillaryChannelNumber
	}).(pulumi.IntPtrOutput)
}

type ChannelArchiveCdnSettings struct {
	ArchiveS3Settings *ChannelArchiveS3Settings `pulumi:"archiveS3Settings"`
}

// ChannelArchiveCdnSettingsInput is an input type that accepts ChannelArchiveCdnSettingsArgs and ChannelArchiveCdnSettingsOutput values.
// You can construct a concrete instance of `ChannelArchiveCdnSettingsInput` via:
//
//          ChannelArchiveCdnSettingsArgs{...}
type ChannelArchiveCdnSettingsInput interface {
	pulumi.Input

	ToChannelArchiveCdnSettingsOutput() ChannelArchiveCdnSettingsOutput
	ToChannelArchiveCdnSettingsOutputWithContext(context.Context) ChannelArchiveCdnSettingsOutput
}

type ChannelArchiveCdnSettingsArgs struct {
	ArchiveS3Settings ChannelArchiveS3SettingsPtrInput `pulumi:"archiveS3Settings"`
}

func (ChannelArchiveCdnSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveCdnSettings)(nil)).Elem()
}

func (i ChannelArchiveCdnSettingsArgs) ToChannelArchiveCdnSettingsOutput() ChannelArchiveCdnSettingsOutput {
	return i.ToChannelArchiveCdnSettingsOutputWithContext(context.Background())
}

func (i ChannelArchiveCdnSettingsArgs) ToChannelArchiveCdnSettingsOutputWithContext(ctx context.Context) ChannelArchiveCdnSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveCdnSettingsOutput)
}

func (i ChannelArchiveCdnSettingsArgs) ToChannelArchiveCdnSettingsPtrOutput() ChannelArchiveCdnSettingsPtrOutput {
	return i.ToChannelArchiveCdnSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelArchiveCdnSettingsArgs) ToChannelArchiveCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveCdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveCdnSettingsOutput).ToChannelArchiveCdnSettingsPtrOutputWithContext(ctx)
}

// ChannelArchiveCdnSettingsPtrInput is an input type that accepts ChannelArchiveCdnSettingsArgs, ChannelArchiveCdnSettingsPtr and ChannelArchiveCdnSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelArchiveCdnSettingsPtrInput` via:
//
//          ChannelArchiveCdnSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelArchiveCdnSettingsPtrInput interface {
	pulumi.Input

	ToChannelArchiveCdnSettingsPtrOutput() ChannelArchiveCdnSettingsPtrOutput
	ToChannelArchiveCdnSettingsPtrOutputWithContext(context.Context) ChannelArchiveCdnSettingsPtrOutput
}

type channelArchiveCdnSettingsPtrType ChannelArchiveCdnSettingsArgs

func ChannelArchiveCdnSettingsPtr(v *ChannelArchiveCdnSettingsArgs) ChannelArchiveCdnSettingsPtrInput {
	return (*channelArchiveCdnSettingsPtrType)(v)
}

func (*channelArchiveCdnSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveCdnSettings)(nil)).Elem()
}

func (i *channelArchiveCdnSettingsPtrType) ToChannelArchiveCdnSettingsPtrOutput() ChannelArchiveCdnSettingsPtrOutput {
	return i.ToChannelArchiveCdnSettingsPtrOutputWithContext(context.Background())
}

func (i *channelArchiveCdnSettingsPtrType) ToChannelArchiveCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveCdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveCdnSettingsPtrOutput)
}

type ChannelArchiveCdnSettingsOutput struct{ *pulumi.OutputState }

func (ChannelArchiveCdnSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveCdnSettings)(nil)).Elem()
}

func (o ChannelArchiveCdnSettingsOutput) ToChannelArchiveCdnSettingsOutput() ChannelArchiveCdnSettingsOutput {
	return o
}

func (o ChannelArchiveCdnSettingsOutput) ToChannelArchiveCdnSettingsOutputWithContext(ctx context.Context) ChannelArchiveCdnSettingsOutput {
	return o
}

func (o ChannelArchiveCdnSettingsOutput) ToChannelArchiveCdnSettingsPtrOutput() ChannelArchiveCdnSettingsPtrOutput {
	return o.ToChannelArchiveCdnSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelArchiveCdnSettingsOutput) ToChannelArchiveCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveCdnSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelArchiveCdnSettings) *ChannelArchiveCdnSettings {
		return &v
	}).(ChannelArchiveCdnSettingsPtrOutput)
}

func (o ChannelArchiveCdnSettingsOutput) ArchiveS3Settings() ChannelArchiveS3SettingsPtrOutput {
	return o.ApplyT(func(v ChannelArchiveCdnSettings) *ChannelArchiveS3Settings { return v.ArchiveS3Settings }).(ChannelArchiveS3SettingsPtrOutput)
}

type ChannelArchiveCdnSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelArchiveCdnSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveCdnSettings)(nil)).Elem()
}

func (o ChannelArchiveCdnSettingsPtrOutput) ToChannelArchiveCdnSettingsPtrOutput() ChannelArchiveCdnSettingsPtrOutput {
	return o
}

func (o ChannelArchiveCdnSettingsPtrOutput) ToChannelArchiveCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveCdnSettingsPtrOutput {
	return o
}

func (o ChannelArchiveCdnSettingsPtrOutput) Elem() ChannelArchiveCdnSettingsOutput {
	return o.ApplyT(func(v *ChannelArchiveCdnSettings) ChannelArchiveCdnSettings {
		if v != nil {
			return *v
		}
		var ret ChannelArchiveCdnSettings
		return ret
	}).(ChannelArchiveCdnSettingsOutput)
}

func (o ChannelArchiveCdnSettingsPtrOutput) ArchiveS3Settings() ChannelArchiveS3SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveCdnSettings) *ChannelArchiveS3Settings {
		if v == nil {
			return nil
		}
		return v.ArchiveS3Settings
	}).(ChannelArchiveS3SettingsPtrOutput)
}

type ChannelArchiveContainerSettings struct {
	M2tsSettings *ChannelM2tsSettings `pulumi:"m2tsSettings"`
	RawSettings  *ChannelRawSettings  `pulumi:"rawSettings"`
}

// ChannelArchiveContainerSettingsInput is an input type that accepts ChannelArchiveContainerSettingsArgs and ChannelArchiveContainerSettingsOutput values.
// You can construct a concrete instance of `ChannelArchiveContainerSettingsInput` via:
//
//          ChannelArchiveContainerSettingsArgs{...}
type ChannelArchiveContainerSettingsInput interface {
	pulumi.Input

	ToChannelArchiveContainerSettingsOutput() ChannelArchiveContainerSettingsOutput
	ToChannelArchiveContainerSettingsOutputWithContext(context.Context) ChannelArchiveContainerSettingsOutput
}

type ChannelArchiveContainerSettingsArgs struct {
	M2tsSettings ChannelM2tsSettingsPtrInput `pulumi:"m2tsSettings"`
	RawSettings  ChannelRawSettingsPtrInput  `pulumi:"rawSettings"`
}

func (ChannelArchiveContainerSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveContainerSettings)(nil)).Elem()
}

func (i ChannelArchiveContainerSettingsArgs) ToChannelArchiveContainerSettingsOutput() ChannelArchiveContainerSettingsOutput {
	return i.ToChannelArchiveContainerSettingsOutputWithContext(context.Background())
}

func (i ChannelArchiveContainerSettingsArgs) ToChannelArchiveContainerSettingsOutputWithContext(ctx context.Context) ChannelArchiveContainerSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveContainerSettingsOutput)
}

func (i ChannelArchiveContainerSettingsArgs) ToChannelArchiveContainerSettingsPtrOutput() ChannelArchiveContainerSettingsPtrOutput {
	return i.ToChannelArchiveContainerSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelArchiveContainerSettingsArgs) ToChannelArchiveContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveContainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveContainerSettingsOutput).ToChannelArchiveContainerSettingsPtrOutputWithContext(ctx)
}

// ChannelArchiveContainerSettingsPtrInput is an input type that accepts ChannelArchiveContainerSettingsArgs, ChannelArchiveContainerSettingsPtr and ChannelArchiveContainerSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelArchiveContainerSettingsPtrInput` via:
//
//          ChannelArchiveContainerSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelArchiveContainerSettingsPtrInput interface {
	pulumi.Input

	ToChannelArchiveContainerSettingsPtrOutput() ChannelArchiveContainerSettingsPtrOutput
	ToChannelArchiveContainerSettingsPtrOutputWithContext(context.Context) ChannelArchiveContainerSettingsPtrOutput
}

type channelArchiveContainerSettingsPtrType ChannelArchiveContainerSettingsArgs

func ChannelArchiveContainerSettingsPtr(v *ChannelArchiveContainerSettingsArgs) ChannelArchiveContainerSettingsPtrInput {
	return (*channelArchiveContainerSettingsPtrType)(v)
}

func (*channelArchiveContainerSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveContainerSettings)(nil)).Elem()
}

func (i *channelArchiveContainerSettingsPtrType) ToChannelArchiveContainerSettingsPtrOutput() ChannelArchiveContainerSettingsPtrOutput {
	return i.ToChannelArchiveContainerSettingsPtrOutputWithContext(context.Background())
}

func (i *channelArchiveContainerSettingsPtrType) ToChannelArchiveContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveContainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveContainerSettingsPtrOutput)
}

type ChannelArchiveContainerSettingsOutput struct{ *pulumi.OutputState }

func (ChannelArchiveContainerSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveContainerSettings)(nil)).Elem()
}

func (o ChannelArchiveContainerSettingsOutput) ToChannelArchiveContainerSettingsOutput() ChannelArchiveContainerSettingsOutput {
	return o
}

func (o ChannelArchiveContainerSettingsOutput) ToChannelArchiveContainerSettingsOutputWithContext(ctx context.Context) ChannelArchiveContainerSettingsOutput {
	return o
}

func (o ChannelArchiveContainerSettingsOutput) ToChannelArchiveContainerSettingsPtrOutput() ChannelArchiveContainerSettingsPtrOutput {
	return o.ToChannelArchiveContainerSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelArchiveContainerSettingsOutput) ToChannelArchiveContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveContainerSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelArchiveContainerSettings) *ChannelArchiveContainerSettings {
		return &v
	}).(ChannelArchiveContainerSettingsPtrOutput)
}

func (o ChannelArchiveContainerSettingsOutput) M2tsSettings() ChannelM2tsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelArchiveContainerSettings) *ChannelM2tsSettings { return v.M2tsSettings }).(ChannelM2tsSettingsPtrOutput)
}

func (o ChannelArchiveContainerSettingsOutput) RawSettings() ChannelRawSettingsPtrOutput {
	return o.ApplyT(func(v ChannelArchiveContainerSettings) *ChannelRawSettings { return v.RawSettings }).(ChannelRawSettingsPtrOutput)
}

type ChannelArchiveContainerSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelArchiveContainerSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveContainerSettings)(nil)).Elem()
}

func (o ChannelArchiveContainerSettingsPtrOutput) ToChannelArchiveContainerSettingsPtrOutput() ChannelArchiveContainerSettingsPtrOutput {
	return o
}

func (o ChannelArchiveContainerSettingsPtrOutput) ToChannelArchiveContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveContainerSettingsPtrOutput {
	return o
}

func (o ChannelArchiveContainerSettingsPtrOutput) Elem() ChannelArchiveContainerSettingsOutput {
	return o.ApplyT(func(v *ChannelArchiveContainerSettings) ChannelArchiveContainerSettings {
		if v != nil {
			return *v
		}
		var ret ChannelArchiveContainerSettings
		return ret
	}).(ChannelArchiveContainerSettingsOutput)
}

func (o ChannelArchiveContainerSettingsPtrOutput) M2tsSettings() ChannelM2tsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveContainerSettings) *ChannelM2tsSettings {
		if v == nil {
			return nil
		}
		return v.M2tsSettings
	}).(ChannelM2tsSettingsPtrOutput)
}

func (o ChannelArchiveContainerSettingsPtrOutput) RawSettings() ChannelRawSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveContainerSettings) *ChannelRawSettings {
		if v == nil {
			return nil
		}
		return v.RawSettings
	}).(ChannelRawSettingsPtrOutput)
}

type ChannelArchiveGroupSettings struct {
	ArchiveCdnSettings *ChannelArchiveCdnSettings `pulumi:"archiveCdnSettings"`
	Destination        *ChannelOutputLocationRef  `pulumi:"destination"`
	RolloverInterval   *int                       `pulumi:"rolloverInterval"`
}

// ChannelArchiveGroupSettingsInput is an input type that accepts ChannelArchiveGroupSettingsArgs and ChannelArchiveGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelArchiveGroupSettingsInput` via:
//
//          ChannelArchiveGroupSettingsArgs{...}
type ChannelArchiveGroupSettingsInput interface {
	pulumi.Input

	ToChannelArchiveGroupSettingsOutput() ChannelArchiveGroupSettingsOutput
	ToChannelArchiveGroupSettingsOutputWithContext(context.Context) ChannelArchiveGroupSettingsOutput
}

type ChannelArchiveGroupSettingsArgs struct {
	ArchiveCdnSettings ChannelArchiveCdnSettingsPtrInput `pulumi:"archiveCdnSettings"`
	Destination        ChannelOutputLocationRefPtrInput  `pulumi:"destination"`
	RolloverInterval   pulumi.IntPtrInput                `pulumi:"rolloverInterval"`
}

func (ChannelArchiveGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveGroupSettings)(nil)).Elem()
}

func (i ChannelArchiveGroupSettingsArgs) ToChannelArchiveGroupSettingsOutput() ChannelArchiveGroupSettingsOutput {
	return i.ToChannelArchiveGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelArchiveGroupSettingsArgs) ToChannelArchiveGroupSettingsOutputWithContext(ctx context.Context) ChannelArchiveGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveGroupSettingsOutput)
}

func (i ChannelArchiveGroupSettingsArgs) ToChannelArchiveGroupSettingsPtrOutput() ChannelArchiveGroupSettingsPtrOutput {
	return i.ToChannelArchiveGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelArchiveGroupSettingsArgs) ToChannelArchiveGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveGroupSettingsOutput).ToChannelArchiveGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelArchiveGroupSettingsPtrInput is an input type that accepts ChannelArchiveGroupSettingsArgs, ChannelArchiveGroupSettingsPtr and ChannelArchiveGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelArchiveGroupSettingsPtrInput` via:
//
//          ChannelArchiveGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelArchiveGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelArchiveGroupSettingsPtrOutput() ChannelArchiveGroupSettingsPtrOutput
	ToChannelArchiveGroupSettingsPtrOutputWithContext(context.Context) ChannelArchiveGroupSettingsPtrOutput
}

type channelArchiveGroupSettingsPtrType ChannelArchiveGroupSettingsArgs

func ChannelArchiveGroupSettingsPtr(v *ChannelArchiveGroupSettingsArgs) ChannelArchiveGroupSettingsPtrInput {
	return (*channelArchiveGroupSettingsPtrType)(v)
}

func (*channelArchiveGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveGroupSettings)(nil)).Elem()
}

func (i *channelArchiveGroupSettingsPtrType) ToChannelArchiveGroupSettingsPtrOutput() ChannelArchiveGroupSettingsPtrOutput {
	return i.ToChannelArchiveGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelArchiveGroupSettingsPtrType) ToChannelArchiveGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveGroupSettingsPtrOutput)
}

type ChannelArchiveGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelArchiveGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveGroupSettings)(nil)).Elem()
}

func (o ChannelArchiveGroupSettingsOutput) ToChannelArchiveGroupSettingsOutput() ChannelArchiveGroupSettingsOutput {
	return o
}

func (o ChannelArchiveGroupSettingsOutput) ToChannelArchiveGroupSettingsOutputWithContext(ctx context.Context) ChannelArchiveGroupSettingsOutput {
	return o
}

func (o ChannelArchiveGroupSettingsOutput) ToChannelArchiveGroupSettingsPtrOutput() ChannelArchiveGroupSettingsPtrOutput {
	return o.ToChannelArchiveGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelArchiveGroupSettingsOutput) ToChannelArchiveGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelArchiveGroupSettings) *ChannelArchiveGroupSettings {
		return &v
	}).(ChannelArchiveGroupSettingsPtrOutput)
}

func (o ChannelArchiveGroupSettingsOutput) ArchiveCdnSettings() ChannelArchiveCdnSettingsPtrOutput {
	return o.ApplyT(func(v ChannelArchiveGroupSettings) *ChannelArchiveCdnSettings { return v.ArchiveCdnSettings }).(ChannelArchiveCdnSettingsPtrOutput)
}

func (o ChannelArchiveGroupSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelArchiveGroupSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelArchiveGroupSettingsOutput) RolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelArchiveGroupSettings) *int { return v.RolloverInterval }).(pulumi.IntPtrOutput)
}

type ChannelArchiveGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelArchiveGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveGroupSettings)(nil)).Elem()
}

func (o ChannelArchiveGroupSettingsPtrOutput) ToChannelArchiveGroupSettingsPtrOutput() ChannelArchiveGroupSettingsPtrOutput {
	return o
}

func (o ChannelArchiveGroupSettingsPtrOutput) ToChannelArchiveGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveGroupSettingsPtrOutput {
	return o
}

func (o ChannelArchiveGroupSettingsPtrOutput) Elem() ChannelArchiveGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelArchiveGroupSettings) ChannelArchiveGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelArchiveGroupSettings
		return ret
	}).(ChannelArchiveGroupSettingsOutput)
}

func (o ChannelArchiveGroupSettingsPtrOutput) ArchiveCdnSettings() ChannelArchiveCdnSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveGroupSettings) *ChannelArchiveCdnSettings {
		if v == nil {
			return nil
		}
		return v.ArchiveCdnSettings
	}).(ChannelArchiveCdnSettingsPtrOutput)
}

func (o ChannelArchiveGroupSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveGroupSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelArchiveGroupSettingsPtrOutput) RolloverInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.RolloverInterval
	}).(pulumi.IntPtrOutput)
}

type ChannelArchiveOutputSettings struct {
	ContainerSettings *ChannelArchiveContainerSettings `pulumi:"containerSettings"`
	Extension         *string                          `pulumi:"extension"`
	NameModifier      *string                          `pulumi:"nameModifier"`
}

// ChannelArchiveOutputSettingsInput is an input type that accepts ChannelArchiveOutputSettingsArgs and ChannelArchiveOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelArchiveOutputSettingsInput` via:
//
//          ChannelArchiveOutputSettingsArgs{...}
type ChannelArchiveOutputSettingsInput interface {
	pulumi.Input

	ToChannelArchiveOutputSettingsOutput() ChannelArchiveOutputSettingsOutput
	ToChannelArchiveOutputSettingsOutputWithContext(context.Context) ChannelArchiveOutputSettingsOutput
}

type ChannelArchiveOutputSettingsArgs struct {
	ContainerSettings ChannelArchiveContainerSettingsPtrInput `pulumi:"containerSettings"`
	Extension         pulumi.StringPtrInput                   `pulumi:"extension"`
	NameModifier      pulumi.StringPtrInput                   `pulumi:"nameModifier"`
}

func (ChannelArchiveOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveOutputSettings)(nil)).Elem()
}

func (i ChannelArchiveOutputSettingsArgs) ToChannelArchiveOutputSettingsOutput() ChannelArchiveOutputSettingsOutput {
	return i.ToChannelArchiveOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelArchiveOutputSettingsArgs) ToChannelArchiveOutputSettingsOutputWithContext(ctx context.Context) ChannelArchiveOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveOutputSettingsOutput)
}

func (i ChannelArchiveOutputSettingsArgs) ToChannelArchiveOutputSettingsPtrOutput() ChannelArchiveOutputSettingsPtrOutput {
	return i.ToChannelArchiveOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelArchiveOutputSettingsArgs) ToChannelArchiveOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveOutputSettingsOutput).ToChannelArchiveOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelArchiveOutputSettingsPtrInput is an input type that accepts ChannelArchiveOutputSettingsArgs, ChannelArchiveOutputSettingsPtr and ChannelArchiveOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelArchiveOutputSettingsPtrInput` via:
//
//          ChannelArchiveOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelArchiveOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelArchiveOutputSettingsPtrOutput() ChannelArchiveOutputSettingsPtrOutput
	ToChannelArchiveOutputSettingsPtrOutputWithContext(context.Context) ChannelArchiveOutputSettingsPtrOutput
}

type channelArchiveOutputSettingsPtrType ChannelArchiveOutputSettingsArgs

func ChannelArchiveOutputSettingsPtr(v *ChannelArchiveOutputSettingsArgs) ChannelArchiveOutputSettingsPtrInput {
	return (*channelArchiveOutputSettingsPtrType)(v)
}

func (*channelArchiveOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveOutputSettings)(nil)).Elem()
}

func (i *channelArchiveOutputSettingsPtrType) ToChannelArchiveOutputSettingsPtrOutput() ChannelArchiveOutputSettingsPtrOutput {
	return i.ToChannelArchiveOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelArchiveOutputSettingsPtrType) ToChannelArchiveOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveOutputSettingsPtrOutput)
}

type ChannelArchiveOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelArchiveOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveOutputSettings)(nil)).Elem()
}

func (o ChannelArchiveOutputSettingsOutput) ToChannelArchiveOutputSettingsOutput() ChannelArchiveOutputSettingsOutput {
	return o
}

func (o ChannelArchiveOutputSettingsOutput) ToChannelArchiveOutputSettingsOutputWithContext(ctx context.Context) ChannelArchiveOutputSettingsOutput {
	return o
}

func (o ChannelArchiveOutputSettingsOutput) ToChannelArchiveOutputSettingsPtrOutput() ChannelArchiveOutputSettingsPtrOutput {
	return o.ToChannelArchiveOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelArchiveOutputSettingsOutput) ToChannelArchiveOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelArchiveOutputSettings) *ChannelArchiveOutputSettings {
		return &v
	}).(ChannelArchiveOutputSettingsPtrOutput)
}

func (o ChannelArchiveOutputSettingsOutput) ContainerSettings() ChannelArchiveContainerSettingsPtrOutput {
	return o.ApplyT(func(v ChannelArchiveOutputSettings) *ChannelArchiveContainerSettings { return v.ContainerSettings }).(ChannelArchiveContainerSettingsPtrOutput)
}

func (o ChannelArchiveOutputSettingsOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelArchiveOutputSettings) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

func (o ChannelArchiveOutputSettingsOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelArchiveOutputSettings) *string { return v.NameModifier }).(pulumi.StringPtrOutput)
}

type ChannelArchiveOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelArchiveOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveOutputSettings)(nil)).Elem()
}

func (o ChannelArchiveOutputSettingsPtrOutput) ToChannelArchiveOutputSettingsPtrOutput() ChannelArchiveOutputSettingsPtrOutput {
	return o
}

func (o ChannelArchiveOutputSettingsPtrOutput) ToChannelArchiveOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveOutputSettingsPtrOutput {
	return o
}

func (o ChannelArchiveOutputSettingsPtrOutput) Elem() ChannelArchiveOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelArchiveOutputSettings) ChannelArchiveOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelArchiveOutputSettings
		return ret
	}).(ChannelArchiveOutputSettingsOutput)
}

func (o ChannelArchiveOutputSettingsPtrOutput) ContainerSettings() ChannelArchiveContainerSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveOutputSettings) *ChannelArchiveContainerSettings {
		if v == nil {
			return nil
		}
		return v.ContainerSettings
	}).(ChannelArchiveContainerSettingsPtrOutput)
}

func (o ChannelArchiveOutputSettingsPtrOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.Extension
	}).(pulumi.StringPtrOutput)
}

func (o ChannelArchiveOutputSettingsPtrOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.NameModifier
	}).(pulumi.StringPtrOutput)
}

type ChannelArchiveS3Settings struct {
	CannedAcl *string `pulumi:"cannedAcl"`
}

// ChannelArchiveS3SettingsInput is an input type that accepts ChannelArchiveS3SettingsArgs and ChannelArchiveS3SettingsOutput values.
// You can construct a concrete instance of `ChannelArchiveS3SettingsInput` via:
//
//          ChannelArchiveS3SettingsArgs{...}
type ChannelArchiveS3SettingsInput interface {
	pulumi.Input

	ToChannelArchiveS3SettingsOutput() ChannelArchiveS3SettingsOutput
	ToChannelArchiveS3SettingsOutputWithContext(context.Context) ChannelArchiveS3SettingsOutput
}

type ChannelArchiveS3SettingsArgs struct {
	CannedAcl pulumi.StringPtrInput `pulumi:"cannedAcl"`
}

func (ChannelArchiveS3SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveS3Settings)(nil)).Elem()
}

func (i ChannelArchiveS3SettingsArgs) ToChannelArchiveS3SettingsOutput() ChannelArchiveS3SettingsOutput {
	return i.ToChannelArchiveS3SettingsOutputWithContext(context.Background())
}

func (i ChannelArchiveS3SettingsArgs) ToChannelArchiveS3SettingsOutputWithContext(ctx context.Context) ChannelArchiveS3SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveS3SettingsOutput)
}

func (i ChannelArchiveS3SettingsArgs) ToChannelArchiveS3SettingsPtrOutput() ChannelArchiveS3SettingsPtrOutput {
	return i.ToChannelArchiveS3SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelArchiveS3SettingsArgs) ToChannelArchiveS3SettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveS3SettingsOutput).ToChannelArchiveS3SettingsPtrOutputWithContext(ctx)
}

// ChannelArchiveS3SettingsPtrInput is an input type that accepts ChannelArchiveS3SettingsArgs, ChannelArchiveS3SettingsPtr and ChannelArchiveS3SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelArchiveS3SettingsPtrInput` via:
//
//          ChannelArchiveS3SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelArchiveS3SettingsPtrInput interface {
	pulumi.Input

	ToChannelArchiveS3SettingsPtrOutput() ChannelArchiveS3SettingsPtrOutput
	ToChannelArchiveS3SettingsPtrOutputWithContext(context.Context) ChannelArchiveS3SettingsPtrOutput
}

type channelArchiveS3SettingsPtrType ChannelArchiveS3SettingsArgs

func ChannelArchiveS3SettingsPtr(v *ChannelArchiveS3SettingsArgs) ChannelArchiveS3SettingsPtrInput {
	return (*channelArchiveS3SettingsPtrType)(v)
}

func (*channelArchiveS3SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveS3Settings)(nil)).Elem()
}

func (i *channelArchiveS3SettingsPtrType) ToChannelArchiveS3SettingsPtrOutput() ChannelArchiveS3SettingsPtrOutput {
	return i.ToChannelArchiveS3SettingsPtrOutputWithContext(context.Background())
}

func (i *channelArchiveS3SettingsPtrType) ToChannelArchiveS3SettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelArchiveS3SettingsPtrOutput)
}

type ChannelArchiveS3SettingsOutput struct{ *pulumi.OutputState }

func (ChannelArchiveS3SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelArchiveS3Settings)(nil)).Elem()
}

func (o ChannelArchiveS3SettingsOutput) ToChannelArchiveS3SettingsOutput() ChannelArchiveS3SettingsOutput {
	return o
}

func (o ChannelArchiveS3SettingsOutput) ToChannelArchiveS3SettingsOutputWithContext(ctx context.Context) ChannelArchiveS3SettingsOutput {
	return o
}

func (o ChannelArchiveS3SettingsOutput) ToChannelArchiveS3SettingsPtrOutput() ChannelArchiveS3SettingsPtrOutput {
	return o.ToChannelArchiveS3SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelArchiveS3SettingsOutput) ToChannelArchiveS3SettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveS3SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelArchiveS3Settings) *ChannelArchiveS3Settings {
		return &v
	}).(ChannelArchiveS3SettingsPtrOutput)
}

func (o ChannelArchiveS3SettingsOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelArchiveS3Settings) *string { return v.CannedAcl }).(pulumi.StringPtrOutput)
}

type ChannelArchiveS3SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelArchiveS3SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelArchiveS3Settings)(nil)).Elem()
}

func (o ChannelArchiveS3SettingsPtrOutput) ToChannelArchiveS3SettingsPtrOutput() ChannelArchiveS3SettingsPtrOutput {
	return o
}

func (o ChannelArchiveS3SettingsPtrOutput) ToChannelArchiveS3SettingsPtrOutputWithContext(ctx context.Context) ChannelArchiveS3SettingsPtrOutput {
	return o
}

func (o ChannelArchiveS3SettingsPtrOutput) Elem() ChannelArchiveS3SettingsOutput {
	return o.ApplyT(func(v *ChannelArchiveS3Settings) ChannelArchiveS3Settings {
		if v != nil {
			return *v
		}
		var ret ChannelArchiveS3Settings
		return ret
	}).(ChannelArchiveS3SettingsOutput)
}

func (o ChannelArchiveS3SettingsPtrOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelArchiveS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CannedAcl
	}).(pulumi.StringPtrOutput)
}

type ChannelAribDestinationSettings struct {
}

// ChannelAribDestinationSettingsInput is an input type that accepts ChannelAribDestinationSettingsArgs and ChannelAribDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelAribDestinationSettingsInput` via:
//
//          ChannelAribDestinationSettingsArgs{...}
type ChannelAribDestinationSettingsInput interface {
	pulumi.Input

	ToChannelAribDestinationSettingsOutput() ChannelAribDestinationSettingsOutput
	ToChannelAribDestinationSettingsOutputWithContext(context.Context) ChannelAribDestinationSettingsOutput
}

type ChannelAribDestinationSettingsArgs struct {
}

func (ChannelAribDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAribDestinationSettings)(nil)).Elem()
}

func (i ChannelAribDestinationSettingsArgs) ToChannelAribDestinationSettingsOutput() ChannelAribDestinationSettingsOutput {
	return i.ToChannelAribDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelAribDestinationSettingsArgs) ToChannelAribDestinationSettingsOutputWithContext(ctx context.Context) ChannelAribDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAribDestinationSettingsOutput)
}

func (i ChannelAribDestinationSettingsArgs) ToChannelAribDestinationSettingsPtrOutput() ChannelAribDestinationSettingsPtrOutput {
	return i.ToChannelAribDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAribDestinationSettingsArgs) ToChannelAribDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelAribDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAribDestinationSettingsOutput).ToChannelAribDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelAribDestinationSettingsPtrInput is an input type that accepts ChannelAribDestinationSettingsArgs, ChannelAribDestinationSettingsPtr and ChannelAribDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAribDestinationSettingsPtrInput` via:
//
//          ChannelAribDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAribDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelAribDestinationSettingsPtrOutput() ChannelAribDestinationSettingsPtrOutput
	ToChannelAribDestinationSettingsPtrOutputWithContext(context.Context) ChannelAribDestinationSettingsPtrOutput
}

type channelAribDestinationSettingsPtrType ChannelAribDestinationSettingsArgs

func ChannelAribDestinationSettingsPtr(v *ChannelAribDestinationSettingsArgs) ChannelAribDestinationSettingsPtrInput {
	return (*channelAribDestinationSettingsPtrType)(v)
}

func (*channelAribDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAribDestinationSettings)(nil)).Elem()
}

func (i *channelAribDestinationSettingsPtrType) ToChannelAribDestinationSettingsPtrOutput() ChannelAribDestinationSettingsPtrOutput {
	return i.ToChannelAribDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAribDestinationSettingsPtrType) ToChannelAribDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelAribDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAribDestinationSettingsPtrOutput)
}

type ChannelAribDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAribDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAribDestinationSettings)(nil)).Elem()
}

func (o ChannelAribDestinationSettingsOutput) ToChannelAribDestinationSettingsOutput() ChannelAribDestinationSettingsOutput {
	return o
}

func (o ChannelAribDestinationSettingsOutput) ToChannelAribDestinationSettingsOutputWithContext(ctx context.Context) ChannelAribDestinationSettingsOutput {
	return o
}

func (o ChannelAribDestinationSettingsOutput) ToChannelAribDestinationSettingsPtrOutput() ChannelAribDestinationSettingsPtrOutput {
	return o.ToChannelAribDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAribDestinationSettingsOutput) ToChannelAribDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelAribDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAribDestinationSettings) *ChannelAribDestinationSettings {
		return &v
	}).(ChannelAribDestinationSettingsPtrOutput)
}

type ChannelAribDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAribDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAribDestinationSettings)(nil)).Elem()
}

func (o ChannelAribDestinationSettingsPtrOutput) ToChannelAribDestinationSettingsPtrOutput() ChannelAribDestinationSettingsPtrOutput {
	return o
}

func (o ChannelAribDestinationSettingsPtrOutput) ToChannelAribDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelAribDestinationSettingsPtrOutput {
	return o
}

func (o ChannelAribDestinationSettingsPtrOutput) Elem() ChannelAribDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelAribDestinationSettings) ChannelAribDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAribDestinationSettings
		return ret
	}).(ChannelAribDestinationSettingsOutput)
}

type ChannelAribSourceSettings struct {
}

// ChannelAribSourceSettingsInput is an input type that accepts ChannelAribSourceSettingsArgs and ChannelAribSourceSettingsOutput values.
// You can construct a concrete instance of `ChannelAribSourceSettingsInput` via:
//
//          ChannelAribSourceSettingsArgs{...}
type ChannelAribSourceSettingsInput interface {
	pulumi.Input

	ToChannelAribSourceSettingsOutput() ChannelAribSourceSettingsOutput
	ToChannelAribSourceSettingsOutputWithContext(context.Context) ChannelAribSourceSettingsOutput
}

type ChannelAribSourceSettingsArgs struct {
}

func (ChannelAribSourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAribSourceSettings)(nil)).Elem()
}

func (i ChannelAribSourceSettingsArgs) ToChannelAribSourceSettingsOutput() ChannelAribSourceSettingsOutput {
	return i.ToChannelAribSourceSettingsOutputWithContext(context.Background())
}

func (i ChannelAribSourceSettingsArgs) ToChannelAribSourceSettingsOutputWithContext(ctx context.Context) ChannelAribSourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAribSourceSettingsOutput)
}

func (i ChannelAribSourceSettingsArgs) ToChannelAribSourceSettingsPtrOutput() ChannelAribSourceSettingsPtrOutput {
	return i.ToChannelAribSourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAribSourceSettingsArgs) ToChannelAribSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAribSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAribSourceSettingsOutput).ToChannelAribSourceSettingsPtrOutputWithContext(ctx)
}

// ChannelAribSourceSettingsPtrInput is an input type that accepts ChannelAribSourceSettingsArgs, ChannelAribSourceSettingsPtr and ChannelAribSourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAribSourceSettingsPtrInput` via:
//
//          ChannelAribSourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAribSourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelAribSourceSettingsPtrOutput() ChannelAribSourceSettingsPtrOutput
	ToChannelAribSourceSettingsPtrOutputWithContext(context.Context) ChannelAribSourceSettingsPtrOutput
}

type channelAribSourceSettingsPtrType ChannelAribSourceSettingsArgs

func ChannelAribSourceSettingsPtr(v *ChannelAribSourceSettingsArgs) ChannelAribSourceSettingsPtrInput {
	return (*channelAribSourceSettingsPtrType)(v)
}

func (*channelAribSourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAribSourceSettings)(nil)).Elem()
}

func (i *channelAribSourceSettingsPtrType) ToChannelAribSourceSettingsPtrOutput() ChannelAribSourceSettingsPtrOutput {
	return i.ToChannelAribSourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAribSourceSettingsPtrType) ToChannelAribSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAribSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAribSourceSettingsPtrOutput)
}

type ChannelAribSourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAribSourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAribSourceSettings)(nil)).Elem()
}

func (o ChannelAribSourceSettingsOutput) ToChannelAribSourceSettingsOutput() ChannelAribSourceSettingsOutput {
	return o
}

func (o ChannelAribSourceSettingsOutput) ToChannelAribSourceSettingsOutputWithContext(ctx context.Context) ChannelAribSourceSettingsOutput {
	return o
}

func (o ChannelAribSourceSettingsOutput) ToChannelAribSourceSettingsPtrOutput() ChannelAribSourceSettingsPtrOutput {
	return o.ToChannelAribSourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAribSourceSettingsOutput) ToChannelAribSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAribSourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAribSourceSettings) *ChannelAribSourceSettings {
		return &v
	}).(ChannelAribSourceSettingsPtrOutput)
}

type ChannelAribSourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAribSourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAribSourceSettings)(nil)).Elem()
}

func (o ChannelAribSourceSettingsPtrOutput) ToChannelAribSourceSettingsPtrOutput() ChannelAribSourceSettingsPtrOutput {
	return o
}

func (o ChannelAribSourceSettingsPtrOutput) ToChannelAribSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelAribSourceSettingsPtrOutput {
	return o
}

func (o ChannelAribSourceSettingsPtrOutput) Elem() ChannelAribSourceSettingsOutput {
	return o.ApplyT(func(v *ChannelAribSourceSettings) ChannelAribSourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAribSourceSettings
		return ret
	}).(ChannelAribSourceSettingsOutput)
}

type ChannelAudioChannelMapping struct {
	InputChannelLevels []ChannelInputChannelLevel `pulumi:"inputChannelLevels"`
	OutputChannel      *int                       `pulumi:"outputChannel"`
}

// ChannelAudioChannelMappingInput is an input type that accepts ChannelAudioChannelMappingArgs and ChannelAudioChannelMappingOutput values.
// You can construct a concrete instance of `ChannelAudioChannelMappingInput` via:
//
//          ChannelAudioChannelMappingArgs{...}
type ChannelAudioChannelMappingInput interface {
	pulumi.Input

	ToChannelAudioChannelMappingOutput() ChannelAudioChannelMappingOutput
	ToChannelAudioChannelMappingOutputWithContext(context.Context) ChannelAudioChannelMappingOutput
}

type ChannelAudioChannelMappingArgs struct {
	InputChannelLevels ChannelInputChannelLevelArrayInput `pulumi:"inputChannelLevels"`
	OutputChannel      pulumi.IntPtrInput                 `pulumi:"outputChannel"`
}

func (ChannelAudioChannelMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioChannelMapping)(nil)).Elem()
}

func (i ChannelAudioChannelMappingArgs) ToChannelAudioChannelMappingOutput() ChannelAudioChannelMappingOutput {
	return i.ToChannelAudioChannelMappingOutputWithContext(context.Background())
}

func (i ChannelAudioChannelMappingArgs) ToChannelAudioChannelMappingOutputWithContext(ctx context.Context) ChannelAudioChannelMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioChannelMappingOutput)
}

// ChannelAudioChannelMappingArrayInput is an input type that accepts ChannelAudioChannelMappingArray and ChannelAudioChannelMappingArrayOutput values.
// You can construct a concrete instance of `ChannelAudioChannelMappingArrayInput` via:
//
//          ChannelAudioChannelMappingArray{ ChannelAudioChannelMappingArgs{...} }
type ChannelAudioChannelMappingArrayInput interface {
	pulumi.Input

	ToChannelAudioChannelMappingArrayOutput() ChannelAudioChannelMappingArrayOutput
	ToChannelAudioChannelMappingArrayOutputWithContext(context.Context) ChannelAudioChannelMappingArrayOutput
}

type ChannelAudioChannelMappingArray []ChannelAudioChannelMappingInput

func (ChannelAudioChannelMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioChannelMapping)(nil)).Elem()
}

func (i ChannelAudioChannelMappingArray) ToChannelAudioChannelMappingArrayOutput() ChannelAudioChannelMappingArrayOutput {
	return i.ToChannelAudioChannelMappingArrayOutputWithContext(context.Background())
}

func (i ChannelAudioChannelMappingArray) ToChannelAudioChannelMappingArrayOutputWithContext(ctx context.Context) ChannelAudioChannelMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioChannelMappingArrayOutput)
}

type ChannelAudioChannelMappingOutput struct{ *pulumi.OutputState }

func (ChannelAudioChannelMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioChannelMapping)(nil)).Elem()
}

func (o ChannelAudioChannelMappingOutput) ToChannelAudioChannelMappingOutput() ChannelAudioChannelMappingOutput {
	return o
}

func (o ChannelAudioChannelMappingOutput) ToChannelAudioChannelMappingOutputWithContext(ctx context.Context) ChannelAudioChannelMappingOutput {
	return o
}

func (o ChannelAudioChannelMappingOutput) InputChannelLevels() ChannelInputChannelLevelArrayOutput {
	return o.ApplyT(func(v ChannelAudioChannelMapping) []ChannelInputChannelLevel { return v.InputChannelLevels }).(ChannelInputChannelLevelArrayOutput)
}

func (o ChannelAudioChannelMappingOutput) OutputChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAudioChannelMapping) *int { return v.OutputChannel }).(pulumi.IntPtrOutput)
}

type ChannelAudioChannelMappingArrayOutput struct{ *pulumi.OutputState }

func (ChannelAudioChannelMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioChannelMapping)(nil)).Elem()
}

func (o ChannelAudioChannelMappingArrayOutput) ToChannelAudioChannelMappingArrayOutput() ChannelAudioChannelMappingArrayOutput {
	return o
}

func (o ChannelAudioChannelMappingArrayOutput) ToChannelAudioChannelMappingArrayOutputWithContext(ctx context.Context) ChannelAudioChannelMappingArrayOutput {
	return o
}

func (o ChannelAudioChannelMappingArrayOutput) Index(i pulumi.IntInput) ChannelAudioChannelMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelAudioChannelMapping {
		return vs[0].([]ChannelAudioChannelMapping)[vs[1].(int)]
	}).(ChannelAudioChannelMappingOutput)
}

type ChannelAudioCodecSettings struct {
	AacSettings         *ChannelAacSettings         `pulumi:"aacSettings"`
	Ac3Settings         *ChannelAc3Settings         `pulumi:"ac3Settings"`
	Eac3Settings        *ChannelEac3Settings        `pulumi:"eac3Settings"`
	Mp2Settings         *ChannelMp2Settings         `pulumi:"mp2Settings"`
	PassThroughSettings *ChannelPassThroughSettings `pulumi:"passThroughSettings"`
	WavSettings         *ChannelWavSettings         `pulumi:"wavSettings"`
}

// ChannelAudioCodecSettingsInput is an input type that accepts ChannelAudioCodecSettingsArgs and ChannelAudioCodecSettingsOutput values.
// You can construct a concrete instance of `ChannelAudioCodecSettingsInput` via:
//
//          ChannelAudioCodecSettingsArgs{...}
type ChannelAudioCodecSettingsInput interface {
	pulumi.Input

	ToChannelAudioCodecSettingsOutput() ChannelAudioCodecSettingsOutput
	ToChannelAudioCodecSettingsOutputWithContext(context.Context) ChannelAudioCodecSettingsOutput
}

type ChannelAudioCodecSettingsArgs struct {
	AacSettings         ChannelAacSettingsPtrInput         `pulumi:"aacSettings"`
	Ac3Settings         ChannelAc3SettingsPtrInput         `pulumi:"ac3Settings"`
	Eac3Settings        ChannelEac3SettingsPtrInput        `pulumi:"eac3Settings"`
	Mp2Settings         ChannelMp2SettingsPtrInput         `pulumi:"mp2Settings"`
	PassThroughSettings ChannelPassThroughSettingsPtrInput `pulumi:"passThroughSettings"`
	WavSettings         ChannelWavSettingsPtrInput         `pulumi:"wavSettings"`
}

func (ChannelAudioCodecSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioCodecSettings)(nil)).Elem()
}

func (i ChannelAudioCodecSettingsArgs) ToChannelAudioCodecSettingsOutput() ChannelAudioCodecSettingsOutput {
	return i.ToChannelAudioCodecSettingsOutputWithContext(context.Background())
}

func (i ChannelAudioCodecSettingsArgs) ToChannelAudioCodecSettingsOutputWithContext(ctx context.Context) ChannelAudioCodecSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioCodecSettingsOutput)
}

func (i ChannelAudioCodecSettingsArgs) ToChannelAudioCodecSettingsPtrOutput() ChannelAudioCodecSettingsPtrOutput {
	return i.ToChannelAudioCodecSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAudioCodecSettingsArgs) ToChannelAudioCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioCodecSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioCodecSettingsOutput).ToChannelAudioCodecSettingsPtrOutputWithContext(ctx)
}

// ChannelAudioCodecSettingsPtrInput is an input type that accepts ChannelAudioCodecSettingsArgs, ChannelAudioCodecSettingsPtr and ChannelAudioCodecSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAudioCodecSettingsPtrInput` via:
//
//          ChannelAudioCodecSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAudioCodecSettingsPtrInput interface {
	pulumi.Input

	ToChannelAudioCodecSettingsPtrOutput() ChannelAudioCodecSettingsPtrOutput
	ToChannelAudioCodecSettingsPtrOutputWithContext(context.Context) ChannelAudioCodecSettingsPtrOutput
}

type channelAudioCodecSettingsPtrType ChannelAudioCodecSettingsArgs

func ChannelAudioCodecSettingsPtr(v *ChannelAudioCodecSettingsArgs) ChannelAudioCodecSettingsPtrInput {
	return (*channelAudioCodecSettingsPtrType)(v)
}

func (*channelAudioCodecSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioCodecSettings)(nil)).Elem()
}

func (i *channelAudioCodecSettingsPtrType) ToChannelAudioCodecSettingsPtrOutput() ChannelAudioCodecSettingsPtrOutput {
	return i.ToChannelAudioCodecSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAudioCodecSettingsPtrType) ToChannelAudioCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioCodecSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioCodecSettingsPtrOutput)
}

type ChannelAudioCodecSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAudioCodecSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioCodecSettings)(nil)).Elem()
}

func (o ChannelAudioCodecSettingsOutput) ToChannelAudioCodecSettingsOutput() ChannelAudioCodecSettingsOutput {
	return o
}

func (o ChannelAudioCodecSettingsOutput) ToChannelAudioCodecSettingsOutputWithContext(ctx context.Context) ChannelAudioCodecSettingsOutput {
	return o
}

func (o ChannelAudioCodecSettingsOutput) ToChannelAudioCodecSettingsPtrOutput() ChannelAudioCodecSettingsPtrOutput {
	return o.ToChannelAudioCodecSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAudioCodecSettingsOutput) ToChannelAudioCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioCodecSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioCodecSettings) *ChannelAudioCodecSettings {
		return &v
	}).(ChannelAudioCodecSettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsOutput) AacSettings() ChannelAacSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioCodecSettings) *ChannelAacSettings { return v.AacSettings }).(ChannelAacSettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsOutput) Ac3Settings() ChannelAc3SettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioCodecSettings) *ChannelAc3Settings { return v.Ac3Settings }).(ChannelAc3SettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsOutput) Eac3Settings() ChannelEac3SettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioCodecSettings) *ChannelEac3Settings { return v.Eac3Settings }).(ChannelEac3SettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsOutput) Mp2Settings() ChannelMp2SettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioCodecSettings) *ChannelMp2Settings { return v.Mp2Settings }).(ChannelMp2SettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsOutput) PassThroughSettings() ChannelPassThroughSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioCodecSettings) *ChannelPassThroughSettings { return v.PassThroughSettings }).(ChannelPassThroughSettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsOutput) WavSettings() ChannelWavSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioCodecSettings) *ChannelWavSettings { return v.WavSettings }).(ChannelWavSettingsPtrOutput)
}

type ChannelAudioCodecSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioCodecSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioCodecSettings)(nil)).Elem()
}

func (o ChannelAudioCodecSettingsPtrOutput) ToChannelAudioCodecSettingsPtrOutput() ChannelAudioCodecSettingsPtrOutput {
	return o
}

func (o ChannelAudioCodecSettingsPtrOutput) ToChannelAudioCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioCodecSettingsPtrOutput {
	return o
}

func (o ChannelAudioCodecSettingsPtrOutput) Elem() ChannelAudioCodecSettingsOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) ChannelAudioCodecSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAudioCodecSettings
		return ret
	}).(ChannelAudioCodecSettingsOutput)
}

func (o ChannelAudioCodecSettingsPtrOutput) AacSettings() ChannelAacSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) *ChannelAacSettings {
		if v == nil {
			return nil
		}
		return v.AacSettings
	}).(ChannelAacSettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsPtrOutput) Ac3Settings() ChannelAc3SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) *ChannelAc3Settings {
		if v == nil {
			return nil
		}
		return v.Ac3Settings
	}).(ChannelAc3SettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsPtrOutput) Eac3Settings() ChannelEac3SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) *ChannelEac3Settings {
		if v == nil {
			return nil
		}
		return v.Eac3Settings
	}).(ChannelEac3SettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsPtrOutput) Mp2Settings() ChannelMp2SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) *ChannelMp2Settings {
		if v == nil {
			return nil
		}
		return v.Mp2Settings
	}).(ChannelMp2SettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsPtrOutput) PassThroughSettings() ChannelPassThroughSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) *ChannelPassThroughSettings {
		if v == nil {
			return nil
		}
		return v.PassThroughSettings
	}).(ChannelPassThroughSettingsPtrOutput)
}

func (o ChannelAudioCodecSettingsPtrOutput) WavSettings() ChannelWavSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAudioCodecSettings) *ChannelWavSettings {
		if v == nil {
			return nil
		}
		return v.WavSettings
	}).(ChannelWavSettingsPtrOutput)
}

type ChannelAudioDescription struct {
	AudioNormalizationSettings *ChannelAudioNormalizationSettings `pulumi:"audioNormalizationSettings"`
	AudioSelectorName          *string                            `pulumi:"audioSelectorName"`
	AudioType                  *string                            `pulumi:"audioType"`
	AudioTypeControl           *string                            `pulumi:"audioTypeControl"`
	CodecSettings              *ChannelAudioCodecSettings         `pulumi:"codecSettings"`
	LanguageCode               *string                            `pulumi:"languageCode"`
	LanguageCodeControl        *string                            `pulumi:"languageCodeControl"`
	Name                       *string                            `pulumi:"name"`
	RemixSettings              *ChannelRemixSettings              `pulumi:"remixSettings"`
	StreamName                 *string                            `pulumi:"streamName"`
}

// ChannelAudioDescriptionInput is an input type that accepts ChannelAudioDescriptionArgs and ChannelAudioDescriptionOutput values.
// You can construct a concrete instance of `ChannelAudioDescriptionInput` via:
//
//          ChannelAudioDescriptionArgs{...}
type ChannelAudioDescriptionInput interface {
	pulumi.Input

	ToChannelAudioDescriptionOutput() ChannelAudioDescriptionOutput
	ToChannelAudioDescriptionOutputWithContext(context.Context) ChannelAudioDescriptionOutput
}

type ChannelAudioDescriptionArgs struct {
	AudioNormalizationSettings ChannelAudioNormalizationSettingsPtrInput `pulumi:"audioNormalizationSettings"`
	AudioSelectorName          pulumi.StringPtrInput                     `pulumi:"audioSelectorName"`
	AudioType                  pulumi.StringPtrInput                     `pulumi:"audioType"`
	AudioTypeControl           pulumi.StringPtrInput                     `pulumi:"audioTypeControl"`
	CodecSettings              ChannelAudioCodecSettingsPtrInput         `pulumi:"codecSettings"`
	LanguageCode               pulumi.StringPtrInput                     `pulumi:"languageCode"`
	LanguageCodeControl        pulumi.StringPtrInput                     `pulumi:"languageCodeControl"`
	Name                       pulumi.StringPtrInput                     `pulumi:"name"`
	RemixSettings              ChannelRemixSettingsPtrInput              `pulumi:"remixSettings"`
	StreamName                 pulumi.StringPtrInput                     `pulumi:"streamName"`
}

func (ChannelAudioDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioDescription)(nil)).Elem()
}

func (i ChannelAudioDescriptionArgs) ToChannelAudioDescriptionOutput() ChannelAudioDescriptionOutput {
	return i.ToChannelAudioDescriptionOutputWithContext(context.Background())
}

func (i ChannelAudioDescriptionArgs) ToChannelAudioDescriptionOutputWithContext(ctx context.Context) ChannelAudioDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioDescriptionOutput)
}

// ChannelAudioDescriptionArrayInput is an input type that accepts ChannelAudioDescriptionArray and ChannelAudioDescriptionArrayOutput values.
// You can construct a concrete instance of `ChannelAudioDescriptionArrayInput` via:
//
//          ChannelAudioDescriptionArray{ ChannelAudioDescriptionArgs{...} }
type ChannelAudioDescriptionArrayInput interface {
	pulumi.Input

	ToChannelAudioDescriptionArrayOutput() ChannelAudioDescriptionArrayOutput
	ToChannelAudioDescriptionArrayOutputWithContext(context.Context) ChannelAudioDescriptionArrayOutput
}

type ChannelAudioDescriptionArray []ChannelAudioDescriptionInput

func (ChannelAudioDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioDescription)(nil)).Elem()
}

func (i ChannelAudioDescriptionArray) ToChannelAudioDescriptionArrayOutput() ChannelAudioDescriptionArrayOutput {
	return i.ToChannelAudioDescriptionArrayOutputWithContext(context.Background())
}

func (i ChannelAudioDescriptionArray) ToChannelAudioDescriptionArrayOutputWithContext(ctx context.Context) ChannelAudioDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioDescriptionArrayOutput)
}

type ChannelAudioDescriptionOutput struct{ *pulumi.OutputState }

func (ChannelAudioDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioDescription)(nil)).Elem()
}

func (o ChannelAudioDescriptionOutput) ToChannelAudioDescriptionOutput() ChannelAudioDescriptionOutput {
	return o
}

func (o ChannelAudioDescriptionOutput) ToChannelAudioDescriptionOutputWithContext(ctx context.Context) ChannelAudioDescriptionOutput {
	return o
}

func (o ChannelAudioDescriptionOutput) AudioNormalizationSettings() ChannelAudioNormalizationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *ChannelAudioNormalizationSettings {
		return v.AudioNormalizationSettings
	}).(ChannelAudioNormalizationSettingsPtrOutput)
}

func (o ChannelAudioDescriptionOutput) AudioSelectorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.AudioSelectorName }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioDescriptionOutput) AudioType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.AudioType }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioDescriptionOutput) AudioTypeControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.AudioTypeControl }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioDescriptionOutput) CodecSettings() ChannelAudioCodecSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *ChannelAudioCodecSettings { return v.CodecSettings }).(ChannelAudioCodecSettingsPtrOutput)
}

func (o ChannelAudioDescriptionOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioDescriptionOutput) LanguageCodeControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.LanguageCodeControl }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioDescriptionOutput) RemixSettings() ChannelRemixSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *ChannelRemixSettings { return v.RemixSettings }).(ChannelRemixSettingsPtrOutput)
}

func (o ChannelAudioDescriptionOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioDescription) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

type ChannelAudioDescriptionArrayOutput struct{ *pulumi.OutputState }

func (ChannelAudioDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioDescription)(nil)).Elem()
}

func (o ChannelAudioDescriptionArrayOutput) ToChannelAudioDescriptionArrayOutput() ChannelAudioDescriptionArrayOutput {
	return o
}

func (o ChannelAudioDescriptionArrayOutput) ToChannelAudioDescriptionArrayOutputWithContext(ctx context.Context) ChannelAudioDescriptionArrayOutput {
	return o
}

func (o ChannelAudioDescriptionArrayOutput) Index(i pulumi.IntInput) ChannelAudioDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelAudioDescription {
		return vs[0].([]ChannelAudioDescription)[vs[1].(int)]
	}).(ChannelAudioDescriptionOutput)
}

type ChannelAudioLanguageSelection struct {
	LanguageCode            *string `pulumi:"languageCode"`
	LanguageSelectionPolicy *string `pulumi:"languageSelectionPolicy"`
}

// ChannelAudioLanguageSelectionInput is an input type that accepts ChannelAudioLanguageSelectionArgs and ChannelAudioLanguageSelectionOutput values.
// You can construct a concrete instance of `ChannelAudioLanguageSelectionInput` via:
//
//          ChannelAudioLanguageSelectionArgs{...}
type ChannelAudioLanguageSelectionInput interface {
	pulumi.Input

	ToChannelAudioLanguageSelectionOutput() ChannelAudioLanguageSelectionOutput
	ToChannelAudioLanguageSelectionOutputWithContext(context.Context) ChannelAudioLanguageSelectionOutput
}

type ChannelAudioLanguageSelectionArgs struct {
	LanguageCode            pulumi.StringPtrInput `pulumi:"languageCode"`
	LanguageSelectionPolicy pulumi.StringPtrInput `pulumi:"languageSelectionPolicy"`
}

func (ChannelAudioLanguageSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioLanguageSelection)(nil)).Elem()
}

func (i ChannelAudioLanguageSelectionArgs) ToChannelAudioLanguageSelectionOutput() ChannelAudioLanguageSelectionOutput {
	return i.ToChannelAudioLanguageSelectionOutputWithContext(context.Background())
}

func (i ChannelAudioLanguageSelectionArgs) ToChannelAudioLanguageSelectionOutputWithContext(ctx context.Context) ChannelAudioLanguageSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioLanguageSelectionOutput)
}

func (i ChannelAudioLanguageSelectionArgs) ToChannelAudioLanguageSelectionPtrOutput() ChannelAudioLanguageSelectionPtrOutput {
	return i.ToChannelAudioLanguageSelectionPtrOutputWithContext(context.Background())
}

func (i ChannelAudioLanguageSelectionArgs) ToChannelAudioLanguageSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioLanguageSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioLanguageSelectionOutput).ToChannelAudioLanguageSelectionPtrOutputWithContext(ctx)
}

// ChannelAudioLanguageSelectionPtrInput is an input type that accepts ChannelAudioLanguageSelectionArgs, ChannelAudioLanguageSelectionPtr and ChannelAudioLanguageSelectionPtrOutput values.
// You can construct a concrete instance of `ChannelAudioLanguageSelectionPtrInput` via:
//
//          ChannelAudioLanguageSelectionArgs{...}
//
//  or:
//
//          nil
type ChannelAudioLanguageSelectionPtrInput interface {
	pulumi.Input

	ToChannelAudioLanguageSelectionPtrOutput() ChannelAudioLanguageSelectionPtrOutput
	ToChannelAudioLanguageSelectionPtrOutputWithContext(context.Context) ChannelAudioLanguageSelectionPtrOutput
}

type channelAudioLanguageSelectionPtrType ChannelAudioLanguageSelectionArgs

func ChannelAudioLanguageSelectionPtr(v *ChannelAudioLanguageSelectionArgs) ChannelAudioLanguageSelectionPtrInput {
	return (*channelAudioLanguageSelectionPtrType)(v)
}

func (*channelAudioLanguageSelectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioLanguageSelection)(nil)).Elem()
}

func (i *channelAudioLanguageSelectionPtrType) ToChannelAudioLanguageSelectionPtrOutput() ChannelAudioLanguageSelectionPtrOutput {
	return i.ToChannelAudioLanguageSelectionPtrOutputWithContext(context.Background())
}

func (i *channelAudioLanguageSelectionPtrType) ToChannelAudioLanguageSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioLanguageSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioLanguageSelectionPtrOutput)
}

type ChannelAudioLanguageSelectionOutput struct{ *pulumi.OutputState }

func (ChannelAudioLanguageSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioLanguageSelection)(nil)).Elem()
}

func (o ChannelAudioLanguageSelectionOutput) ToChannelAudioLanguageSelectionOutput() ChannelAudioLanguageSelectionOutput {
	return o
}

func (o ChannelAudioLanguageSelectionOutput) ToChannelAudioLanguageSelectionOutputWithContext(ctx context.Context) ChannelAudioLanguageSelectionOutput {
	return o
}

func (o ChannelAudioLanguageSelectionOutput) ToChannelAudioLanguageSelectionPtrOutput() ChannelAudioLanguageSelectionPtrOutput {
	return o.ToChannelAudioLanguageSelectionPtrOutputWithContext(context.Background())
}

func (o ChannelAudioLanguageSelectionOutput) ToChannelAudioLanguageSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioLanguageSelectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioLanguageSelection) *ChannelAudioLanguageSelection {
		return &v
	}).(ChannelAudioLanguageSelectionPtrOutput)
}

func (o ChannelAudioLanguageSelectionOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioLanguageSelection) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioLanguageSelectionOutput) LanguageSelectionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioLanguageSelection) *string { return v.LanguageSelectionPolicy }).(pulumi.StringPtrOutput)
}

type ChannelAudioLanguageSelectionPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioLanguageSelectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioLanguageSelection)(nil)).Elem()
}

func (o ChannelAudioLanguageSelectionPtrOutput) ToChannelAudioLanguageSelectionPtrOutput() ChannelAudioLanguageSelectionPtrOutput {
	return o
}

func (o ChannelAudioLanguageSelectionPtrOutput) ToChannelAudioLanguageSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioLanguageSelectionPtrOutput {
	return o
}

func (o ChannelAudioLanguageSelectionPtrOutput) Elem() ChannelAudioLanguageSelectionOutput {
	return o.ApplyT(func(v *ChannelAudioLanguageSelection) ChannelAudioLanguageSelection {
		if v != nil {
			return *v
		}
		var ret ChannelAudioLanguageSelection
		return ret
	}).(ChannelAudioLanguageSelectionOutput)
}

func (o ChannelAudioLanguageSelectionPtrOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioLanguageSelection) *string {
		if v == nil {
			return nil
		}
		return v.LanguageCode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAudioLanguageSelectionPtrOutput) LanguageSelectionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioLanguageSelection) *string {
		if v == nil {
			return nil
		}
		return v.LanguageSelectionPolicy
	}).(pulumi.StringPtrOutput)
}

type ChannelAudioNormalizationSettings struct {
	Algorithm        *string  `pulumi:"algorithm"`
	AlgorithmControl *string  `pulumi:"algorithmControl"`
	TargetLkfs       *float64 `pulumi:"targetLkfs"`
}

// ChannelAudioNormalizationSettingsInput is an input type that accepts ChannelAudioNormalizationSettingsArgs and ChannelAudioNormalizationSettingsOutput values.
// You can construct a concrete instance of `ChannelAudioNormalizationSettingsInput` via:
//
//          ChannelAudioNormalizationSettingsArgs{...}
type ChannelAudioNormalizationSettingsInput interface {
	pulumi.Input

	ToChannelAudioNormalizationSettingsOutput() ChannelAudioNormalizationSettingsOutput
	ToChannelAudioNormalizationSettingsOutputWithContext(context.Context) ChannelAudioNormalizationSettingsOutput
}

type ChannelAudioNormalizationSettingsArgs struct {
	Algorithm        pulumi.StringPtrInput  `pulumi:"algorithm"`
	AlgorithmControl pulumi.StringPtrInput  `pulumi:"algorithmControl"`
	TargetLkfs       pulumi.Float64PtrInput `pulumi:"targetLkfs"`
}

func (ChannelAudioNormalizationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioNormalizationSettings)(nil)).Elem()
}

func (i ChannelAudioNormalizationSettingsArgs) ToChannelAudioNormalizationSettingsOutput() ChannelAudioNormalizationSettingsOutput {
	return i.ToChannelAudioNormalizationSettingsOutputWithContext(context.Background())
}

func (i ChannelAudioNormalizationSettingsArgs) ToChannelAudioNormalizationSettingsOutputWithContext(ctx context.Context) ChannelAudioNormalizationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioNormalizationSettingsOutput)
}

func (i ChannelAudioNormalizationSettingsArgs) ToChannelAudioNormalizationSettingsPtrOutput() ChannelAudioNormalizationSettingsPtrOutput {
	return i.ToChannelAudioNormalizationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAudioNormalizationSettingsArgs) ToChannelAudioNormalizationSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioNormalizationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioNormalizationSettingsOutput).ToChannelAudioNormalizationSettingsPtrOutputWithContext(ctx)
}

// ChannelAudioNormalizationSettingsPtrInput is an input type that accepts ChannelAudioNormalizationSettingsArgs, ChannelAudioNormalizationSettingsPtr and ChannelAudioNormalizationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAudioNormalizationSettingsPtrInput` via:
//
//          ChannelAudioNormalizationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAudioNormalizationSettingsPtrInput interface {
	pulumi.Input

	ToChannelAudioNormalizationSettingsPtrOutput() ChannelAudioNormalizationSettingsPtrOutput
	ToChannelAudioNormalizationSettingsPtrOutputWithContext(context.Context) ChannelAudioNormalizationSettingsPtrOutput
}

type channelAudioNormalizationSettingsPtrType ChannelAudioNormalizationSettingsArgs

func ChannelAudioNormalizationSettingsPtr(v *ChannelAudioNormalizationSettingsArgs) ChannelAudioNormalizationSettingsPtrInput {
	return (*channelAudioNormalizationSettingsPtrType)(v)
}

func (*channelAudioNormalizationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioNormalizationSettings)(nil)).Elem()
}

func (i *channelAudioNormalizationSettingsPtrType) ToChannelAudioNormalizationSettingsPtrOutput() ChannelAudioNormalizationSettingsPtrOutput {
	return i.ToChannelAudioNormalizationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAudioNormalizationSettingsPtrType) ToChannelAudioNormalizationSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioNormalizationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioNormalizationSettingsPtrOutput)
}

type ChannelAudioNormalizationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAudioNormalizationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioNormalizationSettings)(nil)).Elem()
}

func (o ChannelAudioNormalizationSettingsOutput) ToChannelAudioNormalizationSettingsOutput() ChannelAudioNormalizationSettingsOutput {
	return o
}

func (o ChannelAudioNormalizationSettingsOutput) ToChannelAudioNormalizationSettingsOutputWithContext(ctx context.Context) ChannelAudioNormalizationSettingsOutput {
	return o
}

func (o ChannelAudioNormalizationSettingsOutput) ToChannelAudioNormalizationSettingsPtrOutput() ChannelAudioNormalizationSettingsPtrOutput {
	return o.ToChannelAudioNormalizationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAudioNormalizationSettingsOutput) ToChannelAudioNormalizationSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioNormalizationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioNormalizationSettings) *ChannelAudioNormalizationSettings {
		return &v
	}).(ChannelAudioNormalizationSettingsPtrOutput)
}

func (o ChannelAudioNormalizationSettingsOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioNormalizationSettings) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioNormalizationSettingsOutput) AlgorithmControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioNormalizationSettings) *string { return v.AlgorithmControl }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioNormalizationSettingsOutput) TargetLkfs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelAudioNormalizationSettings) *float64 { return v.TargetLkfs }).(pulumi.Float64PtrOutput)
}

type ChannelAudioNormalizationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioNormalizationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioNormalizationSettings)(nil)).Elem()
}

func (o ChannelAudioNormalizationSettingsPtrOutput) ToChannelAudioNormalizationSettingsPtrOutput() ChannelAudioNormalizationSettingsPtrOutput {
	return o
}

func (o ChannelAudioNormalizationSettingsPtrOutput) ToChannelAudioNormalizationSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioNormalizationSettingsPtrOutput {
	return o
}

func (o ChannelAudioNormalizationSettingsPtrOutput) Elem() ChannelAudioNormalizationSettingsOutput {
	return o.ApplyT(func(v *ChannelAudioNormalizationSettings) ChannelAudioNormalizationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAudioNormalizationSettings
		return ret
	}).(ChannelAudioNormalizationSettingsOutput)
}

func (o ChannelAudioNormalizationSettingsPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioNormalizationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Algorithm
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAudioNormalizationSettingsPtrOutput) AlgorithmControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioNormalizationSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlgorithmControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAudioNormalizationSettingsPtrOutput) TargetLkfs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelAudioNormalizationSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.TargetLkfs
	}).(pulumi.Float64PtrOutput)
}

type ChannelAudioOnlyHlsSettings struct {
	AudioGroupId   *string               `pulumi:"audioGroupId"`
	AudioOnlyImage *ChannelInputLocation `pulumi:"audioOnlyImage"`
	AudioTrackType *string               `pulumi:"audioTrackType"`
	SegmentType    *string               `pulumi:"segmentType"`
}

// ChannelAudioOnlyHlsSettingsInput is an input type that accepts ChannelAudioOnlyHlsSettingsArgs and ChannelAudioOnlyHlsSettingsOutput values.
// You can construct a concrete instance of `ChannelAudioOnlyHlsSettingsInput` via:
//
//          ChannelAudioOnlyHlsSettingsArgs{...}
type ChannelAudioOnlyHlsSettingsInput interface {
	pulumi.Input

	ToChannelAudioOnlyHlsSettingsOutput() ChannelAudioOnlyHlsSettingsOutput
	ToChannelAudioOnlyHlsSettingsOutputWithContext(context.Context) ChannelAudioOnlyHlsSettingsOutput
}

type ChannelAudioOnlyHlsSettingsArgs struct {
	AudioGroupId   pulumi.StringPtrInput        `pulumi:"audioGroupId"`
	AudioOnlyImage ChannelInputLocationPtrInput `pulumi:"audioOnlyImage"`
	AudioTrackType pulumi.StringPtrInput        `pulumi:"audioTrackType"`
	SegmentType    pulumi.StringPtrInput        `pulumi:"segmentType"`
}

func (ChannelAudioOnlyHlsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioOnlyHlsSettings)(nil)).Elem()
}

func (i ChannelAudioOnlyHlsSettingsArgs) ToChannelAudioOnlyHlsSettingsOutput() ChannelAudioOnlyHlsSettingsOutput {
	return i.ToChannelAudioOnlyHlsSettingsOutputWithContext(context.Background())
}

func (i ChannelAudioOnlyHlsSettingsArgs) ToChannelAudioOnlyHlsSettingsOutputWithContext(ctx context.Context) ChannelAudioOnlyHlsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioOnlyHlsSettingsOutput)
}

func (i ChannelAudioOnlyHlsSettingsArgs) ToChannelAudioOnlyHlsSettingsPtrOutput() ChannelAudioOnlyHlsSettingsPtrOutput {
	return i.ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAudioOnlyHlsSettingsArgs) ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioOnlyHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioOnlyHlsSettingsOutput).ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(ctx)
}

// ChannelAudioOnlyHlsSettingsPtrInput is an input type that accepts ChannelAudioOnlyHlsSettingsArgs, ChannelAudioOnlyHlsSettingsPtr and ChannelAudioOnlyHlsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAudioOnlyHlsSettingsPtrInput` via:
//
//          ChannelAudioOnlyHlsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAudioOnlyHlsSettingsPtrInput interface {
	pulumi.Input

	ToChannelAudioOnlyHlsSettingsPtrOutput() ChannelAudioOnlyHlsSettingsPtrOutput
	ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(context.Context) ChannelAudioOnlyHlsSettingsPtrOutput
}

type channelAudioOnlyHlsSettingsPtrType ChannelAudioOnlyHlsSettingsArgs

func ChannelAudioOnlyHlsSettingsPtr(v *ChannelAudioOnlyHlsSettingsArgs) ChannelAudioOnlyHlsSettingsPtrInput {
	return (*channelAudioOnlyHlsSettingsPtrType)(v)
}

func (*channelAudioOnlyHlsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioOnlyHlsSettings)(nil)).Elem()
}

func (i *channelAudioOnlyHlsSettingsPtrType) ToChannelAudioOnlyHlsSettingsPtrOutput() ChannelAudioOnlyHlsSettingsPtrOutput {
	return i.ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAudioOnlyHlsSettingsPtrType) ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioOnlyHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioOnlyHlsSettingsPtrOutput)
}

type ChannelAudioOnlyHlsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAudioOnlyHlsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioOnlyHlsSettings)(nil)).Elem()
}

func (o ChannelAudioOnlyHlsSettingsOutput) ToChannelAudioOnlyHlsSettingsOutput() ChannelAudioOnlyHlsSettingsOutput {
	return o
}

func (o ChannelAudioOnlyHlsSettingsOutput) ToChannelAudioOnlyHlsSettingsOutputWithContext(ctx context.Context) ChannelAudioOnlyHlsSettingsOutput {
	return o
}

func (o ChannelAudioOnlyHlsSettingsOutput) ToChannelAudioOnlyHlsSettingsPtrOutput() ChannelAudioOnlyHlsSettingsPtrOutput {
	return o.ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAudioOnlyHlsSettingsOutput) ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioOnlyHlsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioOnlyHlsSettings) *ChannelAudioOnlyHlsSettings {
		return &v
	}).(ChannelAudioOnlyHlsSettingsPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsOutput) AudioGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioOnlyHlsSettings) *string { return v.AudioGroupId }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsOutput) AudioOnlyImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelAudioOnlyHlsSettings) *ChannelInputLocation { return v.AudioOnlyImage }).(ChannelInputLocationPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsOutput) AudioTrackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioOnlyHlsSettings) *string { return v.AudioTrackType }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsOutput) SegmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioOnlyHlsSettings) *string { return v.SegmentType }).(pulumi.StringPtrOutput)
}

type ChannelAudioOnlyHlsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioOnlyHlsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioOnlyHlsSettings)(nil)).Elem()
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) ToChannelAudioOnlyHlsSettingsPtrOutput() ChannelAudioOnlyHlsSettingsPtrOutput {
	return o
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) ToChannelAudioOnlyHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioOnlyHlsSettingsPtrOutput {
	return o
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) Elem() ChannelAudioOnlyHlsSettingsOutput {
	return o.ApplyT(func(v *ChannelAudioOnlyHlsSettings) ChannelAudioOnlyHlsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAudioOnlyHlsSettings
		return ret
	}).(ChannelAudioOnlyHlsSettingsOutput)
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) AudioGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioOnlyHlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioGroupId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) AudioOnlyImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelAudioOnlyHlsSettings) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.AudioOnlyImage
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) AudioTrackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioOnlyHlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioTrackType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAudioOnlyHlsSettingsPtrOutput) SegmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioOnlyHlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.SegmentType
	}).(pulumi.StringPtrOutput)
}

type ChannelAudioPidSelection struct {
	Pid *int `pulumi:"pid"`
}

// ChannelAudioPidSelectionInput is an input type that accepts ChannelAudioPidSelectionArgs and ChannelAudioPidSelectionOutput values.
// You can construct a concrete instance of `ChannelAudioPidSelectionInput` via:
//
//          ChannelAudioPidSelectionArgs{...}
type ChannelAudioPidSelectionInput interface {
	pulumi.Input

	ToChannelAudioPidSelectionOutput() ChannelAudioPidSelectionOutput
	ToChannelAudioPidSelectionOutputWithContext(context.Context) ChannelAudioPidSelectionOutput
}

type ChannelAudioPidSelectionArgs struct {
	Pid pulumi.IntPtrInput `pulumi:"pid"`
}

func (ChannelAudioPidSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioPidSelection)(nil)).Elem()
}

func (i ChannelAudioPidSelectionArgs) ToChannelAudioPidSelectionOutput() ChannelAudioPidSelectionOutput {
	return i.ToChannelAudioPidSelectionOutputWithContext(context.Background())
}

func (i ChannelAudioPidSelectionArgs) ToChannelAudioPidSelectionOutputWithContext(ctx context.Context) ChannelAudioPidSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioPidSelectionOutput)
}

func (i ChannelAudioPidSelectionArgs) ToChannelAudioPidSelectionPtrOutput() ChannelAudioPidSelectionPtrOutput {
	return i.ToChannelAudioPidSelectionPtrOutputWithContext(context.Background())
}

func (i ChannelAudioPidSelectionArgs) ToChannelAudioPidSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioPidSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioPidSelectionOutput).ToChannelAudioPidSelectionPtrOutputWithContext(ctx)
}

// ChannelAudioPidSelectionPtrInput is an input type that accepts ChannelAudioPidSelectionArgs, ChannelAudioPidSelectionPtr and ChannelAudioPidSelectionPtrOutput values.
// You can construct a concrete instance of `ChannelAudioPidSelectionPtrInput` via:
//
//          ChannelAudioPidSelectionArgs{...}
//
//  or:
//
//          nil
type ChannelAudioPidSelectionPtrInput interface {
	pulumi.Input

	ToChannelAudioPidSelectionPtrOutput() ChannelAudioPidSelectionPtrOutput
	ToChannelAudioPidSelectionPtrOutputWithContext(context.Context) ChannelAudioPidSelectionPtrOutput
}

type channelAudioPidSelectionPtrType ChannelAudioPidSelectionArgs

func ChannelAudioPidSelectionPtr(v *ChannelAudioPidSelectionArgs) ChannelAudioPidSelectionPtrInput {
	return (*channelAudioPidSelectionPtrType)(v)
}

func (*channelAudioPidSelectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioPidSelection)(nil)).Elem()
}

func (i *channelAudioPidSelectionPtrType) ToChannelAudioPidSelectionPtrOutput() ChannelAudioPidSelectionPtrOutput {
	return i.ToChannelAudioPidSelectionPtrOutputWithContext(context.Background())
}

func (i *channelAudioPidSelectionPtrType) ToChannelAudioPidSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioPidSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioPidSelectionPtrOutput)
}

type ChannelAudioPidSelectionOutput struct{ *pulumi.OutputState }

func (ChannelAudioPidSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioPidSelection)(nil)).Elem()
}

func (o ChannelAudioPidSelectionOutput) ToChannelAudioPidSelectionOutput() ChannelAudioPidSelectionOutput {
	return o
}

func (o ChannelAudioPidSelectionOutput) ToChannelAudioPidSelectionOutputWithContext(ctx context.Context) ChannelAudioPidSelectionOutput {
	return o
}

func (o ChannelAudioPidSelectionOutput) ToChannelAudioPidSelectionPtrOutput() ChannelAudioPidSelectionPtrOutput {
	return o.ToChannelAudioPidSelectionPtrOutputWithContext(context.Background())
}

func (o ChannelAudioPidSelectionOutput) ToChannelAudioPidSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioPidSelectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioPidSelection) *ChannelAudioPidSelection {
		return &v
	}).(ChannelAudioPidSelectionPtrOutput)
}

func (o ChannelAudioPidSelectionOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAudioPidSelection) *int { return v.Pid }).(pulumi.IntPtrOutput)
}

type ChannelAudioPidSelectionPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioPidSelectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioPidSelection)(nil)).Elem()
}

func (o ChannelAudioPidSelectionPtrOutput) ToChannelAudioPidSelectionPtrOutput() ChannelAudioPidSelectionPtrOutput {
	return o
}

func (o ChannelAudioPidSelectionPtrOutput) ToChannelAudioPidSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioPidSelectionPtrOutput {
	return o
}

func (o ChannelAudioPidSelectionPtrOutput) Elem() ChannelAudioPidSelectionOutput {
	return o.ApplyT(func(v *ChannelAudioPidSelection) ChannelAudioPidSelection {
		if v != nil {
			return *v
		}
		var ret ChannelAudioPidSelection
		return ret
	}).(ChannelAudioPidSelectionOutput)
}

func (o ChannelAudioPidSelectionPtrOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelAudioPidSelection) *int {
		if v == nil {
			return nil
		}
		return v.Pid
	}).(pulumi.IntPtrOutput)
}

type ChannelAudioSelector struct {
	Name             *string                       `pulumi:"name"`
	SelectorSettings *ChannelAudioSelectorSettings `pulumi:"selectorSettings"`
}

// ChannelAudioSelectorInput is an input type that accepts ChannelAudioSelectorArgs and ChannelAudioSelectorOutput values.
// You can construct a concrete instance of `ChannelAudioSelectorInput` via:
//
//          ChannelAudioSelectorArgs{...}
type ChannelAudioSelectorInput interface {
	pulumi.Input

	ToChannelAudioSelectorOutput() ChannelAudioSelectorOutput
	ToChannelAudioSelectorOutputWithContext(context.Context) ChannelAudioSelectorOutput
}

type ChannelAudioSelectorArgs struct {
	Name             pulumi.StringPtrInput                `pulumi:"name"`
	SelectorSettings ChannelAudioSelectorSettingsPtrInput `pulumi:"selectorSettings"`
}

func (ChannelAudioSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioSelector)(nil)).Elem()
}

func (i ChannelAudioSelectorArgs) ToChannelAudioSelectorOutput() ChannelAudioSelectorOutput {
	return i.ToChannelAudioSelectorOutputWithContext(context.Background())
}

func (i ChannelAudioSelectorArgs) ToChannelAudioSelectorOutputWithContext(ctx context.Context) ChannelAudioSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSelectorOutput)
}

// ChannelAudioSelectorArrayInput is an input type that accepts ChannelAudioSelectorArray and ChannelAudioSelectorArrayOutput values.
// You can construct a concrete instance of `ChannelAudioSelectorArrayInput` via:
//
//          ChannelAudioSelectorArray{ ChannelAudioSelectorArgs{...} }
type ChannelAudioSelectorArrayInput interface {
	pulumi.Input

	ToChannelAudioSelectorArrayOutput() ChannelAudioSelectorArrayOutput
	ToChannelAudioSelectorArrayOutputWithContext(context.Context) ChannelAudioSelectorArrayOutput
}

type ChannelAudioSelectorArray []ChannelAudioSelectorInput

func (ChannelAudioSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioSelector)(nil)).Elem()
}

func (i ChannelAudioSelectorArray) ToChannelAudioSelectorArrayOutput() ChannelAudioSelectorArrayOutput {
	return i.ToChannelAudioSelectorArrayOutputWithContext(context.Background())
}

func (i ChannelAudioSelectorArray) ToChannelAudioSelectorArrayOutputWithContext(ctx context.Context) ChannelAudioSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSelectorArrayOutput)
}

type ChannelAudioSelectorOutput struct{ *pulumi.OutputState }

func (ChannelAudioSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioSelector)(nil)).Elem()
}

func (o ChannelAudioSelectorOutput) ToChannelAudioSelectorOutput() ChannelAudioSelectorOutput {
	return o
}

func (o ChannelAudioSelectorOutput) ToChannelAudioSelectorOutputWithContext(ctx context.Context) ChannelAudioSelectorOutput {
	return o
}

func (o ChannelAudioSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioSelectorOutput) SelectorSettings() ChannelAudioSelectorSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAudioSelector) *ChannelAudioSelectorSettings { return v.SelectorSettings }).(ChannelAudioSelectorSettingsPtrOutput)
}

type ChannelAudioSelectorArrayOutput struct{ *pulumi.OutputState }

func (ChannelAudioSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioSelector)(nil)).Elem()
}

func (o ChannelAudioSelectorArrayOutput) ToChannelAudioSelectorArrayOutput() ChannelAudioSelectorArrayOutput {
	return o
}

func (o ChannelAudioSelectorArrayOutput) ToChannelAudioSelectorArrayOutputWithContext(ctx context.Context) ChannelAudioSelectorArrayOutput {
	return o
}

func (o ChannelAudioSelectorArrayOutput) Index(i pulumi.IntInput) ChannelAudioSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelAudioSelector {
		return vs[0].([]ChannelAudioSelector)[vs[1].(int)]
	}).(ChannelAudioSelectorOutput)
}

type ChannelAudioSelectorSettings struct {
	AudioLanguageSelection *ChannelAudioLanguageSelection `pulumi:"audioLanguageSelection"`
	AudioPidSelection      *ChannelAudioPidSelection      `pulumi:"audioPidSelection"`
	AudioTrackSelection    *ChannelAudioTrackSelection    `pulumi:"audioTrackSelection"`
}

// ChannelAudioSelectorSettingsInput is an input type that accepts ChannelAudioSelectorSettingsArgs and ChannelAudioSelectorSettingsOutput values.
// You can construct a concrete instance of `ChannelAudioSelectorSettingsInput` via:
//
//          ChannelAudioSelectorSettingsArgs{...}
type ChannelAudioSelectorSettingsInput interface {
	pulumi.Input

	ToChannelAudioSelectorSettingsOutput() ChannelAudioSelectorSettingsOutput
	ToChannelAudioSelectorSettingsOutputWithContext(context.Context) ChannelAudioSelectorSettingsOutput
}

type ChannelAudioSelectorSettingsArgs struct {
	AudioLanguageSelection ChannelAudioLanguageSelectionPtrInput `pulumi:"audioLanguageSelection"`
	AudioPidSelection      ChannelAudioPidSelectionPtrInput      `pulumi:"audioPidSelection"`
	AudioTrackSelection    ChannelAudioTrackSelectionPtrInput    `pulumi:"audioTrackSelection"`
}

func (ChannelAudioSelectorSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioSelectorSettings)(nil)).Elem()
}

func (i ChannelAudioSelectorSettingsArgs) ToChannelAudioSelectorSettingsOutput() ChannelAudioSelectorSettingsOutput {
	return i.ToChannelAudioSelectorSettingsOutputWithContext(context.Background())
}

func (i ChannelAudioSelectorSettingsArgs) ToChannelAudioSelectorSettingsOutputWithContext(ctx context.Context) ChannelAudioSelectorSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSelectorSettingsOutput)
}

func (i ChannelAudioSelectorSettingsArgs) ToChannelAudioSelectorSettingsPtrOutput() ChannelAudioSelectorSettingsPtrOutput {
	return i.ToChannelAudioSelectorSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAudioSelectorSettingsArgs) ToChannelAudioSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSelectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSelectorSettingsOutput).ToChannelAudioSelectorSettingsPtrOutputWithContext(ctx)
}

// ChannelAudioSelectorSettingsPtrInput is an input type that accepts ChannelAudioSelectorSettingsArgs, ChannelAudioSelectorSettingsPtr and ChannelAudioSelectorSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAudioSelectorSettingsPtrInput` via:
//
//          ChannelAudioSelectorSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAudioSelectorSettingsPtrInput interface {
	pulumi.Input

	ToChannelAudioSelectorSettingsPtrOutput() ChannelAudioSelectorSettingsPtrOutput
	ToChannelAudioSelectorSettingsPtrOutputWithContext(context.Context) ChannelAudioSelectorSettingsPtrOutput
}

type channelAudioSelectorSettingsPtrType ChannelAudioSelectorSettingsArgs

func ChannelAudioSelectorSettingsPtr(v *ChannelAudioSelectorSettingsArgs) ChannelAudioSelectorSettingsPtrInput {
	return (*channelAudioSelectorSettingsPtrType)(v)
}

func (*channelAudioSelectorSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioSelectorSettings)(nil)).Elem()
}

func (i *channelAudioSelectorSettingsPtrType) ToChannelAudioSelectorSettingsPtrOutput() ChannelAudioSelectorSettingsPtrOutput {
	return i.ToChannelAudioSelectorSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAudioSelectorSettingsPtrType) ToChannelAudioSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSelectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSelectorSettingsPtrOutput)
}

type ChannelAudioSelectorSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAudioSelectorSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioSelectorSettings)(nil)).Elem()
}

func (o ChannelAudioSelectorSettingsOutput) ToChannelAudioSelectorSettingsOutput() ChannelAudioSelectorSettingsOutput {
	return o
}

func (o ChannelAudioSelectorSettingsOutput) ToChannelAudioSelectorSettingsOutputWithContext(ctx context.Context) ChannelAudioSelectorSettingsOutput {
	return o
}

func (o ChannelAudioSelectorSettingsOutput) ToChannelAudioSelectorSettingsPtrOutput() ChannelAudioSelectorSettingsPtrOutput {
	return o.ToChannelAudioSelectorSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAudioSelectorSettingsOutput) ToChannelAudioSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSelectorSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioSelectorSettings) *ChannelAudioSelectorSettings {
		return &v
	}).(ChannelAudioSelectorSettingsPtrOutput)
}

func (o ChannelAudioSelectorSettingsOutput) AudioLanguageSelection() ChannelAudioLanguageSelectionPtrOutput {
	return o.ApplyT(func(v ChannelAudioSelectorSettings) *ChannelAudioLanguageSelection { return v.AudioLanguageSelection }).(ChannelAudioLanguageSelectionPtrOutput)
}

func (o ChannelAudioSelectorSettingsOutput) AudioPidSelection() ChannelAudioPidSelectionPtrOutput {
	return o.ApplyT(func(v ChannelAudioSelectorSettings) *ChannelAudioPidSelection { return v.AudioPidSelection }).(ChannelAudioPidSelectionPtrOutput)
}

func (o ChannelAudioSelectorSettingsOutput) AudioTrackSelection() ChannelAudioTrackSelectionPtrOutput {
	return o.ApplyT(func(v ChannelAudioSelectorSettings) *ChannelAudioTrackSelection { return v.AudioTrackSelection }).(ChannelAudioTrackSelectionPtrOutput)
}

type ChannelAudioSelectorSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioSelectorSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioSelectorSettings)(nil)).Elem()
}

func (o ChannelAudioSelectorSettingsPtrOutput) ToChannelAudioSelectorSettingsPtrOutput() ChannelAudioSelectorSettingsPtrOutput {
	return o
}

func (o ChannelAudioSelectorSettingsPtrOutput) ToChannelAudioSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSelectorSettingsPtrOutput {
	return o
}

func (o ChannelAudioSelectorSettingsPtrOutput) Elem() ChannelAudioSelectorSettingsOutput {
	return o.ApplyT(func(v *ChannelAudioSelectorSettings) ChannelAudioSelectorSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAudioSelectorSettings
		return ret
	}).(ChannelAudioSelectorSettingsOutput)
}

func (o ChannelAudioSelectorSettingsPtrOutput) AudioLanguageSelection() ChannelAudioLanguageSelectionPtrOutput {
	return o.ApplyT(func(v *ChannelAudioSelectorSettings) *ChannelAudioLanguageSelection {
		if v == nil {
			return nil
		}
		return v.AudioLanguageSelection
	}).(ChannelAudioLanguageSelectionPtrOutput)
}

func (o ChannelAudioSelectorSettingsPtrOutput) AudioPidSelection() ChannelAudioPidSelectionPtrOutput {
	return o.ApplyT(func(v *ChannelAudioSelectorSettings) *ChannelAudioPidSelection {
		if v == nil {
			return nil
		}
		return v.AudioPidSelection
	}).(ChannelAudioPidSelectionPtrOutput)
}

func (o ChannelAudioSelectorSettingsPtrOutput) AudioTrackSelection() ChannelAudioTrackSelectionPtrOutput {
	return o.ApplyT(func(v *ChannelAudioSelectorSettings) *ChannelAudioTrackSelection {
		if v == nil {
			return nil
		}
		return v.AudioTrackSelection
	}).(ChannelAudioTrackSelectionPtrOutput)
}

type ChannelAudioSilenceFailoverSettings struct {
	AudioSelectorName         *string `pulumi:"audioSelectorName"`
	AudioSilenceThresholdMsec *int    `pulumi:"audioSilenceThresholdMsec"`
}

// ChannelAudioSilenceFailoverSettingsInput is an input type that accepts ChannelAudioSilenceFailoverSettingsArgs and ChannelAudioSilenceFailoverSettingsOutput values.
// You can construct a concrete instance of `ChannelAudioSilenceFailoverSettingsInput` via:
//
//          ChannelAudioSilenceFailoverSettingsArgs{...}
type ChannelAudioSilenceFailoverSettingsInput interface {
	pulumi.Input

	ToChannelAudioSilenceFailoverSettingsOutput() ChannelAudioSilenceFailoverSettingsOutput
	ToChannelAudioSilenceFailoverSettingsOutputWithContext(context.Context) ChannelAudioSilenceFailoverSettingsOutput
}

type ChannelAudioSilenceFailoverSettingsArgs struct {
	AudioSelectorName         pulumi.StringPtrInput `pulumi:"audioSelectorName"`
	AudioSilenceThresholdMsec pulumi.IntPtrInput    `pulumi:"audioSilenceThresholdMsec"`
}

func (ChannelAudioSilenceFailoverSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioSilenceFailoverSettings)(nil)).Elem()
}

func (i ChannelAudioSilenceFailoverSettingsArgs) ToChannelAudioSilenceFailoverSettingsOutput() ChannelAudioSilenceFailoverSettingsOutput {
	return i.ToChannelAudioSilenceFailoverSettingsOutputWithContext(context.Background())
}

func (i ChannelAudioSilenceFailoverSettingsArgs) ToChannelAudioSilenceFailoverSettingsOutputWithContext(ctx context.Context) ChannelAudioSilenceFailoverSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSilenceFailoverSettingsOutput)
}

func (i ChannelAudioSilenceFailoverSettingsArgs) ToChannelAudioSilenceFailoverSettingsPtrOutput() ChannelAudioSilenceFailoverSettingsPtrOutput {
	return i.ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAudioSilenceFailoverSettingsArgs) ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSilenceFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSilenceFailoverSettingsOutput).ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(ctx)
}

// ChannelAudioSilenceFailoverSettingsPtrInput is an input type that accepts ChannelAudioSilenceFailoverSettingsArgs, ChannelAudioSilenceFailoverSettingsPtr and ChannelAudioSilenceFailoverSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAudioSilenceFailoverSettingsPtrInput` via:
//
//          ChannelAudioSilenceFailoverSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAudioSilenceFailoverSettingsPtrInput interface {
	pulumi.Input

	ToChannelAudioSilenceFailoverSettingsPtrOutput() ChannelAudioSilenceFailoverSettingsPtrOutput
	ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(context.Context) ChannelAudioSilenceFailoverSettingsPtrOutput
}

type channelAudioSilenceFailoverSettingsPtrType ChannelAudioSilenceFailoverSettingsArgs

func ChannelAudioSilenceFailoverSettingsPtr(v *ChannelAudioSilenceFailoverSettingsArgs) ChannelAudioSilenceFailoverSettingsPtrInput {
	return (*channelAudioSilenceFailoverSettingsPtrType)(v)
}

func (*channelAudioSilenceFailoverSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioSilenceFailoverSettings)(nil)).Elem()
}

func (i *channelAudioSilenceFailoverSettingsPtrType) ToChannelAudioSilenceFailoverSettingsPtrOutput() ChannelAudioSilenceFailoverSettingsPtrOutput {
	return i.ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAudioSilenceFailoverSettingsPtrType) ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSilenceFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioSilenceFailoverSettingsPtrOutput)
}

type ChannelAudioSilenceFailoverSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAudioSilenceFailoverSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioSilenceFailoverSettings)(nil)).Elem()
}

func (o ChannelAudioSilenceFailoverSettingsOutput) ToChannelAudioSilenceFailoverSettingsOutput() ChannelAudioSilenceFailoverSettingsOutput {
	return o
}

func (o ChannelAudioSilenceFailoverSettingsOutput) ToChannelAudioSilenceFailoverSettingsOutputWithContext(ctx context.Context) ChannelAudioSilenceFailoverSettingsOutput {
	return o
}

func (o ChannelAudioSilenceFailoverSettingsOutput) ToChannelAudioSilenceFailoverSettingsPtrOutput() ChannelAudioSilenceFailoverSettingsPtrOutput {
	return o.ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAudioSilenceFailoverSettingsOutput) ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSilenceFailoverSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioSilenceFailoverSettings) *ChannelAudioSilenceFailoverSettings {
		return &v
	}).(ChannelAudioSilenceFailoverSettingsPtrOutput)
}

func (o ChannelAudioSilenceFailoverSettingsOutput) AudioSelectorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAudioSilenceFailoverSettings) *string { return v.AudioSelectorName }).(pulumi.StringPtrOutput)
}

func (o ChannelAudioSilenceFailoverSettingsOutput) AudioSilenceThresholdMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAudioSilenceFailoverSettings) *int { return v.AudioSilenceThresholdMsec }).(pulumi.IntPtrOutput)
}

type ChannelAudioSilenceFailoverSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioSilenceFailoverSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioSilenceFailoverSettings)(nil)).Elem()
}

func (o ChannelAudioSilenceFailoverSettingsPtrOutput) ToChannelAudioSilenceFailoverSettingsPtrOutput() ChannelAudioSilenceFailoverSettingsPtrOutput {
	return o
}

func (o ChannelAudioSilenceFailoverSettingsPtrOutput) ToChannelAudioSilenceFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAudioSilenceFailoverSettingsPtrOutput {
	return o
}

func (o ChannelAudioSilenceFailoverSettingsPtrOutput) Elem() ChannelAudioSilenceFailoverSettingsOutput {
	return o.ApplyT(func(v *ChannelAudioSilenceFailoverSettings) ChannelAudioSilenceFailoverSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAudioSilenceFailoverSettings
		return ret
	}).(ChannelAudioSilenceFailoverSettingsOutput)
}

func (o ChannelAudioSilenceFailoverSettingsPtrOutput) AudioSelectorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAudioSilenceFailoverSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioSelectorName
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAudioSilenceFailoverSettingsPtrOutput) AudioSilenceThresholdMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelAudioSilenceFailoverSettings) *int {
		if v == nil {
			return nil
		}
		return v.AudioSilenceThresholdMsec
	}).(pulumi.IntPtrOutput)
}

type ChannelAudioTrack struct {
	Track *int `pulumi:"track"`
}

// ChannelAudioTrackInput is an input type that accepts ChannelAudioTrackArgs and ChannelAudioTrackOutput values.
// You can construct a concrete instance of `ChannelAudioTrackInput` via:
//
//          ChannelAudioTrackArgs{...}
type ChannelAudioTrackInput interface {
	pulumi.Input

	ToChannelAudioTrackOutput() ChannelAudioTrackOutput
	ToChannelAudioTrackOutputWithContext(context.Context) ChannelAudioTrackOutput
}

type ChannelAudioTrackArgs struct {
	Track pulumi.IntPtrInput `pulumi:"track"`
}

func (ChannelAudioTrackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioTrack)(nil)).Elem()
}

func (i ChannelAudioTrackArgs) ToChannelAudioTrackOutput() ChannelAudioTrackOutput {
	return i.ToChannelAudioTrackOutputWithContext(context.Background())
}

func (i ChannelAudioTrackArgs) ToChannelAudioTrackOutputWithContext(ctx context.Context) ChannelAudioTrackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioTrackOutput)
}

// ChannelAudioTrackArrayInput is an input type that accepts ChannelAudioTrackArray and ChannelAudioTrackArrayOutput values.
// You can construct a concrete instance of `ChannelAudioTrackArrayInput` via:
//
//          ChannelAudioTrackArray{ ChannelAudioTrackArgs{...} }
type ChannelAudioTrackArrayInput interface {
	pulumi.Input

	ToChannelAudioTrackArrayOutput() ChannelAudioTrackArrayOutput
	ToChannelAudioTrackArrayOutputWithContext(context.Context) ChannelAudioTrackArrayOutput
}

type ChannelAudioTrackArray []ChannelAudioTrackInput

func (ChannelAudioTrackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioTrack)(nil)).Elem()
}

func (i ChannelAudioTrackArray) ToChannelAudioTrackArrayOutput() ChannelAudioTrackArrayOutput {
	return i.ToChannelAudioTrackArrayOutputWithContext(context.Background())
}

func (i ChannelAudioTrackArray) ToChannelAudioTrackArrayOutputWithContext(ctx context.Context) ChannelAudioTrackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioTrackArrayOutput)
}

type ChannelAudioTrackOutput struct{ *pulumi.OutputState }

func (ChannelAudioTrackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioTrack)(nil)).Elem()
}

func (o ChannelAudioTrackOutput) ToChannelAudioTrackOutput() ChannelAudioTrackOutput {
	return o
}

func (o ChannelAudioTrackOutput) ToChannelAudioTrackOutputWithContext(ctx context.Context) ChannelAudioTrackOutput {
	return o
}

func (o ChannelAudioTrackOutput) Track() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAudioTrack) *int { return v.Track }).(pulumi.IntPtrOutput)
}

type ChannelAudioTrackArrayOutput struct{ *pulumi.OutputState }

func (ChannelAudioTrackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelAudioTrack)(nil)).Elem()
}

func (o ChannelAudioTrackArrayOutput) ToChannelAudioTrackArrayOutput() ChannelAudioTrackArrayOutput {
	return o
}

func (o ChannelAudioTrackArrayOutput) ToChannelAudioTrackArrayOutputWithContext(ctx context.Context) ChannelAudioTrackArrayOutput {
	return o
}

func (o ChannelAudioTrackArrayOutput) Index(i pulumi.IntInput) ChannelAudioTrackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelAudioTrack {
		return vs[0].([]ChannelAudioTrack)[vs[1].(int)]
	}).(ChannelAudioTrackOutput)
}

type ChannelAudioTrackSelection struct {
	Tracks []ChannelAudioTrack `pulumi:"tracks"`
}

// ChannelAudioTrackSelectionInput is an input type that accepts ChannelAudioTrackSelectionArgs and ChannelAudioTrackSelectionOutput values.
// You can construct a concrete instance of `ChannelAudioTrackSelectionInput` via:
//
//          ChannelAudioTrackSelectionArgs{...}
type ChannelAudioTrackSelectionInput interface {
	pulumi.Input

	ToChannelAudioTrackSelectionOutput() ChannelAudioTrackSelectionOutput
	ToChannelAudioTrackSelectionOutputWithContext(context.Context) ChannelAudioTrackSelectionOutput
}

type ChannelAudioTrackSelectionArgs struct {
	Tracks ChannelAudioTrackArrayInput `pulumi:"tracks"`
}

func (ChannelAudioTrackSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioTrackSelection)(nil)).Elem()
}

func (i ChannelAudioTrackSelectionArgs) ToChannelAudioTrackSelectionOutput() ChannelAudioTrackSelectionOutput {
	return i.ToChannelAudioTrackSelectionOutputWithContext(context.Background())
}

func (i ChannelAudioTrackSelectionArgs) ToChannelAudioTrackSelectionOutputWithContext(ctx context.Context) ChannelAudioTrackSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioTrackSelectionOutput)
}

func (i ChannelAudioTrackSelectionArgs) ToChannelAudioTrackSelectionPtrOutput() ChannelAudioTrackSelectionPtrOutput {
	return i.ToChannelAudioTrackSelectionPtrOutputWithContext(context.Background())
}

func (i ChannelAudioTrackSelectionArgs) ToChannelAudioTrackSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioTrackSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioTrackSelectionOutput).ToChannelAudioTrackSelectionPtrOutputWithContext(ctx)
}

// ChannelAudioTrackSelectionPtrInput is an input type that accepts ChannelAudioTrackSelectionArgs, ChannelAudioTrackSelectionPtr and ChannelAudioTrackSelectionPtrOutput values.
// You can construct a concrete instance of `ChannelAudioTrackSelectionPtrInput` via:
//
//          ChannelAudioTrackSelectionArgs{...}
//
//  or:
//
//          nil
type ChannelAudioTrackSelectionPtrInput interface {
	pulumi.Input

	ToChannelAudioTrackSelectionPtrOutput() ChannelAudioTrackSelectionPtrOutput
	ToChannelAudioTrackSelectionPtrOutputWithContext(context.Context) ChannelAudioTrackSelectionPtrOutput
}

type channelAudioTrackSelectionPtrType ChannelAudioTrackSelectionArgs

func ChannelAudioTrackSelectionPtr(v *ChannelAudioTrackSelectionArgs) ChannelAudioTrackSelectionPtrInput {
	return (*channelAudioTrackSelectionPtrType)(v)
}

func (*channelAudioTrackSelectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioTrackSelection)(nil)).Elem()
}

func (i *channelAudioTrackSelectionPtrType) ToChannelAudioTrackSelectionPtrOutput() ChannelAudioTrackSelectionPtrOutput {
	return i.ToChannelAudioTrackSelectionPtrOutputWithContext(context.Background())
}

func (i *channelAudioTrackSelectionPtrType) ToChannelAudioTrackSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioTrackSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAudioTrackSelectionPtrOutput)
}

type ChannelAudioTrackSelectionOutput struct{ *pulumi.OutputState }

func (ChannelAudioTrackSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAudioTrackSelection)(nil)).Elem()
}

func (o ChannelAudioTrackSelectionOutput) ToChannelAudioTrackSelectionOutput() ChannelAudioTrackSelectionOutput {
	return o
}

func (o ChannelAudioTrackSelectionOutput) ToChannelAudioTrackSelectionOutputWithContext(ctx context.Context) ChannelAudioTrackSelectionOutput {
	return o
}

func (o ChannelAudioTrackSelectionOutput) ToChannelAudioTrackSelectionPtrOutput() ChannelAudioTrackSelectionPtrOutput {
	return o.ToChannelAudioTrackSelectionPtrOutputWithContext(context.Background())
}

func (o ChannelAudioTrackSelectionOutput) ToChannelAudioTrackSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioTrackSelectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAudioTrackSelection) *ChannelAudioTrackSelection {
		return &v
	}).(ChannelAudioTrackSelectionPtrOutput)
}

func (o ChannelAudioTrackSelectionOutput) Tracks() ChannelAudioTrackArrayOutput {
	return o.ApplyT(func(v ChannelAudioTrackSelection) []ChannelAudioTrack { return v.Tracks }).(ChannelAudioTrackArrayOutput)
}

type ChannelAudioTrackSelectionPtrOutput struct{ *pulumi.OutputState }

func (ChannelAudioTrackSelectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAudioTrackSelection)(nil)).Elem()
}

func (o ChannelAudioTrackSelectionPtrOutput) ToChannelAudioTrackSelectionPtrOutput() ChannelAudioTrackSelectionPtrOutput {
	return o
}

func (o ChannelAudioTrackSelectionPtrOutput) ToChannelAudioTrackSelectionPtrOutputWithContext(ctx context.Context) ChannelAudioTrackSelectionPtrOutput {
	return o
}

func (o ChannelAudioTrackSelectionPtrOutput) Elem() ChannelAudioTrackSelectionOutput {
	return o.ApplyT(func(v *ChannelAudioTrackSelection) ChannelAudioTrackSelection {
		if v != nil {
			return *v
		}
		var ret ChannelAudioTrackSelection
		return ret
	}).(ChannelAudioTrackSelectionOutput)
}

func (o ChannelAudioTrackSelectionPtrOutput) Tracks() ChannelAudioTrackArrayOutput {
	return o.ApplyT(func(v *ChannelAudioTrackSelection) []ChannelAudioTrack {
		if v == nil {
			return nil
		}
		return v.Tracks
	}).(ChannelAudioTrackArrayOutput)
}

type ChannelAutomaticInputFailoverSettings struct {
	ErrorClearTimeMsec *int                       `pulumi:"errorClearTimeMsec"`
	FailoverConditions []ChannelFailoverCondition `pulumi:"failoverConditions"`
	InputPreference    *string                    `pulumi:"inputPreference"`
	SecondaryInputId   *string                    `pulumi:"secondaryInputId"`
}

// ChannelAutomaticInputFailoverSettingsInput is an input type that accepts ChannelAutomaticInputFailoverSettingsArgs and ChannelAutomaticInputFailoverSettingsOutput values.
// You can construct a concrete instance of `ChannelAutomaticInputFailoverSettingsInput` via:
//
//          ChannelAutomaticInputFailoverSettingsArgs{...}
type ChannelAutomaticInputFailoverSettingsInput interface {
	pulumi.Input

	ToChannelAutomaticInputFailoverSettingsOutput() ChannelAutomaticInputFailoverSettingsOutput
	ToChannelAutomaticInputFailoverSettingsOutputWithContext(context.Context) ChannelAutomaticInputFailoverSettingsOutput
}

type ChannelAutomaticInputFailoverSettingsArgs struct {
	ErrorClearTimeMsec pulumi.IntPtrInput                 `pulumi:"errorClearTimeMsec"`
	FailoverConditions ChannelFailoverConditionArrayInput `pulumi:"failoverConditions"`
	InputPreference    pulumi.StringPtrInput              `pulumi:"inputPreference"`
	SecondaryInputId   pulumi.StringPtrInput              `pulumi:"secondaryInputId"`
}

func (ChannelAutomaticInputFailoverSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAutomaticInputFailoverSettings)(nil)).Elem()
}

func (i ChannelAutomaticInputFailoverSettingsArgs) ToChannelAutomaticInputFailoverSettingsOutput() ChannelAutomaticInputFailoverSettingsOutput {
	return i.ToChannelAutomaticInputFailoverSettingsOutputWithContext(context.Background())
}

func (i ChannelAutomaticInputFailoverSettingsArgs) ToChannelAutomaticInputFailoverSettingsOutputWithContext(ctx context.Context) ChannelAutomaticInputFailoverSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAutomaticInputFailoverSettingsOutput)
}

func (i ChannelAutomaticInputFailoverSettingsArgs) ToChannelAutomaticInputFailoverSettingsPtrOutput() ChannelAutomaticInputFailoverSettingsPtrOutput {
	return i.ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAutomaticInputFailoverSettingsArgs) ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAutomaticInputFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAutomaticInputFailoverSettingsOutput).ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(ctx)
}

// ChannelAutomaticInputFailoverSettingsPtrInput is an input type that accepts ChannelAutomaticInputFailoverSettingsArgs, ChannelAutomaticInputFailoverSettingsPtr and ChannelAutomaticInputFailoverSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAutomaticInputFailoverSettingsPtrInput` via:
//
//          ChannelAutomaticInputFailoverSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAutomaticInputFailoverSettingsPtrInput interface {
	pulumi.Input

	ToChannelAutomaticInputFailoverSettingsPtrOutput() ChannelAutomaticInputFailoverSettingsPtrOutput
	ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(context.Context) ChannelAutomaticInputFailoverSettingsPtrOutput
}

type channelAutomaticInputFailoverSettingsPtrType ChannelAutomaticInputFailoverSettingsArgs

func ChannelAutomaticInputFailoverSettingsPtr(v *ChannelAutomaticInputFailoverSettingsArgs) ChannelAutomaticInputFailoverSettingsPtrInput {
	return (*channelAutomaticInputFailoverSettingsPtrType)(v)
}

func (*channelAutomaticInputFailoverSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAutomaticInputFailoverSettings)(nil)).Elem()
}

func (i *channelAutomaticInputFailoverSettingsPtrType) ToChannelAutomaticInputFailoverSettingsPtrOutput() ChannelAutomaticInputFailoverSettingsPtrOutput {
	return i.ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAutomaticInputFailoverSettingsPtrType) ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAutomaticInputFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAutomaticInputFailoverSettingsPtrOutput)
}

type ChannelAutomaticInputFailoverSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAutomaticInputFailoverSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAutomaticInputFailoverSettings)(nil)).Elem()
}

func (o ChannelAutomaticInputFailoverSettingsOutput) ToChannelAutomaticInputFailoverSettingsOutput() ChannelAutomaticInputFailoverSettingsOutput {
	return o
}

func (o ChannelAutomaticInputFailoverSettingsOutput) ToChannelAutomaticInputFailoverSettingsOutputWithContext(ctx context.Context) ChannelAutomaticInputFailoverSettingsOutput {
	return o
}

func (o ChannelAutomaticInputFailoverSettingsOutput) ToChannelAutomaticInputFailoverSettingsPtrOutput() ChannelAutomaticInputFailoverSettingsPtrOutput {
	return o.ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAutomaticInputFailoverSettingsOutput) ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAutomaticInputFailoverSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAutomaticInputFailoverSettings) *ChannelAutomaticInputFailoverSettings {
		return &v
	}).(ChannelAutomaticInputFailoverSettingsPtrOutput)
}

func (o ChannelAutomaticInputFailoverSettingsOutput) ErrorClearTimeMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelAutomaticInputFailoverSettings) *int { return v.ErrorClearTimeMsec }).(pulumi.IntPtrOutput)
}

func (o ChannelAutomaticInputFailoverSettingsOutput) FailoverConditions() ChannelFailoverConditionArrayOutput {
	return o.ApplyT(func(v ChannelAutomaticInputFailoverSettings) []ChannelFailoverCondition { return v.FailoverConditions }).(ChannelFailoverConditionArrayOutput)
}

func (o ChannelAutomaticInputFailoverSettingsOutput) InputPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAutomaticInputFailoverSettings) *string { return v.InputPreference }).(pulumi.StringPtrOutput)
}

func (o ChannelAutomaticInputFailoverSettingsOutput) SecondaryInputId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAutomaticInputFailoverSettings) *string { return v.SecondaryInputId }).(pulumi.StringPtrOutput)
}

type ChannelAutomaticInputFailoverSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAutomaticInputFailoverSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAutomaticInputFailoverSettings)(nil)).Elem()
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) ToChannelAutomaticInputFailoverSettingsPtrOutput() ChannelAutomaticInputFailoverSettingsPtrOutput {
	return o
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) ToChannelAutomaticInputFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelAutomaticInputFailoverSettingsPtrOutput {
	return o
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) Elem() ChannelAutomaticInputFailoverSettingsOutput {
	return o.ApplyT(func(v *ChannelAutomaticInputFailoverSettings) ChannelAutomaticInputFailoverSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAutomaticInputFailoverSettings
		return ret
	}).(ChannelAutomaticInputFailoverSettingsOutput)
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) ErrorClearTimeMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelAutomaticInputFailoverSettings) *int {
		if v == nil {
			return nil
		}
		return v.ErrorClearTimeMsec
	}).(pulumi.IntPtrOutput)
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) FailoverConditions() ChannelFailoverConditionArrayOutput {
	return o.ApplyT(func(v *ChannelAutomaticInputFailoverSettings) []ChannelFailoverCondition {
		if v == nil {
			return nil
		}
		return v.FailoverConditions
	}).(ChannelFailoverConditionArrayOutput)
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) InputPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAutomaticInputFailoverSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputPreference
	}).(pulumi.StringPtrOutput)
}

func (o ChannelAutomaticInputFailoverSettingsPtrOutput) SecondaryInputId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAutomaticInputFailoverSettings) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryInputId
	}).(pulumi.StringPtrOutput)
}

type ChannelAvailBlanking struct {
	AvailBlankingImage *ChannelInputLocation `pulumi:"availBlankingImage"`
	State              *string               `pulumi:"state"`
}

// ChannelAvailBlankingInput is an input type that accepts ChannelAvailBlankingArgs and ChannelAvailBlankingOutput values.
// You can construct a concrete instance of `ChannelAvailBlankingInput` via:
//
//          ChannelAvailBlankingArgs{...}
type ChannelAvailBlankingInput interface {
	pulumi.Input

	ToChannelAvailBlankingOutput() ChannelAvailBlankingOutput
	ToChannelAvailBlankingOutputWithContext(context.Context) ChannelAvailBlankingOutput
}

type ChannelAvailBlankingArgs struct {
	AvailBlankingImage ChannelInputLocationPtrInput `pulumi:"availBlankingImage"`
	State              pulumi.StringPtrInput        `pulumi:"state"`
}

func (ChannelAvailBlankingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAvailBlanking)(nil)).Elem()
}

func (i ChannelAvailBlankingArgs) ToChannelAvailBlankingOutput() ChannelAvailBlankingOutput {
	return i.ToChannelAvailBlankingOutputWithContext(context.Background())
}

func (i ChannelAvailBlankingArgs) ToChannelAvailBlankingOutputWithContext(ctx context.Context) ChannelAvailBlankingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailBlankingOutput)
}

func (i ChannelAvailBlankingArgs) ToChannelAvailBlankingPtrOutput() ChannelAvailBlankingPtrOutput {
	return i.ToChannelAvailBlankingPtrOutputWithContext(context.Background())
}

func (i ChannelAvailBlankingArgs) ToChannelAvailBlankingPtrOutputWithContext(ctx context.Context) ChannelAvailBlankingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailBlankingOutput).ToChannelAvailBlankingPtrOutputWithContext(ctx)
}

// ChannelAvailBlankingPtrInput is an input type that accepts ChannelAvailBlankingArgs, ChannelAvailBlankingPtr and ChannelAvailBlankingPtrOutput values.
// You can construct a concrete instance of `ChannelAvailBlankingPtrInput` via:
//
//          ChannelAvailBlankingArgs{...}
//
//  or:
//
//          nil
type ChannelAvailBlankingPtrInput interface {
	pulumi.Input

	ToChannelAvailBlankingPtrOutput() ChannelAvailBlankingPtrOutput
	ToChannelAvailBlankingPtrOutputWithContext(context.Context) ChannelAvailBlankingPtrOutput
}

type channelAvailBlankingPtrType ChannelAvailBlankingArgs

func ChannelAvailBlankingPtr(v *ChannelAvailBlankingArgs) ChannelAvailBlankingPtrInput {
	return (*channelAvailBlankingPtrType)(v)
}

func (*channelAvailBlankingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAvailBlanking)(nil)).Elem()
}

func (i *channelAvailBlankingPtrType) ToChannelAvailBlankingPtrOutput() ChannelAvailBlankingPtrOutput {
	return i.ToChannelAvailBlankingPtrOutputWithContext(context.Background())
}

func (i *channelAvailBlankingPtrType) ToChannelAvailBlankingPtrOutputWithContext(ctx context.Context) ChannelAvailBlankingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailBlankingPtrOutput)
}

type ChannelAvailBlankingOutput struct{ *pulumi.OutputState }

func (ChannelAvailBlankingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAvailBlanking)(nil)).Elem()
}

func (o ChannelAvailBlankingOutput) ToChannelAvailBlankingOutput() ChannelAvailBlankingOutput {
	return o
}

func (o ChannelAvailBlankingOutput) ToChannelAvailBlankingOutputWithContext(ctx context.Context) ChannelAvailBlankingOutput {
	return o
}

func (o ChannelAvailBlankingOutput) ToChannelAvailBlankingPtrOutput() ChannelAvailBlankingPtrOutput {
	return o.ToChannelAvailBlankingPtrOutputWithContext(context.Background())
}

func (o ChannelAvailBlankingOutput) ToChannelAvailBlankingPtrOutputWithContext(ctx context.Context) ChannelAvailBlankingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAvailBlanking) *ChannelAvailBlanking {
		return &v
	}).(ChannelAvailBlankingPtrOutput)
}

func (o ChannelAvailBlankingOutput) AvailBlankingImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelAvailBlanking) *ChannelInputLocation { return v.AvailBlankingImage }).(ChannelInputLocationPtrOutput)
}

func (o ChannelAvailBlankingOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelAvailBlanking) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ChannelAvailBlankingPtrOutput struct{ *pulumi.OutputState }

func (ChannelAvailBlankingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAvailBlanking)(nil)).Elem()
}

func (o ChannelAvailBlankingPtrOutput) ToChannelAvailBlankingPtrOutput() ChannelAvailBlankingPtrOutput {
	return o
}

func (o ChannelAvailBlankingPtrOutput) ToChannelAvailBlankingPtrOutputWithContext(ctx context.Context) ChannelAvailBlankingPtrOutput {
	return o
}

func (o ChannelAvailBlankingPtrOutput) Elem() ChannelAvailBlankingOutput {
	return o.ApplyT(func(v *ChannelAvailBlanking) ChannelAvailBlanking {
		if v != nil {
			return *v
		}
		var ret ChannelAvailBlanking
		return ret
	}).(ChannelAvailBlankingOutput)
}

func (o ChannelAvailBlankingPtrOutput) AvailBlankingImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelAvailBlanking) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.AvailBlankingImage
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelAvailBlankingPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelAvailBlanking) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type ChannelAvailConfiguration struct {
	AvailSettings *ChannelAvailSettings `pulumi:"availSettings"`
}

// ChannelAvailConfigurationInput is an input type that accepts ChannelAvailConfigurationArgs and ChannelAvailConfigurationOutput values.
// You can construct a concrete instance of `ChannelAvailConfigurationInput` via:
//
//          ChannelAvailConfigurationArgs{...}
type ChannelAvailConfigurationInput interface {
	pulumi.Input

	ToChannelAvailConfigurationOutput() ChannelAvailConfigurationOutput
	ToChannelAvailConfigurationOutputWithContext(context.Context) ChannelAvailConfigurationOutput
}

type ChannelAvailConfigurationArgs struct {
	AvailSettings ChannelAvailSettingsPtrInput `pulumi:"availSettings"`
}

func (ChannelAvailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAvailConfiguration)(nil)).Elem()
}

func (i ChannelAvailConfigurationArgs) ToChannelAvailConfigurationOutput() ChannelAvailConfigurationOutput {
	return i.ToChannelAvailConfigurationOutputWithContext(context.Background())
}

func (i ChannelAvailConfigurationArgs) ToChannelAvailConfigurationOutputWithContext(ctx context.Context) ChannelAvailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailConfigurationOutput)
}

func (i ChannelAvailConfigurationArgs) ToChannelAvailConfigurationPtrOutput() ChannelAvailConfigurationPtrOutput {
	return i.ToChannelAvailConfigurationPtrOutputWithContext(context.Background())
}

func (i ChannelAvailConfigurationArgs) ToChannelAvailConfigurationPtrOutputWithContext(ctx context.Context) ChannelAvailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailConfigurationOutput).ToChannelAvailConfigurationPtrOutputWithContext(ctx)
}

// ChannelAvailConfigurationPtrInput is an input type that accepts ChannelAvailConfigurationArgs, ChannelAvailConfigurationPtr and ChannelAvailConfigurationPtrOutput values.
// You can construct a concrete instance of `ChannelAvailConfigurationPtrInput` via:
//
//          ChannelAvailConfigurationArgs{...}
//
//  or:
//
//          nil
type ChannelAvailConfigurationPtrInput interface {
	pulumi.Input

	ToChannelAvailConfigurationPtrOutput() ChannelAvailConfigurationPtrOutput
	ToChannelAvailConfigurationPtrOutputWithContext(context.Context) ChannelAvailConfigurationPtrOutput
}

type channelAvailConfigurationPtrType ChannelAvailConfigurationArgs

func ChannelAvailConfigurationPtr(v *ChannelAvailConfigurationArgs) ChannelAvailConfigurationPtrInput {
	return (*channelAvailConfigurationPtrType)(v)
}

func (*channelAvailConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAvailConfiguration)(nil)).Elem()
}

func (i *channelAvailConfigurationPtrType) ToChannelAvailConfigurationPtrOutput() ChannelAvailConfigurationPtrOutput {
	return i.ToChannelAvailConfigurationPtrOutputWithContext(context.Background())
}

func (i *channelAvailConfigurationPtrType) ToChannelAvailConfigurationPtrOutputWithContext(ctx context.Context) ChannelAvailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailConfigurationPtrOutput)
}

type ChannelAvailConfigurationOutput struct{ *pulumi.OutputState }

func (ChannelAvailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAvailConfiguration)(nil)).Elem()
}

func (o ChannelAvailConfigurationOutput) ToChannelAvailConfigurationOutput() ChannelAvailConfigurationOutput {
	return o
}

func (o ChannelAvailConfigurationOutput) ToChannelAvailConfigurationOutputWithContext(ctx context.Context) ChannelAvailConfigurationOutput {
	return o
}

func (o ChannelAvailConfigurationOutput) ToChannelAvailConfigurationPtrOutput() ChannelAvailConfigurationPtrOutput {
	return o.ToChannelAvailConfigurationPtrOutputWithContext(context.Background())
}

func (o ChannelAvailConfigurationOutput) ToChannelAvailConfigurationPtrOutputWithContext(ctx context.Context) ChannelAvailConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAvailConfiguration) *ChannelAvailConfiguration {
		return &v
	}).(ChannelAvailConfigurationPtrOutput)
}

func (o ChannelAvailConfigurationOutput) AvailSettings() ChannelAvailSettingsPtrOutput {
	return o.ApplyT(func(v ChannelAvailConfiguration) *ChannelAvailSettings { return v.AvailSettings }).(ChannelAvailSettingsPtrOutput)
}

type ChannelAvailConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ChannelAvailConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAvailConfiguration)(nil)).Elem()
}

func (o ChannelAvailConfigurationPtrOutput) ToChannelAvailConfigurationPtrOutput() ChannelAvailConfigurationPtrOutput {
	return o
}

func (o ChannelAvailConfigurationPtrOutput) ToChannelAvailConfigurationPtrOutputWithContext(ctx context.Context) ChannelAvailConfigurationPtrOutput {
	return o
}

func (o ChannelAvailConfigurationPtrOutput) Elem() ChannelAvailConfigurationOutput {
	return o.ApplyT(func(v *ChannelAvailConfiguration) ChannelAvailConfiguration {
		if v != nil {
			return *v
		}
		var ret ChannelAvailConfiguration
		return ret
	}).(ChannelAvailConfigurationOutput)
}

func (o ChannelAvailConfigurationPtrOutput) AvailSettings() ChannelAvailSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelAvailConfiguration) *ChannelAvailSettings {
		if v == nil {
			return nil
		}
		return v.AvailSettings
	}).(ChannelAvailSettingsPtrOutput)
}

type ChannelAvailSettings struct {
	Scte35SpliceInsert   *ChannelScte35SpliceInsert   `pulumi:"scte35SpliceInsert"`
	Scte35TimeSignalApos *ChannelScte35TimeSignalApos `pulumi:"scte35TimeSignalApos"`
}

// ChannelAvailSettingsInput is an input type that accepts ChannelAvailSettingsArgs and ChannelAvailSettingsOutput values.
// You can construct a concrete instance of `ChannelAvailSettingsInput` via:
//
//          ChannelAvailSettingsArgs{...}
type ChannelAvailSettingsInput interface {
	pulumi.Input

	ToChannelAvailSettingsOutput() ChannelAvailSettingsOutput
	ToChannelAvailSettingsOutputWithContext(context.Context) ChannelAvailSettingsOutput
}

type ChannelAvailSettingsArgs struct {
	Scte35SpliceInsert   ChannelScte35SpliceInsertPtrInput   `pulumi:"scte35SpliceInsert"`
	Scte35TimeSignalApos ChannelScte35TimeSignalAposPtrInput `pulumi:"scte35TimeSignalApos"`
}

func (ChannelAvailSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAvailSettings)(nil)).Elem()
}

func (i ChannelAvailSettingsArgs) ToChannelAvailSettingsOutput() ChannelAvailSettingsOutput {
	return i.ToChannelAvailSettingsOutputWithContext(context.Background())
}

func (i ChannelAvailSettingsArgs) ToChannelAvailSettingsOutputWithContext(ctx context.Context) ChannelAvailSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailSettingsOutput)
}

func (i ChannelAvailSettingsArgs) ToChannelAvailSettingsPtrOutput() ChannelAvailSettingsPtrOutput {
	return i.ToChannelAvailSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelAvailSettingsArgs) ToChannelAvailSettingsPtrOutputWithContext(ctx context.Context) ChannelAvailSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailSettingsOutput).ToChannelAvailSettingsPtrOutputWithContext(ctx)
}

// ChannelAvailSettingsPtrInput is an input type that accepts ChannelAvailSettingsArgs, ChannelAvailSettingsPtr and ChannelAvailSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelAvailSettingsPtrInput` via:
//
//          ChannelAvailSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelAvailSettingsPtrInput interface {
	pulumi.Input

	ToChannelAvailSettingsPtrOutput() ChannelAvailSettingsPtrOutput
	ToChannelAvailSettingsPtrOutputWithContext(context.Context) ChannelAvailSettingsPtrOutput
}

type channelAvailSettingsPtrType ChannelAvailSettingsArgs

func ChannelAvailSettingsPtr(v *ChannelAvailSettingsArgs) ChannelAvailSettingsPtrInput {
	return (*channelAvailSettingsPtrType)(v)
}

func (*channelAvailSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAvailSettings)(nil)).Elem()
}

func (i *channelAvailSettingsPtrType) ToChannelAvailSettingsPtrOutput() ChannelAvailSettingsPtrOutput {
	return i.ToChannelAvailSettingsPtrOutputWithContext(context.Background())
}

func (i *channelAvailSettingsPtrType) ToChannelAvailSettingsPtrOutputWithContext(ctx context.Context) ChannelAvailSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelAvailSettingsPtrOutput)
}

type ChannelAvailSettingsOutput struct{ *pulumi.OutputState }

func (ChannelAvailSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelAvailSettings)(nil)).Elem()
}

func (o ChannelAvailSettingsOutput) ToChannelAvailSettingsOutput() ChannelAvailSettingsOutput {
	return o
}

func (o ChannelAvailSettingsOutput) ToChannelAvailSettingsOutputWithContext(ctx context.Context) ChannelAvailSettingsOutput {
	return o
}

func (o ChannelAvailSettingsOutput) ToChannelAvailSettingsPtrOutput() ChannelAvailSettingsPtrOutput {
	return o.ToChannelAvailSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelAvailSettingsOutput) ToChannelAvailSettingsPtrOutputWithContext(ctx context.Context) ChannelAvailSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelAvailSettings) *ChannelAvailSettings {
		return &v
	}).(ChannelAvailSettingsPtrOutput)
}

func (o ChannelAvailSettingsOutput) Scte35SpliceInsert() ChannelScte35SpliceInsertPtrOutput {
	return o.ApplyT(func(v ChannelAvailSettings) *ChannelScte35SpliceInsert { return v.Scte35SpliceInsert }).(ChannelScte35SpliceInsertPtrOutput)
}

func (o ChannelAvailSettingsOutput) Scte35TimeSignalApos() ChannelScte35TimeSignalAposPtrOutput {
	return o.ApplyT(func(v ChannelAvailSettings) *ChannelScte35TimeSignalApos { return v.Scte35TimeSignalApos }).(ChannelScte35TimeSignalAposPtrOutput)
}

type ChannelAvailSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelAvailSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelAvailSettings)(nil)).Elem()
}

func (o ChannelAvailSettingsPtrOutput) ToChannelAvailSettingsPtrOutput() ChannelAvailSettingsPtrOutput {
	return o
}

func (o ChannelAvailSettingsPtrOutput) ToChannelAvailSettingsPtrOutputWithContext(ctx context.Context) ChannelAvailSettingsPtrOutput {
	return o
}

func (o ChannelAvailSettingsPtrOutput) Elem() ChannelAvailSettingsOutput {
	return o.ApplyT(func(v *ChannelAvailSettings) ChannelAvailSettings {
		if v != nil {
			return *v
		}
		var ret ChannelAvailSettings
		return ret
	}).(ChannelAvailSettingsOutput)
}

func (o ChannelAvailSettingsPtrOutput) Scte35SpliceInsert() ChannelScte35SpliceInsertPtrOutput {
	return o.ApplyT(func(v *ChannelAvailSettings) *ChannelScte35SpliceInsert {
		if v == nil {
			return nil
		}
		return v.Scte35SpliceInsert
	}).(ChannelScte35SpliceInsertPtrOutput)
}

func (o ChannelAvailSettingsPtrOutput) Scte35TimeSignalApos() ChannelScte35TimeSignalAposPtrOutput {
	return o.ApplyT(func(v *ChannelAvailSettings) *ChannelScte35TimeSignalApos {
		if v == nil {
			return nil
		}
		return v.Scte35TimeSignalApos
	}).(ChannelScte35TimeSignalAposPtrOutput)
}

type ChannelBlackoutSlate struct {
	BlackoutSlateImage      *ChannelInputLocation `pulumi:"blackoutSlateImage"`
	NetworkEndBlackout      *string               `pulumi:"networkEndBlackout"`
	NetworkEndBlackoutImage *ChannelInputLocation `pulumi:"networkEndBlackoutImage"`
	NetworkId               *string               `pulumi:"networkId"`
	State                   *string               `pulumi:"state"`
}

// ChannelBlackoutSlateInput is an input type that accepts ChannelBlackoutSlateArgs and ChannelBlackoutSlateOutput values.
// You can construct a concrete instance of `ChannelBlackoutSlateInput` via:
//
//          ChannelBlackoutSlateArgs{...}
type ChannelBlackoutSlateInput interface {
	pulumi.Input

	ToChannelBlackoutSlateOutput() ChannelBlackoutSlateOutput
	ToChannelBlackoutSlateOutputWithContext(context.Context) ChannelBlackoutSlateOutput
}

type ChannelBlackoutSlateArgs struct {
	BlackoutSlateImage      ChannelInputLocationPtrInput `pulumi:"blackoutSlateImage"`
	NetworkEndBlackout      pulumi.StringPtrInput        `pulumi:"networkEndBlackout"`
	NetworkEndBlackoutImage ChannelInputLocationPtrInput `pulumi:"networkEndBlackoutImage"`
	NetworkId               pulumi.StringPtrInput        `pulumi:"networkId"`
	State                   pulumi.StringPtrInput        `pulumi:"state"`
}

func (ChannelBlackoutSlateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelBlackoutSlate)(nil)).Elem()
}

func (i ChannelBlackoutSlateArgs) ToChannelBlackoutSlateOutput() ChannelBlackoutSlateOutput {
	return i.ToChannelBlackoutSlateOutputWithContext(context.Background())
}

func (i ChannelBlackoutSlateArgs) ToChannelBlackoutSlateOutputWithContext(ctx context.Context) ChannelBlackoutSlateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelBlackoutSlateOutput)
}

func (i ChannelBlackoutSlateArgs) ToChannelBlackoutSlatePtrOutput() ChannelBlackoutSlatePtrOutput {
	return i.ToChannelBlackoutSlatePtrOutputWithContext(context.Background())
}

func (i ChannelBlackoutSlateArgs) ToChannelBlackoutSlatePtrOutputWithContext(ctx context.Context) ChannelBlackoutSlatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelBlackoutSlateOutput).ToChannelBlackoutSlatePtrOutputWithContext(ctx)
}

// ChannelBlackoutSlatePtrInput is an input type that accepts ChannelBlackoutSlateArgs, ChannelBlackoutSlatePtr and ChannelBlackoutSlatePtrOutput values.
// You can construct a concrete instance of `ChannelBlackoutSlatePtrInput` via:
//
//          ChannelBlackoutSlateArgs{...}
//
//  or:
//
//          nil
type ChannelBlackoutSlatePtrInput interface {
	pulumi.Input

	ToChannelBlackoutSlatePtrOutput() ChannelBlackoutSlatePtrOutput
	ToChannelBlackoutSlatePtrOutputWithContext(context.Context) ChannelBlackoutSlatePtrOutput
}

type channelBlackoutSlatePtrType ChannelBlackoutSlateArgs

func ChannelBlackoutSlatePtr(v *ChannelBlackoutSlateArgs) ChannelBlackoutSlatePtrInput {
	return (*channelBlackoutSlatePtrType)(v)
}

func (*channelBlackoutSlatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelBlackoutSlate)(nil)).Elem()
}

func (i *channelBlackoutSlatePtrType) ToChannelBlackoutSlatePtrOutput() ChannelBlackoutSlatePtrOutput {
	return i.ToChannelBlackoutSlatePtrOutputWithContext(context.Background())
}

func (i *channelBlackoutSlatePtrType) ToChannelBlackoutSlatePtrOutputWithContext(ctx context.Context) ChannelBlackoutSlatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelBlackoutSlatePtrOutput)
}

type ChannelBlackoutSlateOutput struct{ *pulumi.OutputState }

func (ChannelBlackoutSlateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelBlackoutSlate)(nil)).Elem()
}

func (o ChannelBlackoutSlateOutput) ToChannelBlackoutSlateOutput() ChannelBlackoutSlateOutput {
	return o
}

func (o ChannelBlackoutSlateOutput) ToChannelBlackoutSlateOutputWithContext(ctx context.Context) ChannelBlackoutSlateOutput {
	return o
}

func (o ChannelBlackoutSlateOutput) ToChannelBlackoutSlatePtrOutput() ChannelBlackoutSlatePtrOutput {
	return o.ToChannelBlackoutSlatePtrOutputWithContext(context.Background())
}

func (o ChannelBlackoutSlateOutput) ToChannelBlackoutSlatePtrOutputWithContext(ctx context.Context) ChannelBlackoutSlatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelBlackoutSlate) *ChannelBlackoutSlate {
		return &v
	}).(ChannelBlackoutSlatePtrOutput)
}

func (o ChannelBlackoutSlateOutput) BlackoutSlateImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelBlackoutSlate) *ChannelInputLocation { return v.BlackoutSlateImage }).(ChannelInputLocationPtrOutput)
}

func (o ChannelBlackoutSlateOutput) NetworkEndBlackout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBlackoutSlate) *string { return v.NetworkEndBlackout }).(pulumi.StringPtrOutput)
}

func (o ChannelBlackoutSlateOutput) NetworkEndBlackoutImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelBlackoutSlate) *ChannelInputLocation { return v.NetworkEndBlackoutImage }).(ChannelInputLocationPtrOutput)
}

func (o ChannelBlackoutSlateOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBlackoutSlate) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

func (o ChannelBlackoutSlateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBlackoutSlate) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ChannelBlackoutSlatePtrOutput struct{ *pulumi.OutputState }

func (ChannelBlackoutSlatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelBlackoutSlate)(nil)).Elem()
}

func (o ChannelBlackoutSlatePtrOutput) ToChannelBlackoutSlatePtrOutput() ChannelBlackoutSlatePtrOutput {
	return o
}

func (o ChannelBlackoutSlatePtrOutput) ToChannelBlackoutSlatePtrOutputWithContext(ctx context.Context) ChannelBlackoutSlatePtrOutput {
	return o
}

func (o ChannelBlackoutSlatePtrOutput) Elem() ChannelBlackoutSlateOutput {
	return o.ApplyT(func(v *ChannelBlackoutSlate) ChannelBlackoutSlate {
		if v != nil {
			return *v
		}
		var ret ChannelBlackoutSlate
		return ret
	}).(ChannelBlackoutSlateOutput)
}

func (o ChannelBlackoutSlatePtrOutput) BlackoutSlateImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelBlackoutSlate) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.BlackoutSlateImage
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelBlackoutSlatePtrOutput) NetworkEndBlackout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBlackoutSlate) *string {
		if v == nil {
			return nil
		}
		return v.NetworkEndBlackout
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBlackoutSlatePtrOutput) NetworkEndBlackoutImage() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelBlackoutSlate) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.NetworkEndBlackoutImage
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelBlackoutSlatePtrOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBlackoutSlate) *string {
		if v == nil {
			return nil
		}
		return v.NetworkId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBlackoutSlatePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBlackoutSlate) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type ChannelBurnInDestinationSettings struct {
	Alignment           *string               `pulumi:"alignment"`
	BackgroundColor     *string               `pulumi:"backgroundColor"`
	BackgroundOpacity   *int                  `pulumi:"backgroundOpacity"`
	Font                *ChannelInputLocation `pulumi:"font"`
	FontColor           *string               `pulumi:"fontColor"`
	FontOpacity         *int                  `pulumi:"fontOpacity"`
	FontResolution      *int                  `pulumi:"fontResolution"`
	FontSize            *string               `pulumi:"fontSize"`
	OutlineColor        *string               `pulumi:"outlineColor"`
	OutlineSize         *int                  `pulumi:"outlineSize"`
	ShadowColor         *string               `pulumi:"shadowColor"`
	ShadowOpacity       *int                  `pulumi:"shadowOpacity"`
	ShadowXOffset       *int                  `pulumi:"shadowXOffset"`
	ShadowYOffset       *int                  `pulumi:"shadowYOffset"`
	TeletextGridControl *string               `pulumi:"teletextGridControl"`
	XPosition           *int                  `pulumi:"xPosition"`
	YPosition           *int                  `pulumi:"yPosition"`
}

// ChannelBurnInDestinationSettingsInput is an input type that accepts ChannelBurnInDestinationSettingsArgs and ChannelBurnInDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelBurnInDestinationSettingsInput` via:
//
//          ChannelBurnInDestinationSettingsArgs{...}
type ChannelBurnInDestinationSettingsInput interface {
	pulumi.Input

	ToChannelBurnInDestinationSettingsOutput() ChannelBurnInDestinationSettingsOutput
	ToChannelBurnInDestinationSettingsOutputWithContext(context.Context) ChannelBurnInDestinationSettingsOutput
}

type ChannelBurnInDestinationSettingsArgs struct {
	Alignment           pulumi.StringPtrInput        `pulumi:"alignment"`
	BackgroundColor     pulumi.StringPtrInput        `pulumi:"backgroundColor"`
	BackgroundOpacity   pulumi.IntPtrInput           `pulumi:"backgroundOpacity"`
	Font                ChannelInputLocationPtrInput `pulumi:"font"`
	FontColor           pulumi.StringPtrInput        `pulumi:"fontColor"`
	FontOpacity         pulumi.IntPtrInput           `pulumi:"fontOpacity"`
	FontResolution      pulumi.IntPtrInput           `pulumi:"fontResolution"`
	FontSize            pulumi.StringPtrInput        `pulumi:"fontSize"`
	OutlineColor        pulumi.StringPtrInput        `pulumi:"outlineColor"`
	OutlineSize         pulumi.IntPtrInput           `pulumi:"outlineSize"`
	ShadowColor         pulumi.StringPtrInput        `pulumi:"shadowColor"`
	ShadowOpacity       pulumi.IntPtrInput           `pulumi:"shadowOpacity"`
	ShadowXOffset       pulumi.IntPtrInput           `pulumi:"shadowXOffset"`
	ShadowYOffset       pulumi.IntPtrInput           `pulumi:"shadowYOffset"`
	TeletextGridControl pulumi.StringPtrInput        `pulumi:"teletextGridControl"`
	XPosition           pulumi.IntPtrInput           `pulumi:"xPosition"`
	YPosition           pulumi.IntPtrInput           `pulumi:"yPosition"`
}

func (ChannelBurnInDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelBurnInDestinationSettings)(nil)).Elem()
}

func (i ChannelBurnInDestinationSettingsArgs) ToChannelBurnInDestinationSettingsOutput() ChannelBurnInDestinationSettingsOutput {
	return i.ToChannelBurnInDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelBurnInDestinationSettingsArgs) ToChannelBurnInDestinationSettingsOutputWithContext(ctx context.Context) ChannelBurnInDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelBurnInDestinationSettingsOutput)
}

func (i ChannelBurnInDestinationSettingsArgs) ToChannelBurnInDestinationSettingsPtrOutput() ChannelBurnInDestinationSettingsPtrOutput {
	return i.ToChannelBurnInDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelBurnInDestinationSettingsArgs) ToChannelBurnInDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelBurnInDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelBurnInDestinationSettingsOutput).ToChannelBurnInDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelBurnInDestinationSettingsPtrInput is an input type that accepts ChannelBurnInDestinationSettingsArgs, ChannelBurnInDestinationSettingsPtr and ChannelBurnInDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelBurnInDestinationSettingsPtrInput` via:
//
//          ChannelBurnInDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelBurnInDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelBurnInDestinationSettingsPtrOutput() ChannelBurnInDestinationSettingsPtrOutput
	ToChannelBurnInDestinationSettingsPtrOutputWithContext(context.Context) ChannelBurnInDestinationSettingsPtrOutput
}

type channelBurnInDestinationSettingsPtrType ChannelBurnInDestinationSettingsArgs

func ChannelBurnInDestinationSettingsPtr(v *ChannelBurnInDestinationSettingsArgs) ChannelBurnInDestinationSettingsPtrInput {
	return (*channelBurnInDestinationSettingsPtrType)(v)
}

func (*channelBurnInDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelBurnInDestinationSettings)(nil)).Elem()
}

func (i *channelBurnInDestinationSettingsPtrType) ToChannelBurnInDestinationSettingsPtrOutput() ChannelBurnInDestinationSettingsPtrOutput {
	return i.ToChannelBurnInDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelBurnInDestinationSettingsPtrType) ToChannelBurnInDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelBurnInDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelBurnInDestinationSettingsPtrOutput)
}

type ChannelBurnInDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelBurnInDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelBurnInDestinationSettings)(nil)).Elem()
}

func (o ChannelBurnInDestinationSettingsOutput) ToChannelBurnInDestinationSettingsOutput() ChannelBurnInDestinationSettingsOutput {
	return o
}

func (o ChannelBurnInDestinationSettingsOutput) ToChannelBurnInDestinationSettingsOutputWithContext(ctx context.Context) ChannelBurnInDestinationSettingsOutput {
	return o
}

func (o ChannelBurnInDestinationSettingsOutput) ToChannelBurnInDestinationSettingsPtrOutput() ChannelBurnInDestinationSettingsPtrOutput {
	return o.ToChannelBurnInDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelBurnInDestinationSettingsOutput) ToChannelBurnInDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelBurnInDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelBurnInDestinationSettings) *ChannelBurnInDestinationSettings {
		return &v
	}).(ChannelBurnInDestinationSettingsPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) Alignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.Alignment }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) BackgroundOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.BackgroundOpacity }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) Font() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *ChannelInputLocation { return v.Font }).(ChannelInputLocationPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) FontOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.FontOpacity }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) FontResolution() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.FontResolution }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.FontSize }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) OutlineColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.OutlineColor }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) OutlineSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.OutlineSize }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) ShadowColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.ShadowColor }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) ShadowOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.ShadowOpacity }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) ShadowXOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.ShadowXOffset }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) ShadowYOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.ShadowYOffset }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) TeletextGridControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *string { return v.TeletextGridControl }).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) XPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.XPosition }).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsOutput) YPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelBurnInDestinationSettings) *int { return v.YPosition }).(pulumi.IntPtrOutput)
}

type ChannelBurnInDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelBurnInDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelBurnInDestinationSettings)(nil)).Elem()
}

func (o ChannelBurnInDestinationSettingsPtrOutput) ToChannelBurnInDestinationSettingsPtrOutput() ChannelBurnInDestinationSettingsPtrOutput {
	return o
}

func (o ChannelBurnInDestinationSettingsPtrOutput) ToChannelBurnInDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelBurnInDestinationSettingsPtrOutput {
	return o
}

func (o ChannelBurnInDestinationSettingsPtrOutput) Elem() ChannelBurnInDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) ChannelBurnInDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelBurnInDestinationSettings
		return ret
	}).(ChannelBurnInDestinationSettingsOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) Alignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Alignment
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) BackgroundOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.BackgroundOpacity
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) Font() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.Font
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) FontOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.FontOpacity
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) FontResolution() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.FontResolution
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) OutlineColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.OutlineColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) OutlineSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.OutlineSize
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) ShadowColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.ShadowColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) ShadowOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.ShadowOpacity
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) ShadowXOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.ShadowXOffset
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) ShadowYOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.ShadowYOffset
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) TeletextGridControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.TeletextGridControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) XPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.XPosition
	}).(pulumi.IntPtrOutput)
}

func (o ChannelBurnInDestinationSettingsPtrOutput) YPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelBurnInDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.YPosition
	}).(pulumi.IntPtrOutput)
}

type ChannelCaptionDescription struct {
	CaptionSelectorName *string                            `pulumi:"captionSelectorName"`
	DestinationSettings *ChannelCaptionDestinationSettings `pulumi:"destinationSettings"`
	LanguageCode        *string                            `pulumi:"languageCode"`
	LanguageDescription *string                            `pulumi:"languageDescription"`
	Name                *string                            `pulumi:"name"`
}

// ChannelCaptionDescriptionInput is an input type that accepts ChannelCaptionDescriptionArgs and ChannelCaptionDescriptionOutput values.
// You can construct a concrete instance of `ChannelCaptionDescriptionInput` via:
//
//          ChannelCaptionDescriptionArgs{...}
type ChannelCaptionDescriptionInput interface {
	pulumi.Input

	ToChannelCaptionDescriptionOutput() ChannelCaptionDescriptionOutput
	ToChannelCaptionDescriptionOutputWithContext(context.Context) ChannelCaptionDescriptionOutput
}

type ChannelCaptionDescriptionArgs struct {
	CaptionSelectorName pulumi.StringPtrInput                     `pulumi:"captionSelectorName"`
	DestinationSettings ChannelCaptionDestinationSettingsPtrInput `pulumi:"destinationSettings"`
	LanguageCode        pulumi.StringPtrInput                     `pulumi:"languageCode"`
	LanguageDescription pulumi.StringPtrInput                     `pulumi:"languageDescription"`
	Name                pulumi.StringPtrInput                     `pulumi:"name"`
}

func (ChannelCaptionDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionDescription)(nil)).Elem()
}

func (i ChannelCaptionDescriptionArgs) ToChannelCaptionDescriptionOutput() ChannelCaptionDescriptionOutput {
	return i.ToChannelCaptionDescriptionOutputWithContext(context.Background())
}

func (i ChannelCaptionDescriptionArgs) ToChannelCaptionDescriptionOutputWithContext(ctx context.Context) ChannelCaptionDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionDescriptionOutput)
}

// ChannelCaptionDescriptionArrayInput is an input type that accepts ChannelCaptionDescriptionArray and ChannelCaptionDescriptionArrayOutput values.
// You can construct a concrete instance of `ChannelCaptionDescriptionArrayInput` via:
//
//          ChannelCaptionDescriptionArray{ ChannelCaptionDescriptionArgs{...} }
type ChannelCaptionDescriptionArrayInput interface {
	pulumi.Input

	ToChannelCaptionDescriptionArrayOutput() ChannelCaptionDescriptionArrayOutput
	ToChannelCaptionDescriptionArrayOutputWithContext(context.Context) ChannelCaptionDescriptionArrayOutput
}

type ChannelCaptionDescriptionArray []ChannelCaptionDescriptionInput

func (ChannelCaptionDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelCaptionDescription)(nil)).Elem()
}

func (i ChannelCaptionDescriptionArray) ToChannelCaptionDescriptionArrayOutput() ChannelCaptionDescriptionArrayOutput {
	return i.ToChannelCaptionDescriptionArrayOutputWithContext(context.Background())
}

func (i ChannelCaptionDescriptionArray) ToChannelCaptionDescriptionArrayOutputWithContext(ctx context.Context) ChannelCaptionDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionDescriptionArrayOutput)
}

type ChannelCaptionDescriptionOutput struct{ *pulumi.OutputState }

func (ChannelCaptionDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionDescription)(nil)).Elem()
}

func (o ChannelCaptionDescriptionOutput) ToChannelCaptionDescriptionOutput() ChannelCaptionDescriptionOutput {
	return o
}

func (o ChannelCaptionDescriptionOutput) ToChannelCaptionDescriptionOutputWithContext(ctx context.Context) ChannelCaptionDescriptionOutput {
	return o
}

func (o ChannelCaptionDescriptionOutput) CaptionSelectorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDescription) *string { return v.CaptionSelectorName }).(pulumi.StringPtrOutput)
}

func (o ChannelCaptionDescriptionOutput) DestinationSettings() ChannelCaptionDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDescription) *ChannelCaptionDestinationSettings { return v.DestinationSettings }).(ChannelCaptionDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDescriptionOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDescription) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

func (o ChannelCaptionDescriptionOutput) LanguageDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDescription) *string { return v.LanguageDescription }).(pulumi.StringPtrOutput)
}

func (o ChannelCaptionDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ChannelCaptionDescriptionArrayOutput struct{ *pulumi.OutputState }

func (ChannelCaptionDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelCaptionDescription)(nil)).Elem()
}

func (o ChannelCaptionDescriptionArrayOutput) ToChannelCaptionDescriptionArrayOutput() ChannelCaptionDescriptionArrayOutput {
	return o
}

func (o ChannelCaptionDescriptionArrayOutput) ToChannelCaptionDescriptionArrayOutputWithContext(ctx context.Context) ChannelCaptionDescriptionArrayOutput {
	return o
}

func (o ChannelCaptionDescriptionArrayOutput) Index(i pulumi.IntInput) ChannelCaptionDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelCaptionDescription {
		return vs[0].([]ChannelCaptionDescription)[vs[1].(int)]
	}).(ChannelCaptionDescriptionOutput)
}

type ChannelCaptionDestinationSettings struct {
	AribDestinationSettings               *ChannelAribDestinationSettings               `pulumi:"aribDestinationSettings"`
	BurnInDestinationSettings             *ChannelBurnInDestinationSettings             `pulumi:"burnInDestinationSettings"`
	DvbSubDestinationSettings             *ChannelDvbSubDestinationSettings             `pulumi:"dvbSubDestinationSettings"`
	EbuTtDDestinationSettings             *ChannelEbuTtDDestinationSettings             `pulumi:"ebuTtDDestinationSettings"`
	EmbeddedDestinationSettings           *ChannelEmbeddedDestinationSettings           `pulumi:"embeddedDestinationSettings"`
	EmbeddedPlusScte20DestinationSettings *ChannelEmbeddedPlusScte20DestinationSettings `pulumi:"embeddedPlusScte20DestinationSettings"`
	RtmpCaptionInfoDestinationSettings    *ChannelRtmpCaptionInfoDestinationSettings    `pulumi:"rtmpCaptionInfoDestinationSettings"`
	Scte20PlusEmbeddedDestinationSettings *ChannelScte20PlusEmbeddedDestinationSettings `pulumi:"scte20PlusEmbeddedDestinationSettings"`
	Scte27DestinationSettings             *ChannelScte27DestinationSettings             `pulumi:"scte27DestinationSettings"`
	SmpteTtDestinationSettings            *ChannelSmpteTtDestinationSettings            `pulumi:"smpteTtDestinationSettings"`
	TeletextDestinationSettings           *ChannelTeletextDestinationSettings           `pulumi:"teletextDestinationSettings"`
	TtmlDestinationSettings               *ChannelTtmlDestinationSettings               `pulumi:"ttmlDestinationSettings"`
	WebvttDestinationSettings             *ChannelWebvttDestinationSettings             `pulumi:"webvttDestinationSettings"`
}

// ChannelCaptionDestinationSettingsInput is an input type that accepts ChannelCaptionDestinationSettingsArgs and ChannelCaptionDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelCaptionDestinationSettingsInput` via:
//
//          ChannelCaptionDestinationSettingsArgs{...}
type ChannelCaptionDestinationSettingsInput interface {
	pulumi.Input

	ToChannelCaptionDestinationSettingsOutput() ChannelCaptionDestinationSettingsOutput
	ToChannelCaptionDestinationSettingsOutputWithContext(context.Context) ChannelCaptionDestinationSettingsOutput
}

type ChannelCaptionDestinationSettingsArgs struct {
	AribDestinationSettings               ChannelAribDestinationSettingsPtrInput               `pulumi:"aribDestinationSettings"`
	BurnInDestinationSettings             ChannelBurnInDestinationSettingsPtrInput             `pulumi:"burnInDestinationSettings"`
	DvbSubDestinationSettings             ChannelDvbSubDestinationSettingsPtrInput             `pulumi:"dvbSubDestinationSettings"`
	EbuTtDDestinationSettings             ChannelEbuTtDDestinationSettingsPtrInput             `pulumi:"ebuTtDDestinationSettings"`
	EmbeddedDestinationSettings           ChannelEmbeddedDestinationSettingsPtrInput           `pulumi:"embeddedDestinationSettings"`
	EmbeddedPlusScte20DestinationSettings ChannelEmbeddedPlusScte20DestinationSettingsPtrInput `pulumi:"embeddedPlusScte20DestinationSettings"`
	RtmpCaptionInfoDestinationSettings    ChannelRtmpCaptionInfoDestinationSettingsPtrInput    `pulumi:"rtmpCaptionInfoDestinationSettings"`
	Scte20PlusEmbeddedDestinationSettings ChannelScte20PlusEmbeddedDestinationSettingsPtrInput `pulumi:"scte20PlusEmbeddedDestinationSettings"`
	Scte27DestinationSettings             ChannelScte27DestinationSettingsPtrInput             `pulumi:"scte27DestinationSettings"`
	SmpteTtDestinationSettings            ChannelSmpteTtDestinationSettingsPtrInput            `pulumi:"smpteTtDestinationSettings"`
	TeletextDestinationSettings           ChannelTeletextDestinationSettingsPtrInput           `pulumi:"teletextDestinationSettings"`
	TtmlDestinationSettings               ChannelTtmlDestinationSettingsPtrInput               `pulumi:"ttmlDestinationSettings"`
	WebvttDestinationSettings             ChannelWebvttDestinationSettingsPtrInput             `pulumi:"webvttDestinationSettings"`
}

func (ChannelCaptionDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionDestinationSettings)(nil)).Elem()
}

func (i ChannelCaptionDestinationSettingsArgs) ToChannelCaptionDestinationSettingsOutput() ChannelCaptionDestinationSettingsOutput {
	return i.ToChannelCaptionDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelCaptionDestinationSettingsArgs) ToChannelCaptionDestinationSettingsOutputWithContext(ctx context.Context) ChannelCaptionDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionDestinationSettingsOutput)
}

func (i ChannelCaptionDestinationSettingsArgs) ToChannelCaptionDestinationSettingsPtrOutput() ChannelCaptionDestinationSettingsPtrOutput {
	return i.ToChannelCaptionDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelCaptionDestinationSettingsArgs) ToChannelCaptionDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionDestinationSettingsOutput).ToChannelCaptionDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelCaptionDestinationSettingsPtrInput is an input type that accepts ChannelCaptionDestinationSettingsArgs, ChannelCaptionDestinationSettingsPtr and ChannelCaptionDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelCaptionDestinationSettingsPtrInput` via:
//
//          ChannelCaptionDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelCaptionDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelCaptionDestinationSettingsPtrOutput() ChannelCaptionDestinationSettingsPtrOutput
	ToChannelCaptionDestinationSettingsPtrOutputWithContext(context.Context) ChannelCaptionDestinationSettingsPtrOutput
}

type channelCaptionDestinationSettingsPtrType ChannelCaptionDestinationSettingsArgs

func ChannelCaptionDestinationSettingsPtr(v *ChannelCaptionDestinationSettingsArgs) ChannelCaptionDestinationSettingsPtrInput {
	return (*channelCaptionDestinationSettingsPtrType)(v)
}

func (*channelCaptionDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCaptionDestinationSettings)(nil)).Elem()
}

func (i *channelCaptionDestinationSettingsPtrType) ToChannelCaptionDestinationSettingsPtrOutput() ChannelCaptionDestinationSettingsPtrOutput {
	return i.ToChannelCaptionDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelCaptionDestinationSettingsPtrType) ToChannelCaptionDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionDestinationSettingsPtrOutput)
}

type ChannelCaptionDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelCaptionDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionDestinationSettings)(nil)).Elem()
}

func (o ChannelCaptionDestinationSettingsOutput) ToChannelCaptionDestinationSettingsOutput() ChannelCaptionDestinationSettingsOutput {
	return o
}

func (o ChannelCaptionDestinationSettingsOutput) ToChannelCaptionDestinationSettingsOutputWithContext(ctx context.Context) ChannelCaptionDestinationSettingsOutput {
	return o
}

func (o ChannelCaptionDestinationSettingsOutput) ToChannelCaptionDestinationSettingsPtrOutput() ChannelCaptionDestinationSettingsPtrOutput {
	return o.ToChannelCaptionDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelCaptionDestinationSettingsOutput) ToChannelCaptionDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCaptionDestinationSettings) *ChannelCaptionDestinationSettings {
		return &v
	}).(ChannelCaptionDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) AribDestinationSettings() ChannelAribDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelAribDestinationSettings {
		return v.AribDestinationSettings
	}).(ChannelAribDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) BurnInDestinationSettings() ChannelBurnInDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelBurnInDestinationSettings {
		return v.BurnInDestinationSettings
	}).(ChannelBurnInDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) DvbSubDestinationSettings() ChannelDvbSubDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelDvbSubDestinationSettings {
		return v.DvbSubDestinationSettings
	}).(ChannelDvbSubDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) EbuTtDDestinationSettings() ChannelEbuTtDDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelEbuTtDDestinationSettings {
		return v.EbuTtDDestinationSettings
	}).(ChannelEbuTtDDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) EmbeddedDestinationSettings() ChannelEmbeddedDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelEmbeddedDestinationSettings {
		return v.EmbeddedDestinationSettings
	}).(ChannelEmbeddedDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) EmbeddedPlusScte20DestinationSettings() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelEmbeddedPlusScte20DestinationSettings {
		return v.EmbeddedPlusScte20DestinationSettings
	}).(ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) RtmpCaptionInfoDestinationSettings() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelRtmpCaptionInfoDestinationSettings {
		return v.RtmpCaptionInfoDestinationSettings
	}).(ChannelRtmpCaptionInfoDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) Scte20PlusEmbeddedDestinationSettings() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelScte20PlusEmbeddedDestinationSettings {
		return v.Scte20PlusEmbeddedDestinationSettings
	}).(ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) Scte27DestinationSettings() ChannelScte27DestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelScte27DestinationSettings {
		return v.Scte27DestinationSettings
	}).(ChannelScte27DestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) SmpteTtDestinationSettings() ChannelSmpteTtDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelSmpteTtDestinationSettings {
		return v.SmpteTtDestinationSettings
	}).(ChannelSmpteTtDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) TeletextDestinationSettings() ChannelTeletextDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelTeletextDestinationSettings {
		return v.TeletextDestinationSettings
	}).(ChannelTeletextDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) TtmlDestinationSettings() ChannelTtmlDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelTtmlDestinationSettings {
		return v.TtmlDestinationSettings
	}).(ChannelTtmlDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsOutput) WebvttDestinationSettings() ChannelWebvttDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionDestinationSettings) *ChannelWebvttDestinationSettings {
		return v.WebvttDestinationSettings
	}).(ChannelWebvttDestinationSettingsPtrOutput)
}

type ChannelCaptionDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelCaptionDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCaptionDestinationSettings)(nil)).Elem()
}

func (o ChannelCaptionDestinationSettingsPtrOutput) ToChannelCaptionDestinationSettingsPtrOutput() ChannelCaptionDestinationSettingsPtrOutput {
	return o
}

func (o ChannelCaptionDestinationSettingsPtrOutput) ToChannelCaptionDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionDestinationSettingsPtrOutput {
	return o
}

func (o ChannelCaptionDestinationSettingsPtrOutput) Elem() ChannelCaptionDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) ChannelCaptionDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelCaptionDestinationSettings
		return ret
	}).(ChannelCaptionDestinationSettingsOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) AribDestinationSettings() ChannelAribDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelAribDestinationSettings {
		if v == nil {
			return nil
		}
		return v.AribDestinationSettings
	}).(ChannelAribDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) BurnInDestinationSettings() ChannelBurnInDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelBurnInDestinationSettings {
		if v == nil {
			return nil
		}
		return v.BurnInDestinationSettings
	}).(ChannelBurnInDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) DvbSubDestinationSettings() ChannelDvbSubDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelDvbSubDestinationSettings {
		if v == nil {
			return nil
		}
		return v.DvbSubDestinationSettings
	}).(ChannelDvbSubDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) EbuTtDDestinationSettings() ChannelEbuTtDDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelEbuTtDDestinationSettings {
		if v == nil {
			return nil
		}
		return v.EbuTtDDestinationSettings
	}).(ChannelEbuTtDDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) EmbeddedDestinationSettings() ChannelEmbeddedDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelEmbeddedDestinationSettings {
		if v == nil {
			return nil
		}
		return v.EmbeddedDestinationSettings
	}).(ChannelEmbeddedDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) EmbeddedPlusScte20DestinationSettings() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelEmbeddedPlusScte20DestinationSettings {
		if v == nil {
			return nil
		}
		return v.EmbeddedPlusScte20DestinationSettings
	}).(ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) RtmpCaptionInfoDestinationSettings() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelRtmpCaptionInfoDestinationSettings {
		if v == nil {
			return nil
		}
		return v.RtmpCaptionInfoDestinationSettings
	}).(ChannelRtmpCaptionInfoDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) Scte20PlusEmbeddedDestinationSettings() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelScte20PlusEmbeddedDestinationSettings {
		if v == nil {
			return nil
		}
		return v.Scte20PlusEmbeddedDestinationSettings
	}).(ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) Scte27DestinationSettings() ChannelScte27DestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelScte27DestinationSettings {
		if v == nil {
			return nil
		}
		return v.Scte27DestinationSettings
	}).(ChannelScte27DestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) SmpteTtDestinationSettings() ChannelSmpteTtDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelSmpteTtDestinationSettings {
		if v == nil {
			return nil
		}
		return v.SmpteTtDestinationSettings
	}).(ChannelSmpteTtDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) TeletextDestinationSettings() ChannelTeletextDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelTeletextDestinationSettings {
		if v == nil {
			return nil
		}
		return v.TeletextDestinationSettings
	}).(ChannelTeletextDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) TtmlDestinationSettings() ChannelTtmlDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelTtmlDestinationSettings {
		if v == nil {
			return nil
		}
		return v.TtmlDestinationSettings
	}).(ChannelTtmlDestinationSettingsPtrOutput)
}

func (o ChannelCaptionDestinationSettingsPtrOutput) WebvttDestinationSettings() ChannelWebvttDestinationSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionDestinationSettings) *ChannelWebvttDestinationSettings {
		if v == nil {
			return nil
		}
		return v.WebvttDestinationSettings
	}).(ChannelWebvttDestinationSettingsPtrOutput)
}

type ChannelCaptionLanguageMapping struct {
	CaptionChannel      *int    `pulumi:"captionChannel"`
	LanguageCode        *string `pulumi:"languageCode"`
	LanguageDescription *string `pulumi:"languageDescription"`
}

// ChannelCaptionLanguageMappingInput is an input type that accepts ChannelCaptionLanguageMappingArgs and ChannelCaptionLanguageMappingOutput values.
// You can construct a concrete instance of `ChannelCaptionLanguageMappingInput` via:
//
//          ChannelCaptionLanguageMappingArgs{...}
type ChannelCaptionLanguageMappingInput interface {
	pulumi.Input

	ToChannelCaptionLanguageMappingOutput() ChannelCaptionLanguageMappingOutput
	ToChannelCaptionLanguageMappingOutputWithContext(context.Context) ChannelCaptionLanguageMappingOutput
}

type ChannelCaptionLanguageMappingArgs struct {
	CaptionChannel      pulumi.IntPtrInput    `pulumi:"captionChannel"`
	LanguageCode        pulumi.StringPtrInput `pulumi:"languageCode"`
	LanguageDescription pulumi.StringPtrInput `pulumi:"languageDescription"`
}

func (ChannelCaptionLanguageMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionLanguageMapping)(nil)).Elem()
}

func (i ChannelCaptionLanguageMappingArgs) ToChannelCaptionLanguageMappingOutput() ChannelCaptionLanguageMappingOutput {
	return i.ToChannelCaptionLanguageMappingOutputWithContext(context.Background())
}

func (i ChannelCaptionLanguageMappingArgs) ToChannelCaptionLanguageMappingOutputWithContext(ctx context.Context) ChannelCaptionLanguageMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionLanguageMappingOutput)
}

// ChannelCaptionLanguageMappingArrayInput is an input type that accepts ChannelCaptionLanguageMappingArray and ChannelCaptionLanguageMappingArrayOutput values.
// You can construct a concrete instance of `ChannelCaptionLanguageMappingArrayInput` via:
//
//          ChannelCaptionLanguageMappingArray{ ChannelCaptionLanguageMappingArgs{...} }
type ChannelCaptionLanguageMappingArrayInput interface {
	pulumi.Input

	ToChannelCaptionLanguageMappingArrayOutput() ChannelCaptionLanguageMappingArrayOutput
	ToChannelCaptionLanguageMappingArrayOutputWithContext(context.Context) ChannelCaptionLanguageMappingArrayOutput
}

type ChannelCaptionLanguageMappingArray []ChannelCaptionLanguageMappingInput

func (ChannelCaptionLanguageMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelCaptionLanguageMapping)(nil)).Elem()
}

func (i ChannelCaptionLanguageMappingArray) ToChannelCaptionLanguageMappingArrayOutput() ChannelCaptionLanguageMappingArrayOutput {
	return i.ToChannelCaptionLanguageMappingArrayOutputWithContext(context.Background())
}

func (i ChannelCaptionLanguageMappingArray) ToChannelCaptionLanguageMappingArrayOutputWithContext(ctx context.Context) ChannelCaptionLanguageMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionLanguageMappingArrayOutput)
}

type ChannelCaptionLanguageMappingOutput struct{ *pulumi.OutputState }

func (ChannelCaptionLanguageMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionLanguageMapping)(nil)).Elem()
}

func (o ChannelCaptionLanguageMappingOutput) ToChannelCaptionLanguageMappingOutput() ChannelCaptionLanguageMappingOutput {
	return o
}

func (o ChannelCaptionLanguageMappingOutput) ToChannelCaptionLanguageMappingOutputWithContext(ctx context.Context) ChannelCaptionLanguageMappingOutput {
	return o
}

func (o ChannelCaptionLanguageMappingOutput) CaptionChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelCaptionLanguageMapping) *int { return v.CaptionChannel }).(pulumi.IntPtrOutput)
}

func (o ChannelCaptionLanguageMappingOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionLanguageMapping) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

func (o ChannelCaptionLanguageMappingOutput) LanguageDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionLanguageMapping) *string { return v.LanguageDescription }).(pulumi.StringPtrOutput)
}

type ChannelCaptionLanguageMappingArrayOutput struct{ *pulumi.OutputState }

func (ChannelCaptionLanguageMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelCaptionLanguageMapping)(nil)).Elem()
}

func (o ChannelCaptionLanguageMappingArrayOutput) ToChannelCaptionLanguageMappingArrayOutput() ChannelCaptionLanguageMappingArrayOutput {
	return o
}

func (o ChannelCaptionLanguageMappingArrayOutput) ToChannelCaptionLanguageMappingArrayOutputWithContext(ctx context.Context) ChannelCaptionLanguageMappingArrayOutput {
	return o
}

func (o ChannelCaptionLanguageMappingArrayOutput) Index(i pulumi.IntInput) ChannelCaptionLanguageMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelCaptionLanguageMapping {
		return vs[0].([]ChannelCaptionLanguageMapping)[vs[1].(int)]
	}).(ChannelCaptionLanguageMappingOutput)
}

type ChannelCaptionRectangle struct {
	Height     *float64 `pulumi:"height"`
	LeftOffset *float64 `pulumi:"leftOffset"`
	TopOffset  *float64 `pulumi:"topOffset"`
	Width      *float64 `pulumi:"width"`
}

// ChannelCaptionRectangleInput is an input type that accepts ChannelCaptionRectangleArgs and ChannelCaptionRectangleOutput values.
// You can construct a concrete instance of `ChannelCaptionRectangleInput` via:
//
//          ChannelCaptionRectangleArgs{...}
type ChannelCaptionRectangleInput interface {
	pulumi.Input

	ToChannelCaptionRectangleOutput() ChannelCaptionRectangleOutput
	ToChannelCaptionRectangleOutputWithContext(context.Context) ChannelCaptionRectangleOutput
}

type ChannelCaptionRectangleArgs struct {
	Height     pulumi.Float64PtrInput `pulumi:"height"`
	LeftOffset pulumi.Float64PtrInput `pulumi:"leftOffset"`
	TopOffset  pulumi.Float64PtrInput `pulumi:"topOffset"`
	Width      pulumi.Float64PtrInput `pulumi:"width"`
}

func (ChannelCaptionRectangleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionRectangle)(nil)).Elem()
}

func (i ChannelCaptionRectangleArgs) ToChannelCaptionRectangleOutput() ChannelCaptionRectangleOutput {
	return i.ToChannelCaptionRectangleOutputWithContext(context.Background())
}

func (i ChannelCaptionRectangleArgs) ToChannelCaptionRectangleOutputWithContext(ctx context.Context) ChannelCaptionRectangleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionRectangleOutput)
}

func (i ChannelCaptionRectangleArgs) ToChannelCaptionRectanglePtrOutput() ChannelCaptionRectanglePtrOutput {
	return i.ToChannelCaptionRectanglePtrOutputWithContext(context.Background())
}

func (i ChannelCaptionRectangleArgs) ToChannelCaptionRectanglePtrOutputWithContext(ctx context.Context) ChannelCaptionRectanglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionRectangleOutput).ToChannelCaptionRectanglePtrOutputWithContext(ctx)
}

// ChannelCaptionRectanglePtrInput is an input type that accepts ChannelCaptionRectangleArgs, ChannelCaptionRectanglePtr and ChannelCaptionRectanglePtrOutput values.
// You can construct a concrete instance of `ChannelCaptionRectanglePtrInput` via:
//
//          ChannelCaptionRectangleArgs{...}
//
//  or:
//
//          nil
type ChannelCaptionRectanglePtrInput interface {
	pulumi.Input

	ToChannelCaptionRectanglePtrOutput() ChannelCaptionRectanglePtrOutput
	ToChannelCaptionRectanglePtrOutputWithContext(context.Context) ChannelCaptionRectanglePtrOutput
}

type channelCaptionRectanglePtrType ChannelCaptionRectangleArgs

func ChannelCaptionRectanglePtr(v *ChannelCaptionRectangleArgs) ChannelCaptionRectanglePtrInput {
	return (*channelCaptionRectanglePtrType)(v)
}

func (*channelCaptionRectanglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCaptionRectangle)(nil)).Elem()
}

func (i *channelCaptionRectanglePtrType) ToChannelCaptionRectanglePtrOutput() ChannelCaptionRectanglePtrOutput {
	return i.ToChannelCaptionRectanglePtrOutputWithContext(context.Background())
}

func (i *channelCaptionRectanglePtrType) ToChannelCaptionRectanglePtrOutputWithContext(ctx context.Context) ChannelCaptionRectanglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionRectanglePtrOutput)
}

type ChannelCaptionRectangleOutput struct{ *pulumi.OutputState }

func (ChannelCaptionRectangleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionRectangle)(nil)).Elem()
}

func (o ChannelCaptionRectangleOutput) ToChannelCaptionRectangleOutput() ChannelCaptionRectangleOutput {
	return o
}

func (o ChannelCaptionRectangleOutput) ToChannelCaptionRectangleOutputWithContext(ctx context.Context) ChannelCaptionRectangleOutput {
	return o
}

func (o ChannelCaptionRectangleOutput) ToChannelCaptionRectanglePtrOutput() ChannelCaptionRectanglePtrOutput {
	return o.ToChannelCaptionRectanglePtrOutputWithContext(context.Background())
}

func (o ChannelCaptionRectangleOutput) ToChannelCaptionRectanglePtrOutputWithContext(ctx context.Context) ChannelCaptionRectanglePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCaptionRectangle) *ChannelCaptionRectangle {
		return &v
	}).(ChannelCaptionRectanglePtrOutput)
}

func (o ChannelCaptionRectangleOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelCaptionRectangle) *float64 { return v.Height }).(pulumi.Float64PtrOutput)
}

func (o ChannelCaptionRectangleOutput) LeftOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelCaptionRectangle) *float64 { return v.LeftOffset }).(pulumi.Float64PtrOutput)
}

func (o ChannelCaptionRectangleOutput) TopOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelCaptionRectangle) *float64 { return v.TopOffset }).(pulumi.Float64PtrOutput)
}

func (o ChannelCaptionRectangleOutput) Width() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelCaptionRectangle) *float64 { return v.Width }).(pulumi.Float64PtrOutput)
}

type ChannelCaptionRectanglePtrOutput struct{ *pulumi.OutputState }

func (ChannelCaptionRectanglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCaptionRectangle)(nil)).Elem()
}

func (o ChannelCaptionRectanglePtrOutput) ToChannelCaptionRectanglePtrOutput() ChannelCaptionRectanglePtrOutput {
	return o
}

func (o ChannelCaptionRectanglePtrOutput) ToChannelCaptionRectanglePtrOutputWithContext(ctx context.Context) ChannelCaptionRectanglePtrOutput {
	return o
}

func (o ChannelCaptionRectanglePtrOutput) Elem() ChannelCaptionRectangleOutput {
	return o.ApplyT(func(v *ChannelCaptionRectangle) ChannelCaptionRectangle {
		if v != nil {
			return *v
		}
		var ret ChannelCaptionRectangle
		return ret
	}).(ChannelCaptionRectangleOutput)
}

func (o ChannelCaptionRectanglePtrOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelCaptionRectangle) *float64 {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelCaptionRectanglePtrOutput) LeftOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelCaptionRectangle) *float64 {
		if v == nil {
			return nil
		}
		return v.LeftOffset
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelCaptionRectanglePtrOutput) TopOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelCaptionRectangle) *float64 {
		if v == nil {
			return nil
		}
		return v.TopOffset
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelCaptionRectanglePtrOutput) Width() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelCaptionRectangle) *float64 {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.Float64PtrOutput)
}

type ChannelCaptionSelector struct {
	LanguageCode     *string                         `pulumi:"languageCode"`
	Name             *string                         `pulumi:"name"`
	SelectorSettings *ChannelCaptionSelectorSettings `pulumi:"selectorSettings"`
}

// ChannelCaptionSelectorInput is an input type that accepts ChannelCaptionSelectorArgs and ChannelCaptionSelectorOutput values.
// You can construct a concrete instance of `ChannelCaptionSelectorInput` via:
//
//          ChannelCaptionSelectorArgs{...}
type ChannelCaptionSelectorInput interface {
	pulumi.Input

	ToChannelCaptionSelectorOutput() ChannelCaptionSelectorOutput
	ToChannelCaptionSelectorOutputWithContext(context.Context) ChannelCaptionSelectorOutput
}

type ChannelCaptionSelectorArgs struct {
	LanguageCode     pulumi.StringPtrInput                  `pulumi:"languageCode"`
	Name             pulumi.StringPtrInput                  `pulumi:"name"`
	SelectorSettings ChannelCaptionSelectorSettingsPtrInput `pulumi:"selectorSettings"`
}

func (ChannelCaptionSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionSelector)(nil)).Elem()
}

func (i ChannelCaptionSelectorArgs) ToChannelCaptionSelectorOutput() ChannelCaptionSelectorOutput {
	return i.ToChannelCaptionSelectorOutputWithContext(context.Background())
}

func (i ChannelCaptionSelectorArgs) ToChannelCaptionSelectorOutputWithContext(ctx context.Context) ChannelCaptionSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionSelectorOutput)
}

// ChannelCaptionSelectorArrayInput is an input type that accepts ChannelCaptionSelectorArray and ChannelCaptionSelectorArrayOutput values.
// You can construct a concrete instance of `ChannelCaptionSelectorArrayInput` via:
//
//          ChannelCaptionSelectorArray{ ChannelCaptionSelectorArgs{...} }
type ChannelCaptionSelectorArrayInput interface {
	pulumi.Input

	ToChannelCaptionSelectorArrayOutput() ChannelCaptionSelectorArrayOutput
	ToChannelCaptionSelectorArrayOutputWithContext(context.Context) ChannelCaptionSelectorArrayOutput
}

type ChannelCaptionSelectorArray []ChannelCaptionSelectorInput

func (ChannelCaptionSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelCaptionSelector)(nil)).Elem()
}

func (i ChannelCaptionSelectorArray) ToChannelCaptionSelectorArrayOutput() ChannelCaptionSelectorArrayOutput {
	return i.ToChannelCaptionSelectorArrayOutputWithContext(context.Background())
}

func (i ChannelCaptionSelectorArray) ToChannelCaptionSelectorArrayOutputWithContext(ctx context.Context) ChannelCaptionSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionSelectorArrayOutput)
}

type ChannelCaptionSelectorOutput struct{ *pulumi.OutputState }

func (ChannelCaptionSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionSelector)(nil)).Elem()
}

func (o ChannelCaptionSelectorOutput) ToChannelCaptionSelectorOutput() ChannelCaptionSelectorOutput {
	return o
}

func (o ChannelCaptionSelectorOutput) ToChannelCaptionSelectorOutputWithContext(ctx context.Context) ChannelCaptionSelectorOutput {
	return o
}

func (o ChannelCaptionSelectorOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelector) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

func (o ChannelCaptionSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ChannelCaptionSelectorOutput) SelectorSettings() ChannelCaptionSelectorSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelector) *ChannelCaptionSelectorSettings { return v.SelectorSettings }).(ChannelCaptionSelectorSettingsPtrOutput)
}

type ChannelCaptionSelectorArrayOutput struct{ *pulumi.OutputState }

func (ChannelCaptionSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelCaptionSelector)(nil)).Elem()
}

func (o ChannelCaptionSelectorArrayOutput) ToChannelCaptionSelectorArrayOutput() ChannelCaptionSelectorArrayOutput {
	return o
}

func (o ChannelCaptionSelectorArrayOutput) ToChannelCaptionSelectorArrayOutputWithContext(ctx context.Context) ChannelCaptionSelectorArrayOutput {
	return o
}

func (o ChannelCaptionSelectorArrayOutput) Index(i pulumi.IntInput) ChannelCaptionSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelCaptionSelector {
		return vs[0].([]ChannelCaptionSelector)[vs[1].(int)]
	}).(ChannelCaptionSelectorOutput)
}

type ChannelCaptionSelectorSettings struct {
	AncillarySourceSettings *ChannelAncillarySourceSettings `pulumi:"ancillarySourceSettings"`
	AribSourceSettings      *ChannelAribSourceSettings      `pulumi:"aribSourceSettings"`
	DvbSubSourceSettings    *ChannelDvbSubSourceSettings    `pulumi:"dvbSubSourceSettings"`
	EmbeddedSourceSettings  *ChannelEmbeddedSourceSettings  `pulumi:"embeddedSourceSettings"`
	Scte20SourceSettings    *ChannelScte20SourceSettings    `pulumi:"scte20SourceSettings"`
	Scte27SourceSettings    *ChannelScte27SourceSettings    `pulumi:"scte27SourceSettings"`
	TeletextSourceSettings  *ChannelTeletextSourceSettings  `pulumi:"teletextSourceSettings"`
}

// ChannelCaptionSelectorSettingsInput is an input type that accepts ChannelCaptionSelectorSettingsArgs and ChannelCaptionSelectorSettingsOutput values.
// You can construct a concrete instance of `ChannelCaptionSelectorSettingsInput` via:
//
//          ChannelCaptionSelectorSettingsArgs{...}
type ChannelCaptionSelectorSettingsInput interface {
	pulumi.Input

	ToChannelCaptionSelectorSettingsOutput() ChannelCaptionSelectorSettingsOutput
	ToChannelCaptionSelectorSettingsOutputWithContext(context.Context) ChannelCaptionSelectorSettingsOutput
}

type ChannelCaptionSelectorSettingsArgs struct {
	AncillarySourceSettings ChannelAncillarySourceSettingsPtrInput `pulumi:"ancillarySourceSettings"`
	AribSourceSettings      ChannelAribSourceSettingsPtrInput      `pulumi:"aribSourceSettings"`
	DvbSubSourceSettings    ChannelDvbSubSourceSettingsPtrInput    `pulumi:"dvbSubSourceSettings"`
	EmbeddedSourceSettings  ChannelEmbeddedSourceSettingsPtrInput  `pulumi:"embeddedSourceSettings"`
	Scte20SourceSettings    ChannelScte20SourceSettingsPtrInput    `pulumi:"scte20SourceSettings"`
	Scte27SourceSettings    ChannelScte27SourceSettingsPtrInput    `pulumi:"scte27SourceSettings"`
	TeletextSourceSettings  ChannelTeletextSourceSettingsPtrInput  `pulumi:"teletextSourceSettings"`
}

func (ChannelCaptionSelectorSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionSelectorSettings)(nil)).Elem()
}

func (i ChannelCaptionSelectorSettingsArgs) ToChannelCaptionSelectorSettingsOutput() ChannelCaptionSelectorSettingsOutput {
	return i.ToChannelCaptionSelectorSettingsOutputWithContext(context.Background())
}

func (i ChannelCaptionSelectorSettingsArgs) ToChannelCaptionSelectorSettingsOutputWithContext(ctx context.Context) ChannelCaptionSelectorSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionSelectorSettingsOutput)
}

func (i ChannelCaptionSelectorSettingsArgs) ToChannelCaptionSelectorSettingsPtrOutput() ChannelCaptionSelectorSettingsPtrOutput {
	return i.ToChannelCaptionSelectorSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelCaptionSelectorSettingsArgs) ToChannelCaptionSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionSelectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionSelectorSettingsOutput).ToChannelCaptionSelectorSettingsPtrOutputWithContext(ctx)
}

// ChannelCaptionSelectorSettingsPtrInput is an input type that accepts ChannelCaptionSelectorSettingsArgs, ChannelCaptionSelectorSettingsPtr and ChannelCaptionSelectorSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelCaptionSelectorSettingsPtrInput` via:
//
//          ChannelCaptionSelectorSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelCaptionSelectorSettingsPtrInput interface {
	pulumi.Input

	ToChannelCaptionSelectorSettingsPtrOutput() ChannelCaptionSelectorSettingsPtrOutput
	ToChannelCaptionSelectorSettingsPtrOutputWithContext(context.Context) ChannelCaptionSelectorSettingsPtrOutput
}

type channelCaptionSelectorSettingsPtrType ChannelCaptionSelectorSettingsArgs

func ChannelCaptionSelectorSettingsPtr(v *ChannelCaptionSelectorSettingsArgs) ChannelCaptionSelectorSettingsPtrInput {
	return (*channelCaptionSelectorSettingsPtrType)(v)
}

func (*channelCaptionSelectorSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCaptionSelectorSettings)(nil)).Elem()
}

func (i *channelCaptionSelectorSettingsPtrType) ToChannelCaptionSelectorSettingsPtrOutput() ChannelCaptionSelectorSettingsPtrOutput {
	return i.ToChannelCaptionSelectorSettingsPtrOutputWithContext(context.Background())
}

func (i *channelCaptionSelectorSettingsPtrType) ToChannelCaptionSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionSelectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCaptionSelectorSettingsPtrOutput)
}

type ChannelCaptionSelectorSettingsOutput struct{ *pulumi.OutputState }

func (ChannelCaptionSelectorSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCaptionSelectorSettings)(nil)).Elem()
}

func (o ChannelCaptionSelectorSettingsOutput) ToChannelCaptionSelectorSettingsOutput() ChannelCaptionSelectorSettingsOutput {
	return o
}

func (o ChannelCaptionSelectorSettingsOutput) ToChannelCaptionSelectorSettingsOutputWithContext(ctx context.Context) ChannelCaptionSelectorSettingsOutput {
	return o
}

func (o ChannelCaptionSelectorSettingsOutput) ToChannelCaptionSelectorSettingsPtrOutput() ChannelCaptionSelectorSettingsPtrOutput {
	return o.ToChannelCaptionSelectorSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelCaptionSelectorSettingsOutput) ToChannelCaptionSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionSelectorSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCaptionSelectorSettings) *ChannelCaptionSelectorSettings {
		return &v
	}).(ChannelCaptionSelectorSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) AncillarySourceSettings() ChannelAncillarySourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelAncillarySourceSettings {
		return v.AncillarySourceSettings
	}).(ChannelAncillarySourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) AribSourceSettings() ChannelAribSourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelAribSourceSettings { return v.AribSourceSettings }).(ChannelAribSourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) DvbSubSourceSettings() ChannelDvbSubSourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelDvbSubSourceSettings { return v.DvbSubSourceSettings }).(ChannelDvbSubSourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) EmbeddedSourceSettings() ChannelEmbeddedSourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelEmbeddedSourceSettings { return v.EmbeddedSourceSettings }).(ChannelEmbeddedSourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) Scte20SourceSettings() ChannelScte20SourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelScte20SourceSettings { return v.Scte20SourceSettings }).(ChannelScte20SourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) Scte27SourceSettings() ChannelScte27SourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelScte27SourceSettings { return v.Scte27SourceSettings }).(ChannelScte27SourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsOutput) TeletextSourceSettings() ChannelTeletextSourceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelCaptionSelectorSettings) *ChannelTeletextSourceSettings { return v.TeletextSourceSettings }).(ChannelTeletextSourceSettingsPtrOutput)
}

type ChannelCaptionSelectorSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelCaptionSelectorSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCaptionSelectorSettings)(nil)).Elem()
}

func (o ChannelCaptionSelectorSettingsPtrOutput) ToChannelCaptionSelectorSettingsPtrOutput() ChannelCaptionSelectorSettingsPtrOutput {
	return o
}

func (o ChannelCaptionSelectorSettingsPtrOutput) ToChannelCaptionSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelCaptionSelectorSettingsPtrOutput {
	return o
}

func (o ChannelCaptionSelectorSettingsPtrOutput) Elem() ChannelCaptionSelectorSettingsOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) ChannelCaptionSelectorSettings {
		if v != nil {
			return *v
		}
		var ret ChannelCaptionSelectorSettings
		return ret
	}).(ChannelCaptionSelectorSettingsOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) AncillarySourceSettings() ChannelAncillarySourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelAncillarySourceSettings {
		if v == nil {
			return nil
		}
		return v.AncillarySourceSettings
	}).(ChannelAncillarySourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) AribSourceSettings() ChannelAribSourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelAribSourceSettings {
		if v == nil {
			return nil
		}
		return v.AribSourceSettings
	}).(ChannelAribSourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) DvbSubSourceSettings() ChannelDvbSubSourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelDvbSubSourceSettings {
		if v == nil {
			return nil
		}
		return v.DvbSubSourceSettings
	}).(ChannelDvbSubSourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) EmbeddedSourceSettings() ChannelEmbeddedSourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelEmbeddedSourceSettings {
		if v == nil {
			return nil
		}
		return v.EmbeddedSourceSettings
	}).(ChannelEmbeddedSourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) Scte20SourceSettings() ChannelScte20SourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelScte20SourceSettings {
		if v == nil {
			return nil
		}
		return v.Scte20SourceSettings
	}).(ChannelScte20SourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) Scte27SourceSettings() ChannelScte27SourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelScte27SourceSettings {
		if v == nil {
			return nil
		}
		return v.Scte27SourceSettings
	}).(ChannelScte27SourceSettingsPtrOutput)
}

func (o ChannelCaptionSelectorSettingsPtrOutput) TeletextSourceSettings() ChannelTeletextSourceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelCaptionSelectorSettings) *ChannelTeletextSourceSettings {
		if v == nil {
			return nil
		}
		return v.TeletextSourceSettings
	}).(ChannelTeletextSourceSettingsPtrOutput)
}

type ChannelCdiInputSpecification struct {
	Resolution *string `pulumi:"resolution"`
}

// ChannelCdiInputSpecificationInput is an input type that accepts ChannelCdiInputSpecificationArgs and ChannelCdiInputSpecificationOutput values.
// You can construct a concrete instance of `ChannelCdiInputSpecificationInput` via:
//
//          ChannelCdiInputSpecificationArgs{...}
type ChannelCdiInputSpecificationInput interface {
	pulumi.Input

	ToChannelCdiInputSpecificationOutput() ChannelCdiInputSpecificationOutput
	ToChannelCdiInputSpecificationOutputWithContext(context.Context) ChannelCdiInputSpecificationOutput
}

type ChannelCdiInputSpecificationArgs struct {
	Resolution pulumi.StringPtrInput `pulumi:"resolution"`
}

func (ChannelCdiInputSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCdiInputSpecification)(nil)).Elem()
}

func (i ChannelCdiInputSpecificationArgs) ToChannelCdiInputSpecificationOutput() ChannelCdiInputSpecificationOutput {
	return i.ToChannelCdiInputSpecificationOutputWithContext(context.Background())
}

func (i ChannelCdiInputSpecificationArgs) ToChannelCdiInputSpecificationOutputWithContext(ctx context.Context) ChannelCdiInputSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCdiInputSpecificationOutput)
}

func (i ChannelCdiInputSpecificationArgs) ToChannelCdiInputSpecificationPtrOutput() ChannelCdiInputSpecificationPtrOutput {
	return i.ToChannelCdiInputSpecificationPtrOutputWithContext(context.Background())
}

func (i ChannelCdiInputSpecificationArgs) ToChannelCdiInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelCdiInputSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCdiInputSpecificationOutput).ToChannelCdiInputSpecificationPtrOutputWithContext(ctx)
}

// ChannelCdiInputSpecificationPtrInput is an input type that accepts ChannelCdiInputSpecificationArgs, ChannelCdiInputSpecificationPtr and ChannelCdiInputSpecificationPtrOutput values.
// You can construct a concrete instance of `ChannelCdiInputSpecificationPtrInput` via:
//
//          ChannelCdiInputSpecificationArgs{...}
//
//  or:
//
//          nil
type ChannelCdiInputSpecificationPtrInput interface {
	pulumi.Input

	ToChannelCdiInputSpecificationPtrOutput() ChannelCdiInputSpecificationPtrOutput
	ToChannelCdiInputSpecificationPtrOutputWithContext(context.Context) ChannelCdiInputSpecificationPtrOutput
}

type channelCdiInputSpecificationPtrType ChannelCdiInputSpecificationArgs

func ChannelCdiInputSpecificationPtr(v *ChannelCdiInputSpecificationArgs) ChannelCdiInputSpecificationPtrInput {
	return (*channelCdiInputSpecificationPtrType)(v)
}

func (*channelCdiInputSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCdiInputSpecification)(nil)).Elem()
}

func (i *channelCdiInputSpecificationPtrType) ToChannelCdiInputSpecificationPtrOutput() ChannelCdiInputSpecificationPtrOutput {
	return i.ToChannelCdiInputSpecificationPtrOutputWithContext(context.Background())
}

func (i *channelCdiInputSpecificationPtrType) ToChannelCdiInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelCdiInputSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCdiInputSpecificationPtrOutput)
}

type ChannelCdiInputSpecificationOutput struct{ *pulumi.OutputState }

func (ChannelCdiInputSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCdiInputSpecification)(nil)).Elem()
}

func (o ChannelCdiInputSpecificationOutput) ToChannelCdiInputSpecificationOutput() ChannelCdiInputSpecificationOutput {
	return o
}

func (o ChannelCdiInputSpecificationOutput) ToChannelCdiInputSpecificationOutputWithContext(ctx context.Context) ChannelCdiInputSpecificationOutput {
	return o
}

func (o ChannelCdiInputSpecificationOutput) ToChannelCdiInputSpecificationPtrOutput() ChannelCdiInputSpecificationPtrOutput {
	return o.ToChannelCdiInputSpecificationPtrOutputWithContext(context.Background())
}

func (o ChannelCdiInputSpecificationOutput) ToChannelCdiInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelCdiInputSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCdiInputSpecification) *ChannelCdiInputSpecification {
		return &v
	}).(ChannelCdiInputSpecificationPtrOutput)
}

func (o ChannelCdiInputSpecificationOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCdiInputSpecification) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

type ChannelCdiInputSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ChannelCdiInputSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCdiInputSpecification)(nil)).Elem()
}

func (o ChannelCdiInputSpecificationPtrOutput) ToChannelCdiInputSpecificationPtrOutput() ChannelCdiInputSpecificationPtrOutput {
	return o
}

func (o ChannelCdiInputSpecificationPtrOutput) ToChannelCdiInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelCdiInputSpecificationPtrOutput {
	return o
}

func (o ChannelCdiInputSpecificationPtrOutput) Elem() ChannelCdiInputSpecificationOutput {
	return o.ApplyT(func(v *ChannelCdiInputSpecification) ChannelCdiInputSpecification {
		if v != nil {
			return *v
		}
		var ret ChannelCdiInputSpecification
		return ret
	}).(ChannelCdiInputSpecificationOutput)
}

func (o ChannelCdiInputSpecificationPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCdiInputSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

type ChannelColorSpacePassthroughSettings struct {
}

// ChannelColorSpacePassthroughSettingsInput is an input type that accepts ChannelColorSpacePassthroughSettingsArgs and ChannelColorSpacePassthroughSettingsOutput values.
// You can construct a concrete instance of `ChannelColorSpacePassthroughSettingsInput` via:
//
//          ChannelColorSpacePassthroughSettingsArgs{...}
type ChannelColorSpacePassthroughSettingsInput interface {
	pulumi.Input

	ToChannelColorSpacePassthroughSettingsOutput() ChannelColorSpacePassthroughSettingsOutput
	ToChannelColorSpacePassthroughSettingsOutputWithContext(context.Context) ChannelColorSpacePassthroughSettingsOutput
}

type ChannelColorSpacePassthroughSettingsArgs struct {
}

func (ChannelColorSpacePassthroughSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelColorSpacePassthroughSettings)(nil)).Elem()
}

func (i ChannelColorSpacePassthroughSettingsArgs) ToChannelColorSpacePassthroughSettingsOutput() ChannelColorSpacePassthroughSettingsOutput {
	return i.ToChannelColorSpacePassthroughSettingsOutputWithContext(context.Background())
}

func (i ChannelColorSpacePassthroughSettingsArgs) ToChannelColorSpacePassthroughSettingsOutputWithContext(ctx context.Context) ChannelColorSpacePassthroughSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelColorSpacePassthroughSettingsOutput)
}

func (i ChannelColorSpacePassthroughSettingsArgs) ToChannelColorSpacePassthroughSettingsPtrOutput() ChannelColorSpacePassthroughSettingsPtrOutput {
	return i.ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelColorSpacePassthroughSettingsArgs) ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(ctx context.Context) ChannelColorSpacePassthroughSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelColorSpacePassthroughSettingsOutput).ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(ctx)
}

// ChannelColorSpacePassthroughSettingsPtrInput is an input type that accepts ChannelColorSpacePassthroughSettingsArgs, ChannelColorSpacePassthroughSettingsPtr and ChannelColorSpacePassthroughSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelColorSpacePassthroughSettingsPtrInput` via:
//
//          ChannelColorSpacePassthroughSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelColorSpacePassthroughSettingsPtrInput interface {
	pulumi.Input

	ToChannelColorSpacePassthroughSettingsPtrOutput() ChannelColorSpacePassthroughSettingsPtrOutput
	ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(context.Context) ChannelColorSpacePassthroughSettingsPtrOutput
}

type channelColorSpacePassthroughSettingsPtrType ChannelColorSpacePassthroughSettingsArgs

func ChannelColorSpacePassthroughSettingsPtr(v *ChannelColorSpacePassthroughSettingsArgs) ChannelColorSpacePassthroughSettingsPtrInput {
	return (*channelColorSpacePassthroughSettingsPtrType)(v)
}

func (*channelColorSpacePassthroughSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelColorSpacePassthroughSettings)(nil)).Elem()
}

func (i *channelColorSpacePassthroughSettingsPtrType) ToChannelColorSpacePassthroughSettingsPtrOutput() ChannelColorSpacePassthroughSettingsPtrOutput {
	return i.ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(context.Background())
}

func (i *channelColorSpacePassthroughSettingsPtrType) ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(ctx context.Context) ChannelColorSpacePassthroughSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelColorSpacePassthroughSettingsPtrOutput)
}

type ChannelColorSpacePassthroughSettingsOutput struct{ *pulumi.OutputState }

func (ChannelColorSpacePassthroughSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelColorSpacePassthroughSettings)(nil)).Elem()
}

func (o ChannelColorSpacePassthroughSettingsOutput) ToChannelColorSpacePassthroughSettingsOutput() ChannelColorSpacePassthroughSettingsOutput {
	return o
}

func (o ChannelColorSpacePassthroughSettingsOutput) ToChannelColorSpacePassthroughSettingsOutputWithContext(ctx context.Context) ChannelColorSpacePassthroughSettingsOutput {
	return o
}

func (o ChannelColorSpacePassthroughSettingsOutput) ToChannelColorSpacePassthroughSettingsPtrOutput() ChannelColorSpacePassthroughSettingsPtrOutput {
	return o.ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelColorSpacePassthroughSettingsOutput) ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(ctx context.Context) ChannelColorSpacePassthroughSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelColorSpacePassthroughSettings) *ChannelColorSpacePassthroughSettings {
		return &v
	}).(ChannelColorSpacePassthroughSettingsPtrOutput)
}

type ChannelColorSpacePassthroughSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelColorSpacePassthroughSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelColorSpacePassthroughSettings)(nil)).Elem()
}

func (o ChannelColorSpacePassthroughSettingsPtrOutput) ToChannelColorSpacePassthroughSettingsPtrOutput() ChannelColorSpacePassthroughSettingsPtrOutput {
	return o
}

func (o ChannelColorSpacePassthroughSettingsPtrOutput) ToChannelColorSpacePassthroughSettingsPtrOutputWithContext(ctx context.Context) ChannelColorSpacePassthroughSettingsPtrOutput {
	return o
}

func (o ChannelColorSpacePassthroughSettingsPtrOutput) Elem() ChannelColorSpacePassthroughSettingsOutput {
	return o.ApplyT(func(v *ChannelColorSpacePassthroughSettings) ChannelColorSpacePassthroughSettings {
		if v != nil {
			return *v
		}
		var ret ChannelColorSpacePassthroughSettings
		return ret
	}).(ChannelColorSpacePassthroughSettingsOutput)
}

type ChannelDvbNitSettings struct {
	NetworkId   *int    `pulumi:"networkId"`
	NetworkName *string `pulumi:"networkName"`
	RepInterval *int    `pulumi:"repInterval"`
}

// ChannelDvbNitSettingsInput is an input type that accepts ChannelDvbNitSettingsArgs and ChannelDvbNitSettingsOutput values.
// You can construct a concrete instance of `ChannelDvbNitSettingsInput` via:
//
//          ChannelDvbNitSettingsArgs{...}
type ChannelDvbNitSettingsInput interface {
	pulumi.Input

	ToChannelDvbNitSettingsOutput() ChannelDvbNitSettingsOutput
	ToChannelDvbNitSettingsOutputWithContext(context.Context) ChannelDvbNitSettingsOutput
}

type ChannelDvbNitSettingsArgs struct {
	NetworkId   pulumi.IntPtrInput    `pulumi:"networkId"`
	NetworkName pulumi.StringPtrInput `pulumi:"networkName"`
	RepInterval pulumi.IntPtrInput    `pulumi:"repInterval"`
}

func (ChannelDvbNitSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbNitSettings)(nil)).Elem()
}

func (i ChannelDvbNitSettingsArgs) ToChannelDvbNitSettingsOutput() ChannelDvbNitSettingsOutput {
	return i.ToChannelDvbNitSettingsOutputWithContext(context.Background())
}

func (i ChannelDvbNitSettingsArgs) ToChannelDvbNitSettingsOutputWithContext(ctx context.Context) ChannelDvbNitSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbNitSettingsOutput)
}

func (i ChannelDvbNitSettingsArgs) ToChannelDvbNitSettingsPtrOutput() ChannelDvbNitSettingsPtrOutput {
	return i.ToChannelDvbNitSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelDvbNitSettingsArgs) ToChannelDvbNitSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbNitSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbNitSettingsOutput).ToChannelDvbNitSettingsPtrOutputWithContext(ctx)
}

// ChannelDvbNitSettingsPtrInput is an input type that accepts ChannelDvbNitSettingsArgs, ChannelDvbNitSettingsPtr and ChannelDvbNitSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelDvbNitSettingsPtrInput` via:
//
//          ChannelDvbNitSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelDvbNitSettingsPtrInput interface {
	pulumi.Input

	ToChannelDvbNitSettingsPtrOutput() ChannelDvbNitSettingsPtrOutput
	ToChannelDvbNitSettingsPtrOutputWithContext(context.Context) ChannelDvbNitSettingsPtrOutput
}

type channelDvbNitSettingsPtrType ChannelDvbNitSettingsArgs

func ChannelDvbNitSettingsPtr(v *ChannelDvbNitSettingsArgs) ChannelDvbNitSettingsPtrInput {
	return (*channelDvbNitSettingsPtrType)(v)
}

func (*channelDvbNitSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbNitSettings)(nil)).Elem()
}

func (i *channelDvbNitSettingsPtrType) ToChannelDvbNitSettingsPtrOutput() ChannelDvbNitSettingsPtrOutput {
	return i.ToChannelDvbNitSettingsPtrOutputWithContext(context.Background())
}

func (i *channelDvbNitSettingsPtrType) ToChannelDvbNitSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbNitSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbNitSettingsPtrOutput)
}

type ChannelDvbNitSettingsOutput struct{ *pulumi.OutputState }

func (ChannelDvbNitSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbNitSettings)(nil)).Elem()
}

func (o ChannelDvbNitSettingsOutput) ToChannelDvbNitSettingsOutput() ChannelDvbNitSettingsOutput {
	return o
}

func (o ChannelDvbNitSettingsOutput) ToChannelDvbNitSettingsOutputWithContext(ctx context.Context) ChannelDvbNitSettingsOutput {
	return o
}

func (o ChannelDvbNitSettingsOutput) ToChannelDvbNitSettingsPtrOutput() ChannelDvbNitSettingsPtrOutput {
	return o.ToChannelDvbNitSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelDvbNitSettingsOutput) ToChannelDvbNitSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbNitSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelDvbNitSettings) *ChannelDvbNitSettings {
		return &v
	}).(ChannelDvbNitSettingsPtrOutput)
}

func (o ChannelDvbNitSettingsOutput) NetworkId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbNitSettings) *int { return v.NetworkId }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbNitSettingsOutput) NetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbNitSettings) *string { return v.NetworkName }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbNitSettingsOutput) RepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbNitSettings) *int { return v.RepInterval }).(pulumi.IntPtrOutput)
}

type ChannelDvbNitSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelDvbNitSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbNitSettings)(nil)).Elem()
}

func (o ChannelDvbNitSettingsPtrOutput) ToChannelDvbNitSettingsPtrOutput() ChannelDvbNitSettingsPtrOutput {
	return o
}

func (o ChannelDvbNitSettingsPtrOutput) ToChannelDvbNitSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbNitSettingsPtrOutput {
	return o
}

func (o ChannelDvbNitSettingsPtrOutput) Elem() ChannelDvbNitSettingsOutput {
	return o.ApplyT(func(v *ChannelDvbNitSettings) ChannelDvbNitSettings {
		if v != nil {
			return *v
		}
		var ret ChannelDvbNitSettings
		return ret
	}).(ChannelDvbNitSettingsOutput)
}

func (o ChannelDvbNitSettingsPtrOutput) NetworkId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbNitSettings) *int {
		if v == nil {
			return nil
		}
		return v.NetworkId
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbNitSettingsPtrOutput) NetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbNitSettings) *string {
		if v == nil {
			return nil
		}
		return v.NetworkName
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbNitSettingsPtrOutput) RepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbNitSettings) *int {
		if v == nil {
			return nil
		}
		return v.RepInterval
	}).(pulumi.IntPtrOutput)
}

type ChannelDvbSdtSettings struct {
	OutputSdt           *string `pulumi:"outputSdt"`
	RepInterval         *int    `pulumi:"repInterval"`
	ServiceName         *string `pulumi:"serviceName"`
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ChannelDvbSdtSettingsInput is an input type that accepts ChannelDvbSdtSettingsArgs and ChannelDvbSdtSettingsOutput values.
// You can construct a concrete instance of `ChannelDvbSdtSettingsInput` via:
//
//          ChannelDvbSdtSettingsArgs{...}
type ChannelDvbSdtSettingsInput interface {
	pulumi.Input

	ToChannelDvbSdtSettingsOutput() ChannelDvbSdtSettingsOutput
	ToChannelDvbSdtSettingsOutputWithContext(context.Context) ChannelDvbSdtSettingsOutput
}

type ChannelDvbSdtSettingsArgs struct {
	OutputSdt           pulumi.StringPtrInput `pulumi:"outputSdt"`
	RepInterval         pulumi.IntPtrInput    `pulumi:"repInterval"`
	ServiceName         pulumi.StringPtrInput `pulumi:"serviceName"`
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ChannelDvbSdtSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbSdtSettings)(nil)).Elem()
}

func (i ChannelDvbSdtSettingsArgs) ToChannelDvbSdtSettingsOutput() ChannelDvbSdtSettingsOutput {
	return i.ToChannelDvbSdtSettingsOutputWithContext(context.Background())
}

func (i ChannelDvbSdtSettingsArgs) ToChannelDvbSdtSettingsOutputWithContext(ctx context.Context) ChannelDvbSdtSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSdtSettingsOutput)
}

func (i ChannelDvbSdtSettingsArgs) ToChannelDvbSdtSettingsPtrOutput() ChannelDvbSdtSettingsPtrOutput {
	return i.ToChannelDvbSdtSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelDvbSdtSettingsArgs) ToChannelDvbSdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSdtSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSdtSettingsOutput).ToChannelDvbSdtSettingsPtrOutputWithContext(ctx)
}

// ChannelDvbSdtSettingsPtrInput is an input type that accepts ChannelDvbSdtSettingsArgs, ChannelDvbSdtSettingsPtr and ChannelDvbSdtSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelDvbSdtSettingsPtrInput` via:
//
//          ChannelDvbSdtSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelDvbSdtSettingsPtrInput interface {
	pulumi.Input

	ToChannelDvbSdtSettingsPtrOutput() ChannelDvbSdtSettingsPtrOutput
	ToChannelDvbSdtSettingsPtrOutputWithContext(context.Context) ChannelDvbSdtSettingsPtrOutput
}

type channelDvbSdtSettingsPtrType ChannelDvbSdtSettingsArgs

func ChannelDvbSdtSettingsPtr(v *ChannelDvbSdtSettingsArgs) ChannelDvbSdtSettingsPtrInput {
	return (*channelDvbSdtSettingsPtrType)(v)
}

func (*channelDvbSdtSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbSdtSettings)(nil)).Elem()
}

func (i *channelDvbSdtSettingsPtrType) ToChannelDvbSdtSettingsPtrOutput() ChannelDvbSdtSettingsPtrOutput {
	return i.ToChannelDvbSdtSettingsPtrOutputWithContext(context.Background())
}

func (i *channelDvbSdtSettingsPtrType) ToChannelDvbSdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSdtSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSdtSettingsPtrOutput)
}

type ChannelDvbSdtSettingsOutput struct{ *pulumi.OutputState }

func (ChannelDvbSdtSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbSdtSettings)(nil)).Elem()
}

func (o ChannelDvbSdtSettingsOutput) ToChannelDvbSdtSettingsOutput() ChannelDvbSdtSettingsOutput {
	return o
}

func (o ChannelDvbSdtSettingsOutput) ToChannelDvbSdtSettingsOutputWithContext(ctx context.Context) ChannelDvbSdtSettingsOutput {
	return o
}

func (o ChannelDvbSdtSettingsOutput) ToChannelDvbSdtSettingsPtrOutput() ChannelDvbSdtSettingsPtrOutput {
	return o.ToChannelDvbSdtSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelDvbSdtSettingsOutput) ToChannelDvbSdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSdtSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelDvbSdtSettings) *ChannelDvbSdtSettings {
		return &v
	}).(ChannelDvbSdtSettingsPtrOutput)
}

func (o ChannelDvbSdtSettingsOutput) OutputSdt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSdtSettings) *string { return v.OutputSdt }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSdtSettingsOutput) RepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSdtSettings) *int { return v.RepInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSdtSettingsOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSdtSettings) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSdtSettingsOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSdtSettings) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ChannelDvbSdtSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelDvbSdtSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbSdtSettings)(nil)).Elem()
}

func (o ChannelDvbSdtSettingsPtrOutput) ToChannelDvbSdtSettingsPtrOutput() ChannelDvbSdtSettingsPtrOutput {
	return o
}

func (o ChannelDvbSdtSettingsPtrOutput) ToChannelDvbSdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSdtSettingsPtrOutput {
	return o
}

func (o ChannelDvbSdtSettingsPtrOutput) Elem() ChannelDvbSdtSettingsOutput {
	return o.ApplyT(func(v *ChannelDvbSdtSettings) ChannelDvbSdtSettings {
		if v != nil {
			return *v
		}
		var ret ChannelDvbSdtSettings
		return ret
	}).(ChannelDvbSdtSettingsOutput)
}

func (o ChannelDvbSdtSettingsPtrOutput) OutputSdt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSdtSettings) *string {
		if v == nil {
			return nil
		}
		return v.OutputSdt
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSdtSettingsPtrOutput) RepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSdtSettings) *int {
		if v == nil {
			return nil
		}
		return v.RepInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSdtSettingsPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSdtSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSdtSettingsPtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSdtSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

type ChannelDvbSubDestinationSettings struct {
	Alignment           *string               `pulumi:"alignment"`
	BackgroundColor     *string               `pulumi:"backgroundColor"`
	BackgroundOpacity   *int                  `pulumi:"backgroundOpacity"`
	Font                *ChannelInputLocation `pulumi:"font"`
	FontColor           *string               `pulumi:"fontColor"`
	FontOpacity         *int                  `pulumi:"fontOpacity"`
	FontResolution      *int                  `pulumi:"fontResolution"`
	FontSize            *string               `pulumi:"fontSize"`
	OutlineColor        *string               `pulumi:"outlineColor"`
	OutlineSize         *int                  `pulumi:"outlineSize"`
	ShadowColor         *string               `pulumi:"shadowColor"`
	ShadowOpacity       *int                  `pulumi:"shadowOpacity"`
	ShadowXOffset       *int                  `pulumi:"shadowXOffset"`
	ShadowYOffset       *int                  `pulumi:"shadowYOffset"`
	TeletextGridControl *string               `pulumi:"teletextGridControl"`
	XPosition           *int                  `pulumi:"xPosition"`
	YPosition           *int                  `pulumi:"yPosition"`
}

// ChannelDvbSubDestinationSettingsInput is an input type that accepts ChannelDvbSubDestinationSettingsArgs and ChannelDvbSubDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelDvbSubDestinationSettingsInput` via:
//
//          ChannelDvbSubDestinationSettingsArgs{...}
type ChannelDvbSubDestinationSettingsInput interface {
	pulumi.Input

	ToChannelDvbSubDestinationSettingsOutput() ChannelDvbSubDestinationSettingsOutput
	ToChannelDvbSubDestinationSettingsOutputWithContext(context.Context) ChannelDvbSubDestinationSettingsOutput
}

type ChannelDvbSubDestinationSettingsArgs struct {
	Alignment           pulumi.StringPtrInput        `pulumi:"alignment"`
	BackgroundColor     pulumi.StringPtrInput        `pulumi:"backgroundColor"`
	BackgroundOpacity   pulumi.IntPtrInput           `pulumi:"backgroundOpacity"`
	Font                ChannelInputLocationPtrInput `pulumi:"font"`
	FontColor           pulumi.StringPtrInput        `pulumi:"fontColor"`
	FontOpacity         pulumi.IntPtrInput           `pulumi:"fontOpacity"`
	FontResolution      pulumi.IntPtrInput           `pulumi:"fontResolution"`
	FontSize            pulumi.StringPtrInput        `pulumi:"fontSize"`
	OutlineColor        pulumi.StringPtrInput        `pulumi:"outlineColor"`
	OutlineSize         pulumi.IntPtrInput           `pulumi:"outlineSize"`
	ShadowColor         pulumi.StringPtrInput        `pulumi:"shadowColor"`
	ShadowOpacity       pulumi.IntPtrInput           `pulumi:"shadowOpacity"`
	ShadowXOffset       pulumi.IntPtrInput           `pulumi:"shadowXOffset"`
	ShadowYOffset       pulumi.IntPtrInput           `pulumi:"shadowYOffset"`
	TeletextGridControl pulumi.StringPtrInput        `pulumi:"teletextGridControl"`
	XPosition           pulumi.IntPtrInput           `pulumi:"xPosition"`
	YPosition           pulumi.IntPtrInput           `pulumi:"yPosition"`
}

func (ChannelDvbSubDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbSubDestinationSettings)(nil)).Elem()
}

func (i ChannelDvbSubDestinationSettingsArgs) ToChannelDvbSubDestinationSettingsOutput() ChannelDvbSubDestinationSettingsOutput {
	return i.ToChannelDvbSubDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelDvbSubDestinationSettingsArgs) ToChannelDvbSubDestinationSettingsOutputWithContext(ctx context.Context) ChannelDvbSubDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSubDestinationSettingsOutput)
}

func (i ChannelDvbSubDestinationSettingsArgs) ToChannelDvbSubDestinationSettingsPtrOutput() ChannelDvbSubDestinationSettingsPtrOutput {
	return i.ToChannelDvbSubDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelDvbSubDestinationSettingsArgs) ToChannelDvbSubDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSubDestinationSettingsOutput).ToChannelDvbSubDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelDvbSubDestinationSettingsPtrInput is an input type that accepts ChannelDvbSubDestinationSettingsArgs, ChannelDvbSubDestinationSettingsPtr and ChannelDvbSubDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelDvbSubDestinationSettingsPtrInput` via:
//
//          ChannelDvbSubDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelDvbSubDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelDvbSubDestinationSettingsPtrOutput() ChannelDvbSubDestinationSettingsPtrOutput
	ToChannelDvbSubDestinationSettingsPtrOutputWithContext(context.Context) ChannelDvbSubDestinationSettingsPtrOutput
}

type channelDvbSubDestinationSettingsPtrType ChannelDvbSubDestinationSettingsArgs

func ChannelDvbSubDestinationSettingsPtr(v *ChannelDvbSubDestinationSettingsArgs) ChannelDvbSubDestinationSettingsPtrInput {
	return (*channelDvbSubDestinationSettingsPtrType)(v)
}

func (*channelDvbSubDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbSubDestinationSettings)(nil)).Elem()
}

func (i *channelDvbSubDestinationSettingsPtrType) ToChannelDvbSubDestinationSettingsPtrOutput() ChannelDvbSubDestinationSettingsPtrOutput {
	return i.ToChannelDvbSubDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelDvbSubDestinationSettingsPtrType) ToChannelDvbSubDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSubDestinationSettingsPtrOutput)
}

type ChannelDvbSubDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelDvbSubDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbSubDestinationSettings)(nil)).Elem()
}

func (o ChannelDvbSubDestinationSettingsOutput) ToChannelDvbSubDestinationSettingsOutput() ChannelDvbSubDestinationSettingsOutput {
	return o
}

func (o ChannelDvbSubDestinationSettingsOutput) ToChannelDvbSubDestinationSettingsOutputWithContext(ctx context.Context) ChannelDvbSubDestinationSettingsOutput {
	return o
}

func (o ChannelDvbSubDestinationSettingsOutput) ToChannelDvbSubDestinationSettingsPtrOutput() ChannelDvbSubDestinationSettingsPtrOutput {
	return o.ToChannelDvbSubDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelDvbSubDestinationSettingsOutput) ToChannelDvbSubDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelDvbSubDestinationSettings) *ChannelDvbSubDestinationSettings {
		return &v
	}).(ChannelDvbSubDestinationSettingsPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) Alignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.Alignment }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) BackgroundOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.BackgroundOpacity }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) Font() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *ChannelInputLocation { return v.Font }).(ChannelInputLocationPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) FontOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.FontOpacity }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) FontResolution() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.FontResolution }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.FontSize }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) OutlineColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.OutlineColor }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) OutlineSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.OutlineSize }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) ShadowColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.ShadowColor }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) ShadowOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.ShadowOpacity }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) ShadowXOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.ShadowXOffset }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) ShadowYOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.ShadowYOffset }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) TeletextGridControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *string { return v.TeletextGridControl }).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) XPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.XPosition }).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsOutput) YPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubDestinationSettings) *int { return v.YPosition }).(pulumi.IntPtrOutput)
}

type ChannelDvbSubDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelDvbSubDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbSubDestinationSettings)(nil)).Elem()
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) ToChannelDvbSubDestinationSettingsPtrOutput() ChannelDvbSubDestinationSettingsPtrOutput {
	return o
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) ToChannelDvbSubDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubDestinationSettingsPtrOutput {
	return o
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) Elem() ChannelDvbSubDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) ChannelDvbSubDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelDvbSubDestinationSettings
		return ret
	}).(ChannelDvbSubDestinationSettingsOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) Alignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Alignment
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) BackgroundOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.BackgroundOpacity
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) Font() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.Font
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) FontOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.FontOpacity
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) FontResolution() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.FontResolution
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) FontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) OutlineColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.OutlineColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) OutlineSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.OutlineSize
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) ShadowColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.ShadowColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) ShadowOpacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.ShadowOpacity
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) ShadowXOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.ShadowXOffset
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) ShadowYOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.ShadowYOffset
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) TeletextGridControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.TeletextGridControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) XPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.XPosition
	}).(pulumi.IntPtrOutput)
}

func (o ChannelDvbSubDestinationSettingsPtrOutput) YPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubDestinationSettings) *int {
		if v == nil {
			return nil
		}
		return v.YPosition
	}).(pulumi.IntPtrOutput)
}

type ChannelDvbSubSourceSettings struct {
	Pid *int `pulumi:"pid"`
}

// ChannelDvbSubSourceSettingsInput is an input type that accepts ChannelDvbSubSourceSettingsArgs and ChannelDvbSubSourceSettingsOutput values.
// You can construct a concrete instance of `ChannelDvbSubSourceSettingsInput` via:
//
//          ChannelDvbSubSourceSettingsArgs{...}
type ChannelDvbSubSourceSettingsInput interface {
	pulumi.Input

	ToChannelDvbSubSourceSettingsOutput() ChannelDvbSubSourceSettingsOutput
	ToChannelDvbSubSourceSettingsOutputWithContext(context.Context) ChannelDvbSubSourceSettingsOutput
}

type ChannelDvbSubSourceSettingsArgs struct {
	Pid pulumi.IntPtrInput `pulumi:"pid"`
}

func (ChannelDvbSubSourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbSubSourceSettings)(nil)).Elem()
}

func (i ChannelDvbSubSourceSettingsArgs) ToChannelDvbSubSourceSettingsOutput() ChannelDvbSubSourceSettingsOutput {
	return i.ToChannelDvbSubSourceSettingsOutputWithContext(context.Background())
}

func (i ChannelDvbSubSourceSettingsArgs) ToChannelDvbSubSourceSettingsOutputWithContext(ctx context.Context) ChannelDvbSubSourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSubSourceSettingsOutput)
}

func (i ChannelDvbSubSourceSettingsArgs) ToChannelDvbSubSourceSettingsPtrOutput() ChannelDvbSubSourceSettingsPtrOutput {
	return i.ToChannelDvbSubSourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelDvbSubSourceSettingsArgs) ToChannelDvbSubSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSubSourceSettingsOutput).ToChannelDvbSubSourceSettingsPtrOutputWithContext(ctx)
}

// ChannelDvbSubSourceSettingsPtrInput is an input type that accepts ChannelDvbSubSourceSettingsArgs, ChannelDvbSubSourceSettingsPtr and ChannelDvbSubSourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelDvbSubSourceSettingsPtrInput` via:
//
//          ChannelDvbSubSourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelDvbSubSourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelDvbSubSourceSettingsPtrOutput() ChannelDvbSubSourceSettingsPtrOutput
	ToChannelDvbSubSourceSettingsPtrOutputWithContext(context.Context) ChannelDvbSubSourceSettingsPtrOutput
}

type channelDvbSubSourceSettingsPtrType ChannelDvbSubSourceSettingsArgs

func ChannelDvbSubSourceSettingsPtr(v *ChannelDvbSubSourceSettingsArgs) ChannelDvbSubSourceSettingsPtrInput {
	return (*channelDvbSubSourceSettingsPtrType)(v)
}

func (*channelDvbSubSourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbSubSourceSettings)(nil)).Elem()
}

func (i *channelDvbSubSourceSettingsPtrType) ToChannelDvbSubSourceSettingsPtrOutput() ChannelDvbSubSourceSettingsPtrOutput {
	return i.ToChannelDvbSubSourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelDvbSubSourceSettingsPtrType) ToChannelDvbSubSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbSubSourceSettingsPtrOutput)
}

type ChannelDvbSubSourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelDvbSubSourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbSubSourceSettings)(nil)).Elem()
}

func (o ChannelDvbSubSourceSettingsOutput) ToChannelDvbSubSourceSettingsOutput() ChannelDvbSubSourceSettingsOutput {
	return o
}

func (o ChannelDvbSubSourceSettingsOutput) ToChannelDvbSubSourceSettingsOutputWithContext(ctx context.Context) ChannelDvbSubSourceSettingsOutput {
	return o
}

func (o ChannelDvbSubSourceSettingsOutput) ToChannelDvbSubSourceSettingsPtrOutput() ChannelDvbSubSourceSettingsPtrOutput {
	return o.ToChannelDvbSubSourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelDvbSubSourceSettingsOutput) ToChannelDvbSubSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubSourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelDvbSubSourceSettings) *ChannelDvbSubSourceSettings {
		return &v
	}).(ChannelDvbSubSourceSettingsPtrOutput)
}

func (o ChannelDvbSubSourceSettingsOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbSubSourceSettings) *int { return v.Pid }).(pulumi.IntPtrOutput)
}

type ChannelDvbSubSourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelDvbSubSourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbSubSourceSettings)(nil)).Elem()
}

func (o ChannelDvbSubSourceSettingsPtrOutput) ToChannelDvbSubSourceSettingsPtrOutput() ChannelDvbSubSourceSettingsPtrOutput {
	return o
}

func (o ChannelDvbSubSourceSettingsPtrOutput) ToChannelDvbSubSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbSubSourceSettingsPtrOutput {
	return o
}

func (o ChannelDvbSubSourceSettingsPtrOutput) Elem() ChannelDvbSubSourceSettingsOutput {
	return o.ApplyT(func(v *ChannelDvbSubSourceSettings) ChannelDvbSubSourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelDvbSubSourceSettings
		return ret
	}).(ChannelDvbSubSourceSettingsOutput)
}

func (o ChannelDvbSubSourceSettingsPtrOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbSubSourceSettings) *int {
		if v == nil {
			return nil
		}
		return v.Pid
	}).(pulumi.IntPtrOutput)
}

type ChannelDvbTdtSettings struct {
	RepInterval *int `pulumi:"repInterval"`
}

// ChannelDvbTdtSettingsInput is an input type that accepts ChannelDvbTdtSettingsArgs and ChannelDvbTdtSettingsOutput values.
// You can construct a concrete instance of `ChannelDvbTdtSettingsInput` via:
//
//          ChannelDvbTdtSettingsArgs{...}
type ChannelDvbTdtSettingsInput interface {
	pulumi.Input

	ToChannelDvbTdtSettingsOutput() ChannelDvbTdtSettingsOutput
	ToChannelDvbTdtSettingsOutputWithContext(context.Context) ChannelDvbTdtSettingsOutput
}

type ChannelDvbTdtSettingsArgs struct {
	RepInterval pulumi.IntPtrInput `pulumi:"repInterval"`
}

func (ChannelDvbTdtSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbTdtSettings)(nil)).Elem()
}

func (i ChannelDvbTdtSettingsArgs) ToChannelDvbTdtSettingsOutput() ChannelDvbTdtSettingsOutput {
	return i.ToChannelDvbTdtSettingsOutputWithContext(context.Background())
}

func (i ChannelDvbTdtSettingsArgs) ToChannelDvbTdtSettingsOutputWithContext(ctx context.Context) ChannelDvbTdtSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbTdtSettingsOutput)
}

func (i ChannelDvbTdtSettingsArgs) ToChannelDvbTdtSettingsPtrOutput() ChannelDvbTdtSettingsPtrOutput {
	return i.ToChannelDvbTdtSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelDvbTdtSettingsArgs) ToChannelDvbTdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbTdtSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbTdtSettingsOutput).ToChannelDvbTdtSettingsPtrOutputWithContext(ctx)
}

// ChannelDvbTdtSettingsPtrInput is an input type that accepts ChannelDvbTdtSettingsArgs, ChannelDvbTdtSettingsPtr and ChannelDvbTdtSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelDvbTdtSettingsPtrInput` via:
//
//          ChannelDvbTdtSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelDvbTdtSettingsPtrInput interface {
	pulumi.Input

	ToChannelDvbTdtSettingsPtrOutput() ChannelDvbTdtSettingsPtrOutput
	ToChannelDvbTdtSettingsPtrOutputWithContext(context.Context) ChannelDvbTdtSettingsPtrOutput
}

type channelDvbTdtSettingsPtrType ChannelDvbTdtSettingsArgs

func ChannelDvbTdtSettingsPtr(v *ChannelDvbTdtSettingsArgs) ChannelDvbTdtSettingsPtrInput {
	return (*channelDvbTdtSettingsPtrType)(v)
}

func (*channelDvbTdtSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbTdtSettings)(nil)).Elem()
}

func (i *channelDvbTdtSettingsPtrType) ToChannelDvbTdtSettingsPtrOutput() ChannelDvbTdtSettingsPtrOutput {
	return i.ToChannelDvbTdtSettingsPtrOutputWithContext(context.Background())
}

func (i *channelDvbTdtSettingsPtrType) ToChannelDvbTdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbTdtSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDvbTdtSettingsPtrOutput)
}

type ChannelDvbTdtSettingsOutput struct{ *pulumi.OutputState }

func (ChannelDvbTdtSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDvbTdtSettings)(nil)).Elem()
}

func (o ChannelDvbTdtSettingsOutput) ToChannelDvbTdtSettingsOutput() ChannelDvbTdtSettingsOutput {
	return o
}

func (o ChannelDvbTdtSettingsOutput) ToChannelDvbTdtSettingsOutputWithContext(ctx context.Context) ChannelDvbTdtSettingsOutput {
	return o
}

func (o ChannelDvbTdtSettingsOutput) ToChannelDvbTdtSettingsPtrOutput() ChannelDvbTdtSettingsPtrOutput {
	return o.ToChannelDvbTdtSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelDvbTdtSettingsOutput) ToChannelDvbTdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbTdtSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelDvbTdtSettings) *ChannelDvbTdtSettings {
		return &v
	}).(ChannelDvbTdtSettingsPtrOutput)
}

func (o ChannelDvbTdtSettingsOutput) RepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelDvbTdtSettings) *int { return v.RepInterval }).(pulumi.IntPtrOutput)
}

type ChannelDvbTdtSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelDvbTdtSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDvbTdtSettings)(nil)).Elem()
}

func (o ChannelDvbTdtSettingsPtrOutput) ToChannelDvbTdtSettingsPtrOutput() ChannelDvbTdtSettingsPtrOutput {
	return o
}

func (o ChannelDvbTdtSettingsPtrOutput) ToChannelDvbTdtSettingsPtrOutputWithContext(ctx context.Context) ChannelDvbTdtSettingsPtrOutput {
	return o
}

func (o ChannelDvbTdtSettingsPtrOutput) Elem() ChannelDvbTdtSettingsOutput {
	return o.ApplyT(func(v *ChannelDvbTdtSettings) ChannelDvbTdtSettings {
		if v != nil {
			return *v
		}
		var ret ChannelDvbTdtSettings
		return ret
	}).(ChannelDvbTdtSettingsOutput)
}

func (o ChannelDvbTdtSettingsPtrOutput) RepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelDvbTdtSettings) *int {
		if v == nil {
			return nil
		}
		return v.RepInterval
	}).(pulumi.IntPtrOutput)
}

type ChannelEac3Settings struct {
	AttenuationControl   *string  `pulumi:"attenuationControl"`
	Bitrate              *float64 `pulumi:"bitrate"`
	BitstreamMode        *string  `pulumi:"bitstreamMode"`
	CodingMode           *string  `pulumi:"codingMode"`
	DcFilter             *string  `pulumi:"dcFilter"`
	Dialnorm             *int     `pulumi:"dialnorm"`
	DrcLine              *string  `pulumi:"drcLine"`
	DrcRf                *string  `pulumi:"drcRf"`
	LfeControl           *string  `pulumi:"lfeControl"`
	LfeFilter            *string  `pulumi:"lfeFilter"`
	LoRoCenterMixLevel   *float64 `pulumi:"loRoCenterMixLevel"`
	LoRoSurroundMixLevel *float64 `pulumi:"loRoSurroundMixLevel"`
	LtRtCenterMixLevel   *float64 `pulumi:"ltRtCenterMixLevel"`
	LtRtSurroundMixLevel *float64 `pulumi:"ltRtSurroundMixLevel"`
	MetadataControl      *string  `pulumi:"metadataControl"`
	PassthroughControl   *string  `pulumi:"passthroughControl"`
	PhaseControl         *string  `pulumi:"phaseControl"`
	StereoDownmix        *string  `pulumi:"stereoDownmix"`
	SurroundExMode       *string  `pulumi:"surroundExMode"`
	SurroundMode         *string  `pulumi:"surroundMode"`
}

// ChannelEac3SettingsInput is an input type that accepts ChannelEac3SettingsArgs and ChannelEac3SettingsOutput values.
// You can construct a concrete instance of `ChannelEac3SettingsInput` via:
//
//          ChannelEac3SettingsArgs{...}
type ChannelEac3SettingsInput interface {
	pulumi.Input

	ToChannelEac3SettingsOutput() ChannelEac3SettingsOutput
	ToChannelEac3SettingsOutputWithContext(context.Context) ChannelEac3SettingsOutput
}

type ChannelEac3SettingsArgs struct {
	AttenuationControl   pulumi.StringPtrInput  `pulumi:"attenuationControl"`
	Bitrate              pulumi.Float64PtrInput `pulumi:"bitrate"`
	BitstreamMode        pulumi.StringPtrInput  `pulumi:"bitstreamMode"`
	CodingMode           pulumi.StringPtrInput  `pulumi:"codingMode"`
	DcFilter             pulumi.StringPtrInput  `pulumi:"dcFilter"`
	Dialnorm             pulumi.IntPtrInput     `pulumi:"dialnorm"`
	DrcLine              pulumi.StringPtrInput  `pulumi:"drcLine"`
	DrcRf                pulumi.StringPtrInput  `pulumi:"drcRf"`
	LfeControl           pulumi.StringPtrInput  `pulumi:"lfeControl"`
	LfeFilter            pulumi.StringPtrInput  `pulumi:"lfeFilter"`
	LoRoCenterMixLevel   pulumi.Float64PtrInput `pulumi:"loRoCenterMixLevel"`
	LoRoSurroundMixLevel pulumi.Float64PtrInput `pulumi:"loRoSurroundMixLevel"`
	LtRtCenterMixLevel   pulumi.Float64PtrInput `pulumi:"ltRtCenterMixLevel"`
	LtRtSurroundMixLevel pulumi.Float64PtrInput `pulumi:"ltRtSurroundMixLevel"`
	MetadataControl      pulumi.StringPtrInput  `pulumi:"metadataControl"`
	PassthroughControl   pulumi.StringPtrInput  `pulumi:"passthroughControl"`
	PhaseControl         pulumi.StringPtrInput  `pulumi:"phaseControl"`
	StereoDownmix        pulumi.StringPtrInput  `pulumi:"stereoDownmix"`
	SurroundExMode       pulumi.StringPtrInput  `pulumi:"surroundExMode"`
	SurroundMode         pulumi.StringPtrInput  `pulumi:"surroundMode"`
}

func (ChannelEac3SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEac3Settings)(nil)).Elem()
}

func (i ChannelEac3SettingsArgs) ToChannelEac3SettingsOutput() ChannelEac3SettingsOutput {
	return i.ToChannelEac3SettingsOutputWithContext(context.Background())
}

func (i ChannelEac3SettingsArgs) ToChannelEac3SettingsOutputWithContext(ctx context.Context) ChannelEac3SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEac3SettingsOutput)
}

func (i ChannelEac3SettingsArgs) ToChannelEac3SettingsPtrOutput() ChannelEac3SettingsPtrOutput {
	return i.ToChannelEac3SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelEac3SettingsArgs) ToChannelEac3SettingsPtrOutputWithContext(ctx context.Context) ChannelEac3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEac3SettingsOutput).ToChannelEac3SettingsPtrOutputWithContext(ctx)
}

// ChannelEac3SettingsPtrInput is an input type that accepts ChannelEac3SettingsArgs, ChannelEac3SettingsPtr and ChannelEac3SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelEac3SettingsPtrInput` via:
//
//          ChannelEac3SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelEac3SettingsPtrInput interface {
	pulumi.Input

	ToChannelEac3SettingsPtrOutput() ChannelEac3SettingsPtrOutput
	ToChannelEac3SettingsPtrOutputWithContext(context.Context) ChannelEac3SettingsPtrOutput
}

type channelEac3SettingsPtrType ChannelEac3SettingsArgs

func ChannelEac3SettingsPtr(v *ChannelEac3SettingsArgs) ChannelEac3SettingsPtrInput {
	return (*channelEac3SettingsPtrType)(v)
}

func (*channelEac3SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEac3Settings)(nil)).Elem()
}

func (i *channelEac3SettingsPtrType) ToChannelEac3SettingsPtrOutput() ChannelEac3SettingsPtrOutput {
	return i.ToChannelEac3SettingsPtrOutputWithContext(context.Background())
}

func (i *channelEac3SettingsPtrType) ToChannelEac3SettingsPtrOutputWithContext(ctx context.Context) ChannelEac3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEac3SettingsPtrOutput)
}

type ChannelEac3SettingsOutput struct{ *pulumi.OutputState }

func (ChannelEac3SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEac3Settings)(nil)).Elem()
}

func (o ChannelEac3SettingsOutput) ToChannelEac3SettingsOutput() ChannelEac3SettingsOutput {
	return o
}

func (o ChannelEac3SettingsOutput) ToChannelEac3SettingsOutputWithContext(ctx context.Context) ChannelEac3SettingsOutput {
	return o
}

func (o ChannelEac3SettingsOutput) ToChannelEac3SettingsPtrOutput() ChannelEac3SettingsPtrOutput {
	return o.ToChannelEac3SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelEac3SettingsOutput) ToChannelEac3SettingsPtrOutputWithContext(ctx context.Context) ChannelEac3SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelEac3Settings) *ChannelEac3Settings {
		return &v
	}).(ChannelEac3SettingsPtrOutput)
}

func (o ChannelEac3SettingsOutput) AttenuationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.AttenuationControl }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *float64 { return v.Bitrate }).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsOutput) BitstreamMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.BitstreamMode }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.CodingMode }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) DcFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.DcFilter }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) Dialnorm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *int { return v.Dialnorm }).(pulumi.IntPtrOutput)
}

func (o ChannelEac3SettingsOutput) DrcLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.DrcLine }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) DrcRf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.DrcRf }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) LfeControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.LfeControl }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) LfeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.LfeFilter }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) LoRoCenterMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *float64 { return v.LoRoCenterMixLevel }).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsOutput) LoRoSurroundMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *float64 { return v.LoRoSurroundMixLevel }).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsOutput) LtRtCenterMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *float64 { return v.LtRtCenterMixLevel }).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsOutput) LtRtSurroundMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *float64 { return v.LtRtSurroundMixLevel }).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsOutput) MetadataControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.MetadataControl }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) PassthroughControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.PassthroughControl }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) PhaseControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.PhaseControl }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) StereoDownmix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.StereoDownmix }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) SurroundExMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.SurroundExMode }).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsOutput) SurroundMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEac3Settings) *string { return v.SurroundMode }).(pulumi.StringPtrOutput)
}

type ChannelEac3SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelEac3SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEac3Settings)(nil)).Elem()
}

func (o ChannelEac3SettingsPtrOutput) ToChannelEac3SettingsPtrOutput() ChannelEac3SettingsPtrOutput {
	return o
}

func (o ChannelEac3SettingsPtrOutput) ToChannelEac3SettingsPtrOutputWithContext(ctx context.Context) ChannelEac3SettingsPtrOutput {
	return o
}

func (o ChannelEac3SettingsPtrOutput) Elem() ChannelEac3SettingsOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) ChannelEac3Settings {
		if v != nil {
			return *v
		}
		var ret ChannelEac3Settings
		return ret
	}).(ChannelEac3SettingsOutput)
}

func (o ChannelEac3SettingsPtrOutput) AttenuationControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.AttenuationControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) BitstreamMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.BitstreamMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CodingMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) DcFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DcFilter
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) Dialnorm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *int {
		if v == nil {
			return nil
		}
		return v.Dialnorm
	}).(pulumi.IntPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) DrcLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DrcLine
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) DrcRf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DrcRf
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) LfeControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.LfeControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) LfeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.LfeFilter
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) LoRoCenterMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.LoRoCenterMixLevel
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) LoRoSurroundMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.LoRoSurroundMixLevel
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) LtRtCenterMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.LtRtCenterMixLevel
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) LtRtSurroundMixLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.LtRtSurroundMixLevel
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) MetadataControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.MetadataControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) PassthroughControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.PassthroughControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) PhaseControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.PhaseControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) StereoDownmix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.StereoDownmix
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) SurroundExMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.SurroundExMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEac3SettingsPtrOutput) SurroundMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEac3Settings) *string {
		if v == nil {
			return nil
		}
		return v.SurroundMode
	}).(pulumi.StringPtrOutput)
}

type ChannelEbuTtDDestinationSettings struct {
	CopyrightHolder *string `pulumi:"copyrightHolder"`
	FillLineGap     *string `pulumi:"fillLineGap"`
	FontFamily      *string `pulumi:"fontFamily"`
	StyleControl    *string `pulumi:"styleControl"`
}

// ChannelEbuTtDDestinationSettingsInput is an input type that accepts ChannelEbuTtDDestinationSettingsArgs and ChannelEbuTtDDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelEbuTtDDestinationSettingsInput` via:
//
//          ChannelEbuTtDDestinationSettingsArgs{...}
type ChannelEbuTtDDestinationSettingsInput interface {
	pulumi.Input

	ToChannelEbuTtDDestinationSettingsOutput() ChannelEbuTtDDestinationSettingsOutput
	ToChannelEbuTtDDestinationSettingsOutputWithContext(context.Context) ChannelEbuTtDDestinationSettingsOutput
}

type ChannelEbuTtDDestinationSettingsArgs struct {
	CopyrightHolder pulumi.StringPtrInput `pulumi:"copyrightHolder"`
	FillLineGap     pulumi.StringPtrInput `pulumi:"fillLineGap"`
	FontFamily      pulumi.StringPtrInput `pulumi:"fontFamily"`
	StyleControl    pulumi.StringPtrInput `pulumi:"styleControl"`
}

func (ChannelEbuTtDDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEbuTtDDestinationSettings)(nil)).Elem()
}

func (i ChannelEbuTtDDestinationSettingsArgs) ToChannelEbuTtDDestinationSettingsOutput() ChannelEbuTtDDestinationSettingsOutput {
	return i.ToChannelEbuTtDDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelEbuTtDDestinationSettingsArgs) ToChannelEbuTtDDestinationSettingsOutputWithContext(ctx context.Context) ChannelEbuTtDDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEbuTtDDestinationSettingsOutput)
}

func (i ChannelEbuTtDDestinationSettingsArgs) ToChannelEbuTtDDestinationSettingsPtrOutput() ChannelEbuTtDDestinationSettingsPtrOutput {
	return i.ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelEbuTtDDestinationSettingsArgs) ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEbuTtDDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEbuTtDDestinationSettingsOutput).ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelEbuTtDDestinationSettingsPtrInput is an input type that accepts ChannelEbuTtDDestinationSettingsArgs, ChannelEbuTtDDestinationSettingsPtr and ChannelEbuTtDDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelEbuTtDDestinationSettingsPtrInput` via:
//
//          ChannelEbuTtDDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelEbuTtDDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelEbuTtDDestinationSettingsPtrOutput() ChannelEbuTtDDestinationSettingsPtrOutput
	ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(context.Context) ChannelEbuTtDDestinationSettingsPtrOutput
}

type channelEbuTtDDestinationSettingsPtrType ChannelEbuTtDDestinationSettingsArgs

func ChannelEbuTtDDestinationSettingsPtr(v *ChannelEbuTtDDestinationSettingsArgs) ChannelEbuTtDDestinationSettingsPtrInput {
	return (*channelEbuTtDDestinationSettingsPtrType)(v)
}

func (*channelEbuTtDDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEbuTtDDestinationSettings)(nil)).Elem()
}

func (i *channelEbuTtDDestinationSettingsPtrType) ToChannelEbuTtDDestinationSettingsPtrOutput() ChannelEbuTtDDestinationSettingsPtrOutput {
	return i.ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelEbuTtDDestinationSettingsPtrType) ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEbuTtDDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEbuTtDDestinationSettingsPtrOutput)
}

type ChannelEbuTtDDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelEbuTtDDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEbuTtDDestinationSettings)(nil)).Elem()
}

func (o ChannelEbuTtDDestinationSettingsOutput) ToChannelEbuTtDDestinationSettingsOutput() ChannelEbuTtDDestinationSettingsOutput {
	return o
}

func (o ChannelEbuTtDDestinationSettingsOutput) ToChannelEbuTtDDestinationSettingsOutputWithContext(ctx context.Context) ChannelEbuTtDDestinationSettingsOutput {
	return o
}

func (o ChannelEbuTtDDestinationSettingsOutput) ToChannelEbuTtDDestinationSettingsPtrOutput() ChannelEbuTtDDestinationSettingsPtrOutput {
	return o.ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelEbuTtDDestinationSettingsOutput) ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEbuTtDDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelEbuTtDDestinationSettings) *ChannelEbuTtDDestinationSettings {
		return &v
	}).(ChannelEbuTtDDestinationSettingsPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsOutput) CopyrightHolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEbuTtDDestinationSettings) *string { return v.CopyrightHolder }).(pulumi.StringPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsOutput) FillLineGap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEbuTtDDestinationSettings) *string { return v.FillLineGap }).(pulumi.StringPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsOutput) FontFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEbuTtDDestinationSettings) *string { return v.FontFamily }).(pulumi.StringPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsOutput) StyleControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEbuTtDDestinationSettings) *string { return v.StyleControl }).(pulumi.StringPtrOutput)
}

type ChannelEbuTtDDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelEbuTtDDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEbuTtDDestinationSettings)(nil)).Elem()
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) ToChannelEbuTtDDestinationSettingsPtrOutput() ChannelEbuTtDDestinationSettingsPtrOutput {
	return o
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) ToChannelEbuTtDDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEbuTtDDestinationSettingsPtrOutput {
	return o
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) Elem() ChannelEbuTtDDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelEbuTtDDestinationSettings) ChannelEbuTtDDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelEbuTtDDestinationSettings
		return ret
	}).(ChannelEbuTtDDestinationSettingsOutput)
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) CopyrightHolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEbuTtDDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.CopyrightHolder
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) FillLineGap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEbuTtDDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.FillLineGap
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) FontFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEbuTtDDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.FontFamily
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEbuTtDDestinationSettingsPtrOutput) StyleControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEbuTtDDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.StyleControl
	}).(pulumi.StringPtrOutput)
}

type ChannelEmbeddedDestinationSettings struct {
}

// ChannelEmbeddedDestinationSettingsInput is an input type that accepts ChannelEmbeddedDestinationSettingsArgs and ChannelEmbeddedDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelEmbeddedDestinationSettingsInput` via:
//
//          ChannelEmbeddedDestinationSettingsArgs{...}
type ChannelEmbeddedDestinationSettingsInput interface {
	pulumi.Input

	ToChannelEmbeddedDestinationSettingsOutput() ChannelEmbeddedDestinationSettingsOutput
	ToChannelEmbeddedDestinationSettingsOutputWithContext(context.Context) ChannelEmbeddedDestinationSettingsOutput
}

type ChannelEmbeddedDestinationSettingsArgs struct {
}

func (ChannelEmbeddedDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEmbeddedDestinationSettings)(nil)).Elem()
}

func (i ChannelEmbeddedDestinationSettingsArgs) ToChannelEmbeddedDestinationSettingsOutput() ChannelEmbeddedDestinationSettingsOutput {
	return i.ToChannelEmbeddedDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelEmbeddedDestinationSettingsArgs) ToChannelEmbeddedDestinationSettingsOutputWithContext(ctx context.Context) ChannelEmbeddedDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedDestinationSettingsOutput)
}

func (i ChannelEmbeddedDestinationSettingsArgs) ToChannelEmbeddedDestinationSettingsPtrOutput() ChannelEmbeddedDestinationSettingsPtrOutput {
	return i.ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelEmbeddedDestinationSettingsArgs) ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedDestinationSettingsOutput).ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelEmbeddedDestinationSettingsPtrInput is an input type that accepts ChannelEmbeddedDestinationSettingsArgs, ChannelEmbeddedDestinationSettingsPtr and ChannelEmbeddedDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelEmbeddedDestinationSettingsPtrInput` via:
//
//          ChannelEmbeddedDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelEmbeddedDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelEmbeddedDestinationSettingsPtrOutput() ChannelEmbeddedDestinationSettingsPtrOutput
	ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(context.Context) ChannelEmbeddedDestinationSettingsPtrOutput
}

type channelEmbeddedDestinationSettingsPtrType ChannelEmbeddedDestinationSettingsArgs

func ChannelEmbeddedDestinationSettingsPtr(v *ChannelEmbeddedDestinationSettingsArgs) ChannelEmbeddedDestinationSettingsPtrInput {
	return (*channelEmbeddedDestinationSettingsPtrType)(v)
}

func (*channelEmbeddedDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEmbeddedDestinationSettings)(nil)).Elem()
}

func (i *channelEmbeddedDestinationSettingsPtrType) ToChannelEmbeddedDestinationSettingsPtrOutput() ChannelEmbeddedDestinationSettingsPtrOutput {
	return i.ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelEmbeddedDestinationSettingsPtrType) ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedDestinationSettingsPtrOutput)
}

type ChannelEmbeddedDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelEmbeddedDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEmbeddedDestinationSettings)(nil)).Elem()
}

func (o ChannelEmbeddedDestinationSettingsOutput) ToChannelEmbeddedDestinationSettingsOutput() ChannelEmbeddedDestinationSettingsOutput {
	return o
}

func (o ChannelEmbeddedDestinationSettingsOutput) ToChannelEmbeddedDestinationSettingsOutputWithContext(ctx context.Context) ChannelEmbeddedDestinationSettingsOutput {
	return o
}

func (o ChannelEmbeddedDestinationSettingsOutput) ToChannelEmbeddedDestinationSettingsPtrOutput() ChannelEmbeddedDestinationSettingsPtrOutput {
	return o.ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelEmbeddedDestinationSettingsOutput) ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelEmbeddedDestinationSettings) *ChannelEmbeddedDestinationSettings {
		return &v
	}).(ChannelEmbeddedDestinationSettingsPtrOutput)
}

type ChannelEmbeddedDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelEmbeddedDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEmbeddedDestinationSettings)(nil)).Elem()
}

func (o ChannelEmbeddedDestinationSettingsPtrOutput) ToChannelEmbeddedDestinationSettingsPtrOutput() ChannelEmbeddedDestinationSettingsPtrOutput {
	return o
}

func (o ChannelEmbeddedDestinationSettingsPtrOutput) ToChannelEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedDestinationSettingsPtrOutput {
	return o
}

func (o ChannelEmbeddedDestinationSettingsPtrOutput) Elem() ChannelEmbeddedDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelEmbeddedDestinationSettings) ChannelEmbeddedDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelEmbeddedDestinationSettings
		return ret
	}).(ChannelEmbeddedDestinationSettingsOutput)
}

type ChannelEmbeddedPlusScte20DestinationSettings struct {
}

// ChannelEmbeddedPlusScte20DestinationSettingsInput is an input type that accepts ChannelEmbeddedPlusScte20DestinationSettingsArgs and ChannelEmbeddedPlusScte20DestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelEmbeddedPlusScte20DestinationSettingsInput` via:
//
//          ChannelEmbeddedPlusScte20DestinationSettingsArgs{...}
type ChannelEmbeddedPlusScte20DestinationSettingsInput interface {
	pulumi.Input

	ToChannelEmbeddedPlusScte20DestinationSettingsOutput() ChannelEmbeddedPlusScte20DestinationSettingsOutput
	ToChannelEmbeddedPlusScte20DestinationSettingsOutputWithContext(context.Context) ChannelEmbeddedPlusScte20DestinationSettingsOutput
}

type ChannelEmbeddedPlusScte20DestinationSettingsArgs struct {
}

func (ChannelEmbeddedPlusScte20DestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEmbeddedPlusScte20DestinationSettings)(nil)).Elem()
}

func (i ChannelEmbeddedPlusScte20DestinationSettingsArgs) ToChannelEmbeddedPlusScte20DestinationSettingsOutput() ChannelEmbeddedPlusScte20DestinationSettingsOutput {
	return i.ToChannelEmbeddedPlusScte20DestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelEmbeddedPlusScte20DestinationSettingsArgs) ToChannelEmbeddedPlusScte20DestinationSettingsOutputWithContext(ctx context.Context) ChannelEmbeddedPlusScte20DestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedPlusScte20DestinationSettingsOutput)
}

func (i ChannelEmbeddedPlusScte20DestinationSettingsArgs) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutput() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return i.ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelEmbeddedPlusScte20DestinationSettingsArgs) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedPlusScte20DestinationSettingsOutput).ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelEmbeddedPlusScte20DestinationSettingsPtrInput is an input type that accepts ChannelEmbeddedPlusScte20DestinationSettingsArgs, ChannelEmbeddedPlusScte20DestinationSettingsPtr and ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelEmbeddedPlusScte20DestinationSettingsPtrInput` via:
//
//          ChannelEmbeddedPlusScte20DestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelEmbeddedPlusScte20DestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutput() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput
	ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(context.Context) ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput
}

type channelEmbeddedPlusScte20DestinationSettingsPtrType ChannelEmbeddedPlusScte20DestinationSettingsArgs

func ChannelEmbeddedPlusScte20DestinationSettingsPtr(v *ChannelEmbeddedPlusScte20DestinationSettingsArgs) ChannelEmbeddedPlusScte20DestinationSettingsPtrInput {
	return (*channelEmbeddedPlusScte20DestinationSettingsPtrType)(v)
}

func (*channelEmbeddedPlusScte20DestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEmbeddedPlusScte20DestinationSettings)(nil)).Elem()
}

func (i *channelEmbeddedPlusScte20DestinationSettingsPtrType) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutput() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return i.ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelEmbeddedPlusScte20DestinationSettingsPtrType) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput)
}

type ChannelEmbeddedPlusScte20DestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelEmbeddedPlusScte20DestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEmbeddedPlusScte20DestinationSettings)(nil)).Elem()
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsOutput) ToChannelEmbeddedPlusScte20DestinationSettingsOutput() ChannelEmbeddedPlusScte20DestinationSettingsOutput {
	return o
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsOutput) ToChannelEmbeddedPlusScte20DestinationSettingsOutputWithContext(ctx context.Context) ChannelEmbeddedPlusScte20DestinationSettingsOutput {
	return o
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsOutput) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutput() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return o.ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsOutput) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelEmbeddedPlusScte20DestinationSettings) *ChannelEmbeddedPlusScte20DestinationSettings {
		return &v
	}).(ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput)
}

type ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEmbeddedPlusScte20DestinationSettings)(nil)).Elem()
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutput() ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return o
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput) ToChannelEmbeddedPlusScte20DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput {
	return o
}

func (o ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput) Elem() ChannelEmbeddedPlusScte20DestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelEmbeddedPlusScte20DestinationSettings) ChannelEmbeddedPlusScte20DestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelEmbeddedPlusScte20DestinationSettings
		return ret
	}).(ChannelEmbeddedPlusScte20DestinationSettingsOutput)
}

type ChannelEmbeddedSourceSettings struct {
	Convert608To708        *string `pulumi:"convert608To708"`
	Scte20Detection        *string `pulumi:"scte20Detection"`
	Source608ChannelNumber *int    `pulumi:"source608ChannelNumber"`
	Source608TrackNumber   *int    `pulumi:"source608TrackNumber"`
}

// ChannelEmbeddedSourceSettingsInput is an input type that accepts ChannelEmbeddedSourceSettingsArgs and ChannelEmbeddedSourceSettingsOutput values.
// You can construct a concrete instance of `ChannelEmbeddedSourceSettingsInput` via:
//
//          ChannelEmbeddedSourceSettingsArgs{...}
type ChannelEmbeddedSourceSettingsInput interface {
	pulumi.Input

	ToChannelEmbeddedSourceSettingsOutput() ChannelEmbeddedSourceSettingsOutput
	ToChannelEmbeddedSourceSettingsOutputWithContext(context.Context) ChannelEmbeddedSourceSettingsOutput
}

type ChannelEmbeddedSourceSettingsArgs struct {
	Convert608To708        pulumi.StringPtrInput `pulumi:"convert608To708"`
	Scte20Detection        pulumi.StringPtrInput `pulumi:"scte20Detection"`
	Source608ChannelNumber pulumi.IntPtrInput    `pulumi:"source608ChannelNumber"`
	Source608TrackNumber   pulumi.IntPtrInput    `pulumi:"source608TrackNumber"`
}

func (ChannelEmbeddedSourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEmbeddedSourceSettings)(nil)).Elem()
}

func (i ChannelEmbeddedSourceSettingsArgs) ToChannelEmbeddedSourceSettingsOutput() ChannelEmbeddedSourceSettingsOutput {
	return i.ToChannelEmbeddedSourceSettingsOutputWithContext(context.Background())
}

func (i ChannelEmbeddedSourceSettingsArgs) ToChannelEmbeddedSourceSettingsOutputWithContext(ctx context.Context) ChannelEmbeddedSourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedSourceSettingsOutput)
}

func (i ChannelEmbeddedSourceSettingsArgs) ToChannelEmbeddedSourceSettingsPtrOutput() ChannelEmbeddedSourceSettingsPtrOutput {
	return i.ToChannelEmbeddedSourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelEmbeddedSourceSettingsArgs) ToChannelEmbeddedSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedSourceSettingsOutput).ToChannelEmbeddedSourceSettingsPtrOutputWithContext(ctx)
}

// ChannelEmbeddedSourceSettingsPtrInput is an input type that accepts ChannelEmbeddedSourceSettingsArgs, ChannelEmbeddedSourceSettingsPtr and ChannelEmbeddedSourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelEmbeddedSourceSettingsPtrInput` via:
//
//          ChannelEmbeddedSourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelEmbeddedSourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelEmbeddedSourceSettingsPtrOutput() ChannelEmbeddedSourceSettingsPtrOutput
	ToChannelEmbeddedSourceSettingsPtrOutputWithContext(context.Context) ChannelEmbeddedSourceSettingsPtrOutput
}

type channelEmbeddedSourceSettingsPtrType ChannelEmbeddedSourceSettingsArgs

func ChannelEmbeddedSourceSettingsPtr(v *ChannelEmbeddedSourceSettingsArgs) ChannelEmbeddedSourceSettingsPtrInput {
	return (*channelEmbeddedSourceSettingsPtrType)(v)
}

func (*channelEmbeddedSourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEmbeddedSourceSettings)(nil)).Elem()
}

func (i *channelEmbeddedSourceSettingsPtrType) ToChannelEmbeddedSourceSettingsPtrOutput() ChannelEmbeddedSourceSettingsPtrOutput {
	return i.ToChannelEmbeddedSourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelEmbeddedSourceSettingsPtrType) ToChannelEmbeddedSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEmbeddedSourceSettingsPtrOutput)
}

type ChannelEmbeddedSourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelEmbeddedSourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEmbeddedSourceSettings)(nil)).Elem()
}

func (o ChannelEmbeddedSourceSettingsOutput) ToChannelEmbeddedSourceSettingsOutput() ChannelEmbeddedSourceSettingsOutput {
	return o
}

func (o ChannelEmbeddedSourceSettingsOutput) ToChannelEmbeddedSourceSettingsOutputWithContext(ctx context.Context) ChannelEmbeddedSourceSettingsOutput {
	return o
}

func (o ChannelEmbeddedSourceSettingsOutput) ToChannelEmbeddedSourceSettingsPtrOutput() ChannelEmbeddedSourceSettingsPtrOutput {
	return o.ToChannelEmbeddedSourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelEmbeddedSourceSettingsOutput) ToChannelEmbeddedSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedSourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelEmbeddedSourceSettings) *ChannelEmbeddedSourceSettings {
		return &v
	}).(ChannelEmbeddedSourceSettingsPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsOutput) Convert608To708() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEmbeddedSourceSettings) *string { return v.Convert608To708 }).(pulumi.StringPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsOutput) Scte20Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelEmbeddedSourceSettings) *string { return v.Scte20Detection }).(pulumi.StringPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsOutput) Source608ChannelNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelEmbeddedSourceSettings) *int { return v.Source608ChannelNumber }).(pulumi.IntPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsOutput) Source608TrackNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelEmbeddedSourceSettings) *int { return v.Source608TrackNumber }).(pulumi.IntPtrOutput)
}

type ChannelEmbeddedSourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelEmbeddedSourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEmbeddedSourceSettings)(nil)).Elem()
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) ToChannelEmbeddedSourceSettingsPtrOutput() ChannelEmbeddedSourceSettingsPtrOutput {
	return o
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) ToChannelEmbeddedSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelEmbeddedSourceSettingsPtrOutput {
	return o
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) Elem() ChannelEmbeddedSourceSettingsOutput {
	return o.ApplyT(func(v *ChannelEmbeddedSourceSettings) ChannelEmbeddedSourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelEmbeddedSourceSettings
		return ret
	}).(ChannelEmbeddedSourceSettingsOutput)
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) Convert608To708() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEmbeddedSourceSettings) *string {
		if v == nil {
			return nil
		}
		return v.Convert608To708
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) Scte20Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelEmbeddedSourceSettings) *string {
		if v == nil {
			return nil
		}
		return v.Scte20Detection
	}).(pulumi.StringPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) Source608ChannelNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelEmbeddedSourceSettings) *int {
		if v == nil {
			return nil
		}
		return v.Source608ChannelNumber
	}).(pulumi.IntPtrOutput)
}

func (o ChannelEmbeddedSourceSettingsPtrOutput) Source608TrackNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelEmbeddedSourceSettings) *int {
		if v == nil {
			return nil
		}
		return v.Source608TrackNumber
	}).(pulumi.IntPtrOutput)
}

type ChannelEncoderSettings struct {
	AudioDescriptions           []ChannelAudioDescription           `pulumi:"audioDescriptions"`
	AvailBlanking               *ChannelAvailBlanking               `pulumi:"availBlanking"`
	AvailConfiguration          *ChannelAvailConfiguration          `pulumi:"availConfiguration"`
	BlackoutSlate               *ChannelBlackoutSlate               `pulumi:"blackoutSlate"`
	CaptionDescriptions         []ChannelCaptionDescription         `pulumi:"captionDescriptions"`
	FeatureActivations          *ChannelFeatureActivations          `pulumi:"featureActivations"`
	GlobalConfiguration         *ChannelGlobalConfiguration         `pulumi:"globalConfiguration"`
	MotionGraphicsConfiguration *ChannelMotionGraphicsConfiguration `pulumi:"motionGraphicsConfiguration"`
	NielsenConfiguration        *ChannelNielsenConfiguration        `pulumi:"nielsenConfiguration"`
	OutputGroups                []ChannelOutputGroup                `pulumi:"outputGroups"`
	TimecodeConfig              *ChannelTimecodeConfig              `pulumi:"timecodeConfig"`
	VideoDescriptions           []ChannelVideoDescription           `pulumi:"videoDescriptions"`
}

// ChannelEncoderSettingsInput is an input type that accepts ChannelEncoderSettingsArgs and ChannelEncoderSettingsOutput values.
// You can construct a concrete instance of `ChannelEncoderSettingsInput` via:
//
//          ChannelEncoderSettingsArgs{...}
type ChannelEncoderSettingsInput interface {
	pulumi.Input

	ToChannelEncoderSettingsOutput() ChannelEncoderSettingsOutput
	ToChannelEncoderSettingsOutputWithContext(context.Context) ChannelEncoderSettingsOutput
}

type ChannelEncoderSettingsArgs struct {
	AudioDescriptions           ChannelAudioDescriptionArrayInput          `pulumi:"audioDescriptions"`
	AvailBlanking               ChannelAvailBlankingPtrInput               `pulumi:"availBlanking"`
	AvailConfiguration          ChannelAvailConfigurationPtrInput          `pulumi:"availConfiguration"`
	BlackoutSlate               ChannelBlackoutSlatePtrInput               `pulumi:"blackoutSlate"`
	CaptionDescriptions         ChannelCaptionDescriptionArrayInput        `pulumi:"captionDescriptions"`
	FeatureActivations          ChannelFeatureActivationsPtrInput          `pulumi:"featureActivations"`
	GlobalConfiguration         ChannelGlobalConfigurationPtrInput         `pulumi:"globalConfiguration"`
	MotionGraphicsConfiguration ChannelMotionGraphicsConfigurationPtrInput `pulumi:"motionGraphicsConfiguration"`
	NielsenConfiguration        ChannelNielsenConfigurationPtrInput        `pulumi:"nielsenConfiguration"`
	OutputGroups                ChannelOutputGroupArrayInput               `pulumi:"outputGroups"`
	TimecodeConfig              ChannelTimecodeConfigPtrInput              `pulumi:"timecodeConfig"`
	VideoDescriptions           ChannelVideoDescriptionArrayInput          `pulumi:"videoDescriptions"`
}

func (ChannelEncoderSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEncoderSettings)(nil)).Elem()
}

func (i ChannelEncoderSettingsArgs) ToChannelEncoderSettingsOutput() ChannelEncoderSettingsOutput {
	return i.ToChannelEncoderSettingsOutputWithContext(context.Background())
}

func (i ChannelEncoderSettingsArgs) ToChannelEncoderSettingsOutputWithContext(ctx context.Context) ChannelEncoderSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEncoderSettingsOutput)
}

func (i ChannelEncoderSettingsArgs) ToChannelEncoderSettingsPtrOutput() ChannelEncoderSettingsPtrOutput {
	return i.ToChannelEncoderSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelEncoderSettingsArgs) ToChannelEncoderSettingsPtrOutputWithContext(ctx context.Context) ChannelEncoderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEncoderSettingsOutput).ToChannelEncoderSettingsPtrOutputWithContext(ctx)
}

// ChannelEncoderSettingsPtrInput is an input type that accepts ChannelEncoderSettingsArgs, ChannelEncoderSettingsPtr and ChannelEncoderSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelEncoderSettingsPtrInput` via:
//
//          ChannelEncoderSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelEncoderSettingsPtrInput interface {
	pulumi.Input

	ToChannelEncoderSettingsPtrOutput() ChannelEncoderSettingsPtrOutput
	ToChannelEncoderSettingsPtrOutputWithContext(context.Context) ChannelEncoderSettingsPtrOutput
}

type channelEncoderSettingsPtrType ChannelEncoderSettingsArgs

func ChannelEncoderSettingsPtr(v *ChannelEncoderSettingsArgs) ChannelEncoderSettingsPtrInput {
	return (*channelEncoderSettingsPtrType)(v)
}

func (*channelEncoderSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEncoderSettings)(nil)).Elem()
}

func (i *channelEncoderSettingsPtrType) ToChannelEncoderSettingsPtrOutput() ChannelEncoderSettingsPtrOutput {
	return i.ToChannelEncoderSettingsPtrOutputWithContext(context.Background())
}

func (i *channelEncoderSettingsPtrType) ToChannelEncoderSettingsPtrOutputWithContext(ctx context.Context) ChannelEncoderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelEncoderSettingsPtrOutput)
}

type ChannelEncoderSettingsOutput struct{ *pulumi.OutputState }

func (ChannelEncoderSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelEncoderSettings)(nil)).Elem()
}

func (o ChannelEncoderSettingsOutput) ToChannelEncoderSettingsOutput() ChannelEncoderSettingsOutput {
	return o
}

func (o ChannelEncoderSettingsOutput) ToChannelEncoderSettingsOutputWithContext(ctx context.Context) ChannelEncoderSettingsOutput {
	return o
}

func (o ChannelEncoderSettingsOutput) ToChannelEncoderSettingsPtrOutput() ChannelEncoderSettingsPtrOutput {
	return o.ToChannelEncoderSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelEncoderSettingsOutput) ToChannelEncoderSettingsPtrOutputWithContext(ctx context.Context) ChannelEncoderSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelEncoderSettings) *ChannelEncoderSettings {
		return &v
	}).(ChannelEncoderSettingsPtrOutput)
}

func (o ChannelEncoderSettingsOutput) AudioDescriptions() ChannelAudioDescriptionArrayOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) []ChannelAudioDescription { return v.AudioDescriptions }).(ChannelAudioDescriptionArrayOutput)
}

func (o ChannelEncoderSettingsOutput) AvailBlanking() ChannelAvailBlankingPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelAvailBlanking { return v.AvailBlanking }).(ChannelAvailBlankingPtrOutput)
}

func (o ChannelEncoderSettingsOutput) AvailConfiguration() ChannelAvailConfigurationPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelAvailConfiguration { return v.AvailConfiguration }).(ChannelAvailConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsOutput) BlackoutSlate() ChannelBlackoutSlatePtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelBlackoutSlate { return v.BlackoutSlate }).(ChannelBlackoutSlatePtrOutput)
}

func (o ChannelEncoderSettingsOutput) CaptionDescriptions() ChannelCaptionDescriptionArrayOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) []ChannelCaptionDescription { return v.CaptionDescriptions }).(ChannelCaptionDescriptionArrayOutput)
}

func (o ChannelEncoderSettingsOutput) FeatureActivations() ChannelFeatureActivationsPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelFeatureActivations { return v.FeatureActivations }).(ChannelFeatureActivationsPtrOutput)
}

func (o ChannelEncoderSettingsOutput) GlobalConfiguration() ChannelGlobalConfigurationPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelGlobalConfiguration { return v.GlobalConfiguration }).(ChannelGlobalConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsOutput) MotionGraphicsConfiguration() ChannelMotionGraphicsConfigurationPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelMotionGraphicsConfiguration {
		return v.MotionGraphicsConfiguration
	}).(ChannelMotionGraphicsConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsOutput) NielsenConfiguration() ChannelNielsenConfigurationPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelNielsenConfiguration { return v.NielsenConfiguration }).(ChannelNielsenConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsOutput) OutputGroups() ChannelOutputGroupArrayOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) []ChannelOutputGroup { return v.OutputGroups }).(ChannelOutputGroupArrayOutput)
}

func (o ChannelEncoderSettingsOutput) TimecodeConfig() ChannelTimecodeConfigPtrOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) *ChannelTimecodeConfig { return v.TimecodeConfig }).(ChannelTimecodeConfigPtrOutput)
}

func (o ChannelEncoderSettingsOutput) VideoDescriptions() ChannelVideoDescriptionArrayOutput {
	return o.ApplyT(func(v ChannelEncoderSettings) []ChannelVideoDescription { return v.VideoDescriptions }).(ChannelVideoDescriptionArrayOutput)
}

type ChannelEncoderSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelEncoderSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelEncoderSettings)(nil)).Elem()
}

func (o ChannelEncoderSettingsPtrOutput) ToChannelEncoderSettingsPtrOutput() ChannelEncoderSettingsPtrOutput {
	return o
}

func (o ChannelEncoderSettingsPtrOutput) ToChannelEncoderSettingsPtrOutputWithContext(ctx context.Context) ChannelEncoderSettingsPtrOutput {
	return o
}

func (o ChannelEncoderSettingsPtrOutput) Elem() ChannelEncoderSettingsOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) ChannelEncoderSettings {
		if v != nil {
			return *v
		}
		var ret ChannelEncoderSettings
		return ret
	}).(ChannelEncoderSettingsOutput)
}

func (o ChannelEncoderSettingsPtrOutput) AudioDescriptions() ChannelAudioDescriptionArrayOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) []ChannelAudioDescription {
		if v == nil {
			return nil
		}
		return v.AudioDescriptions
	}).(ChannelAudioDescriptionArrayOutput)
}

func (o ChannelEncoderSettingsPtrOutput) AvailBlanking() ChannelAvailBlankingPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelAvailBlanking {
		if v == nil {
			return nil
		}
		return v.AvailBlanking
	}).(ChannelAvailBlankingPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) AvailConfiguration() ChannelAvailConfigurationPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelAvailConfiguration {
		if v == nil {
			return nil
		}
		return v.AvailConfiguration
	}).(ChannelAvailConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) BlackoutSlate() ChannelBlackoutSlatePtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelBlackoutSlate {
		if v == nil {
			return nil
		}
		return v.BlackoutSlate
	}).(ChannelBlackoutSlatePtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) CaptionDescriptions() ChannelCaptionDescriptionArrayOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) []ChannelCaptionDescription {
		if v == nil {
			return nil
		}
		return v.CaptionDescriptions
	}).(ChannelCaptionDescriptionArrayOutput)
}

func (o ChannelEncoderSettingsPtrOutput) FeatureActivations() ChannelFeatureActivationsPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelFeatureActivations {
		if v == nil {
			return nil
		}
		return v.FeatureActivations
	}).(ChannelFeatureActivationsPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) GlobalConfiguration() ChannelGlobalConfigurationPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelGlobalConfiguration {
		if v == nil {
			return nil
		}
		return v.GlobalConfiguration
	}).(ChannelGlobalConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) MotionGraphicsConfiguration() ChannelMotionGraphicsConfigurationPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelMotionGraphicsConfiguration {
		if v == nil {
			return nil
		}
		return v.MotionGraphicsConfiguration
	}).(ChannelMotionGraphicsConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) NielsenConfiguration() ChannelNielsenConfigurationPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelNielsenConfiguration {
		if v == nil {
			return nil
		}
		return v.NielsenConfiguration
	}).(ChannelNielsenConfigurationPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) OutputGroups() ChannelOutputGroupArrayOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) []ChannelOutputGroup {
		if v == nil {
			return nil
		}
		return v.OutputGroups
	}).(ChannelOutputGroupArrayOutput)
}

func (o ChannelEncoderSettingsPtrOutput) TimecodeConfig() ChannelTimecodeConfigPtrOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) *ChannelTimecodeConfig {
		if v == nil {
			return nil
		}
		return v.TimecodeConfig
	}).(ChannelTimecodeConfigPtrOutput)
}

func (o ChannelEncoderSettingsPtrOutput) VideoDescriptions() ChannelVideoDescriptionArrayOutput {
	return o.ApplyT(func(v *ChannelEncoderSettings) []ChannelVideoDescription {
		if v == nil {
			return nil
		}
		return v.VideoDescriptions
	}).(ChannelVideoDescriptionArrayOutput)
}

type ChannelFailoverCondition struct {
	FailoverConditionSettings *ChannelFailoverConditionSettings `pulumi:"failoverConditionSettings"`
}

// ChannelFailoverConditionInput is an input type that accepts ChannelFailoverConditionArgs and ChannelFailoverConditionOutput values.
// You can construct a concrete instance of `ChannelFailoverConditionInput` via:
//
//          ChannelFailoverConditionArgs{...}
type ChannelFailoverConditionInput interface {
	pulumi.Input

	ToChannelFailoverConditionOutput() ChannelFailoverConditionOutput
	ToChannelFailoverConditionOutputWithContext(context.Context) ChannelFailoverConditionOutput
}

type ChannelFailoverConditionArgs struct {
	FailoverConditionSettings ChannelFailoverConditionSettingsPtrInput `pulumi:"failoverConditionSettings"`
}

func (ChannelFailoverConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFailoverCondition)(nil)).Elem()
}

func (i ChannelFailoverConditionArgs) ToChannelFailoverConditionOutput() ChannelFailoverConditionOutput {
	return i.ToChannelFailoverConditionOutputWithContext(context.Background())
}

func (i ChannelFailoverConditionArgs) ToChannelFailoverConditionOutputWithContext(ctx context.Context) ChannelFailoverConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFailoverConditionOutput)
}

// ChannelFailoverConditionArrayInput is an input type that accepts ChannelFailoverConditionArray and ChannelFailoverConditionArrayOutput values.
// You can construct a concrete instance of `ChannelFailoverConditionArrayInput` via:
//
//          ChannelFailoverConditionArray{ ChannelFailoverConditionArgs{...} }
type ChannelFailoverConditionArrayInput interface {
	pulumi.Input

	ToChannelFailoverConditionArrayOutput() ChannelFailoverConditionArrayOutput
	ToChannelFailoverConditionArrayOutputWithContext(context.Context) ChannelFailoverConditionArrayOutput
}

type ChannelFailoverConditionArray []ChannelFailoverConditionInput

func (ChannelFailoverConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelFailoverCondition)(nil)).Elem()
}

func (i ChannelFailoverConditionArray) ToChannelFailoverConditionArrayOutput() ChannelFailoverConditionArrayOutput {
	return i.ToChannelFailoverConditionArrayOutputWithContext(context.Background())
}

func (i ChannelFailoverConditionArray) ToChannelFailoverConditionArrayOutputWithContext(ctx context.Context) ChannelFailoverConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFailoverConditionArrayOutput)
}

type ChannelFailoverConditionOutput struct{ *pulumi.OutputState }

func (ChannelFailoverConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFailoverCondition)(nil)).Elem()
}

func (o ChannelFailoverConditionOutput) ToChannelFailoverConditionOutput() ChannelFailoverConditionOutput {
	return o
}

func (o ChannelFailoverConditionOutput) ToChannelFailoverConditionOutputWithContext(ctx context.Context) ChannelFailoverConditionOutput {
	return o
}

func (o ChannelFailoverConditionOutput) FailoverConditionSettings() ChannelFailoverConditionSettingsPtrOutput {
	return o.ApplyT(func(v ChannelFailoverCondition) *ChannelFailoverConditionSettings { return v.FailoverConditionSettings }).(ChannelFailoverConditionSettingsPtrOutput)
}

type ChannelFailoverConditionArrayOutput struct{ *pulumi.OutputState }

func (ChannelFailoverConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelFailoverCondition)(nil)).Elem()
}

func (o ChannelFailoverConditionArrayOutput) ToChannelFailoverConditionArrayOutput() ChannelFailoverConditionArrayOutput {
	return o
}

func (o ChannelFailoverConditionArrayOutput) ToChannelFailoverConditionArrayOutputWithContext(ctx context.Context) ChannelFailoverConditionArrayOutput {
	return o
}

func (o ChannelFailoverConditionArrayOutput) Index(i pulumi.IntInput) ChannelFailoverConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelFailoverCondition {
		return vs[0].([]ChannelFailoverCondition)[vs[1].(int)]
	}).(ChannelFailoverConditionOutput)
}

type ChannelFailoverConditionSettings struct {
	AudioSilenceSettings *ChannelAudioSilenceFailoverSettings `pulumi:"audioSilenceSettings"`
	InputLossSettings    *ChannelInputLossFailoverSettings    `pulumi:"inputLossSettings"`
	VideoBlackSettings   *ChannelVideoBlackFailoverSettings   `pulumi:"videoBlackSettings"`
}

// ChannelFailoverConditionSettingsInput is an input type that accepts ChannelFailoverConditionSettingsArgs and ChannelFailoverConditionSettingsOutput values.
// You can construct a concrete instance of `ChannelFailoverConditionSettingsInput` via:
//
//          ChannelFailoverConditionSettingsArgs{...}
type ChannelFailoverConditionSettingsInput interface {
	pulumi.Input

	ToChannelFailoverConditionSettingsOutput() ChannelFailoverConditionSettingsOutput
	ToChannelFailoverConditionSettingsOutputWithContext(context.Context) ChannelFailoverConditionSettingsOutput
}

type ChannelFailoverConditionSettingsArgs struct {
	AudioSilenceSettings ChannelAudioSilenceFailoverSettingsPtrInput `pulumi:"audioSilenceSettings"`
	InputLossSettings    ChannelInputLossFailoverSettingsPtrInput    `pulumi:"inputLossSettings"`
	VideoBlackSettings   ChannelVideoBlackFailoverSettingsPtrInput   `pulumi:"videoBlackSettings"`
}

func (ChannelFailoverConditionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFailoverConditionSettings)(nil)).Elem()
}

func (i ChannelFailoverConditionSettingsArgs) ToChannelFailoverConditionSettingsOutput() ChannelFailoverConditionSettingsOutput {
	return i.ToChannelFailoverConditionSettingsOutputWithContext(context.Background())
}

func (i ChannelFailoverConditionSettingsArgs) ToChannelFailoverConditionSettingsOutputWithContext(ctx context.Context) ChannelFailoverConditionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFailoverConditionSettingsOutput)
}

func (i ChannelFailoverConditionSettingsArgs) ToChannelFailoverConditionSettingsPtrOutput() ChannelFailoverConditionSettingsPtrOutput {
	return i.ToChannelFailoverConditionSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFailoverConditionSettingsArgs) ToChannelFailoverConditionSettingsPtrOutputWithContext(ctx context.Context) ChannelFailoverConditionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFailoverConditionSettingsOutput).ToChannelFailoverConditionSettingsPtrOutputWithContext(ctx)
}

// ChannelFailoverConditionSettingsPtrInput is an input type that accepts ChannelFailoverConditionSettingsArgs, ChannelFailoverConditionSettingsPtr and ChannelFailoverConditionSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFailoverConditionSettingsPtrInput` via:
//
//          ChannelFailoverConditionSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFailoverConditionSettingsPtrInput interface {
	pulumi.Input

	ToChannelFailoverConditionSettingsPtrOutput() ChannelFailoverConditionSettingsPtrOutput
	ToChannelFailoverConditionSettingsPtrOutputWithContext(context.Context) ChannelFailoverConditionSettingsPtrOutput
}

type channelFailoverConditionSettingsPtrType ChannelFailoverConditionSettingsArgs

func ChannelFailoverConditionSettingsPtr(v *ChannelFailoverConditionSettingsArgs) ChannelFailoverConditionSettingsPtrInput {
	return (*channelFailoverConditionSettingsPtrType)(v)
}

func (*channelFailoverConditionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFailoverConditionSettings)(nil)).Elem()
}

func (i *channelFailoverConditionSettingsPtrType) ToChannelFailoverConditionSettingsPtrOutput() ChannelFailoverConditionSettingsPtrOutput {
	return i.ToChannelFailoverConditionSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFailoverConditionSettingsPtrType) ToChannelFailoverConditionSettingsPtrOutputWithContext(ctx context.Context) ChannelFailoverConditionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFailoverConditionSettingsPtrOutput)
}

type ChannelFailoverConditionSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFailoverConditionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFailoverConditionSettings)(nil)).Elem()
}

func (o ChannelFailoverConditionSettingsOutput) ToChannelFailoverConditionSettingsOutput() ChannelFailoverConditionSettingsOutput {
	return o
}

func (o ChannelFailoverConditionSettingsOutput) ToChannelFailoverConditionSettingsOutputWithContext(ctx context.Context) ChannelFailoverConditionSettingsOutput {
	return o
}

func (o ChannelFailoverConditionSettingsOutput) ToChannelFailoverConditionSettingsPtrOutput() ChannelFailoverConditionSettingsPtrOutput {
	return o.ToChannelFailoverConditionSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFailoverConditionSettingsOutput) ToChannelFailoverConditionSettingsPtrOutputWithContext(ctx context.Context) ChannelFailoverConditionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFailoverConditionSettings) *ChannelFailoverConditionSettings {
		return &v
	}).(ChannelFailoverConditionSettingsPtrOutput)
}

func (o ChannelFailoverConditionSettingsOutput) AudioSilenceSettings() ChannelAudioSilenceFailoverSettingsPtrOutput {
	return o.ApplyT(func(v ChannelFailoverConditionSettings) *ChannelAudioSilenceFailoverSettings {
		return v.AudioSilenceSettings
	}).(ChannelAudioSilenceFailoverSettingsPtrOutput)
}

func (o ChannelFailoverConditionSettingsOutput) InputLossSettings() ChannelInputLossFailoverSettingsPtrOutput {
	return o.ApplyT(func(v ChannelFailoverConditionSettings) *ChannelInputLossFailoverSettings { return v.InputLossSettings }).(ChannelInputLossFailoverSettingsPtrOutput)
}

func (o ChannelFailoverConditionSettingsOutput) VideoBlackSettings() ChannelVideoBlackFailoverSettingsPtrOutput {
	return o.ApplyT(func(v ChannelFailoverConditionSettings) *ChannelVideoBlackFailoverSettings {
		return v.VideoBlackSettings
	}).(ChannelVideoBlackFailoverSettingsPtrOutput)
}

type ChannelFailoverConditionSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFailoverConditionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFailoverConditionSettings)(nil)).Elem()
}

func (o ChannelFailoverConditionSettingsPtrOutput) ToChannelFailoverConditionSettingsPtrOutput() ChannelFailoverConditionSettingsPtrOutput {
	return o
}

func (o ChannelFailoverConditionSettingsPtrOutput) ToChannelFailoverConditionSettingsPtrOutputWithContext(ctx context.Context) ChannelFailoverConditionSettingsPtrOutput {
	return o
}

func (o ChannelFailoverConditionSettingsPtrOutput) Elem() ChannelFailoverConditionSettingsOutput {
	return o.ApplyT(func(v *ChannelFailoverConditionSettings) ChannelFailoverConditionSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFailoverConditionSettings
		return ret
	}).(ChannelFailoverConditionSettingsOutput)
}

func (o ChannelFailoverConditionSettingsPtrOutput) AudioSilenceSettings() ChannelAudioSilenceFailoverSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelFailoverConditionSettings) *ChannelAudioSilenceFailoverSettings {
		if v == nil {
			return nil
		}
		return v.AudioSilenceSettings
	}).(ChannelAudioSilenceFailoverSettingsPtrOutput)
}

func (o ChannelFailoverConditionSettingsPtrOutput) InputLossSettings() ChannelInputLossFailoverSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelFailoverConditionSettings) *ChannelInputLossFailoverSettings {
		if v == nil {
			return nil
		}
		return v.InputLossSettings
	}).(ChannelInputLossFailoverSettingsPtrOutput)
}

func (o ChannelFailoverConditionSettingsPtrOutput) VideoBlackSettings() ChannelVideoBlackFailoverSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelFailoverConditionSettings) *ChannelVideoBlackFailoverSettings {
		if v == nil {
			return nil
		}
		return v.VideoBlackSettings
	}).(ChannelVideoBlackFailoverSettingsPtrOutput)
}

type ChannelFeatureActivations struct {
	InputPrepareScheduleActions *string `pulumi:"inputPrepareScheduleActions"`
}

// ChannelFeatureActivationsInput is an input type that accepts ChannelFeatureActivationsArgs and ChannelFeatureActivationsOutput values.
// You can construct a concrete instance of `ChannelFeatureActivationsInput` via:
//
//          ChannelFeatureActivationsArgs{...}
type ChannelFeatureActivationsInput interface {
	pulumi.Input

	ToChannelFeatureActivationsOutput() ChannelFeatureActivationsOutput
	ToChannelFeatureActivationsOutputWithContext(context.Context) ChannelFeatureActivationsOutput
}

type ChannelFeatureActivationsArgs struct {
	InputPrepareScheduleActions pulumi.StringPtrInput `pulumi:"inputPrepareScheduleActions"`
}

func (ChannelFeatureActivationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFeatureActivations)(nil)).Elem()
}

func (i ChannelFeatureActivationsArgs) ToChannelFeatureActivationsOutput() ChannelFeatureActivationsOutput {
	return i.ToChannelFeatureActivationsOutputWithContext(context.Background())
}

func (i ChannelFeatureActivationsArgs) ToChannelFeatureActivationsOutputWithContext(ctx context.Context) ChannelFeatureActivationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFeatureActivationsOutput)
}

func (i ChannelFeatureActivationsArgs) ToChannelFeatureActivationsPtrOutput() ChannelFeatureActivationsPtrOutput {
	return i.ToChannelFeatureActivationsPtrOutputWithContext(context.Background())
}

func (i ChannelFeatureActivationsArgs) ToChannelFeatureActivationsPtrOutputWithContext(ctx context.Context) ChannelFeatureActivationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFeatureActivationsOutput).ToChannelFeatureActivationsPtrOutputWithContext(ctx)
}

// ChannelFeatureActivationsPtrInput is an input type that accepts ChannelFeatureActivationsArgs, ChannelFeatureActivationsPtr and ChannelFeatureActivationsPtrOutput values.
// You can construct a concrete instance of `ChannelFeatureActivationsPtrInput` via:
//
//          ChannelFeatureActivationsArgs{...}
//
//  or:
//
//          nil
type ChannelFeatureActivationsPtrInput interface {
	pulumi.Input

	ToChannelFeatureActivationsPtrOutput() ChannelFeatureActivationsPtrOutput
	ToChannelFeatureActivationsPtrOutputWithContext(context.Context) ChannelFeatureActivationsPtrOutput
}

type channelFeatureActivationsPtrType ChannelFeatureActivationsArgs

func ChannelFeatureActivationsPtr(v *ChannelFeatureActivationsArgs) ChannelFeatureActivationsPtrInput {
	return (*channelFeatureActivationsPtrType)(v)
}

func (*channelFeatureActivationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFeatureActivations)(nil)).Elem()
}

func (i *channelFeatureActivationsPtrType) ToChannelFeatureActivationsPtrOutput() ChannelFeatureActivationsPtrOutput {
	return i.ToChannelFeatureActivationsPtrOutputWithContext(context.Background())
}

func (i *channelFeatureActivationsPtrType) ToChannelFeatureActivationsPtrOutputWithContext(ctx context.Context) ChannelFeatureActivationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFeatureActivationsPtrOutput)
}

type ChannelFeatureActivationsOutput struct{ *pulumi.OutputState }

func (ChannelFeatureActivationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFeatureActivations)(nil)).Elem()
}

func (o ChannelFeatureActivationsOutput) ToChannelFeatureActivationsOutput() ChannelFeatureActivationsOutput {
	return o
}

func (o ChannelFeatureActivationsOutput) ToChannelFeatureActivationsOutputWithContext(ctx context.Context) ChannelFeatureActivationsOutput {
	return o
}

func (o ChannelFeatureActivationsOutput) ToChannelFeatureActivationsPtrOutput() ChannelFeatureActivationsPtrOutput {
	return o.ToChannelFeatureActivationsPtrOutputWithContext(context.Background())
}

func (o ChannelFeatureActivationsOutput) ToChannelFeatureActivationsPtrOutputWithContext(ctx context.Context) ChannelFeatureActivationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFeatureActivations) *ChannelFeatureActivations {
		return &v
	}).(ChannelFeatureActivationsPtrOutput)
}

func (o ChannelFeatureActivationsOutput) InputPrepareScheduleActions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFeatureActivations) *string { return v.InputPrepareScheduleActions }).(pulumi.StringPtrOutput)
}

type ChannelFeatureActivationsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFeatureActivationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFeatureActivations)(nil)).Elem()
}

func (o ChannelFeatureActivationsPtrOutput) ToChannelFeatureActivationsPtrOutput() ChannelFeatureActivationsPtrOutput {
	return o
}

func (o ChannelFeatureActivationsPtrOutput) ToChannelFeatureActivationsPtrOutputWithContext(ctx context.Context) ChannelFeatureActivationsPtrOutput {
	return o
}

func (o ChannelFeatureActivationsPtrOutput) Elem() ChannelFeatureActivationsOutput {
	return o.ApplyT(func(v *ChannelFeatureActivations) ChannelFeatureActivations {
		if v != nil {
			return *v
		}
		var ret ChannelFeatureActivations
		return ret
	}).(ChannelFeatureActivationsOutput)
}

func (o ChannelFeatureActivationsPtrOutput) InputPrepareScheduleActions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFeatureActivations) *string {
		if v == nil {
			return nil
		}
		return v.InputPrepareScheduleActions
	}).(pulumi.StringPtrOutput)
}

type ChannelFecOutputSettings struct {
	ColumnDepth *int    `pulumi:"columnDepth"`
	IncludeFec  *string `pulumi:"includeFec"`
	RowLength   *int    `pulumi:"rowLength"`
}

// ChannelFecOutputSettingsInput is an input type that accepts ChannelFecOutputSettingsArgs and ChannelFecOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelFecOutputSettingsInput` via:
//
//          ChannelFecOutputSettingsArgs{...}
type ChannelFecOutputSettingsInput interface {
	pulumi.Input

	ToChannelFecOutputSettingsOutput() ChannelFecOutputSettingsOutput
	ToChannelFecOutputSettingsOutputWithContext(context.Context) ChannelFecOutputSettingsOutput
}

type ChannelFecOutputSettingsArgs struct {
	ColumnDepth pulumi.IntPtrInput    `pulumi:"columnDepth"`
	IncludeFec  pulumi.StringPtrInput `pulumi:"includeFec"`
	RowLength   pulumi.IntPtrInput    `pulumi:"rowLength"`
}

func (ChannelFecOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFecOutputSettings)(nil)).Elem()
}

func (i ChannelFecOutputSettingsArgs) ToChannelFecOutputSettingsOutput() ChannelFecOutputSettingsOutput {
	return i.ToChannelFecOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelFecOutputSettingsArgs) ToChannelFecOutputSettingsOutputWithContext(ctx context.Context) ChannelFecOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFecOutputSettingsOutput)
}

func (i ChannelFecOutputSettingsArgs) ToChannelFecOutputSettingsPtrOutput() ChannelFecOutputSettingsPtrOutput {
	return i.ToChannelFecOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFecOutputSettingsArgs) ToChannelFecOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFecOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFecOutputSettingsOutput).ToChannelFecOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelFecOutputSettingsPtrInput is an input type that accepts ChannelFecOutputSettingsArgs, ChannelFecOutputSettingsPtr and ChannelFecOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFecOutputSettingsPtrInput` via:
//
//          ChannelFecOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFecOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelFecOutputSettingsPtrOutput() ChannelFecOutputSettingsPtrOutput
	ToChannelFecOutputSettingsPtrOutputWithContext(context.Context) ChannelFecOutputSettingsPtrOutput
}

type channelFecOutputSettingsPtrType ChannelFecOutputSettingsArgs

func ChannelFecOutputSettingsPtr(v *ChannelFecOutputSettingsArgs) ChannelFecOutputSettingsPtrInput {
	return (*channelFecOutputSettingsPtrType)(v)
}

func (*channelFecOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFecOutputSettings)(nil)).Elem()
}

func (i *channelFecOutputSettingsPtrType) ToChannelFecOutputSettingsPtrOutput() ChannelFecOutputSettingsPtrOutput {
	return i.ToChannelFecOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFecOutputSettingsPtrType) ToChannelFecOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFecOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFecOutputSettingsPtrOutput)
}

type ChannelFecOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFecOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFecOutputSettings)(nil)).Elem()
}

func (o ChannelFecOutputSettingsOutput) ToChannelFecOutputSettingsOutput() ChannelFecOutputSettingsOutput {
	return o
}

func (o ChannelFecOutputSettingsOutput) ToChannelFecOutputSettingsOutputWithContext(ctx context.Context) ChannelFecOutputSettingsOutput {
	return o
}

func (o ChannelFecOutputSettingsOutput) ToChannelFecOutputSettingsPtrOutput() ChannelFecOutputSettingsPtrOutput {
	return o.ToChannelFecOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFecOutputSettingsOutput) ToChannelFecOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFecOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFecOutputSettings) *ChannelFecOutputSettings {
		return &v
	}).(ChannelFecOutputSettingsPtrOutput)
}

func (o ChannelFecOutputSettingsOutput) ColumnDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelFecOutputSettings) *int { return v.ColumnDepth }).(pulumi.IntPtrOutput)
}

func (o ChannelFecOutputSettingsOutput) IncludeFec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFecOutputSettings) *string { return v.IncludeFec }).(pulumi.StringPtrOutput)
}

func (o ChannelFecOutputSettingsOutput) RowLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelFecOutputSettings) *int { return v.RowLength }).(pulumi.IntPtrOutput)
}

type ChannelFecOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFecOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFecOutputSettings)(nil)).Elem()
}

func (o ChannelFecOutputSettingsPtrOutput) ToChannelFecOutputSettingsPtrOutput() ChannelFecOutputSettingsPtrOutput {
	return o
}

func (o ChannelFecOutputSettingsPtrOutput) ToChannelFecOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFecOutputSettingsPtrOutput {
	return o
}

func (o ChannelFecOutputSettingsPtrOutput) Elem() ChannelFecOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelFecOutputSettings) ChannelFecOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFecOutputSettings
		return ret
	}).(ChannelFecOutputSettingsOutput)
}

func (o ChannelFecOutputSettingsPtrOutput) ColumnDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelFecOutputSettings) *int {
		if v == nil {
			return nil
		}
		return v.ColumnDepth
	}).(pulumi.IntPtrOutput)
}

func (o ChannelFecOutputSettingsPtrOutput) IncludeFec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFecOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.IncludeFec
	}).(pulumi.StringPtrOutput)
}

func (o ChannelFecOutputSettingsPtrOutput) RowLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelFecOutputSettings) *int {
		if v == nil {
			return nil
		}
		return v.RowLength
	}).(pulumi.IntPtrOutput)
}

type ChannelFmp4HlsSettings struct {
	AudioRenditionSets    *string `pulumi:"audioRenditionSets"`
	NielsenId3Behavior    *string `pulumi:"nielsenId3Behavior"`
	TimedMetadataBehavior *string `pulumi:"timedMetadataBehavior"`
}

// ChannelFmp4HlsSettingsInput is an input type that accepts ChannelFmp4HlsSettingsArgs and ChannelFmp4HlsSettingsOutput values.
// You can construct a concrete instance of `ChannelFmp4HlsSettingsInput` via:
//
//          ChannelFmp4HlsSettingsArgs{...}
type ChannelFmp4HlsSettingsInput interface {
	pulumi.Input

	ToChannelFmp4HlsSettingsOutput() ChannelFmp4HlsSettingsOutput
	ToChannelFmp4HlsSettingsOutputWithContext(context.Context) ChannelFmp4HlsSettingsOutput
}

type ChannelFmp4HlsSettingsArgs struct {
	AudioRenditionSets    pulumi.StringPtrInput `pulumi:"audioRenditionSets"`
	NielsenId3Behavior    pulumi.StringPtrInput `pulumi:"nielsenId3Behavior"`
	TimedMetadataBehavior pulumi.StringPtrInput `pulumi:"timedMetadataBehavior"`
}

func (ChannelFmp4HlsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFmp4HlsSettings)(nil)).Elem()
}

func (i ChannelFmp4HlsSettingsArgs) ToChannelFmp4HlsSettingsOutput() ChannelFmp4HlsSettingsOutput {
	return i.ToChannelFmp4HlsSettingsOutputWithContext(context.Background())
}

func (i ChannelFmp4HlsSettingsArgs) ToChannelFmp4HlsSettingsOutputWithContext(ctx context.Context) ChannelFmp4HlsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFmp4HlsSettingsOutput)
}

func (i ChannelFmp4HlsSettingsArgs) ToChannelFmp4HlsSettingsPtrOutput() ChannelFmp4HlsSettingsPtrOutput {
	return i.ToChannelFmp4HlsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFmp4HlsSettingsArgs) ToChannelFmp4HlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFmp4HlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFmp4HlsSettingsOutput).ToChannelFmp4HlsSettingsPtrOutputWithContext(ctx)
}

// ChannelFmp4HlsSettingsPtrInput is an input type that accepts ChannelFmp4HlsSettingsArgs, ChannelFmp4HlsSettingsPtr and ChannelFmp4HlsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFmp4HlsSettingsPtrInput` via:
//
//          ChannelFmp4HlsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFmp4HlsSettingsPtrInput interface {
	pulumi.Input

	ToChannelFmp4HlsSettingsPtrOutput() ChannelFmp4HlsSettingsPtrOutput
	ToChannelFmp4HlsSettingsPtrOutputWithContext(context.Context) ChannelFmp4HlsSettingsPtrOutput
}

type channelFmp4HlsSettingsPtrType ChannelFmp4HlsSettingsArgs

func ChannelFmp4HlsSettingsPtr(v *ChannelFmp4HlsSettingsArgs) ChannelFmp4HlsSettingsPtrInput {
	return (*channelFmp4HlsSettingsPtrType)(v)
}

func (*channelFmp4HlsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFmp4HlsSettings)(nil)).Elem()
}

func (i *channelFmp4HlsSettingsPtrType) ToChannelFmp4HlsSettingsPtrOutput() ChannelFmp4HlsSettingsPtrOutput {
	return i.ToChannelFmp4HlsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFmp4HlsSettingsPtrType) ToChannelFmp4HlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFmp4HlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFmp4HlsSettingsPtrOutput)
}

type ChannelFmp4HlsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFmp4HlsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFmp4HlsSettings)(nil)).Elem()
}

func (o ChannelFmp4HlsSettingsOutput) ToChannelFmp4HlsSettingsOutput() ChannelFmp4HlsSettingsOutput {
	return o
}

func (o ChannelFmp4HlsSettingsOutput) ToChannelFmp4HlsSettingsOutputWithContext(ctx context.Context) ChannelFmp4HlsSettingsOutput {
	return o
}

func (o ChannelFmp4HlsSettingsOutput) ToChannelFmp4HlsSettingsPtrOutput() ChannelFmp4HlsSettingsPtrOutput {
	return o.ToChannelFmp4HlsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFmp4HlsSettingsOutput) ToChannelFmp4HlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFmp4HlsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFmp4HlsSettings) *ChannelFmp4HlsSettings {
		return &v
	}).(ChannelFmp4HlsSettingsPtrOutput)
}

func (o ChannelFmp4HlsSettingsOutput) AudioRenditionSets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFmp4HlsSettings) *string { return v.AudioRenditionSets }).(pulumi.StringPtrOutput)
}

func (o ChannelFmp4HlsSettingsOutput) NielsenId3Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFmp4HlsSettings) *string { return v.NielsenId3Behavior }).(pulumi.StringPtrOutput)
}

func (o ChannelFmp4HlsSettingsOutput) TimedMetadataBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFmp4HlsSettings) *string { return v.TimedMetadataBehavior }).(pulumi.StringPtrOutput)
}

type ChannelFmp4HlsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFmp4HlsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFmp4HlsSettings)(nil)).Elem()
}

func (o ChannelFmp4HlsSettingsPtrOutput) ToChannelFmp4HlsSettingsPtrOutput() ChannelFmp4HlsSettingsPtrOutput {
	return o
}

func (o ChannelFmp4HlsSettingsPtrOutput) ToChannelFmp4HlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFmp4HlsSettingsPtrOutput {
	return o
}

func (o ChannelFmp4HlsSettingsPtrOutput) Elem() ChannelFmp4HlsSettingsOutput {
	return o.ApplyT(func(v *ChannelFmp4HlsSettings) ChannelFmp4HlsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFmp4HlsSettings
		return ret
	}).(ChannelFmp4HlsSettingsOutput)
}

func (o ChannelFmp4HlsSettingsPtrOutput) AudioRenditionSets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFmp4HlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioRenditionSets
	}).(pulumi.StringPtrOutput)
}

func (o ChannelFmp4HlsSettingsPtrOutput) NielsenId3Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFmp4HlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.NielsenId3Behavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelFmp4HlsSettingsPtrOutput) TimedMetadataBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFmp4HlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataBehavior
	}).(pulumi.StringPtrOutput)
}

type ChannelFrameCaptureCdnSettings struct {
	FrameCaptureS3Settings *ChannelFrameCaptureS3Settings `pulumi:"frameCaptureS3Settings"`
}

// ChannelFrameCaptureCdnSettingsInput is an input type that accepts ChannelFrameCaptureCdnSettingsArgs and ChannelFrameCaptureCdnSettingsOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureCdnSettingsInput` via:
//
//          ChannelFrameCaptureCdnSettingsArgs{...}
type ChannelFrameCaptureCdnSettingsInput interface {
	pulumi.Input

	ToChannelFrameCaptureCdnSettingsOutput() ChannelFrameCaptureCdnSettingsOutput
	ToChannelFrameCaptureCdnSettingsOutputWithContext(context.Context) ChannelFrameCaptureCdnSettingsOutput
}

type ChannelFrameCaptureCdnSettingsArgs struct {
	FrameCaptureS3Settings ChannelFrameCaptureS3SettingsPtrInput `pulumi:"frameCaptureS3Settings"`
}

func (ChannelFrameCaptureCdnSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureCdnSettings)(nil)).Elem()
}

func (i ChannelFrameCaptureCdnSettingsArgs) ToChannelFrameCaptureCdnSettingsOutput() ChannelFrameCaptureCdnSettingsOutput {
	return i.ToChannelFrameCaptureCdnSettingsOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureCdnSettingsArgs) ToChannelFrameCaptureCdnSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureCdnSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureCdnSettingsOutput)
}

func (i ChannelFrameCaptureCdnSettingsArgs) ToChannelFrameCaptureCdnSettingsPtrOutput() ChannelFrameCaptureCdnSettingsPtrOutput {
	return i.ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureCdnSettingsArgs) ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureCdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureCdnSettingsOutput).ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(ctx)
}

// ChannelFrameCaptureCdnSettingsPtrInput is an input type that accepts ChannelFrameCaptureCdnSettingsArgs, ChannelFrameCaptureCdnSettingsPtr and ChannelFrameCaptureCdnSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureCdnSettingsPtrInput` via:
//
//          ChannelFrameCaptureCdnSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFrameCaptureCdnSettingsPtrInput interface {
	pulumi.Input

	ToChannelFrameCaptureCdnSettingsPtrOutput() ChannelFrameCaptureCdnSettingsPtrOutput
	ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(context.Context) ChannelFrameCaptureCdnSettingsPtrOutput
}

type channelFrameCaptureCdnSettingsPtrType ChannelFrameCaptureCdnSettingsArgs

func ChannelFrameCaptureCdnSettingsPtr(v *ChannelFrameCaptureCdnSettingsArgs) ChannelFrameCaptureCdnSettingsPtrInput {
	return (*channelFrameCaptureCdnSettingsPtrType)(v)
}

func (*channelFrameCaptureCdnSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureCdnSettings)(nil)).Elem()
}

func (i *channelFrameCaptureCdnSettingsPtrType) ToChannelFrameCaptureCdnSettingsPtrOutput() ChannelFrameCaptureCdnSettingsPtrOutput {
	return i.ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFrameCaptureCdnSettingsPtrType) ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureCdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureCdnSettingsPtrOutput)
}

type ChannelFrameCaptureCdnSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureCdnSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureCdnSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureCdnSettingsOutput) ToChannelFrameCaptureCdnSettingsOutput() ChannelFrameCaptureCdnSettingsOutput {
	return o
}

func (o ChannelFrameCaptureCdnSettingsOutput) ToChannelFrameCaptureCdnSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureCdnSettingsOutput {
	return o
}

func (o ChannelFrameCaptureCdnSettingsOutput) ToChannelFrameCaptureCdnSettingsPtrOutput() ChannelFrameCaptureCdnSettingsPtrOutput {
	return o.ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFrameCaptureCdnSettingsOutput) ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureCdnSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFrameCaptureCdnSettings) *ChannelFrameCaptureCdnSettings {
		return &v
	}).(ChannelFrameCaptureCdnSettingsPtrOutput)
}

func (o ChannelFrameCaptureCdnSettingsOutput) FrameCaptureS3Settings() ChannelFrameCaptureS3SettingsPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureCdnSettings) *ChannelFrameCaptureS3Settings { return v.FrameCaptureS3Settings }).(ChannelFrameCaptureS3SettingsPtrOutput)
}

type ChannelFrameCaptureCdnSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureCdnSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureCdnSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureCdnSettingsPtrOutput) ToChannelFrameCaptureCdnSettingsPtrOutput() ChannelFrameCaptureCdnSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureCdnSettingsPtrOutput) ToChannelFrameCaptureCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureCdnSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureCdnSettingsPtrOutput) Elem() ChannelFrameCaptureCdnSettingsOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureCdnSettings) ChannelFrameCaptureCdnSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFrameCaptureCdnSettings
		return ret
	}).(ChannelFrameCaptureCdnSettingsOutput)
}

func (o ChannelFrameCaptureCdnSettingsPtrOutput) FrameCaptureS3Settings() ChannelFrameCaptureS3SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureCdnSettings) *ChannelFrameCaptureS3Settings {
		if v == nil {
			return nil
		}
		return v.FrameCaptureS3Settings
	}).(ChannelFrameCaptureS3SettingsPtrOutput)
}

type ChannelFrameCaptureGroupSettings struct {
	Destination             *ChannelOutputLocationRef       `pulumi:"destination"`
	FrameCaptureCdnSettings *ChannelFrameCaptureCdnSettings `pulumi:"frameCaptureCdnSettings"`
}

// ChannelFrameCaptureGroupSettingsInput is an input type that accepts ChannelFrameCaptureGroupSettingsArgs and ChannelFrameCaptureGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureGroupSettingsInput` via:
//
//          ChannelFrameCaptureGroupSettingsArgs{...}
type ChannelFrameCaptureGroupSettingsInput interface {
	pulumi.Input

	ToChannelFrameCaptureGroupSettingsOutput() ChannelFrameCaptureGroupSettingsOutput
	ToChannelFrameCaptureGroupSettingsOutputWithContext(context.Context) ChannelFrameCaptureGroupSettingsOutput
}

type ChannelFrameCaptureGroupSettingsArgs struct {
	Destination             ChannelOutputLocationRefPtrInput       `pulumi:"destination"`
	FrameCaptureCdnSettings ChannelFrameCaptureCdnSettingsPtrInput `pulumi:"frameCaptureCdnSettings"`
}

func (ChannelFrameCaptureGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureGroupSettings)(nil)).Elem()
}

func (i ChannelFrameCaptureGroupSettingsArgs) ToChannelFrameCaptureGroupSettingsOutput() ChannelFrameCaptureGroupSettingsOutput {
	return i.ToChannelFrameCaptureGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureGroupSettingsArgs) ToChannelFrameCaptureGroupSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureGroupSettingsOutput)
}

func (i ChannelFrameCaptureGroupSettingsArgs) ToChannelFrameCaptureGroupSettingsPtrOutput() ChannelFrameCaptureGroupSettingsPtrOutput {
	return i.ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureGroupSettingsArgs) ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureGroupSettingsOutput).ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelFrameCaptureGroupSettingsPtrInput is an input type that accepts ChannelFrameCaptureGroupSettingsArgs, ChannelFrameCaptureGroupSettingsPtr and ChannelFrameCaptureGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureGroupSettingsPtrInput` via:
//
//          ChannelFrameCaptureGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFrameCaptureGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelFrameCaptureGroupSettingsPtrOutput() ChannelFrameCaptureGroupSettingsPtrOutput
	ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(context.Context) ChannelFrameCaptureGroupSettingsPtrOutput
}

type channelFrameCaptureGroupSettingsPtrType ChannelFrameCaptureGroupSettingsArgs

func ChannelFrameCaptureGroupSettingsPtr(v *ChannelFrameCaptureGroupSettingsArgs) ChannelFrameCaptureGroupSettingsPtrInput {
	return (*channelFrameCaptureGroupSettingsPtrType)(v)
}

func (*channelFrameCaptureGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureGroupSettings)(nil)).Elem()
}

func (i *channelFrameCaptureGroupSettingsPtrType) ToChannelFrameCaptureGroupSettingsPtrOutput() ChannelFrameCaptureGroupSettingsPtrOutput {
	return i.ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFrameCaptureGroupSettingsPtrType) ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureGroupSettingsPtrOutput)
}

type ChannelFrameCaptureGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureGroupSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureGroupSettingsOutput) ToChannelFrameCaptureGroupSettingsOutput() ChannelFrameCaptureGroupSettingsOutput {
	return o
}

func (o ChannelFrameCaptureGroupSettingsOutput) ToChannelFrameCaptureGroupSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureGroupSettingsOutput {
	return o
}

func (o ChannelFrameCaptureGroupSettingsOutput) ToChannelFrameCaptureGroupSettingsPtrOutput() ChannelFrameCaptureGroupSettingsPtrOutput {
	return o.ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFrameCaptureGroupSettingsOutput) ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFrameCaptureGroupSettings) *ChannelFrameCaptureGroupSettings {
		return &v
	}).(ChannelFrameCaptureGroupSettingsPtrOutput)
}

func (o ChannelFrameCaptureGroupSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureGroupSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelFrameCaptureGroupSettingsOutput) FrameCaptureCdnSettings() ChannelFrameCaptureCdnSettingsPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureGroupSettings) *ChannelFrameCaptureCdnSettings {
		return v.FrameCaptureCdnSettings
	}).(ChannelFrameCaptureCdnSettingsPtrOutput)
}

type ChannelFrameCaptureGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureGroupSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureGroupSettingsPtrOutput) ToChannelFrameCaptureGroupSettingsPtrOutput() ChannelFrameCaptureGroupSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureGroupSettingsPtrOutput) ToChannelFrameCaptureGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureGroupSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureGroupSettingsPtrOutput) Elem() ChannelFrameCaptureGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureGroupSettings) ChannelFrameCaptureGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFrameCaptureGroupSettings
		return ret
	}).(ChannelFrameCaptureGroupSettingsOutput)
}

func (o ChannelFrameCaptureGroupSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureGroupSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelFrameCaptureGroupSettingsPtrOutput) FrameCaptureCdnSettings() ChannelFrameCaptureCdnSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureGroupSettings) *ChannelFrameCaptureCdnSettings {
		if v == nil {
			return nil
		}
		return v.FrameCaptureCdnSettings
	}).(ChannelFrameCaptureCdnSettingsPtrOutput)
}

type ChannelFrameCaptureHlsSettings struct {
}

// ChannelFrameCaptureHlsSettingsInput is an input type that accepts ChannelFrameCaptureHlsSettingsArgs and ChannelFrameCaptureHlsSettingsOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureHlsSettingsInput` via:
//
//          ChannelFrameCaptureHlsSettingsArgs{...}
type ChannelFrameCaptureHlsSettingsInput interface {
	pulumi.Input

	ToChannelFrameCaptureHlsSettingsOutput() ChannelFrameCaptureHlsSettingsOutput
	ToChannelFrameCaptureHlsSettingsOutputWithContext(context.Context) ChannelFrameCaptureHlsSettingsOutput
}

type ChannelFrameCaptureHlsSettingsArgs struct {
}

func (ChannelFrameCaptureHlsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureHlsSettings)(nil)).Elem()
}

func (i ChannelFrameCaptureHlsSettingsArgs) ToChannelFrameCaptureHlsSettingsOutput() ChannelFrameCaptureHlsSettingsOutput {
	return i.ToChannelFrameCaptureHlsSettingsOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureHlsSettingsArgs) ToChannelFrameCaptureHlsSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureHlsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureHlsSettingsOutput)
}

func (i ChannelFrameCaptureHlsSettingsArgs) ToChannelFrameCaptureHlsSettingsPtrOutput() ChannelFrameCaptureHlsSettingsPtrOutput {
	return i.ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureHlsSettingsArgs) ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureHlsSettingsOutput).ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(ctx)
}

// ChannelFrameCaptureHlsSettingsPtrInput is an input type that accepts ChannelFrameCaptureHlsSettingsArgs, ChannelFrameCaptureHlsSettingsPtr and ChannelFrameCaptureHlsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureHlsSettingsPtrInput` via:
//
//          ChannelFrameCaptureHlsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFrameCaptureHlsSettingsPtrInput interface {
	pulumi.Input

	ToChannelFrameCaptureHlsSettingsPtrOutput() ChannelFrameCaptureHlsSettingsPtrOutput
	ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(context.Context) ChannelFrameCaptureHlsSettingsPtrOutput
}

type channelFrameCaptureHlsSettingsPtrType ChannelFrameCaptureHlsSettingsArgs

func ChannelFrameCaptureHlsSettingsPtr(v *ChannelFrameCaptureHlsSettingsArgs) ChannelFrameCaptureHlsSettingsPtrInput {
	return (*channelFrameCaptureHlsSettingsPtrType)(v)
}

func (*channelFrameCaptureHlsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureHlsSettings)(nil)).Elem()
}

func (i *channelFrameCaptureHlsSettingsPtrType) ToChannelFrameCaptureHlsSettingsPtrOutput() ChannelFrameCaptureHlsSettingsPtrOutput {
	return i.ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFrameCaptureHlsSettingsPtrType) ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureHlsSettingsPtrOutput)
}

type ChannelFrameCaptureHlsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureHlsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureHlsSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureHlsSettingsOutput) ToChannelFrameCaptureHlsSettingsOutput() ChannelFrameCaptureHlsSettingsOutput {
	return o
}

func (o ChannelFrameCaptureHlsSettingsOutput) ToChannelFrameCaptureHlsSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureHlsSettingsOutput {
	return o
}

func (o ChannelFrameCaptureHlsSettingsOutput) ToChannelFrameCaptureHlsSettingsPtrOutput() ChannelFrameCaptureHlsSettingsPtrOutput {
	return o.ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFrameCaptureHlsSettingsOutput) ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureHlsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFrameCaptureHlsSettings) *ChannelFrameCaptureHlsSettings {
		return &v
	}).(ChannelFrameCaptureHlsSettingsPtrOutput)
}

type ChannelFrameCaptureHlsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureHlsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureHlsSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureHlsSettingsPtrOutput) ToChannelFrameCaptureHlsSettingsPtrOutput() ChannelFrameCaptureHlsSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureHlsSettingsPtrOutput) ToChannelFrameCaptureHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureHlsSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureHlsSettingsPtrOutput) Elem() ChannelFrameCaptureHlsSettingsOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureHlsSettings) ChannelFrameCaptureHlsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFrameCaptureHlsSettings
		return ret
	}).(ChannelFrameCaptureHlsSettingsOutput)
}

type ChannelFrameCaptureOutputSettings struct {
	NameModifier *string `pulumi:"nameModifier"`
}

// ChannelFrameCaptureOutputSettingsInput is an input type that accepts ChannelFrameCaptureOutputSettingsArgs and ChannelFrameCaptureOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureOutputSettingsInput` via:
//
//          ChannelFrameCaptureOutputSettingsArgs{...}
type ChannelFrameCaptureOutputSettingsInput interface {
	pulumi.Input

	ToChannelFrameCaptureOutputSettingsOutput() ChannelFrameCaptureOutputSettingsOutput
	ToChannelFrameCaptureOutputSettingsOutputWithContext(context.Context) ChannelFrameCaptureOutputSettingsOutput
}

type ChannelFrameCaptureOutputSettingsArgs struct {
	NameModifier pulumi.StringPtrInput `pulumi:"nameModifier"`
}

func (ChannelFrameCaptureOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureOutputSettings)(nil)).Elem()
}

func (i ChannelFrameCaptureOutputSettingsArgs) ToChannelFrameCaptureOutputSettingsOutput() ChannelFrameCaptureOutputSettingsOutput {
	return i.ToChannelFrameCaptureOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureOutputSettingsArgs) ToChannelFrameCaptureOutputSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureOutputSettingsOutput)
}

func (i ChannelFrameCaptureOutputSettingsArgs) ToChannelFrameCaptureOutputSettingsPtrOutput() ChannelFrameCaptureOutputSettingsPtrOutput {
	return i.ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureOutputSettingsArgs) ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureOutputSettingsOutput).ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelFrameCaptureOutputSettingsPtrInput is an input type that accepts ChannelFrameCaptureOutputSettingsArgs, ChannelFrameCaptureOutputSettingsPtr and ChannelFrameCaptureOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureOutputSettingsPtrInput` via:
//
//          ChannelFrameCaptureOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFrameCaptureOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelFrameCaptureOutputSettingsPtrOutput() ChannelFrameCaptureOutputSettingsPtrOutput
	ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(context.Context) ChannelFrameCaptureOutputSettingsPtrOutput
}

type channelFrameCaptureOutputSettingsPtrType ChannelFrameCaptureOutputSettingsArgs

func ChannelFrameCaptureOutputSettingsPtr(v *ChannelFrameCaptureOutputSettingsArgs) ChannelFrameCaptureOutputSettingsPtrInput {
	return (*channelFrameCaptureOutputSettingsPtrType)(v)
}

func (*channelFrameCaptureOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureOutputSettings)(nil)).Elem()
}

func (i *channelFrameCaptureOutputSettingsPtrType) ToChannelFrameCaptureOutputSettingsPtrOutput() ChannelFrameCaptureOutputSettingsPtrOutput {
	return i.ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFrameCaptureOutputSettingsPtrType) ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureOutputSettingsPtrOutput)
}

type ChannelFrameCaptureOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureOutputSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureOutputSettingsOutput) ToChannelFrameCaptureOutputSettingsOutput() ChannelFrameCaptureOutputSettingsOutput {
	return o
}

func (o ChannelFrameCaptureOutputSettingsOutput) ToChannelFrameCaptureOutputSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureOutputSettingsOutput {
	return o
}

func (o ChannelFrameCaptureOutputSettingsOutput) ToChannelFrameCaptureOutputSettingsPtrOutput() ChannelFrameCaptureOutputSettingsPtrOutput {
	return o.ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFrameCaptureOutputSettingsOutput) ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFrameCaptureOutputSettings) *ChannelFrameCaptureOutputSettings {
		return &v
	}).(ChannelFrameCaptureOutputSettingsPtrOutput)
}

func (o ChannelFrameCaptureOutputSettingsOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureOutputSettings) *string { return v.NameModifier }).(pulumi.StringPtrOutput)
}

type ChannelFrameCaptureOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureOutputSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureOutputSettingsPtrOutput) ToChannelFrameCaptureOutputSettingsPtrOutput() ChannelFrameCaptureOutputSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureOutputSettingsPtrOutput) ToChannelFrameCaptureOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureOutputSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureOutputSettingsPtrOutput) Elem() ChannelFrameCaptureOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureOutputSettings) ChannelFrameCaptureOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFrameCaptureOutputSettings
		return ret
	}).(ChannelFrameCaptureOutputSettingsOutput)
}

func (o ChannelFrameCaptureOutputSettingsPtrOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.NameModifier
	}).(pulumi.StringPtrOutput)
}

type ChannelFrameCaptureS3Settings struct {
	CannedAcl *string `pulumi:"cannedAcl"`
}

// ChannelFrameCaptureS3SettingsInput is an input type that accepts ChannelFrameCaptureS3SettingsArgs and ChannelFrameCaptureS3SettingsOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureS3SettingsInput` via:
//
//          ChannelFrameCaptureS3SettingsArgs{...}
type ChannelFrameCaptureS3SettingsInput interface {
	pulumi.Input

	ToChannelFrameCaptureS3SettingsOutput() ChannelFrameCaptureS3SettingsOutput
	ToChannelFrameCaptureS3SettingsOutputWithContext(context.Context) ChannelFrameCaptureS3SettingsOutput
}

type ChannelFrameCaptureS3SettingsArgs struct {
	CannedAcl pulumi.StringPtrInput `pulumi:"cannedAcl"`
}

func (ChannelFrameCaptureS3SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureS3Settings)(nil)).Elem()
}

func (i ChannelFrameCaptureS3SettingsArgs) ToChannelFrameCaptureS3SettingsOutput() ChannelFrameCaptureS3SettingsOutput {
	return i.ToChannelFrameCaptureS3SettingsOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureS3SettingsArgs) ToChannelFrameCaptureS3SettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureS3SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureS3SettingsOutput)
}

func (i ChannelFrameCaptureS3SettingsArgs) ToChannelFrameCaptureS3SettingsPtrOutput() ChannelFrameCaptureS3SettingsPtrOutput {
	return i.ToChannelFrameCaptureS3SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureS3SettingsArgs) ToChannelFrameCaptureS3SettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureS3SettingsOutput).ToChannelFrameCaptureS3SettingsPtrOutputWithContext(ctx)
}

// ChannelFrameCaptureS3SettingsPtrInput is an input type that accepts ChannelFrameCaptureS3SettingsArgs, ChannelFrameCaptureS3SettingsPtr and ChannelFrameCaptureS3SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureS3SettingsPtrInput` via:
//
//          ChannelFrameCaptureS3SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFrameCaptureS3SettingsPtrInput interface {
	pulumi.Input

	ToChannelFrameCaptureS3SettingsPtrOutput() ChannelFrameCaptureS3SettingsPtrOutput
	ToChannelFrameCaptureS3SettingsPtrOutputWithContext(context.Context) ChannelFrameCaptureS3SettingsPtrOutput
}

type channelFrameCaptureS3SettingsPtrType ChannelFrameCaptureS3SettingsArgs

func ChannelFrameCaptureS3SettingsPtr(v *ChannelFrameCaptureS3SettingsArgs) ChannelFrameCaptureS3SettingsPtrInput {
	return (*channelFrameCaptureS3SettingsPtrType)(v)
}

func (*channelFrameCaptureS3SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureS3Settings)(nil)).Elem()
}

func (i *channelFrameCaptureS3SettingsPtrType) ToChannelFrameCaptureS3SettingsPtrOutput() ChannelFrameCaptureS3SettingsPtrOutput {
	return i.ToChannelFrameCaptureS3SettingsPtrOutputWithContext(context.Background())
}

func (i *channelFrameCaptureS3SettingsPtrType) ToChannelFrameCaptureS3SettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureS3SettingsPtrOutput)
}

type ChannelFrameCaptureS3SettingsOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureS3SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureS3Settings)(nil)).Elem()
}

func (o ChannelFrameCaptureS3SettingsOutput) ToChannelFrameCaptureS3SettingsOutput() ChannelFrameCaptureS3SettingsOutput {
	return o
}

func (o ChannelFrameCaptureS3SettingsOutput) ToChannelFrameCaptureS3SettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureS3SettingsOutput {
	return o
}

func (o ChannelFrameCaptureS3SettingsOutput) ToChannelFrameCaptureS3SettingsPtrOutput() ChannelFrameCaptureS3SettingsPtrOutput {
	return o.ToChannelFrameCaptureS3SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFrameCaptureS3SettingsOutput) ToChannelFrameCaptureS3SettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureS3SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFrameCaptureS3Settings) *ChannelFrameCaptureS3Settings {
		return &v
	}).(ChannelFrameCaptureS3SettingsPtrOutput)
}

func (o ChannelFrameCaptureS3SettingsOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureS3Settings) *string { return v.CannedAcl }).(pulumi.StringPtrOutput)
}

type ChannelFrameCaptureS3SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureS3SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureS3Settings)(nil)).Elem()
}

func (o ChannelFrameCaptureS3SettingsPtrOutput) ToChannelFrameCaptureS3SettingsPtrOutput() ChannelFrameCaptureS3SettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureS3SettingsPtrOutput) ToChannelFrameCaptureS3SettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureS3SettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureS3SettingsPtrOutput) Elem() ChannelFrameCaptureS3SettingsOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureS3Settings) ChannelFrameCaptureS3Settings {
		if v != nil {
			return *v
		}
		var ret ChannelFrameCaptureS3Settings
		return ret
	}).(ChannelFrameCaptureS3SettingsOutput)
}

func (o ChannelFrameCaptureS3SettingsPtrOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CannedAcl
	}).(pulumi.StringPtrOutput)
}

type ChannelFrameCaptureSettings struct {
	CaptureInterval      *int    `pulumi:"captureInterval"`
	CaptureIntervalUnits *string `pulumi:"captureIntervalUnits"`
}

// ChannelFrameCaptureSettingsInput is an input type that accepts ChannelFrameCaptureSettingsArgs and ChannelFrameCaptureSettingsOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureSettingsInput` via:
//
//          ChannelFrameCaptureSettingsArgs{...}
type ChannelFrameCaptureSettingsInput interface {
	pulumi.Input

	ToChannelFrameCaptureSettingsOutput() ChannelFrameCaptureSettingsOutput
	ToChannelFrameCaptureSettingsOutputWithContext(context.Context) ChannelFrameCaptureSettingsOutput
}

type ChannelFrameCaptureSettingsArgs struct {
	CaptureInterval      pulumi.IntPtrInput    `pulumi:"captureInterval"`
	CaptureIntervalUnits pulumi.StringPtrInput `pulumi:"captureIntervalUnits"`
}

func (ChannelFrameCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureSettings)(nil)).Elem()
}

func (i ChannelFrameCaptureSettingsArgs) ToChannelFrameCaptureSettingsOutput() ChannelFrameCaptureSettingsOutput {
	return i.ToChannelFrameCaptureSettingsOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureSettingsArgs) ToChannelFrameCaptureSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureSettingsOutput)
}

func (i ChannelFrameCaptureSettingsArgs) ToChannelFrameCaptureSettingsPtrOutput() ChannelFrameCaptureSettingsPtrOutput {
	return i.ToChannelFrameCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelFrameCaptureSettingsArgs) ToChannelFrameCaptureSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureSettingsOutput).ToChannelFrameCaptureSettingsPtrOutputWithContext(ctx)
}

// ChannelFrameCaptureSettingsPtrInput is an input type that accepts ChannelFrameCaptureSettingsArgs, ChannelFrameCaptureSettingsPtr and ChannelFrameCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelFrameCaptureSettingsPtrInput` via:
//
//          ChannelFrameCaptureSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelFrameCaptureSettingsPtrInput interface {
	pulumi.Input

	ToChannelFrameCaptureSettingsPtrOutput() ChannelFrameCaptureSettingsPtrOutput
	ToChannelFrameCaptureSettingsPtrOutputWithContext(context.Context) ChannelFrameCaptureSettingsPtrOutput
}

type channelFrameCaptureSettingsPtrType ChannelFrameCaptureSettingsArgs

func ChannelFrameCaptureSettingsPtr(v *ChannelFrameCaptureSettingsArgs) ChannelFrameCaptureSettingsPtrInput {
	return (*channelFrameCaptureSettingsPtrType)(v)
}

func (*channelFrameCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureSettings)(nil)).Elem()
}

func (i *channelFrameCaptureSettingsPtrType) ToChannelFrameCaptureSettingsPtrOutput() ChannelFrameCaptureSettingsPtrOutput {
	return i.ToChannelFrameCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *channelFrameCaptureSettingsPtrType) ToChannelFrameCaptureSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFrameCaptureSettingsPtrOutput)
}

type ChannelFrameCaptureSettingsOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelFrameCaptureSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureSettingsOutput) ToChannelFrameCaptureSettingsOutput() ChannelFrameCaptureSettingsOutput {
	return o
}

func (o ChannelFrameCaptureSettingsOutput) ToChannelFrameCaptureSettingsOutputWithContext(ctx context.Context) ChannelFrameCaptureSettingsOutput {
	return o
}

func (o ChannelFrameCaptureSettingsOutput) ToChannelFrameCaptureSettingsPtrOutput() ChannelFrameCaptureSettingsPtrOutput {
	return o.ToChannelFrameCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelFrameCaptureSettingsOutput) ToChannelFrameCaptureSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelFrameCaptureSettings) *ChannelFrameCaptureSettings {
		return &v
	}).(ChannelFrameCaptureSettingsPtrOutput)
}

func (o ChannelFrameCaptureSettingsOutput) CaptureInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureSettings) *int { return v.CaptureInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelFrameCaptureSettingsOutput) CaptureIntervalUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelFrameCaptureSettings) *string { return v.CaptureIntervalUnits }).(pulumi.StringPtrOutput)
}

type ChannelFrameCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelFrameCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFrameCaptureSettings)(nil)).Elem()
}

func (o ChannelFrameCaptureSettingsPtrOutput) ToChannelFrameCaptureSettingsPtrOutput() ChannelFrameCaptureSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureSettingsPtrOutput) ToChannelFrameCaptureSettingsPtrOutputWithContext(ctx context.Context) ChannelFrameCaptureSettingsPtrOutput {
	return o
}

func (o ChannelFrameCaptureSettingsPtrOutput) Elem() ChannelFrameCaptureSettingsOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureSettings) ChannelFrameCaptureSettings {
		if v != nil {
			return *v
		}
		var ret ChannelFrameCaptureSettings
		return ret
	}).(ChannelFrameCaptureSettingsOutput)
}

func (o ChannelFrameCaptureSettingsPtrOutput) CaptureInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureSettings) *int {
		if v == nil {
			return nil
		}
		return v.CaptureInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelFrameCaptureSettingsPtrOutput) CaptureIntervalUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelFrameCaptureSettings) *string {
		if v == nil {
			return nil
		}
		return v.CaptureIntervalUnits
	}).(pulumi.StringPtrOutput)
}

type ChannelGlobalConfiguration struct {
	InitialAudioGain          *int                      `pulumi:"initialAudioGain"`
	InputEndAction            *string                   `pulumi:"inputEndAction"`
	InputLossBehavior         *ChannelInputLossBehavior `pulumi:"inputLossBehavior"`
	OutputLockingMode         *string                   `pulumi:"outputLockingMode"`
	OutputTimingSource        *string                   `pulumi:"outputTimingSource"`
	SupportLowFramerateInputs *string                   `pulumi:"supportLowFramerateInputs"`
}

// ChannelGlobalConfigurationInput is an input type that accepts ChannelGlobalConfigurationArgs and ChannelGlobalConfigurationOutput values.
// You can construct a concrete instance of `ChannelGlobalConfigurationInput` via:
//
//          ChannelGlobalConfigurationArgs{...}
type ChannelGlobalConfigurationInput interface {
	pulumi.Input

	ToChannelGlobalConfigurationOutput() ChannelGlobalConfigurationOutput
	ToChannelGlobalConfigurationOutputWithContext(context.Context) ChannelGlobalConfigurationOutput
}

type ChannelGlobalConfigurationArgs struct {
	InitialAudioGain          pulumi.IntPtrInput               `pulumi:"initialAudioGain"`
	InputEndAction            pulumi.StringPtrInput            `pulumi:"inputEndAction"`
	InputLossBehavior         ChannelInputLossBehaviorPtrInput `pulumi:"inputLossBehavior"`
	OutputLockingMode         pulumi.StringPtrInput            `pulumi:"outputLockingMode"`
	OutputTimingSource        pulumi.StringPtrInput            `pulumi:"outputTimingSource"`
	SupportLowFramerateInputs pulumi.StringPtrInput            `pulumi:"supportLowFramerateInputs"`
}

func (ChannelGlobalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelGlobalConfiguration)(nil)).Elem()
}

func (i ChannelGlobalConfigurationArgs) ToChannelGlobalConfigurationOutput() ChannelGlobalConfigurationOutput {
	return i.ToChannelGlobalConfigurationOutputWithContext(context.Background())
}

func (i ChannelGlobalConfigurationArgs) ToChannelGlobalConfigurationOutputWithContext(ctx context.Context) ChannelGlobalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelGlobalConfigurationOutput)
}

func (i ChannelGlobalConfigurationArgs) ToChannelGlobalConfigurationPtrOutput() ChannelGlobalConfigurationPtrOutput {
	return i.ToChannelGlobalConfigurationPtrOutputWithContext(context.Background())
}

func (i ChannelGlobalConfigurationArgs) ToChannelGlobalConfigurationPtrOutputWithContext(ctx context.Context) ChannelGlobalConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelGlobalConfigurationOutput).ToChannelGlobalConfigurationPtrOutputWithContext(ctx)
}

// ChannelGlobalConfigurationPtrInput is an input type that accepts ChannelGlobalConfigurationArgs, ChannelGlobalConfigurationPtr and ChannelGlobalConfigurationPtrOutput values.
// You can construct a concrete instance of `ChannelGlobalConfigurationPtrInput` via:
//
//          ChannelGlobalConfigurationArgs{...}
//
//  or:
//
//          nil
type ChannelGlobalConfigurationPtrInput interface {
	pulumi.Input

	ToChannelGlobalConfigurationPtrOutput() ChannelGlobalConfigurationPtrOutput
	ToChannelGlobalConfigurationPtrOutputWithContext(context.Context) ChannelGlobalConfigurationPtrOutput
}

type channelGlobalConfigurationPtrType ChannelGlobalConfigurationArgs

func ChannelGlobalConfigurationPtr(v *ChannelGlobalConfigurationArgs) ChannelGlobalConfigurationPtrInput {
	return (*channelGlobalConfigurationPtrType)(v)
}

func (*channelGlobalConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelGlobalConfiguration)(nil)).Elem()
}

func (i *channelGlobalConfigurationPtrType) ToChannelGlobalConfigurationPtrOutput() ChannelGlobalConfigurationPtrOutput {
	return i.ToChannelGlobalConfigurationPtrOutputWithContext(context.Background())
}

func (i *channelGlobalConfigurationPtrType) ToChannelGlobalConfigurationPtrOutputWithContext(ctx context.Context) ChannelGlobalConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelGlobalConfigurationPtrOutput)
}

type ChannelGlobalConfigurationOutput struct{ *pulumi.OutputState }

func (ChannelGlobalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelGlobalConfiguration)(nil)).Elem()
}

func (o ChannelGlobalConfigurationOutput) ToChannelGlobalConfigurationOutput() ChannelGlobalConfigurationOutput {
	return o
}

func (o ChannelGlobalConfigurationOutput) ToChannelGlobalConfigurationOutputWithContext(ctx context.Context) ChannelGlobalConfigurationOutput {
	return o
}

func (o ChannelGlobalConfigurationOutput) ToChannelGlobalConfigurationPtrOutput() ChannelGlobalConfigurationPtrOutput {
	return o.ToChannelGlobalConfigurationPtrOutputWithContext(context.Background())
}

func (o ChannelGlobalConfigurationOutput) ToChannelGlobalConfigurationPtrOutputWithContext(ctx context.Context) ChannelGlobalConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelGlobalConfiguration) *ChannelGlobalConfiguration {
		return &v
	}).(ChannelGlobalConfigurationPtrOutput)
}

func (o ChannelGlobalConfigurationOutput) InitialAudioGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelGlobalConfiguration) *int { return v.InitialAudioGain }).(pulumi.IntPtrOutput)
}

func (o ChannelGlobalConfigurationOutput) InputEndAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelGlobalConfiguration) *string { return v.InputEndAction }).(pulumi.StringPtrOutput)
}

func (o ChannelGlobalConfigurationOutput) InputLossBehavior() ChannelInputLossBehaviorPtrOutput {
	return o.ApplyT(func(v ChannelGlobalConfiguration) *ChannelInputLossBehavior { return v.InputLossBehavior }).(ChannelInputLossBehaviorPtrOutput)
}

func (o ChannelGlobalConfigurationOutput) OutputLockingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelGlobalConfiguration) *string { return v.OutputLockingMode }).(pulumi.StringPtrOutput)
}

func (o ChannelGlobalConfigurationOutput) OutputTimingSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelGlobalConfiguration) *string { return v.OutputTimingSource }).(pulumi.StringPtrOutput)
}

func (o ChannelGlobalConfigurationOutput) SupportLowFramerateInputs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelGlobalConfiguration) *string { return v.SupportLowFramerateInputs }).(pulumi.StringPtrOutput)
}

type ChannelGlobalConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ChannelGlobalConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelGlobalConfiguration)(nil)).Elem()
}

func (o ChannelGlobalConfigurationPtrOutput) ToChannelGlobalConfigurationPtrOutput() ChannelGlobalConfigurationPtrOutput {
	return o
}

func (o ChannelGlobalConfigurationPtrOutput) ToChannelGlobalConfigurationPtrOutputWithContext(ctx context.Context) ChannelGlobalConfigurationPtrOutput {
	return o
}

func (o ChannelGlobalConfigurationPtrOutput) Elem() ChannelGlobalConfigurationOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) ChannelGlobalConfiguration {
		if v != nil {
			return *v
		}
		var ret ChannelGlobalConfiguration
		return ret
	}).(ChannelGlobalConfigurationOutput)
}

func (o ChannelGlobalConfigurationPtrOutput) InitialAudioGain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.InitialAudioGain
	}).(pulumi.IntPtrOutput)
}

func (o ChannelGlobalConfigurationPtrOutput) InputEndAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.InputEndAction
	}).(pulumi.StringPtrOutput)
}

func (o ChannelGlobalConfigurationPtrOutput) InputLossBehavior() ChannelInputLossBehaviorPtrOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) *ChannelInputLossBehavior {
		if v == nil {
			return nil
		}
		return v.InputLossBehavior
	}).(ChannelInputLossBehaviorPtrOutput)
}

func (o ChannelGlobalConfigurationPtrOutput) OutputLockingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OutputLockingMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelGlobalConfigurationPtrOutput) OutputTimingSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OutputTimingSource
	}).(pulumi.StringPtrOutput)
}

func (o ChannelGlobalConfigurationPtrOutput) SupportLowFramerateInputs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelGlobalConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SupportLowFramerateInputs
	}).(pulumi.StringPtrOutput)
}

type ChannelH264ColorSpaceSettings struct {
	ColorSpacePassthroughSettings *ChannelColorSpacePassthroughSettings `pulumi:"colorSpacePassthroughSettings"`
	Rec601Settings                *ChannelRec601Settings                `pulumi:"rec601Settings"`
	Rec709Settings                *ChannelRec709Settings                `pulumi:"rec709Settings"`
}

// ChannelH264ColorSpaceSettingsInput is an input type that accepts ChannelH264ColorSpaceSettingsArgs and ChannelH264ColorSpaceSettingsOutput values.
// You can construct a concrete instance of `ChannelH264ColorSpaceSettingsInput` via:
//
//          ChannelH264ColorSpaceSettingsArgs{...}
type ChannelH264ColorSpaceSettingsInput interface {
	pulumi.Input

	ToChannelH264ColorSpaceSettingsOutput() ChannelH264ColorSpaceSettingsOutput
	ToChannelH264ColorSpaceSettingsOutputWithContext(context.Context) ChannelH264ColorSpaceSettingsOutput
}

type ChannelH264ColorSpaceSettingsArgs struct {
	ColorSpacePassthroughSettings ChannelColorSpacePassthroughSettingsPtrInput `pulumi:"colorSpacePassthroughSettings"`
	Rec601Settings                ChannelRec601SettingsPtrInput                `pulumi:"rec601Settings"`
	Rec709Settings                ChannelRec709SettingsPtrInput                `pulumi:"rec709Settings"`
}

func (ChannelH264ColorSpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH264ColorSpaceSettings)(nil)).Elem()
}

func (i ChannelH264ColorSpaceSettingsArgs) ToChannelH264ColorSpaceSettingsOutput() ChannelH264ColorSpaceSettingsOutput {
	return i.ToChannelH264ColorSpaceSettingsOutputWithContext(context.Background())
}

func (i ChannelH264ColorSpaceSettingsArgs) ToChannelH264ColorSpaceSettingsOutputWithContext(ctx context.Context) ChannelH264ColorSpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264ColorSpaceSettingsOutput)
}

func (i ChannelH264ColorSpaceSettingsArgs) ToChannelH264ColorSpaceSettingsPtrOutput() ChannelH264ColorSpaceSettingsPtrOutput {
	return i.ToChannelH264ColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelH264ColorSpaceSettingsArgs) ToChannelH264ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH264ColorSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264ColorSpaceSettingsOutput).ToChannelH264ColorSpaceSettingsPtrOutputWithContext(ctx)
}

// ChannelH264ColorSpaceSettingsPtrInput is an input type that accepts ChannelH264ColorSpaceSettingsArgs, ChannelH264ColorSpaceSettingsPtr and ChannelH264ColorSpaceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelH264ColorSpaceSettingsPtrInput` via:
//
//          ChannelH264ColorSpaceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelH264ColorSpaceSettingsPtrInput interface {
	pulumi.Input

	ToChannelH264ColorSpaceSettingsPtrOutput() ChannelH264ColorSpaceSettingsPtrOutput
	ToChannelH264ColorSpaceSettingsPtrOutputWithContext(context.Context) ChannelH264ColorSpaceSettingsPtrOutput
}

type channelH264ColorSpaceSettingsPtrType ChannelH264ColorSpaceSettingsArgs

func ChannelH264ColorSpaceSettingsPtr(v *ChannelH264ColorSpaceSettingsArgs) ChannelH264ColorSpaceSettingsPtrInput {
	return (*channelH264ColorSpaceSettingsPtrType)(v)
}

func (*channelH264ColorSpaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH264ColorSpaceSettings)(nil)).Elem()
}

func (i *channelH264ColorSpaceSettingsPtrType) ToChannelH264ColorSpaceSettingsPtrOutput() ChannelH264ColorSpaceSettingsPtrOutput {
	return i.ToChannelH264ColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelH264ColorSpaceSettingsPtrType) ToChannelH264ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH264ColorSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264ColorSpaceSettingsPtrOutput)
}

type ChannelH264ColorSpaceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelH264ColorSpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH264ColorSpaceSettings)(nil)).Elem()
}

func (o ChannelH264ColorSpaceSettingsOutput) ToChannelH264ColorSpaceSettingsOutput() ChannelH264ColorSpaceSettingsOutput {
	return o
}

func (o ChannelH264ColorSpaceSettingsOutput) ToChannelH264ColorSpaceSettingsOutputWithContext(ctx context.Context) ChannelH264ColorSpaceSettingsOutput {
	return o
}

func (o ChannelH264ColorSpaceSettingsOutput) ToChannelH264ColorSpaceSettingsPtrOutput() ChannelH264ColorSpaceSettingsPtrOutput {
	return o.ToChannelH264ColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelH264ColorSpaceSettingsOutput) ToChannelH264ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH264ColorSpaceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelH264ColorSpaceSettings) *ChannelH264ColorSpaceSettings {
		return &v
	}).(ChannelH264ColorSpaceSettingsPtrOutput)
}

func (o ChannelH264ColorSpaceSettingsOutput) ColorSpacePassthroughSettings() ChannelColorSpacePassthroughSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH264ColorSpaceSettings) *ChannelColorSpacePassthroughSettings {
		return v.ColorSpacePassthroughSettings
	}).(ChannelColorSpacePassthroughSettingsPtrOutput)
}

func (o ChannelH264ColorSpaceSettingsOutput) Rec601Settings() ChannelRec601SettingsPtrOutput {
	return o.ApplyT(func(v ChannelH264ColorSpaceSettings) *ChannelRec601Settings { return v.Rec601Settings }).(ChannelRec601SettingsPtrOutput)
}

func (o ChannelH264ColorSpaceSettingsOutput) Rec709Settings() ChannelRec709SettingsPtrOutput {
	return o.ApplyT(func(v ChannelH264ColorSpaceSettings) *ChannelRec709Settings { return v.Rec709Settings }).(ChannelRec709SettingsPtrOutput)
}

type ChannelH264ColorSpaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelH264ColorSpaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH264ColorSpaceSettings)(nil)).Elem()
}

func (o ChannelH264ColorSpaceSettingsPtrOutput) ToChannelH264ColorSpaceSettingsPtrOutput() ChannelH264ColorSpaceSettingsPtrOutput {
	return o
}

func (o ChannelH264ColorSpaceSettingsPtrOutput) ToChannelH264ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH264ColorSpaceSettingsPtrOutput {
	return o
}

func (o ChannelH264ColorSpaceSettingsPtrOutput) Elem() ChannelH264ColorSpaceSettingsOutput {
	return o.ApplyT(func(v *ChannelH264ColorSpaceSettings) ChannelH264ColorSpaceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelH264ColorSpaceSettings
		return ret
	}).(ChannelH264ColorSpaceSettingsOutput)
}

func (o ChannelH264ColorSpaceSettingsPtrOutput) ColorSpacePassthroughSettings() ChannelColorSpacePassthroughSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH264ColorSpaceSettings) *ChannelColorSpacePassthroughSettings {
		if v == nil {
			return nil
		}
		return v.ColorSpacePassthroughSettings
	}).(ChannelColorSpacePassthroughSettingsPtrOutput)
}

func (o ChannelH264ColorSpaceSettingsPtrOutput) Rec601Settings() ChannelRec601SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH264ColorSpaceSettings) *ChannelRec601Settings {
		if v == nil {
			return nil
		}
		return v.Rec601Settings
	}).(ChannelRec601SettingsPtrOutput)
}

func (o ChannelH264ColorSpaceSettingsPtrOutput) Rec709Settings() ChannelRec709SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH264ColorSpaceSettings) *ChannelRec709Settings {
		if v == nil {
			return nil
		}
		return v.Rec709Settings
	}).(ChannelRec709SettingsPtrOutput)
}

type ChannelH264FilterSettings struct {
	TemporalFilterSettings *ChannelTemporalFilterSettings `pulumi:"temporalFilterSettings"`
}

// ChannelH264FilterSettingsInput is an input type that accepts ChannelH264FilterSettingsArgs and ChannelH264FilterSettingsOutput values.
// You can construct a concrete instance of `ChannelH264FilterSettingsInput` via:
//
//          ChannelH264FilterSettingsArgs{...}
type ChannelH264FilterSettingsInput interface {
	pulumi.Input

	ToChannelH264FilterSettingsOutput() ChannelH264FilterSettingsOutput
	ToChannelH264FilterSettingsOutputWithContext(context.Context) ChannelH264FilterSettingsOutput
}

type ChannelH264FilterSettingsArgs struct {
	TemporalFilterSettings ChannelTemporalFilterSettingsPtrInput `pulumi:"temporalFilterSettings"`
}

func (ChannelH264FilterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH264FilterSettings)(nil)).Elem()
}

func (i ChannelH264FilterSettingsArgs) ToChannelH264FilterSettingsOutput() ChannelH264FilterSettingsOutput {
	return i.ToChannelH264FilterSettingsOutputWithContext(context.Background())
}

func (i ChannelH264FilterSettingsArgs) ToChannelH264FilterSettingsOutputWithContext(ctx context.Context) ChannelH264FilterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264FilterSettingsOutput)
}

func (i ChannelH264FilterSettingsArgs) ToChannelH264FilterSettingsPtrOutput() ChannelH264FilterSettingsPtrOutput {
	return i.ToChannelH264FilterSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelH264FilterSettingsArgs) ToChannelH264FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH264FilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264FilterSettingsOutput).ToChannelH264FilterSettingsPtrOutputWithContext(ctx)
}

// ChannelH264FilterSettingsPtrInput is an input type that accepts ChannelH264FilterSettingsArgs, ChannelH264FilterSettingsPtr and ChannelH264FilterSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelH264FilterSettingsPtrInput` via:
//
//          ChannelH264FilterSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelH264FilterSettingsPtrInput interface {
	pulumi.Input

	ToChannelH264FilterSettingsPtrOutput() ChannelH264FilterSettingsPtrOutput
	ToChannelH264FilterSettingsPtrOutputWithContext(context.Context) ChannelH264FilterSettingsPtrOutput
}

type channelH264FilterSettingsPtrType ChannelH264FilterSettingsArgs

func ChannelH264FilterSettingsPtr(v *ChannelH264FilterSettingsArgs) ChannelH264FilterSettingsPtrInput {
	return (*channelH264FilterSettingsPtrType)(v)
}

func (*channelH264FilterSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH264FilterSettings)(nil)).Elem()
}

func (i *channelH264FilterSettingsPtrType) ToChannelH264FilterSettingsPtrOutput() ChannelH264FilterSettingsPtrOutput {
	return i.ToChannelH264FilterSettingsPtrOutputWithContext(context.Background())
}

func (i *channelH264FilterSettingsPtrType) ToChannelH264FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH264FilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264FilterSettingsPtrOutput)
}

type ChannelH264FilterSettingsOutput struct{ *pulumi.OutputState }

func (ChannelH264FilterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH264FilterSettings)(nil)).Elem()
}

func (o ChannelH264FilterSettingsOutput) ToChannelH264FilterSettingsOutput() ChannelH264FilterSettingsOutput {
	return o
}

func (o ChannelH264FilterSettingsOutput) ToChannelH264FilterSettingsOutputWithContext(ctx context.Context) ChannelH264FilterSettingsOutput {
	return o
}

func (o ChannelH264FilterSettingsOutput) ToChannelH264FilterSettingsPtrOutput() ChannelH264FilterSettingsPtrOutput {
	return o.ToChannelH264FilterSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelH264FilterSettingsOutput) ToChannelH264FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH264FilterSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelH264FilterSettings) *ChannelH264FilterSettings {
		return &v
	}).(ChannelH264FilterSettingsPtrOutput)
}

func (o ChannelH264FilterSettingsOutput) TemporalFilterSettings() ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH264FilterSettings) *ChannelTemporalFilterSettings { return v.TemporalFilterSettings }).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelH264FilterSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelH264FilterSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH264FilterSettings)(nil)).Elem()
}

func (o ChannelH264FilterSettingsPtrOutput) ToChannelH264FilterSettingsPtrOutput() ChannelH264FilterSettingsPtrOutput {
	return o
}

func (o ChannelH264FilterSettingsPtrOutput) ToChannelH264FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH264FilterSettingsPtrOutput {
	return o
}

func (o ChannelH264FilterSettingsPtrOutput) Elem() ChannelH264FilterSettingsOutput {
	return o.ApplyT(func(v *ChannelH264FilterSettings) ChannelH264FilterSettings {
		if v != nil {
			return *v
		}
		var ret ChannelH264FilterSettings
		return ret
	}).(ChannelH264FilterSettingsOutput)
}

func (o ChannelH264FilterSettingsPtrOutput) TemporalFilterSettings() ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH264FilterSettings) *ChannelTemporalFilterSettings {
		if v == nil {
			return nil
		}
		return v.TemporalFilterSettings
	}).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelH264Settings struct {
	AdaptiveQuantization *string                        `pulumi:"adaptiveQuantization"`
	AfdSignaling         *string                        `pulumi:"afdSignaling"`
	Bitrate              *int                           `pulumi:"bitrate"`
	BufFillPct           *int                           `pulumi:"bufFillPct"`
	BufSize              *int                           `pulumi:"bufSize"`
	ColorMetadata        *string                        `pulumi:"colorMetadata"`
	ColorSpaceSettings   *ChannelH264ColorSpaceSettings `pulumi:"colorSpaceSettings"`
	EntropyEncoding      *string                        `pulumi:"entropyEncoding"`
	FilterSettings       *ChannelH264FilterSettings     `pulumi:"filterSettings"`
	FixedAfd             *string                        `pulumi:"fixedAfd"`
	FlickerAq            *string                        `pulumi:"flickerAq"`
	ForceFieldPictures   *string                        `pulumi:"forceFieldPictures"`
	FramerateControl     *string                        `pulumi:"framerateControl"`
	FramerateDenominator *int                           `pulumi:"framerateDenominator"`
	FramerateNumerator   *int                           `pulumi:"framerateNumerator"`
	GopBReference        *string                        `pulumi:"gopBReference"`
	GopClosedCadence     *int                           `pulumi:"gopClosedCadence"`
	GopNumBFrames        *int                           `pulumi:"gopNumBFrames"`
	GopSize              *float64                       `pulumi:"gopSize"`
	GopSizeUnits         *string                        `pulumi:"gopSizeUnits"`
	Level                *string                        `pulumi:"level"`
	LookAheadRateControl *string                        `pulumi:"lookAheadRateControl"`
	MaxBitrate           *int                           `pulumi:"maxBitrate"`
	MinIInterval         *int                           `pulumi:"minIInterval"`
	NumRefFrames         *int                           `pulumi:"numRefFrames"`
	ParControl           *string                        `pulumi:"parControl"`
	ParDenominator       *int                           `pulumi:"parDenominator"`
	ParNumerator         *int                           `pulumi:"parNumerator"`
	Profile              *string                        `pulumi:"profile"`
	QualityLevel         *string                        `pulumi:"qualityLevel"`
	QvbrQualityLevel     *int                           `pulumi:"qvbrQualityLevel"`
	RateControlMode      *string                        `pulumi:"rateControlMode"`
	ScanType             *string                        `pulumi:"scanType"`
	SceneChangeDetect    *string                        `pulumi:"sceneChangeDetect"`
	Slices               *int                           `pulumi:"slices"`
	Softness             *int                           `pulumi:"softness"`
	SpatialAq            *string                        `pulumi:"spatialAq"`
	SubgopLength         *string                        `pulumi:"subgopLength"`
	Syntax               *string                        `pulumi:"syntax"`
	TemporalAq           *string                        `pulumi:"temporalAq"`
	TimecodeInsertion    *string                        `pulumi:"timecodeInsertion"`
}

// ChannelH264SettingsInput is an input type that accepts ChannelH264SettingsArgs and ChannelH264SettingsOutput values.
// You can construct a concrete instance of `ChannelH264SettingsInput` via:
//
//          ChannelH264SettingsArgs{...}
type ChannelH264SettingsInput interface {
	pulumi.Input

	ToChannelH264SettingsOutput() ChannelH264SettingsOutput
	ToChannelH264SettingsOutputWithContext(context.Context) ChannelH264SettingsOutput
}

type ChannelH264SettingsArgs struct {
	AdaptiveQuantization pulumi.StringPtrInput                 `pulumi:"adaptiveQuantization"`
	AfdSignaling         pulumi.StringPtrInput                 `pulumi:"afdSignaling"`
	Bitrate              pulumi.IntPtrInput                    `pulumi:"bitrate"`
	BufFillPct           pulumi.IntPtrInput                    `pulumi:"bufFillPct"`
	BufSize              pulumi.IntPtrInput                    `pulumi:"bufSize"`
	ColorMetadata        pulumi.StringPtrInput                 `pulumi:"colorMetadata"`
	ColorSpaceSettings   ChannelH264ColorSpaceSettingsPtrInput `pulumi:"colorSpaceSettings"`
	EntropyEncoding      pulumi.StringPtrInput                 `pulumi:"entropyEncoding"`
	FilterSettings       ChannelH264FilterSettingsPtrInput     `pulumi:"filterSettings"`
	FixedAfd             pulumi.StringPtrInput                 `pulumi:"fixedAfd"`
	FlickerAq            pulumi.StringPtrInput                 `pulumi:"flickerAq"`
	ForceFieldPictures   pulumi.StringPtrInput                 `pulumi:"forceFieldPictures"`
	FramerateControl     pulumi.StringPtrInput                 `pulumi:"framerateControl"`
	FramerateDenominator pulumi.IntPtrInput                    `pulumi:"framerateDenominator"`
	FramerateNumerator   pulumi.IntPtrInput                    `pulumi:"framerateNumerator"`
	GopBReference        pulumi.StringPtrInput                 `pulumi:"gopBReference"`
	GopClosedCadence     pulumi.IntPtrInput                    `pulumi:"gopClosedCadence"`
	GopNumBFrames        pulumi.IntPtrInput                    `pulumi:"gopNumBFrames"`
	GopSize              pulumi.Float64PtrInput                `pulumi:"gopSize"`
	GopSizeUnits         pulumi.StringPtrInput                 `pulumi:"gopSizeUnits"`
	Level                pulumi.StringPtrInput                 `pulumi:"level"`
	LookAheadRateControl pulumi.StringPtrInput                 `pulumi:"lookAheadRateControl"`
	MaxBitrate           pulumi.IntPtrInput                    `pulumi:"maxBitrate"`
	MinIInterval         pulumi.IntPtrInput                    `pulumi:"minIInterval"`
	NumRefFrames         pulumi.IntPtrInput                    `pulumi:"numRefFrames"`
	ParControl           pulumi.StringPtrInput                 `pulumi:"parControl"`
	ParDenominator       pulumi.IntPtrInput                    `pulumi:"parDenominator"`
	ParNumerator         pulumi.IntPtrInput                    `pulumi:"parNumerator"`
	Profile              pulumi.StringPtrInput                 `pulumi:"profile"`
	QualityLevel         pulumi.StringPtrInput                 `pulumi:"qualityLevel"`
	QvbrQualityLevel     pulumi.IntPtrInput                    `pulumi:"qvbrQualityLevel"`
	RateControlMode      pulumi.StringPtrInput                 `pulumi:"rateControlMode"`
	ScanType             pulumi.StringPtrInput                 `pulumi:"scanType"`
	SceneChangeDetect    pulumi.StringPtrInput                 `pulumi:"sceneChangeDetect"`
	Slices               pulumi.IntPtrInput                    `pulumi:"slices"`
	Softness             pulumi.IntPtrInput                    `pulumi:"softness"`
	SpatialAq            pulumi.StringPtrInput                 `pulumi:"spatialAq"`
	SubgopLength         pulumi.StringPtrInput                 `pulumi:"subgopLength"`
	Syntax               pulumi.StringPtrInput                 `pulumi:"syntax"`
	TemporalAq           pulumi.StringPtrInput                 `pulumi:"temporalAq"`
	TimecodeInsertion    pulumi.StringPtrInput                 `pulumi:"timecodeInsertion"`
}

func (ChannelH264SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH264Settings)(nil)).Elem()
}

func (i ChannelH264SettingsArgs) ToChannelH264SettingsOutput() ChannelH264SettingsOutput {
	return i.ToChannelH264SettingsOutputWithContext(context.Background())
}

func (i ChannelH264SettingsArgs) ToChannelH264SettingsOutputWithContext(ctx context.Context) ChannelH264SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264SettingsOutput)
}

func (i ChannelH264SettingsArgs) ToChannelH264SettingsPtrOutput() ChannelH264SettingsPtrOutput {
	return i.ToChannelH264SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelH264SettingsArgs) ToChannelH264SettingsPtrOutputWithContext(ctx context.Context) ChannelH264SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264SettingsOutput).ToChannelH264SettingsPtrOutputWithContext(ctx)
}

// ChannelH264SettingsPtrInput is an input type that accepts ChannelH264SettingsArgs, ChannelH264SettingsPtr and ChannelH264SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelH264SettingsPtrInput` via:
//
//          ChannelH264SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelH264SettingsPtrInput interface {
	pulumi.Input

	ToChannelH264SettingsPtrOutput() ChannelH264SettingsPtrOutput
	ToChannelH264SettingsPtrOutputWithContext(context.Context) ChannelH264SettingsPtrOutput
}

type channelH264SettingsPtrType ChannelH264SettingsArgs

func ChannelH264SettingsPtr(v *ChannelH264SettingsArgs) ChannelH264SettingsPtrInput {
	return (*channelH264SettingsPtrType)(v)
}

func (*channelH264SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH264Settings)(nil)).Elem()
}

func (i *channelH264SettingsPtrType) ToChannelH264SettingsPtrOutput() ChannelH264SettingsPtrOutput {
	return i.ToChannelH264SettingsPtrOutputWithContext(context.Background())
}

func (i *channelH264SettingsPtrType) ToChannelH264SettingsPtrOutputWithContext(ctx context.Context) ChannelH264SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH264SettingsPtrOutput)
}

type ChannelH264SettingsOutput struct{ *pulumi.OutputState }

func (ChannelH264SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH264Settings)(nil)).Elem()
}

func (o ChannelH264SettingsOutput) ToChannelH264SettingsOutput() ChannelH264SettingsOutput {
	return o
}

func (o ChannelH264SettingsOutput) ToChannelH264SettingsOutputWithContext(ctx context.Context) ChannelH264SettingsOutput {
	return o
}

func (o ChannelH264SettingsOutput) ToChannelH264SettingsPtrOutput() ChannelH264SettingsPtrOutput {
	return o.ToChannelH264SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelH264SettingsOutput) ToChannelH264SettingsPtrOutputWithContext(ctx context.Context) ChannelH264SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelH264Settings) *ChannelH264Settings {
		return &v
	}).(ChannelH264SettingsPtrOutput)
}

func (o ChannelH264SettingsOutput) AdaptiveQuantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.AdaptiveQuantization }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) AfdSignaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.AfdSignaling }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) BufFillPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.BufFillPct }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) BufSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.BufSize }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) ColorMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.ColorMetadata }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) ColorSpaceSettings() ChannelH264ColorSpaceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *ChannelH264ColorSpaceSettings { return v.ColorSpaceSettings }).(ChannelH264ColorSpaceSettingsPtrOutput)
}

func (o ChannelH264SettingsOutput) EntropyEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.EntropyEncoding }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) FilterSettings() ChannelH264FilterSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *ChannelH264FilterSettings { return v.FilterSettings }).(ChannelH264FilterSettingsPtrOutput)
}

func (o ChannelH264SettingsOutput) FixedAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.FixedAfd }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) FlickerAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.FlickerAq }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) ForceFieldPictures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.ForceFieldPictures }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) FramerateControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.FramerateControl }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) FramerateDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.FramerateDenominator }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) FramerateNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.FramerateNumerator }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) GopBReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.GopBReference }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) GopClosedCadence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.GopClosedCadence }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) GopNumBFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.GopNumBFrames }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) GopSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *float64 { return v.GopSize }).(pulumi.Float64PtrOutput)
}

func (o ChannelH264SettingsOutput) GopSizeUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.GopSizeUnits }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) LookAheadRateControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.LookAheadRateControl }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) MaxBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.MaxBitrate }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) MinIInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.MinIInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) NumRefFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.NumRefFrames }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) ParControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.ParControl }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) ParDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.ParDenominator }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) ParNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.ParNumerator }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) QualityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.QualityLevel }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) QvbrQualityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.QvbrQualityLevel }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) RateControlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.RateControlMode }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) ScanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.ScanType }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) SceneChangeDetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.SceneChangeDetect }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) Slices() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.Slices }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) Softness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *int { return v.Softness }).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsOutput) SpatialAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.SpatialAq }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) SubgopLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.SubgopLength }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) TemporalAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.TemporalAq }).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsOutput) TimecodeInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH264Settings) *string { return v.TimecodeInsertion }).(pulumi.StringPtrOutput)
}

type ChannelH264SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelH264SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH264Settings)(nil)).Elem()
}

func (o ChannelH264SettingsPtrOutput) ToChannelH264SettingsPtrOutput() ChannelH264SettingsPtrOutput {
	return o
}

func (o ChannelH264SettingsPtrOutput) ToChannelH264SettingsPtrOutputWithContext(ctx context.Context) ChannelH264SettingsPtrOutput {
	return o
}

func (o ChannelH264SettingsPtrOutput) Elem() ChannelH264SettingsOutput {
	return o.ApplyT(func(v *ChannelH264Settings) ChannelH264Settings {
		if v != nil {
			return *v
		}
		var ret ChannelH264Settings
		return ret
	}).(ChannelH264SettingsOutput)
}

func (o ChannelH264SettingsPtrOutput) AdaptiveQuantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.AdaptiveQuantization
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) AfdSignaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.AfdSignaling
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) BufFillPct() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.BufFillPct
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) BufSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.BufSize
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ColorMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.ColorMetadata
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ColorSpaceSettings() ChannelH264ColorSpaceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *ChannelH264ColorSpaceSettings {
		if v == nil {
			return nil
		}
		return v.ColorSpaceSettings
	}).(ChannelH264ColorSpaceSettingsPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) EntropyEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.EntropyEncoding
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) FilterSettings() ChannelH264FilterSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *ChannelH264FilterSettings {
		if v == nil {
			return nil
		}
		return v.FilterSettings
	}).(ChannelH264FilterSettingsPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) FixedAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.FixedAfd
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) FlickerAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.FlickerAq
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ForceFieldPictures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.ForceFieldPictures
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) FramerateControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.FramerateControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) FramerateDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.FramerateDenominator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) FramerateNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.FramerateNumerator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) GopBReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.GopBReference
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) GopClosedCadence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.GopClosedCadence
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) GopNumBFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.GopNumBFrames
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) GopSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.GopSize
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelH264SettingsPtrOutput) GopSizeUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.GopSizeUnits
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) LookAheadRateControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.LookAheadRateControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) MaxBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBitrate
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) MinIInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.MinIInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) NumRefFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.NumRefFrames
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ParControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.ParControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ParDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.ParDenominator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ParNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.ParNumerator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) QualityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.QualityLevel
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) QvbrQualityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.QvbrQualityLevel
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) RateControlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.RateControlMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) ScanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.ScanType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) SceneChangeDetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.SceneChangeDetect
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) Slices() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.Slices
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) Softness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *int {
		if v == nil {
			return nil
		}
		return v.Softness
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) SpatialAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.SpatialAq
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) SubgopLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.SubgopLength
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.Syntax
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) TemporalAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.TemporalAq
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH264SettingsPtrOutput) TimecodeInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH264Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimecodeInsertion
	}).(pulumi.StringPtrOutput)
}

type ChannelH265ColorSpaceSettings struct {
	ColorSpacePassthroughSettings *ChannelColorSpacePassthroughSettings `pulumi:"colorSpacePassthroughSettings"`
	Hdr10Settings                 *ChannelHdr10Settings                 `pulumi:"hdr10Settings"`
	Rec601Settings                *ChannelRec601Settings                `pulumi:"rec601Settings"`
	Rec709Settings                *ChannelRec709Settings                `pulumi:"rec709Settings"`
}

// ChannelH265ColorSpaceSettingsInput is an input type that accepts ChannelH265ColorSpaceSettingsArgs and ChannelH265ColorSpaceSettingsOutput values.
// You can construct a concrete instance of `ChannelH265ColorSpaceSettingsInput` via:
//
//          ChannelH265ColorSpaceSettingsArgs{...}
type ChannelH265ColorSpaceSettingsInput interface {
	pulumi.Input

	ToChannelH265ColorSpaceSettingsOutput() ChannelH265ColorSpaceSettingsOutput
	ToChannelH265ColorSpaceSettingsOutputWithContext(context.Context) ChannelH265ColorSpaceSettingsOutput
}

type ChannelH265ColorSpaceSettingsArgs struct {
	ColorSpacePassthroughSettings ChannelColorSpacePassthroughSettingsPtrInput `pulumi:"colorSpacePassthroughSettings"`
	Hdr10Settings                 ChannelHdr10SettingsPtrInput                 `pulumi:"hdr10Settings"`
	Rec601Settings                ChannelRec601SettingsPtrInput                `pulumi:"rec601Settings"`
	Rec709Settings                ChannelRec709SettingsPtrInput                `pulumi:"rec709Settings"`
}

func (ChannelH265ColorSpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH265ColorSpaceSettings)(nil)).Elem()
}

func (i ChannelH265ColorSpaceSettingsArgs) ToChannelH265ColorSpaceSettingsOutput() ChannelH265ColorSpaceSettingsOutput {
	return i.ToChannelH265ColorSpaceSettingsOutputWithContext(context.Background())
}

func (i ChannelH265ColorSpaceSettingsArgs) ToChannelH265ColorSpaceSettingsOutputWithContext(ctx context.Context) ChannelH265ColorSpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265ColorSpaceSettingsOutput)
}

func (i ChannelH265ColorSpaceSettingsArgs) ToChannelH265ColorSpaceSettingsPtrOutput() ChannelH265ColorSpaceSettingsPtrOutput {
	return i.ToChannelH265ColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelH265ColorSpaceSettingsArgs) ToChannelH265ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH265ColorSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265ColorSpaceSettingsOutput).ToChannelH265ColorSpaceSettingsPtrOutputWithContext(ctx)
}

// ChannelH265ColorSpaceSettingsPtrInput is an input type that accepts ChannelH265ColorSpaceSettingsArgs, ChannelH265ColorSpaceSettingsPtr and ChannelH265ColorSpaceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelH265ColorSpaceSettingsPtrInput` via:
//
//          ChannelH265ColorSpaceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelH265ColorSpaceSettingsPtrInput interface {
	pulumi.Input

	ToChannelH265ColorSpaceSettingsPtrOutput() ChannelH265ColorSpaceSettingsPtrOutput
	ToChannelH265ColorSpaceSettingsPtrOutputWithContext(context.Context) ChannelH265ColorSpaceSettingsPtrOutput
}

type channelH265ColorSpaceSettingsPtrType ChannelH265ColorSpaceSettingsArgs

func ChannelH265ColorSpaceSettingsPtr(v *ChannelH265ColorSpaceSettingsArgs) ChannelH265ColorSpaceSettingsPtrInput {
	return (*channelH265ColorSpaceSettingsPtrType)(v)
}

func (*channelH265ColorSpaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH265ColorSpaceSettings)(nil)).Elem()
}

func (i *channelH265ColorSpaceSettingsPtrType) ToChannelH265ColorSpaceSettingsPtrOutput() ChannelH265ColorSpaceSettingsPtrOutput {
	return i.ToChannelH265ColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelH265ColorSpaceSettingsPtrType) ToChannelH265ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH265ColorSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265ColorSpaceSettingsPtrOutput)
}

type ChannelH265ColorSpaceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelH265ColorSpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH265ColorSpaceSettings)(nil)).Elem()
}

func (o ChannelH265ColorSpaceSettingsOutput) ToChannelH265ColorSpaceSettingsOutput() ChannelH265ColorSpaceSettingsOutput {
	return o
}

func (o ChannelH265ColorSpaceSettingsOutput) ToChannelH265ColorSpaceSettingsOutputWithContext(ctx context.Context) ChannelH265ColorSpaceSettingsOutput {
	return o
}

func (o ChannelH265ColorSpaceSettingsOutput) ToChannelH265ColorSpaceSettingsPtrOutput() ChannelH265ColorSpaceSettingsPtrOutput {
	return o.ToChannelH265ColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelH265ColorSpaceSettingsOutput) ToChannelH265ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH265ColorSpaceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelH265ColorSpaceSettings) *ChannelH265ColorSpaceSettings {
		return &v
	}).(ChannelH265ColorSpaceSettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsOutput) ColorSpacePassthroughSettings() ChannelColorSpacePassthroughSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265ColorSpaceSettings) *ChannelColorSpacePassthroughSettings {
		return v.ColorSpacePassthroughSettings
	}).(ChannelColorSpacePassthroughSettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsOutput) Hdr10Settings() ChannelHdr10SettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265ColorSpaceSettings) *ChannelHdr10Settings { return v.Hdr10Settings }).(ChannelHdr10SettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsOutput) Rec601Settings() ChannelRec601SettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265ColorSpaceSettings) *ChannelRec601Settings { return v.Rec601Settings }).(ChannelRec601SettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsOutput) Rec709Settings() ChannelRec709SettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265ColorSpaceSettings) *ChannelRec709Settings { return v.Rec709Settings }).(ChannelRec709SettingsPtrOutput)
}

type ChannelH265ColorSpaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelH265ColorSpaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH265ColorSpaceSettings)(nil)).Elem()
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) ToChannelH265ColorSpaceSettingsPtrOutput() ChannelH265ColorSpaceSettingsPtrOutput {
	return o
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) ToChannelH265ColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelH265ColorSpaceSettingsPtrOutput {
	return o
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) Elem() ChannelH265ColorSpaceSettingsOutput {
	return o.ApplyT(func(v *ChannelH265ColorSpaceSettings) ChannelH265ColorSpaceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelH265ColorSpaceSettings
		return ret
	}).(ChannelH265ColorSpaceSettingsOutput)
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) ColorSpacePassthroughSettings() ChannelColorSpacePassthroughSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265ColorSpaceSettings) *ChannelColorSpacePassthroughSettings {
		if v == nil {
			return nil
		}
		return v.ColorSpacePassthroughSettings
	}).(ChannelColorSpacePassthroughSettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) Hdr10Settings() ChannelHdr10SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265ColorSpaceSettings) *ChannelHdr10Settings {
		if v == nil {
			return nil
		}
		return v.Hdr10Settings
	}).(ChannelHdr10SettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) Rec601Settings() ChannelRec601SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265ColorSpaceSettings) *ChannelRec601Settings {
		if v == nil {
			return nil
		}
		return v.Rec601Settings
	}).(ChannelRec601SettingsPtrOutput)
}

func (o ChannelH265ColorSpaceSettingsPtrOutput) Rec709Settings() ChannelRec709SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265ColorSpaceSettings) *ChannelRec709Settings {
		if v == nil {
			return nil
		}
		return v.Rec709Settings
	}).(ChannelRec709SettingsPtrOutput)
}

type ChannelH265FilterSettings struct {
	TemporalFilterSettings *ChannelTemporalFilterSettings `pulumi:"temporalFilterSettings"`
}

// ChannelH265FilterSettingsInput is an input type that accepts ChannelH265FilterSettingsArgs and ChannelH265FilterSettingsOutput values.
// You can construct a concrete instance of `ChannelH265FilterSettingsInput` via:
//
//          ChannelH265FilterSettingsArgs{...}
type ChannelH265FilterSettingsInput interface {
	pulumi.Input

	ToChannelH265FilterSettingsOutput() ChannelH265FilterSettingsOutput
	ToChannelH265FilterSettingsOutputWithContext(context.Context) ChannelH265FilterSettingsOutput
}

type ChannelH265FilterSettingsArgs struct {
	TemporalFilterSettings ChannelTemporalFilterSettingsPtrInput `pulumi:"temporalFilterSettings"`
}

func (ChannelH265FilterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH265FilterSettings)(nil)).Elem()
}

func (i ChannelH265FilterSettingsArgs) ToChannelH265FilterSettingsOutput() ChannelH265FilterSettingsOutput {
	return i.ToChannelH265FilterSettingsOutputWithContext(context.Background())
}

func (i ChannelH265FilterSettingsArgs) ToChannelH265FilterSettingsOutputWithContext(ctx context.Context) ChannelH265FilterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265FilterSettingsOutput)
}

func (i ChannelH265FilterSettingsArgs) ToChannelH265FilterSettingsPtrOutput() ChannelH265FilterSettingsPtrOutput {
	return i.ToChannelH265FilterSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelH265FilterSettingsArgs) ToChannelH265FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH265FilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265FilterSettingsOutput).ToChannelH265FilterSettingsPtrOutputWithContext(ctx)
}

// ChannelH265FilterSettingsPtrInput is an input type that accepts ChannelH265FilterSettingsArgs, ChannelH265FilterSettingsPtr and ChannelH265FilterSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelH265FilterSettingsPtrInput` via:
//
//          ChannelH265FilterSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelH265FilterSettingsPtrInput interface {
	pulumi.Input

	ToChannelH265FilterSettingsPtrOutput() ChannelH265FilterSettingsPtrOutput
	ToChannelH265FilterSettingsPtrOutputWithContext(context.Context) ChannelH265FilterSettingsPtrOutput
}

type channelH265FilterSettingsPtrType ChannelH265FilterSettingsArgs

func ChannelH265FilterSettingsPtr(v *ChannelH265FilterSettingsArgs) ChannelH265FilterSettingsPtrInput {
	return (*channelH265FilterSettingsPtrType)(v)
}

func (*channelH265FilterSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH265FilterSettings)(nil)).Elem()
}

func (i *channelH265FilterSettingsPtrType) ToChannelH265FilterSettingsPtrOutput() ChannelH265FilterSettingsPtrOutput {
	return i.ToChannelH265FilterSettingsPtrOutputWithContext(context.Background())
}

func (i *channelH265FilterSettingsPtrType) ToChannelH265FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH265FilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265FilterSettingsPtrOutput)
}

type ChannelH265FilterSettingsOutput struct{ *pulumi.OutputState }

func (ChannelH265FilterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH265FilterSettings)(nil)).Elem()
}

func (o ChannelH265FilterSettingsOutput) ToChannelH265FilterSettingsOutput() ChannelH265FilterSettingsOutput {
	return o
}

func (o ChannelH265FilterSettingsOutput) ToChannelH265FilterSettingsOutputWithContext(ctx context.Context) ChannelH265FilterSettingsOutput {
	return o
}

func (o ChannelH265FilterSettingsOutput) ToChannelH265FilterSettingsPtrOutput() ChannelH265FilterSettingsPtrOutput {
	return o.ToChannelH265FilterSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelH265FilterSettingsOutput) ToChannelH265FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH265FilterSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelH265FilterSettings) *ChannelH265FilterSettings {
		return &v
	}).(ChannelH265FilterSettingsPtrOutput)
}

func (o ChannelH265FilterSettingsOutput) TemporalFilterSettings() ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265FilterSettings) *ChannelTemporalFilterSettings { return v.TemporalFilterSettings }).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelH265FilterSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelH265FilterSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH265FilterSettings)(nil)).Elem()
}

func (o ChannelH265FilterSettingsPtrOutput) ToChannelH265FilterSettingsPtrOutput() ChannelH265FilterSettingsPtrOutput {
	return o
}

func (o ChannelH265FilterSettingsPtrOutput) ToChannelH265FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelH265FilterSettingsPtrOutput {
	return o
}

func (o ChannelH265FilterSettingsPtrOutput) Elem() ChannelH265FilterSettingsOutput {
	return o.ApplyT(func(v *ChannelH265FilterSettings) ChannelH265FilterSettings {
		if v != nil {
			return *v
		}
		var ret ChannelH265FilterSettings
		return ret
	}).(ChannelH265FilterSettingsOutput)
}

func (o ChannelH265FilterSettingsPtrOutput) TemporalFilterSettings() ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265FilterSettings) *ChannelTemporalFilterSettings {
		if v == nil {
			return nil
		}
		return v.TemporalFilterSettings
	}).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelH265Settings struct {
	AdaptiveQuantization        *string                        `pulumi:"adaptiveQuantization"`
	AfdSignaling                *string                        `pulumi:"afdSignaling"`
	AlternativeTransferFunction *string                        `pulumi:"alternativeTransferFunction"`
	Bitrate                     *int                           `pulumi:"bitrate"`
	BufSize                     *int                           `pulumi:"bufSize"`
	ColorMetadata               *string                        `pulumi:"colorMetadata"`
	ColorSpaceSettings          *ChannelH265ColorSpaceSettings `pulumi:"colorSpaceSettings"`
	FilterSettings              *ChannelH265FilterSettings     `pulumi:"filterSettings"`
	FixedAfd                    *string                        `pulumi:"fixedAfd"`
	FlickerAq                   *string                        `pulumi:"flickerAq"`
	FramerateDenominator        *int                           `pulumi:"framerateDenominator"`
	FramerateNumerator          *int                           `pulumi:"framerateNumerator"`
	GopClosedCadence            *int                           `pulumi:"gopClosedCadence"`
	GopSize                     *float64                       `pulumi:"gopSize"`
	GopSizeUnits                *string                        `pulumi:"gopSizeUnits"`
	Level                       *string                        `pulumi:"level"`
	LookAheadRateControl        *string                        `pulumi:"lookAheadRateControl"`
	MaxBitrate                  *int                           `pulumi:"maxBitrate"`
	MinIInterval                *int                           `pulumi:"minIInterval"`
	ParDenominator              *int                           `pulumi:"parDenominator"`
	ParNumerator                *int                           `pulumi:"parNumerator"`
	Profile                     *string                        `pulumi:"profile"`
	QvbrQualityLevel            *int                           `pulumi:"qvbrQualityLevel"`
	RateControlMode             *string                        `pulumi:"rateControlMode"`
	ScanType                    *string                        `pulumi:"scanType"`
	SceneChangeDetect           *string                        `pulumi:"sceneChangeDetect"`
	Slices                      *int                           `pulumi:"slices"`
	Tier                        *string                        `pulumi:"tier"`
	TimecodeInsertion           *string                        `pulumi:"timecodeInsertion"`
}

// ChannelH265SettingsInput is an input type that accepts ChannelH265SettingsArgs and ChannelH265SettingsOutput values.
// You can construct a concrete instance of `ChannelH265SettingsInput` via:
//
//          ChannelH265SettingsArgs{...}
type ChannelH265SettingsInput interface {
	pulumi.Input

	ToChannelH265SettingsOutput() ChannelH265SettingsOutput
	ToChannelH265SettingsOutputWithContext(context.Context) ChannelH265SettingsOutput
}

type ChannelH265SettingsArgs struct {
	AdaptiveQuantization        pulumi.StringPtrInput                 `pulumi:"adaptiveQuantization"`
	AfdSignaling                pulumi.StringPtrInput                 `pulumi:"afdSignaling"`
	AlternativeTransferFunction pulumi.StringPtrInput                 `pulumi:"alternativeTransferFunction"`
	Bitrate                     pulumi.IntPtrInput                    `pulumi:"bitrate"`
	BufSize                     pulumi.IntPtrInput                    `pulumi:"bufSize"`
	ColorMetadata               pulumi.StringPtrInput                 `pulumi:"colorMetadata"`
	ColorSpaceSettings          ChannelH265ColorSpaceSettingsPtrInput `pulumi:"colorSpaceSettings"`
	FilterSettings              ChannelH265FilterSettingsPtrInput     `pulumi:"filterSettings"`
	FixedAfd                    pulumi.StringPtrInput                 `pulumi:"fixedAfd"`
	FlickerAq                   pulumi.StringPtrInput                 `pulumi:"flickerAq"`
	FramerateDenominator        pulumi.IntPtrInput                    `pulumi:"framerateDenominator"`
	FramerateNumerator          pulumi.IntPtrInput                    `pulumi:"framerateNumerator"`
	GopClosedCadence            pulumi.IntPtrInput                    `pulumi:"gopClosedCadence"`
	GopSize                     pulumi.Float64PtrInput                `pulumi:"gopSize"`
	GopSizeUnits                pulumi.StringPtrInput                 `pulumi:"gopSizeUnits"`
	Level                       pulumi.StringPtrInput                 `pulumi:"level"`
	LookAheadRateControl        pulumi.StringPtrInput                 `pulumi:"lookAheadRateControl"`
	MaxBitrate                  pulumi.IntPtrInput                    `pulumi:"maxBitrate"`
	MinIInterval                pulumi.IntPtrInput                    `pulumi:"minIInterval"`
	ParDenominator              pulumi.IntPtrInput                    `pulumi:"parDenominator"`
	ParNumerator                pulumi.IntPtrInput                    `pulumi:"parNumerator"`
	Profile                     pulumi.StringPtrInput                 `pulumi:"profile"`
	QvbrQualityLevel            pulumi.IntPtrInput                    `pulumi:"qvbrQualityLevel"`
	RateControlMode             pulumi.StringPtrInput                 `pulumi:"rateControlMode"`
	ScanType                    pulumi.StringPtrInput                 `pulumi:"scanType"`
	SceneChangeDetect           pulumi.StringPtrInput                 `pulumi:"sceneChangeDetect"`
	Slices                      pulumi.IntPtrInput                    `pulumi:"slices"`
	Tier                        pulumi.StringPtrInput                 `pulumi:"tier"`
	TimecodeInsertion           pulumi.StringPtrInput                 `pulumi:"timecodeInsertion"`
}

func (ChannelH265SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH265Settings)(nil)).Elem()
}

func (i ChannelH265SettingsArgs) ToChannelH265SettingsOutput() ChannelH265SettingsOutput {
	return i.ToChannelH265SettingsOutputWithContext(context.Background())
}

func (i ChannelH265SettingsArgs) ToChannelH265SettingsOutputWithContext(ctx context.Context) ChannelH265SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265SettingsOutput)
}

func (i ChannelH265SettingsArgs) ToChannelH265SettingsPtrOutput() ChannelH265SettingsPtrOutput {
	return i.ToChannelH265SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelH265SettingsArgs) ToChannelH265SettingsPtrOutputWithContext(ctx context.Context) ChannelH265SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265SettingsOutput).ToChannelH265SettingsPtrOutputWithContext(ctx)
}

// ChannelH265SettingsPtrInput is an input type that accepts ChannelH265SettingsArgs, ChannelH265SettingsPtr and ChannelH265SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelH265SettingsPtrInput` via:
//
//          ChannelH265SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelH265SettingsPtrInput interface {
	pulumi.Input

	ToChannelH265SettingsPtrOutput() ChannelH265SettingsPtrOutput
	ToChannelH265SettingsPtrOutputWithContext(context.Context) ChannelH265SettingsPtrOutput
}

type channelH265SettingsPtrType ChannelH265SettingsArgs

func ChannelH265SettingsPtr(v *ChannelH265SettingsArgs) ChannelH265SettingsPtrInput {
	return (*channelH265SettingsPtrType)(v)
}

func (*channelH265SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH265Settings)(nil)).Elem()
}

func (i *channelH265SettingsPtrType) ToChannelH265SettingsPtrOutput() ChannelH265SettingsPtrOutput {
	return i.ToChannelH265SettingsPtrOutputWithContext(context.Background())
}

func (i *channelH265SettingsPtrType) ToChannelH265SettingsPtrOutputWithContext(ctx context.Context) ChannelH265SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelH265SettingsPtrOutput)
}

type ChannelH265SettingsOutput struct{ *pulumi.OutputState }

func (ChannelH265SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelH265Settings)(nil)).Elem()
}

func (o ChannelH265SettingsOutput) ToChannelH265SettingsOutput() ChannelH265SettingsOutput {
	return o
}

func (o ChannelH265SettingsOutput) ToChannelH265SettingsOutputWithContext(ctx context.Context) ChannelH265SettingsOutput {
	return o
}

func (o ChannelH265SettingsOutput) ToChannelH265SettingsPtrOutput() ChannelH265SettingsPtrOutput {
	return o.ToChannelH265SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelH265SettingsOutput) ToChannelH265SettingsPtrOutputWithContext(ctx context.Context) ChannelH265SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelH265Settings) *ChannelH265Settings {
		return &v
	}).(ChannelH265SettingsPtrOutput)
}

func (o ChannelH265SettingsOutput) AdaptiveQuantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.AdaptiveQuantization }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) AfdSignaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.AfdSignaling }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) AlternativeTransferFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.AlternativeTransferFunction }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) BufSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.BufSize }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) ColorMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.ColorMetadata }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) ColorSpaceSettings() ChannelH265ColorSpaceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *ChannelH265ColorSpaceSettings { return v.ColorSpaceSettings }).(ChannelH265ColorSpaceSettingsPtrOutput)
}

func (o ChannelH265SettingsOutput) FilterSettings() ChannelH265FilterSettingsPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *ChannelH265FilterSettings { return v.FilterSettings }).(ChannelH265FilterSettingsPtrOutput)
}

func (o ChannelH265SettingsOutput) FixedAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.FixedAfd }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) FlickerAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.FlickerAq }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) FramerateDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.FramerateDenominator }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) FramerateNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.FramerateNumerator }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) GopClosedCadence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.GopClosedCadence }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) GopSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *float64 { return v.GopSize }).(pulumi.Float64PtrOutput)
}

func (o ChannelH265SettingsOutput) GopSizeUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.GopSizeUnits }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) LookAheadRateControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.LookAheadRateControl }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) MaxBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.MaxBitrate }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) MinIInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.MinIInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) ParDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.ParDenominator }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) ParNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.ParNumerator }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) QvbrQualityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.QvbrQualityLevel }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) RateControlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.RateControlMode }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) ScanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.ScanType }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) SceneChangeDetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.SceneChangeDetect }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) Slices() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *int { return v.Slices }).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsOutput) TimecodeInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelH265Settings) *string { return v.TimecodeInsertion }).(pulumi.StringPtrOutput)
}

type ChannelH265SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelH265SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelH265Settings)(nil)).Elem()
}

func (o ChannelH265SettingsPtrOutput) ToChannelH265SettingsPtrOutput() ChannelH265SettingsPtrOutput {
	return o
}

func (o ChannelH265SettingsPtrOutput) ToChannelH265SettingsPtrOutputWithContext(ctx context.Context) ChannelH265SettingsPtrOutput {
	return o
}

func (o ChannelH265SettingsPtrOutput) Elem() ChannelH265SettingsOutput {
	return o.ApplyT(func(v *ChannelH265Settings) ChannelH265Settings {
		if v != nil {
			return *v
		}
		var ret ChannelH265Settings
		return ret
	}).(ChannelH265SettingsOutput)
}

func (o ChannelH265SettingsPtrOutput) AdaptiveQuantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.AdaptiveQuantization
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) AfdSignaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.AfdSignaling
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) AlternativeTransferFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.AlternativeTransferFunction
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) BufSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.BufSize
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) ColorMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.ColorMetadata
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) ColorSpaceSettings() ChannelH265ColorSpaceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *ChannelH265ColorSpaceSettings {
		if v == nil {
			return nil
		}
		return v.ColorSpaceSettings
	}).(ChannelH265ColorSpaceSettingsPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) FilterSettings() ChannelH265FilterSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *ChannelH265FilterSettings {
		if v == nil {
			return nil
		}
		return v.FilterSettings
	}).(ChannelH265FilterSettingsPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) FixedAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.FixedAfd
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) FlickerAq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.FlickerAq
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) FramerateDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.FramerateDenominator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) FramerateNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.FramerateNumerator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) GopClosedCadence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.GopClosedCadence
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) GopSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.GopSize
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelH265SettingsPtrOutput) GopSizeUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.GopSizeUnits
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) LookAheadRateControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.LookAheadRateControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) MaxBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.MaxBitrate
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) MinIInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.MinIInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) ParDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.ParDenominator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) ParNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.ParNumerator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) QvbrQualityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.QvbrQualityLevel
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) RateControlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.RateControlMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) ScanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.ScanType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) SceneChangeDetect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.SceneChangeDetect
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) Slices() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *int {
		if v == nil {
			return nil
		}
		return v.Slices
	}).(pulumi.IntPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func (o ChannelH265SettingsPtrOutput) TimecodeInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelH265Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimecodeInsertion
	}).(pulumi.StringPtrOutput)
}

type ChannelHdr10Settings struct {
	MaxCll  *int `pulumi:"maxCll"`
	MaxFall *int `pulumi:"maxFall"`
}

// ChannelHdr10SettingsInput is an input type that accepts ChannelHdr10SettingsArgs and ChannelHdr10SettingsOutput values.
// You can construct a concrete instance of `ChannelHdr10SettingsInput` via:
//
//          ChannelHdr10SettingsArgs{...}
type ChannelHdr10SettingsInput interface {
	pulumi.Input

	ToChannelHdr10SettingsOutput() ChannelHdr10SettingsOutput
	ToChannelHdr10SettingsOutputWithContext(context.Context) ChannelHdr10SettingsOutput
}

type ChannelHdr10SettingsArgs struct {
	MaxCll  pulumi.IntPtrInput `pulumi:"maxCll"`
	MaxFall pulumi.IntPtrInput `pulumi:"maxFall"`
}

func (ChannelHdr10SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHdr10Settings)(nil)).Elem()
}

func (i ChannelHdr10SettingsArgs) ToChannelHdr10SettingsOutput() ChannelHdr10SettingsOutput {
	return i.ToChannelHdr10SettingsOutputWithContext(context.Background())
}

func (i ChannelHdr10SettingsArgs) ToChannelHdr10SettingsOutputWithContext(ctx context.Context) ChannelHdr10SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHdr10SettingsOutput)
}

func (i ChannelHdr10SettingsArgs) ToChannelHdr10SettingsPtrOutput() ChannelHdr10SettingsPtrOutput {
	return i.ToChannelHdr10SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHdr10SettingsArgs) ToChannelHdr10SettingsPtrOutputWithContext(ctx context.Context) ChannelHdr10SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHdr10SettingsOutput).ToChannelHdr10SettingsPtrOutputWithContext(ctx)
}

// ChannelHdr10SettingsPtrInput is an input type that accepts ChannelHdr10SettingsArgs, ChannelHdr10SettingsPtr and ChannelHdr10SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHdr10SettingsPtrInput` via:
//
//          ChannelHdr10SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHdr10SettingsPtrInput interface {
	pulumi.Input

	ToChannelHdr10SettingsPtrOutput() ChannelHdr10SettingsPtrOutput
	ToChannelHdr10SettingsPtrOutputWithContext(context.Context) ChannelHdr10SettingsPtrOutput
}

type channelHdr10SettingsPtrType ChannelHdr10SettingsArgs

func ChannelHdr10SettingsPtr(v *ChannelHdr10SettingsArgs) ChannelHdr10SettingsPtrInput {
	return (*channelHdr10SettingsPtrType)(v)
}

func (*channelHdr10SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHdr10Settings)(nil)).Elem()
}

func (i *channelHdr10SettingsPtrType) ToChannelHdr10SettingsPtrOutput() ChannelHdr10SettingsPtrOutput {
	return i.ToChannelHdr10SettingsPtrOutputWithContext(context.Background())
}

func (i *channelHdr10SettingsPtrType) ToChannelHdr10SettingsPtrOutputWithContext(ctx context.Context) ChannelHdr10SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHdr10SettingsPtrOutput)
}

type ChannelHdr10SettingsOutput struct{ *pulumi.OutputState }

func (ChannelHdr10SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHdr10Settings)(nil)).Elem()
}

func (o ChannelHdr10SettingsOutput) ToChannelHdr10SettingsOutput() ChannelHdr10SettingsOutput {
	return o
}

func (o ChannelHdr10SettingsOutput) ToChannelHdr10SettingsOutputWithContext(ctx context.Context) ChannelHdr10SettingsOutput {
	return o
}

func (o ChannelHdr10SettingsOutput) ToChannelHdr10SettingsPtrOutput() ChannelHdr10SettingsPtrOutput {
	return o.ToChannelHdr10SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHdr10SettingsOutput) ToChannelHdr10SettingsPtrOutputWithContext(ctx context.Context) ChannelHdr10SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHdr10Settings) *ChannelHdr10Settings {
		return &v
	}).(ChannelHdr10SettingsPtrOutput)
}

func (o ChannelHdr10SettingsOutput) MaxCll() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHdr10Settings) *int { return v.MaxCll }).(pulumi.IntPtrOutput)
}

func (o ChannelHdr10SettingsOutput) MaxFall() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHdr10Settings) *int { return v.MaxFall }).(pulumi.IntPtrOutput)
}

type ChannelHdr10SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHdr10SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHdr10Settings)(nil)).Elem()
}

func (o ChannelHdr10SettingsPtrOutput) ToChannelHdr10SettingsPtrOutput() ChannelHdr10SettingsPtrOutput {
	return o
}

func (o ChannelHdr10SettingsPtrOutput) ToChannelHdr10SettingsPtrOutputWithContext(ctx context.Context) ChannelHdr10SettingsPtrOutput {
	return o
}

func (o ChannelHdr10SettingsPtrOutput) Elem() ChannelHdr10SettingsOutput {
	return o.ApplyT(func(v *ChannelHdr10Settings) ChannelHdr10Settings {
		if v != nil {
			return *v
		}
		var ret ChannelHdr10Settings
		return ret
	}).(ChannelHdr10SettingsOutput)
}

func (o ChannelHdr10SettingsPtrOutput) MaxCll() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHdr10Settings) *int {
		if v == nil {
			return nil
		}
		return v.MaxCll
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHdr10SettingsPtrOutput) MaxFall() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHdr10Settings) *int {
		if v == nil {
			return nil
		}
		return v.MaxFall
	}).(pulumi.IntPtrOutput)
}

type ChannelHlsAkamaiSettings struct {
	ConnectionRetryInterval *int    `pulumi:"connectionRetryInterval"`
	FilecacheDuration       *int    `pulumi:"filecacheDuration"`
	HttpTransferMode        *string `pulumi:"httpTransferMode"`
	NumRetries              *int    `pulumi:"numRetries"`
	RestartDelay            *int    `pulumi:"restartDelay"`
	Salt                    *string `pulumi:"salt"`
	Token                   *string `pulumi:"token"`
}

// ChannelHlsAkamaiSettingsInput is an input type that accepts ChannelHlsAkamaiSettingsArgs and ChannelHlsAkamaiSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsAkamaiSettingsInput` via:
//
//          ChannelHlsAkamaiSettingsArgs{...}
type ChannelHlsAkamaiSettingsInput interface {
	pulumi.Input

	ToChannelHlsAkamaiSettingsOutput() ChannelHlsAkamaiSettingsOutput
	ToChannelHlsAkamaiSettingsOutputWithContext(context.Context) ChannelHlsAkamaiSettingsOutput
}

type ChannelHlsAkamaiSettingsArgs struct {
	ConnectionRetryInterval pulumi.IntPtrInput    `pulumi:"connectionRetryInterval"`
	FilecacheDuration       pulumi.IntPtrInput    `pulumi:"filecacheDuration"`
	HttpTransferMode        pulumi.StringPtrInput `pulumi:"httpTransferMode"`
	NumRetries              pulumi.IntPtrInput    `pulumi:"numRetries"`
	RestartDelay            pulumi.IntPtrInput    `pulumi:"restartDelay"`
	Salt                    pulumi.StringPtrInput `pulumi:"salt"`
	Token                   pulumi.StringPtrInput `pulumi:"token"`
}

func (ChannelHlsAkamaiSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsAkamaiSettings)(nil)).Elem()
}

func (i ChannelHlsAkamaiSettingsArgs) ToChannelHlsAkamaiSettingsOutput() ChannelHlsAkamaiSettingsOutput {
	return i.ToChannelHlsAkamaiSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsAkamaiSettingsArgs) ToChannelHlsAkamaiSettingsOutputWithContext(ctx context.Context) ChannelHlsAkamaiSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsAkamaiSettingsOutput)
}

func (i ChannelHlsAkamaiSettingsArgs) ToChannelHlsAkamaiSettingsPtrOutput() ChannelHlsAkamaiSettingsPtrOutput {
	return i.ToChannelHlsAkamaiSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsAkamaiSettingsArgs) ToChannelHlsAkamaiSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsAkamaiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsAkamaiSettingsOutput).ToChannelHlsAkamaiSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsAkamaiSettingsPtrInput is an input type that accepts ChannelHlsAkamaiSettingsArgs, ChannelHlsAkamaiSettingsPtr and ChannelHlsAkamaiSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsAkamaiSettingsPtrInput` via:
//
//          ChannelHlsAkamaiSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsAkamaiSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsAkamaiSettingsPtrOutput() ChannelHlsAkamaiSettingsPtrOutput
	ToChannelHlsAkamaiSettingsPtrOutputWithContext(context.Context) ChannelHlsAkamaiSettingsPtrOutput
}

type channelHlsAkamaiSettingsPtrType ChannelHlsAkamaiSettingsArgs

func ChannelHlsAkamaiSettingsPtr(v *ChannelHlsAkamaiSettingsArgs) ChannelHlsAkamaiSettingsPtrInput {
	return (*channelHlsAkamaiSettingsPtrType)(v)
}

func (*channelHlsAkamaiSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsAkamaiSettings)(nil)).Elem()
}

func (i *channelHlsAkamaiSettingsPtrType) ToChannelHlsAkamaiSettingsPtrOutput() ChannelHlsAkamaiSettingsPtrOutput {
	return i.ToChannelHlsAkamaiSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsAkamaiSettingsPtrType) ToChannelHlsAkamaiSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsAkamaiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsAkamaiSettingsPtrOutput)
}

type ChannelHlsAkamaiSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsAkamaiSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsAkamaiSettings)(nil)).Elem()
}

func (o ChannelHlsAkamaiSettingsOutput) ToChannelHlsAkamaiSettingsOutput() ChannelHlsAkamaiSettingsOutput {
	return o
}

func (o ChannelHlsAkamaiSettingsOutput) ToChannelHlsAkamaiSettingsOutputWithContext(ctx context.Context) ChannelHlsAkamaiSettingsOutput {
	return o
}

func (o ChannelHlsAkamaiSettingsOutput) ToChannelHlsAkamaiSettingsPtrOutput() ChannelHlsAkamaiSettingsPtrOutput {
	return o.ToChannelHlsAkamaiSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsAkamaiSettingsOutput) ToChannelHlsAkamaiSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsAkamaiSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsAkamaiSettings) *ChannelHlsAkamaiSettings {
		return &v
	}).(ChannelHlsAkamaiSettingsPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *int { return v.ConnectionRetryInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *int { return v.FilecacheDuration }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) HttpTransferMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *string { return v.HttpTransferMode }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *int { return v.RestartDelay }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) Salt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *string { return v.Salt }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsAkamaiSettingsOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsAkamaiSettings) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type ChannelHlsAkamaiSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsAkamaiSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsAkamaiSettings)(nil)).Elem()
}

func (o ChannelHlsAkamaiSettingsPtrOutput) ToChannelHlsAkamaiSettingsPtrOutput() ChannelHlsAkamaiSettingsPtrOutput {
	return o
}

func (o ChannelHlsAkamaiSettingsPtrOutput) ToChannelHlsAkamaiSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsAkamaiSettingsPtrOutput {
	return o
}

func (o ChannelHlsAkamaiSettingsPtrOutput) Elem() ChannelHlsAkamaiSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) ChannelHlsAkamaiSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsAkamaiSettings
		return ret
	}).(ChannelHlsAkamaiSettingsOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionRetryInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *int {
		if v == nil {
			return nil
		}
		return v.FilecacheDuration
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) HttpTransferMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *string {
		if v == nil {
			return nil
		}
		return v.HttpTransferMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *int {
		if v == nil {
			return nil
		}
		return v.RestartDelay
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) Salt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *string {
		if v == nil {
			return nil
		}
		return v.Salt
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsAkamaiSettingsPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsAkamaiSettings) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

type ChannelHlsBasicPutSettings struct {
	ConnectionRetryInterval *int `pulumi:"connectionRetryInterval"`
	FilecacheDuration       *int `pulumi:"filecacheDuration"`
	NumRetries              *int `pulumi:"numRetries"`
	RestartDelay            *int `pulumi:"restartDelay"`
}

// ChannelHlsBasicPutSettingsInput is an input type that accepts ChannelHlsBasicPutSettingsArgs and ChannelHlsBasicPutSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsBasicPutSettingsInput` via:
//
//          ChannelHlsBasicPutSettingsArgs{...}
type ChannelHlsBasicPutSettingsInput interface {
	pulumi.Input

	ToChannelHlsBasicPutSettingsOutput() ChannelHlsBasicPutSettingsOutput
	ToChannelHlsBasicPutSettingsOutputWithContext(context.Context) ChannelHlsBasicPutSettingsOutput
}

type ChannelHlsBasicPutSettingsArgs struct {
	ConnectionRetryInterval pulumi.IntPtrInput `pulumi:"connectionRetryInterval"`
	FilecacheDuration       pulumi.IntPtrInput `pulumi:"filecacheDuration"`
	NumRetries              pulumi.IntPtrInput `pulumi:"numRetries"`
	RestartDelay            pulumi.IntPtrInput `pulumi:"restartDelay"`
}

func (ChannelHlsBasicPutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsBasicPutSettings)(nil)).Elem()
}

func (i ChannelHlsBasicPutSettingsArgs) ToChannelHlsBasicPutSettingsOutput() ChannelHlsBasicPutSettingsOutput {
	return i.ToChannelHlsBasicPutSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsBasicPutSettingsArgs) ToChannelHlsBasicPutSettingsOutputWithContext(ctx context.Context) ChannelHlsBasicPutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsBasicPutSettingsOutput)
}

func (i ChannelHlsBasicPutSettingsArgs) ToChannelHlsBasicPutSettingsPtrOutput() ChannelHlsBasicPutSettingsPtrOutput {
	return i.ToChannelHlsBasicPutSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsBasicPutSettingsArgs) ToChannelHlsBasicPutSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsBasicPutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsBasicPutSettingsOutput).ToChannelHlsBasicPutSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsBasicPutSettingsPtrInput is an input type that accepts ChannelHlsBasicPutSettingsArgs, ChannelHlsBasicPutSettingsPtr and ChannelHlsBasicPutSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsBasicPutSettingsPtrInput` via:
//
//          ChannelHlsBasicPutSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsBasicPutSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsBasicPutSettingsPtrOutput() ChannelHlsBasicPutSettingsPtrOutput
	ToChannelHlsBasicPutSettingsPtrOutputWithContext(context.Context) ChannelHlsBasicPutSettingsPtrOutput
}

type channelHlsBasicPutSettingsPtrType ChannelHlsBasicPutSettingsArgs

func ChannelHlsBasicPutSettingsPtr(v *ChannelHlsBasicPutSettingsArgs) ChannelHlsBasicPutSettingsPtrInput {
	return (*channelHlsBasicPutSettingsPtrType)(v)
}

func (*channelHlsBasicPutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsBasicPutSettings)(nil)).Elem()
}

func (i *channelHlsBasicPutSettingsPtrType) ToChannelHlsBasicPutSettingsPtrOutput() ChannelHlsBasicPutSettingsPtrOutput {
	return i.ToChannelHlsBasicPutSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsBasicPutSettingsPtrType) ToChannelHlsBasicPutSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsBasicPutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsBasicPutSettingsPtrOutput)
}

type ChannelHlsBasicPutSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsBasicPutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsBasicPutSettings)(nil)).Elem()
}

func (o ChannelHlsBasicPutSettingsOutput) ToChannelHlsBasicPutSettingsOutput() ChannelHlsBasicPutSettingsOutput {
	return o
}

func (o ChannelHlsBasicPutSettingsOutput) ToChannelHlsBasicPutSettingsOutputWithContext(ctx context.Context) ChannelHlsBasicPutSettingsOutput {
	return o
}

func (o ChannelHlsBasicPutSettingsOutput) ToChannelHlsBasicPutSettingsPtrOutput() ChannelHlsBasicPutSettingsPtrOutput {
	return o.ToChannelHlsBasicPutSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsBasicPutSettingsOutput) ToChannelHlsBasicPutSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsBasicPutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsBasicPutSettings) *ChannelHlsBasicPutSettings {
		return &v
	}).(ChannelHlsBasicPutSettingsPtrOutput)
}

func (o ChannelHlsBasicPutSettingsOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsBasicPutSettings) *int { return v.ConnectionRetryInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsBasicPutSettingsOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsBasicPutSettings) *int { return v.FilecacheDuration }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsBasicPutSettingsOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsBasicPutSettings) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsBasicPutSettingsOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsBasicPutSettings) *int { return v.RestartDelay }).(pulumi.IntPtrOutput)
}

type ChannelHlsBasicPutSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsBasicPutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsBasicPutSettings)(nil)).Elem()
}

func (o ChannelHlsBasicPutSettingsPtrOutput) ToChannelHlsBasicPutSettingsPtrOutput() ChannelHlsBasicPutSettingsPtrOutput {
	return o
}

func (o ChannelHlsBasicPutSettingsPtrOutput) ToChannelHlsBasicPutSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsBasicPutSettingsPtrOutput {
	return o
}

func (o ChannelHlsBasicPutSettingsPtrOutput) Elem() ChannelHlsBasicPutSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsBasicPutSettings) ChannelHlsBasicPutSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsBasicPutSettings
		return ret
	}).(ChannelHlsBasicPutSettingsOutput)
}

func (o ChannelHlsBasicPutSettingsPtrOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsBasicPutSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionRetryInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsBasicPutSettingsPtrOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsBasicPutSettings) *int {
		if v == nil {
			return nil
		}
		return v.FilecacheDuration
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsBasicPutSettingsPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsBasicPutSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsBasicPutSettingsPtrOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsBasicPutSettings) *int {
		if v == nil {
			return nil
		}
		return v.RestartDelay
	}).(pulumi.IntPtrOutput)
}

type ChannelHlsCdnSettings struct {
	HlsAkamaiSettings     *ChannelHlsAkamaiSettings     `pulumi:"hlsAkamaiSettings"`
	HlsBasicPutSettings   *ChannelHlsBasicPutSettings   `pulumi:"hlsBasicPutSettings"`
	HlsMediaStoreSettings *ChannelHlsMediaStoreSettings `pulumi:"hlsMediaStoreSettings"`
	HlsS3Settings         *ChannelHlsS3Settings         `pulumi:"hlsS3Settings"`
	HlsWebdavSettings     *ChannelHlsWebdavSettings     `pulumi:"hlsWebdavSettings"`
}

// ChannelHlsCdnSettingsInput is an input type that accepts ChannelHlsCdnSettingsArgs and ChannelHlsCdnSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsCdnSettingsInput` via:
//
//          ChannelHlsCdnSettingsArgs{...}
type ChannelHlsCdnSettingsInput interface {
	pulumi.Input

	ToChannelHlsCdnSettingsOutput() ChannelHlsCdnSettingsOutput
	ToChannelHlsCdnSettingsOutputWithContext(context.Context) ChannelHlsCdnSettingsOutput
}

type ChannelHlsCdnSettingsArgs struct {
	HlsAkamaiSettings     ChannelHlsAkamaiSettingsPtrInput     `pulumi:"hlsAkamaiSettings"`
	HlsBasicPutSettings   ChannelHlsBasicPutSettingsPtrInput   `pulumi:"hlsBasicPutSettings"`
	HlsMediaStoreSettings ChannelHlsMediaStoreSettingsPtrInput `pulumi:"hlsMediaStoreSettings"`
	HlsS3Settings         ChannelHlsS3SettingsPtrInput         `pulumi:"hlsS3Settings"`
	HlsWebdavSettings     ChannelHlsWebdavSettingsPtrInput     `pulumi:"hlsWebdavSettings"`
}

func (ChannelHlsCdnSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsCdnSettings)(nil)).Elem()
}

func (i ChannelHlsCdnSettingsArgs) ToChannelHlsCdnSettingsOutput() ChannelHlsCdnSettingsOutput {
	return i.ToChannelHlsCdnSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsCdnSettingsArgs) ToChannelHlsCdnSettingsOutputWithContext(ctx context.Context) ChannelHlsCdnSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsCdnSettingsOutput)
}

func (i ChannelHlsCdnSettingsArgs) ToChannelHlsCdnSettingsPtrOutput() ChannelHlsCdnSettingsPtrOutput {
	return i.ToChannelHlsCdnSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsCdnSettingsArgs) ToChannelHlsCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsCdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsCdnSettingsOutput).ToChannelHlsCdnSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsCdnSettingsPtrInput is an input type that accepts ChannelHlsCdnSettingsArgs, ChannelHlsCdnSettingsPtr and ChannelHlsCdnSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsCdnSettingsPtrInput` via:
//
//          ChannelHlsCdnSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsCdnSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsCdnSettingsPtrOutput() ChannelHlsCdnSettingsPtrOutput
	ToChannelHlsCdnSettingsPtrOutputWithContext(context.Context) ChannelHlsCdnSettingsPtrOutput
}

type channelHlsCdnSettingsPtrType ChannelHlsCdnSettingsArgs

func ChannelHlsCdnSettingsPtr(v *ChannelHlsCdnSettingsArgs) ChannelHlsCdnSettingsPtrInput {
	return (*channelHlsCdnSettingsPtrType)(v)
}

func (*channelHlsCdnSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsCdnSettings)(nil)).Elem()
}

func (i *channelHlsCdnSettingsPtrType) ToChannelHlsCdnSettingsPtrOutput() ChannelHlsCdnSettingsPtrOutput {
	return i.ToChannelHlsCdnSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsCdnSettingsPtrType) ToChannelHlsCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsCdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsCdnSettingsPtrOutput)
}

type ChannelHlsCdnSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsCdnSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsCdnSettings)(nil)).Elem()
}

func (o ChannelHlsCdnSettingsOutput) ToChannelHlsCdnSettingsOutput() ChannelHlsCdnSettingsOutput {
	return o
}

func (o ChannelHlsCdnSettingsOutput) ToChannelHlsCdnSettingsOutputWithContext(ctx context.Context) ChannelHlsCdnSettingsOutput {
	return o
}

func (o ChannelHlsCdnSettingsOutput) ToChannelHlsCdnSettingsPtrOutput() ChannelHlsCdnSettingsPtrOutput {
	return o.ToChannelHlsCdnSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsCdnSettingsOutput) ToChannelHlsCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsCdnSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsCdnSettings) *ChannelHlsCdnSettings {
		return &v
	}).(ChannelHlsCdnSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsOutput) HlsAkamaiSettings() ChannelHlsAkamaiSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsCdnSettings) *ChannelHlsAkamaiSettings { return v.HlsAkamaiSettings }).(ChannelHlsAkamaiSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsOutput) HlsBasicPutSettings() ChannelHlsBasicPutSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsCdnSettings) *ChannelHlsBasicPutSettings { return v.HlsBasicPutSettings }).(ChannelHlsBasicPutSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsOutput) HlsMediaStoreSettings() ChannelHlsMediaStoreSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsCdnSettings) *ChannelHlsMediaStoreSettings { return v.HlsMediaStoreSettings }).(ChannelHlsMediaStoreSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsOutput) HlsS3Settings() ChannelHlsS3SettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsCdnSettings) *ChannelHlsS3Settings { return v.HlsS3Settings }).(ChannelHlsS3SettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsOutput) HlsWebdavSettings() ChannelHlsWebdavSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsCdnSettings) *ChannelHlsWebdavSettings { return v.HlsWebdavSettings }).(ChannelHlsWebdavSettingsPtrOutput)
}

type ChannelHlsCdnSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsCdnSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsCdnSettings)(nil)).Elem()
}

func (o ChannelHlsCdnSettingsPtrOutput) ToChannelHlsCdnSettingsPtrOutput() ChannelHlsCdnSettingsPtrOutput {
	return o
}

func (o ChannelHlsCdnSettingsPtrOutput) ToChannelHlsCdnSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsCdnSettingsPtrOutput {
	return o
}

func (o ChannelHlsCdnSettingsPtrOutput) Elem() ChannelHlsCdnSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsCdnSettings) ChannelHlsCdnSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsCdnSettings
		return ret
	}).(ChannelHlsCdnSettingsOutput)
}

func (o ChannelHlsCdnSettingsPtrOutput) HlsAkamaiSettings() ChannelHlsAkamaiSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsCdnSettings) *ChannelHlsAkamaiSettings {
		if v == nil {
			return nil
		}
		return v.HlsAkamaiSettings
	}).(ChannelHlsAkamaiSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsPtrOutput) HlsBasicPutSettings() ChannelHlsBasicPutSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsCdnSettings) *ChannelHlsBasicPutSettings {
		if v == nil {
			return nil
		}
		return v.HlsBasicPutSettings
	}).(ChannelHlsBasicPutSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsPtrOutput) HlsMediaStoreSettings() ChannelHlsMediaStoreSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsCdnSettings) *ChannelHlsMediaStoreSettings {
		if v == nil {
			return nil
		}
		return v.HlsMediaStoreSettings
	}).(ChannelHlsMediaStoreSettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsPtrOutput) HlsS3Settings() ChannelHlsS3SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsCdnSettings) *ChannelHlsS3Settings {
		if v == nil {
			return nil
		}
		return v.HlsS3Settings
	}).(ChannelHlsS3SettingsPtrOutput)
}

func (o ChannelHlsCdnSettingsPtrOutput) HlsWebdavSettings() ChannelHlsWebdavSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsCdnSettings) *ChannelHlsWebdavSettings {
		if v == nil {
			return nil
		}
		return v.HlsWebdavSettings
	}).(ChannelHlsWebdavSettingsPtrOutput)
}

type ChannelHlsGroupSettings struct {
	AdMarkers                  []string                        `pulumi:"adMarkers"`
	BaseUrlContent             *string                         `pulumi:"baseUrlContent"`
	BaseUrlContent1            *string                         `pulumi:"baseUrlContent1"`
	BaseUrlManifest            *string                         `pulumi:"baseUrlManifest"`
	BaseUrlManifest1           *string                         `pulumi:"baseUrlManifest1"`
	CaptionLanguageMappings    []ChannelCaptionLanguageMapping `pulumi:"captionLanguageMappings"`
	CaptionLanguageSetting     *string                         `pulumi:"captionLanguageSetting"`
	ClientCache                *string                         `pulumi:"clientCache"`
	CodecSpecification         *string                         `pulumi:"codecSpecification"`
	ConstantIv                 *string                         `pulumi:"constantIv"`
	Destination                *ChannelOutputLocationRef       `pulumi:"destination"`
	DirectoryStructure         *string                         `pulumi:"directoryStructure"`
	DiscontinuityTags          *string                         `pulumi:"discontinuityTags"`
	EncryptionType             *string                         `pulumi:"encryptionType"`
	HlsCdnSettings             *ChannelHlsCdnSettings          `pulumi:"hlsCdnSettings"`
	HlsId3SegmentTagging       *string                         `pulumi:"hlsId3SegmentTagging"`
	IFrameOnlyPlaylists        *string                         `pulumi:"iFrameOnlyPlaylists"`
	IncompleteSegmentBehavior  *string                         `pulumi:"incompleteSegmentBehavior"`
	IndexNSegments             *int                            `pulumi:"indexNSegments"`
	InputLossAction            *string                         `pulumi:"inputLossAction"`
	IvInManifest               *string                         `pulumi:"ivInManifest"`
	IvSource                   *string                         `pulumi:"ivSource"`
	KeepSegments               *int                            `pulumi:"keepSegments"`
	KeyFormat                  *string                         `pulumi:"keyFormat"`
	KeyFormatVersions          *string                         `pulumi:"keyFormatVersions"`
	KeyProviderSettings        *ChannelKeyProviderSettings     `pulumi:"keyProviderSettings"`
	ManifestCompression        *string                         `pulumi:"manifestCompression"`
	ManifestDurationFormat     *string                         `pulumi:"manifestDurationFormat"`
	MinSegmentLength           *int                            `pulumi:"minSegmentLength"`
	Mode                       *string                         `pulumi:"mode"`
	OutputSelection            *string                         `pulumi:"outputSelection"`
	ProgramDateTime            *string                         `pulumi:"programDateTime"`
	ProgramDateTimePeriod      *int                            `pulumi:"programDateTimePeriod"`
	RedundantManifest          *string                         `pulumi:"redundantManifest"`
	SegmentLength              *int                            `pulumi:"segmentLength"`
	SegmentationMode           *string                         `pulumi:"segmentationMode"`
	SegmentsPerSubdirectory    *int                            `pulumi:"segmentsPerSubdirectory"`
	StreamInfResolution        *string                         `pulumi:"streamInfResolution"`
	TimedMetadataId3Frame      *string                         `pulumi:"timedMetadataId3Frame"`
	TimedMetadataId3Period     *int                            `pulumi:"timedMetadataId3Period"`
	TimestampDeltaMilliseconds *int                            `pulumi:"timestampDeltaMilliseconds"`
	TsFileMode                 *string                         `pulumi:"tsFileMode"`
}

// ChannelHlsGroupSettingsInput is an input type that accepts ChannelHlsGroupSettingsArgs and ChannelHlsGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsGroupSettingsInput` via:
//
//          ChannelHlsGroupSettingsArgs{...}
type ChannelHlsGroupSettingsInput interface {
	pulumi.Input

	ToChannelHlsGroupSettingsOutput() ChannelHlsGroupSettingsOutput
	ToChannelHlsGroupSettingsOutputWithContext(context.Context) ChannelHlsGroupSettingsOutput
}

type ChannelHlsGroupSettingsArgs struct {
	AdMarkers                  pulumi.StringArrayInput                 `pulumi:"adMarkers"`
	BaseUrlContent             pulumi.StringPtrInput                   `pulumi:"baseUrlContent"`
	BaseUrlContent1            pulumi.StringPtrInput                   `pulumi:"baseUrlContent1"`
	BaseUrlManifest            pulumi.StringPtrInput                   `pulumi:"baseUrlManifest"`
	BaseUrlManifest1           pulumi.StringPtrInput                   `pulumi:"baseUrlManifest1"`
	CaptionLanguageMappings    ChannelCaptionLanguageMappingArrayInput `pulumi:"captionLanguageMappings"`
	CaptionLanguageSetting     pulumi.StringPtrInput                   `pulumi:"captionLanguageSetting"`
	ClientCache                pulumi.StringPtrInput                   `pulumi:"clientCache"`
	CodecSpecification         pulumi.StringPtrInput                   `pulumi:"codecSpecification"`
	ConstantIv                 pulumi.StringPtrInput                   `pulumi:"constantIv"`
	Destination                ChannelOutputLocationRefPtrInput        `pulumi:"destination"`
	DirectoryStructure         pulumi.StringPtrInput                   `pulumi:"directoryStructure"`
	DiscontinuityTags          pulumi.StringPtrInput                   `pulumi:"discontinuityTags"`
	EncryptionType             pulumi.StringPtrInput                   `pulumi:"encryptionType"`
	HlsCdnSettings             ChannelHlsCdnSettingsPtrInput           `pulumi:"hlsCdnSettings"`
	HlsId3SegmentTagging       pulumi.StringPtrInput                   `pulumi:"hlsId3SegmentTagging"`
	IFrameOnlyPlaylists        pulumi.StringPtrInput                   `pulumi:"iFrameOnlyPlaylists"`
	IncompleteSegmentBehavior  pulumi.StringPtrInput                   `pulumi:"incompleteSegmentBehavior"`
	IndexNSegments             pulumi.IntPtrInput                      `pulumi:"indexNSegments"`
	InputLossAction            pulumi.StringPtrInput                   `pulumi:"inputLossAction"`
	IvInManifest               pulumi.StringPtrInput                   `pulumi:"ivInManifest"`
	IvSource                   pulumi.StringPtrInput                   `pulumi:"ivSource"`
	KeepSegments               pulumi.IntPtrInput                      `pulumi:"keepSegments"`
	KeyFormat                  pulumi.StringPtrInput                   `pulumi:"keyFormat"`
	KeyFormatVersions          pulumi.StringPtrInput                   `pulumi:"keyFormatVersions"`
	KeyProviderSettings        ChannelKeyProviderSettingsPtrInput      `pulumi:"keyProviderSettings"`
	ManifestCompression        pulumi.StringPtrInput                   `pulumi:"manifestCompression"`
	ManifestDurationFormat     pulumi.StringPtrInput                   `pulumi:"manifestDurationFormat"`
	MinSegmentLength           pulumi.IntPtrInput                      `pulumi:"minSegmentLength"`
	Mode                       pulumi.StringPtrInput                   `pulumi:"mode"`
	OutputSelection            pulumi.StringPtrInput                   `pulumi:"outputSelection"`
	ProgramDateTime            pulumi.StringPtrInput                   `pulumi:"programDateTime"`
	ProgramDateTimePeriod      pulumi.IntPtrInput                      `pulumi:"programDateTimePeriod"`
	RedundantManifest          pulumi.StringPtrInput                   `pulumi:"redundantManifest"`
	SegmentLength              pulumi.IntPtrInput                      `pulumi:"segmentLength"`
	SegmentationMode           pulumi.StringPtrInput                   `pulumi:"segmentationMode"`
	SegmentsPerSubdirectory    pulumi.IntPtrInput                      `pulumi:"segmentsPerSubdirectory"`
	StreamInfResolution        pulumi.StringPtrInput                   `pulumi:"streamInfResolution"`
	TimedMetadataId3Frame      pulumi.StringPtrInput                   `pulumi:"timedMetadataId3Frame"`
	TimedMetadataId3Period     pulumi.IntPtrInput                      `pulumi:"timedMetadataId3Period"`
	TimestampDeltaMilliseconds pulumi.IntPtrInput                      `pulumi:"timestampDeltaMilliseconds"`
	TsFileMode                 pulumi.StringPtrInput                   `pulumi:"tsFileMode"`
}

func (ChannelHlsGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsGroupSettings)(nil)).Elem()
}

func (i ChannelHlsGroupSettingsArgs) ToChannelHlsGroupSettingsOutput() ChannelHlsGroupSettingsOutput {
	return i.ToChannelHlsGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsGroupSettingsArgs) ToChannelHlsGroupSettingsOutputWithContext(ctx context.Context) ChannelHlsGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsGroupSettingsOutput)
}

func (i ChannelHlsGroupSettingsArgs) ToChannelHlsGroupSettingsPtrOutput() ChannelHlsGroupSettingsPtrOutput {
	return i.ToChannelHlsGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsGroupSettingsArgs) ToChannelHlsGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsGroupSettingsOutput).ToChannelHlsGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsGroupSettingsPtrInput is an input type that accepts ChannelHlsGroupSettingsArgs, ChannelHlsGroupSettingsPtr and ChannelHlsGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsGroupSettingsPtrInput` via:
//
//          ChannelHlsGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsGroupSettingsPtrOutput() ChannelHlsGroupSettingsPtrOutput
	ToChannelHlsGroupSettingsPtrOutputWithContext(context.Context) ChannelHlsGroupSettingsPtrOutput
}

type channelHlsGroupSettingsPtrType ChannelHlsGroupSettingsArgs

func ChannelHlsGroupSettingsPtr(v *ChannelHlsGroupSettingsArgs) ChannelHlsGroupSettingsPtrInput {
	return (*channelHlsGroupSettingsPtrType)(v)
}

func (*channelHlsGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsGroupSettings)(nil)).Elem()
}

func (i *channelHlsGroupSettingsPtrType) ToChannelHlsGroupSettingsPtrOutput() ChannelHlsGroupSettingsPtrOutput {
	return i.ToChannelHlsGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsGroupSettingsPtrType) ToChannelHlsGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsGroupSettingsPtrOutput)
}

type ChannelHlsGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsGroupSettings)(nil)).Elem()
}

func (o ChannelHlsGroupSettingsOutput) ToChannelHlsGroupSettingsOutput() ChannelHlsGroupSettingsOutput {
	return o
}

func (o ChannelHlsGroupSettingsOutput) ToChannelHlsGroupSettingsOutputWithContext(ctx context.Context) ChannelHlsGroupSettingsOutput {
	return o
}

func (o ChannelHlsGroupSettingsOutput) ToChannelHlsGroupSettingsPtrOutput() ChannelHlsGroupSettingsPtrOutput {
	return o.ToChannelHlsGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsGroupSettingsOutput) ToChannelHlsGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsGroupSettings) *ChannelHlsGroupSettings {
		return &v
	}).(ChannelHlsGroupSettingsPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) AdMarkers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) []string { return v.AdMarkers }).(pulumi.StringArrayOutput)
}

func (o ChannelHlsGroupSettingsOutput) BaseUrlContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.BaseUrlContent }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) BaseUrlContent1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.BaseUrlContent1 }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) BaseUrlManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.BaseUrlManifest }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) BaseUrlManifest1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.BaseUrlManifest1 }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) CaptionLanguageMappings() ChannelCaptionLanguageMappingArrayOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) []ChannelCaptionLanguageMapping { return v.CaptionLanguageMappings }).(ChannelCaptionLanguageMappingArrayOutput)
}

func (o ChannelHlsGroupSettingsOutput) CaptionLanguageSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.CaptionLanguageSetting }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) ClientCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.ClientCache }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) CodecSpecification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.CodecSpecification }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) ConstantIv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.ConstantIv }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) DirectoryStructure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.DirectoryStructure }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) DiscontinuityTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.DiscontinuityTags }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) HlsCdnSettings() ChannelHlsCdnSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *ChannelHlsCdnSettings { return v.HlsCdnSettings }).(ChannelHlsCdnSettingsPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) HlsId3SegmentTagging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.HlsId3SegmentTagging }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) IFrameOnlyPlaylists() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.IFrameOnlyPlaylists }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) IncompleteSegmentBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.IncompleteSegmentBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) IndexNSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.IndexNSegments }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.InputLossAction }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) IvInManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.IvInManifest }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) IvSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.IvSource }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) KeepSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.KeepSegments }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) KeyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.KeyFormat }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) KeyFormatVersions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.KeyFormatVersions }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) KeyProviderSettings() ChannelKeyProviderSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *ChannelKeyProviderSettings { return v.KeyProviderSettings }).(ChannelKeyProviderSettingsPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) ManifestCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.ManifestCompression }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) ManifestDurationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.ManifestDurationFormat }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) MinSegmentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.MinSegmentLength }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) OutputSelection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.OutputSelection }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) ProgramDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.ProgramDateTime }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) ProgramDateTimePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.ProgramDateTimePeriod }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) RedundantManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.RedundantManifest }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) SegmentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.SegmentLength }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) SegmentationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.SegmentationMode }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) SegmentsPerSubdirectory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.SegmentsPerSubdirectory }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) StreamInfResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.StreamInfResolution }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) TimedMetadataId3Frame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.TimedMetadataId3Frame }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) TimedMetadataId3Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.TimedMetadataId3Period }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) TimestampDeltaMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *int { return v.TimestampDeltaMilliseconds }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsOutput) TsFileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsGroupSettings) *string { return v.TsFileMode }).(pulumi.StringPtrOutput)
}

type ChannelHlsGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsGroupSettings)(nil)).Elem()
}

func (o ChannelHlsGroupSettingsPtrOutput) ToChannelHlsGroupSettingsPtrOutput() ChannelHlsGroupSettingsPtrOutput {
	return o
}

func (o ChannelHlsGroupSettingsPtrOutput) ToChannelHlsGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsGroupSettingsPtrOutput {
	return o
}

func (o ChannelHlsGroupSettingsPtrOutput) Elem() ChannelHlsGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) ChannelHlsGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsGroupSettings
		return ret
	}).(ChannelHlsGroupSettingsOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) AdMarkers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) []string {
		if v == nil {
			return nil
		}
		return v.AdMarkers
	}).(pulumi.StringArrayOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) BaseUrlContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrlContent
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) BaseUrlContent1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrlContent1
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) BaseUrlManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrlManifest
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) BaseUrlManifest1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrlManifest1
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) CaptionLanguageMappings() ChannelCaptionLanguageMappingArrayOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) []ChannelCaptionLanguageMapping {
		if v == nil {
			return nil
		}
		return v.CaptionLanguageMappings
	}).(ChannelCaptionLanguageMappingArrayOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) CaptionLanguageSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.CaptionLanguageSetting
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) ClientCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientCache
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) CodecSpecification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.CodecSpecification
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) ConstantIv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConstantIv
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) DirectoryStructure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryStructure
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) DiscontinuityTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.DiscontinuityTags
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) HlsCdnSettings() ChannelHlsCdnSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *ChannelHlsCdnSettings {
		if v == nil {
			return nil
		}
		return v.HlsCdnSettings
	}).(ChannelHlsCdnSettingsPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) HlsId3SegmentTagging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.HlsId3SegmentTagging
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) IFrameOnlyPlaylists() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.IFrameOnlyPlaylists
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) IncompleteSegmentBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.IncompleteSegmentBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) IndexNSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.IndexNSegments
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputLossAction
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) IvInManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.IvInManifest
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) IvSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.IvSource
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) KeepSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.KeepSegments
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) KeyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.KeyFormat
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) KeyFormatVersions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.KeyFormatVersions
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) KeyProviderSettings() ChannelKeyProviderSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *ChannelKeyProviderSettings {
		if v == nil {
			return nil
		}
		return v.KeyProviderSettings
	}).(ChannelKeyProviderSettingsPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) ManifestCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.ManifestCompression
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) ManifestDurationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.ManifestDurationFormat
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) MinSegmentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinSegmentLength
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) OutputSelection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.OutputSelection
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) ProgramDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProgramDateTime
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) ProgramDateTimePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.ProgramDateTimePeriod
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) RedundantManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.RedundantManifest
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) SegmentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.SegmentLength
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) SegmentationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.SegmentationMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) SegmentsPerSubdirectory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.SegmentsPerSubdirectory
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) StreamInfResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.StreamInfResolution
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) TimedMetadataId3Frame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataId3Frame
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) TimedMetadataId3Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.TimedMetadataId3Period
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) TimestampDeltaMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.TimestampDeltaMilliseconds
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsGroupSettingsPtrOutput) TsFileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.TsFileMode
	}).(pulumi.StringPtrOutput)
}

type ChannelHlsInputSettings struct {
	Bandwidth      *int `pulumi:"bandwidth"`
	BufferSegments *int `pulumi:"bufferSegments"`
	Retries        *int `pulumi:"retries"`
	RetryInterval  *int `pulumi:"retryInterval"`
}

// ChannelHlsInputSettingsInput is an input type that accepts ChannelHlsInputSettingsArgs and ChannelHlsInputSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsInputSettingsInput` via:
//
//          ChannelHlsInputSettingsArgs{...}
type ChannelHlsInputSettingsInput interface {
	pulumi.Input

	ToChannelHlsInputSettingsOutput() ChannelHlsInputSettingsOutput
	ToChannelHlsInputSettingsOutputWithContext(context.Context) ChannelHlsInputSettingsOutput
}

type ChannelHlsInputSettingsArgs struct {
	Bandwidth      pulumi.IntPtrInput `pulumi:"bandwidth"`
	BufferSegments pulumi.IntPtrInput `pulumi:"bufferSegments"`
	Retries        pulumi.IntPtrInput `pulumi:"retries"`
	RetryInterval  pulumi.IntPtrInput `pulumi:"retryInterval"`
}

func (ChannelHlsInputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsInputSettings)(nil)).Elem()
}

func (i ChannelHlsInputSettingsArgs) ToChannelHlsInputSettingsOutput() ChannelHlsInputSettingsOutput {
	return i.ToChannelHlsInputSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsInputSettingsArgs) ToChannelHlsInputSettingsOutputWithContext(ctx context.Context) ChannelHlsInputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsInputSettingsOutput)
}

func (i ChannelHlsInputSettingsArgs) ToChannelHlsInputSettingsPtrOutput() ChannelHlsInputSettingsPtrOutput {
	return i.ToChannelHlsInputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsInputSettingsArgs) ToChannelHlsInputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsInputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsInputSettingsOutput).ToChannelHlsInputSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsInputSettingsPtrInput is an input type that accepts ChannelHlsInputSettingsArgs, ChannelHlsInputSettingsPtr and ChannelHlsInputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsInputSettingsPtrInput` via:
//
//          ChannelHlsInputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsInputSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsInputSettingsPtrOutput() ChannelHlsInputSettingsPtrOutput
	ToChannelHlsInputSettingsPtrOutputWithContext(context.Context) ChannelHlsInputSettingsPtrOutput
}

type channelHlsInputSettingsPtrType ChannelHlsInputSettingsArgs

func ChannelHlsInputSettingsPtr(v *ChannelHlsInputSettingsArgs) ChannelHlsInputSettingsPtrInput {
	return (*channelHlsInputSettingsPtrType)(v)
}

func (*channelHlsInputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsInputSettings)(nil)).Elem()
}

func (i *channelHlsInputSettingsPtrType) ToChannelHlsInputSettingsPtrOutput() ChannelHlsInputSettingsPtrOutput {
	return i.ToChannelHlsInputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsInputSettingsPtrType) ToChannelHlsInputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsInputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsInputSettingsPtrOutput)
}

type ChannelHlsInputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsInputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsInputSettings)(nil)).Elem()
}

func (o ChannelHlsInputSettingsOutput) ToChannelHlsInputSettingsOutput() ChannelHlsInputSettingsOutput {
	return o
}

func (o ChannelHlsInputSettingsOutput) ToChannelHlsInputSettingsOutputWithContext(ctx context.Context) ChannelHlsInputSettingsOutput {
	return o
}

func (o ChannelHlsInputSettingsOutput) ToChannelHlsInputSettingsPtrOutput() ChannelHlsInputSettingsPtrOutput {
	return o.ToChannelHlsInputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsInputSettingsOutput) ToChannelHlsInputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsInputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsInputSettings) *ChannelHlsInputSettings {
		return &v
	}).(ChannelHlsInputSettingsPtrOutput)
}

func (o ChannelHlsInputSettingsOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsInputSettings) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsInputSettingsOutput) BufferSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsInputSettings) *int { return v.BufferSegments }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsInputSettingsOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsInputSettings) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsInputSettingsOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsInputSettings) *int { return v.RetryInterval }).(pulumi.IntPtrOutput)
}

type ChannelHlsInputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsInputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsInputSettings)(nil)).Elem()
}

func (o ChannelHlsInputSettingsPtrOutput) ToChannelHlsInputSettingsPtrOutput() ChannelHlsInputSettingsPtrOutput {
	return o
}

func (o ChannelHlsInputSettingsPtrOutput) ToChannelHlsInputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsInputSettingsPtrOutput {
	return o
}

func (o ChannelHlsInputSettingsPtrOutput) Elem() ChannelHlsInputSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsInputSettings) ChannelHlsInputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsInputSettings
		return ret
	}).(ChannelHlsInputSettingsOutput)
}

func (o ChannelHlsInputSettingsPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsInputSettings) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsInputSettingsPtrOutput) BufferSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsInputSettings) *int {
		if v == nil {
			return nil
		}
		return v.BufferSegments
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsInputSettingsPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsInputSettings) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsInputSettingsPtrOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsInputSettings) *int {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.IntPtrOutput)
}

type ChannelHlsMediaStoreSettings struct {
	ConnectionRetryInterval *int    `pulumi:"connectionRetryInterval"`
	FilecacheDuration       *int    `pulumi:"filecacheDuration"`
	MediaStoreStorageClass  *string `pulumi:"mediaStoreStorageClass"`
	NumRetries              *int    `pulumi:"numRetries"`
	RestartDelay            *int    `pulumi:"restartDelay"`
}

// ChannelHlsMediaStoreSettingsInput is an input type that accepts ChannelHlsMediaStoreSettingsArgs and ChannelHlsMediaStoreSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsMediaStoreSettingsInput` via:
//
//          ChannelHlsMediaStoreSettingsArgs{...}
type ChannelHlsMediaStoreSettingsInput interface {
	pulumi.Input

	ToChannelHlsMediaStoreSettingsOutput() ChannelHlsMediaStoreSettingsOutput
	ToChannelHlsMediaStoreSettingsOutputWithContext(context.Context) ChannelHlsMediaStoreSettingsOutput
}

type ChannelHlsMediaStoreSettingsArgs struct {
	ConnectionRetryInterval pulumi.IntPtrInput    `pulumi:"connectionRetryInterval"`
	FilecacheDuration       pulumi.IntPtrInput    `pulumi:"filecacheDuration"`
	MediaStoreStorageClass  pulumi.StringPtrInput `pulumi:"mediaStoreStorageClass"`
	NumRetries              pulumi.IntPtrInput    `pulumi:"numRetries"`
	RestartDelay            pulumi.IntPtrInput    `pulumi:"restartDelay"`
}

func (ChannelHlsMediaStoreSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsMediaStoreSettings)(nil)).Elem()
}

func (i ChannelHlsMediaStoreSettingsArgs) ToChannelHlsMediaStoreSettingsOutput() ChannelHlsMediaStoreSettingsOutput {
	return i.ToChannelHlsMediaStoreSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsMediaStoreSettingsArgs) ToChannelHlsMediaStoreSettingsOutputWithContext(ctx context.Context) ChannelHlsMediaStoreSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsMediaStoreSettingsOutput)
}

func (i ChannelHlsMediaStoreSettingsArgs) ToChannelHlsMediaStoreSettingsPtrOutput() ChannelHlsMediaStoreSettingsPtrOutput {
	return i.ToChannelHlsMediaStoreSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsMediaStoreSettingsArgs) ToChannelHlsMediaStoreSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsMediaStoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsMediaStoreSettingsOutput).ToChannelHlsMediaStoreSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsMediaStoreSettingsPtrInput is an input type that accepts ChannelHlsMediaStoreSettingsArgs, ChannelHlsMediaStoreSettingsPtr and ChannelHlsMediaStoreSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsMediaStoreSettingsPtrInput` via:
//
//          ChannelHlsMediaStoreSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsMediaStoreSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsMediaStoreSettingsPtrOutput() ChannelHlsMediaStoreSettingsPtrOutput
	ToChannelHlsMediaStoreSettingsPtrOutputWithContext(context.Context) ChannelHlsMediaStoreSettingsPtrOutput
}

type channelHlsMediaStoreSettingsPtrType ChannelHlsMediaStoreSettingsArgs

func ChannelHlsMediaStoreSettingsPtr(v *ChannelHlsMediaStoreSettingsArgs) ChannelHlsMediaStoreSettingsPtrInput {
	return (*channelHlsMediaStoreSettingsPtrType)(v)
}

func (*channelHlsMediaStoreSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsMediaStoreSettings)(nil)).Elem()
}

func (i *channelHlsMediaStoreSettingsPtrType) ToChannelHlsMediaStoreSettingsPtrOutput() ChannelHlsMediaStoreSettingsPtrOutput {
	return i.ToChannelHlsMediaStoreSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsMediaStoreSettingsPtrType) ToChannelHlsMediaStoreSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsMediaStoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsMediaStoreSettingsPtrOutput)
}

type ChannelHlsMediaStoreSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsMediaStoreSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsMediaStoreSettings)(nil)).Elem()
}

func (o ChannelHlsMediaStoreSettingsOutput) ToChannelHlsMediaStoreSettingsOutput() ChannelHlsMediaStoreSettingsOutput {
	return o
}

func (o ChannelHlsMediaStoreSettingsOutput) ToChannelHlsMediaStoreSettingsOutputWithContext(ctx context.Context) ChannelHlsMediaStoreSettingsOutput {
	return o
}

func (o ChannelHlsMediaStoreSettingsOutput) ToChannelHlsMediaStoreSettingsPtrOutput() ChannelHlsMediaStoreSettingsPtrOutput {
	return o.ToChannelHlsMediaStoreSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsMediaStoreSettingsOutput) ToChannelHlsMediaStoreSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsMediaStoreSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsMediaStoreSettings) *ChannelHlsMediaStoreSettings {
		return &v
	}).(ChannelHlsMediaStoreSettingsPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsMediaStoreSettings) *int { return v.ConnectionRetryInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsMediaStoreSettings) *int { return v.FilecacheDuration }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsOutput) MediaStoreStorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsMediaStoreSettings) *string { return v.MediaStoreStorageClass }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsMediaStoreSettings) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsMediaStoreSettings) *int { return v.RestartDelay }).(pulumi.IntPtrOutput)
}

type ChannelHlsMediaStoreSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsMediaStoreSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsMediaStoreSettings)(nil)).Elem()
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) ToChannelHlsMediaStoreSettingsPtrOutput() ChannelHlsMediaStoreSettingsPtrOutput {
	return o
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) ToChannelHlsMediaStoreSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsMediaStoreSettingsPtrOutput {
	return o
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) Elem() ChannelHlsMediaStoreSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsMediaStoreSettings) ChannelHlsMediaStoreSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsMediaStoreSettings
		return ret
	}).(ChannelHlsMediaStoreSettingsOutput)
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsMediaStoreSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionRetryInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsMediaStoreSettings) *int {
		if v == nil {
			return nil
		}
		return v.FilecacheDuration
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) MediaStoreStorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsMediaStoreSettings) *string {
		if v == nil {
			return nil
		}
		return v.MediaStoreStorageClass
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsMediaStoreSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsMediaStoreSettingsPtrOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsMediaStoreSettings) *int {
		if v == nil {
			return nil
		}
		return v.RestartDelay
	}).(pulumi.IntPtrOutput)
}

type ChannelHlsOutputSettings struct {
	H265PackagingType *string             `pulumi:"h265PackagingType"`
	HlsSettings       *ChannelHlsSettings `pulumi:"hlsSettings"`
	NameModifier      *string             `pulumi:"nameModifier"`
	SegmentModifier   *string             `pulumi:"segmentModifier"`
}

// ChannelHlsOutputSettingsInput is an input type that accepts ChannelHlsOutputSettingsArgs and ChannelHlsOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsOutputSettingsInput` via:
//
//          ChannelHlsOutputSettingsArgs{...}
type ChannelHlsOutputSettingsInput interface {
	pulumi.Input

	ToChannelHlsOutputSettingsOutput() ChannelHlsOutputSettingsOutput
	ToChannelHlsOutputSettingsOutputWithContext(context.Context) ChannelHlsOutputSettingsOutput
}

type ChannelHlsOutputSettingsArgs struct {
	H265PackagingType pulumi.StringPtrInput      `pulumi:"h265PackagingType"`
	HlsSettings       ChannelHlsSettingsPtrInput `pulumi:"hlsSettings"`
	NameModifier      pulumi.StringPtrInput      `pulumi:"nameModifier"`
	SegmentModifier   pulumi.StringPtrInput      `pulumi:"segmentModifier"`
}

func (ChannelHlsOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsOutputSettings)(nil)).Elem()
}

func (i ChannelHlsOutputSettingsArgs) ToChannelHlsOutputSettingsOutput() ChannelHlsOutputSettingsOutput {
	return i.ToChannelHlsOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsOutputSettingsArgs) ToChannelHlsOutputSettingsOutputWithContext(ctx context.Context) ChannelHlsOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsOutputSettingsOutput)
}

func (i ChannelHlsOutputSettingsArgs) ToChannelHlsOutputSettingsPtrOutput() ChannelHlsOutputSettingsPtrOutput {
	return i.ToChannelHlsOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsOutputSettingsArgs) ToChannelHlsOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsOutputSettingsOutput).ToChannelHlsOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsOutputSettingsPtrInput is an input type that accepts ChannelHlsOutputSettingsArgs, ChannelHlsOutputSettingsPtr and ChannelHlsOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsOutputSettingsPtrInput` via:
//
//          ChannelHlsOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsOutputSettingsPtrOutput() ChannelHlsOutputSettingsPtrOutput
	ToChannelHlsOutputSettingsPtrOutputWithContext(context.Context) ChannelHlsOutputSettingsPtrOutput
}

type channelHlsOutputSettingsPtrType ChannelHlsOutputSettingsArgs

func ChannelHlsOutputSettingsPtr(v *ChannelHlsOutputSettingsArgs) ChannelHlsOutputSettingsPtrInput {
	return (*channelHlsOutputSettingsPtrType)(v)
}

func (*channelHlsOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsOutputSettings)(nil)).Elem()
}

func (i *channelHlsOutputSettingsPtrType) ToChannelHlsOutputSettingsPtrOutput() ChannelHlsOutputSettingsPtrOutput {
	return i.ToChannelHlsOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsOutputSettingsPtrType) ToChannelHlsOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsOutputSettingsPtrOutput)
}

type ChannelHlsOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsOutputSettings)(nil)).Elem()
}

func (o ChannelHlsOutputSettingsOutput) ToChannelHlsOutputSettingsOutput() ChannelHlsOutputSettingsOutput {
	return o
}

func (o ChannelHlsOutputSettingsOutput) ToChannelHlsOutputSettingsOutputWithContext(ctx context.Context) ChannelHlsOutputSettingsOutput {
	return o
}

func (o ChannelHlsOutputSettingsOutput) ToChannelHlsOutputSettingsPtrOutput() ChannelHlsOutputSettingsPtrOutput {
	return o.ToChannelHlsOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsOutputSettingsOutput) ToChannelHlsOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsOutputSettings) *ChannelHlsOutputSettings {
		return &v
	}).(ChannelHlsOutputSettingsPtrOutput)
}

func (o ChannelHlsOutputSettingsOutput) H265PackagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsOutputSettings) *string { return v.H265PackagingType }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsOutputSettingsOutput) HlsSettings() ChannelHlsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsOutputSettings) *ChannelHlsSettings { return v.HlsSettings }).(ChannelHlsSettingsPtrOutput)
}

func (o ChannelHlsOutputSettingsOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsOutputSettings) *string { return v.NameModifier }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsOutputSettingsOutput) SegmentModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsOutputSettings) *string { return v.SegmentModifier }).(pulumi.StringPtrOutput)
}

type ChannelHlsOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsOutputSettings)(nil)).Elem()
}

func (o ChannelHlsOutputSettingsPtrOutput) ToChannelHlsOutputSettingsPtrOutput() ChannelHlsOutputSettingsPtrOutput {
	return o
}

func (o ChannelHlsOutputSettingsPtrOutput) ToChannelHlsOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsOutputSettingsPtrOutput {
	return o
}

func (o ChannelHlsOutputSettingsPtrOutput) Elem() ChannelHlsOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsOutputSettings) ChannelHlsOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsOutputSettings
		return ret
	}).(ChannelHlsOutputSettingsOutput)
}

func (o ChannelHlsOutputSettingsPtrOutput) H265PackagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.H265PackagingType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsOutputSettingsPtrOutput) HlsSettings() ChannelHlsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsOutputSettings) *ChannelHlsSettings {
		if v == nil {
			return nil
		}
		return v.HlsSettings
	}).(ChannelHlsSettingsPtrOutput)
}

func (o ChannelHlsOutputSettingsPtrOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.NameModifier
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsOutputSettingsPtrOutput) SegmentModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.SegmentModifier
	}).(pulumi.StringPtrOutput)
}

type ChannelHlsS3Settings struct {
	CannedAcl *string `pulumi:"cannedAcl"`
}

// ChannelHlsS3SettingsInput is an input type that accepts ChannelHlsS3SettingsArgs and ChannelHlsS3SettingsOutput values.
// You can construct a concrete instance of `ChannelHlsS3SettingsInput` via:
//
//          ChannelHlsS3SettingsArgs{...}
type ChannelHlsS3SettingsInput interface {
	pulumi.Input

	ToChannelHlsS3SettingsOutput() ChannelHlsS3SettingsOutput
	ToChannelHlsS3SettingsOutputWithContext(context.Context) ChannelHlsS3SettingsOutput
}

type ChannelHlsS3SettingsArgs struct {
	CannedAcl pulumi.StringPtrInput `pulumi:"cannedAcl"`
}

func (ChannelHlsS3SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsS3Settings)(nil)).Elem()
}

func (i ChannelHlsS3SettingsArgs) ToChannelHlsS3SettingsOutput() ChannelHlsS3SettingsOutput {
	return i.ToChannelHlsS3SettingsOutputWithContext(context.Background())
}

func (i ChannelHlsS3SettingsArgs) ToChannelHlsS3SettingsOutputWithContext(ctx context.Context) ChannelHlsS3SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsS3SettingsOutput)
}

func (i ChannelHlsS3SettingsArgs) ToChannelHlsS3SettingsPtrOutput() ChannelHlsS3SettingsPtrOutput {
	return i.ToChannelHlsS3SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsS3SettingsArgs) ToChannelHlsS3SettingsPtrOutputWithContext(ctx context.Context) ChannelHlsS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsS3SettingsOutput).ToChannelHlsS3SettingsPtrOutputWithContext(ctx)
}

// ChannelHlsS3SettingsPtrInput is an input type that accepts ChannelHlsS3SettingsArgs, ChannelHlsS3SettingsPtr and ChannelHlsS3SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsS3SettingsPtrInput` via:
//
//          ChannelHlsS3SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsS3SettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsS3SettingsPtrOutput() ChannelHlsS3SettingsPtrOutput
	ToChannelHlsS3SettingsPtrOutputWithContext(context.Context) ChannelHlsS3SettingsPtrOutput
}

type channelHlsS3SettingsPtrType ChannelHlsS3SettingsArgs

func ChannelHlsS3SettingsPtr(v *ChannelHlsS3SettingsArgs) ChannelHlsS3SettingsPtrInput {
	return (*channelHlsS3SettingsPtrType)(v)
}

func (*channelHlsS3SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsS3Settings)(nil)).Elem()
}

func (i *channelHlsS3SettingsPtrType) ToChannelHlsS3SettingsPtrOutput() ChannelHlsS3SettingsPtrOutput {
	return i.ToChannelHlsS3SettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsS3SettingsPtrType) ToChannelHlsS3SettingsPtrOutputWithContext(ctx context.Context) ChannelHlsS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsS3SettingsPtrOutput)
}

type ChannelHlsS3SettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsS3SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsS3Settings)(nil)).Elem()
}

func (o ChannelHlsS3SettingsOutput) ToChannelHlsS3SettingsOutput() ChannelHlsS3SettingsOutput {
	return o
}

func (o ChannelHlsS3SettingsOutput) ToChannelHlsS3SettingsOutputWithContext(ctx context.Context) ChannelHlsS3SettingsOutput {
	return o
}

func (o ChannelHlsS3SettingsOutput) ToChannelHlsS3SettingsPtrOutput() ChannelHlsS3SettingsPtrOutput {
	return o.ToChannelHlsS3SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsS3SettingsOutput) ToChannelHlsS3SettingsPtrOutputWithContext(ctx context.Context) ChannelHlsS3SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsS3Settings) *ChannelHlsS3Settings {
		return &v
	}).(ChannelHlsS3SettingsPtrOutput)
}

func (o ChannelHlsS3SettingsOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsS3Settings) *string { return v.CannedAcl }).(pulumi.StringPtrOutput)
}

type ChannelHlsS3SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsS3SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsS3Settings)(nil)).Elem()
}

func (o ChannelHlsS3SettingsPtrOutput) ToChannelHlsS3SettingsPtrOutput() ChannelHlsS3SettingsPtrOutput {
	return o
}

func (o ChannelHlsS3SettingsPtrOutput) ToChannelHlsS3SettingsPtrOutputWithContext(ctx context.Context) ChannelHlsS3SettingsPtrOutput {
	return o
}

func (o ChannelHlsS3SettingsPtrOutput) Elem() ChannelHlsS3SettingsOutput {
	return o.ApplyT(func(v *ChannelHlsS3Settings) ChannelHlsS3Settings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsS3Settings
		return ret
	}).(ChannelHlsS3SettingsOutput)
}

func (o ChannelHlsS3SettingsPtrOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CannedAcl
	}).(pulumi.StringPtrOutput)
}

type ChannelHlsSettings struct {
	AudioOnlyHlsSettings    *ChannelAudioOnlyHlsSettings    `pulumi:"audioOnlyHlsSettings"`
	Fmp4HlsSettings         *ChannelFmp4HlsSettings         `pulumi:"fmp4HlsSettings"`
	FrameCaptureHlsSettings *ChannelFrameCaptureHlsSettings `pulumi:"frameCaptureHlsSettings"`
	StandardHlsSettings     *ChannelStandardHlsSettings     `pulumi:"standardHlsSettings"`
}

// ChannelHlsSettingsInput is an input type that accepts ChannelHlsSettingsArgs and ChannelHlsSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsSettingsInput` via:
//
//          ChannelHlsSettingsArgs{...}
type ChannelHlsSettingsInput interface {
	pulumi.Input

	ToChannelHlsSettingsOutput() ChannelHlsSettingsOutput
	ToChannelHlsSettingsOutputWithContext(context.Context) ChannelHlsSettingsOutput
}

type ChannelHlsSettingsArgs struct {
	AudioOnlyHlsSettings    ChannelAudioOnlyHlsSettingsPtrInput    `pulumi:"audioOnlyHlsSettings"`
	Fmp4HlsSettings         ChannelFmp4HlsSettingsPtrInput         `pulumi:"fmp4HlsSettings"`
	FrameCaptureHlsSettings ChannelFrameCaptureHlsSettingsPtrInput `pulumi:"frameCaptureHlsSettings"`
	StandardHlsSettings     ChannelStandardHlsSettingsPtrInput     `pulumi:"standardHlsSettings"`
}

func (ChannelHlsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsSettings)(nil)).Elem()
}

func (i ChannelHlsSettingsArgs) ToChannelHlsSettingsOutput() ChannelHlsSettingsOutput {
	return i.ToChannelHlsSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsSettingsArgs) ToChannelHlsSettingsOutputWithContext(ctx context.Context) ChannelHlsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsSettingsOutput)
}

func (i ChannelHlsSettingsArgs) ToChannelHlsSettingsPtrOutput() ChannelHlsSettingsPtrOutput {
	return i.ToChannelHlsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsSettingsArgs) ToChannelHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsSettingsOutput).ToChannelHlsSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsSettingsPtrInput is an input type that accepts ChannelHlsSettingsArgs, ChannelHlsSettingsPtr and ChannelHlsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsSettingsPtrInput` via:
//
//          ChannelHlsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsSettingsPtrOutput() ChannelHlsSettingsPtrOutput
	ToChannelHlsSettingsPtrOutputWithContext(context.Context) ChannelHlsSettingsPtrOutput
}

type channelHlsSettingsPtrType ChannelHlsSettingsArgs

func ChannelHlsSettingsPtr(v *ChannelHlsSettingsArgs) ChannelHlsSettingsPtrInput {
	return (*channelHlsSettingsPtrType)(v)
}

func (*channelHlsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsSettings)(nil)).Elem()
}

func (i *channelHlsSettingsPtrType) ToChannelHlsSettingsPtrOutput() ChannelHlsSettingsPtrOutput {
	return i.ToChannelHlsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsSettingsPtrType) ToChannelHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsSettingsPtrOutput)
}

type ChannelHlsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsSettings)(nil)).Elem()
}

func (o ChannelHlsSettingsOutput) ToChannelHlsSettingsOutput() ChannelHlsSettingsOutput {
	return o
}

func (o ChannelHlsSettingsOutput) ToChannelHlsSettingsOutputWithContext(ctx context.Context) ChannelHlsSettingsOutput {
	return o
}

func (o ChannelHlsSettingsOutput) ToChannelHlsSettingsPtrOutput() ChannelHlsSettingsPtrOutput {
	return o.ToChannelHlsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsSettingsOutput) ToChannelHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsSettings) *ChannelHlsSettings {
		return &v
	}).(ChannelHlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsOutput) AudioOnlyHlsSettings() ChannelAudioOnlyHlsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsSettings) *ChannelAudioOnlyHlsSettings { return v.AudioOnlyHlsSettings }).(ChannelAudioOnlyHlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsOutput) Fmp4HlsSettings() ChannelFmp4HlsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsSettings) *ChannelFmp4HlsSettings { return v.Fmp4HlsSettings }).(ChannelFmp4HlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsOutput) FrameCaptureHlsSettings() ChannelFrameCaptureHlsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsSettings) *ChannelFrameCaptureHlsSettings { return v.FrameCaptureHlsSettings }).(ChannelFrameCaptureHlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsOutput) StandardHlsSettings() ChannelStandardHlsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelHlsSettings) *ChannelStandardHlsSettings { return v.StandardHlsSettings }).(ChannelStandardHlsSettingsPtrOutput)
}

type ChannelHlsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsSettings)(nil)).Elem()
}

func (o ChannelHlsSettingsPtrOutput) ToChannelHlsSettingsPtrOutput() ChannelHlsSettingsPtrOutput {
	return o
}

func (o ChannelHlsSettingsPtrOutput) ToChannelHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsSettingsPtrOutput {
	return o
}

func (o ChannelHlsSettingsPtrOutput) Elem() ChannelHlsSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsSettings) ChannelHlsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsSettings
		return ret
	}).(ChannelHlsSettingsOutput)
}

func (o ChannelHlsSettingsPtrOutput) AudioOnlyHlsSettings() ChannelAudioOnlyHlsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsSettings) *ChannelAudioOnlyHlsSettings {
		if v == nil {
			return nil
		}
		return v.AudioOnlyHlsSettings
	}).(ChannelAudioOnlyHlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsPtrOutput) Fmp4HlsSettings() ChannelFmp4HlsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsSettings) *ChannelFmp4HlsSettings {
		if v == nil {
			return nil
		}
		return v.Fmp4HlsSettings
	}).(ChannelFmp4HlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsPtrOutput) FrameCaptureHlsSettings() ChannelFrameCaptureHlsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsSettings) *ChannelFrameCaptureHlsSettings {
		if v == nil {
			return nil
		}
		return v.FrameCaptureHlsSettings
	}).(ChannelFrameCaptureHlsSettingsPtrOutput)
}

func (o ChannelHlsSettingsPtrOutput) StandardHlsSettings() ChannelStandardHlsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelHlsSettings) *ChannelStandardHlsSettings {
		if v == nil {
			return nil
		}
		return v.StandardHlsSettings
	}).(ChannelStandardHlsSettingsPtrOutput)
}

type ChannelHlsWebdavSettings struct {
	ConnectionRetryInterval *int    `pulumi:"connectionRetryInterval"`
	FilecacheDuration       *int    `pulumi:"filecacheDuration"`
	HttpTransferMode        *string `pulumi:"httpTransferMode"`
	NumRetries              *int    `pulumi:"numRetries"`
	RestartDelay            *int    `pulumi:"restartDelay"`
}

// ChannelHlsWebdavSettingsInput is an input type that accepts ChannelHlsWebdavSettingsArgs and ChannelHlsWebdavSettingsOutput values.
// You can construct a concrete instance of `ChannelHlsWebdavSettingsInput` via:
//
//          ChannelHlsWebdavSettingsArgs{...}
type ChannelHlsWebdavSettingsInput interface {
	pulumi.Input

	ToChannelHlsWebdavSettingsOutput() ChannelHlsWebdavSettingsOutput
	ToChannelHlsWebdavSettingsOutputWithContext(context.Context) ChannelHlsWebdavSettingsOutput
}

type ChannelHlsWebdavSettingsArgs struct {
	ConnectionRetryInterval pulumi.IntPtrInput    `pulumi:"connectionRetryInterval"`
	FilecacheDuration       pulumi.IntPtrInput    `pulumi:"filecacheDuration"`
	HttpTransferMode        pulumi.StringPtrInput `pulumi:"httpTransferMode"`
	NumRetries              pulumi.IntPtrInput    `pulumi:"numRetries"`
	RestartDelay            pulumi.IntPtrInput    `pulumi:"restartDelay"`
}

func (ChannelHlsWebdavSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsWebdavSettings)(nil)).Elem()
}

func (i ChannelHlsWebdavSettingsArgs) ToChannelHlsWebdavSettingsOutput() ChannelHlsWebdavSettingsOutput {
	return i.ToChannelHlsWebdavSettingsOutputWithContext(context.Background())
}

func (i ChannelHlsWebdavSettingsArgs) ToChannelHlsWebdavSettingsOutputWithContext(ctx context.Context) ChannelHlsWebdavSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsWebdavSettingsOutput)
}

func (i ChannelHlsWebdavSettingsArgs) ToChannelHlsWebdavSettingsPtrOutput() ChannelHlsWebdavSettingsPtrOutput {
	return i.ToChannelHlsWebdavSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHlsWebdavSettingsArgs) ToChannelHlsWebdavSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsWebdavSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsWebdavSettingsOutput).ToChannelHlsWebdavSettingsPtrOutputWithContext(ctx)
}

// ChannelHlsWebdavSettingsPtrInput is an input type that accepts ChannelHlsWebdavSettingsArgs, ChannelHlsWebdavSettingsPtr and ChannelHlsWebdavSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHlsWebdavSettingsPtrInput` via:
//
//          ChannelHlsWebdavSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHlsWebdavSettingsPtrInput interface {
	pulumi.Input

	ToChannelHlsWebdavSettingsPtrOutput() ChannelHlsWebdavSettingsPtrOutput
	ToChannelHlsWebdavSettingsPtrOutputWithContext(context.Context) ChannelHlsWebdavSettingsPtrOutput
}

type channelHlsWebdavSettingsPtrType ChannelHlsWebdavSettingsArgs

func ChannelHlsWebdavSettingsPtr(v *ChannelHlsWebdavSettingsArgs) ChannelHlsWebdavSettingsPtrInput {
	return (*channelHlsWebdavSettingsPtrType)(v)
}

func (*channelHlsWebdavSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsWebdavSettings)(nil)).Elem()
}

func (i *channelHlsWebdavSettingsPtrType) ToChannelHlsWebdavSettingsPtrOutput() ChannelHlsWebdavSettingsPtrOutput {
	return i.ToChannelHlsWebdavSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHlsWebdavSettingsPtrType) ToChannelHlsWebdavSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsWebdavSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsWebdavSettingsPtrOutput)
}

type ChannelHlsWebdavSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHlsWebdavSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsWebdavSettings)(nil)).Elem()
}

func (o ChannelHlsWebdavSettingsOutput) ToChannelHlsWebdavSettingsOutput() ChannelHlsWebdavSettingsOutput {
	return o
}

func (o ChannelHlsWebdavSettingsOutput) ToChannelHlsWebdavSettingsOutputWithContext(ctx context.Context) ChannelHlsWebdavSettingsOutput {
	return o
}

func (o ChannelHlsWebdavSettingsOutput) ToChannelHlsWebdavSettingsPtrOutput() ChannelHlsWebdavSettingsPtrOutput {
	return o.ToChannelHlsWebdavSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHlsWebdavSettingsOutput) ToChannelHlsWebdavSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsWebdavSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsWebdavSettings) *ChannelHlsWebdavSettings {
		return &v
	}).(ChannelHlsWebdavSettingsPtrOutput)
}

func (o ChannelHlsWebdavSettingsOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsWebdavSettings) *int { return v.ConnectionRetryInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsWebdavSettingsOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsWebdavSettings) *int { return v.FilecacheDuration }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsWebdavSettingsOutput) HttpTransferMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelHlsWebdavSettings) *string { return v.HttpTransferMode }).(pulumi.StringPtrOutput)
}

func (o ChannelHlsWebdavSettingsOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsWebdavSettings) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

func (o ChannelHlsWebdavSettingsOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelHlsWebdavSettings) *int { return v.RestartDelay }).(pulumi.IntPtrOutput)
}

type ChannelHlsWebdavSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsWebdavSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsWebdavSettings)(nil)).Elem()
}

func (o ChannelHlsWebdavSettingsPtrOutput) ToChannelHlsWebdavSettingsPtrOutput() ChannelHlsWebdavSettingsPtrOutput {
	return o
}

func (o ChannelHlsWebdavSettingsPtrOutput) ToChannelHlsWebdavSettingsPtrOutputWithContext(ctx context.Context) ChannelHlsWebdavSettingsPtrOutput {
	return o
}

func (o ChannelHlsWebdavSettingsPtrOutput) Elem() ChannelHlsWebdavSettingsOutput {
	return o.ApplyT(func(v *ChannelHlsWebdavSettings) ChannelHlsWebdavSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHlsWebdavSettings
		return ret
	}).(ChannelHlsWebdavSettingsOutput)
}

func (o ChannelHlsWebdavSettingsPtrOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsWebdavSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionRetryInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsWebdavSettingsPtrOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsWebdavSettings) *int {
		if v == nil {
			return nil
		}
		return v.FilecacheDuration
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsWebdavSettingsPtrOutput) HttpTransferMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelHlsWebdavSettings) *string {
		if v == nil {
			return nil
		}
		return v.HttpTransferMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelHlsWebdavSettingsPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsWebdavSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

func (o ChannelHlsWebdavSettingsPtrOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelHlsWebdavSettings) *int {
		if v == nil {
			return nil
		}
		return v.RestartDelay
	}).(pulumi.IntPtrOutput)
}

type ChannelHtmlMotionGraphicsSettings struct {
}

// ChannelHtmlMotionGraphicsSettingsInput is an input type that accepts ChannelHtmlMotionGraphicsSettingsArgs and ChannelHtmlMotionGraphicsSettingsOutput values.
// You can construct a concrete instance of `ChannelHtmlMotionGraphicsSettingsInput` via:
//
//          ChannelHtmlMotionGraphicsSettingsArgs{...}
type ChannelHtmlMotionGraphicsSettingsInput interface {
	pulumi.Input

	ToChannelHtmlMotionGraphicsSettingsOutput() ChannelHtmlMotionGraphicsSettingsOutput
	ToChannelHtmlMotionGraphicsSettingsOutputWithContext(context.Context) ChannelHtmlMotionGraphicsSettingsOutput
}

type ChannelHtmlMotionGraphicsSettingsArgs struct {
}

func (ChannelHtmlMotionGraphicsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHtmlMotionGraphicsSettings)(nil)).Elem()
}

func (i ChannelHtmlMotionGraphicsSettingsArgs) ToChannelHtmlMotionGraphicsSettingsOutput() ChannelHtmlMotionGraphicsSettingsOutput {
	return i.ToChannelHtmlMotionGraphicsSettingsOutputWithContext(context.Background())
}

func (i ChannelHtmlMotionGraphicsSettingsArgs) ToChannelHtmlMotionGraphicsSettingsOutputWithContext(ctx context.Context) ChannelHtmlMotionGraphicsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHtmlMotionGraphicsSettingsOutput)
}

func (i ChannelHtmlMotionGraphicsSettingsArgs) ToChannelHtmlMotionGraphicsSettingsPtrOutput() ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return i.ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelHtmlMotionGraphicsSettingsArgs) ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHtmlMotionGraphicsSettingsOutput).ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(ctx)
}

// ChannelHtmlMotionGraphicsSettingsPtrInput is an input type that accepts ChannelHtmlMotionGraphicsSettingsArgs, ChannelHtmlMotionGraphicsSettingsPtr and ChannelHtmlMotionGraphicsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelHtmlMotionGraphicsSettingsPtrInput` via:
//
//          ChannelHtmlMotionGraphicsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelHtmlMotionGraphicsSettingsPtrInput interface {
	pulumi.Input

	ToChannelHtmlMotionGraphicsSettingsPtrOutput() ChannelHtmlMotionGraphicsSettingsPtrOutput
	ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(context.Context) ChannelHtmlMotionGraphicsSettingsPtrOutput
}

type channelHtmlMotionGraphicsSettingsPtrType ChannelHtmlMotionGraphicsSettingsArgs

func ChannelHtmlMotionGraphicsSettingsPtr(v *ChannelHtmlMotionGraphicsSettingsArgs) ChannelHtmlMotionGraphicsSettingsPtrInput {
	return (*channelHtmlMotionGraphicsSettingsPtrType)(v)
}

func (*channelHtmlMotionGraphicsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHtmlMotionGraphicsSettings)(nil)).Elem()
}

func (i *channelHtmlMotionGraphicsSettingsPtrType) ToChannelHtmlMotionGraphicsSettingsPtrOutput() ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return i.ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelHtmlMotionGraphicsSettingsPtrType) ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHtmlMotionGraphicsSettingsPtrOutput)
}

type ChannelHtmlMotionGraphicsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelHtmlMotionGraphicsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHtmlMotionGraphicsSettings)(nil)).Elem()
}

func (o ChannelHtmlMotionGraphicsSettingsOutput) ToChannelHtmlMotionGraphicsSettingsOutput() ChannelHtmlMotionGraphicsSettingsOutput {
	return o
}

func (o ChannelHtmlMotionGraphicsSettingsOutput) ToChannelHtmlMotionGraphicsSettingsOutputWithContext(ctx context.Context) ChannelHtmlMotionGraphicsSettingsOutput {
	return o
}

func (o ChannelHtmlMotionGraphicsSettingsOutput) ToChannelHtmlMotionGraphicsSettingsPtrOutput() ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return o.ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelHtmlMotionGraphicsSettingsOutput) ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHtmlMotionGraphicsSettings) *ChannelHtmlMotionGraphicsSettings {
		return &v
	}).(ChannelHtmlMotionGraphicsSettingsPtrOutput)
}

type ChannelHtmlMotionGraphicsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelHtmlMotionGraphicsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHtmlMotionGraphicsSettings)(nil)).Elem()
}

func (o ChannelHtmlMotionGraphicsSettingsPtrOutput) ToChannelHtmlMotionGraphicsSettingsPtrOutput() ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return o
}

func (o ChannelHtmlMotionGraphicsSettingsPtrOutput) ToChannelHtmlMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return o
}

func (o ChannelHtmlMotionGraphicsSettingsPtrOutput) Elem() ChannelHtmlMotionGraphicsSettingsOutput {
	return o.ApplyT(func(v *ChannelHtmlMotionGraphicsSettings) ChannelHtmlMotionGraphicsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelHtmlMotionGraphicsSettings
		return ret
	}).(ChannelHtmlMotionGraphicsSettingsOutput)
}

type ChannelInputAttachment struct {
	AutomaticInputFailoverSettings *ChannelAutomaticInputFailoverSettings `pulumi:"automaticInputFailoverSettings"`
	InputAttachmentName            *string                                `pulumi:"inputAttachmentName"`
	InputId                        *string                                `pulumi:"inputId"`
	InputSettings                  *ChannelInputSettings                  `pulumi:"inputSettings"`
}

// ChannelInputAttachmentInput is an input type that accepts ChannelInputAttachmentArgs and ChannelInputAttachmentOutput values.
// You can construct a concrete instance of `ChannelInputAttachmentInput` via:
//
//          ChannelInputAttachmentArgs{...}
type ChannelInputAttachmentInput interface {
	pulumi.Input

	ToChannelInputAttachmentOutput() ChannelInputAttachmentOutput
	ToChannelInputAttachmentOutputWithContext(context.Context) ChannelInputAttachmentOutput
}

type ChannelInputAttachmentArgs struct {
	AutomaticInputFailoverSettings ChannelAutomaticInputFailoverSettingsPtrInput `pulumi:"automaticInputFailoverSettings"`
	InputAttachmentName            pulumi.StringPtrInput                         `pulumi:"inputAttachmentName"`
	InputId                        pulumi.StringPtrInput                         `pulumi:"inputId"`
	InputSettings                  ChannelInputSettingsPtrInput                  `pulumi:"inputSettings"`
}

func (ChannelInputAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputAttachment)(nil)).Elem()
}

func (i ChannelInputAttachmentArgs) ToChannelInputAttachmentOutput() ChannelInputAttachmentOutput {
	return i.ToChannelInputAttachmentOutputWithContext(context.Background())
}

func (i ChannelInputAttachmentArgs) ToChannelInputAttachmentOutputWithContext(ctx context.Context) ChannelInputAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputAttachmentOutput)
}

// ChannelInputAttachmentArrayInput is an input type that accepts ChannelInputAttachmentArray and ChannelInputAttachmentArrayOutput values.
// You can construct a concrete instance of `ChannelInputAttachmentArrayInput` via:
//
//          ChannelInputAttachmentArray{ ChannelInputAttachmentArgs{...} }
type ChannelInputAttachmentArrayInput interface {
	pulumi.Input

	ToChannelInputAttachmentArrayOutput() ChannelInputAttachmentArrayOutput
	ToChannelInputAttachmentArrayOutputWithContext(context.Context) ChannelInputAttachmentArrayOutput
}

type ChannelInputAttachmentArray []ChannelInputAttachmentInput

func (ChannelInputAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelInputAttachment)(nil)).Elem()
}

func (i ChannelInputAttachmentArray) ToChannelInputAttachmentArrayOutput() ChannelInputAttachmentArrayOutput {
	return i.ToChannelInputAttachmentArrayOutputWithContext(context.Background())
}

func (i ChannelInputAttachmentArray) ToChannelInputAttachmentArrayOutputWithContext(ctx context.Context) ChannelInputAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputAttachmentArrayOutput)
}

type ChannelInputAttachmentOutput struct{ *pulumi.OutputState }

func (ChannelInputAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputAttachment)(nil)).Elem()
}

func (o ChannelInputAttachmentOutput) ToChannelInputAttachmentOutput() ChannelInputAttachmentOutput {
	return o
}

func (o ChannelInputAttachmentOutput) ToChannelInputAttachmentOutputWithContext(ctx context.Context) ChannelInputAttachmentOutput {
	return o
}

func (o ChannelInputAttachmentOutput) AutomaticInputFailoverSettings() ChannelAutomaticInputFailoverSettingsPtrOutput {
	return o.ApplyT(func(v ChannelInputAttachment) *ChannelAutomaticInputFailoverSettings {
		return v.AutomaticInputFailoverSettings
	}).(ChannelAutomaticInputFailoverSettingsPtrOutput)
}

func (o ChannelInputAttachmentOutput) InputAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputAttachment) *string { return v.InputAttachmentName }).(pulumi.StringPtrOutput)
}

func (o ChannelInputAttachmentOutput) InputId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputAttachment) *string { return v.InputId }).(pulumi.StringPtrOutput)
}

func (o ChannelInputAttachmentOutput) InputSettings() ChannelInputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelInputAttachment) *ChannelInputSettings { return v.InputSettings }).(ChannelInputSettingsPtrOutput)
}

type ChannelInputAttachmentArrayOutput struct{ *pulumi.OutputState }

func (ChannelInputAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelInputAttachment)(nil)).Elem()
}

func (o ChannelInputAttachmentArrayOutput) ToChannelInputAttachmentArrayOutput() ChannelInputAttachmentArrayOutput {
	return o
}

func (o ChannelInputAttachmentArrayOutput) ToChannelInputAttachmentArrayOutputWithContext(ctx context.Context) ChannelInputAttachmentArrayOutput {
	return o
}

func (o ChannelInputAttachmentArrayOutput) Index(i pulumi.IntInput) ChannelInputAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelInputAttachment {
		return vs[0].([]ChannelInputAttachment)[vs[1].(int)]
	}).(ChannelInputAttachmentOutput)
}

type ChannelInputChannelLevel struct {
	Gain         *int `pulumi:"gain"`
	InputChannel *int `pulumi:"inputChannel"`
}

// ChannelInputChannelLevelInput is an input type that accepts ChannelInputChannelLevelArgs and ChannelInputChannelLevelOutput values.
// You can construct a concrete instance of `ChannelInputChannelLevelInput` via:
//
//          ChannelInputChannelLevelArgs{...}
type ChannelInputChannelLevelInput interface {
	pulumi.Input

	ToChannelInputChannelLevelOutput() ChannelInputChannelLevelOutput
	ToChannelInputChannelLevelOutputWithContext(context.Context) ChannelInputChannelLevelOutput
}

type ChannelInputChannelLevelArgs struct {
	Gain         pulumi.IntPtrInput `pulumi:"gain"`
	InputChannel pulumi.IntPtrInput `pulumi:"inputChannel"`
}

func (ChannelInputChannelLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputChannelLevel)(nil)).Elem()
}

func (i ChannelInputChannelLevelArgs) ToChannelInputChannelLevelOutput() ChannelInputChannelLevelOutput {
	return i.ToChannelInputChannelLevelOutputWithContext(context.Background())
}

func (i ChannelInputChannelLevelArgs) ToChannelInputChannelLevelOutputWithContext(ctx context.Context) ChannelInputChannelLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputChannelLevelOutput)
}

// ChannelInputChannelLevelArrayInput is an input type that accepts ChannelInputChannelLevelArray and ChannelInputChannelLevelArrayOutput values.
// You can construct a concrete instance of `ChannelInputChannelLevelArrayInput` via:
//
//          ChannelInputChannelLevelArray{ ChannelInputChannelLevelArgs{...} }
type ChannelInputChannelLevelArrayInput interface {
	pulumi.Input

	ToChannelInputChannelLevelArrayOutput() ChannelInputChannelLevelArrayOutput
	ToChannelInputChannelLevelArrayOutputWithContext(context.Context) ChannelInputChannelLevelArrayOutput
}

type ChannelInputChannelLevelArray []ChannelInputChannelLevelInput

func (ChannelInputChannelLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelInputChannelLevel)(nil)).Elem()
}

func (i ChannelInputChannelLevelArray) ToChannelInputChannelLevelArrayOutput() ChannelInputChannelLevelArrayOutput {
	return i.ToChannelInputChannelLevelArrayOutputWithContext(context.Background())
}

func (i ChannelInputChannelLevelArray) ToChannelInputChannelLevelArrayOutputWithContext(ctx context.Context) ChannelInputChannelLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputChannelLevelArrayOutput)
}

type ChannelInputChannelLevelOutput struct{ *pulumi.OutputState }

func (ChannelInputChannelLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputChannelLevel)(nil)).Elem()
}

func (o ChannelInputChannelLevelOutput) ToChannelInputChannelLevelOutput() ChannelInputChannelLevelOutput {
	return o
}

func (o ChannelInputChannelLevelOutput) ToChannelInputChannelLevelOutputWithContext(ctx context.Context) ChannelInputChannelLevelOutput {
	return o
}

func (o ChannelInputChannelLevelOutput) Gain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelInputChannelLevel) *int { return v.Gain }).(pulumi.IntPtrOutput)
}

func (o ChannelInputChannelLevelOutput) InputChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelInputChannelLevel) *int { return v.InputChannel }).(pulumi.IntPtrOutput)
}

type ChannelInputChannelLevelArrayOutput struct{ *pulumi.OutputState }

func (ChannelInputChannelLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelInputChannelLevel)(nil)).Elem()
}

func (o ChannelInputChannelLevelArrayOutput) ToChannelInputChannelLevelArrayOutput() ChannelInputChannelLevelArrayOutput {
	return o
}

func (o ChannelInputChannelLevelArrayOutput) ToChannelInputChannelLevelArrayOutputWithContext(ctx context.Context) ChannelInputChannelLevelArrayOutput {
	return o
}

func (o ChannelInputChannelLevelArrayOutput) Index(i pulumi.IntInput) ChannelInputChannelLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelInputChannelLevel {
		return vs[0].([]ChannelInputChannelLevel)[vs[1].(int)]
	}).(ChannelInputChannelLevelOutput)
}

type ChannelInputLocation struct {
	PasswordParam *string `pulumi:"passwordParam"`
	Uri           *string `pulumi:"uri"`
	Username      *string `pulumi:"username"`
}

// ChannelInputLocationInput is an input type that accepts ChannelInputLocationArgs and ChannelInputLocationOutput values.
// You can construct a concrete instance of `ChannelInputLocationInput` via:
//
//          ChannelInputLocationArgs{...}
type ChannelInputLocationInput interface {
	pulumi.Input

	ToChannelInputLocationOutput() ChannelInputLocationOutput
	ToChannelInputLocationOutputWithContext(context.Context) ChannelInputLocationOutput
}

type ChannelInputLocationArgs struct {
	PasswordParam pulumi.StringPtrInput `pulumi:"passwordParam"`
	Uri           pulumi.StringPtrInput `pulumi:"uri"`
	Username      pulumi.StringPtrInput `pulumi:"username"`
}

func (ChannelInputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputLocation)(nil)).Elem()
}

func (i ChannelInputLocationArgs) ToChannelInputLocationOutput() ChannelInputLocationOutput {
	return i.ToChannelInputLocationOutputWithContext(context.Background())
}

func (i ChannelInputLocationArgs) ToChannelInputLocationOutputWithContext(ctx context.Context) ChannelInputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLocationOutput)
}

func (i ChannelInputLocationArgs) ToChannelInputLocationPtrOutput() ChannelInputLocationPtrOutput {
	return i.ToChannelInputLocationPtrOutputWithContext(context.Background())
}

func (i ChannelInputLocationArgs) ToChannelInputLocationPtrOutputWithContext(ctx context.Context) ChannelInputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLocationOutput).ToChannelInputLocationPtrOutputWithContext(ctx)
}

// ChannelInputLocationPtrInput is an input type that accepts ChannelInputLocationArgs, ChannelInputLocationPtr and ChannelInputLocationPtrOutput values.
// You can construct a concrete instance of `ChannelInputLocationPtrInput` via:
//
//          ChannelInputLocationArgs{...}
//
//  or:
//
//          nil
type ChannelInputLocationPtrInput interface {
	pulumi.Input

	ToChannelInputLocationPtrOutput() ChannelInputLocationPtrOutput
	ToChannelInputLocationPtrOutputWithContext(context.Context) ChannelInputLocationPtrOutput
}

type channelInputLocationPtrType ChannelInputLocationArgs

func ChannelInputLocationPtr(v *ChannelInputLocationArgs) ChannelInputLocationPtrInput {
	return (*channelInputLocationPtrType)(v)
}

func (*channelInputLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputLocation)(nil)).Elem()
}

func (i *channelInputLocationPtrType) ToChannelInputLocationPtrOutput() ChannelInputLocationPtrOutput {
	return i.ToChannelInputLocationPtrOutputWithContext(context.Background())
}

func (i *channelInputLocationPtrType) ToChannelInputLocationPtrOutputWithContext(ctx context.Context) ChannelInputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLocationPtrOutput)
}

type ChannelInputLocationOutput struct{ *pulumi.OutputState }

func (ChannelInputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputLocation)(nil)).Elem()
}

func (o ChannelInputLocationOutput) ToChannelInputLocationOutput() ChannelInputLocationOutput {
	return o
}

func (o ChannelInputLocationOutput) ToChannelInputLocationOutputWithContext(ctx context.Context) ChannelInputLocationOutput {
	return o
}

func (o ChannelInputLocationOutput) ToChannelInputLocationPtrOutput() ChannelInputLocationPtrOutput {
	return o.ToChannelInputLocationPtrOutputWithContext(context.Background())
}

func (o ChannelInputLocationOutput) ToChannelInputLocationPtrOutputWithContext(ctx context.Context) ChannelInputLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelInputLocation) *ChannelInputLocation {
		return &v
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelInputLocationOutput) PasswordParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputLocation) *string { return v.PasswordParam }).(pulumi.StringPtrOutput)
}

func (o ChannelInputLocationOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputLocation) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

func (o ChannelInputLocationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputLocation) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ChannelInputLocationPtrOutput struct{ *pulumi.OutputState }

func (ChannelInputLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputLocation)(nil)).Elem()
}

func (o ChannelInputLocationPtrOutput) ToChannelInputLocationPtrOutput() ChannelInputLocationPtrOutput {
	return o
}

func (o ChannelInputLocationPtrOutput) ToChannelInputLocationPtrOutputWithContext(ctx context.Context) ChannelInputLocationPtrOutput {
	return o
}

func (o ChannelInputLocationPtrOutput) Elem() ChannelInputLocationOutput {
	return o.ApplyT(func(v *ChannelInputLocation) ChannelInputLocation {
		if v != nil {
			return *v
		}
		var ret ChannelInputLocation
		return ret
	}).(ChannelInputLocationOutput)
}

func (o ChannelInputLocationPtrOutput) PasswordParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputLocation) *string {
		if v == nil {
			return nil
		}
		return v.PasswordParam
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputLocationPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputLocation) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputLocationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputLocation) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ChannelInputLossBehavior struct {
	BlackFrameMsec      *int                  `pulumi:"blackFrameMsec"`
	InputLossImageColor *string               `pulumi:"inputLossImageColor"`
	InputLossImageSlate *ChannelInputLocation `pulumi:"inputLossImageSlate"`
	InputLossImageType  *string               `pulumi:"inputLossImageType"`
	RepeatFrameMsec     *int                  `pulumi:"repeatFrameMsec"`
}

// ChannelInputLossBehaviorInput is an input type that accepts ChannelInputLossBehaviorArgs and ChannelInputLossBehaviorOutput values.
// You can construct a concrete instance of `ChannelInputLossBehaviorInput` via:
//
//          ChannelInputLossBehaviorArgs{...}
type ChannelInputLossBehaviorInput interface {
	pulumi.Input

	ToChannelInputLossBehaviorOutput() ChannelInputLossBehaviorOutput
	ToChannelInputLossBehaviorOutputWithContext(context.Context) ChannelInputLossBehaviorOutput
}

type ChannelInputLossBehaviorArgs struct {
	BlackFrameMsec      pulumi.IntPtrInput           `pulumi:"blackFrameMsec"`
	InputLossImageColor pulumi.StringPtrInput        `pulumi:"inputLossImageColor"`
	InputLossImageSlate ChannelInputLocationPtrInput `pulumi:"inputLossImageSlate"`
	InputLossImageType  pulumi.StringPtrInput        `pulumi:"inputLossImageType"`
	RepeatFrameMsec     pulumi.IntPtrInput           `pulumi:"repeatFrameMsec"`
}

func (ChannelInputLossBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputLossBehavior)(nil)).Elem()
}

func (i ChannelInputLossBehaviorArgs) ToChannelInputLossBehaviorOutput() ChannelInputLossBehaviorOutput {
	return i.ToChannelInputLossBehaviorOutputWithContext(context.Background())
}

func (i ChannelInputLossBehaviorArgs) ToChannelInputLossBehaviorOutputWithContext(ctx context.Context) ChannelInputLossBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLossBehaviorOutput)
}

func (i ChannelInputLossBehaviorArgs) ToChannelInputLossBehaviorPtrOutput() ChannelInputLossBehaviorPtrOutput {
	return i.ToChannelInputLossBehaviorPtrOutputWithContext(context.Background())
}

func (i ChannelInputLossBehaviorArgs) ToChannelInputLossBehaviorPtrOutputWithContext(ctx context.Context) ChannelInputLossBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLossBehaviorOutput).ToChannelInputLossBehaviorPtrOutputWithContext(ctx)
}

// ChannelInputLossBehaviorPtrInput is an input type that accepts ChannelInputLossBehaviorArgs, ChannelInputLossBehaviorPtr and ChannelInputLossBehaviorPtrOutput values.
// You can construct a concrete instance of `ChannelInputLossBehaviorPtrInput` via:
//
//          ChannelInputLossBehaviorArgs{...}
//
//  or:
//
//          nil
type ChannelInputLossBehaviorPtrInput interface {
	pulumi.Input

	ToChannelInputLossBehaviorPtrOutput() ChannelInputLossBehaviorPtrOutput
	ToChannelInputLossBehaviorPtrOutputWithContext(context.Context) ChannelInputLossBehaviorPtrOutput
}

type channelInputLossBehaviorPtrType ChannelInputLossBehaviorArgs

func ChannelInputLossBehaviorPtr(v *ChannelInputLossBehaviorArgs) ChannelInputLossBehaviorPtrInput {
	return (*channelInputLossBehaviorPtrType)(v)
}

func (*channelInputLossBehaviorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputLossBehavior)(nil)).Elem()
}

func (i *channelInputLossBehaviorPtrType) ToChannelInputLossBehaviorPtrOutput() ChannelInputLossBehaviorPtrOutput {
	return i.ToChannelInputLossBehaviorPtrOutputWithContext(context.Background())
}

func (i *channelInputLossBehaviorPtrType) ToChannelInputLossBehaviorPtrOutputWithContext(ctx context.Context) ChannelInputLossBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLossBehaviorPtrOutput)
}

type ChannelInputLossBehaviorOutput struct{ *pulumi.OutputState }

func (ChannelInputLossBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputLossBehavior)(nil)).Elem()
}

func (o ChannelInputLossBehaviorOutput) ToChannelInputLossBehaviorOutput() ChannelInputLossBehaviorOutput {
	return o
}

func (o ChannelInputLossBehaviorOutput) ToChannelInputLossBehaviorOutputWithContext(ctx context.Context) ChannelInputLossBehaviorOutput {
	return o
}

func (o ChannelInputLossBehaviorOutput) ToChannelInputLossBehaviorPtrOutput() ChannelInputLossBehaviorPtrOutput {
	return o.ToChannelInputLossBehaviorPtrOutputWithContext(context.Background())
}

func (o ChannelInputLossBehaviorOutput) ToChannelInputLossBehaviorPtrOutputWithContext(ctx context.Context) ChannelInputLossBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelInputLossBehavior) *ChannelInputLossBehavior {
		return &v
	}).(ChannelInputLossBehaviorPtrOutput)
}

func (o ChannelInputLossBehaviorOutput) BlackFrameMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelInputLossBehavior) *int { return v.BlackFrameMsec }).(pulumi.IntPtrOutput)
}

func (o ChannelInputLossBehaviorOutput) InputLossImageColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputLossBehavior) *string { return v.InputLossImageColor }).(pulumi.StringPtrOutput)
}

func (o ChannelInputLossBehaviorOutput) InputLossImageSlate() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelInputLossBehavior) *ChannelInputLocation { return v.InputLossImageSlate }).(ChannelInputLocationPtrOutput)
}

func (o ChannelInputLossBehaviorOutput) InputLossImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputLossBehavior) *string { return v.InputLossImageType }).(pulumi.StringPtrOutput)
}

func (o ChannelInputLossBehaviorOutput) RepeatFrameMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelInputLossBehavior) *int { return v.RepeatFrameMsec }).(pulumi.IntPtrOutput)
}

type ChannelInputLossBehaviorPtrOutput struct{ *pulumi.OutputState }

func (ChannelInputLossBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputLossBehavior)(nil)).Elem()
}

func (o ChannelInputLossBehaviorPtrOutput) ToChannelInputLossBehaviorPtrOutput() ChannelInputLossBehaviorPtrOutput {
	return o
}

func (o ChannelInputLossBehaviorPtrOutput) ToChannelInputLossBehaviorPtrOutputWithContext(ctx context.Context) ChannelInputLossBehaviorPtrOutput {
	return o
}

func (o ChannelInputLossBehaviorPtrOutput) Elem() ChannelInputLossBehaviorOutput {
	return o.ApplyT(func(v *ChannelInputLossBehavior) ChannelInputLossBehavior {
		if v != nil {
			return *v
		}
		var ret ChannelInputLossBehavior
		return ret
	}).(ChannelInputLossBehaviorOutput)
}

func (o ChannelInputLossBehaviorPtrOutput) BlackFrameMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelInputLossBehavior) *int {
		if v == nil {
			return nil
		}
		return v.BlackFrameMsec
	}).(pulumi.IntPtrOutput)
}

func (o ChannelInputLossBehaviorPtrOutput) InputLossImageColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputLossBehavior) *string {
		if v == nil {
			return nil
		}
		return v.InputLossImageColor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputLossBehaviorPtrOutput) InputLossImageSlate() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelInputLossBehavior) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.InputLossImageSlate
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelInputLossBehaviorPtrOutput) InputLossImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputLossBehavior) *string {
		if v == nil {
			return nil
		}
		return v.InputLossImageType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputLossBehaviorPtrOutput) RepeatFrameMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelInputLossBehavior) *int {
		if v == nil {
			return nil
		}
		return v.RepeatFrameMsec
	}).(pulumi.IntPtrOutput)
}

type ChannelInputLossFailoverSettings struct {
	InputLossThresholdMsec *int `pulumi:"inputLossThresholdMsec"`
}

// ChannelInputLossFailoverSettingsInput is an input type that accepts ChannelInputLossFailoverSettingsArgs and ChannelInputLossFailoverSettingsOutput values.
// You can construct a concrete instance of `ChannelInputLossFailoverSettingsInput` via:
//
//          ChannelInputLossFailoverSettingsArgs{...}
type ChannelInputLossFailoverSettingsInput interface {
	pulumi.Input

	ToChannelInputLossFailoverSettingsOutput() ChannelInputLossFailoverSettingsOutput
	ToChannelInputLossFailoverSettingsOutputWithContext(context.Context) ChannelInputLossFailoverSettingsOutput
}

type ChannelInputLossFailoverSettingsArgs struct {
	InputLossThresholdMsec pulumi.IntPtrInput `pulumi:"inputLossThresholdMsec"`
}

func (ChannelInputLossFailoverSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputLossFailoverSettings)(nil)).Elem()
}

func (i ChannelInputLossFailoverSettingsArgs) ToChannelInputLossFailoverSettingsOutput() ChannelInputLossFailoverSettingsOutput {
	return i.ToChannelInputLossFailoverSettingsOutputWithContext(context.Background())
}

func (i ChannelInputLossFailoverSettingsArgs) ToChannelInputLossFailoverSettingsOutputWithContext(ctx context.Context) ChannelInputLossFailoverSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLossFailoverSettingsOutput)
}

func (i ChannelInputLossFailoverSettingsArgs) ToChannelInputLossFailoverSettingsPtrOutput() ChannelInputLossFailoverSettingsPtrOutput {
	return i.ToChannelInputLossFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelInputLossFailoverSettingsArgs) ToChannelInputLossFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelInputLossFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLossFailoverSettingsOutput).ToChannelInputLossFailoverSettingsPtrOutputWithContext(ctx)
}

// ChannelInputLossFailoverSettingsPtrInput is an input type that accepts ChannelInputLossFailoverSettingsArgs, ChannelInputLossFailoverSettingsPtr and ChannelInputLossFailoverSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelInputLossFailoverSettingsPtrInput` via:
//
//          ChannelInputLossFailoverSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelInputLossFailoverSettingsPtrInput interface {
	pulumi.Input

	ToChannelInputLossFailoverSettingsPtrOutput() ChannelInputLossFailoverSettingsPtrOutput
	ToChannelInputLossFailoverSettingsPtrOutputWithContext(context.Context) ChannelInputLossFailoverSettingsPtrOutput
}

type channelInputLossFailoverSettingsPtrType ChannelInputLossFailoverSettingsArgs

func ChannelInputLossFailoverSettingsPtr(v *ChannelInputLossFailoverSettingsArgs) ChannelInputLossFailoverSettingsPtrInput {
	return (*channelInputLossFailoverSettingsPtrType)(v)
}

func (*channelInputLossFailoverSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputLossFailoverSettings)(nil)).Elem()
}

func (i *channelInputLossFailoverSettingsPtrType) ToChannelInputLossFailoverSettingsPtrOutput() ChannelInputLossFailoverSettingsPtrOutput {
	return i.ToChannelInputLossFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i *channelInputLossFailoverSettingsPtrType) ToChannelInputLossFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelInputLossFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputLossFailoverSettingsPtrOutput)
}

type ChannelInputLossFailoverSettingsOutput struct{ *pulumi.OutputState }

func (ChannelInputLossFailoverSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputLossFailoverSettings)(nil)).Elem()
}

func (o ChannelInputLossFailoverSettingsOutput) ToChannelInputLossFailoverSettingsOutput() ChannelInputLossFailoverSettingsOutput {
	return o
}

func (o ChannelInputLossFailoverSettingsOutput) ToChannelInputLossFailoverSettingsOutputWithContext(ctx context.Context) ChannelInputLossFailoverSettingsOutput {
	return o
}

func (o ChannelInputLossFailoverSettingsOutput) ToChannelInputLossFailoverSettingsPtrOutput() ChannelInputLossFailoverSettingsPtrOutput {
	return o.ToChannelInputLossFailoverSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelInputLossFailoverSettingsOutput) ToChannelInputLossFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelInputLossFailoverSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelInputLossFailoverSettings) *ChannelInputLossFailoverSettings {
		return &v
	}).(ChannelInputLossFailoverSettingsPtrOutput)
}

func (o ChannelInputLossFailoverSettingsOutput) InputLossThresholdMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelInputLossFailoverSettings) *int { return v.InputLossThresholdMsec }).(pulumi.IntPtrOutput)
}

type ChannelInputLossFailoverSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelInputLossFailoverSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputLossFailoverSettings)(nil)).Elem()
}

func (o ChannelInputLossFailoverSettingsPtrOutput) ToChannelInputLossFailoverSettingsPtrOutput() ChannelInputLossFailoverSettingsPtrOutput {
	return o
}

func (o ChannelInputLossFailoverSettingsPtrOutput) ToChannelInputLossFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelInputLossFailoverSettingsPtrOutput {
	return o
}

func (o ChannelInputLossFailoverSettingsPtrOutput) Elem() ChannelInputLossFailoverSettingsOutput {
	return o.ApplyT(func(v *ChannelInputLossFailoverSettings) ChannelInputLossFailoverSettings {
		if v != nil {
			return *v
		}
		var ret ChannelInputLossFailoverSettings
		return ret
	}).(ChannelInputLossFailoverSettingsOutput)
}

func (o ChannelInputLossFailoverSettingsPtrOutput) InputLossThresholdMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelInputLossFailoverSettings) *int {
		if v == nil {
			return nil
		}
		return v.InputLossThresholdMsec
	}).(pulumi.IntPtrOutput)
}

type ChannelInputSettings struct {
	AudioSelectors          []ChannelAudioSelector       `pulumi:"audioSelectors"`
	CaptionSelectors        []ChannelCaptionSelector     `pulumi:"captionSelectors"`
	DeblockFilter           *string                      `pulumi:"deblockFilter"`
	DenoiseFilter           *string                      `pulumi:"denoiseFilter"`
	FilterStrength          *int                         `pulumi:"filterStrength"`
	InputFilter             *string                      `pulumi:"inputFilter"`
	NetworkInputSettings    *ChannelNetworkInputSettings `pulumi:"networkInputSettings"`
	Smpte2038DataPreference *string                      `pulumi:"smpte2038DataPreference"`
	SourceEndBehavior       *string                      `pulumi:"sourceEndBehavior"`
	VideoSelector           *ChannelVideoSelector        `pulumi:"videoSelector"`
}

// ChannelInputSettingsInput is an input type that accepts ChannelInputSettingsArgs and ChannelInputSettingsOutput values.
// You can construct a concrete instance of `ChannelInputSettingsInput` via:
//
//          ChannelInputSettingsArgs{...}
type ChannelInputSettingsInput interface {
	pulumi.Input

	ToChannelInputSettingsOutput() ChannelInputSettingsOutput
	ToChannelInputSettingsOutputWithContext(context.Context) ChannelInputSettingsOutput
}

type ChannelInputSettingsArgs struct {
	AudioSelectors          ChannelAudioSelectorArrayInput      `pulumi:"audioSelectors"`
	CaptionSelectors        ChannelCaptionSelectorArrayInput    `pulumi:"captionSelectors"`
	DeblockFilter           pulumi.StringPtrInput               `pulumi:"deblockFilter"`
	DenoiseFilter           pulumi.StringPtrInput               `pulumi:"denoiseFilter"`
	FilterStrength          pulumi.IntPtrInput                  `pulumi:"filterStrength"`
	InputFilter             pulumi.StringPtrInput               `pulumi:"inputFilter"`
	NetworkInputSettings    ChannelNetworkInputSettingsPtrInput `pulumi:"networkInputSettings"`
	Smpte2038DataPreference pulumi.StringPtrInput               `pulumi:"smpte2038DataPreference"`
	SourceEndBehavior       pulumi.StringPtrInput               `pulumi:"sourceEndBehavior"`
	VideoSelector           ChannelVideoSelectorPtrInput        `pulumi:"videoSelector"`
}

func (ChannelInputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputSettings)(nil)).Elem()
}

func (i ChannelInputSettingsArgs) ToChannelInputSettingsOutput() ChannelInputSettingsOutput {
	return i.ToChannelInputSettingsOutputWithContext(context.Background())
}

func (i ChannelInputSettingsArgs) ToChannelInputSettingsOutputWithContext(ctx context.Context) ChannelInputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputSettingsOutput)
}

func (i ChannelInputSettingsArgs) ToChannelInputSettingsPtrOutput() ChannelInputSettingsPtrOutput {
	return i.ToChannelInputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelInputSettingsArgs) ToChannelInputSettingsPtrOutputWithContext(ctx context.Context) ChannelInputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputSettingsOutput).ToChannelInputSettingsPtrOutputWithContext(ctx)
}

// ChannelInputSettingsPtrInput is an input type that accepts ChannelInputSettingsArgs, ChannelInputSettingsPtr and ChannelInputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelInputSettingsPtrInput` via:
//
//          ChannelInputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelInputSettingsPtrInput interface {
	pulumi.Input

	ToChannelInputSettingsPtrOutput() ChannelInputSettingsPtrOutput
	ToChannelInputSettingsPtrOutputWithContext(context.Context) ChannelInputSettingsPtrOutput
}

type channelInputSettingsPtrType ChannelInputSettingsArgs

func ChannelInputSettingsPtr(v *ChannelInputSettingsArgs) ChannelInputSettingsPtrInput {
	return (*channelInputSettingsPtrType)(v)
}

func (*channelInputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputSettings)(nil)).Elem()
}

func (i *channelInputSettingsPtrType) ToChannelInputSettingsPtrOutput() ChannelInputSettingsPtrOutput {
	return i.ToChannelInputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelInputSettingsPtrType) ToChannelInputSettingsPtrOutputWithContext(ctx context.Context) ChannelInputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputSettingsPtrOutput)
}

type ChannelInputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelInputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputSettings)(nil)).Elem()
}

func (o ChannelInputSettingsOutput) ToChannelInputSettingsOutput() ChannelInputSettingsOutput {
	return o
}

func (o ChannelInputSettingsOutput) ToChannelInputSettingsOutputWithContext(ctx context.Context) ChannelInputSettingsOutput {
	return o
}

func (o ChannelInputSettingsOutput) ToChannelInputSettingsPtrOutput() ChannelInputSettingsPtrOutput {
	return o.ToChannelInputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelInputSettingsOutput) ToChannelInputSettingsPtrOutputWithContext(ctx context.Context) ChannelInputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelInputSettings) *ChannelInputSettings {
		return &v
	}).(ChannelInputSettingsPtrOutput)
}

func (o ChannelInputSettingsOutput) AudioSelectors() ChannelAudioSelectorArrayOutput {
	return o.ApplyT(func(v ChannelInputSettings) []ChannelAudioSelector { return v.AudioSelectors }).(ChannelAudioSelectorArrayOutput)
}

func (o ChannelInputSettingsOutput) CaptionSelectors() ChannelCaptionSelectorArrayOutput {
	return o.ApplyT(func(v ChannelInputSettings) []ChannelCaptionSelector { return v.CaptionSelectors }).(ChannelCaptionSelectorArrayOutput)
}

func (o ChannelInputSettingsOutput) DeblockFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *string { return v.DeblockFilter }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsOutput) DenoiseFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *string { return v.DenoiseFilter }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsOutput) FilterStrength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *int { return v.FilterStrength }).(pulumi.IntPtrOutput)
}

func (o ChannelInputSettingsOutput) InputFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *string { return v.InputFilter }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsOutput) NetworkInputSettings() ChannelNetworkInputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *ChannelNetworkInputSettings { return v.NetworkInputSettings }).(ChannelNetworkInputSettingsPtrOutput)
}

func (o ChannelInputSettingsOutput) Smpte2038DataPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *string { return v.Smpte2038DataPreference }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsOutput) SourceEndBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *string { return v.SourceEndBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsOutput) VideoSelector() ChannelVideoSelectorPtrOutput {
	return o.ApplyT(func(v ChannelInputSettings) *ChannelVideoSelector { return v.VideoSelector }).(ChannelVideoSelectorPtrOutput)
}

type ChannelInputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelInputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputSettings)(nil)).Elem()
}

func (o ChannelInputSettingsPtrOutput) ToChannelInputSettingsPtrOutput() ChannelInputSettingsPtrOutput {
	return o
}

func (o ChannelInputSettingsPtrOutput) ToChannelInputSettingsPtrOutputWithContext(ctx context.Context) ChannelInputSettingsPtrOutput {
	return o
}

func (o ChannelInputSettingsPtrOutput) Elem() ChannelInputSettingsOutput {
	return o.ApplyT(func(v *ChannelInputSettings) ChannelInputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelInputSettings
		return ret
	}).(ChannelInputSettingsOutput)
}

func (o ChannelInputSettingsPtrOutput) AudioSelectors() ChannelAudioSelectorArrayOutput {
	return o.ApplyT(func(v *ChannelInputSettings) []ChannelAudioSelector {
		if v == nil {
			return nil
		}
		return v.AudioSelectors
	}).(ChannelAudioSelectorArrayOutput)
}

func (o ChannelInputSettingsPtrOutput) CaptionSelectors() ChannelCaptionSelectorArrayOutput {
	return o.ApplyT(func(v *ChannelInputSettings) []ChannelCaptionSelector {
		if v == nil {
			return nil
		}
		return v.CaptionSelectors
	}).(ChannelCaptionSelectorArrayOutput)
}

func (o ChannelInputSettingsPtrOutput) DeblockFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *string {
		if v == nil {
			return nil
		}
		return v.DeblockFilter
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) DenoiseFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *string {
		if v == nil {
			return nil
		}
		return v.DenoiseFilter
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) FilterStrength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *int {
		if v == nil {
			return nil
		}
		return v.FilterStrength
	}).(pulumi.IntPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) InputFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputFilter
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) NetworkInputSettings() ChannelNetworkInputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *ChannelNetworkInputSettings {
		if v == nil {
			return nil
		}
		return v.NetworkInputSettings
	}).(ChannelNetworkInputSettingsPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) Smpte2038DataPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *string {
		if v == nil {
			return nil
		}
		return v.Smpte2038DataPreference
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) SourceEndBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *string {
		if v == nil {
			return nil
		}
		return v.SourceEndBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSettingsPtrOutput) VideoSelector() ChannelVideoSelectorPtrOutput {
	return o.ApplyT(func(v *ChannelInputSettings) *ChannelVideoSelector {
		if v == nil {
			return nil
		}
		return v.VideoSelector
	}).(ChannelVideoSelectorPtrOutput)
}

type ChannelInputSpecification struct {
	Codec          *string `pulumi:"codec"`
	MaximumBitrate *string `pulumi:"maximumBitrate"`
	Resolution     *string `pulumi:"resolution"`
}

// ChannelInputSpecificationInput is an input type that accepts ChannelInputSpecificationArgs and ChannelInputSpecificationOutput values.
// You can construct a concrete instance of `ChannelInputSpecificationInput` via:
//
//          ChannelInputSpecificationArgs{...}
type ChannelInputSpecificationInput interface {
	pulumi.Input

	ToChannelInputSpecificationOutput() ChannelInputSpecificationOutput
	ToChannelInputSpecificationOutputWithContext(context.Context) ChannelInputSpecificationOutput
}

type ChannelInputSpecificationArgs struct {
	Codec          pulumi.StringPtrInput `pulumi:"codec"`
	MaximumBitrate pulumi.StringPtrInput `pulumi:"maximumBitrate"`
	Resolution     pulumi.StringPtrInput `pulumi:"resolution"`
}

func (ChannelInputSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputSpecification)(nil)).Elem()
}

func (i ChannelInputSpecificationArgs) ToChannelInputSpecificationOutput() ChannelInputSpecificationOutput {
	return i.ToChannelInputSpecificationOutputWithContext(context.Background())
}

func (i ChannelInputSpecificationArgs) ToChannelInputSpecificationOutputWithContext(ctx context.Context) ChannelInputSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputSpecificationOutput)
}

func (i ChannelInputSpecificationArgs) ToChannelInputSpecificationPtrOutput() ChannelInputSpecificationPtrOutput {
	return i.ToChannelInputSpecificationPtrOutputWithContext(context.Background())
}

func (i ChannelInputSpecificationArgs) ToChannelInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelInputSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputSpecificationOutput).ToChannelInputSpecificationPtrOutputWithContext(ctx)
}

// ChannelInputSpecificationPtrInput is an input type that accepts ChannelInputSpecificationArgs, ChannelInputSpecificationPtr and ChannelInputSpecificationPtrOutput values.
// You can construct a concrete instance of `ChannelInputSpecificationPtrInput` via:
//
//          ChannelInputSpecificationArgs{...}
//
//  or:
//
//          nil
type ChannelInputSpecificationPtrInput interface {
	pulumi.Input

	ToChannelInputSpecificationPtrOutput() ChannelInputSpecificationPtrOutput
	ToChannelInputSpecificationPtrOutputWithContext(context.Context) ChannelInputSpecificationPtrOutput
}

type channelInputSpecificationPtrType ChannelInputSpecificationArgs

func ChannelInputSpecificationPtr(v *ChannelInputSpecificationArgs) ChannelInputSpecificationPtrInput {
	return (*channelInputSpecificationPtrType)(v)
}

func (*channelInputSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputSpecification)(nil)).Elem()
}

func (i *channelInputSpecificationPtrType) ToChannelInputSpecificationPtrOutput() ChannelInputSpecificationPtrOutput {
	return i.ToChannelInputSpecificationPtrOutputWithContext(context.Background())
}

func (i *channelInputSpecificationPtrType) ToChannelInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelInputSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelInputSpecificationPtrOutput)
}

type ChannelInputSpecificationOutput struct{ *pulumi.OutputState }

func (ChannelInputSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelInputSpecification)(nil)).Elem()
}

func (o ChannelInputSpecificationOutput) ToChannelInputSpecificationOutput() ChannelInputSpecificationOutput {
	return o
}

func (o ChannelInputSpecificationOutput) ToChannelInputSpecificationOutputWithContext(ctx context.Context) ChannelInputSpecificationOutput {
	return o
}

func (o ChannelInputSpecificationOutput) ToChannelInputSpecificationPtrOutput() ChannelInputSpecificationPtrOutput {
	return o.ToChannelInputSpecificationPtrOutputWithContext(context.Background())
}

func (o ChannelInputSpecificationOutput) ToChannelInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelInputSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelInputSpecification) *ChannelInputSpecification {
		return &v
	}).(ChannelInputSpecificationPtrOutput)
}

func (o ChannelInputSpecificationOutput) Codec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSpecification) *string { return v.Codec }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSpecificationOutput) MaximumBitrate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSpecification) *string { return v.MaximumBitrate }).(pulumi.StringPtrOutput)
}

func (o ChannelInputSpecificationOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelInputSpecification) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

type ChannelInputSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ChannelInputSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelInputSpecification)(nil)).Elem()
}

func (o ChannelInputSpecificationPtrOutput) ToChannelInputSpecificationPtrOutput() ChannelInputSpecificationPtrOutput {
	return o
}

func (o ChannelInputSpecificationPtrOutput) ToChannelInputSpecificationPtrOutputWithContext(ctx context.Context) ChannelInputSpecificationPtrOutput {
	return o
}

func (o ChannelInputSpecificationPtrOutput) Elem() ChannelInputSpecificationOutput {
	return o.ApplyT(func(v *ChannelInputSpecification) ChannelInputSpecification {
		if v != nil {
			return *v
		}
		var ret ChannelInputSpecification
		return ret
	}).(ChannelInputSpecificationOutput)
}

func (o ChannelInputSpecificationPtrOutput) Codec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Codec
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSpecificationPtrOutput) MaximumBitrate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSpecification) *string {
		if v == nil {
			return nil
		}
		return v.MaximumBitrate
	}).(pulumi.StringPtrOutput)
}

func (o ChannelInputSpecificationPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelInputSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

type ChannelKeyProviderSettings struct {
	StaticKeySettings *ChannelStaticKeySettings `pulumi:"staticKeySettings"`
}

// ChannelKeyProviderSettingsInput is an input type that accepts ChannelKeyProviderSettingsArgs and ChannelKeyProviderSettingsOutput values.
// You can construct a concrete instance of `ChannelKeyProviderSettingsInput` via:
//
//          ChannelKeyProviderSettingsArgs{...}
type ChannelKeyProviderSettingsInput interface {
	pulumi.Input

	ToChannelKeyProviderSettingsOutput() ChannelKeyProviderSettingsOutput
	ToChannelKeyProviderSettingsOutputWithContext(context.Context) ChannelKeyProviderSettingsOutput
}

type ChannelKeyProviderSettingsArgs struct {
	StaticKeySettings ChannelStaticKeySettingsPtrInput `pulumi:"staticKeySettings"`
}

func (ChannelKeyProviderSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelKeyProviderSettings)(nil)).Elem()
}

func (i ChannelKeyProviderSettingsArgs) ToChannelKeyProviderSettingsOutput() ChannelKeyProviderSettingsOutput {
	return i.ToChannelKeyProviderSettingsOutputWithContext(context.Background())
}

func (i ChannelKeyProviderSettingsArgs) ToChannelKeyProviderSettingsOutputWithContext(ctx context.Context) ChannelKeyProviderSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelKeyProviderSettingsOutput)
}

func (i ChannelKeyProviderSettingsArgs) ToChannelKeyProviderSettingsPtrOutput() ChannelKeyProviderSettingsPtrOutput {
	return i.ToChannelKeyProviderSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelKeyProviderSettingsArgs) ToChannelKeyProviderSettingsPtrOutputWithContext(ctx context.Context) ChannelKeyProviderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelKeyProviderSettingsOutput).ToChannelKeyProviderSettingsPtrOutputWithContext(ctx)
}

// ChannelKeyProviderSettingsPtrInput is an input type that accepts ChannelKeyProviderSettingsArgs, ChannelKeyProviderSettingsPtr and ChannelKeyProviderSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelKeyProviderSettingsPtrInput` via:
//
//          ChannelKeyProviderSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelKeyProviderSettingsPtrInput interface {
	pulumi.Input

	ToChannelKeyProviderSettingsPtrOutput() ChannelKeyProviderSettingsPtrOutput
	ToChannelKeyProviderSettingsPtrOutputWithContext(context.Context) ChannelKeyProviderSettingsPtrOutput
}

type channelKeyProviderSettingsPtrType ChannelKeyProviderSettingsArgs

func ChannelKeyProviderSettingsPtr(v *ChannelKeyProviderSettingsArgs) ChannelKeyProviderSettingsPtrInput {
	return (*channelKeyProviderSettingsPtrType)(v)
}

func (*channelKeyProviderSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelKeyProviderSettings)(nil)).Elem()
}

func (i *channelKeyProviderSettingsPtrType) ToChannelKeyProviderSettingsPtrOutput() ChannelKeyProviderSettingsPtrOutput {
	return i.ToChannelKeyProviderSettingsPtrOutputWithContext(context.Background())
}

func (i *channelKeyProviderSettingsPtrType) ToChannelKeyProviderSettingsPtrOutputWithContext(ctx context.Context) ChannelKeyProviderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelKeyProviderSettingsPtrOutput)
}

type ChannelKeyProviderSettingsOutput struct{ *pulumi.OutputState }

func (ChannelKeyProviderSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelKeyProviderSettings)(nil)).Elem()
}

func (o ChannelKeyProviderSettingsOutput) ToChannelKeyProviderSettingsOutput() ChannelKeyProviderSettingsOutput {
	return o
}

func (o ChannelKeyProviderSettingsOutput) ToChannelKeyProviderSettingsOutputWithContext(ctx context.Context) ChannelKeyProviderSettingsOutput {
	return o
}

func (o ChannelKeyProviderSettingsOutput) ToChannelKeyProviderSettingsPtrOutput() ChannelKeyProviderSettingsPtrOutput {
	return o.ToChannelKeyProviderSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelKeyProviderSettingsOutput) ToChannelKeyProviderSettingsPtrOutputWithContext(ctx context.Context) ChannelKeyProviderSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelKeyProviderSettings) *ChannelKeyProviderSettings {
		return &v
	}).(ChannelKeyProviderSettingsPtrOutput)
}

func (o ChannelKeyProviderSettingsOutput) StaticKeySettings() ChannelStaticKeySettingsPtrOutput {
	return o.ApplyT(func(v ChannelKeyProviderSettings) *ChannelStaticKeySettings { return v.StaticKeySettings }).(ChannelStaticKeySettingsPtrOutput)
}

type ChannelKeyProviderSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelKeyProviderSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelKeyProviderSettings)(nil)).Elem()
}

func (o ChannelKeyProviderSettingsPtrOutput) ToChannelKeyProviderSettingsPtrOutput() ChannelKeyProviderSettingsPtrOutput {
	return o
}

func (o ChannelKeyProviderSettingsPtrOutput) ToChannelKeyProviderSettingsPtrOutputWithContext(ctx context.Context) ChannelKeyProviderSettingsPtrOutput {
	return o
}

func (o ChannelKeyProviderSettingsPtrOutput) Elem() ChannelKeyProviderSettingsOutput {
	return o.ApplyT(func(v *ChannelKeyProviderSettings) ChannelKeyProviderSettings {
		if v != nil {
			return *v
		}
		var ret ChannelKeyProviderSettings
		return ret
	}).(ChannelKeyProviderSettingsOutput)
}

func (o ChannelKeyProviderSettingsPtrOutput) StaticKeySettings() ChannelStaticKeySettingsPtrOutput {
	return o.ApplyT(func(v *ChannelKeyProviderSettings) *ChannelStaticKeySettings {
		if v == nil {
			return nil
		}
		return v.StaticKeySettings
	}).(ChannelStaticKeySettingsPtrOutput)
}

type ChannelM2tsSettings struct {
	AbsentInputAudioBehavior *string                `pulumi:"absentInputAudioBehavior"`
	Arib                     *string                `pulumi:"arib"`
	AribCaptionsPid          *string                `pulumi:"aribCaptionsPid"`
	AribCaptionsPidControl   *string                `pulumi:"aribCaptionsPidControl"`
	AudioBufferModel         *string                `pulumi:"audioBufferModel"`
	AudioFramesPerPes        *int                   `pulumi:"audioFramesPerPes"`
	AudioPids                *string                `pulumi:"audioPids"`
	AudioStreamType          *string                `pulumi:"audioStreamType"`
	Bitrate                  *int                   `pulumi:"bitrate"`
	BufferModel              *string                `pulumi:"bufferModel"`
	CcDescriptor             *string                `pulumi:"ccDescriptor"`
	DvbNitSettings           *ChannelDvbNitSettings `pulumi:"dvbNitSettings"`
	DvbSdtSettings           *ChannelDvbSdtSettings `pulumi:"dvbSdtSettings"`
	DvbSubPids               *string                `pulumi:"dvbSubPids"`
	DvbTdtSettings           *ChannelDvbTdtSettings `pulumi:"dvbTdtSettings"`
	DvbTeletextPid           *string                `pulumi:"dvbTeletextPid"`
	Ebif                     *string                `pulumi:"ebif"`
	EbpAudioInterval         *string                `pulumi:"ebpAudioInterval"`
	EbpLookaheadMs           *int                   `pulumi:"ebpLookaheadMs"`
	EbpPlacement             *string                `pulumi:"ebpPlacement"`
	EcmPid                   *string                `pulumi:"ecmPid"`
	EsRateInPes              *string                `pulumi:"esRateInPes"`
	EtvPlatformPid           *string                `pulumi:"etvPlatformPid"`
	EtvSignalPid             *string                `pulumi:"etvSignalPid"`
	FragmentTime             *float64               `pulumi:"fragmentTime"`
	Klv                      *string                `pulumi:"klv"`
	KlvDataPids              *string                `pulumi:"klvDataPids"`
	NielsenId3Behavior       *string                `pulumi:"nielsenId3Behavior"`
	NullPacketBitrate        *float64               `pulumi:"nullPacketBitrate"`
	PatInterval              *int                   `pulumi:"patInterval"`
	PcrControl               *string                `pulumi:"pcrControl"`
	PcrPeriod                *int                   `pulumi:"pcrPeriod"`
	PcrPid                   *string                `pulumi:"pcrPid"`
	PmtInterval              *int                   `pulumi:"pmtInterval"`
	PmtPid                   *string                `pulumi:"pmtPid"`
	ProgramNum               *int                   `pulumi:"programNum"`
	RateMode                 *string                `pulumi:"rateMode"`
	Scte27Pids               *string                `pulumi:"scte27Pids"`
	Scte35Control            *string                `pulumi:"scte35Control"`
	Scte35Pid                *string                `pulumi:"scte35Pid"`
	SegmentationMarkers      *string                `pulumi:"segmentationMarkers"`
	SegmentationStyle        *string                `pulumi:"segmentationStyle"`
	SegmentationTime         *float64               `pulumi:"segmentationTime"`
	TimedMetadataBehavior    *string                `pulumi:"timedMetadataBehavior"`
	TimedMetadataPid         *string                `pulumi:"timedMetadataPid"`
	TransportStreamId        *int                   `pulumi:"transportStreamId"`
	VideoPid                 *string                `pulumi:"videoPid"`
}

// ChannelM2tsSettingsInput is an input type that accepts ChannelM2tsSettingsArgs and ChannelM2tsSettingsOutput values.
// You can construct a concrete instance of `ChannelM2tsSettingsInput` via:
//
//          ChannelM2tsSettingsArgs{...}
type ChannelM2tsSettingsInput interface {
	pulumi.Input

	ToChannelM2tsSettingsOutput() ChannelM2tsSettingsOutput
	ToChannelM2tsSettingsOutputWithContext(context.Context) ChannelM2tsSettingsOutput
}

type ChannelM2tsSettingsArgs struct {
	AbsentInputAudioBehavior pulumi.StringPtrInput         `pulumi:"absentInputAudioBehavior"`
	Arib                     pulumi.StringPtrInput         `pulumi:"arib"`
	AribCaptionsPid          pulumi.StringPtrInput         `pulumi:"aribCaptionsPid"`
	AribCaptionsPidControl   pulumi.StringPtrInput         `pulumi:"aribCaptionsPidControl"`
	AudioBufferModel         pulumi.StringPtrInput         `pulumi:"audioBufferModel"`
	AudioFramesPerPes        pulumi.IntPtrInput            `pulumi:"audioFramesPerPes"`
	AudioPids                pulumi.StringPtrInput         `pulumi:"audioPids"`
	AudioStreamType          pulumi.StringPtrInput         `pulumi:"audioStreamType"`
	Bitrate                  pulumi.IntPtrInput            `pulumi:"bitrate"`
	BufferModel              pulumi.StringPtrInput         `pulumi:"bufferModel"`
	CcDescriptor             pulumi.StringPtrInput         `pulumi:"ccDescriptor"`
	DvbNitSettings           ChannelDvbNitSettingsPtrInput `pulumi:"dvbNitSettings"`
	DvbSdtSettings           ChannelDvbSdtSettingsPtrInput `pulumi:"dvbSdtSettings"`
	DvbSubPids               pulumi.StringPtrInput         `pulumi:"dvbSubPids"`
	DvbTdtSettings           ChannelDvbTdtSettingsPtrInput `pulumi:"dvbTdtSettings"`
	DvbTeletextPid           pulumi.StringPtrInput         `pulumi:"dvbTeletextPid"`
	Ebif                     pulumi.StringPtrInput         `pulumi:"ebif"`
	EbpAudioInterval         pulumi.StringPtrInput         `pulumi:"ebpAudioInterval"`
	EbpLookaheadMs           pulumi.IntPtrInput            `pulumi:"ebpLookaheadMs"`
	EbpPlacement             pulumi.StringPtrInput         `pulumi:"ebpPlacement"`
	EcmPid                   pulumi.StringPtrInput         `pulumi:"ecmPid"`
	EsRateInPes              pulumi.StringPtrInput         `pulumi:"esRateInPes"`
	EtvPlatformPid           pulumi.StringPtrInput         `pulumi:"etvPlatformPid"`
	EtvSignalPid             pulumi.StringPtrInput         `pulumi:"etvSignalPid"`
	FragmentTime             pulumi.Float64PtrInput        `pulumi:"fragmentTime"`
	Klv                      pulumi.StringPtrInput         `pulumi:"klv"`
	KlvDataPids              pulumi.StringPtrInput         `pulumi:"klvDataPids"`
	NielsenId3Behavior       pulumi.StringPtrInput         `pulumi:"nielsenId3Behavior"`
	NullPacketBitrate        pulumi.Float64PtrInput        `pulumi:"nullPacketBitrate"`
	PatInterval              pulumi.IntPtrInput            `pulumi:"patInterval"`
	PcrControl               pulumi.StringPtrInput         `pulumi:"pcrControl"`
	PcrPeriod                pulumi.IntPtrInput            `pulumi:"pcrPeriod"`
	PcrPid                   pulumi.StringPtrInput         `pulumi:"pcrPid"`
	PmtInterval              pulumi.IntPtrInput            `pulumi:"pmtInterval"`
	PmtPid                   pulumi.StringPtrInput         `pulumi:"pmtPid"`
	ProgramNum               pulumi.IntPtrInput            `pulumi:"programNum"`
	RateMode                 pulumi.StringPtrInput         `pulumi:"rateMode"`
	Scte27Pids               pulumi.StringPtrInput         `pulumi:"scte27Pids"`
	Scte35Control            pulumi.StringPtrInput         `pulumi:"scte35Control"`
	Scte35Pid                pulumi.StringPtrInput         `pulumi:"scte35Pid"`
	SegmentationMarkers      pulumi.StringPtrInput         `pulumi:"segmentationMarkers"`
	SegmentationStyle        pulumi.StringPtrInput         `pulumi:"segmentationStyle"`
	SegmentationTime         pulumi.Float64PtrInput        `pulumi:"segmentationTime"`
	TimedMetadataBehavior    pulumi.StringPtrInput         `pulumi:"timedMetadataBehavior"`
	TimedMetadataPid         pulumi.StringPtrInput         `pulumi:"timedMetadataPid"`
	TransportStreamId        pulumi.IntPtrInput            `pulumi:"transportStreamId"`
	VideoPid                 pulumi.StringPtrInput         `pulumi:"videoPid"`
}

func (ChannelM2tsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelM2tsSettings)(nil)).Elem()
}

func (i ChannelM2tsSettingsArgs) ToChannelM2tsSettingsOutput() ChannelM2tsSettingsOutput {
	return i.ToChannelM2tsSettingsOutputWithContext(context.Background())
}

func (i ChannelM2tsSettingsArgs) ToChannelM2tsSettingsOutputWithContext(ctx context.Context) ChannelM2tsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelM2tsSettingsOutput)
}

func (i ChannelM2tsSettingsArgs) ToChannelM2tsSettingsPtrOutput() ChannelM2tsSettingsPtrOutput {
	return i.ToChannelM2tsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelM2tsSettingsArgs) ToChannelM2tsSettingsPtrOutputWithContext(ctx context.Context) ChannelM2tsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelM2tsSettingsOutput).ToChannelM2tsSettingsPtrOutputWithContext(ctx)
}

// ChannelM2tsSettingsPtrInput is an input type that accepts ChannelM2tsSettingsArgs, ChannelM2tsSettingsPtr and ChannelM2tsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelM2tsSettingsPtrInput` via:
//
//          ChannelM2tsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelM2tsSettingsPtrInput interface {
	pulumi.Input

	ToChannelM2tsSettingsPtrOutput() ChannelM2tsSettingsPtrOutput
	ToChannelM2tsSettingsPtrOutputWithContext(context.Context) ChannelM2tsSettingsPtrOutput
}

type channelM2tsSettingsPtrType ChannelM2tsSettingsArgs

func ChannelM2tsSettingsPtr(v *ChannelM2tsSettingsArgs) ChannelM2tsSettingsPtrInput {
	return (*channelM2tsSettingsPtrType)(v)
}

func (*channelM2tsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelM2tsSettings)(nil)).Elem()
}

func (i *channelM2tsSettingsPtrType) ToChannelM2tsSettingsPtrOutput() ChannelM2tsSettingsPtrOutput {
	return i.ToChannelM2tsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelM2tsSettingsPtrType) ToChannelM2tsSettingsPtrOutputWithContext(ctx context.Context) ChannelM2tsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelM2tsSettingsPtrOutput)
}

type ChannelM2tsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelM2tsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelM2tsSettings)(nil)).Elem()
}

func (o ChannelM2tsSettingsOutput) ToChannelM2tsSettingsOutput() ChannelM2tsSettingsOutput {
	return o
}

func (o ChannelM2tsSettingsOutput) ToChannelM2tsSettingsOutputWithContext(ctx context.Context) ChannelM2tsSettingsOutput {
	return o
}

func (o ChannelM2tsSettingsOutput) ToChannelM2tsSettingsPtrOutput() ChannelM2tsSettingsPtrOutput {
	return o.ToChannelM2tsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelM2tsSettingsOutput) ToChannelM2tsSettingsPtrOutputWithContext(ctx context.Context) ChannelM2tsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelM2tsSettings) *ChannelM2tsSettings {
		return &v
	}).(ChannelM2tsSettingsPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AbsentInputAudioBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.AbsentInputAudioBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) Arib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.Arib }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AribCaptionsPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.AribCaptionsPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AribCaptionsPidControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.AribCaptionsPidControl }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AudioBufferModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.AudioBufferModel }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AudioFramesPerPes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.AudioFramesPerPes }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AudioPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.AudioPids }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) AudioStreamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.AudioStreamType }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) BufferModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.BufferModel }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) CcDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.CcDescriptor }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) DvbNitSettings() ChannelDvbNitSettingsPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *ChannelDvbNitSettings { return v.DvbNitSettings }).(ChannelDvbNitSettingsPtrOutput)
}

func (o ChannelM2tsSettingsOutput) DvbSdtSettings() ChannelDvbSdtSettingsPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *ChannelDvbSdtSettings { return v.DvbSdtSettings }).(ChannelDvbSdtSettingsPtrOutput)
}

func (o ChannelM2tsSettingsOutput) DvbSubPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.DvbSubPids }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) DvbTdtSettings() ChannelDvbTdtSettingsPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *ChannelDvbTdtSettings { return v.DvbTdtSettings }).(ChannelDvbTdtSettingsPtrOutput)
}

func (o ChannelM2tsSettingsOutput) DvbTeletextPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.DvbTeletextPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) Ebif() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.Ebif }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EbpAudioInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.EbpAudioInterval }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EbpLookaheadMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.EbpLookaheadMs }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EbpPlacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.EbpPlacement }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EcmPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.EcmPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EsRateInPes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.EsRateInPes }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EtvPlatformPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.EtvPlatformPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) EtvSignalPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.EtvSignalPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) FragmentTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *float64 { return v.FragmentTime }).(pulumi.Float64PtrOutput)
}

func (o ChannelM2tsSettingsOutput) Klv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.Klv }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) KlvDataPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.KlvDataPids }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) NielsenId3Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.NielsenId3Behavior }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) NullPacketBitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *float64 { return v.NullPacketBitrate }).(pulumi.Float64PtrOutput)
}

func (o ChannelM2tsSettingsOutput) PatInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.PatInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) PcrControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.PcrControl }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) PcrPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.PcrPeriod }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) PcrPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.PcrPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) PmtInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.PmtInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) PmtPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.PmtPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) ProgramNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.ProgramNum }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) RateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.RateMode }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) Scte27Pids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.Scte27Pids }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) Scte35Control() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.Scte35Control }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) Scte35Pid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.Scte35Pid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) SegmentationMarkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.SegmentationMarkers }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) SegmentationStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.SegmentationStyle }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) SegmentationTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *float64 { return v.SegmentationTime }).(pulumi.Float64PtrOutput)
}

func (o ChannelM2tsSettingsOutput) TimedMetadataBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.TimedMetadataBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) TimedMetadataPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.TimedMetadataPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsOutput) TransportStreamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *int { return v.TransportStreamId }).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsOutput) VideoPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM2tsSettings) *string { return v.VideoPid }).(pulumi.StringPtrOutput)
}

type ChannelM2tsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelM2tsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelM2tsSettings)(nil)).Elem()
}

func (o ChannelM2tsSettingsPtrOutput) ToChannelM2tsSettingsPtrOutput() ChannelM2tsSettingsPtrOutput {
	return o
}

func (o ChannelM2tsSettingsPtrOutput) ToChannelM2tsSettingsPtrOutputWithContext(ctx context.Context) ChannelM2tsSettingsPtrOutput {
	return o
}

func (o ChannelM2tsSettingsPtrOutput) Elem() ChannelM2tsSettingsOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) ChannelM2tsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelM2tsSettings
		return ret
	}).(ChannelM2tsSettingsOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AbsentInputAudioBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AbsentInputAudioBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Arib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Arib
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AribCaptionsPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AribCaptionsPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AribCaptionsPidControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AribCaptionsPidControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AudioBufferModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioBufferModel
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AudioFramesPerPes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.AudioFramesPerPes
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AudioPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioPids
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) AudioStreamType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioStreamType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) BufferModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.BufferModel
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) CcDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.CcDescriptor
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) DvbNitSettings() ChannelDvbNitSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *ChannelDvbNitSettings {
		if v == nil {
			return nil
		}
		return v.DvbNitSettings
	}).(ChannelDvbNitSettingsPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) DvbSdtSettings() ChannelDvbSdtSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *ChannelDvbSdtSettings {
		if v == nil {
			return nil
		}
		return v.DvbSdtSettings
	}).(ChannelDvbSdtSettingsPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) DvbSubPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DvbSubPids
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) DvbTdtSettings() ChannelDvbTdtSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *ChannelDvbTdtSettings {
		if v == nil {
			return nil
		}
		return v.DvbTdtSettings
	}).(ChannelDvbTdtSettingsPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) DvbTeletextPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DvbTeletextPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Ebif() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Ebif
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EbpAudioInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EbpAudioInterval
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EbpLookaheadMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.EbpLookaheadMs
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EbpPlacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EbpPlacement
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EcmPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EcmPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EsRateInPes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EsRateInPes
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EtvPlatformPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EtvPlatformPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) EtvSignalPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EtvSignalPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) FragmentTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.FragmentTime
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Klv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Klv
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) KlvDataPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.KlvDataPids
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) NielsenId3Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.NielsenId3Behavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) NullPacketBitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.NullPacketBitrate
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) PatInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.PatInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) PcrControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.PcrControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) PcrPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.PcrPeriod
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) PcrPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.PcrPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) PmtInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.PmtInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) PmtPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.PmtPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) ProgramNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.ProgramNum
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) RateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.RateMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Scte27Pids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Scte27Pids
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Scte35Control() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Scte35Control
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) Scte35Pid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Scte35Pid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) SegmentationMarkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.SegmentationMarkers
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) SegmentationStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.SegmentationStyle
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) SegmentationTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.SegmentationTime
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) TimedMetadataBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) TimedMetadataPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) TransportStreamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *int {
		if v == nil {
			return nil
		}
		return v.TransportStreamId
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM2tsSettingsPtrOutput) VideoPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM2tsSettings) *string {
		if v == nil {
			return nil
		}
		return v.VideoPid
	}).(pulumi.StringPtrOutput)
}

type ChannelM3u8Settings struct {
	AudioFramesPerPes     *int    `pulumi:"audioFramesPerPes"`
	AudioPids             *string `pulumi:"audioPids"`
	EcmPid                *string `pulumi:"ecmPid"`
	NielsenId3Behavior    *string `pulumi:"nielsenId3Behavior"`
	PatInterval           *int    `pulumi:"patInterval"`
	PcrControl            *string `pulumi:"pcrControl"`
	PcrPeriod             *int    `pulumi:"pcrPeriod"`
	PcrPid                *string `pulumi:"pcrPid"`
	PmtInterval           *int    `pulumi:"pmtInterval"`
	PmtPid                *string `pulumi:"pmtPid"`
	ProgramNum            *int    `pulumi:"programNum"`
	Scte35Behavior        *string `pulumi:"scte35Behavior"`
	Scte35Pid             *string `pulumi:"scte35Pid"`
	TimedMetadataBehavior *string `pulumi:"timedMetadataBehavior"`
	TimedMetadataPid      *string `pulumi:"timedMetadataPid"`
	TransportStreamId     *int    `pulumi:"transportStreamId"`
	VideoPid              *string `pulumi:"videoPid"`
}

// ChannelM3u8SettingsInput is an input type that accepts ChannelM3u8SettingsArgs and ChannelM3u8SettingsOutput values.
// You can construct a concrete instance of `ChannelM3u8SettingsInput` via:
//
//          ChannelM3u8SettingsArgs{...}
type ChannelM3u8SettingsInput interface {
	pulumi.Input

	ToChannelM3u8SettingsOutput() ChannelM3u8SettingsOutput
	ToChannelM3u8SettingsOutputWithContext(context.Context) ChannelM3u8SettingsOutput
}

type ChannelM3u8SettingsArgs struct {
	AudioFramesPerPes     pulumi.IntPtrInput    `pulumi:"audioFramesPerPes"`
	AudioPids             pulumi.StringPtrInput `pulumi:"audioPids"`
	EcmPid                pulumi.StringPtrInput `pulumi:"ecmPid"`
	NielsenId3Behavior    pulumi.StringPtrInput `pulumi:"nielsenId3Behavior"`
	PatInterval           pulumi.IntPtrInput    `pulumi:"patInterval"`
	PcrControl            pulumi.StringPtrInput `pulumi:"pcrControl"`
	PcrPeriod             pulumi.IntPtrInput    `pulumi:"pcrPeriod"`
	PcrPid                pulumi.StringPtrInput `pulumi:"pcrPid"`
	PmtInterval           pulumi.IntPtrInput    `pulumi:"pmtInterval"`
	PmtPid                pulumi.StringPtrInput `pulumi:"pmtPid"`
	ProgramNum            pulumi.IntPtrInput    `pulumi:"programNum"`
	Scte35Behavior        pulumi.StringPtrInput `pulumi:"scte35Behavior"`
	Scte35Pid             pulumi.StringPtrInput `pulumi:"scte35Pid"`
	TimedMetadataBehavior pulumi.StringPtrInput `pulumi:"timedMetadataBehavior"`
	TimedMetadataPid      pulumi.StringPtrInput `pulumi:"timedMetadataPid"`
	TransportStreamId     pulumi.IntPtrInput    `pulumi:"transportStreamId"`
	VideoPid              pulumi.StringPtrInput `pulumi:"videoPid"`
}

func (ChannelM3u8SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelM3u8Settings)(nil)).Elem()
}

func (i ChannelM3u8SettingsArgs) ToChannelM3u8SettingsOutput() ChannelM3u8SettingsOutput {
	return i.ToChannelM3u8SettingsOutputWithContext(context.Background())
}

func (i ChannelM3u8SettingsArgs) ToChannelM3u8SettingsOutputWithContext(ctx context.Context) ChannelM3u8SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelM3u8SettingsOutput)
}

func (i ChannelM3u8SettingsArgs) ToChannelM3u8SettingsPtrOutput() ChannelM3u8SettingsPtrOutput {
	return i.ToChannelM3u8SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelM3u8SettingsArgs) ToChannelM3u8SettingsPtrOutputWithContext(ctx context.Context) ChannelM3u8SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelM3u8SettingsOutput).ToChannelM3u8SettingsPtrOutputWithContext(ctx)
}

// ChannelM3u8SettingsPtrInput is an input type that accepts ChannelM3u8SettingsArgs, ChannelM3u8SettingsPtr and ChannelM3u8SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelM3u8SettingsPtrInput` via:
//
//          ChannelM3u8SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelM3u8SettingsPtrInput interface {
	pulumi.Input

	ToChannelM3u8SettingsPtrOutput() ChannelM3u8SettingsPtrOutput
	ToChannelM3u8SettingsPtrOutputWithContext(context.Context) ChannelM3u8SettingsPtrOutput
}

type channelM3u8SettingsPtrType ChannelM3u8SettingsArgs

func ChannelM3u8SettingsPtr(v *ChannelM3u8SettingsArgs) ChannelM3u8SettingsPtrInput {
	return (*channelM3u8SettingsPtrType)(v)
}

func (*channelM3u8SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelM3u8Settings)(nil)).Elem()
}

func (i *channelM3u8SettingsPtrType) ToChannelM3u8SettingsPtrOutput() ChannelM3u8SettingsPtrOutput {
	return i.ToChannelM3u8SettingsPtrOutputWithContext(context.Background())
}

func (i *channelM3u8SettingsPtrType) ToChannelM3u8SettingsPtrOutputWithContext(ctx context.Context) ChannelM3u8SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelM3u8SettingsPtrOutput)
}

type ChannelM3u8SettingsOutput struct{ *pulumi.OutputState }

func (ChannelM3u8SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelM3u8Settings)(nil)).Elem()
}

func (o ChannelM3u8SettingsOutput) ToChannelM3u8SettingsOutput() ChannelM3u8SettingsOutput {
	return o
}

func (o ChannelM3u8SettingsOutput) ToChannelM3u8SettingsOutputWithContext(ctx context.Context) ChannelM3u8SettingsOutput {
	return o
}

func (o ChannelM3u8SettingsOutput) ToChannelM3u8SettingsPtrOutput() ChannelM3u8SettingsPtrOutput {
	return o.ToChannelM3u8SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelM3u8SettingsOutput) ToChannelM3u8SettingsPtrOutputWithContext(ctx context.Context) ChannelM3u8SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelM3u8Settings) *ChannelM3u8Settings {
		return &v
	}).(ChannelM3u8SettingsPtrOutput)
}

func (o ChannelM3u8SettingsOutput) AudioFramesPerPes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *int { return v.AudioFramesPerPes }).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsOutput) AudioPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.AudioPids }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) EcmPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.EcmPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) NielsenId3Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.NielsenId3Behavior }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) PatInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *int { return v.PatInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsOutput) PcrControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.PcrControl }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) PcrPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *int { return v.PcrPeriod }).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsOutput) PcrPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.PcrPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) PmtInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *int { return v.PmtInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsOutput) PmtPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.PmtPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) ProgramNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *int { return v.ProgramNum }).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsOutput) Scte35Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.Scte35Behavior }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) Scte35Pid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.Scte35Pid }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) TimedMetadataBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.TimedMetadataBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) TimedMetadataPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.TimedMetadataPid }).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsOutput) TransportStreamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *int { return v.TransportStreamId }).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsOutput) VideoPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelM3u8Settings) *string { return v.VideoPid }).(pulumi.StringPtrOutput)
}

type ChannelM3u8SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelM3u8SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelM3u8Settings)(nil)).Elem()
}

func (o ChannelM3u8SettingsPtrOutput) ToChannelM3u8SettingsPtrOutput() ChannelM3u8SettingsPtrOutput {
	return o
}

func (o ChannelM3u8SettingsPtrOutput) ToChannelM3u8SettingsPtrOutputWithContext(ctx context.Context) ChannelM3u8SettingsPtrOutput {
	return o
}

func (o ChannelM3u8SettingsPtrOutput) Elem() ChannelM3u8SettingsOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) ChannelM3u8Settings {
		if v != nil {
			return *v
		}
		var ret ChannelM3u8Settings
		return ret
	}).(ChannelM3u8SettingsOutput)
}

func (o ChannelM3u8SettingsPtrOutput) AudioFramesPerPes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *int {
		if v == nil {
			return nil
		}
		return v.AudioFramesPerPes
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) AudioPids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.AudioPids
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) EcmPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.EcmPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) NielsenId3Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.NielsenId3Behavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) PatInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *int {
		if v == nil {
			return nil
		}
		return v.PatInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) PcrControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.PcrControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) PcrPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *int {
		if v == nil {
			return nil
		}
		return v.PcrPeriod
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) PcrPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.PcrPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) PmtInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *int {
		if v == nil {
			return nil
		}
		return v.PmtInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) PmtPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.PmtPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) ProgramNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *int {
		if v == nil {
			return nil
		}
		return v.ProgramNum
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) Scte35Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.Scte35Behavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) Scte35Pid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.Scte35Pid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) TimedMetadataBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) TimedMetadataPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataPid
	}).(pulumi.StringPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) TransportStreamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *int {
		if v == nil {
			return nil
		}
		return v.TransportStreamId
	}).(pulumi.IntPtrOutput)
}

func (o ChannelM3u8SettingsPtrOutput) VideoPid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelM3u8Settings) *string {
		if v == nil {
			return nil
		}
		return v.VideoPid
	}).(pulumi.StringPtrOutput)
}

type ChannelMediaPackageGroupSettings struct {
	Destination *ChannelOutputLocationRef `pulumi:"destination"`
}

// ChannelMediaPackageGroupSettingsInput is an input type that accepts ChannelMediaPackageGroupSettingsArgs and ChannelMediaPackageGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelMediaPackageGroupSettingsInput` via:
//
//          ChannelMediaPackageGroupSettingsArgs{...}
type ChannelMediaPackageGroupSettingsInput interface {
	pulumi.Input

	ToChannelMediaPackageGroupSettingsOutput() ChannelMediaPackageGroupSettingsOutput
	ToChannelMediaPackageGroupSettingsOutputWithContext(context.Context) ChannelMediaPackageGroupSettingsOutput
}

type ChannelMediaPackageGroupSettingsArgs struct {
	Destination ChannelOutputLocationRefPtrInput `pulumi:"destination"`
}

func (ChannelMediaPackageGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMediaPackageGroupSettings)(nil)).Elem()
}

func (i ChannelMediaPackageGroupSettingsArgs) ToChannelMediaPackageGroupSettingsOutput() ChannelMediaPackageGroupSettingsOutput {
	return i.ToChannelMediaPackageGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelMediaPackageGroupSettingsArgs) ToChannelMediaPackageGroupSettingsOutputWithContext(ctx context.Context) ChannelMediaPackageGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageGroupSettingsOutput)
}

func (i ChannelMediaPackageGroupSettingsArgs) ToChannelMediaPackageGroupSettingsPtrOutput() ChannelMediaPackageGroupSettingsPtrOutput {
	return i.ToChannelMediaPackageGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMediaPackageGroupSettingsArgs) ToChannelMediaPackageGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageGroupSettingsOutput).ToChannelMediaPackageGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelMediaPackageGroupSettingsPtrInput is an input type that accepts ChannelMediaPackageGroupSettingsArgs, ChannelMediaPackageGroupSettingsPtr and ChannelMediaPackageGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMediaPackageGroupSettingsPtrInput` via:
//
//          ChannelMediaPackageGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMediaPackageGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelMediaPackageGroupSettingsPtrOutput() ChannelMediaPackageGroupSettingsPtrOutput
	ToChannelMediaPackageGroupSettingsPtrOutputWithContext(context.Context) ChannelMediaPackageGroupSettingsPtrOutput
}

type channelMediaPackageGroupSettingsPtrType ChannelMediaPackageGroupSettingsArgs

func ChannelMediaPackageGroupSettingsPtr(v *ChannelMediaPackageGroupSettingsArgs) ChannelMediaPackageGroupSettingsPtrInput {
	return (*channelMediaPackageGroupSettingsPtrType)(v)
}

func (*channelMediaPackageGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMediaPackageGroupSettings)(nil)).Elem()
}

func (i *channelMediaPackageGroupSettingsPtrType) ToChannelMediaPackageGroupSettingsPtrOutput() ChannelMediaPackageGroupSettingsPtrOutput {
	return i.ToChannelMediaPackageGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMediaPackageGroupSettingsPtrType) ToChannelMediaPackageGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageGroupSettingsPtrOutput)
}

type ChannelMediaPackageGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMediaPackageGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMediaPackageGroupSettings)(nil)).Elem()
}

func (o ChannelMediaPackageGroupSettingsOutput) ToChannelMediaPackageGroupSettingsOutput() ChannelMediaPackageGroupSettingsOutput {
	return o
}

func (o ChannelMediaPackageGroupSettingsOutput) ToChannelMediaPackageGroupSettingsOutputWithContext(ctx context.Context) ChannelMediaPackageGroupSettingsOutput {
	return o
}

func (o ChannelMediaPackageGroupSettingsOutput) ToChannelMediaPackageGroupSettingsPtrOutput() ChannelMediaPackageGroupSettingsPtrOutput {
	return o.ToChannelMediaPackageGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMediaPackageGroupSettingsOutput) ToChannelMediaPackageGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMediaPackageGroupSettings) *ChannelMediaPackageGroupSettings {
		return &v
	}).(ChannelMediaPackageGroupSettingsPtrOutput)
}

func (o ChannelMediaPackageGroupSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelMediaPackageGroupSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

type ChannelMediaPackageGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMediaPackageGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMediaPackageGroupSettings)(nil)).Elem()
}

func (o ChannelMediaPackageGroupSettingsPtrOutput) ToChannelMediaPackageGroupSettingsPtrOutput() ChannelMediaPackageGroupSettingsPtrOutput {
	return o
}

func (o ChannelMediaPackageGroupSettingsPtrOutput) ToChannelMediaPackageGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageGroupSettingsPtrOutput {
	return o
}

func (o ChannelMediaPackageGroupSettingsPtrOutput) Elem() ChannelMediaPackageGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelMediaPackageGroupSettings) ChannelMediaPackageGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMediaPackageGroupSettings
		return ret
	}).(ChannelMediaPackageGroupSettingsOutput)
}

func (o ChannelMediaPackageGroupSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelMediaPackageGroupSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

type ChannelMediaPackageOutputDestinationSettings struct {
	ChannelId *string `pulumi:"channelId"`
}

// ChannelMediaPackageOutputDestinationSettingsInput is an input type that accepts ChannelMediaPackageOutputDestinationSettingsArgs and ChannelMediaPackageOutputDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelMediaPackageOutputDestinationSettingsInput` via:
//
//          ChannelMediaPackageOutputDestinationSettingsArgs{...}
type ChannelMediaPackageOutputDestinationSettingsInput interface {
	pulumi.Input

	ToChannelMediaPackageOutputDestinationSettingsOutput() ChannelMediaPackageOutputDestinationSettingsOutput
	ToChannelMediaPackageOutputDestinationSettingsOutputWithContext(context.Context) ChannelMediaPackageOutputDestinationSettingsOutput
}

type ChannelMediaPackageOutputDestinationSettingsArgs struct {
	ChannelId pulumi.StringPtrInput `pulumi:"channelId"`
}

func (ChannelMediaPackageOutputDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMediaPackageOutputDestinationSettings)(nil)).Elem()
}

func (i ChannelMediaPackageOutputDestinationSettingsArgs) ToChannelMediaPackageOutputDestinationSettingsOutput() ChannelMediaPackageOutputDestinationSettingsOutput {
	return i.ToChannelMediaPackageOutputDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelMediaPackageOutputDestinationSettingsArgs) ToChannelMediaPackageOutputDestinationSettingsOutputWithContext(ctx context.Context) ChannelMediaPackageOutputDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageOutputDestinationSettingsOutput)
}

// ChannelMediaPackageOutputDestinationSettingsArrayInput is an input type that accepts ChannelMediaPackageOutputDestinationSettingsArray and ChannelMediaPackageOutputDestinationSettingsArrayOutput values.
// You can construct a concrete instance of `ChannelMediaPackageOutputDestinationSettingsArrayInput` via:
//
//          ChannelMediaPackageOutputDestinationSettingsArray{ ChannelMediaPackageOutputDestinationSettingsArgs{...} }
type ChannelMediaPackageOutputDestinationSettingsArrayInput interface {
	pulumi.Input

	ToChannelMediaPackageOutputDestinationSettingsArrayOutput() ChannelMediaPackageOutputDestinationSettingsArrayOutput
	ToChannelMediaPackageOutputDestinationSettingsArrayOutputWithContext(context.Context) ChannelMediaPackageOutputDestinationSettingsArrayOutput
}

type ChannelMediaPackageOutputDestinationSettingsArray []ChannelMediaPackageOutputDestinationSettingsInput

func (ChannelMediaPackageOutputDestinationSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelMediaPackageOutputDestinationSettings)(nil)).Elem()
}

func (i ChannelMediaPackageOutputDestinationSettingsArray) ToChannelMediaPackageOutputDestinationSettingsArrayOutput() ChannelMediaPackageOutputDestinationSettingsArrayOutput {
	return i.ToChannelMediaPackageOutputDestinationSettingsArrayOutputWithContext(context.Background())
}

func (i ChannelMediaPackageOutputDestinationSettingsArray) ToChannelMediaPackageOutputDestinationSettingsArrayOutputWithContext(ctx context.Context) ChannelMediaPackageOutputDestinationSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageOutputDestinationSettingsArrayOutput)
}

type ChannelMediaPackageOutputDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMediaPackageOutputDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMediaPackageOutputDestinationSettings)(nil)).Elem()
}

func (o ChannelMediaPackageOutputDestinationSettingsOutput) ToChannelMediaPackageOutputDestinationSettingsOutput() ChannelMediaPackageOutputDestinationSettingsOutput {
	return o
}

func (o ChannelMediaPackageOutputDestinationSettingsOutput) ToChannelMediaPackageOutputDestinationSettingsOutputWithContext(ctx context.Context) ChannelMediaPackageOutputDestinationSettingsOutput {
	return o
}

func (o ChannelMediaPackageOutputDestinationSettingsOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMediaPackageOutputDestinationSettings) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

type ChannelMediaPackageOutputDestinationSettingsArrayOutput struct{ *pulumi.OutputState }

func (ChannelMediaPackageOutputDestinationSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelMediaPackageOutputDestinationSettings)(nil)).Elem()
}

func (o ChannelMediaPackageOutputDestinationSettingsArrayOutput) ToChannelMediaPackageOutputDestinationSettingsArrayOutput() ChannelMediaPackageOutputDestinationSettingsArrayOutput {
	return o
}

func (o ChannelMediaPackageOutputDestinationSettingsArrayOutput) ToChannelMediaPackageOutputDestinationSettingsArrayOutputWithContext(ctx context.Context) ChannelMediaPackageOutputDestinationSettingsArrayOutput {
	return o
}

func (o ChannelMediaPackageOutputDestinationSettingsArrayOutput) Index(i pulumi.IntInput) ChannelMediaPackageOutputDestinationSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelMediaPackageOutputDestinationSettings {
		return vs[0].([]ChannelMediaPackageOutputDestinationSettings)[vs[1].(int)]
	}).(ChannelMediaPackageOutputDestinationSettingsOutput)
}

type ChannelMediaPackageOutputSettings struct {
}

// ChannelMediaPackageOutputSettingsInput is an input type that accepts ChannelMediaPackageOutputSettingsArgs and ChannelMediaPackageOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelMediaPackageOutputSettingsInput` via:
//
//          ChannelMediaPackageOutputSettingsArgs{...}
type ChannelMediaPackageOutputSettingsInput interface {
	pulumi.Input

	ToChannelMediaPackageOutputSettingsOutput() ChannelMediaPackageOutputSettingsOutput
	ToChannelMediaPackageOutputSettingsOutputWithContext(context.Context) ChannelMediaPackageOutputSettingsOutput
}

type ChannelMediaPackageOutputSettingsArgs struct {
}

func (ChannelMediaPackageOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMediaPackageOutputSettings)(nil)).Elem()
}

func (i ChannelMediaPackageOutputSettingsArgs) ToChannelMediaPackageOutputSettingsOutput() ChannelMediaPackageOutputSettingsOutput {
	return i.ToChannelMediaPackageOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelMediaPackageOutputSettingsArgs) ToChannelMediaPackageOutputSettingsOutputWithContext(ctx context.Context) ChannelMediaPackageOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageOutputSettingsOutput)
}

func (i ChannelMediaPackageOutputSettingsArgs) ToChannelMediaPackageOutputSettingsPtrOutput() ChannelMediaPackageOutputSettingsPtrOutput {
	return i.ToChannelMediaPackageOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMediaPackageOutputSettingsArgs) ToChannelMediaPackageOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageOutputSettingsOutput).ToChannelMediaPackageOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelMediaPackageOutputSettingsPtrInput is an input type that accepts ChannelMediaPackageOutputSettingsArgs, ChannelMediaPackageOutputSettingsPtr and ChannelMediaPackageOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMediaPackageOutputSettingsPtrInput` via:
//
//          ChannelMediaPackageOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMediaPackageOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelMediaPackageOutputSettingsPtrOutput() ChannelMediaPackageOutputSettingsPtrOutput
	ToChannelMediaPackageOutputSettingsPtrOutputWithContext(context.Context) ChannelMediaPackageOutputSettingsPtrOutput
}

type channelMediaPackageOutputSettingsPtrType ChannelMediaPackageOutputSettingsArgs

func ChannelMediaPackageOutputSettingsPtr(v *ChannelMediaPackageOutputSettingsArgs) ChannelMediaPackageOutputSettingsPtrInput {
	return (*channelMediaPackageOutputSettingsPtrType)(v)
}

func (*channelMediaPackageOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMediaPackageOutputSettings)(nil)).Elem()
}

func (i *channelMediaPackageOutputSettingsPtrType) ToChannelMediaPackageOutputSettingsPtrOutput() ChannelMediaPackageOutputSettingsPtrOutput {
	return i.ToChannelMediaPackageOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMediaPackageOutputSettingsPtrType) ToChannelMediaPackageOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMediaPackageOutputSettingsPtrOutput)
}

type ChannelMediaPackageOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMediaPackageOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMediaPackageOutputSettings)(nil)).Elem()
}

func (o ChannelMediaPackageOutputSettingsOutput) ToChannelMediaPackageOutputSettingsOutput() ChannelMediaPackageOutputSettingsOutput {
	return o
}

func (o ChannelMediaPackageOutputSettingsOutput) ToChannelMediaPackageOutputSettingsOutputWithContext(ctx context.Context) ChannelMediaPackageOutputSettingsOutput {
	return o
}

func (o ChannelMediaPackageOutputSettingsOutput) ToChannelMediaPackageOutputSettingsPtrOutput() ChannelMediaPackageOutputSettingsPtrOutput {
	return o.ToChannelMediaPackageOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMediaPackageOutputSettingsOutput) ToChannelMediaPackageOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMediaPackageOutputSettings) *ChannelMediaPackageOutputSettings {
		return &v
	}).(ChannelMediaPackageOutputSettingsPtrOutput)
}

type ChannelMediaPackageOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMediaPackageOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMediaPackageOutputSettings)(nil)).Elem()
}

func (o ChannelMediaPackageOutputSettingsPtrOutput) ToChannelMediaPackageOutputSettingsPtrOutput() ChannelMediaPackageOutputSettingsPtrOutput {
	return o
}

func (o ChannelMediaPackageOutputSettingsPtrOutput) ToChannelMediaPackageOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMediaPackageOutputSettingsPtrOutput {
	return o
}

func (o ChannelMediaPackageOutputSettingsPtrOutput) Elem() ChannelMediaPackageOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelMediaPackageOutputSettings) ChannelMediaPackageOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMediaPackageOutputSettings
		return ret
	}).(ChannelMediaPackageOutputSettingsOutput)
}

type ChannelMotionGraphicsConfiguration struct {
	MotionGraphicsInsertion *string                        `pulumi:"motionGraphicsInsertion"`
	MotionGraphicsSettings  *ChannelMotionGraphicsSettings `pulumi:"motionGraphicsSettings"`
}

// ChannelMotionGraphicsConfigurationInput is an input type that accepts ChannelMotionGraphicsConfigurationArgs and ChannelMotionGraphicsConfigurationOutput values.
// You can construct a concrete instance of `ChannelMotionGraphicsConfigurationInput` via:
//
//          ChannelMotionGraphicsConfigurationArgs{...}
type ChannelMotionGraphicsConfigurationInput interface {
	pulumi.Input

	ToChannelMotionGraphicsConfigurationOutput() ChannelMotionGraphicsConfigurationOutput
	ToChannelMotionGraphicsConfigurationOutputWithContext(context.Context) ChannelMotionGraphicsConfigurationOutput
}

type ChannelMotionGraphicsConfigurationArgs struct {
	MotionGraphicsInsertion pulumi.StringPtrInput                 `pulumi:"motionGraphicsInsertion"`
	MotionGraphicsSettings  ChannelMotionGraphicsSettingsPtrInput `pulumi:"motionGraphicsSettings"`
}

func (ChannelMotionGraphicsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMotionGraphicsConfiguration)(nil)).Elem()
}

func (i ChannelMotionGraphicsConfigurationArgs) ToChannelMotionGraphicsConfigurationOutput() ChannelMotionGraphicsConfigurationOutput {
	return i.ToChannelMotionGraphicsConfigurationOutputWithContext(context.Background())
}

func (i ChannelMotionGraphicsConfigurationArgs) ToChannelMotionGraphicsConfigurationOutputWithContext(ctx context.Context) ChannelMotionGraphicsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMotionGraphicsConfigurationOutput)
}

func (i ChannelMotionGraphicsConfigurationArgs) ToChannelMotionGraphicsConfigurationPtrOutput() ChannelMotionGraphicsConfigurationPtrOutput {
	return i.ToChannelMotionGraphicsConfigurationPtrOutputWithContext(context.Background())
}

func (i ChannelMotionGraphicsConfigurationArgs) ToChannelMotionGraphicsConfigurationPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMotionGraphicsConfigurationOutput).ToChannelMotionGraphicsConfigurationPtrOutputWithContext(ctx)
}

// ChannelMotionGraphicsConfigurationPtrInput is an input type that accepts ChannelMotionGraphicsConfigurationArgs, ChannelMotionGraphicsConfigurationPtr and ChannelMotionGraphicsConfigurationPtrOutput values.
// You can construct a concrete instance of `ChannelMotionGraphicsConfigurationPtrInput` via:
//
//          ChannelMotionGraphicsConfigurationArgs{...}
//
//  or:
//
//          nil
type ChannelMotionGraphicsConfigurationPtrInput interface {
	pulumi.Input

	ToChannelMotionGraphicsConfigurationPtrOutput() ChannelMotionGraphicsConfigurationPtrOutput
	ToChannelMotionGraphicsConfigurationPtrOutputWithContext(context.Context) ChannelMotionGraphicsConfigurationPtrOutput
}

type channelMotionGraphicsConfigurationPtrType ChannelMotionGraphicsConfigurationArgs

func ChannelMotionGraphicsConfigurationPtr(v *ChannelMotionGraphicsConfigurationArgs) ChannelMotionGraphicsConfigurationPtrInput {
	return (*channelMotionGraphicsConfigurationPtrType)(v)
}

func (*channelMotionGraphicsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMotionGraphicsConfiguration)(nil)).Elem()
}

func (i *channelMotionGraphicsConfigurationPtrType) ToChannelMotionGraphicsConfigurationPtrOutput() ChannelMotionGraphicsConfigurationPtrOutput {
	return i.ToChannelMotionGraphicsConfigurationPtrOutputWithContext(context.Background())
}

func (i *channelMotionGraphicsConfigurationPtrType) ToChannelMotionGraphicsConfigurationPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMotionGraphicsConfigurationPtrOutput)
}

type ChannelMotionGraphicsConfigurationOutput struct{ *pulumi.OutputState }

func (ChannelMotionGraphicsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMotionGraphicsConfiguration)(nil)).Elem()
}

func (o ChannelMotionGraphicsConfigurationOutput) ToChannelMotionGraphicsConfigurationOutput() ChannelMotionGraphicsConfigurationOutput {
	return o
}

func (o ChannelMotionGraphicsConfigurationOutput) ToChannelMotionGraphicsConfigurationOutputWithContext(ctx context.Context) ChannelMotionGraphicsConfigurationOutput {
	return o
}

func (o ChannelMotionGraphicsConfigurationOutput) ToChannelMotionGraphicsConfigurationPtrOutput() ChannelMotionGraphicsConfigurationPtrOutput {
	return o.ToChannelMotionGraphicsConfigurationPtrOutputWithContext(context.Background())
}

func (o ChannelMotionGraphicsConfigurationOutput) ToChannelMotionGraphicsConfigurationPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMotionGraphicsConfiguration) *ChannelMotionGraphicsConfiguration {
		return &v
	}).(ChannelMotionGraphicsConfigurationPtrOutput)
}

func (o ChannelMotionGraphicsConfigurationOutput) MotionGraphicsInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMotionGraphicsConfiguration) *string { return v.MotionGraphicsInsertion }).(pulumi.StringPtrOutput)
}

func (o ChannelMotionGraphicsConfigurationOutput) MotionGraphicsSettings() ChannelMotionGraphicsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelMotionGraphicsConfiguration) *ChannelMotionGraphicsSettings {
		return v.MotionGraphicsSettings
	}).(ChannelMotionGraphicsSettingsPtrOutput)
}

type ChannelMotionGraphicsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ChannelMotionGraphicsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMotionGraphicsConfiguration)(nil)).Elem()
}

func (o ChannelMotionGraphicsConfigurationPtrOutput) ToChannelMotionGraphicsConfigurationPtrOutput() ChannelMotionGraphicsConfigurationPtrOutput {
	return o
}

func (o ChannelMotionGraphicsConfigurationPtrOutput) ToChannelMotionGraphicsConfigurationPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsConfigurationPtrOutput {
	return o
}

func (o ChannelMotionGraphicsConfigurationPtrOutput) Elem() ChannelMotionGraphicsConfigurationOutput {
	return o.ApplyT(func(v *ChannelMotionGraphicsConfiguration) ChannelMotionGraphicsConfiguration {
		if v != nil {
			return *v
		}
		var ret ChannelMotionGraphicsConfiguration
		return ret
	}).(ChannelMotionGraphicsConfigurationOutput)
}

func (o ChannelMotionGraphicsConfigurationPtrOutput) MotionGraphicsInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMotionGraphicsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MotionGraphicsInsertion
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMotionGraphicsConfigurationPtrOutput) MotionGraphicsSettings() ChannelMotionGraphicsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelMotionGraphicsConfiguration) *ChannelMotionGraphicsSettings {
		if v == nil {
			return nil
		}
		return v.MotionGraphicsSettings
	}).(ChannelMotionGraphicsSettingsPtrOutput)
}

type ChannelMotionGraphicsSettings struct {
	HtmlMotionGraphicsSettings *ChannelHtmlMotionGraphicsSettings `pulumi:"htmlMotionGraphicsSettings"`
}

// ChannelMotionGraphicsSettingsInput is an input type that accepts ChannelMotionGraphicsSettingsArgs and ChannelMotionGraphicsSettingsOutput values.
// You can construct a concrete instance of `ChannelMotionGraphicsSettingsInput` via:
//
//          ChannelMotionGraphicsSettingsArgs{...}
type ChannelMotionGraphicsSettingsInput interface {
	pulumi.Input

	ToChannelMotionGraphicsSettingsOutput() ChannelMotionGraphicsSettingsOutput
	ToChannelMotionGraphicsSettingsOutputWithContext(context.Context) ChannelMotionGraphicsSettingsOutput
}

type ChannelMotionGraphicsSettingsArgs struct {
	HtmlMotionGraphicsSettings ChannelHtmlMotionGraphicsSettingsPtrInput `pulumi:"htmlMotionGraphicsSettings"`
}

func (ChannelMotionGraphicsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMotionGraphicsSettings)(nil)).Elem()
}

func (i ChannelMotionGraphicsSettingsArgs) ToChannelMotionGraphicsSettingsOutput() ChannelMotionGraphicsSettingsOutput {
	return i.ToChannelMotionGraphicsSettingsOutputWithContext(context.Background())
}

func (i ChannelMotionGraphicsSettingsArgs) ToChannelMotionGraphicsSettingsOutputWithContext(ctx context.Context) ChannelMotionGraphicsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMotionGraphicsSettingsOutput)
}

func (i ChannelMotionGraphicsSettingsArgs) ToChannelMotionGraphicsSettingsPtrOutput() ChannelMotionGraphicsSettingsPtrOutput {
	return i.ToChannelMotionGraphicsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMotionGraphicsSettingsArgs) ToChannelMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMotionGraphicsSettingsOutput).ToChannelMotionGraphicsSettingsPtrOutputWithContext(ctx)
}

// ChannelMotionGraphicsSettingsPtrInput is an input type that accepts ChannelMotionGraphicsSettingsArgs, ChannelMotionGraphicsSettingsPtr and ChannelMotionGraphicsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMotionGraphicsSettingsPtrInput` via:
//
//          ChannelMotionGraphicsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMotionGraphicsSettingsPtrInput interface {
	pulumi.Input

	ToChannelMotionGraphicsSettingsPtrOutput() ChannelMotionGraphicsSettingsPtrOutput
	ToChannelMotionGraphicsSettingsPtrOutputWithContext(context.Context) ChannelMotionGraphicsSettingsPtrOutput
}

type channelMotionGraphicsSettingsPtrType ChannelMotionGraphicsSettingsArgs

func ChannelMotionGraphicsSettingsPtr(v *ChannelMotionGraphicsSettingsArgs) ChannelMotionGraphicsSettingsPtrInput {
	return (*channelMotionGraphicsSettingsPtrType)(v)
}

func (*channelMotionGraphicsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMotionGraphicsSettings)(nil)).Elem()
}

func (i *channelMotionGraphicsSettingsPtrType) ToChannelMotionGraphicsSettingsPtrOutput() ChannelMotionGraphicsSettingsPtrOutput {
	return i.ToChannelMotionGraphicsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMotionGraphicsSettingsPtrType) ToChannelMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMotionGraphicsSettingsPtrOutput)
}

type ChannelMotionGraphicsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMotionGraphicsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMotionGraphicsSettings)(nil)).Elem()
}

func (o ChannelMotionGraphicsSettingsOutput) ToChannelMotionGraphicsSettingsOutput() ChannelMotionGraphicsSettingsOutput {
	return o
}

func (o ChannelMotionGraphicsSettingsOutput) ToChannelMotionGraphicsSettingsOutputWithContext(ctx context.Context) ChannelMotionGraphicsSettingsOutput {
	return o
}

func (o ChannelMotionGraphicsSettingsOutput) ToChannelMotionGraphicsSettingsPtrOutput() ChannelMotionGraphicsSettingsPtrOutput {
	return o.ToChannelMotionGraphicsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMotionGraphicsSettingsOutput) ToChannelMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMotionGraphicsSettings) *ChannelMotionGraphicsSettings {
		return &v
	}).(ChannelMotionGraphicsSettingsPtrOutput)
}

func (o ChannelMotionGraphicsSettingsOutput) HtmlMotionGraphicsSettings() ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelMotionGraphicsSettings) *ChannelHtmlMotionGraphicsSettings {
		return v.HtmlMotionGraphicsSettings
	}).(ChannelHtmlMotionGraphicsSettingsPtrOutput)
}

type ChannelMotionGraphicsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMotionGraphicsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMotionGraphicsSettings)(nil)).Elem()
}

func (o ChannelMotionGraphicsSettingsPtrOutput) ToChannelMotionGraphicsSettingsPtrOutput() ChannelMotionGraphicsSettingsPtrOutput {
	return o
}

func (o ChannelMotionGraphicsSettingsPtrOutput) ToChannelMotionGraphicsSettingsPtrOutputWithContext(ctx context.Context) ChannelMotionGraphicsSettingsPtrOutput {
	return o
}

func (o ChannelMotionGraphicsSettingsPtrOutput) Elem() ChannelMotionGraphicsSettingsOutput {
	return o.ApplyT(func(v *ChannelMotionGraphicsSettings) ChannelMotionGraphicsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMotionGraphicsSettings
		return ret
	}).(ChannelMotionGraphicsSettingsOutput)
}

func (o ChannelMotionGraphicsSettingsPtrOutput) HtmlMotionGraphicsSettings() ChannelHtmlMotionGraphicsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelMotionGraphicsSettings) *ChannelHtmlMotionGraphicsSettings {
		if v == nil {
			return nil
		}
		return v.HtmlMotionGraphicsSettings
	}).(ChannelHtmlMotionGraphicsSettingsPtrOutput)
}

type ChannelMp2Settings struct {
	Bitrate    *float64 `pulumi:"bitrate"`
	CodingMode *string  `pulumi:"codingMode"`
	SampleRate *float64 `pulumi:"sampleRate"`
}

// ChannelMp2SettingsInput is an input type that accepts ChannelMp2SettingsArgs and ChannelMp2SettingsOutput values.
// You can construct a concrete instance of `ChannelMp2SettingsInput` via:
//
//          ChannelMp2SettingsArgs{...}
type ChannelMp2SettingsInput interface {
	pulumi.Input

	ToChannelMp2SettingsOutput() ChannelMp2SettingsOutput
	ToChannelMp2SettingsOutputWithContext(context.Context) ChannelMp2SettingsOutput
}

type ChannelMp2SettingsArgs struct {
	Bitrate    pulumi.Float64PtrInput `pulumi:"bitrate"`
	CodingMode pulumi.StringPtrInput  `pulumi:"codingMode"`
	SampleRate pulumi.Float64PtrInput `pulumi:"sampleRate"`
}

func (ChannelMp2SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMp2Settings)(nil)).Elem()
}

func (i ChannelMp2SettingsArgs) ToChannelMp2SettingsOutput() ChannelMp2SettingsOutput {
	return i.ToChannelMp2SettingsOutputWithContext(context.Background())
}

func (i ChannelMp2SettingsArgs) ToChannelMp2SettingsOutputWithContext(ctx context.Context) ChannelMp2SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMp2SettingsOutput)
}

func (i ChannelMp2SettingsArgs) ToChannelMp2SettingsPtrOutput() ChannelMp2SettingsPtrOutput {
	return i.ToChannelMp2SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMp2SettingsArgs) ToChannelMp2SettingsPtrOutputWithContext(ctx context.Context) ChannelMp2SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMp2SettingsOutput).ToChannelMp2SettingsPtrOutputWithContext(ctx)
}

// ChannelMp2SettingsPtrInput is an input type that accepts ChannelMp2SettingsArgs, ChannelMp2SettingsPtr and ChannelMp2SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMp2SettingsPtrInput` via:
//
//          ChannelMp2SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMp2SettingsPtrInput interface {
	pulumi.Input

	ToChannelMp2SettingsPtrOutput() ChannelMp2SettingsPtrOutput
	ToChannelMp2SettingsPtrOutputWithContext(context.Context) ChannelMp2SettingsPtrOutput
}

type channelMp2SettingsPtrType ChannelMp2SettingsArgs

func ChannelMp2SettingsPtr(v *ChannelMp2SettingsArgs) ChannelMp2SettingsPtrInput {
	return (*channelMp2SettingsPtrType)(v)
}

func (*channelMp2SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMp2Settings)(nil)).Elem()
}

func (i *channelMp2SettingsPtrType) ToChannelMp2SettingsPtrOutput() ChannelMp2SettingsPtrOutput {
	return i.ToChannelMp2SettingsPtrOutputWithContext(context.Background())
}

func (i *channelMp2SettingsPtrType) ToChannelMp2SettingsPtrOutputWithContext(ctx context.Context) ChannelMp2SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMp2SettingsPtrOutput)
}

type ChannelMp2SettingsOutput struct{ *pulumi.OutputState }

func (ChannelMp2SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMp2Settings)(nil)).Elem()
}

func (o ChannelMp2SettingsOutput) ToChannelMp2SettingsOutput() ChannelMp2SettingsOutput {
	return o
}

func (o ChannelMp2SettingsOutput) ToChannelMp2SettingsOutputWithContext(ctx context.Context) ChannelMp2SettingsOutput {
	return o
}

func (o ChannelMp2SettingsOutput) ToChannelMp2SettingsPtrOutput() ChannelMp2SettingsPtrOutput {
	return o.ToChannelMp2SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMp2SettingsOutput) ToChannelMp2SettingsPtrOutputWithContext(ctx context.Context) ChannelMp2SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMp2Settings) *ChannelMp2Settings {
		return &v
	}).(ChannelMp2SettingsPtrOutput)
}

func (o ChannelMp2SettingsOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelMp2Settings) *float64 { return v.Bitrate }).(pulumi.Float64PtrOutput)
}

func (o ChannelMp2SettingsOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMp2Settings) *string { return v.CodingMode }).(pulumi.StringPtrOutput)
}

func (o ChannelMp2SettingsOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelMp2Settings) *float64 { return v.SampleRate }).(pulumi.Float64PtrOutput)
}

type ChannelMp2SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMp2SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMp2Settings)(nil)).Elem()
}

func (o ChannelMp2SettingsPtrOutput) ToChannelMp2SettingsPtrOutput() ChannelMp2SettingsPtrOutput {
	return o
}

func (o ChannelMp2SettingsPtrOutput) ToChannelMp2SettingsPtrOutputWithContext(ctx context.Context) ChannelMp2SettingsPtrOutput {
	return o
}

func (o ChannelMp2SettingsPtrOutput) Elem() ChannelMp2SettingsOutput {
	return o.ApplyT(func(v *ChannelMp2Settings) ChannelMp2Settings {
		if v != nil {
			return *v
		}
		var ret ChannelMp2Settings
		return ret
	}).(ChannelMp2SettingsOutput)
}

func (o ChannelMp2SettingsPtrOutput) Bitrate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelMp2Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelMp2SettingsPtrOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMp2Settings) *string {
		if v == nil {
			return nil
		}
		return v.CodingMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMp2SettingsPtrOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelMp2Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.SampleRate
	}).(pulumi.Float64PtrOutput)
}

type ChannelMpeg2FilterSettings struct {
	TemporalFilterSettings *ChannelTemporalFilterSettings `pulumi:"temporalFilterSettings"`
}

// ChannelMpeg2FilterSettingsInput is an input type that accepts ChannelMpeg2FilterSettingsArgs and ChannelMpeg2FilterSettingsOutput values.
// You can construct a concrete instance of `ChannelMpeg2FilterSettingsInput` via:
//
//          ChannelMpeg2FilterSettingsArgs{...}
type ChannelMpeg2FilterSettingsInput interface {
	pulumi.Input

	ToChannelMpeg2FilterSettingsOutput() ChannelMpeg2FilterSettingsOutput
	ToChannelMpeg2FilterSettingsOutputWithContext(context.Context) ChannelMpeg2FilterSettingsOutput
}

type ChannelMpeg2FilterSettingsArgs struct {
	TemporalFilterSettings ChannelTemporalFilterSettingsPtrInput `pulumi:"temporalFilterSettings"`
}

func (ChannelMpeg2FilterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMpeg2FilterSettings)(nil)).Elem()
}

func (i ChannelMpeg2FilterSettingsArgs) ToChannelMpeg2FilterSettingsOutput() ChannelMpeg2FilterSettingsOutput {
	return i.ToChannelMpeg2FilterSettingsOutputWithContext(context.Background())
}

func (i ChannelMpeg2FilterSettingsArgs) ToChannelMpeg2FilterSettingsOutputWithContext(ctx context.Context) ChannelMpeg2FilterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMpeg2FilterSettingsOutput)
}

func (i ChannelMpeg2FilterSettingsArgs) ToChannelMpeg2FilterSettingsPtrOutput() ChannelMpeg2FilterSettingsPtrOutput {
	return i.ToChannelMpeg2FilterSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMpeg2FilterSettingsArgs) ToChannelMpeg2FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2FilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMpeg2FilterSettingsOutput).ToChannelMpeg2FilterSettingsPtrOutputWithContext(ctx)
}

// ChannelMpeg2FilterSettingsPtrInput is an input type that accepts ChannelMpeg2FilterSettingsArgs, ChannelMpeg2FilterSettingsPtr and ChannelMpeg2FilterSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMpeg2FilterSettingsPtrInput` via:
//
//          ChannelMpeg2FilterSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMpeg2FilterSettingsPtrInput interface {
	pulumi.Input

	ToChannelMpeg2FilterSettingsPtrOutput() ChannelMpeg2FilterSettingsPtrOutput
	ToChannelMpeg2FilterSettingsPtrOutputWithContext(context.Context) ChannelMpeg2FilterSettingsPtrOutput
}

type channelMpeg2FilterSettingsPtrType ChannelMpeg2FilterSettingsArgs

func ChannelMpeg2FilterSettingsPtr(v *ChannelMpeg2FilterSettingsArgs) ChannelMpeg2FilterSettingsPtrInput {
	return (*channelMpeg2FilterSettingsPtrType)(v)
}

func (*channelMpeg2FilterSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMpeg2FilterSettings)(nil)).Elem()
}

func (i *channelMpeg2FilterSettingsPtrType) ToChannelMpeg2FilterSettingsPtrOutput() ChannelMpeg2FilterSettingsPtrOutput {
	return i.ToChannelMpeg2FilterSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMpeg2FilterSettingsPtrType) ToChannelMpeg2FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2FilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMpeg2FilterSettingsPtrOutput)
}

type ChannelMpeg2FilterSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMpeg2FilterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMpeg2FilterSettings)(nil)).Elem()
}

func (o ChannelMpeg2FilterSettingsOutput) ToChannelMpeg2FilterSettingsOutput() ChannelMpeg2FilterSettingsOutput {
	return o
}

func (o ChannelMpeg2FilterSettingsOutput) ToChannelMpeg2FilterSettingsOutputWithContext(ctx context.Context) ChannelMpeg2FilterSettingsOutput {
	return o
}

func (o ChannelMpeg2FilterSettingsOutput) ToChannelMpeg2FilterSettingsPtrOutput() ChannelMpeg2FilterSettingsPtrOutput {
	return o.ToChannelMpeg2FilterSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMpeg2FilterSettingsOutput) ToChannelMpeg2FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2FilterSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMpeg2FilterSettings) *ChannelMpeg2FilterSettings {
		return &v
	}).(ChannelMpeg2FilterSettingsPtrOutput)
}

func (o ChannelMpeg2FilterSettingsOutput) TemporalFilterSettings() ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2FilterSettings) *ChannelTemporalFilterSettings { return v.TemporalFilterSettings }).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelMpeg2FilterSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMpeg2FilterSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMpeg2FilterSettings)(nil)).Elem()
}

func (o ChannelMpeg2FilterSettingsPtrOutput) ToChannelMpeg2FilterSettingsPtrOutput() ChannelMpeg2FilterSettingsPtrOutput {
	return o
}

func (o ChannelMpeg2FilterSettingsPtrOutput) ToChannelMpeg2FilterSettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2FilterSettingsPtrOutput {
	return o
}

func (o ChannelMpeg2FilterSettingsPtrOutput) Elem() ChannelMpeg2FilterSettingsOutput {
	return o.ApplyT(func(v *ChannelMpeg2FilterSettings) ChannelMpeg2FilterSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMpeg2FilterSettings
		return ret
	}).(ChannelMpeg2FilterSettingsOutput)
}

func (o ChannelMpeg2FilterSettingsPtrOutput) TemporalFilterSettings() ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2FilterSettings) *ChannelTemporalFilterSettings {
		if v == nil {
			return nil
		}
		return v.TemporalFilterSettings
	}).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelMpeg2Settings struct {
	AdaptiveQuantization *string                     `pulumi:"adaptiveQuantization"`
	AfdSignaling         *string                     `pulumi:"afdSignaling"`
	ColorMetadata        *string                     `pulumi:"colorMetadata"`
	ColorSpace           *string                     `pulumi:"colorSpace"`
	DisplayAspectRatio   *string                     `pulumi:"displayAspectRatio"`
	FilterSettings       *ChannelMpeg2FilterSettings `pulumi:"filterSettings"`
	FixedAfd             *string                     `pulumi:"fixedAfd"`
	FramerateDenominator *int                        `pulumi:"framerateDenominator"`
	FramerateNumerator   *int                        `pulumi:"framerateNumerator"`
	GopClosedCadence     *int                        `pulumi:"gopClosedCadence"`
	GopNumBFrames        *int                        `pulumi:"gopNumBFrames"`
	GopSize              *float64                    `pulumi:"gopSize"`
	GopSizeUnits         *string                     `pulumi:"gopSizeUnits"`
	ScanType             *string                     `pulumi:"scanType"`
	SubgopLength         *string                     `pulumi:"subgopLength"`
	TimecodeInsertion    *string                     `pulumi:"timecodeInsertion"`
}

// ChannelMpeg2SettingsInput is an input type that accepts ChannelMpeg2SettingsArgs and ChannelMpeg2SettingsOutput values.
// You can construct a concrete instance of `ChannelMpeg2SettingsInput` via:
//
//          ChannelMpeg2SettingsArgs{...}
type ChannelMpeg2SettingsInput interface {
	pulumi.Input

	ToChannelMpeg2SettingsOutput() ChannelMpeg2SettingsOutput
	ToChannelMpeg2SettingsOutputWithContext(context.Context) ChannelMpeg2SettingsOutput
}

type ChannelMpeg2SettingsArgs struct {
	AdaptiveQuantization pulumi.StringPtrInput              `pulumi:"adaptiveQuantization"`
	AfdSignaling         pulumi.StringPtrInput              `pulumi:"afdSignaling"`
	ColorMetadata        pulumi.StringPtrInput              `pulumi:"colorMetadata"`
	ColorSpace           pulumi.StringPtrInput              `pulumi:"colorSpace"`
	DisplayAspectRatio   pulumi.StringPtrInput              `pulumi:"displayAspectRatio"`
	FilterSettings       ChannelMpeg2FilterSettingsPtrInput `pulumi:"filterSettings"`
	FixedAfd             pulumi.StringPtrInput              `pulumi:"fixedAfd"`
	FramerateDenominator pulumi.IntPtrInput                 `pulumi:"framerateDenominator"`
	FramerateNumerator   pulumi.IntPtrInput                 `pulumi:"framerateNumerator"`
	GopClosedCadence     pulumi.IntPtrInput                 `pulumi:"gopClosedCadence"`
	GopNumBFrames        pulumi.IntPtrInput                 `pulumi:"gopNumBFrames"`
	GopSize              pulumi.Float64PtrInput             `pulumi:"gopSize"`
	GopSizeUnits         pulumi.StringPtrInput              `pulumi:"gopSizeUnits"`
	ScanType             pulumi.StringPtrInput              `pulumi:"scanType"`
	SubgopLength         pulumi.StringPtrInput              `pulumi:"subgopLength"`
	TimecodeInsertion    pulumi.StringPtrInput              `pulumi:"timecodeInsertion"`
}

func (ChannelMpeg2SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMpeg2Settings)(nil)).Elem()
}

func (i ChannelMpeg2SettingsArgs) ToChannelMpeg2SettingsOutput() ChannelMpeg2SettingsOutput {
	return i.ToChannelMpeg2SettingsOutputWithContext(context.Background())
}

func (i ChannelMpeg2SettingsArgs) ToChannelMpeg2SettingsOutputWithContext(ctx context.Context) ChannelMpeg2SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMpeg2SettingsOutput)
}

func (i ChannelMpeg2SettingsArgs) ToChannelMpeg2SettingsPtrOutput() ChannelMpeg2SettingsPtrOutput {
	return i.ToChannelMpeg2SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMpeg2SettingsArgs) ToChannelMpeg2SettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMpeg2SettingsOutput).ToChannelMpeg2SettingsPtrOutputWithContext(ctx)
}

// ChannelMpeg2SettingsPtrInput is an input type that accepts ChannelMpeg2SettingsArgs, ChannelMpeg2SettingsPtr and ChannelMpeg2SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMpeg2SettingsPtrInput` via:
//
//          ChannelMpeg2SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMpeg2SettingsPtrInput interface {
	pulumi.Input

	ToChannelMpeg2SettingsPtrOutput() ChannelMpeg2SettingsPtrOutput
	ToChannelMpeg2SettingsPtrOutputWithContext(context.Context) ChannelMpeg2SettingsPtrOutput
}

type channelMpeg2SettingsPtrType ChannelMpeg2SettingsArgs

func ChannelMpeg2SettingsPtr(v *ChannelMpeg2SettingsArgs) ChannelMpeg2SettingsPtrInput {
	return (*channelMpeg2SettingsPtrType)(v)
}

func (*channelMpeg2SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMpeg2Settings)(nil)).Elem()
}

func (i *channelMpeg2SettingsPtrType) ToChannelMpeg2SettingsPtrOutput() ChannelMpeg2SettingsPtrOutput {
	return i.ToChannelMpeg2SettingsPtrOutputWithContext(context.Background())
}

func (i *channelMpeg2SettingsPtrType) ToChannelMpeg2SettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMpeg2SettingsPtrOutput)
}

type ChannelMpeg2SettingsOutput struct{ *pulumi.OutputState }

func (ChannelMpeg2SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMpeg2Settings)(nil)).Elem()
}

func (o ChannelMpeg2SettingsOutput) ToChannelMpeg2SettingsOutput() ChannelMpeg2SettingsOutput {
	return o
}

func (o ChannelMpeg2SettingsOutput) ToChannelMpeg2SettingsOutputWithContext(ctx context.Context) ChannelMpeg2SettingsOutput {
	return o
}

func (o ChannelMpeg2SettingsOutput) ToChannelMpeg2SettingsPtrOutput() ChannelMpeg2SettingsPtrOutput {
	return o.ToChannelMpeg2SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMpeg2SettingsOutput) ToChannelMpeg2SettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMpeg2Settings) *ChannelMpeg2Settings {
		return &v
	}).(ChannelMpeg2SettingsPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) AdaptiveQuantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.AdaptiveQuantization }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) AfdSignaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.AfdSignaling }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) ColorMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.ColorMetadata }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) ColorSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.ColorSpace }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) DisplayAspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.DisplayAspectRatio }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) FilterSettings() ChannelMpeg2FilterSettingsPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *ChannelMpeg2FilterSettings { return v.FilterSettings }).(ChannelMpeg2FilterSettingsPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) FixedAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.FixedAfd }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) FramerateDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *int { return v.FramerateDenominator }).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) FramerateNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *int { return v.FramerateNumerator }).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) GopClosedCadence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *int { return v.GopClosedCadence }).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) GopNumBFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *int { return v.GopNumBFrames }).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) GopSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *float64 { return v.GopSize }).(pulumi.Float64PtrOutput)
}

func (o ChannelMpeg2SettingsOutput) GopSizeUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.GopSizeUnits }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) ScanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.ScanType }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) SubgopLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.SubgopLength }).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsOutput) TimecodeInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMpeg2Settings) *string { return v.TimecodeInsertion }).(pulumi.StringPtrOutput)
}

type ChannelMpeg2SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMpeg2SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMpeg2Settings)(nil)).Elem()
}

func (o ChannelMpeg2SettingsPtrOutput) ToChannelMpeg2SettingsPtrOutput() ChannelMpeg2SettingsPtrOutput {
	return o
}

func (o ChannelMpeg2SettingsPtrOutput) ToChannelMpeg2SettingsPtrOutputWithContext(ctx context.Context) ChannelMpeg2SettingsPtrOutput {
	return o
}

func (o ChannelMpeg2SettingsPtrOutput) Elem() ChannelMpeg2SettingsOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) ChannelMpeg2Settings {
		if v != nil {
			return *v
		}
		var ret ChannelMpeg2Settings
		return ret
	}).(ChannelMpeg2SettingsOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) AdaptiveQuantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.AdaptiveQuantization
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) AfdSignaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.AfdSignaling
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) ColorMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.ColorMetadata
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) ColorSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.ColorSpace
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) DisplayAspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.DisplayAspectRatio
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) FilterSettings() ChannelMpeg2FilterSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *ChannelMpeg2FilterSettings {
		if v == nil {
			return nil
		}
		return v.FilterSettings
	}).(ChannelMpeg2FilterSettingsPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) FixedAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.FixedAfd
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) FramerateDenominator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *int {
		if v == nil {
			return nil
		}
		return v.FramerateDenominator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) FramerateNumerator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *int {
		if v == nil {
			return nil
		}
		return v.FramerateNumerator
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) GopClosedCadence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *int {
		if v == nil {
			return nil
		}
		return v.GopClosedCadence
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) GopNumBFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *int {
		if v == nil {
			return nil
		}
		return v.GopNumBFrames
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) GopSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *float64 {
		if v == nil {
			return nil
		}
		return v.GopSize
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) GopSizeUnits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.GopSizeUnits
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) ScanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.ScanType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) SubgopLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.SubgopLength
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMpeg2SettingsPtrOutput) TimecodeInsertion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMpeg2Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimecodeInsertion
	}).(pulumi.StringPtrOutput)
}

type ChannelMsSmoothGroupSettings struct {
	AcquisitionPointId       *string                   `pulumi:"acquisitionPointId"`
	AudioOnlyTimecodeControl *string                   `pulumi:"audioOnlyTimecodeControl"`
	CertificateMode          *string                   `pulumi:"certificateMode"`
	ConnectionRetryInterval  *int                      `pulumi:"connectionRetryInterval"`
	Destination              *ChannelOutputLocationRef `pulumi:"destination"`
	EventId                  *string                   `pulumi:"eventId"`
	EventIdMode              *string                   `pulumi:"eventIdMode"`
	EventStopBehavior        *string                   `pulumi:"eventStopBehavior"`
	FilecacheDuration        *int                      `pulumi:"filecacheDuration"`
	FragmentLength           *int                      `pulumi:"fragmentLength"`
	InputLossAction          *string                   `pulumi:"inputLossAction"`
	NumRetries               *int                      `pulumi:"numRetries"`
	RestartDelay             *int                      `pulumi:"restartDelay"`
	SegmentationMode         *string                   `pulumi:"segmentationMode"`
	SendDelayMs              *int                      `pulumi:"sendDelayMs"`
	SparseTrackType          *string                   `pulumi:"sparseTrackType"`
	StreamManifestBehavior   *string                   `pulumi:"streamManifestBehavior"`
	TimestampOffset          *string                   `pulumi:"timestampOffset"`
	TimestampOffsetMode      *string                   `pulumi:"timestampOffsetMode"`
}

// ChannelMsSmoothGroupSettingsInput is an input type that accepts ChannelMsSmoothGroupSettingsArgs and ChannelMsSmoothGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelMsSmoothGroupSettingsInput` via:
//
//          ChannelMsSmoothGroupSettingsArgs{...}
type ChannelMsSmoothGroupSettingsInput interface {
	pulumi.Input

	ToChannelMsSmoothGroupSettingsOutput() ChannelMsSmoothGroupSettingsOutput
	ToChannelMsSmoothGroupSettingsOutputWithContext(context.Context) ChannelMsSmoothGroupSettingsOutput
}

type ChannelMsSmoothGroupSettingsArgs struct {
	AcquisitionPointId       pulumi.StringPtrInput            `pulumi:"acquisitionPointId"`
	AudioOnlyTimecodeControl pulumi.StringPtrInput            `pulumi:"audioOnlyTimecodeControl"`
	CertificateMode          pulumi.StringPtrInput            `pulumi:"certificateMode"`
	ConnectionRetryInterval  pulumi.IntPtrInput               `pulumi:"connectionRetryInterval"`
	Destination              ChannelOutputLocationRefPtrInput `pulumi:"destination"`
	EventId                  pulumi.StringPtrInput            `pulumi:"eventId"`
	EventIdMode              pulumi.StringPtrInput            `pulumi:"eventIdMode"`
	EventStopBehavior        pulumi.StringPtrInput            `pulumi:"eventStopBehavior"`
	FilecacheDuration        pulumi.IntPtrInput               `pulumi:"filecacheDuration"`
	FragmentLength           pulumi.IntPtrInput               `pulumi:"fragmentLength"`
	InputLossAction          pulumi.StringPtrInput            `pulumi:"inputLossAction"`
	NumRetries               pulumi.IntPtrInput               `pulumi:"numRetries"`
	RestartDelay             pulumi.IntPtrInput               `pulumi:"restartDelay"`
	SegmentationMode         pulumi.StringPtrInput            `pulumi:"segmentationMode"`
	SendDelayMs              pulumi.IntPtrInput               `pulumi:"sendDelayMs"`
	SparseTrackType          pulumi.StringPtrInput            `pulumi:"sparseTrackType"`
	StreamManifestBehavior   pulumi.StringPtrInput            `pulumi:"streamManifestBehavior"`
	TimestampOffset          pulumi.StringPtrInput            `pulumi:"timestampOffset"`
	TimestampOffsetMode      pulumi.StringPtrInput            `pulumi:"timestampOffsetMode"`
}

func (ChannelMsSmoothGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMsSmoothGroupSettings)(nil)).Elem()
}

func (i ChannelMsSmoothGroupSettingsArgs) ToChannelMsSmoothGroupSettingsOutput() ChannelMsSmoothGroupSettingsOutput {
	return i.ToChannelMsSmoothGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelMsSmoothGroupSettingsArgs) ToChannelMsSmoothGroupSettingsOutputWithContext(ctx context.Context) ChannelMsSmoothGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMsSmoothGroupSettingsOutput)
}

func (i ChannelMsSmoothGroupSettingsArgs) ToChannelMsSmoothGroupSettingsPtrOutput() ChannelMsSmoothGroupSettingsPtrOutput {
	return i.ToChannelMsSmoothGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMsSmoothGroupSettingsArgs) ToChannelMsSmoothGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMsSmoothGroupSettingsOutput).ToChannelMsSmoothGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelMsSmoothGroupSettingsPtrInput is an input type that accepts ChannelMsSmoothGroupSettingsArgs, ChannelMsSmoothGroupSettingsPtr and ChannelMsSmoothGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMsSmoothGroupSettingsPtrInput` via:
//
//          ChannelMsSmoothGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMsSmoothGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelMsSmoothGroupSettingsPtrOutput() ChannelMsSmoothGroupSettingsPtrOutput
	ToChannelMsSmoothGroupSettingsPtrOutputWithContext(context.Context) ChannelMsSmoothGroupSettingsPtrOutput
}

type channelMsSmoothGroupSettingsPtrType ChannelMsSmoothGroupSettingsArgs

func ChannelMsSmoothGroupSettingsPtr(v *ChannelMsSmoothGroupSettingsArgs) ChannelMsSmoothGroupSettingsPtrInput {
	return (*channelMsSmoothGroupSettingsPtrType)(v)
}

func (*channelMsSmoothGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMsSmoothGroupSettings)(nil)).Elem()
}

func (i *channelMsSmoothGroupSettingsPtrType) ToChannelMsSmoothGroupSettingsPtrOutput() ChannelMsSmoothGroupSettingsPtrOutput {
	return i.ToChannelMsSmoothGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMsSmoothGroupSettingsPtrType) ToChannelMsSmoothGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMsSmoothGroupSettingsPtrOutput)
}

type ChannelMsSmoothGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMsSmoothGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMsSmoothGroupSettings)(nil)).Elem()
}

func (o ChannelMsSmoothGroupSettingsOutput) ToChannelMsSmoothGroupSettingsOutput() ChannelMsSmoothGroupSettingsOutput {
	return o
}

func (o ChannelMsSmoothGroupSettingsOutput) ToChannelMsSmoothGroupSettingsOutputWithContext(ctx context.Context) ChannelMsSmoothGroupSettingsOutput {
	return o
}

func (o ChannelMsSmoothGroupSettingsOutput) ToChannelMsSmoothGroupSettingsPtrOutput() ChannelMsSmoothGroupSettingsPtrOutput {
	return o.ToChannelMsSmoothGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMsSmoothGroupSettingsOutput) ToChannelMsSmoothGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMsSmoothGroupSettings) *ChannelMsSmoothGroupSettings {
		return &v
	}).(ChannelMsSmoothGroupSettingsPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) AcquisitionPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.AcquisitionPointId }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) AudioOnlyTimecodeControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.AudioOnlyTimecodeControl }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) CertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.CertificateMode }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *int { return v.ConnectionRetryInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) EventId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.EventId }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) EventIdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.EventIdMode }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) EventStopBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.EventStopBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *int { return v.FilecacheDuration }).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) FragmentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *int { return v.FragmentLength }).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.InputLossAction }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *int { return v.RestartDelay }).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) SegmentationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.SegmentationMode }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) SendDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *int { return v.SendDelayMs }).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) SparseTrackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.SparseTrackType }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) StreamManifestBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.StreamManifestBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) TimestampOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.TimestampOffset }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsOutput) TimestampOffsetMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothGroupSettings) *string { return v.TimestampOffsetMode }).(pulumi.StringPtrOutput)
}

type ChannelMsSmoothGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMsSmoothGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMsSmoothGroupSettings)(nil)).Elem()
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) ToChannelMsSmoothGroupSettingsPtrOutput() ChannelMsSmoothGroupSettingsPtrOutput {
	return o
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) ToChannelMsSmoothGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothGroupSettingsPtrOutput {
	return o
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) Elem() ChannelMsSmoothGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) ChannelMsSmoothGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMsSmoothGroupSettings
		return ret
	}).(ChannelMsSmoothGroupSettingsOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) AcquisitionPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.AcquisitionPointId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) AudioOnlyTimecodeControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioOnlyTimecodeControl
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) CertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.CertificateMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionRetryInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) EventId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.EventId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) EventIdMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.EventIdMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) EventStopBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.EventStopBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) FilecacheDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.FilecacheDuration
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) FragmentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.FragmentLength
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputLossAction
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.RestartDelay
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) SegmentationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.SegmentationMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) SendDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.SendDelayMs
	}).(pulumi.IntPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) SparseTrackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.SparseTrackType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) StreamManifestBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.StreamManifestBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) TimestampOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimestampOffset
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothGroupSettingsPtrOutput) TimestampOffsetMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimestampOffsetMode
	}).(pulumi.StringPtrOutput)
}

type ChannelMsSmoothOutputSettings struct {
	H265PackagingType *string `pulumi:"h265PackagingType"`
	NameModifier      *string `pulumi:"nameModifier"`
}

// ChannelMsSmoothOutputSettingsInput is an input type that accepts ChannelMsSmoothOutputSettingsArgs and ChannelMsSmoothOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelMsSmoothOutputSettingsInput` via:
//
//          ChannelMsSmoothOutputSettingsArgs{...}
type ChannelMsSmoothOutputSettingsInput interface {
	pulumi.Input

	ToChannelMsSmoothOutputSettingsOutput() ChannelMsSmoothOutputSettingsOutput
	ToChannelMsSmoothOutputSettingsOutputWithContext(context.Context) ChannelMsSmoothOutputSettingsOutput
}

type ChannelMsSmoothOutputSettingsArgs struct {
	H265PackagingType pulumi.StringPtrInput `pulumi:"h265PackagingType"`
	NameModifier      pulumi.StringPtrInput `pulumi:"nameModifier"`
}

func (ChannelMsSmoothOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMsSmoothOutputSettings)(nil)).Elem()
}

func (i ChannelMsSmoothOutputSettingsArgs) ToChannelMsSmoothOutputSettingsOutput() ChannelMsSmoothOutputSettingsOutput {
	return i.ToChannelMsSmoothOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelMsSmoothOutputSettingsArgs) ToChannelMsSmoothOutputSettingsOutputWithContext(ctx context.Context) ChannelMsSmoothOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMsSmoothOutputSettingsOutput)
}

func (i ChannelMsSmoothOutputSettingsArgs) ToChannelMsSmoothOutputSettingsPtrOutput() ChannelMsSmoothOutputSettingsPtrOutput {
	return i.ToChannelMsSmoothOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMsSmoothOutputSettingsArgs) ToChannelMsSmoothOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMsSmoothOutputSettingsOutput).ToChannelMsSmoothOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelMsSmoothOutputSettingsPtrInput is an input type that accepts ChannelMsSmoothOutputSettingsArgs, ChannelMsSmoothOutputSettingsPtr and ChannelMsSmoothOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMsSmoothOutputSettingsPtrInput` via:
//
//          ChannelMsSmoothOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMsSmoothOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelMsSmoothOutputSettingsPtrOutput() ChannelMsSmoothOutputSettingsPtrOutput
	ToChannelMsSmoothOutputSettingsPtrOutputWithContext(context.Context) ChannelMsSmoothOutputSettingsPtrOutput
}

type channelMsSmoothOutputSettingsPtrType ChannelMsSmoothOutputSettingsArgs

func ChannelMsSmoothOutputSettingsPtr(v *ChannelMsSmoothOutputSettingsArgs) ChannelMsSmoothOutputSettingsPtrInput {
	return (*channelMsSmoothOutputSettingsPtrType)(v)
}

func (*channelMsSmoothOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMsSmoothOutputSettings)(nil)).Elem()
}

func (i *channelMsSmoothOutputSettingsPtrType) ToChannelMsSmoothOutputSettingsPtrOutput() ChannelMsSmoothOutputSettingsPtrOutput {
	return i.ToChannelMsSmoothOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMsSmoothOutputSettingsPtrType) ToChannelMsSmoothOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMsSmoothOutputSettingsPtrOutput)
}

type ChannelMsSmoothOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMsSmoothOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMsSmoothOutputSettings)(nil)).Elem()
}

func (o ChannelMsSmoothOutputSettingsOutput) ToChannelMsSmoothOutputSettingsOutput() ChannelMsSmoothOutputSettingsOutput {
	return o
}

func (o ChannelMsSmoothOutputSettingsOutput) ToChannelMsSmoothOutputSettingsOutputWithContext(ctx context.Context) ChannelMsSmoothOutputSettingsOutput {
	return o
}

func (o ChannelMsSmoothOutputSettingsOutput) ToChannelMsSmoothOutputSettingsPtrOutput() ChannelMsSmoothOutputSettingsPtrOutput {
	return o.ToChannelMsSmoothOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMsSmoothOutputSettingsOutput) ToChannelMsSmoothOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMsSmoothOutputSettings) *ChannelMsSmoothOutputSettings {
		return &v
	}).(ChannelMsSmoothOutputSettingsPtrOutput)
}

func (o ChannelMsSmoothOutputSettingsOutput) H265PackagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothOutputSettings) *string { return v.H265PackagingType }).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothOutputSettingsOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMsSmoothOutputSettings) *string { return v.NameModifier }).(pulumi.StringPtrOutput)
}

type ChannelMsSmoothOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMsSmoothOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMsSmoothOutputSettings)(nil)).Elem()
}

func (o ChannelMsSmoothOutputSettingsPtrOutput) ToChannelMsSmoothOutputSettingsPtrOutput() ChannelMsSmoothOutputSettingsPtrOutput {
	return o
}

func (o ChannelMsSmoothOutputSettingsPtrOutput) ToChannelMsSmoothOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMsSmoothOutputSettingsPtrOutput {
	return o
}

func (o ChannelMsSmoothOutputSettingsPtrOutput) Elem() ChannelMsSmoothOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelMsSmoothOutputSettings) ChannelMsSmoothOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMsSmoothOutputSettings
		return ret
	}).(ChannelMsSmoothOutputSettingsOutput)
}

func (o ChannelMsSmoothOutputSettingsPtrOutput) H265PackagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.H265PackagingType
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMsSmoothOutputSettingsPtrOutput) NameModifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMsSmoothOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.NameModifier
	}).(pulumi.StringPtrOutput)
}

type ChannelMultiplexGroupSettings struct {
}

// ChannelMultiplexGroupSettingsInput is an input type that accepts ChannelMultiplexGroupSettingsArgs and ChannelMultiplexGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelMultiplexGroupSettingsInput` via:
//
//          ChannelMultiplexGroupSettingsArgs{...}
type ChannelMultiplexGroupSettingsInput interface {
	pulumi.Input

	ToChannelMultiplexGroupSettingsOutput() ChannelMultiplexGroupSettingsOutput
	ToChannelMultiplexGroupSettingsOutputWithContext(context.Context) ChannelMultiplexGroupSettingsOutput
}

type ChannelMultiplexGroupSettingsArgs struct {
}

func (ChannelMultiplexGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultiplexGroupSettings)(nil)).Elem()
}

func (i ChannelMultiplexGroupSettingsArgs) ToChannelMultiplexGroupSettingsOutput() ChannelMultiplexGroupSettingsOutput {
	return i.ToChannelMultiplexGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelMultiplexGroupSettingsArgs) ToChannelMultiplexGroupSettingsOutputWithContext(ctx context.Context) ChannelMultiplexGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexGroupSettingsOutput)
}

func (i ChannelMultiplexGroupSettingsArgs) ToChannelMultiplexGroupSettingsPtrOutput() ChannelMultiplexGroupSettingsPtrOutput {
	return i.ToChannelMultiplexGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMultiplexGroupSettingsArgs) ToChannelMultiplexGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexGroupSettingsOutput).ToChannelMultiplexGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelMultiplexGroupSettingsPtrInput is an input type that accepts ChannelMultiplexGroupSettingsArgs, ChannelMultiplexGroupSettingsPtr and ChannelMultiplexGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMultiplexGroupSettingsPtrInput` via:
//
//          ChannelMultiplexGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMultiplexGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelMultiplexGroupSettingsPtrOutput() ChannelMultiplexGroupSettingsPtrOutput
	ToChannelMultiplexGroupSettingsPtrOutputWithContext(context.Context) ChannelMultiplexGroupSettingsPtrOutput
}

type channelMultiplexGroupSettingsPtrType ChannelMultiplexGroupSettingsArgs

func ChannelMultiplexGroupSettingsPtr(v *ChannelMultiplexGroupSettingsArgs) ChannelMultiplexGroupSettingsPtrInput {
	return (*channelMultiplexGroupSettingsPtrType)(v)
}

func (*channelMultiplexGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultiplexGroupSettings)(nil)).Elem()
}

func (i *channelMultiplexGroupSettingsPtrType) ToChannelMultiplexGroupSettingsPtrOutput() ChannelMultiplexGroupSettingsPtrOutput {
	return i.ToChannelMultiplexGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMultiplexGroupSettingsPtrType) ToChannelMultiplexGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexGroupSettingsPtrOutput)
}

type ChannelMultiplexGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMultiplexGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultiplexGroupSettings)(nil)).Elem()
}

func (o ChannelMultiplexGroupSettingsOutput) ToChannelMultiplexGroupSettingsOutput() ChannelMultiplexGroupSettingsOutput {
	return o
}

func (o ChannelMultiplexGroupSettingsOutput) ToChannelMultiplexGroupSettingsOutputWithContext(ctx context.Context) ChannelMultiplexGroupSettingsOutput {
	return o
}

func (o ChannelMultiplexGroupSettingsOutput) ToChannelMultiplexGroupSettingsPtrOutput() ChannelMultiplexGroupSettingsPtrOutput {
	return o.ToChannelMultiplexGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMultiplexGroupSettingsOutput) ToChannelMultiplexGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMultiplexGroupSettings) *ChannelMultiplexGroupSettings {
		return &v
	}).(ChannelMultiplexGroupSettingsPtrOutput)
}

type ChannelMultiplexGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMultiplexGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultiplexGroupSettings)(nil)).Elem()
}

func (o ChannelMultiplexGroupSettingsPtrOutput) ToChannelMultiplexGroupSettingsPtrOutput() ChannelMultiplexGroupSettingsPtrOutput {
	return o
}

func (o ChannelMultiplexGroupSettingsPtrOutput) ToChannelMultiplexGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexGroupSettingsPtrOutput {
	return o
}

func (o ChannelMultiplexGroupSettingsPtrOutput) Elem() ChannelMultiplexGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelMultiplexGroupSettings) ChannelMultiplexGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMultiplexGroupSettings
		return ret
	}).(ChannelMultiplexGroupSettingsOutput)
}

type ChannelMultiplexOutputSettings struct {
	Destination *ChannelOutputLocationRef `pulumi:"destination"`
}

// ChannelMultiplexOutputSettingsInput is an input type that accepts ChannelMultiplexOutputSettingsArgs and ChannelMultiplexOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelMultiplexOutputSettingsInput` via:
//
//          ChannelMultiplexOutputSettingsArgs{...}
type ChannelMultiplexOutputSettingsInput interface {
	pulumi.Input

	ToChannelMultiplexOutputSettingsOutput() ChannelMultiplexOutputSettingsOutput
	ToChannelMultiplexOutputSettingsOutputWithContext(context.Context) ChannelMultiplexOutputSettingsOutput
}

type ChannelMultiplexOutputSettingsArgs struct {
	Destination ChannelOutputLocationRefPtrInput `pulumi:"destination"`
}

func (ChannelMultiplexOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultiplexOutputSettings)(nil)).Elem()
}

func (i ChannelMultiplexOutputSettingsArgs) ToChannelMultiplexOutputSettingsOutput() ChannelMultiplexOutputSettingsOutput {
	return i.ToChannelMultiplexOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelMultiplexOutputSettingsArgs) ToChannelMultiplexOutputSettingsOutputWithContext(ctx context.Context) ChannelMultiplexOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexOutputSettingsOutput)
}

func (i ChannelMultiplexOutputSettingsArgs) ToChannelMultiplexOutputSettingsPtrOutput() ChannelMultiplexOutputSettingsPtrOutput {
	return i.ToChannelMultiplexOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMultiplexOutputSettingsArgs) ToChannelMultiplexOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexOutputSettingsOutput).ToChannelMultiplexOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelMultiplexOutputSettingsPtrInput is an input type that accepts ChannelMultiplexOutputSettingsArgs, ChannelMultiplexOutputSettingsPtr and ChannelMultiplexOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMultiplexOutputSettingsPtrInput` via:
//
//          ChannelMultiplexOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMultiplexOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelMultiplexOutputSettingsPtrOutput() ChannelMultiplexOutputSettingsPtrOutput
	ToChannelMultiplexOutputSettingsPtrOutputWithContext(context.Context) ChannelMultiplexOutputSettingsPtrOutput
}

type channelMultiplexOutputSettingsPtrType ChannelMultiplexOutputSettingsArgs

func ChannelMultiplexOutputSettingsPtr(v *ChannelMultiplexOutputSettingsArgs) ChannelMultiplexOutputSettingsPtrInput {
	return (*channelMultiplexOutputSettingsPtrType)(v)
}

func (*channelMultiplexOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultiplexOutputSettings)(nil)).Elem()
}

func (i *channelMultiplexOutputSettingsPtrType) ToChannelMultiplexOutputSettingsPtrOutput() ChannelMultiplexOutputSettingsPtrOutput {
	return i.ToChannelMultiplexOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMultiplexOutputSettingsPtrType) ToChannelMultiplexOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexOutputSettingsPtrOutput)
}

type ChannelMultiplexOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMultiplexOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultiplexOutputSettings)(nil)).Elem()
}

func (o ChannelMultiplexOutputSettingsOutput) ToChannelMultiplexOutputSettingsOutput() ChannelMultiplexOutputSettingsOutput {
	return o
}

func (o ChannelMultiplexOutputSettingsOutput) ToChannelMultiplexOutputSettingsOutputWithContext(ctx context.Context) ChannelMultiplexOutputSettingsOutput {
	return o
}

func (o ChannelMultiplexOutputSettingsOutput) ToChannelMultiplexOutputSettingsPtrOutput() ChannelMultiplexOutputSettingsPtrOutput {
	return o.ToChannelMultiplexOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMultiplexOutputSettingsOutput) ToChannelMultiplexOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMultiplexOutputSettings) *ChannelMultiplexOutputSettings {
		return &v
	}).(ChannelMultiplexOutputSettingsPtrOutput)
}

func (o ChannelMultiplexOutputSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelMultiplexOutputSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

type ChannelMultiplexOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMultiplexOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultiplexOutputSettings)(nil)).Elem()
}

func (o ChannelMultiplexOutputSettingsPtrOutput) ToChannelMultiplexOutputSettingsPtrOutput() ChannelMultiplexOutputSettingsPtrOutput {
	return o
}

func (o ChannelMultiplexOutputSettingsPtrOutput) ToChannelMultiplexOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexOutputSettingsPtrOutput {
	return o
}

func (o ChannelMultiplexOutputSettingsPtrOutput) Elem() ChannelMultiplexOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelMultiplexOutputSettings) ChannelMultiplexOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMultiplexOutputSettings
		return ret
	}).(ChannelMultiplexOutputSettingsOutput)
}

func (o ChannelMultiplexOutputSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelMultiplexOutputSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

type ChannelMultiplexProgramChannelDestinationSettings struct {
	MultiplexId *string `pulumi:"multiplexId"`
	ProgramName *string `pulumi:"programName"`
}

// ChannelMultiplexProgramChannelDestinationSettingsInput is an input type that accepts ChannelMultiplexProgramChannelDestinationSettingsArgs and ChannelMultiplexProgramChannelDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelMultiplexProgramChannelDestinationSettingsInput` via:
//
//          ChannelMultiplexProgramChannelDestinationSettingsArgs{...}
type ChannelMultiplexProgramChannelDestinationSettingsInput interface {
	pulumi.Input

	ToChannelMultiplexProgramChannelDestinationSettingsOutput() ChannelMultiplexProgramChannelDestinationSettingsOutput
	ToChannelMultiplexProgramChannelDestinationSettingsOutputWithContext(context.Context) ChannelMultiplexProgramChannelDestinationSettingsOutput
}

type ChannelMultiplexProgramChannelDestinationSettingsArgs struct {
	MultiplexId pulumi.StringPtrInput `pulumi:"multiplexId"`
	ProgramName pulumi.StringPtrInput `pulumi:"programName"`
}

func (ChannelMultiplexProgramChannelDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultiplexProgramChannelDestinationSettings)(nil)).Elem()
}

func (i ChannelMultiplexProgramChannelDestinationSettingsArgs) ToChannelMultiplexProgramChannelDestinationSettingsOutput() ChannelMultiplexProgramChannelDestinationSettingsOutput {
	return i.ToChannelMultiplexProgramChannelDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelMultiplexProgramChannelDestinationSettingsArgs) ToChannelMultiplexProgramChannelDestinationSettingsOutputWithContext(ctx context.Context) ChannelMultiplexProgramChannelDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexProgramChannelDestinationSettingsOutput)
}

func (i ChannelMultiplexProgramChannelDestinationSettingsArgs) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutput() ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return i.ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelMultiplexProgramChannelDestinationSettingsArgs) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexProgramChannelDestinationSettingsOutput).ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelMultiplexProgramChannelDestinationSettingsPtrInput is an input type that accepts ChannelMultiplexProgramChannelDestinationSettingsArgs, ChannelMultiplexProgramChannelDestinationSettingsPtr and ChannelMultiplexProgramChannelDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelMultiplexProgramChannelDestinationSettingsPtrInput` via:
//
//          ChannelMultiplexProgramChannelDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelMultiplexProgramChannelDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelMultiplexProgramChannelDestinationSettingsPtrOutput() ChannelMultiplexProgramChannelDestinationSettingsPtrOutput
	ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(context.Context) ChannelMultiplexProgramChannelDestinationSettingsPtrOutput
}

type channelMultiplexProgramChannelDestinationSettingsPtrType ChannelMultiplexProgramChannelDestinationSettingsArgs

func ChannelMultiplexProgramChannelDestinationSettingsPtr(v *ChannelMultiplexProgramChannelDestinationSettingsArgs) ChannelMultiplexProgramChannelDestinationSettingsPtrInput {
	return (*channelMultiplexProgramChannelDestinationSettingsPtrType)(v)
}

func (*channelMultiplexProgramChannelDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultiplexProgramChannelDestinationSettings)(nil)).Elem()
}

func (i *channelMultiplexProgramChannelDestinationSettingsPtrType) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutput() ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return i.ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelMultiplexProgramChannelDestinationSettingsPtrType) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelMultiplexProgramChannelDestinationSettingsPtrOutput)
}

type ChannelMultiplexProgramChannelDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelMultiplexProgramChannelDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelMultiplexProgramChannelDestinationSettings)(nil)).Elem()
}

func (o ChannelMultiplexProgramChannelDestinationSettingsOutput) ToChannelMultiplexProgramChannelDestinationSettingsOutput() ChannelMultiplexProgramChannelDestinationSettingsOutput {
	return o
}

func (o ChannelMultiplexProgramChannelDestinationSettingsOutput) ToChannelMultiplexProgramChannelDestinationSettingsOutputWithContext(ctx context.Context) ChannelMultiplexProgramChannelDestinationSettingsOutput {
	return o
}

func (o ChannelMultiplexProgramChannelDestinationSettingsOutput) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutput() ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return o.ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelMultiplexProgramChannelDestinationSettingsOutput) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelMultiplexProgramChannelDestinationSettings) *ChannelMultiplexProgramChannelDestinationSettings {
		return &v
	}).(ChannelMultiplexProgramChannelDestinationSettingsPtrOutput)
}

func (o ChannelMultiplexProgramChannelDestinationSettingsOutput) MultiplexId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMultiplexProgramChannelDestinationSettings) *string { return v.MultiplexId }).(pulumi.StringPtrOutput)
}

func (o ChannelMultiplexProgramChannelDestinationSettingsOutput) ProgramName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelMultiplexProgramChannelDestinationSettings) *string { return v.ProgramName }).(pulumi.StringPtrOutput)
}

type ChannelMultiplexProgramChannelDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelMultiplexProgramChannelDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelMultiplexProgramChannelDestinationSettings)(nil)).Elem()
}

func (o ChannelMultiplexProgramChannelDestinationSettingsPtrOutput) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutput() ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return o
}

func (o ChannelMultiplexProgramChannelDestinationSettingsPtrOutput) ToChannelMultiplexProgramChannelDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return o
}

func (o ChannelMultiplexProgramChannelDestinationSettingsPtrOutput) Elem() ChannelMultiplexProgramChannelDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelMultiplexProgramChannelDestinationSettings) ChannelMultiplexProgramChannelDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelMultiplexProgramChannelDestinationSettings
		return ret
	}).(ChannelMultiplexProgramChannelDestinationSettingsOutput)
}

func (o ChannelMultiplexProgramChannelDestinationSettingsPtrOutput) MultiplexId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMultiplexProgramChannelDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.MultiplexId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelMultiplexProgramChannelDestinationSettingsPtrOutput) ProgramName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelMultiplexProgramChannelDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProgramName
	}).(pulumi.StringPtrOutput)
}

type ChannelNetworkInputSettings struct {
	HlsInputSettings *ChannelHlsInputSettings `pulumi:"hlsInputSettings"`
	ServerValidation *string                  `pulumi:"serverValidation"`
}

// ChannelNetworkInputSettingsInput is an input type that accepts ChannelNetworkInputSettingsArgs and ChannelNetworkInputSettingsOutput values.
// You can construct a concrete instance of `ChannelNetworkInputSettingsInput` via:
//
//          ChannelNetworkInputSettingsArgs{...}
type ChannelNetworkInputSettingsInput interface {
	pulumi.Input

	ToChannelNetworkInputSettingsOutput() ChannelNetworkInputSettingsOutput
	ToChannelNetworkInputSettingsOutputWithContext(context.Context) ChannelNetworkInputSettingsOutput
}

type ChannelNetworkInputSettingsArgs struct {
	HlsInputSettings ChannelHlsInputSettingsPtrInput `pulumi:"hlsInputSettings"`
	ServerValidation pulumi.StringPtrInput           `pulumi:"serverValidation"`
}

func (ChannelNetworkInputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNetworkInputSettings)(nil)).Elem()
}

func (i ChannelNetworkInputSettingsArgs) ToChannelNetworkInputSettingsOutput() ChannelNetworkInputSettingsOutput {
	return i.ToChannelNetworkInputSettingsOutputWithContext(context.Background())
}

func (i ChannelNetworkInputSettingsArgs) ToChannelNetworkInputSettingsOutputWithContext(ctx context.Context) ChannelNetworkInputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNetworkInputSettingsOutput)
}

func (i ChannelNetworkInputSettingsArgs) ToChannelNetworkInputSettingsPtrOutput() ChannelNetworkInputSettingsPtrOutput {
	return i.ToChannelNetworkInputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelNetworkInputSettingsArgs) ToChannelNetworkInputSettingsPtrOutputWithContext(ctx context.Context) ChannelNetworkInputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNetworkInputSettingsOutput).ToChannelNetworkInputSettingsPtrOutputWithContext(ctx)
}

// ChannelNetworkInputSettingsPtrInput is an input type that accepts ChannelNetworkInputSettingsArgs, ChannelNetworkInputSettingsPtr and ChannelNetworkInputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelNetworkInputSettingsPtrInput` via:
//
//          ChannelNetworkInputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelNetworkInputSettingsPtrInput interface {
	pulumi.Input

	ToChannelNetworkInputSettingsPtrOutput() ChannelNetworkInputSettingsPtrOutput
	ToChannelNetworkInputSettingsPtrOutputWithContext(context.Context) ChannelNetworkInputSettingsPtrOutput
}

type channelNetworkInputSettingsPtrType ChannelNetworkInputSettingsArgs

func ChannelNetworkInputSettingsPtr(v *ChannelNetworkInputSettingsArgs) ChannelNetworkInputSettingsPtrInput {
	return (*channelNetworkInputSettingsPtrType)(v)
}

func (*channelNetworkInputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNetworkInputSettings)(nil)).Elem()
}

func (i *channelNetworkInputSettingsPtrType) ToChannelNetworkInputSettingsPtrOutput() ChannelNetworkInputSettingsPtrOutput {
	return i.ToChannelNetworkInputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelNetworkInputSettingsPtrType) ToChannelNetworkInputSettingsPtrOutputWithContext(ctx context.Context) ChannelNetworkInputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNetworkInputSettingsPtrOutput)
}

type ChannelNetworkInputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelNetworkInputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNetworkInputSettings)(nil)).Elem()
}

func (o ChannelNetworkInputSettingsOutput) ToChannelNetworkInputSettingsOutput() ChannelNetworkInputSettingsOutput {
	return o
}

func (o ChannelNetworkInputSettingsOutput) ToChannelNetworkInputSettingsOutputWithContext(ctx context.Context) ChannelNetworkInputSettingsOutput {
	return o
}

func (o ChannelNetworkInputSettingsOutput) ToChannelNetworkInputSettingsPtrOutput() ChannelNetworkInputSettingsPtrOutput {
	return o.ToChannelNetworkInputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelNetworkInputSettingsOutput) ToChannelNetworkInputSettingsPtrOutputWithContext(ctx context.Context) ChannelNetworkInputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNetworkInputSettings) *ChannelNetworkInputSettings {
		return &v
	}).(ChannelNetworkInputSettingsPtrOutput)
}

func (o ChannelNetworkInputSettingsOutput) HlsInputSettings() ChannelHlsInputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelNetworkInputSettings) *ChannelHlsInputSettings { return v.HlsInputSettings }).(ChannelHlsInputSettingsPtrOutput)
}

func (o ChannelNetworkInputSettingsOutput) ServerValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelNetworkInputSettings) *string { return v.ServerValidation }).(pulumi.StringPtrOutput)
}

type ChannelNetworkInputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelNetworkInputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNetworkInputSettings)(nil)).Elem()
}

func (o ChannelNetworkInputSettingsPtrOutput) ToChannelNetworkInputSettingsPtrOutput() ChannelNetworkInputSettingsPtrOutput {
	return o
}

func (o ChannelNetworkInputSettingsPtrOutput) ToChannelNetworkInputSettingsPtrOutputWithContext(ctx context.Context) ChannelNetworkInputSettingsPtrOutput {
	return o
}

func (o ChannelNetworkInputSettingsPtrOutput) Elem() ChannelNetworkInputSettingsOutput {
	return o.ApplyT(func(v *ChannelNetworkInputSettings) ChannelNetworkInputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelNetworkInputSettings
		return ret
	}).(ChannelNetworkInputSettingsOutput)
}

func (o ChannelNetworkInputSettingsPtrOutput) HlsInputSettings() ChannelHlsInputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelNetworkInputSettings) *ChannelHlsInputSettings {
		if v == nil {
			return nil
		}
		return v.HlsInputSettings
	}).(ChannelHlsInputSettingsPtrOutput)
}

func (o ChannelNetworkInputSettingsPtrOutput) ServerValidation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNetworkInputSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerValidation
	}).(pulumi.StringPtrOutput)
}

type ChannelNielsenConfiguration struct {
	DistributorId          *string `pulumi:"distributorId"`
	NielsenPcmToId3Tagging *string `pulumi:"nielsenPcmToId3Tagging"`
}

// ChannelNielsenConfigurationInput is an input type that accepts ChannelNielsenConfigurationArgs and ChannelNielsenConfigurationOutput values.
// You can construct a concrete instance of `ChannelNielsenConfigurationInput` via:
//
//          ChannelNielsenConfigurationArgs{...}
type ChannelNielsenConfigurationInput interface {
	pulumi.Input

	ToChannelNielsenConfigurationOutput() ChannelNielsenConfigurationOutput
	ToChannelNielsenConfigurationOutputWithContext(context.Context) ChannelNielsenConfigurationOutput
}

type ChannelNielsenConfigurationArgs struct {
	DistributorId          pulumi.StringPtrInput `pulumi:"distributorId"`
	NielsenPcmToId3Tagging pulumi.StringPtrInput `pulumi:"nielsenPcmToId3Tagging"`
}

func (ChannelNielsenConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNielsenConfiguration)(nil)).Elem()
}

func (i ChannelNielsenConfigurationArgs) ToChannelNielsenConfigurationOutput() ChannelNielsenConfigurationOutput {
	return i.ToChannelNielsenConfigurationOutputWithContext(context.Background())
}

func (i ChannelNielsenConfigurationArgs) ToChannelNielsenConfigurationOutputWithContext(ctx context.Context) ChannelNielsenConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNielsenConfigurationOutput)
}

func (i ChannelNielsenConfigurationArgs) ToChannelNielsenConfigurationPtrOutput() ChannelNielsenConfigurationPtrOutput {
	return i.ToChannelNielsenConfigurationPtrOutputWithContext(context.Background())
}

func (i ChannelNielsenConfigurationArgs) ToChannelNielsenConfigurationPtrOutputWithContext(ctx context.Context) ChannelNielsenConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNielsenConfigurationOutput).ToChannelNielsenConfigurationPtrOutputWithContext(ctx)
}

// ChannelNielsenConfigurationPtrInput is an input type that accepts ChannelNielsenConfigurationArgs, ChannelNielsenConfigurationPtr and ChannelNielsenConfigurationPtrOutput values.
// You can construct a concrete instance of `ChannelNielsenConfigurationPtrInput` via:
//
//          ChannelNielsenConfigurationArgs{...}
//
//  or:
//
//          nil
type ChannelNielsenConfigurationPtrInput interface {
	pulumi.Input

	ToChannelNielsenConfigurationPtrOutput() ChannelNielsenConfigurationPtrOutput
	ToChannelNielsenConfigurationPtrOutputWithContext(context.Context) ChannelNielsenConfigurationPtrOutput
}

type channelNielsenConfigurationPtrType ChannelNielsenConfigurationArgs

func ChannelNielsenConfigurationPtr(v *ChannelNielsenConfigurationArgs) ChannelNielsenConfigurationPtrInput {
	return (*channelNielsenConfigurationPtrType)(v)
}

func (*channelNielsenConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNielsenConfiguration)(nil)).Elem()
}

func (i *channelNielsenConfigurationPtrType) ToChannelNielsenConfigurationPtrOutput() ChannelNielsenConfigurationPtrOutput {
	return i.ToChannelNielsenConfigurationPtrOutputWithContext(context.Background())
}

func (i *channelNielsenConfigurationPtrType) ToChannelNielsenConfigurationPtrOutputWithContext(ctx context.Context) ChannelNielsenConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNielsenConfigurationPtrOutput)
}

type ChannelNielsenConfigurationOutput struct{ *pulumi.OutputState }

func (ChannelNielsenConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNielsenConfiguration)(nil)).Elem()
}

func (o ChannelNielsenConfigurationOutput) ToChannelNielsenConfigurationOutput() ChannelNielsenConfigurationOutput {
	return o
}

func (o ChannelNielsenConfigurationOutput) ToChannelNielsenConfigurationOutputWithContext(ctx context.Context) ChannelNielsenConfigurationOutput {
	return o
}

func (o ChannelNielsenConfigurationOutput) ToChannelNielsenConfigurationPtrOutput() ChannelNielsenConfigurationPtrOutput {
	return o.ToChannelNielsenConfigurationPtrOutputWithContext(context.Background())
}

func (o ChannelNielsenConfigurationOutput) ToChannelNielsenConfigurationPtrOutputWithContext(ctx context.Context) ChannelNielsenConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNielsenConfiguration) *ChannelNielsenConfiguration {
		return &v
	}).(ChannelNielsenConfigurationPtrOutput)
}

func (o ChannelNielsenConfigurationOutput) DistributorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelNielsenConfiguration) *string { return v.DistributorId }).(pulumi.StringPtrOutput)
}

func (o ChannelNielsenConfigurationOutput) NielsenPcmToId3Tagging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelNielsenConfiguration) *string { return v.NielsenPcmToId3Tagging }).(pulumi.StringPtrOutput)
}

type ChannelNielsenConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ChannelNielsenConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNielsenConfiguration)(nil)).Elem()
}

func (o ChannelNielsenConfigurationPtrOutput) ToChannelNielsenConfigurationPtrOutput() ChannelNielsenConfigurationPtrOutput {
	return o
}

func (o ChannelNielsenConfigurationPtrOutput) ToChannelNielsenConfigurationPtrOutputWithContext(ctx context.Context) ChannelNielsenConfigurationPtrOutput {
	return o
}

func (o ChannelNielsenConfigurationPtrOutput) Elem() ChannelNielsenConfigurationOutput {
	return o.ApplyT(func(v *ChannelNielsenConfiguration) ChannelNielsenConfiguration {
		if v != nil {
			return *v
		}
		var ret ChannelNielsenConfiguration
		return ret
	}).(ChannelNielsenConfigurationOutput)
}

func (o ChannelNielsenConfigurationPtrOutput) DistributorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNielsenConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DistributorId
	}).(pulumi.StringPtrOutput)
}

func (o ChannelNielsenConfigurationPtrOutput) NielsenPcmToId3Tagging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNielsenConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.NielsenPcmToId3Tagging
	}).(pulumi.StringPtrOutput)
}

type ChannelOutputType struct {
	AudioDescriptionNames   []string               `pulumi:"audioDescriptionNames"`
	CaptionDescriptionNames []string               `pulumi:"captionDescriptionNames"`
	OutputName              *string                `pulumi:"outputName"`
	OutputSettings          *ChannelOutputSettings `pulumi:"outputSettings"`
	VideoDescriptionName    *string                `pulumi:"videoDescriptionName"`
}

// ChannelOutputTypeInput is an input type that accepts ChannelOutputTypeArgs and ChannelOutputTypeOutput values.
// You can construct a concrete instance of `ChannelOutputTypeInput` via:
//
//          ChannelOutputTypeArgs{...}
type ChannelOutputTypeInput interface {
	pulumi.Input

	ToChannelOutputTypeOutput() ChannelOutputTypeOutput
	ToChannelOutputTypeOutputWithContext(context.Context) ChannelOutputTypeOutput
}

type ChannelOutputTypeArgs struct {
	AudioDescriptionNames   pulumi.StringArrayInput       `pulumi:"audioDescriptionNames"`
	CaptionDescriptionNames pulumi.StringArrayInput       `pulumi:"captionDescriptionNames"`
	OutputName              pulumi.StringPtrInput         `pulumi:"outputName"`
	OutputSettings          ChannelOutputSettingsPtrInput `pulumi:"outputSettings"`
	VideoDescriptionName    pulumi.StringPtrInput         `pulumi:"videoDescriptionName"`
}

func (ChannelOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputType)(nil)).Elem()
}

func (i ChannelOutputTypeArgs) ToChannelOutputTypeOutput() ChannelOutputTypeOutput {
	return i.ToChannelOutputTypeOutputWithContext(context.Background())
}

func (i ChannelOutputTypeArgs) ToChannelOutputTypeOutputWithContext(ctx context.Context) ChannelOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputTypeOutput)
}

// ChannelOutputTypeArrayInput is an input type that accepts ChannelOutputTypeArray and ChannelOutputTypeArrayOutput values.
// You can construct a concrete instance of `ChannelOutputTypeArrayInput` via:
//
//          ChannelOutputTypeArray{ ChannelOutputTypeArgs{...} }
type ChannelOutputTypeArrayInput interface {
	pulumi.Input

	ToChannelOutputTypeArrayOutput() ChannelOutputTypeArrayOutput
	ToChannelOutputTypeArrayOutputWithContext(context.Context) ChannelOutputTypeArrayOutput
}

type ChannelOutputTypeArray []ChannelOutputTypeInput

func (ChannelOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputType)(nil)).Elem()
}

func (i ChannelOutputTypeArray) ToChannelOutputTypeArrayOutput() ChannelOutputTypeArrayOutput {
	return i.ToChannelOutputTypeArrayOutputWithContext(context.Background())
}

func (i ChannelOutputTypeArray) ToChannelOutputTypeArrayOutputWithContext(ctx context.Context) ChannelOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputTypeArrayOutput)
}

type ChannelOutputTypeOutput struct{ *pulumi.OutputState }

func (ChannelOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputType)(nil)).Elem()
}

func (o ChannelOutputTypeOutput) ToChannelOutputTypeOutput() ChannelOutputTypeOutput {
	return o
}

func (o ChannelOutputTypeOutput) ToChannelOutputTypeOutputWithContext(ctx context.Context) ChannelOutputTypeOutput {
	return o
}

func (o ChannelOutputTypeOutput) AudioDescriptionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelOutputType) []string { return v.AudioDescriptionNames }).(pulumi.StringArrayOutput)
}

func (o ChannelOutputTypeOutput) CaptionDescriptionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelOutputType) []string { return v.CaptionDescriptionNames }).(pulumi.StringArrayOutput)
}

func (o ChannelOutputTypeOutput) OutputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputType) *string { return v.OutputName }).(pulumi.StringPtrOutput)
}

func (o ChannelOutputTypeOutput) OutputSettings() ChannelOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputType) *ChannelOutputSettings { return v.OutputSettings }).(ChannelOutputSettingsPtrOutput)
}

func (o ChannelOutputTypeOutput) VideoDescriptionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputType) *string { return v.VideoDescriptionName }).(pulumi.StringPtrOutput)
}

type ChannelOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (ChannelOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputType)(nil)).Elem()
}

func (o ChannelOutputTypeArrayOutput) ToChannelOutputTypeArrayOutput() ChannelOutputTypeArrayOutput {
	return o
}

func (o ChannelOutputTypeArrayOutput) ToChannelOutputTypeArrayOutputWithContext(ctx context.Context) ChannelOutputTypeArrayOutput {
	return o
}

func (o ChannelOutputTypeArrayOutput) Index(i pulumi.IntInput) ChannelOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelOutputType {
		return vs[0].([]ChannelOutputType)[vs[1].(int)]
	}).(ChannelOutputTypeOutput)
}

type ChannelOutputDestination struct {
	Id                   *string                                            `pulumi:"id"`
	MediaPackageSettings []ChannelMediaPackageOutputDestinationSettings     `pulumi:"mediaPackageSettings"`
	MultiplexSettings    *ChannelMultiplexProgramChannelDestinationSettings `pulumi:"multiplexSettings"`
	Settings             []ChannelOutputDestinationSettings                 `pulumi:"settings"`
}

// ChannelOutputDestinationInput is an input type that accepts ChannelOutputDestinationArgs and ChannelOutputDestinationOutput values.
// You can construct a concrete instance of `ChannelOutputDestinationInput` via:
//
//          ChannelOutputDestinationArgs{...}
type ChannelOutputDestinationInput interface {
	pulumi.Input

	ToChannelOutputDestinationOutput() ChannelOutputDestinationOutput
	ToChannelOutputDestinationOutputWithContext(context.Context) ChannelOutputDestinationOutput
}

type ChannelOutputDestinationArgs struct {
	Id                   pulumi.StringPtrInput                                     `pulumi:"id"`
	MediaPackageSettings ChannelMediaPackageOutputDestinationSettingsArrayInput    `pulumi:"mediaPackageSettings"`
	MultiplexSettings    ChannelMultiplexProgramChannelDestinationSettingsPtrInput `pulumi:"multiplexSettings"`
	Settings             ChannelOutputDestinationSettingsArrayInput                `pulumi:"settings"`
}

func (ChannelOutputDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputDestination)(nil)).Elem()
}

func (i ChannelOutputDestinationArgs) ToChannelOutputDestinationOutput() ChannelOutputDestinationOutput {
	return i.ToChannelOutputDestinationOutputWithContext(context.Background())
}

func (i ChannelOutputDestinationArgs) ToChannelOutputDestinationOutputWithContext(ctx context.Context) ChannelOutputDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputDestinationOutput)
}

// ChannelOutputDestinationArrayInput is an input type that accepts ChannelOutputDestinationArray and ChannelOutputDestinationArrayOutput values.
// You can construct a concrete instance of `ChannelOutputDestinationArrayInput` via:
//
//          ChannelOutputDestinationArray{ ChannelOutputDestinationArgs{...} }
type ChannelOutputDestinationArrayInput interface {
	pulumi.Input

	ToChannelOutputDestinationArrayOutput() ChannelOutputDestinationArrayOutput
	ToChannelOutputDestinationArrayOutputWithContext(context.Context) ChannelOutputDestinationArrayOutput
}

type ChannelOutputDestinationArray []ChannelOutputDestinationInput

func (ChannelOutputDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputDestination)(nil)).Elem()
}

func (i ChannelOutputDestinationArray) ToChannelOutputDestinationArrayOutput() ChannelOutputDestinationArrayOutput {
	return i.ToChannelOutputDestinationArrayOutputWithContext(context.Background())
}

func (i ChannelOutputDestinationArray) ToChannelOutputDestinationArrayOutputWithContext(ctx context.Context) ChannelOutputDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputDestinationArrayOutput)
}

type ChannelOutputDestinationOutput struct{ *pulumi.OutputState }

func (ChannelOutputDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputDestination)(nil)).Elem()
}

func (o ChannelOutputDestinationOutput) ToChannelOutputDestinationOutput() ChannelOutputDestinationOutput {
	return o
}

func (o ChannelOutputDestinationOutput) ToChannelOutputDestinationOutputWithContext(ctx context.Context) ChannelOutputDestinationOutput {
	return o
}

func (o ChannelOutputDestinationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputDestination) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ChannelOutputDestinationOutput) MediaPackageSettings() ChannelMediaPackageOutputDestinationSettingsArrayOutput {
	return o.ApplyT(func(v ChannelOutputDestination) []ChannelMediaPackageOutputDestinationSettings {
		return v.MediaPackageSettings
	}).(ChannelMediaPackageOutputDestinationSettingsArrayOutput)
}

func (o ChannelOutputDestinationOutput) MultiplexSettings() ChannelMultiplexProgramChannelDestinationSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputDestination) *ChannelMultiplexProgramChannelDestinationSettings {
		return v.MultiplexSettings
	}).(ChannelMultiplexProgramChannelDestinationSettingsPtrOutput)
}

func (o ChannelOutputDestinationOutput) Settings() ChannelOutputDestinationSettingsArrayOutput {
	return o.ApplyT(func(v ChannelOutputDestination) []ChannelOutputDestinationSettings { return v.Settings }).(ChannelOutputDestinationSettingsArrayOutput)
}

type ChannelOutputDestinationArrayOutput struct{ *pulumi.OutputState }

func (ChannelOutputDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputDestination)(nil)).Elem()
}

func (o ChannelOutputDestinationArrayOutput) ToChannelOutputDestinationArrayOutput() ChannelOutputDestinationArrayOutput {
	return o
}

func (o ChannelOutputDestinationArrayOutput) ToChannelOutputDestinationArrayOutputWithContext(ctx context.Context) ChannelOutputDestinationArrayOutput {
	return o
}

func (o ChannelOutputDestinationArrayOutput) Index(i pulumi.IntInput) ChannelOutputDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelOutputDestination {
		return vs[0].([]ChannelOutputDestination)[vs[1].(int)]
	}).(ChannelOutputDestinationOutput)
}

type ChannelOutputDestinationSettings struct {
	PasswordParam *string `pulumi:"passwordParam"`
	StreamName    *string `pulumi:"streamName"`
	Url           *string `pulumi:"url"`
	Username      *string `pulumi:"username"`
}

// ChannelOutputDestinationSettingsInput is an input type that accepts ChannelOutputDestinationSettingsArgs and ChannelOutputDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelOutputDestinationSettingsInput` via:
//
//          ChannelOutputDestinationSettingsArgs{...}
type ChannelOutputDestinationSettingsInput interface {
	pulumi.Input

	ToChannelOutputDestinationSettingsOutput() ChannelOutputDestinationSettingsOutput
	ToChannelOutputDestinationSettingsOutputWithContext(context.Context) ChannelOutputDestinationSettingsOutput
}

type ChannelOutputDestinationSettingsArgs struct {
	PasswordParam pulumi.StringPtrInput `pulumi:"passwordParam"`
	StreamName    pulumi.StringPtrInput `pulumi:"streamName"`
	Url           pulumi.StringPtrInput `pulumi:"url"`
	Username      pulumi.StringPtrInput `pulumi:"username"`
}

func (ChannelOutputDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputDestinationSettings)(nil)).Elem()
}

func (i ChannelOutputDestinationSettingsArgs) ToChannelOutputDestinationSettingsOutput() ChannelOutputDestinationSettingsOutput {
	return i.ToChannelOutputDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelOutputDestinationSettingsArgs) ToChannelOutputDestinationSettingsOutputWithContext(ctx context.Context) ChannelOutputDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputDestinationSettingsOutput)
}

// ChannelOutputDestinationSettingsArrayInput is an input type that accepts ChannelOutputDestinationSettingsArray and ChannelOutputDestinationSettingsArrayOutput values.
// You can construct a concrete instance of `ChannelOutputDestinationSettingsArrayInput` via:
//
//          ChannelOutputDestinationSettingsArray{ ChannelOutputDestinationSettingsArgs{...} }
type ChannelOutputDestinationSettingsArrayInput interface {
	pulumi.Input

	ToChannelOutputDestinationSettingsArrayOutput() ChannelOutputDestinationSettingsArrayOutput
	ToChannelOutputDestinationSettingsArrayOutputWithContext(context.Context) ChannelOutputDestinationSettingsArrayOutput
}

type ChannelOutputDestinationSettingsArray []ChannelOutputDestinationSettingsInput

func (ChannelOutputDestinationSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputDestinationSettings)(nil)).Elem()
}

func (i ChannelOutputDestinationSettingsArray) ToChannelOutputDestinationSettingsArrayOutput() ChannelOutputDestinationSettingsArrayOutput {
	return i.ToChannelOutputDestinationSettingsArrayOutputWithContext(context.Background())
}

func (i ChannelOutputDestinationSettingsArray) ToChannelOutputDestinationSettingsArrayOutputWithContext(ctx context.Context) ChannelOutputDestinationSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputDestinationSettingsArrayOutput)
}

type ChannelOutputDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelOutputDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputDestinationSettings)(nil)).Elem()
}

func (o ChannelOutputDestinationSettingsOutput) ToChannelOutputDestinationSettingsOutput() ChannelOutputDestinationSettingsOutput {
	return o
}

func (o ChannelOutputDestinationSettingsOutput) ToChannelOutputDestinationSettingsOutputWithContext(ctx context.Context) ChannelOutputDestinationSettingsOutput {
	return o
}

func (o ChannelOutputDestinationSettingsOutput) PasswordParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputDestinationSettings) *string { return v.PasswordParam }).(pulumi.StringPtrOutput)
}

func (o ChannelOutputDestinationSettingsOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputDestinationSettings) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

func (o ChannelOutputDestinationSettingsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputDestinationSettings) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o ChannelOutputDestinationSettingsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputDestinationSettings) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ChannelOutputDestinationSettingsArrayOutput struct{ *pulumi.OutputState }

func (ChannelOutputDestinationSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputDestinationSettings)(nil)).Elem()
}

func (o ChannelOutputDestinationSettingsArrayOutput) ToChannelOutputDestinationSettingsArrayOutput() ChannelOutputDestinationSettingsArrayOutput {
	return o
}

func (o ChannelOutputDestinationSettingsArrayOutput) ToChannelOutputDestinationSettingsArrayOutputWithContext(ctx context.Context) ChannelOutputDestinationSettingsArrayOutput {
	return o
}

func (o ChannelOutputDestinationSettingsArrayOutput) Index(i pulumi.IntInput) ChannelOutputDestinationSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelOutputDestinationSettings {
		return vs[0].([]ChannelOutputDestinationSettings)[vs[1].(int)]
	}).(ChannelOutputDestinationSettingsOutput)
}

type ChannelOutputGroup struct {
	Name                *string                     `pulumi:"name"`
	OutputGroupSettings *ChannelOutputGroupSettings `pulumi:"outputGroupSettings"`
	Outputs             []ChannelOutputType         `pulumi:"outputs"`
}

// ChannelOutputGroupInput is an input type that accepts ChannelOutputGroupArgs and ChannelOutputGroupOutput values.
// You can construct a concrete instance of `ChannelOutputGroupInput` via:
//
//          ChannelOutputGroupArgs{...}
type ChannelOutputGroupInput interface {
	pulumi.Input

	ToChannelOutputGroupOutput() ChannelOutputGroupOutput
	ToChannelOutputGroupOutputWithContext(context.Context) ChannelOutputGroupOutput
}

type ChannelOutputGroupArgs struct {
	Name                pulumi.StringPtrInput              `pulumi:"name"`
	OutputGroupSettings ChannelOutputGroupSettingsPtrInput `pulumi:"outputGroupSettings"`
	Outputs             ChannelOutputTypeArrayInput        `pulumi:"outputs"`
}

func (ChannelOutputGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputGroup)(nil)).Elem()
}

func (i ChannelOutputGroupArgs) ToChannelOutputGroupOutput() ChannelOutputGroupOutput {
	return i.ToChannelOutputGroupOutputWithContext(context.Background())
}

func (i ChannelOutputGroupArgs) ToChannelOutputGroupOutputWithContext(ctx context.Context) ChannelOutputGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputGroupOutput)
}

// ChannelOutputGroupArrayInput is an input type that accepts ChannelOutputGroupArray and ChannelOutputGroupArrayOutput values.
// You can construct a concrete instance of `ChannelOutputGroupArrayInput` via:
//
//          ChannelOutputGroupArray{ ChannelOutputGroupArgs{...} }
type ChannelOutputGroupArrayInput interface {
	pulumi.Input

	ToChannelOutputGroupArrayOutput() ChannelOutputGroupArrayOutput
	ToChannelOutputGroupArrayOutputWithContext(context.Context) ChannelOutputGroupArrayOutput
}

type ChannelOutputGroupArray []ChannelOutputGroupInput

func (ChannelOutputGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputGroup)(nil)).Elem()
}

func (i ChannelOutputGroupArray) ToChannelOutputGroupArrayOutput() ChannelOutputGroupArrayOutput {
	return i.ToChannelOutputGroupArrayOutputWithContext(context.Background())
}

func (i ChannelOutputGroupArray) ToChannelOutputGroupArrayOutputWithContext(ctx context.Context) ChannelOutputGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputGroupArrayOutput)
}

type ChannelOutputGroupOutput struct{ *pulumi.OutputState }

func (ChannelOutputGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputGroup)(nil)).Elem()
}

func (o ChannelOutputGroupOutput) ToChannelOutputGroupOutput() ChannelOutputGroupOutput {
	return o
}

func (o ChannelOutputGroupOutput) ToChannelOutputGroupOutputWithContext(ctx context.Context) ChannelOutputGroupOutput {
	return o
}

func (o ChannelOutputGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ChannelOutputGroupOutput) OutputGroupSettings() ChannelOutputGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroup) *ChannelOutputGroupSettings { return v.OutputGroupSettings }).(ChannelOutputGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupOutput) Outputs() ChannelOutputTypeArrayOutput {
	return o.ApplyT(func(v ChannelOutputGroup) []ChannelOutputType { return v.Outputs }).(ChannelOutputTypeArrayOutput)
}

type ChannelOutputGroupArrayOutput struct{ *pulumi.OutputState }

func (ChannelOutputGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelOutputGroup)(nil)).Elem()
}

func (o ChannelOutputGroupArrayOutput) ToChannelOutputGroupArrayOutput() ChannelOutputGroupArrayOutput {
	return o
}

func (o ChannelOutputGroupArrayOutput) ToChannelOutputGroupArrayOutputWithContext(ctx context.Context) ChannelOutputGroupArrayOutput {
	return o
}

func (o ChannelOutputGroupArrayOutput) Index(i pulumi.IntInput) ChannelOutputGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelOutputGroup {
		return vs[0].([]ChannelOutputGroup)[vs[1].(int)]
	}).(ChannelOutputGroupOutput)
}

type ChannelOutputGroupSettings struct {
	ArchiveGroupSettings      *ChannelArchiveGroupSettings      `pulumi:"archiveGroupSettings"`
	FrameCaptureGroupSettings *ChannelFrameCaptureGroupSettings `pulumi:"frameCaptureGroupSettings"`
	HlsGroupSettings          *ChannelHlsGroupSettings          `pulumi:"hlsGroupSettings"`
	MediaPackageGroupSettings *ChannelMediaPackageGroupSettings `pulumi:"mediaPackageGroupSettings"`
	MsSmoothGroupSettings     *ChannelMsSmoothGroupSettings     `pulumi:"msSmoothGroupSettings"`
	MultiplexGroupSettings    *ChannelMultiplexGroupSettings    `pulumi:"multiplexGroupSettings"`
	RtmpGroupSettings         *ChannelRtmpGroupSettings         `pulumi:"rtmpGroupSettings"`
	UdpGroupSettings          *ChannelUdpGroupSettings          `pulumi:"udpGroupSettings"`
}

// ChannelOutputGroupSettingsInput is an input type that accepts ChannelOutputGroupSettingsArgs and ChannelOutputGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelOutputGroupSettingsInput` via:
//
//          ChannelOutputGroupSettingsArgs{...}
type ChannelOutputGroupSettingsInput interface {
	pulumi.Input

	ToChannelOutputGroupSettingsOutput() ChannelOutputGroupSettingsOutput
	ToChannelOutputGroupSettingsOutputWithContext(context.Context) ChannelOutputGroupSettingsOutput
}

type ChannelOutputGroupSettingsArgs struct {
	ArchiveGroupSettings      ChannelArchiveGroupSettingsPtrInput      `pulumi:"archiveGroupSettings"`
	FrameCaptureGroupSettings ChannelFrameCaptureGroupSettingsPtrInput `pulumi:"frameCaptureGroupSettings"`
	HlsGroupSettings          ChannelHlsGroupSettingsPtrInput          `pulumi:"hlsGroupSettings"`
	MediaPackageGroupSettings ChannelMediaPackageGroupSettingsPtrInput `pulumi:"mediaPackageGroupSettings"`
	MsSmoothGroupSettings     ChannelMsSmoothGroupSettingsPtrInput     `pulumi:"msSmoothGroupSettings"`
	MultiplexGroupSettings    ChannelMultiplexGroupSettingsPtrInput    `pulumi:"multiplexGroupSettings"`
	RtmpGroupSettings         ChannelRtmpGroupSettingsPtrInput         `pulumi:"rtmpGroupSettings"`
	UdpGroupSettings          ChannelUdpGroupSettingsPtrInput          `pulumi:"udpGroupSettings"`
}

func (ChannelOutputGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputGroupSettings)(nil)).Elem()
}

func (i ChannelOutputGroupSettingsArgs) ToChannelOutputGroupSettingsOutput() ChannelOutputGroupSettingsOutput {
	return i.ToChannelOutputGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelOutputGroupSettingsArgs) ToChannelOutputGroupSettingsOutputWithContext(ctx context.Context) ChannelOutputGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputGroupSettingsOutput)
}

func (i ChannelOutputGroupSettingsArgs) ToChannelOutputGroupSettingsPtrOutput() ChannelOutputGroupSettingsPtrOutput {
	return i.ToChannelOutputGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelOutputGroupSettingsArgs) ToChannelOutputGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputGroupSettingsOutput).ToChannelOutputGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelOutputGroupSettingsPtrInput is an input type that accepts ChannelOutputGroupSettingsArgs, ChannelOutputGroupSettingsPtr and ChannelOutputGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelOutputGroupSettingsPtrInput` via:
//
//          ChannelOutputGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelOutputGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelOutputGroupSettingsPtrOutput() ChannelOutputGroupSettingsPtrOutput
	ToChannelOutputGroupSettingsPtrOutputWithContext(context.Context) ChannelOutputGroupSettingsPtrOutput
}

type channelOutputGroupSettingsPtrType ChannelOutputGroupSettingsArgs

func ChannelOutputGroupSettingsPtr(v *ChannelOutputGroupSettingsArgs) ChannelOutputGroupSettingsPtrInput {
	return (*channelOutputGroupSettingsPtrType)(v)
}

func (*channelOutputGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelOutputGroupSettings)(nil)).Elem()
}

func (i *channelOutputGroupSettingsPtrType) ToChannelOutputGroupSettingsPtrOutput() ChannelOutputGroupSettingsPtrOutput {
	return i.ToChannelOutputGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelOutputGroupSettingsPtrType) ToChannelOutputGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputGroupSettingsPtrOutput)
}

type ChannelOutputGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelOutputGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputGroupSettings)(nil)).Elem()
}

func (o ChannelOutputGroupSettingsOutput) ToChannelOutputGroupSettingsOutput() ChannelOutputGroupSettingsOutput {
	return o
}

func (o ChannelOutputGroupSettingsOutput) ToChannelOutputGroupSettingsOutputWithContext(ctx context.Context) ChannelOutputGroupSettingsOutput {
	return o
}

func (o ChannelOutputGroupSettingsOutput) ToChannelOutputGroupSettingsPtrOutput() ChannelOutputGroupSettingsPtrOutput {
	return o.ToChannelOutputGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelOutputGroupSettingsOutput) ToChannelOutputGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelOutputGroupSettings) *ChannelOutputGroupSettings {
		return &v
	}).(ChannelOutputGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) ArchiveGroupSettings() ChannelArchiveGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelArchiveGroupSettings { return v.ArchiveGroupSettings }).(ChannelArchiveGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) FrameCaptureGroupSettings() ChannelFrameCaptureGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelFrameCaptureGroupSettings {
		return v.FrameCaptureGroupSettings
	}).(ChannelFrameCaptureGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) HlsGroupSettings() ChannelHlsGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelHlsGroupSettings { return v.HlsGroupSettings }).(ChannelHlsGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) MediaPackageGroupSettings() ChannelMediaPackageGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelMediaPackageGroupSettings {
		return v.MediaPackageGroupSettings
	}).(ChannelMediaPackageGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) MsSmoothGroupSettings() ChannelMsSmoothGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelMsSmoothGroupSettings { return v.MsSmoothGroupSettings }).(ChannelMsSmoothGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) MultiplexGroupSettings() ChannelMultiplexGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelMultiplexGroupSettings { return v.MultiplexGroupSettings }).(ChannelMultiplexGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) RtmpGroupSettings() ChannelRtmpGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelRtmpGroupSettings { return v.RtmpGroupSettings }).(ChannelRtmpGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsOutput) UdpGroupSettings() ChannelUdpGroupSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputGroupSettings) *ChannelUdpGroupSettings { return v.UdpGroupSettings }).(ChannelUdpGroupSettingsPtrOutput)
}

type ChannelOutputGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelOutputGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelOutputGroupSettings)(nil)).Elem()
}

func (o ChannelOutputGroupSettingsPtrOutput) ToChannelOutputGroupSettingsPtrOutput() ChannelOutputGroupSettingsPtrOutput {
	return o
}

func (o ChannelOutputGroupSettingsPtrOutput) ToChannelOutputGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputGroupSettingsPtrOutput {
	return o
}

func (o ChannelOutputGroupSettingsPtrOutput) Elem() ChannelOutputGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) ChannelOutputGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelOutputGroupSettings
		return ret
	}).(ChannelOutputGroupSettingsOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) ArchiveGroupSettings() ChannelArchiveGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelArchiveGroupSettings {
		if v == nil {
			return nil
		}
		return v.ArchiveGroupSettings
	}).(ChannelArchiveGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) FrameCaptureGroupSettings() ChannelFrameCaptureGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelFrameCaptureGroupSettings {
		if v == nil {
			return nil
		}
		return v.FrameCaptureGroupSettings
	}).(ChannelFrameCaptureGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) HlsGroupSettings() ChannelHlsGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelHlsGroupSettings {
		if v == nil {
			return nil
		}
		return v.HlsGroupSettings
	}).(ChannelHlsGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) MediaPackageGroupSettings() ChannelMediaPackageGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelMediaPackageGroupSettings {
		if v == nil {
			return nil
		}
		return v.MediaPackageGroupSettings
	}).(ChannelMediaPackageGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) MsSmoothGroupSettings() ChannelMsSmoothGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelMsSmoothGroupSettings {
		if v == nil {
			return nil
		}
		return v.MsSmoothGroupSettings
	}).(ChannelMsSmoothGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) MultiplexGroupSettings() ChannelMultiplexGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelMultiplexGroupSettings {
		if v == nil {
			return nil
		}
		return v.MultiplexGroupSettings
	}).(ChannelMultiplexGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) RtmpGroupSettings() ChannelRtmpGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelRtmpGroupSettings {
		if v == nil {
			return nil
		}
		return v.RtmpGroupSettings
	}).(ChannelRtmpGroupSettingsPtrOutput)
}

func (o ChannelOutputGroupSettingsPtrOutput) UdpGroupSettings() ChannelUdpGroupSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputGroupSettings) *ChannelUdpGroupSettings {
		if v == nil {
			return nil
		}
		return v.UdpGroupSettings
	}).(ChannelUdpGroupSettingsPtrOutput)
}

type ChannelOutputLocationRef struct {
	DestinationRefId *string `pulumi:"destinationRefId"`
}

// ChannelOutputLocationRefInput is an input type that accepts ChannelOutputLocationRefArgs and ChannelOutputLocationRefOutput values.
// You can construct a concrete instance of `ChannelOutputLocationRefInput` via:
//
//          ChannelOutputLocationRefArgs{...}
type ChannelOutputLocationRefInput interface {
	pulumi.Input

	ToChannelOutputLocationRefOutput() ChannelOutputLocationRefOutput
	ToChannelOutputLocationRefOutputWithContext(context.Context) ChannelOutputLocationRefOutput
}

type ChannelOutputLocationRefArgs struct {
	DestinationRefId pulumi.StringPtrInput `pulumi:"destinationRefId"`
}

func (ChannelOutputLocationRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputLocationRef)(nil)).Elem()
}

func (i ChannelOutputLocationRefArgs) ToChannelOutputLocationRefOutput() ChannelOutputLocationRefOutput {
	return i.ToChannelOutputLocationRefOutputWithContext(context.Background())
}

func (i ChannelOutputLocationRefArgs) ToChannelOutputLocationRefOutputWithContext(ctx context.Context) ChannelOutputLocationRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputLocationRefOutput)
}

func (i ChannelOutputLocationRefArgs) ToChannelOutputLocationRefPtrOutput() ChannelOutputLocationRefPtrOutput {
	return i.ToChannelOutputLocationRefPtrOutputWithContext(context.Background())
}

func (i ChannelOutputLocationRefArgs) ToChannelOutputLocationRefPtrOutputWithContext(ctx context.Context) ChannelOutputLocationRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputLocationRefOutput).ToChannelOutputLocationRefPtrOutputWithContext(ctx)
}

// ChannelOutputLocationRefPtrInput is an input type that accepts ChannelOutputLocationRefArgs, ChannelOutputLocationRefPtr and ChannelOutputLocationRefPtrOutput values.
// You can construct a concrete instance of `ChannelOutputLocationRefPtrInput` via:
//
//          ChannelOutputLocationRefArgs{...}
//
//  or:
//
//          nil
type ChannelOutputLocationRefPtrInput interface {
	pulumi.Input

	ToChannelOutputLocationRefPtrOutput() ChannelOutputLocationRefPtrOutput
	ToChannelOutputLocationRefPtrOutputWithContext(context.Context) ChannelOutputLocationRefPtrOutput
}

type channelOutputLocationRefPtrType ChannelOutputLocationRefArgs

func ChannelOutputLocationRefPtr(v *ChannelOutputLocationRefArgs) ChannelOutputLocationRefPtrInput {
	return (*channelOutputLocationRefPtrType)(v)
}

func (*channelOutputLocationRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelOutputLocationRef)(nil)).Elem()
}

func (i *channelOutputLocationRefPtrType) ToChannelOutputLocationRefPtrOutput() ChannelOutputLocationRefPtrOutput {
	return i.ToChannelOutputLocationRefPtrOutputWithContext(context.Background())
}

func (i *channelOutputLocationRefPtrType) ToChannelOutputLocationRefPtrOutputWithContext(ctx context.Context) ChannelOutputLocationRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputLocationRefPtrOutput)
}

type ChannelOutputLocationRefOutput struct{ *pulumi.OutputState }

func (ChannelOutputLocationRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputLocationRef)(nil)).Elem()
}

func (o ChannelOutputLocationRefOutput) ToChannelOutputLocationRefOutput() ChannelOutputLocationRefOutput {
	return o
}

func (o ChannelOutputLocationRefOutput) ToChannelOutputLocationRefOutputWithContext(ctx context.Context) ChannelOutputLocationRefOutput {
	return o
}

func (o ChannelOutputLocationRefOutput) ToChannelOutputLocationRefPtrOutput() ChannelOutputLocationRefPtrOutput {
	return o.ToChannelOutputLocationRefPtrOutputWithContext(context.Background())
}

func (o ChannelOutputLocationRefOutput) ToChannelOutputLocationRefPtrOutputWithContext(ctx context.Context) ChannelOutputLocationRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelOutputLocationRef) *ChannelOutputLocationRef {
		return &v
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelOutputLocationRefOutput) DestinationRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelOutputLocationRef) *string { return v.DestinationRefId }).(pulumi.StringPtrOutput)
}

type ChannelOutputLocationRefPtrOutput struct{ *pulumi.OutputState }

func (ChannelOutputLocationRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelOutputLocationRef)(nil)).Elem()
}

func (o ChannelOutputLocationRefPtrOutput) ToChannelOutputLocationRefPtrOutput() ChannelOutputLocationRefPtrOutput {
	return o
}

func (o ChannelOutputLocationRefPtrOutput) ToChannelOutputLocationRefPtrOutputWithContext(ctx context.Context) ChannelOutputLocationRefPtrOutput {
	return o
}

func (o ChannelOutputLocationRefPtrOutput) Elem() ChannelOutputLocationRefOutput {
	return o.ApplyT(func(v *ChannelOutputLocationRef) ChannelOutputLocationRef {
		if v != nil {
			return *v
		}
		var ret ChannelOutputLocationRef
		return ret
	}).(ChannelOutputLocationRefOutput)
}

func (o ChannelOutputLocationRefPtrOutput) DestinationRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelOutputLocationRef) *string {
		if v == nil {
			return nil
		}
		return v.DestinationRefId
	}).(pulumi.StringPtrOutput)
}

type ChannelOutputSettings struct {
	ArchiveOutputSettings      *ChannelArchiveOutputSettings      `pulumi:"archiveOutputSettings"`
	FrameCaptureOutputSettings *ChannelFrameCaptureOutputSettings `pulumi:"frameCaptureOutputSettings"`
	HlsOutputSettings          *ChannelHlsOutputSettings          `pulumi:"hlsOutputSettings"`
	MediaPackageOutputSettings *ChannelMediaPackageOutputSettings `pulumi:"mediaPackageOutputSettings"`
	MsSmoothOutputSettings     *ChannelMsSmoothOutputSettings     `pulumi:"msSmoothOutputSettings"`
	MultiplexOutputSettings    *ChannelMultiplexOutputSettings    `pulumi:"multiplexOutputSettings"`
	RtmpOutputSettings         *ChannelRtmpOutputSettings         `pulumi:"rtmpOutputSettings"`
	UdpOutputSettings          *ChannelUdpOutputSettings          `pulumi:"udpOutputSettings"`
}

// ChannelOutputSettingsInput is an input type that accepts ChannelOutputSettingsArgs and ChannelOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelOutputSettingsInput` via:
//
//          ChannelOutputSettingsArgs{...}
type ChannelOutputSettingsInput interface {
	pulumi.Input

	ToChannelOutputSettingsOutput() ChannelOutputSettingsOutput
	ToChannelOutputSettingsOutputWithContext(context.Context) ChannelOutputSettingsOutput
}

type ChannelOutputSettingsArgs struct {
	ArchiveOutputSettings      ChannelArchiveOutputSettingsPtrInput      `pulumi:"archiveOutputSettings"`
	FrameCaptureOutputSettings ChannelFrameCaptureOutputSettingsPtrInput `pulumi:"frameCaptureOutputSettings"`
	HlsOutputSettings          ChannelHlsOutputSettingsPtrInput          `pulumi:"hlsOutputSettings"`
	MediaPackageOutputSettings ChannelMediaPackageOutputSettingsPtrInput `pulumi:"mediaPackageOutputSettings"`
	MsSmoothOutputSettings     ChannelMsSmoothOutputSettingsPtrInput     `pulumi:"msSmoothOutputSettings"`
	MultiplexOutputSettings    ChannelMultiplexOutputSettingsPtrInput    `pulumi:"multiplexOutputSettings"`
	RtmpOutputSettings         ChannelRtmpOutputSettingsPtrInput         `pulumi:"rtmpOutputSettings"`
	UdpOutputSettings          ChannelUdpOutputSettingsPtrInput          `pulumi:"udpOutputSettings"`
}

func (ChannelOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputSettings)(nil)).Elem()
}

func (i ChannelOutputSettingsArgs) ToChannelOutputSettingsOutput() ChannelOutputSettingsOutput {
	return i.ToChannelOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelOutputSettingsArgs) ToChannelOutputSettingsOutputWithContext(ctx context.Context) ChannelOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputSettingsOutput)
}

func (i ChannelOutputSettingsArgs) ToChannelOutputSettingsPtrOutput() ChannelOutputSettingsPtrOutput {
	return i.ToChannelOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelOutputSettingsArgs) ToChannelOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputSettingsOutput).ToChannelOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelOutputSettingsPtrInput is an input type that accepts ChannelOutputSettingsArgs, ChannelOutputSettingsPtr and ChannelOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelOutputSettingsPtrInput` via:
//
//          ChannelOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelOutputSettingsPtrOutput() ChannelOutputSettingsPtrOutput
	ToChannelOutputSettingsPtrOutputWithContext(context.Context) ChannelOutputSettingsPtrOutput
}

type channelOutputSettingsPtrType ChannelOutputSettingsArgs

func ChannelOutputSettingsPtr(v *ChannelOutputSettingsArgs) ChannelOutputSettingsPtrInput {
	return (*channelOutputSettingsPtrType)(v)
}

func (*channelOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelOutputSettings)(nil)).Elem()
}

func (i *channelOutputSettingsPtrType) ToChannelOutputSettingsPtrOutput() ChannelOutputSettingsPtrOutput {
	return i.ToChannelOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelOutputSettingsPtrType) ToChannelOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelOutputSettingsPtrOutput)
}

type ChannelOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelOutputSettings)(nil)).Elem()
}

func (o ChannelOutputSettingsOutput) ToChannelOutputSettingsOutput() ChannelOutputSettingsOutput {
	return o
}

func (o ChannelOutputSettingsOutput) ToChannelOutputSettingsOutputWithContext(ctx context.Context) ChannelOutputSettingsOutput {
	return o
}

func (o ChannelOutputSettingsOutput) ToChannelOutputSettingsPtrOutput() ChannelOutputSettingsPtrOutput {
	return o.ToChannelOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelOutputSettingsOutput) ToChannelOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelOutputSettings) *ChannelOutputSettings {
		return &v
	}).(ChannelOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) ArchiveOutputSettings() ChannelArchiveOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelArchiveOutputSettings { return v.ArchiveOutputSettings }).(ChannelArchiveOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) FrameCaptureOutputSettings() ChannelFrameCaptureOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelFrameCaptureOutputSettings { return v.FrameCaptureOutputSettings }).(ChannelFrameCaptureOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) HlsOutputSettings() ChannelHlsOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelHlsOutputSettings { return v.HlsOutputSettings }).(ChannelHlsOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) MediaPackageOutputSettings() ChannelMediaPackageOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelMediaPackageOutputSettings { return v.MediaPackageOutputSettings }).(ChannelMediaPackageOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) MsSmoothOutputSettings() ChannelMsSmoothOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelMsSmoothOutputSettings { return v.MsSmoothOutputSettings }).(ChannelMsSmoothOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) MultiplexOutputSettings() ChannelMultiplexOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelMultiplexOutputSettings { return v.MultiplexOutputSettings }).(ChannelMultiplexOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) RtmpOutputSettings() ChannelRtmpOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelRtmpOutputSettings { return v.RtmpOutputSettings }).(ChannelRtmpOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsOutput) UdpOutputSettings() ChannelUdpOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelOutputSettings) *ChannelUdpOutputSettings { return v.UdpOutputSettings }).(ChannelUdpOutputSettingsPtrOutput)
}

type ChannelOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelOutputSettings)(nil)).Elem()
}

func (o ChannelOutputSettingsPtrOutput) ToChannelOutputSettingsPtrOutput() ChannelOutputSettingsPtrOutput {
	return o
}

func (o ChannelOutputSettingsPtrOutput) ToChannelOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelOutputSettingsPtrOutput {
	return o
}

func (o ChannelOutputSettingsPtrOutput) Elem() ChannelOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) ChannelOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelOutputSettings
		return ret
	}).(ChannelOutputSettingsOutput)
}

func (o ChannelOutputSettingsPtrOutput) ArchiveOutputSettings() ChannelArchiveOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelArchiveOutputSettings {
		if v == nil {
			return nil
		}
		return v.ArchiveOutputSettings
	}).(ChannelArchiveOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) FrameCaptureOutputSettings() ChannelFrameCaptureOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelFrameCaptureOutputSettings {
		if v == nil {
			return nil
		}
		return v.FrameCaptureOutputSettings
	}).(ChannelFrameCaptureOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) HlsOutputSettings() ChannelHlsOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelHlsOutputSettings {
		if v == nil {
			return nil
		}
		return v.HlsOutputSettings
	}).(ChannelHlsOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) MediaPackageOutputSettings() ChannelMediaPackageOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelMediaPackageOutputSettings {
		if v == nil {
			return nil
		}
		return v.MediaPackageOutputSettings
	}).(ChannelMediaPackageOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) MsSmoothOutputSettings() ChannelMsSmoothOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelMsSmoothOutputSettings {
		if v == nil {
			return nil
		}
		return v.MsSmoothOutputSettings
	}).(ChannelMsSmoothOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) MultiplexOutputSettings() ChannelMultiplexOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelMultiplexOutputSettings {
		if v == nil {
			return nil
		}
		return v.MultiplexOutputSettings
	}).(ChannelMultiplexOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) RtmpOutputSettings() ChannelRtmpOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelRtmpOutputSettings {
		if v == nil {
			return nil
		}
		return v.RtmpOutputSettings
	}).(ChannelRtmpOutputSettingsPtrOutput)
}

func (o ChannelOutputSettingsPtrOutput) UdpOutputSettings() ChannelUdpOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelOutputSettings) *ChannelUdpOutputSettings {
		if v == nil {
			return nil
		}
		return v.UdpOutputSettings
	}).(ChannelUdpOutputSettingsPtrOutput)
}

type ChannelPassThroughSettings struct {
}

// ChannelPassThroughSettingsInput is an input type that accepts ChannelPassThroughSettingsArgs and ChannelPassThroughSettingsOutput values.
// You can construct a concrete instance of `ChannelPassThroughSettingsInput` via:
//
//          ChannelPassThroughSettingsArgs{...}
type ChannelPassThroughSettingsInput interface {
	pulumi.Input

	ToChannelPassThroughSettingsOutput() ChannelPassThroughSettingsOutput
	ToChannelPassThroughSettingsOutputWithContext(context.Context) ChannelPassThroughSettingsOutput
}

type ChannelPassThroughSettingsArgs struct {
}

func (ChannelPassThroughSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelPassThroughSettings)(nil)).Elem()
}

func (i ChannelPassThroughSettingsArgs) ToChannelPassThroughSettingsOutput() ChannelPassThroughSettingsOutput {
	return i.ToChannelPassThroughSettingsOutputWithContext(context.Background())
}

func (i ChannelPassThroughSettingsArgs) ToChannelPassThroughSettingsOutputWithContext(ctx context.Context) ChannelPassThroughSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelPassThroughSettingsOutput)
}

func (i ChannelPassThroughSettingsArgs) ToChannelPassThroughSettingsPtrOutput() ChannelPassThroughSettingsPtrOutput {
	return i.ToChannelPassThroughSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelPassThroughSettingsArgs) ToChannelPassThroughSettingsPtrOutputWithContext(ctx context.Context) ChannelPassThroughSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelPassThroughSettingsOutput).ToChannelPassThroughSettingsPtrOutputWithContext(ctx)
}

// ChannelPassThroughSettingsPtrInput is an input type that accepts ChannelPassThroughSettingsArgs, ChannelPassThroughSettingsPtr and ChannelPassThroughSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelPassThroughSettingsPtrInput` via:
//
//          ChannelPassThroughSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelPassThroughSettingsPtrInput interface {
	pulumi.Input

	ToChannelPassThroughSettingsPtrOutput() ChannelPassThroughSettingsPtrOutput
	ToChannelPassThroughSettingsPtrOutputWithContext(context.Context) ChannelPassThroughSettingsPtrOutput
}

type channelPassThroughSettingsPtrType ChannelPassThroughSettingsArgs

func ChannelPassThroughSettingsPtr(v *ChannelPassThroughSettingsArgs) ChannelPassThroughSettingsPtrInput {
	return (*channelPassThroughSettingsPtrType)(v)
}

func (*channelPassThroughSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelPassThroughSettings)(nil)).Elem()
}

func (i *channelPassThroughSettingsPtrType) ToChannelPassThroughSettingsPtrOutput() ChannelPassThroughSettingsPtrOutput {
	return i.ToChannelPassThroughSettingsPtrOutputWithContext(context.Background())
}

func (i *channelPassThroughSettingsPtrType) ToChannelPassThroughSettingsPtrOutputWithContext(ctx context.Context) ChannelPassThroughSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelPassThroughSettingsPtrOutput)
}

type ChannelPassThroughSettingsOutput struct{ *pulumi.OutputState }

func (ChannelPassThroughSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelPassThroughSettings)(nil)).Elem()
}

func (o ChannelPassThroughSettingsOutput) ToChannelPassThroughSettingsOutput() ChannelPassThroughSettingsOutput {
	return o
}

func (o ChannelPassThroughSettingsOutput) ToChannelPassThroughSettingsOutputWithContext(ctx context.Context) ChannelPassThroughSettingsOutput {
	return o
}

func (o ChannelPassThroughSettingsOutput) ToChannelPassThroughSettingsPtrOutput() ChannelPassThroughSettingsPtrOutput {
	return o.ToChannelPassThroughSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelPassThroughSettingsOutput) ToChannelPassThroughSettingsPtrOutputWithContext(ctx context.Context) ChannelPassThroughSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelPassThroughSettings) *ChannelPassThroughSettings {
		return &v
	}).(ChannelPassThroughSettingsPtrOutput)
}

type ChannelPassThroughSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelPassThroughSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelPassThroughSettings)(nil)).Elem()
}

func (o ChannelPassThroughSettingsPtrOutput) ToChannelPassThroughSettingsPtrOutput() ChannelPassThroughSettingsPtrOutput {
	return o
}

func (o ChannelPassThroughSettingsPtrOutput) ToChannelPassThroughSettingsPtrOutputWithContext(ctx context.Context) ChannelPassThroughSettingsPtrOutput {
	return o
}

func (o ChannelPassThroughSettingsPtrOutput) Elem() ChannelPassThroughSettingsOutput {
	return o.ApplyT(func(v *ChannelPassThroughSettings) ChannelPassThroughSettings {
		if v != nil {
			return *v
		}
		var ret ChannelPassThroughSettings
		return ret
	}).(ChannelPassThroughSettingsOutput)
}

type ChannelRawSettings struct {
}

// ChannelRawSettingsInput is an input type that accepts ChannelRawSettingsArgs and ChannelRawSettingsOutput values.
// You can construct a concrete instance of `ChannelRawSettingsInput` via:
//
//          ChannelRawSettingsArgs{...}
type ChannelRawSettingsInput interface {
	pulumi.Input

	ToChannelRawSettingsOutput() ChannelRawSettingsOutput
	ToChannelRawSettingsOutputWithContext(context.Context) ChannelRawSettingsOutput
}

type ChannelRawSettingsArgs struct {
}

func (ChannelRawSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRawSettings)(nil)).Elem()
}

func (i ChannelRawSettingsArgs) ToChannelRawSettingsOutput() ChannelRawSettingsOutput {
	return i.ToChannelRawSettingsOutputWithContext(context.Background())
}

func (i ChannelRawSettingsArgs) ToChannelRawSettingsOutputWithContext(ctx context.Context) ChannelRawSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRawSettingsOutput)
}

func (i ChannelRawSettingsArgs) ToChannelRawSettingsPtrOutput() ChannelRawSettingsPtrOutput {
	return i.ToChannelRawSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRawSettingsArgs) ToChannelRawSettingsPtrOutputWithContext(ctx context.Context) ChannelRawSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRawSettingsOutput).ToChannelRawSettingsPtrOutputWithContext(ctx)
}

// ChannelRawSettingsPtrInput is an input type that accepts ChannelRawSettingsArgs, ChannelRawSettingsPtr and ChannelRawSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRawSettingsPtrInput` via:
//
//          ChannelRawSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRawSettingsPtrInput interface {
	pulumi.Input

	ToChannelRawSettingsPtrOutput() ChannelRawSettingsPtrOutput
	ToChannelRawSettingsPtrOutputWithContext(context.Context) ChannelRawSettingsPtrOutput
}

type channelRawSettingsPtrType ChannelRawSettingsArgs

func ChannelRawSettingsPtr(v *ChannelRawSettingsArgs) ChannelRawSettingsPtrInput {
	return (*channelRawSettingsPtrType)(v)
}

func (*channelRawSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRawSettings)(nil)).Elem()
}

func (i *channelRawSettingsPtrType) ToChannelRawSettingsPtrOutput() ChannelRawSettingsPtrOutput {
	return i.ToChannelRawSettingsPtrOutputWithContext(context.Background())
}

func (i *channelRawSettingsPtrType) ToChannelRawSettingsPtrOutputWithContext(ctx context.Context) ChannelRawSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRawSettingsPtrOutput)
}

type ChannelRawSettingsOutput struct{ *pulumi.OutputState }

func (ChannelRawSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRawSettings)(nil)).Elem()
}

func (o ChannelRawSettingsOutput) ToChannelRawSettingsOutput() ChannelRawSettingsOutput {
	return o
}

func (o ChannelRawSettingsOutput) ToChannelRawSettingsOutputWithContext(ctx context.Context) ChannelRawSettingsOutput {
	return o
}

func (o ChannelRawSettingsOutput) ToChannelRawSettingsPtrOutput() ChannelRawSettingsPtrOutput {
	return o.ToChannelRawSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRawSettingsOutput) ToChannelRawSettingsPtrOutputWithContext(ctx context.Context) ChannelRawSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRawSettings) *ChannelRawSettings {
		return &v
	}).(ChannelRawSettingsPtrOutput)
}

type ChannelRawSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRawSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRawSettings)(nil)).Elem()
}

func (o ChannelRawSettingsPtrOutput) ToChannelRawSettingsPtrOutput() ChannelRawSettingsPtrOutput {
	return o
}

func (o ChannelRawSettingsPtrOutput) ToChannelRawSettingsPtrOutputWithContext(ctx context.Context) ChannelRawSettingsPtrOutput {
	return o
}

func (o ChannelRawSettingsPtrOutput) Elem() ChannelRawSettingsOutput {
	return o.ApplyT(func(v *ChannelRawSettings) ChannelRawSettings {
		if v != nil {
			return *v
		}
		var ret ChannelRawSettings
		return ret
	}).(ChannelRawSettingsOutput)
}

type ChannelRec601Settings struct {
}

// ChannelRec601SettingsInput is an input type that accepts ChannelRec601SettingsArgs and ChannelRec601SettingsOutput values.
// You can construct a concrete instance of `ChannelRec601SettingsInput` via:
//
//          ChannelRec601SettingsArgs{...}
type ChannelRec601SettingsInput interface {
	pulumi.Input

	ToChannelRec601SettingsOutput() ChannelRec601SettingsOutput
	ToChannelRec601SettingsOutputWithContext(context.Context) ChannelRec601SettingsOutput
}

type ChannelRec601SettingsArgs struct {
}

func (ChannelRec601SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRec601Settings)(nil)).Elem()
}

func (i ChannelRec601SettingsArgs) ToChannelRec601SettingsOutput() ChannelRec601SettingsOutput {
	return i.ToChannelRec601SettingsOutputWithContext(context.Background())
}

func (i ChannelRec601SettingsArgs) ToChannelRec601SettingsOutputWithContext(ctx context.Context) ChannelRec601SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRec601SettingsOutput)
}

func (i ChannelRec601SettingsArgs) ToChannelRec601SettingsPtrOutput() ChannelRec601SettingsPtrOutput {
	return i.ToChannelRec601SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRec601SettingsArgs) ToChannelRec601SettingsPtrOutputWithContext(ctx context.Context) ChannelRec601SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRec601SettingsOutput).ToChannelRec601SettingsPtrOutputWithContext(ctx)
}

// ChannelRec601SettingsPtrInput is an input type that accepts ChannelRec601SettingsArgs, ChannelRec601SettingsPtr and ChannelRec601SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRec601SettingsPtrInput` via:
//
//          ChannelRec601SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRec601SettingsPtrInput interface {
	pulumi.Input

	ToChannelRec601SettingsPtrOutput() ChannelRec601SettingsPtrOutput
	ToChannelRec601SettingsPtrOutputWithContext(context.Context) ChannelRec601SettingsPtrOutput
}

type channelRec601SettingsPtrType ChannelRec601SettingsArgs

func ChannelRec601SettingsPtr(v *ChannelRec601SettingsArgs) ChannelRec601SettingsPtrInput {
	return (*channelRec601SettingsPtrType)(v)
}

func (*channelRec601SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRec601Settings)(nil)).Elem()
}

func (i *channelRec601SettingsPtrType) ToChannelRec601SettingsPtrOutput() ChannelRec601SettingsPtrOutput {
	return i.ToChannelRec601SettingsPtrOutputWithContext(context.Background())
}

func (i *channelRec601SettingsPtrType) ToChannelRec601SettingsPtrOutputWithContext(ctx context.Context) ChannelRec601SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRec601SettingsPtrOutput)
}

type ChannelRec601SettingsOutput struct{ *pulumi.OutputState }

func (ChannelRec601SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRec601Settings)(nil)).Elem()
}

func (o ChannelRec601SettingsOutput) ToChannelRec601SettingsOutput() ChannelRec601SettingsOutput {
	return o
}

func (o ChannelRec601SettingsOutput) ToChannelRec601SettingsOutputWithContext(ctx context.Context) ChannelRec601SettingsOutput {
	return o
}

func (o ChannelRec601SettingsOutput) ToChannelRec601SettingsPtrOutput() ChannelRec601SettingsPtrOutput {
	return o.ToChannelRec601SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRec601SettingsOutput) ToChannelRec601SettingsPtrOutputWithContext(ctx context.Context) ChannelRec601SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRec601Settings) *ChannelRec601Settings {
		return &v
	}).(ChannelRec601SettingsPtrOutput)
}

type ChannelRec601SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRec601SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRec601Settings)(nil)).Elem()
}

func (o ChannelRec601SettingsPtrOutput) ToChannelRec601SettingsPtrOutput() ChannelRec601SettingsPtrOutput {
	return o
}

func (o ChannelRec601SettingsPtrOutput) ToChannelRec601SettingsPtrOutputWithContext(ctx context.Context) ChannelRec601SettingsPtrOutput {
	return o
}

func (o ChannelRec601SettingsPtrOutput) Elem() ChannelRec601SettingsOutput {
	return o.ApplyT(func(v *ChannelRec601Settings) ChannelRec601Settings {
		if v != nil {
			return *v
		}
		var ret ChannelRec601Settings
		return ret
	}).(ChannelRec601SettingsOutput)
}

type ChannelRec709Settings struct {
}

// ChannelRec709SettingsInput is an input type that accepts ChannelRec709SettingsArgs and ChannelRec709SettingsOutput values.
// You can construct a concrete instance of `ChannelRec709SettingsInput` via:
//
//          ChannelRec709SettingsArgs{...}
type ChannelRec709SettingsInput interface {
	pulumi.Input

	ToChannelRec709SettingsOutput() ChannelRec709SettingsOutput
	ToChannelRec709SettingsOutputWithContext(context.Context) ChannelRec709SettingsOutput
}

type ChannelRec709SettingsArgs struct {
}

func (ChannelRec709SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRec709Settings)(nil)).Elem()
}

func (i ChannelRec709SettingsArgs) ToChannelRec709SettingsOutput() ChannelRec709SettingsOutput {
	return i.ToChannelRec709SettingsOutputWithContext(context.Background())
}

func (i ChannelRec709SettingsArgs) ToChannelRec709SettingsOutputWithContext(ctx context.Context) ChannelRec709SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRec709SettingsOutput)
}

func (i ChannelRec709SettingsArgs) ToChannelRec709SettingsPtrOutput() ChannelRec709SettingsPtrOutput {
	return i.ToChannelRec709SettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRec709SettingsArgs) ToChannelRec709SettingsPtrOutputWithContext(ctx context.Context) ChannelRec709SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRec709SettingsOutput).ToChannelRec709SettingsPtrOutputWithContext(ctx)
}

// ChannelRec709SettingsPtrInput is an input type that accepts ChannelRec709SettingsArgs, ChannelRec709SettingsPtr and ChannelRec709SettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRec709SettingsPtrInput` via:
//
//          ChannelRec709SettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRec709SettingsPtrInput interface {
	pulumi.Input

	ToChannelRec709SettingsPtrOutput() ChannelRec709SettingsPtrOutput
	ToChannelRec709SettingsPtrOutputWithContext(context.Context) ChannelRec709SettingsPtrOutput
}

type channelRec709SettingsPtrType ChannelRec709SettingsArgs

func ChannelRec709SettingsPtr(v *ChannelRec709SettingsArgs) ChannelRec709SettingsPtrInput {
	return (*channelRec709SettingsPtrType)(v)
}

func (*channelRec709SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRec709Settings)(nil)).Elem()
}

func (i *channelRec709SettingsPtrType) ToChannelRec709SettingsPtrOutput() ChannelRec709SettingsPtrOutput {
	return i.ToChannelRec709SettingsPtrOutputWithContext(context.Background())
}

func (i *channelRec709SettingsPtrType) ToChannelRec709SettingsPtrOutputWithContext(ctx context.Context) ChannelRec709SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRec709SettingsPtrOutput)
}

type ChannelRec709SettingsOutput struct{ *pulumi.OutputState }

func (ChannelRec709SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRec709Settings)(nil)).Elem()
}

func (o ChannelRec709SettingsOutput) ToChannelRec709SettingsOutput() ChannelRec709SettingsOutput {
	return o
}

func (o ChannelRec709SettingsOutput) ToChannelRec709SettingsOutputWithContext(ctx context.Context) ChannelRec709SettingsOutput {
	return o
}

func (o ChannelRec709SettingsOutput) ToChannelRec709SettingsPtrOutput() ChannelRec709SettingsPtrOutput {
	return o.ToChannelRec709SettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRec709SettingsOutput) ToChannelRec709SettingsPtrOutputWithContext(ctx context.Context) ChannelRec709SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRec709Settings) *ChannelRec709Settings {
		return &v
	}).(ChannelRec709SettingsPtrOutput)
}

type ChannelRec709SettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRec709SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRec709Settings)(nil)).Elem()
}

func (o ChannelRec709SettingsPtrOutput) ToChannelRec709SettingsPtrOutput() ChannelRec709SettingsPtrOutput {
	return o
}

func (o ChannelRec709SettingsPtrOutput) ToChannelRec709SettingsPtrOutputWithContext(ctx context.Context) ChannelRec709SettingsPtrOutput {
	return o
}

func (o ChannelRec709SettingsPtrOutput) Elem() ChannelRec709SettingsOutput {
	return o.ApplyT(func(v *ChannelRec709Settings) ChannelRec709Settings {
		if v != nil {
			return *v
		}
		var ret ChannelRec709Settings
		return ret
	}).(ChannelRec709SettingsOutput)
}

type ChannelRemixSettings struct {
	ChannelMappings []ChannelAudioChannelMapping `pulumi:"channelMappings"`
	ChannelsIn      *int                         `pulumi:"channelsIn"`
	ChannelsOut     *int                         `pulumi:"channelsOut"`
}

// ChannelRemixSettingsInput is an input type that accepts ChannelRemixSettingsArgs and ChannelRemixSettingsOutput values.
// You can construct a concrete instance of `ChannelRemixSettingsInput` via:
//
//          ChannelRemixSettingsArgs{...}
type ChannelRemixSettingsInput interface {
	pulumi.Input

	ToChannelRemixSettingsOutput() ChannelRemixSettingsOutput
	ToChannelRemixSettingsOutputWithContext(context.Context) ChannelRemixSettingsOutput
}

type ChannelRemixSettingsArgs struct {
	ChannelMappings ChannelAudioChannelMappingArrayInput `pulumi:"channelMappings"`
	ChannelsIn      pulumi.IntPtrInput                   `pulumi:"channelsIn"`
	ChannelsOut     pulumi.IntPtrInput                   `pulumi:"channelsOut"`
}

func (ChannelRemixSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRemixSettings)(nil)).Elem()
}

func (i ChannelRemixSettingsArgs) ToChannelRemixSettingsOutput() ChannelRemixSettingsOutput {
	return i.ToChannelRemixSettingsOutputWithContext(context.Background())
}

func (i ChannelRemixSettingsArgs) ToChannelRemixSettingsOutputWithContext(ctx context.Context) ChannelRemixSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRemixSettingsOutput)
}

func (i ChannelRemixSettingsArgs) ToChannelRemixSettingsPtrOutput() ChannelRemixSettingsPtrOutput {
	return i.ToChannelRemixSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRemixSettingsArgs) ToChannelRemixSettingsPtrOutputWithContext(ctx context.Context) ChannelRemixSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRemixSettingsOutput).ToChannelRemixSettingsPtrOutputWithContext(ctx)
}

// ChannelRemixSettingsPtrInput is an input type that accepts ChannelRemixSettingsArgs, ChannelRemixSettingsPtr and ChannelRemixSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRemixSettingsPtrInput` via:
//
//          ChannelRemixSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRemixSettingsPtrInput interface {
	pulumi.Input

	ToChannelRemixSettingsPtrOutput() ChannelRemixSettingsPtrOutput
	ToChannelRemixSettingsPtrOutputWithContext(context.Context) ChannelRemixSettingsPtrOutput
}

type channelRemixSettingsPtrType ChannelRemixSettingsArgs

func ChannelRemixSettingsPtr(v *ChannelRemixSettingsArgs) ChannelRemixSettingsPtrInput {
	return (*channelRemixSettingsPtrType)(v)
}

func (*channelRemixSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRemixSettings)(nil)).Elem()
}

func (i *channelRemixSettingsPtrType) ToChannelRemixSettingsPtrOutput() ChannelRemixSettingsPtrOutput {
	return i.ToChannelRemixSettingsPtrOutputWithContext(context.Background())
}

func (i *channelRemixSettingsPtrType) ToChannelRemixSettingsPtrOutputWithContext(ctx context.Context) ChannelRemixSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRemixSettingsPtrOutput)
}

type ChannelRemixSettingsOutput struct{ *pulumi.OutputState }

func (ChannelRemixSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRemixSettings)(nil)).Elem()
}

func (o ChannelRemixSettingsOutput) ToChannelRemixSettingsOutput() ChannelRemixSettingsOutput {
	return o
}

func (o ChannelRemixSettingsOutput) ToChannelRemixSettingsOutputWithContext(ctx context.Context) ChannelRemixSettingsOutput {
	return o
}

func (o ChannelRemixSettingsOutput) ToChannelRemixSettingsPtrOutput() ChannelRemixSettingsPtrOutput {
	return o.ToChannelRemixSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRemixSettingsOutput) ToChannelRemixSettingsPtrOutputWithContext(ctx context.Context) ChannelRemixSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRemixSettings) *ChannelRemixSettings {
		return &v
	}).(ChannelRemixSettingsPtrOutput)
}

func (o ChannelRemixSettingsOutput) ChannelMappings() ChannelAudioChannelMappingArrayOutput {
	return o.ApplyT(func(v ChannelRemixSettings) []ChannelAudioChannelMapping { return v.ChannelMappings }).(ChannelAudioChannelMappingArrayOutput)
}

func (o ChannelRemixSettingsOutput) ChannelsIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRemixSettings) *int { return v.ChannelsIn }).(pulumi.IntPtrOutput)
}

func (o ChannelRemixSettingsOutput) ChannelsOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRemixSettings) *int { return v.ChannelsOut }).(pulumi.IntPtrOutput)
}

type ChannelRemixSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRemixSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRemixSettings)(nil)).Elem()
}

func (o ChannelRemixSettingsPtrOutput) ToChannelRemixSettingsPtrOutput() ChannelRemixSettingsPtrOutput {
	return o
}

func (o ChannelRemixSettingsPtrOutput) ToChannelRemixSettingsPtrOutputWithContext(ctx context.Context) ChannelRemixSettingsPtrOutput {
	return o
}

func (o ChannelRemixSettingsPtrOutput) Elem() ChannelRemixSettingsOutput {
	return o.ApplyT(func(v *ChannelRemixSettings) ChannelRemixSettings {
		if v != nil {
			return *v
		}
		var ret ChannelRemixSettings
		return ret
	}).(ChannelRemixSettingsOutput)
}

func (o ChannelRemixSettingsPtrOutput) ChannelMappings() ChannelAudioChannelMappingArrayOutput {
	return o.ApplyT(func(v *ChannelRemixSettings) []ChannelAudioChannelMapping {
		if v == nil {
			return nil
		}
		return v.ChannelMappings
	}).(ChannelAudioChannelMappingArrayOutput)
}

func (o ChannelRemixSettingsPtrOutput) ChannelsIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRemixSettings) *int {
		if v == nil {
			return nil
		}
		return v.ChannelsIn
	}).(pulumi.IntPtrOutput)
}

func (o ChannelRemixSettingsPtrOutput) ChannelsOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRemixSettings) *int {
		if v == nil {
			return nil
		}
		return v.ChannelsOut
	}).(pulumi.IntPtrOutput)
}

type ChannelRtmpCaptionInfoDestinationSettings struct {
}

// ChannelRtmpCaptionInfoDestinationSettingsInput is an input type that accepts ChannelRtmpCaptionInfoDestinationSettingsArgs and ChannelRtmpCaptionInfoDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelRtmpCaptionInfoDestinationSettingsInput` via:
//
//          ChannelRtmpCaptionInfoDestinationSettingsArgs{...}
type ChannelRtmpCaptionInfoDestinationSettingsInput interface {
	pulumi.Input

	ToChannelRtmpCaptionInfoDestinationSettingsOutput() ChannelRtmpCaptionInfoDestinationSettingsOutput
	ToChannelRtmpCaptionInfoDestinationSettingsOutputWithContext(context.Context) ChannelRtmpCaptionInfoDestinationSettingsOutput
}

type ChannelRtmpCaptionInfoDestinationSettingsArgs struct {
}

func (ChannelRtmpCaptionInfoDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRtmpCaptionInfoDestinationSettings)(nil)).Elem()
}

func (i ChannelRtmpCaptionInfoDestinationSettingsArgs) ToChannelRtmpCaptionInfoDestinationSettingsOutput() ChannelRtmpCaptionInfoDestinationSettingsOutput {
	return i.ToChannelRtmpCaptionInfoDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelRtmpCaptionInfoDestinationSettingsArgs) ToChannelRtmpCaptionInfoDestinationSettingsOutputWithContext(ctx context.Context) ChannelRtmpCaptionInfoDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpCaptionInfoDestinationSettingsOutput)
}

func (i ChannelRtmpCaptionInfoDestinationSettingsArgs) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutput() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return i.ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRtmpCaptionInfoDestinationSettingsArgs) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpCaptionInfoDestinationSettingsOutput).ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelRtmpCaptionInfoDestinationSettingsPtrInput is an input type that accepts ChannelRtmpCaptionInfoDestinationSettingsArgs, ChannelRtmpCaptionInfoDestinationSettingsPtr and ChannelRtmpCaptionInfoDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRtmpCaptionInfoDestinationSettingsPtrInput` via:
//
//          ChannelRtmpCaptionInfoDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRtmpCaptionInfoDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelRtmpCaptionInfoDestinationSettingsPtrOutput() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput
	ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(context.Context) ChannelRtmpCaptionInfoDestinationSettingsPtrOutput
}

type channelRtmpCaptionInfoDestinationSettingsPtrType ChannelRtmpCaptionInfoDestinationSettingsArgs

func ChannelRtmpCaptionInfoDestinationSettingsPtr(v *ChannelRtmpCaptionInfoDestinationSettingsArgs) ChannelRtmpCaptionInfoDestinationSettingsPtrInput {
	return (*channelRtmpCaptionInfoDestinationSettingsPtrType)(v)
}

func (*channelRtmpCaptionInfoDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRtmpCaptionInfoDestinationSettings)(nil)).Elem()
}

func (i *channelRtmpCaptionInfoDestinationSettingsPtrType) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutput() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return i.ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelRtmpCaptionInfoDestinationSettingsPtrType) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpCaptionInfoDestinationSettingsPtrOutput)
}

type ChannelRtmpCaptionInfoDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelRtmpCaptionInfoDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRtmpCaptionInfoDestinationSettings)(nil)).Elem()
}

func (o ChannelRtmpCaptionInfoDestinationSettingsOutput) ToChannelRtmpCaptionInfoDestinationSettingsOutput() ChannelRtmpCaptionInfoDestinationSettingsOutput {
	return o
}

func (o ChannelRtmpCaptionInfoDestinationSettingsOutput) ToChannelRtmpCaptionInfoDestinationSettingsOutputWithContext(ctx context.Context) ChannelRtmpCaptionInfoDestinationSettingsOutput {
	return o
}

func (o ChannelRtmpCaptionInfoDestinationSettingsOutput) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutput() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return o.ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRtmpCaptionInfoDestinationSettingsOutput) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRtmpCaptionInfoDestinationSettings) *ChannelRtmpCaptionInfoDestinationSettings {
		return &v
	}).(ChannelRtmpCaptionInfoDestinationSettingsPtrOutput)
}

type ChannelRtmpCaptionInfoDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRtmpCaptionInfoDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRtmpCaptionInfoDestinationSettings)(nil)).Elem()
}

func (o ChannelRtmpCaptionInfoDestinationSettingsPtrOutput) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutput() ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return o
}

func (o ChannelRtmpCaptionInfoDestinationSettingsPtrOutput) ToChannelRtmpCaptionInfoDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpCaptionInfoDestinationSettingsPtrOutput {
	return o
}

func (o ChannelRtmpCaptionInfoDestinationSettingsPtrOutput) Elem() ChannelRtmpCaptionInfoDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelRtmpCaptionInfoDestinationSettings) ChannelRtmpCaptionInfoDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelRtmpCaptionInfoDestinationSettings
		return ret
	}).(ChannelRtmpCaptionInfoDestinationSettingsOutput)
}

type ChannelRtmpGroupSettings struct {
	AdMarkers            []string `pulumi:"adMarkers"`
	AuthenticationScheme *string  `pulumi:"authenticationScheme"`
	CacheFullBehavior    *string  `pulumi:"cacheFullBehavior"`
	CacheLength          *int     `pulumi:"cacheLength"`
	CaptionData          *string  `pulumi:"captionData"`
	InputLossAction      *string  `pulumi:"inputLossAction"`
	RestartDelay         *int     `pulumi:"restartDelay"`
}

// ChannelRtmpGroupSettingsInput is an input type that accepts ChannelRtmpGroupSettingsArgs and ChannelRtmpGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelRtmpGroupSettingsInput` via:
//
//          ChannelRtmpGroupSettingsArgs{...}
type ChannelRtmpGroupSettingsInput interface {
	pulumi.Input

	ToChannelRtmpGroupSettingsOutput() ChannelRtmpGroupSettingsOutput
	ToChannelRtmpGroupSettingsOutputWithContext(context.Context) ChannelRtmpGroupSettingsOutput
}

type ChannelRtmpGroupSettingsArgs struct {
	AdMarkers            pulumi.StringArrayInput `pulumi:"adMarkers"`
	AuthenticationScheme pulumi.StringPtrInput   `pulumi:"authenticationScheme"`
	CacheFullBehavior    pulumi.StringPtrInput   `pulumi:"cacheFullBehavior"`
	CacheLength          pulumi.IntPtrInput      `pulumi:"cacheLength"`
	CaptionData          pulumi.StringPtrInput   `pulumi:"captionData"`
	InputLossAction      pulumi.StringPtrInput   `pulumi:"inputLossAction"`
	RestartDelay         pulumi.IntPtrInput      `pulumi:"restartDelay"`
}

func (ChannelRtmpGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRtmpGroupSettings)(nil)).Elem()
}

func (i ChannelRtmpGroupSettingsArgs) ToChannelRtmpGroupSettingsOutput() ChannelRtmpGroupSettingsOutput {
	return i.ToChannelRtmpGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelRtmpGroupSettingsArgs) ToChannelRtmpGroupSettingsOutputWithContext(ctx context.Context) ChannelRtmpGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpGroupSettingsOutput)
}

func (i ChannelRtmpGroupSettingsArgs) ToChannelRtmpGroupSettingsPtrOutput() ChannelRtmpGroupSettingsPtrOutput {
	return i.ToChannelRtmpGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRtmpGroupSettingsArgs) ToChannelRtmpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpGroupSettingsOutput).ToChannelRtmpGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelRtmpGroupSettingsPtrInput is an input type that accepts ChannelRtmpGroupSettingsArgs, ChannelRtmpGroupSettingsPtr and ChannelRtmpGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRtmpGroupSettingsPtrInput` via:
//
//          ChannelRtmpGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRtmpGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelRtmpGroupSettingsPtrOutput() ChannelRtmpGroupSettingsPtrOutput
	ToChannelRtmpGroupSettingsPtrOutputWithContext(context.Context) ChannelRtmpGroupSettingsPtrOutput
}

type channelRtmpGroupSettingsPtrType ChannelRtmpGroupSettingsArgs

func ChannelRtmpGroupSettingsPtr(v *ChannelRtmpGroupSettingsArgs) ChannelRtmpGroupSettingsPtrInput {
	return (*channelRtmpGroupSettingsPtrType)(v)
}

func (*channelRtmpGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRtmpGroupSettings)(nil)).Elem()
}

func (i *channelRtmpGroupSettingsPtrType) ToChannelRtmpGroupSettingsPtrOutput() ChannelRtmpGroupSettingsPtrOutput {
	return i.ToChannelRtmpGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelRtmpGroupSettingsPtrType) ToChannelRtmpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpGroupSettingsPtrOutput)
}

type ChannelRtmpGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelRtmpGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRtmpGroupSettings)(nil)).Elem()
}

func (o ChannelRtmpGroupSettingsOutput) ToChannelRtmpGroupSettingsOutput() ChannelRtmpGroupSettingsOutput {
	return o
}

func (o ChannelRtmpGroupSettingsOutput) ToChannelRtmpGroupSettingsOutputWithContext(ctx context.Context) ChannelRtmpGroupSettingsOutput {
	return o
}

func (o ChannelRtmpGroupSettingsOutput) ToChannelRtmpGroupSettingsPtrOutput() ChannelRtmpGroupSettingsPtrOutput {
	return o.ToChannelRtmpGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRtmpGroupSettingsOutput) ToChannelRtmpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRtmpGroupSettings) *ChannelRtmpGroupSettings {
		return &v
	}).(ChannelRtmpGroupSettingsPtrOutput)
}

func (o ChannelRtmpGroupSettingsOutput) AdMarkers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) []string { return v.AdMarkers }).(pulumi.StringArrayOutput)
}

func (o ChannelRtmpGroupSettingsOutput) AuthenticationScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) *string { return v.AuthenticationScheme }).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsOutput) CacheFullBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) *string { return v.CacheFullBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsOutput) CacheLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) *int { return v.CacheLength }).(pulumi.IntPtrOutput)
}

func (o ChannelRtmpGroupSettingsOutput) CaptionData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) *string { return v.CaptionData }).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) *string { return v.InputLossAction }).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRtmpGroupSettings) *int { return v.RestartDelay }).(pulumi.IntPtrOutput)
}

type ChannelRtmpGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRtmpGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRtmpGroupSettings)(nil)).Elem()
}

func (o ChannelRtmpGroupSettingsPtrOutput) ToChannelRtmpGroupSettingsPtrOutput() ChannelRtmpGroupSettingsPtrOutput {
	return o
}

func (o ChannelRtmpGroupSettingsPtrOutput) ToChannelRtmpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpGroupSettingsPtrOutput {
	return o
}

func (o ChannelRtmpGroupSettingsPtrOutput) Elem() ChannelRtmpGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) ChannelRtmpGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelRtmpGroupSettings
		return ret
	}).(ChannelRtmpGroupSettingsOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) AdMarkers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) []string {
		if v == nil {
			return nil
		}
		return v.AdMarkers
	}).(pulumi.StringArrayOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) AuthenticationScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationScheme
	}).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) CacheFullBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.CacheFullBehavior
	}).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) CacheLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.CacheLength
	}).(pulumi.IntPtrOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) CaptionData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.CaptionData
	}).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputLossAction
	}).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpGroupSettingsPtrOutput) RestartDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.RestartDelay
	}).(pulumi.IntPtrOutput)
}

type ChannelRtmpOutputSettings struct {
	CertificateMode         *string                   `pulumi:"certificateMode"`
	ConnectionRetryInterval *int                      `pulumi:"connectionRetryInterval"`
	Destination             *ChannelOutputLocationRef `pulumi:"destination"`
	NumRetries              *int                      `pulumi:"numRetries"`
}

// ChannelRtmpOutputSettingsInput is an input type that accepts ChannelRtmpOutputSettingsArgs and ChannelRtmpOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelRtmpOutputSettingsInput` via:
//
//          ChannelRtmpOutputSettingsArgs{...}
type ChannelRtmpOutputSettingsInput interface {
	pulumi.Input

	ToChannelRtmpOutputSettingsOutput() ChannelRtmpOutputSettingsOutput
	ToChannelRtmpOutputSettingsOutputWithContext(context.Context) ChannelRtmpOutputSettingsOutput
}

type ChannelRtmpOutputSettingsArgs struct {
	CertificateMode         pulumi.StringPtrInput            `pulumi:"certificateMode"`
	ConnectionRetryInterval pulumi.IntPtrInput               `pulumi:"connectionRetryInterval"`
	Destination             ChannelOutputLocationRefPtrInput `pulumi:"destination"`
	NumRetries              pulumi.IntPtrInput               `pulumi:"numRetries"`
}

func (ChannelRtmpOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRtmpOutputSettings)(nil)).Elem()
}

func (i ChannelRtmpOutputSettingsArgs) ToChannelRtmpOutputSettingsOutput() ChannelRtmpOutputSettingsOutput {
	return i.ToChannelRtmpOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelRtmpOutputSettingsArgs) ToChannelRtmpOutputSettingsOutputWithContext(ctx context.Context) ChannelRtmpOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpOutputSettingsOutput)
}

func (i ChannelRtmpOutputSettingsArgs) ToChannelRtmpOutputSettingsPtrOutput() ChannelRtmpOutputSettingsPtrOutput {
	return i.ToChannelRtmpOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelRtmpOutputSettingsArgs) ToChannelRtmpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpOutputSettingsOutput).ToChannelRtmpOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelRtmpOutputSettingsPtrInput is an input type that accepts ChannelRtmpOutputSettingsArgs, ChannelRtmpOutputSettingsPtr and ChannelRtmpOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelRtmpOutputSettingsPtrInput` via:
//
//          ChannelRtmpOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelRtmpOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelRtmpOutputSettingsPtrOutput() ChannelRtmpOutputSettingsPtrOutput
	ToChannelRtmpOutputSettingsPtrOutputWithContext(context.Context) ChannelRtmpOutputSettingsPtrOutput
}

type channelRtmpOutputSettingsPtrType ChannelRtmpOutputSettingsArgs

func ChannelRtmpOutputSettingsPtr(v *ChannelRtmpOutputSettingsArgs) ChannelRtmpOutputSettingsPtrInput {
	return (*channelRtmpOutputSettingsPtrType)(v)
}

func (*channelRtmpOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRtmpOutputSettings)(nil)).Elem()
}

func (i *channelRtmpOutputSettingsPtrType) ToChannelRtmpOutputSettingsPtrOutput() ChannelRtmpOutputSettingsPtrOutput {
	return i.ToChannelRtmpOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelRtmpOutputSettingsPtrType) ToChannelRtmpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRtmpOutputSettingsPtrOutput)
}

type ChannelRtmpOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelRtmpOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRtmpOutputSettings)(nil)).Elem()
}

func (o ChannelRtmpOutputSettingsOutput) ToChannelRtmpOutputSettingsOutput() ChannelRtmpOutputSettingsOutput {
	return o
}

func (o ChannelRtmpOutputSettingsOutput) ToChannelRtmpOutputSettingsOutputWithContext(ctx context.Context) ChannelRtmpOutputSettingsOutput {
	return o
}

func (o ChannelRtmpOutputSettingsOutput) ToChannelRtmpOutputSettingsPtrOutput() ChannelRtmpOutputSettingsPtrOutput {
	return o.ToChannelRtmpOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelRtmpOutputSettingsOutput) ToChannelRtmpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRtmpOutputSettings) *ChannelRtmpOutputSettings {
		return &v
	}).(ChannelRtmpOutputSettingsPtrOutput)
}

func (o ChannelRtmpOutputSettingsOutput) CertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelRtmpOutputSettings) *string { return v.CertificateMode }).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpOutputSettingsOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRtmpOutputSettings) *int { return v.ConnectionRetryInterval }).(pulumi.IntPtrOutput)
}

func (o ChannelRtmpOutputSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelRtmpOutputSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelRtmpOutputSettingsOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRtmpOutputSettings) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

type ChannelRtmpOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelRtmpOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRtmpOutputSettings)(nil)).Elem()
}

func (o ChannelRtmpOutputSettingsPtrOutput) ToChannelRtmpOutputSettingsPtrOutput() ChannelRtmpOutputSettingsPtrOutput {
	return o
}

func (o ChannelRtmpOutputSettingsPtrOutput) ToChannelRtmpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelRtmpOutputSettingsPtrOutput {
	return o
}

func (o ChannelRtmpOutputSettingsPtrOutput) Elem() ChannelRtmpOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelRtmpOutputSettings) ChannelRtmpOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelRtmpOutputSettings
		return ret
	}).(ChannelRtmpOutputSettingsOutput)
}

func (o ChannelRtmpOutputSettingsPtrOutput) CertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpOutputSettings) *string {
		if v == nil {
			return nil
		}
		return v.CertificateMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelRtmpOutputSettingsPtrOutput) ConnectionRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpOutputSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionRetryInterval
	}).(pulumi.IntPtrOutput)
}

func (o ChannelRtmpOutputSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpOutputSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelRtmpOutputSettingsPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRtmpOutputSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

type ChannelScte20PlusEmbeddedDestinationSettings struct {
}

// ChannelScte20PlusEmbeddedDestinationSettingsInput is an input type that accepts ChannelScte20PlusEmbeddedDestinationSettingsArgs and ChannelScte20PlusEmbeddedDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelScte20PlusEmbeddedDestinationSettingsInput` via:
//
//          ChannelScte20PlusEmbeddedDestinationSettingsArgs{...}
type ChannelScte20PlusEmbeddedDestinationSettingsInput interface {
	pulumi.Input

	ToChannelScte20PlusEmbeddedDestinationSettingsOutput() ChannelScte20PlusEmbeddedDestinationSettingsOutput
	ToChannelScte20PlusEmbeddedDestinationSettingsOutputWithContext(context.Context) ChannelScte20PlusEmbeddedDestinationSettingsOutput
}

type ChannelScte20PlusEmbeddedDestinationSettingsArgs struct {
}

func (ChannelScte20PlusEmbeddedDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte20PlusEmbeddedDestinationSettings)(nil)).Elem()
}

func (i ChannelScte20PlusEmbeddedDestinationSettingsArgs) ToChannelScte20PlusEmbeddedDestinationSettingsOutput() ChannelScte20PlusEmbeddedDestinationSettingsOutput {
	return i.ToChannelScte20PlusEmbeddedDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelScte20PlusEmbeddedDestinationSettingsArgs) ToChannelScte20PlusEmbeddedDestinationSettingsOutputWithContext(ctx context.Context) ChannelScte20PlusEmbeddedDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte20PlusEmbeddedDestinationSettingsOutput)
}

func (i ChannelScte20PlusEmbeddedDestinationSettingsArgs) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutput() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return i.ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelScte20PlusEmbeddedDestinationSettingsArgs) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte20PlusEmbeddedDestinationSettingsOutput).ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelScte20PlusEmbeddedDestinationSettingsPtrInput is an input type that accepts ChannelScte20PlusEmbeddedDestinationSettingsArgs, ChannelScte20PlusEmbeddedDestinationSettingsPtr and ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelScte20PlusEmbeddedDestinationSettingsPtrInput` via:
//
//          ChannelScte20PlusEmbeddedDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelScte20PlusEmbeddedDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutput() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput
	ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(context.Context) ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput
}

type channelScte20PlusEmbeddedDestinationSettingsPtrType ChannelScte20PlusEmbeddedDestinationSettingsArgs

func ChannelScte20PlusEmbeddedDestinationSettingsPtr(v *ChannelScte20PlusEmbeddedDestinationSettingsArgs) ChannelScte20PlusEmbeddedDestinationSettingsPtrInput {
	return (*channelScte20PlusEmbeddedDestinationSettingsPtrType)(v)
}

func (*channelScte20PlusEmbeddedDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte20PlusEmbeddedDestinationSettings)(nil)).Elem()
}

func (i *channelScte20PlusEmbeddedDestinationSettingsPtrType) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutput() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return i.ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelScte20PlusEmbeddedDestinationSettingsPtrType) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput)
}

type ChannelScte20PlusEmbeddedDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelScte20PlusEmbeddedDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte20PlusEmbeddedDestinationSettings)(nil)).Elem()
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsOutput) ToChannelScte20PlusEmbeddedDestinationSettingsOutput() ChannelScte20PlusEmbeddedDestinationSettingsOutput {
	return o
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsOutput) ToChannelScte20PlusEmbeddedDestinationSettingsOutputWithContext(ctx context.Context) ChannelScte20PlusEmbeddedDestinationSettingsOutput {
	return o
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsOutput) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutput() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return o.ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsOutput) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelScte20PlusEmbeddedDestinationSettings) *ChannelScte20PlusEmbeddedDestinationSettings {
		return &v
	}).(ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput)
}

type ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte20PlusEmbeddedDestinationSettings)(nil)).Elem()
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutput() ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return o
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput) ToChannelScte20PlusEmbeddedDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput {
	return o
}

func (o ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput) Elem() ChannelScte20PlusEmbeddedDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelScte20PlusEmbeddedDestinationSettings) ChannelScte20PlusEmbeddedDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelScte20PlusEmbeddedDestinationSettings
		return ret
	}).(ChannelScte20PlusEmbeddedDestinationSettingsOutput)
}

type ChannelScte20SourceSettings struct {
	Convert608To708        *string `pulumi:"convert608To708"`
	Source608ChannelNumber *int    `pulumi:"source608ChannelNumber"`
}

// ChannelScte20SourceSettingsInput is an input type that accepts ChannelScte20SourceSettingsArgs and ChannelScte20SourceSettingsOutput values.
// You can construct a concrete instance of `ChannelScte20SourceSettingsInput` via:
//
//          ChannelScte20SourceSettingsArgs{...}
type ChannelScte20SourceSettingsInput interface {
	pulumi.Input

	ToChannelScte20SourceSettingsOutput() ChannelScte20SourceSettingsOutput
	ToChannelScte20SourceSettingsOutputWithContext(context.Context) ChannelScte20SourceSettingsOutput
}

type ChannelScte20SourceSettingsArgs struct {
	Convert608To708        pulumi.StringPtrInput `pulumi:"convert608To708"`
	Source608ChannelNumber pulumi.IntPtrInput    `pulumi:"source608ChannelNumber"`
}

func (ChannelScte20SourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte20SourceSettings)(nil)).Elem()
}

func (i ChannelScte20SourceSettingsArgs) ToChannelScte20SourceSettingsOutput() ChannelScte20SourceSettingsOutput {
	return i.ToChannelScte20SourceSettingsOutputWithContext(context.Background())
}

func (i ChannelScte20SourceSettingsArgs) ToChannelScte20SourceSettingsOutputWithContext(ctx context.Context) ChannelScte20SourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte20SourceSettingsOutput)
}

func (i ChannelScte20SourceSettingsArgs) ToChannelScte20SourceSettingsPtrOutput() ChannelScte20SourceSettingsPtrOutput {
	return i.ToChannelScte20SourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelScte20SourceSettingsArgs) ToChannelScte20SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20SourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte20SourceSettingsOutput).ToChannelScte20SourceSettingsPtrOutputWithContext(ctx)
}

// ChannelScte20SourceSettingsPtrInput is an input type that accepts ChannelScte20SourceSettingsArgs, ChannelScte20SourceSettingsPtr and ChannelScte20SourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelScte20SourceSettingsPtrInput` via:
//
//          ChannelScte20SourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelScte20SourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelScte20SourceSettingsPtrOutput() ChannelScte20SourceSettingsPtrOutput
	ToChannelScte20SourceSettingsPtrOutputWithContext(context.Context) ChannelScte20SourceSettingsPtrOutput
}

type channelScte20SourceSettingsPtrType ChannelScte20SourceSettingsArgs

func ChannelScte20SourceSettingsPtr(v *ChannelScte20SourceSettingsArgs) ChannelScte20SourceSettingsPtrInput {
	return (*channelScte20SourceSettingsPtrType)(v)
}

func (*channelScte20SourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte20SourceSettings)(nil)).Elem()
}

func (i *channelScte20SourceSettingsPtrType) ToChannelScte20SourceSettingsPtrOutput() ChannelScte20SourceSettingsPtrOutput {
	return i.ToChannelScte20SourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelScte20SourceSettingsPtrType) ToChannelScte20SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20SourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte20SourceSettingsPtrOutput)
}

type ChannelScte20SourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelScte20SourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte20SourceSettings)(nil)).Elem()
}

func (o ChannelScte20SourceSettingsOutput) ToChannelScte20SourceSettingsOutput() ChannelScte20SourceSettingsOutput {
	return o
}

func (o ChannelScte20SourceSettingsOutput) ToChannelScte20SourceSettingsOutputWithContext(ctx context.Context) ChannelScte20SourceSettingsOutput {
	return o
}

func (o ChannelScte20SourceSettingsOutput) ToChannelScte20SourceSettingsPtrOutput() ChannelScte20SourceSettingsPtrOutput {
	return o.ToChannelScte20SourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelScte20SourceSettingsOutput) ToChannelScte20SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20SourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelScte20SourceSettings) *ChannelScte20SourceSettings {
		return &v
	}).(ChannelScte20SourceSettingsPtrOutput)
}

func (o ChannelScte20SourceSettingsOutput) Convert608To708() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelScte20SourceSettings) *string { return v.Convert608To708 }).(pulumi.StringPtrOutput)
}

func (o ChannelScte20SourceSettingsOutput) Source608ChannelNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelScte20SourceSettings) *int { return v.Source608ChannelNumber }).(pulumi.IntPtrOutput)
}

type ChannelScte20SourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelScte20SourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte20SourceSettings)(nil)).Elem()
}

func (o ChannelScte20SourceSettingsPtrOutput) ToChannelScte20SourceSettingsPtrOutput() ChannelScte20SourceSettingsPtrOutput {
	return o
}

func (o ChannelScte20SourceSettingsPtrOutput) ToChannelScte20SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte20SourceSettingsPtrOutput {
	return o
}

func (o ChannelScte20SourceSettingsPtrOutput) Elem() ChannelScte20SourceSettingsOutput {
	return o.ApplyT(func(v *ChannelScte20SourceSettings) ChannelScte20SourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelScte20SourceSettings
		return ret
	}).(ChannelScte20SourceSettingsOutput)
}

func (o ChannelScte20SourceSettingsPtrOutput) Convert608To708() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelScte20SourceSettings) *string {
		if v == nil {
			return nil
		}
		return v.Convert608To708
	}).(pulumi.StringPtrOutput)
}

func (o ChannelScte20SourceSettingsPtrOutput) Source608ChannelNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelScte20SourceSettings) *int {
		if v == nil {
			return nil
		}
		return v.Source608ChannelNumber
	}).(pulumi.IntPtrOutput)
}

type ChannelScte27DestinationSettings struct {
}

// ChannelScte27DestinationSettingsInput is an input type that accepts ChannelScte27DestinationSettingsArgs and ChannelScte27DestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelScte27DestinationSettingsInput` via:
//
//          ChannelScte27DestinationSettingsArgs{...}
type ChannelScte27DestinationSettingsInput interface {
	pulumi.Input

	ToChannelScte27DestinationSettingsOutput() ChannelScte27DestinationSettingsOutput
	ToChannelScte27DestinationSettingsOutputWithContext(context.Context) ChannelScte27DestinationSettingsOutput
}

type ChannelScte27DestinationSettingsArgs struct {
}

func (ChannelScte27DestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte27DestinationSettings)(nil)).Elem()
}

func (i ChannelScte27DestinationSettingsArgs) ToChannelScte27DestinationSettingsOutput() ChannelScte27DestinationSettingsOutput {
	return i.ToChannelScte27DestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelScte27DestinationSettingsArgs) ToChannelScte27DestinationSettingsOutputWithContext(ctx context.Context) ChannelScte27DestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte27DestinationSettingsOutput)
}

func (i ChannelScte27DestinationSettingsArgs) ToChannelScte27DestinationSettingsPtrOutput() ChannelScte27DestinationSettingsPtrOutput {
	return i.ToChannelScte27DestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelScte27DestinationSettingsArgs) ToChannelScte27DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27DestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte27DestinationSettingsOutput).ToChannelScte27DestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelScte27DestinationSettingsPtrInput is an input type that accepts ChannelScte27DestinationSettingsArgs, ChannelScte27DestinationSettingsPtr and ChannelScte27DestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelScte27DestinationSettingsPtrInput` via:
//
//          ChannelScte27DestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelScte27DestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelScte27DestinationSettingsPtrOutput() ChannelScte27DestinationSettingsPtrOutput
	ToChannelScte27DestinationSettingsPtrOutputWithContext(context.Context) ChannelScte27DestinationSettingsPtrOutput
}

type channelScte27DestinationSettingsPtrType ChannelScte27DestinationSettingsArgs

func ChannelScte27DestinationSettingsPtr(v *ChannelScte27DestinationSettingsArgs) ChannelScte27DestinationSettingsPtrInput {
	return (*channelScte27DestinationSettingsPtrType)(v)
}

func (*channelScte27DestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte27DestinationSettings)(nil)).Elem()
}

func (i *channelScte27DestinationSettingsPtrType) ToChannelScte27DestinationSettingsPtrOutput() ChannelScte27DestinationSettingsPtrOutput {
	return i.ToChannelScte27DestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelScte27DestinationSettingsPtrType) ToChannelScte27DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27DestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte27DestinationSettingsPtrOutput)
}

type ChannelScte27DestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelScte27DestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte27DestinationSettings)(nil)).Elem()
}

func (o ChannelScte27DestinationSettingsOutput) ToChannelScte27DestinationSettingsOutput() ChannelScte27DestinationSettingsOutput {
	return o
}

func (o ChannelScte27DestinationSettingsOutput) ToChannelScte27DestinationSettingsOutputWithContext(ctx context.Context) ChannelScte27DestinationSettingsOutput {
	return o
}

func (o ChannelScte27DestinationSettingsOutput) ToChannelScte27DestinationSettingsPtrOutput() ChannelScte27DestinationSettingsPtrOutput {
	return o.ToChannelScte27DestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelScte27DestinationSettingsOutput) ToChannelScte27DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27DestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelScte27DestinationSettings) *ChannelScte27DestinationSettings {
		return &v
	}).(ChannelScte27DestinationSettingsPtrOutput)
}

type ChannelScte27DestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelScte27DestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte27DestinationSettings)(nil)).Elem()
}

func (o ChannelScte27DestinationSettingsPtrOutput) ToChannelScte27DestinationSettingsPtrOutput() ChannelScte27DestinationSettingsPtrOutput {
	return o
}

func (o ChannelScte27DestinationSettingsPtrOutput) ToChannelScte27DestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27DestinationSettingsPtrOutput {
	return o
}

func (o ChannelScte27DestinationSettingsPtrOutput) Elem() ChannelScte27DestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelScte27DestinationSettings) ChannelScte27DestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelScte27DestinationSettings
		return ret
	}).(ChannelScte27DestinationSettingsOutput)
}

type ChannelScte27SourceSettings struct {
	Pid *int `pulumi:"pid"`
}

// ChannelScte27SourceSettingsInput is an input type that accepts ChannelScte27SourceSettingsArgs and ChannelScte27SourceSettingsOutput values.
// You can construct a concrete instance of `ChannelScte27SourceSettingsInput` via:
//
//          ChannelScte27SourceSettingsArgs{...}
type ChannelScte27SourceSettingsInput interface {
	pulumi.Input

	ToChannelScte27SourceSettingsOutput() ChannelScte27SourceSettingsOutput
	ToChannelScte27SourceSettingsOutputWithContext(context.Context) ChannelScte27SourceSettingsOutput
}

type ChannelScte27SourceSettingsArgs struct {
	Pid pulumi.IntPtrInput `pulumi:"pid"`
}

func (ChannelScte27SourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte27SourceSettings)(nil)).Elem()
}

func (i ChannelScte27SourceSettingsArgs) ToChannelScte27SourceSettingsOutput() ChannelScte27SourceSettingsOutput {
	return i.ToChannelScte27SourceSettingsOutputWithContext(context.Background())
}

func (i ChannelScte27SourceSettingsArgs) ToChannelScte27SourceSettingsOutputWithContext(ctx context.Context) ChannelScte27SourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte27SourceSettingsOutput)
}

func (i ChannelScte27SourceSettingsArgs) ToChannelScte27SourceSettingsPtrOutput() ChannelScte27SourceSettingsPtrOutput {
	return i.ToChannelScte27SourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelScte27SourceSettingsArgs) ToChannelScte27SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27SourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte27SourceSettingsOutput).ToChannelScte27SourceSettingsPtrOutputWithContext(ctx)
}

// ChannelScte27SourceSettingsPtrInput is an input type that accepts ChannelScte27SourceSettingsArgs, ChannelScte27SourceSettingsPtr and ChannelScte27SourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelScte27SourceSettingsPtrInput` via:
//
//          ChannelScte27SourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelScte27SourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelScte27SourceSettingsPtrOutput() ChannelScte27SourceSettingsPtrOutput
	ToChannelScte27SourceSettingsPtrOutputWithContext(context.Context) ChannelScte27SourceSettingsPtrOutput
}

type channelScte27SourceSettingsPtrType ChannelScte27SourceSettingsArgs

func ChannelScte27SourceSettingsPtr(v *ChannelScte27SourceSettingsArgs) ChannelScte27SourceSettingsPtrInput {
	return (*channelScte27SourceSettingsPtrType)(v)
}

func (*channelScte27SourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte27SourceSettings)(nil)).Elem()
}

func (i *channelScte27SourceSettingsPtrType) ToChannelScte27SourceSettingsPtrOutput() ChannelScte27SourceSettingsPtrOutput {
	return i.ToChannelScte27SourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelScte27SourceSettingsPtrType) ToChannelScte27SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27SourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte27SourceSettingsPtrOutput)
}

type ChannelScte27SourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelScte27SourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte27SourceSettings)(nil)).Elem()
}

func (o ChannelScte27SourceSettingsOutput) ToChannelScte27SourceSettingsOutput() ChannelScte27SourceSettingsOutput {
	return o
}

func (o ChannelScte27SourceSettingsOutput) ToChannelScte27SourceSettingsOutputWithContext(ctx context.Context) ChannelScte27SourceSettingsOutput {
	return o
}

func (o ChannelScte27SourceSettingsOutput) ToChannelScte27SourceSettingsPtrOutput() ChannelScte27SourceSettingsPtrOutput {
	return o.ToChannelScte27SourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelScte27SourceSettingsOutput) ToChannelScte27SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27SourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelScte27SourceSettings) *ChannelScte27SourceSettings {
		return &v
	}).(ChannelScte27SourceSettingsPtrOutput)
}

func (o ChannelScte27SourceSettingsOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelScte27SourceSettings) *int { return v.Pid }).(pulumi.IntPtrOutput)
}

type ChannelScte27SourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelScte27SourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte27SourceSettings)(nil)).Elem()
}

func (o ChannelScte27SourceSettingsPtrOutput) ToChannelScte27SourceSettingsPtrOutput() ChannelScte27SourceSettingsPtrOutput {
	return o
}

func (o ChannelScte27SourceSettingsPtrOutput) ToChannelScte27SourceSettingsPtrOutputWithContext(ctx context.Context) ChannelScte27SourceSettingsPtrOutput {
	return o
}

func (o ChannelScte27SourceSettingsPtrOutput) Elem() ChannelScte27SourceSettingsOutput {
	return o.ApplyT(func(v *ChannelScte27SourceSettings) ChannelScte27SourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelScte27SourceSettings
		return ret
	}).(ChannelScte27SourceSettingsOutput)
}

func (o ChannelScte27SourceSettingsPtrOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelScte27SourceSettings) *int {
		if v == nil {
			return nil
		}
		return v.Pid
	}).(pulumi.IntPtrOutput)
}

type ChannelScte35SpliceInsert struct {
	AdAvailOffset          *int    `pulumi:"adAvailOffset"`
	NoRegionalBlackoutFlag *string `pulumi:"noRegionalBlackoutFlag"`
	WebDeliveryAllowedFlag *string `pulumi:"webDeliveryAllowedFlag"`
}

// ChannelScte35SpliceInsertInput is an input type that accepts ChannelScte35SpliceInsertArgs and ChannelScte35SpliceInsertOutput values.
// You can construct a concrete instance of `ChannelScte35SpliceInsertInput` via:
//
//          ChannelScte35SpliceInsertArgs{...}
type ChannelScte35SpliceInsertInput interface {
	pulumi.Input

	ToChannelScte35SpliceInsertOutput() ChannelScte35SpliceInsertOutput
	ToChannelScte35SpliceInsertOutputWithContext(context.Context) ChannelScte35SpliceInsertOutput
}

type ChannelScte35SpliceInsertArgs struct {
	AdAvailOffset          pulumi.IntPtrInput    `pulumi:"adAvailOffset"`
	NoRegionalBlackoutFlag pulumi.StringPtrInput `pulumi:"noRegionalBlackoutFlag"`
	WebDeliveryAllowedFlag pulumi.StringPtrInput `pulumi:"webDeliveryAllowedFlag"`
}

func (ChannelScte35SpliceInsertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte35SpliceInsert)(nil)).Elem()
}

func (i ChannelScte35SpliceInsertArgs) ToChannelScte35SpliceInsertOutput() ChannelScte35SpliceInsertOutput {
	return i.ToChannelScte35SpliceInsertOutputWithContext(context.Background())
}

func (i ChannelScte35SpliceInsertArgs) ToChannelScte35SpliceInsertOutputWithContext(ctx context.Context) ChannelScte35SpliceInsertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte35SpliceInsertOutput)
}

func (i ChannelScte35SpliceInsertArgs) ToChannelScte35SpliceInsertPtrOutput() ChannelScte35SpliceInsertPtrOutput {
	return i.ToChannelScte35SpliceInsertPtrOutputWithContext(context.Background())
}

func (i ChannelScte35SpliceInsertArgs) ToChannelScte35SpliceInsertPtrOutputWithContext(ctx context.Context) ChannelScte35SpliceInsertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte35SpliceInsertOutput).ToChannelScte35SpliceInsertPtrOutputWithContext(ctx)
}

// ChannelScte35SpliceInsertPtrInput is an input type that accepts ChannelScte35SpliceInsertArgs, ChannelScte35SpliceInsertPtr and ChannelScte35SpliceInsertPtrOutput values.
// You can construct a concrete instance of `ChannelScte35SpliceInsertPtrInput` via:
//
//          ChannelScte35SpliceInsertArgs{...}
//
//  or:
//
//          nil
type ChannelScte35SpliceInsertPtrInput interface {
	pulumi.Input

	ToChannelScte35SpliceInsertPtrOutput() ChannelScte35SpliceInsertPtrOutput
	ToChannelScte35SpliceInsertPtrOutputWithContext(context.Context) ChannelScte35SpliceInsertPtrOutput
}

type channelScte35SpliceInsertPtrType ChannelScte35SpliceInsertArgs

func ChannelScte35SpliceInsertPtr(v *ChannelScte35SpliceInsertArgs) ChannelScte35SpliceInsertPtrInput {
	return (*channelScte35SpliceInsertPtrType)(v)
}

func (*channelScte35SpliceInsertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte35SpliceInsert)(nil)).Elem()
}

func (i *channelScte35SpliceInsertPtrType) ToChannelScte35SpliceInsertPtrOutput() ChannelScte35SpliceInsertPtrOutput {
	return i.ToChannelScte35SpliceInsertPtrOutputWithContext(context.Background())
}

func (i *channelScte35SpliceInsertPtrType) ToChannelScte35SpliceInsertPtrOutputWithContext(ctx context.Context) ChannelScte35SpliceInsertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte35SpliceInsertPtrOutput)
}

type ChannelScte35SpliceInsertOutput struct{ *pulumi.OutputState }

func (ChannelScte35SpliceInsertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte35SpliceInsert)(nil)).Elem()
}

func (o ChannelScte35SpliceInsertOutput) ToChannelScte35SpliceInsertOutput() ChannelScte35SpliceInsertOutput {
	return o
}

func (o ChannelScte35SpliceInsertOutput) ToChannelScte35SpliceInsertOutputWithContext(ctx context.Context) ChannelScte35SpliceInsertOutput {
	return o
}

func (o ChannelScte35SpliceInsertOutput) ToChannelScte35SpliceInsertPtrOutput() ChannelScte35SpliceInsertPtrOutput {
	return o.ToChannelScte35SpliceInsertPtrOutputWithContext(context.Background())
}

func (o ChannelScte35SpliceInsertOutput) ToChannelScte35SpliceInsertPtrOutputWithContext(ctx context.Context) ChannelScte35SpliceInsertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelScte35SpliceInsert) *ChannelScte35SpliceInsert {
		return &v
	}).(ChannelScte35SpliceInsertPtrOutput)
}

func (o ChannelScte35SpliceInsertOutput) AdAvailOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelScte35SpliceInsert) *int { return v.AdAvailOffset }).(pulumi.IntPtrOutput)
}

func (o ChannelScte35SpliceInsertOutput) NoRegionalBlackoutFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelScte35SpliceInsert) *string { return v.NoRegionalBlackoutFlag }).(pulumi.StringPtrOutput)
}

func (o ChannelScte35SpliceInsertOutput) WebDeliveryAllowedFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelScte35SpliceInsert) *string { return v.WebDeliveryAllowedFlag }).(pulumi.StringPtrOutput)
}

type ChannelScte35SpliceInsertPtrOutput struct{ *pulumi.OutputState }

func (ChannelScte35SpliceInsertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte35SpliceInsert)(nil)).Elem()
}

func (o ChannelScte35SpliceInsertPtrOutput) ToChannelScte35SpliceInsertPtrOutput() ChannelScte35SpliceInsertPtrOutput {
	return o
}

func (o ChannelScte35SpliceInsertPtrOutput) ToChannelScte35SpliceInsertPtrOutputWithContext(ctx context.Context) ChannelScte35SpliceInsertPtrOutput {
	return o
}

func (o ChannelScte35SpliceInsertPtrOutput) Elem() ChannelScte35SpliceInsertOutput {
	return o.ApplyT(func(v *ChannelScte35SpliceInsert) ChannelScte35SpliceInsert {
		if v != nil {
			return *v
		}
		var ret ChannelScte35SpliceInsert
		return ret
	}).(ChannelScte35SpliceInsertOutput)
}

func (o ChannelScte35SpliceInsertPtrOutput) AdAvailOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelScte35SpliceInsert) *int {
		if v == nil {
			return nil
		}
		return v.AdAvailOffset
	}).(pulumi.IntPtrOutput)
}

func (o ChannelScte35SpliceInsertPtrOutput) NoRegionalBlackoutFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelScte35SpliceInsert) *string {
		if v == nil {
			return nil
		}
		return v.NoRegionalBlackoutFlag
	}).(pulumi.StringPtrOutput)
}

func (o ChannelScte35SpliceInsertPtrOutput) WebDeliveryAllowedFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelScte35SpliceInsert) *string {
		if v == nil {
			return nil
		}
		return v.WebDeliveryAllowedFlag
	}).(pulumi.StringPtrOutput)
}

type ChannelScte35TimeSignalApos struct {
	AdAvailOffset          *int    `pulumi:"adAvailOffset"`
	NoRegionalBlackoutFlag *string `pulumi:"noRegionalBlackoutFlag"`
	WebDeliveryAllowedFlag *string `pulumi:"webDeliveryAllowedFlag"`
}

// ChannelScte35TimeSignalAposInput is an input type that accepts ChannelScte35TimeSignalAposArgs and ChannelScte35TimeSignalAposOutput values.
// You can construct a concrete instance of `ChannelScte35TimeSignalAposInput` via:
//
//          ChannelScte35TimeSignalAposArgs{...}
type ChannelScte35TimeSignalAposInput interface {
	pulumi.Input

	ToChannelScte35TimeSignalAposOutput() ChannelScte35TimeSignalAposOutput
	ToChannelScte35TimeSignalAposOutputWithContext(context.Context) ChannelScte35TimeSignalAposOutput
}

type ChannelScte35TimeSignalAposArgs struct {
	AdAvailOffset          pulumi.IntPtrInput    `pulumi:"adAvailOffset"`
	NoRegionalBlackoutFlag pulumi.StringPtrInput `pulumi:"noRegionalBlackoutFlag"`
	WebDeliveryAllowedFlag pulumi.StringPtrInput `pulumi:"webDeliveryAllowedFlag"`
}

func (ChannelScte35TimeSignalAposArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte35TimeSignalApos)(nil)).Elem()
}

func (i ChannelScte35TimeSignalAposArgs) ToChannelScte35TimeSignalAposOutput() ChannelScte35TimeSignalAposOutput {
	return i.ToChannelScte35TimeSignalAposOutputWithContext(context.Background())
}

func (i ChannelScte35TimeSignalAposArgs) ToChannelScte35TimeSignalAposOutputWithContext(ctx context.Context) ChannelScte35TimeSignalAposOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte35TimeSignalAposOutput)
}

func (i ChannelScte35TimeSignalAposArgs) ToChannelScte35TimeSignalAposPtrOutput() ChannelScte35TimeSignalAposPtrOutput {
	return i.ToChannelScte35TimeSignalAposPtrOutputWithContext(context.Background())
}

func (i ChannelScte35TimeSignalAposArgs) ToChannelScte35TimeSignalAposPtrOutputWithContext(ctx context.Context) ChannelScte35TimeSignalAposPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte35TimeSignalAposOutput).ToChannelScte35TimeSignalAposPtrOutputWithContext(ctx)
}

// ChannelScte35TimeSignalAposPtrInput is an input type that accepts ChannelScte35TimeSignalAposArgs, ChannelScte35TimeSignalAposPtr and ChannelScte35TimeSignalAposPtrOutput values.
// You can construct a concrete instance of `ChannelScte35TimeSignalAposPtrInput` via:
//
//          ChannelScte35TimeSignalAposArgs{...}
//
//  or:
//
//          nil
type ChannelScte35TimeSignalAposPtrInput interface {
	pulumi.Input

	ToChannelScte35TimeSignalAposPtrOutput() ChannelScte35TimeSignalAposPtrOutput
	ToChannelScte35TimeSignalAposPtrOutputWithContext(context.Context) ChannelScte35TimeSignalAposPtrOutput
}

type channelScte35TimeSignalAposPtrType ChannelScte35TimeSignalAposArgs

func ChannelScte35TimeSignalAposPtr(v *ChannelScte35TimeSignalAposArgs) ChannelScte35TimeSignalAposPtrInput {
	return (*channelScte35TimeSignalAposPtrType)(v)
}

func (*channelScte35TimeSignalAposPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte35TimeSignalApos)(nil)).Elem()
}

func (i *channelScte35TimeSignalAposPtrType) ToChannelScte35TimeSignalAposPtrOutput() ChannelScte35TimeSignalAposPtrOutput {
	return i.ToChannelScte35TimeSignalAposPtrOutputWithContext(context.Background())
}

func (i *channelScte35TimeSignalAposPtrType) ToChannelScte35TimeSignalAposPtrOutputWithContext(ctx context.Context) ChannelScte35TimeSignalAposPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelScte35TimeSignalAposPtrOutput)
}

type ChannelScte35TimeSignalAposOutput struct{ *pulumi.OutputState }

func (ChannelScte35TimeSignalAposOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelScte35TimeSignalApos)(nil)).Elem()
}

func (o ChannelScte35TimeSignalAposOutput) ToChannelScte35TimeSignalAposOutput() ChannelScte35TimeSignalAposOutput {
	return o
}

func (o ChannelScte35TimeSignalAposOutput) ToChannelScte35TimeSignalAposOutputWithContext(ctx context.Context) ChannelScte35TimeSignalAposOutput {
	return o
}

func (o ChannelScte35TimeSignalAposOutput) ToChannelScte35TimeSignalAposPtrOutput() ChannelScte35TimeSignalAposPtrOutput {
	return o.ToChannelScte35TimeSignalAposPtrOutputWithContext(context.Background())
}

func (o ChannelScte35TimeSignalAposOutput) ToChannelScte35TimeSignalAposPtrOutputWithContext(ctx context.Context) ChannelScte35TimeSignalAposPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelScte35TimeSignalApos) *ChannelScte35TimeSignalApos {
		return &v
	}).(ChannelScte35TimeSignalAposPtrOutput)
}

func (o ChannelScte35TimeSignalAposOutput) AdAvailOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelScte35TimeSignalApos) *int { return v.AdAvailOffset }).(pulumi.IntPtrOutput)
}

func (o ChannelScte35TimeSignalAposOutput) NoRegionalBlackoutFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelScte35TimeSignalApos) *string { return v.NoRegionalBlackoutFlag }).(pulumi.StringPtrOutput)
}

func (o ChannelScte35TimeSignalAposOutput) WebDeliveryAllowedFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelScte35TimeSignalApos) *string { return v.WebDeliveryAllowedFlag }).(pulumi.StringPtrOutput)
}

type ChannelScte35TimeSignalAposPtrOutput struct{ *pulumi.OutputState }

func (ChannelScte35TimeSignalAposPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelScte35TimeSignalApos)(nil)).Elem()
}

func (o ChannelScte35TimeSignalAposPtrOutput) ToChannelScte35TimeSignalAposPtrOutput() ChannelScte35TimeSignalAposPtrOutput {
	return o
}

func (o ChannelScte35TimeSignalAposPtrOutput) ToChannelScte35TimeSignalAposPtrOutputWithContext(ctx context.Context) ChannelScte35TimeSignalAposPtrOutput {
	return o
}

func (o ChannelScte35TimeSignalAposPtrOutput) Elem() ChannelScte35TimeSignalAposOutput {
	return o.ApplyT(func(v *ChannelScte35TimeSignalApos) ChannelScte35TimeSignalApos {
		if v != nil {
			return *v
		}
		var ret ChannelScte35TimeSignalApos
		return ret
	}).(ChannelScte35TimeSignalAposOutput)
}

func (o ChannelScte35TimeSignalAposPtrOutput) AdAvailOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelScte35TimeSignalApos) *int {
		if v == nil {
			return nil
		}
		return v.AdAvailOffset
	}).(pulumi.IntPtrOutput)
}

func (o ChannelScte35TimeSignalAposPtrOutput) NoRegionalBlackoutFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelScte35TimeSignalApos) *string {
		if v == nil {
			return nil
		}
		return v.NoRegionalBlackoutFlag
	}).(pulumi.StringPtrOutput)
}

func (o ChannelScte35TimeSignalAposPtrOutput) WebDeliveryAllowedFlag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelScte35TimeSignalApos) *string {
		if v == nil {
			return nil
		}
		return v.WebDeliveryAllowedFlag
	}).(pulumi.StringPtrOutput)
}

type ChannelSmpteTtDestinationSettings struct {
}

// ChannelSmpteTtDestinationSettingsInput is an input type that accepts ChannelSmpteTtDestinationSettingsArgs and ChannelSmpteTtDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelSmpteTtDestinationSettingsInput` via:
//
//          ChannelSmpteTtDestinationSettingsArgs{...}
type ChannelSmpteTtDestinationSettingsInput interface {
	pulumi.Input

	ToChannelSmpteTtDestinationSettingsOutput() ChannelSmpteTtDestinationSettingsOutput
	ToChannelSmpteTtDestinationSettingsOutputWithContext(context.Context) ChannelSmpteTtDestinationSettingsOutput
}

type ChannelSmpteTtDestinationSettingsArgs struct {
}

func (ChannelSmpteTtDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSmpteTtDestinationSettings)(nil)).Elem()
}

func (i ChannelSmpteTtDestinationSettingsArgs) ToChannelSmpteTtDestinationSettingsOutput() ChannelSmpteTtDestinationSettingsOutput {
	return i.ToChannelSmpteTtDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelSmpteTtDestinationSettingsArgs) ToChannelSmpteTtDestinationSettingsOutputWithContext(ctx context.Context) ChannelSmpteTtDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSmpteTtDestinationSettingsOutput)
}

func (i ChannelSmpteTtDestinationSettingsArgs) ToChannelSmpteTtDestinationSettingsPtrOutput() ChannelSmpteTtDestinationSettingsPtrOutput {
	return i.ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelSmpteTtDestinationSettingsArgs) ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelSmpteTtDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSmpteTtDestinationSettingsOutput).ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelSmpteTtDestinationSettingsPtrInput is an input type that accepts ChannelSmpteTtDestinationSettingsArgs, ChannelSmpteTtDestinationSettingsPtr and ChannelSmpteTtDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelSmpteTtDestinationSettingsPtrInput` via:
//
//          ChannelSmpteTtDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelSmpteTtDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelSmpteTtDestinationSettingsPtrOutput() ChannelSmpteTtDestinationSettingsPtrOutput
	ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(context.Context) ChannelSmpteTtDestinationSettingsPtrOutput
}

type channelSmpteTtDestinationSettingsPtrType ChannelSmpteTtDestinationSettingsArgs

func ChannelSmpteTtDestinationSettingsPtr(v *ChannelSmpteTtDestinationSettingsArgs) ChannelSmpteTtDestinationSettingsPtrInput {
	return (*channelSmpteTtDestinationSettingsPtrType)(v)
}

func (*channelSmpteTtDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSmpteTtDestinationSettings)(nil)).Elem()
}

func (i *channelSmpteTtDestinationSettingsPtrType) ToChannelSmpteTtDestinationSettingsPtrOutput() ChannelSmpteTtDestinationSettingsPtrOutput {
	return i.ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelSmpteTtDestinationSettingsPtrType) ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelSmpteTtDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelSmpteTtDestinationSettingsPtrOutput)
}

type ChannelSmpteTtDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelSmpteTtDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelSmpteTtDestinationSettings)(nil)).Elem()
}

func (o ChannelSmpteTtDestinationSettingsOutput) ToChannelSmpteTtDestinationSettingsOutput() ChannelSmpteTtDestinationSettingsOutput {
	return o
}

func (o ChannelSmpteTtDestinationSettingsOutput) ToChannelSmpteTtDestinationSettingsOutputWithContext(ctx context.Context) ChannelSmpteTtDestinationSettingsOutput {
	return o
}

func (o ChannelSmpteTtDestinationSettingsOutput) ToChannelSmpteTtDestinationSettingsPtrOutput() ChannelSmpteTtDestinationSettingsPtrOutput {
	return o.ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelSmpteTtDestinationSettingsOutput) ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelSmpteTtDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelSmpteTtDestinationSettings) *ChannelSmpteTtDestinationSettings {
		return &v
	}).(ChannelSmpteTtDestinationSettingsPtrOutput)
}

type ChannelSmpteTtDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelSmpteTtDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelSmpteTtDestinationSettings)(nil)).Elem()
}

func (o ChannelSmpteTtDestinationSettingsPtrOutput) ToChannelSmpteTtDestinationSettingsPtrOutput() ChannelSmpteTtDestinationSettingsPtrOutput {
	return o
}

func (o ChannelSmpteTtDestinationSettingsPtrOutput) ToChannelSmpteTtDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelSmpteTtDestinationSettingsPtrOutput {
	return o
}

func (o ChannelSmpteTtDestinationSettingsPtrOutput) Elem() ChannelSmpteTtDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelSmpteTtDestinationSettings) ChannelSmpteTtDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelSmpteTtDestinationSettings
		return ret
	}).(ChannelSmpteTtDestinationSettingsOutput)
}

type ChannelStandardHlsSettings struct {
	AudioRenditionSets *string              `pulumi:"audioRenditionSets"`
	M3u8Settings       *ChannelM3u8Settings `pulumi:"m3u8Settings"`
}

// ChannelStandardHlsSettingsInput is an input type that accepts ChannelStandardHlsSettingsArgs and ChannelStandardHlsSettingsOutput values.
// You can construct a concrete instance of `ChannelStandardHlsSettingsInput` via:
//
//          ChannelStandardHlsSettingsArgs{...}
type ChannelStandardHlsSettingsInput interface {
	pulumi.Input

	ToChannelStandardHlsSettingsOutput() ChannelStandardHlsSettingsOutput
	ToChannelStandardHlsSettingsOutputWithContext(context.Context) ChannelStandardHlsSettingsOutput
}

type ChannelStandardHlsSettingsArgs struct {
	AudioRenditionSets pulumi.StringPtrInput       `pulumi:"audioRenditionSets"`
	M3u8Settings       ChannelM3u8SettingsPtrInput `pulumi:"m3u8Settings"`
}

func (ChannelStandardHlsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStandardHlsSettings)(nil)).Elem()
}

func (i ChannelStandardHlsSettingsArgs) ToChannelStandardHlsSettingsOutput() ChannelStandardHlsSettingsOutput {
	return i.ToChannelStandardHlsSettingsOutputWithContext(context.Background())
}

func (i ChannelStandardHlsSettingsArgs) ToChannelStandardHlsSettingsOutputWithContext(ctx context.Context) ChannelStandardHlsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStandardHlsSettingsOutput)
}

func (i ChannelStandardHlsSettingsArgs) ToChannelStandardHlsSettingsPtrOutput() ChannelStandardHlsSettingsPtrOutput {
	return i.ToChannelStandardHlsSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelStandardHlsSettingsArgs) ToChannelStandardHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelStandardHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStandardHlsSettingsOutput).ToChannelStandardHlsSettingsPtrOutputWithContext(ctx)
}

// ChannelStandardHlsSettingsPtrInput is an input type that accepts ChannelStandardHlsSettingsArgs, ChannelStandardHlsSettingsPtr and ChannelStandardHlsSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelStandardHlsSettingsPtrInput` via:
//
//          ChannelStandardHlsSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelStandardHlsSettingsPtrInput interface {
	pulumi.Input

	ToChannelStandardHlsSettingsPtrOutput() ChannelStandardHlsSettingsPtrOutput
	ToChannelStandardHlsSettingsPtrOutputWithContext(context.Context) ChannelStandardHlsSettingsPtrOutput
}

type channelStandardHlsSettingsPtrType ChannelStandardHlsSettingsArgs

func ChannelStandardHlsSettingsPtr(v *ChannelStandardHlsSettingsArgs) ChannelStandardHlsSettingsPtrInput {
	return (*channelStandardHlsSettingsPtrType)(v)
}

func (*channelStandardHlsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStandardHlsSettings)(nil)).Elem()
}

func (i *channelStandardHlsSettingsPtrType) ToChannelStandardHlsSettingsPtrOutput() ChannelStandardHlsSettingsPtrOutput {
	return i.ToChannelStandardHlsSettingsPtrOutputWithContext(context.Background())
}

func (i *channelStandardHlsSettingsPtrType) ToChannelStandardHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelStandardHlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStandardHlsSettingsPtrOutput)
}

type ChannelStandardHlsSettingsOutput struct{ *pulumi.OutputState }

func (ChannelStandardHlsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStandardHlsSettings)(nil)).Elem()
}

func (o ChannelStandardHlsSettingsOutput) ToChannelStandardHlsSettingsOutput() ChannelStandardHlsSettingsOutput {
	return o
}

func (o ChannelStandardHlsSettingsOutput) ToChannelStandardHlsSettingsOutputWithContext(ctx context.Context) ChannelStandardHlsSettingsOutput {
	return o
}

func (o ChannelStandardHlsSettingsOutput) ToChannelStandardHlsSettingsPtrOutput() ChannelStandardHlsSettingsPtrOutput {
	return o.ToChannelStandardHlsSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelStandardHlsSettingsOutput) ToChannelStandardHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelStandardHlsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelStandardHlsSettings) *ChannelStandardHlsSettings {
		return &v
	}).(ChannelStandardHlsSettingsPtrOutput)
}

func (o ChannelStandardHlsSettingsOutput) AudioRenditionSets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelStandardHlsSettings) *string { return v.AudioRenditionSets }).(pulumi.StringPtrOutput)
}

func (o ChannelStandardHlsSettingsOutput) M3u8Settings() ChannelM3u8SettingsPtrOutput {
	return o.ApplyT(func(v ChannelStandardHlsSettings) *ChannelM3u8Settings { return v.M3u8Settings }).(ChannelM3u8SettingsPtrOutput)
}

type ChannelStandardHlsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelStandardHlsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStandardHlsSettings)(nil)).Elem()
}

func (o ChannelStandardHlsSettingsPtrOutput) ToChannelStandardHlsSettingsPtrOutput() ChannelStandardHlsSettingsPtrOutput {
	return o
}

func (o ChannelStandardHlsSettingsPtrOutput) ToChannelStandardHlsSettingsPtrOutputWithContext(ctx context.Context) ChannelStandardHlsSettingsPtrOutput {
	return o
}

func (o ChannelStandardHlsSettingsPtrOutput) Elem() ChannelStandardHlsSettingsOutput {
	return o.ApplyT(func(v *ChannelStandardHlsSettings) ChannelStandardHlsSettings {
		if v != nil {
			return *v
		}
		var ret ChannelStandardHlsSettings
		return ret
	}).(ChannelStandardHlsSettingsOutput)
}

func (o ChannelStandardHlsSettingsPtrOutput) AudioRenditionSets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelStandardHlsSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioRenditionSets
	}).(pulumi.StringPtrOutput)
}

func (o ChannelStandardHlsSettingsPtrOutput) M3u8Settings() ChannelM3u8SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelStandardHlsSettings) *ChannelM3u8Settings {
		if v == nil {
			return nil
		}
		return v.M3u8Settings
	}).(ChannelM3u8SettingsPtrOutput)
}

type ChannelStaticKeySettings struct {
	KeyProviderServer *ChannelInputLocation `pulumi:"keyProviderServer"`
	StaticKeyValue    *string               `pulumi:"staticKeyValue"`
}

// ChannelStaticKeySettingsInput is an input type that accepts ChannelStaticKeySettingsArgs and ChannelStaticKeySettingsOutput values.
// You can construct a concrete instance of `ChannelStaticKeySettingsInput` via:
//
//          ChannelStaticKeySettingsArgs{...}
type ChannelStaticKeySettingsInput interface {
	pulumi.Input

	ToChannelStaticKeySettingsOutput() ChannelStaticKeySettingsOutput
	ToChannelStaticKeySettingsOutputWithContext(context.Context) ChannelStaticKeySettingsOutput
}

type ChannelStaticKeySettingsArgs struct {
	KeyProviderServer ChannelInputLocationPtrInput `pulumi:"keyProviderServer"`
	StaticKeyValue    pulumi.StringPtrInput        `pulumi:"staticKeyValue"`
}

func (ChannelStaticKeySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStaticKeySettings)(nil)).Elem()
}

func (i ChannelStaticKeySettingsArgs) ToChannelStaticKeySettingsOutput() ChannelStaticKeySettingsOutput {
	return i.ToChannelStaticKeySettingsOutputWithContext(context.Background())
}

func (i ChannelStaticKeySettingsArgs) ToChannelStaticKeySettingsOutputWithContext(ctx context.Context) ChannelStaticKeySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStaticKeySettingsOutput)
}

func (i ChannelStaticKeySettingsArgs) ToChannelStaticKeySettingsPtrOutput() ChannelStaticKeySettingsPtrOutput {
	return i.ToChannelStaticKeySettingsPtrOutputWithContext(context.Background())
}

func (i ChannelStaticKeySettingsArgs) ToChannelStaticKeySettingsPtrOutputWithContext(ctx context.Context) ChannelStaticKeySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStaticKeySettingsOutput).ToChannelStaticKeySettingsPtrOutputWithContext(ctx)
}

// ChannelStaticKeySettingsPtrInput is an input type that accepts ChannelStaticKeySettingsArgs, ChannelStaticKeySettingsPtr and ChannelStaticKeySettingsPtrOutput values.
// You can construct a concrete instance of `ChannelStaticKeySettingsPtrInput` via:
//
//          ChannelStaticKeySettingsArgs{...}
//
//  or:
//
//          nil
type ChannelStaticKeySettingsPtrInput interface {
	pulumi.Input

	ToChannelStaticKeySettingsPtrOutput() ChannelStaticKeySettingsPtrOutput
	ToChannelStaticKeySettingsPtrOutputWithContext(context.Context) ChannelStaticKeySettingsPtrOutput
}

type channelStaticKeySettingsPtrType ChannelStaticKeySettingsArgs

func ChannelStaticKeySettingsPtr(v *ChannelStaticKeySettingsArgs) ChannelStaticKeySettingsPtrInput {
	return (*channelStaticKeySettingsPtrType)(v)
}

func (*channelStaticKeySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStaticKeySettings)(nil)).Elem()
}

func (i *channelStaticKeySettingsPtrType) ToChannelStaticKeySettingsPtrOutput() ChannelStaticKeySettingsPtrOutput {
	return i.ToChannelStaticKeySettingsPtrOutputWithContext(context.Background())
}

func (i *channelStaticKeySettingsPtrType) ToChannelStaticKeySettingsPtrOutputWithContext(ctx context.Context) ChannelStaticKeySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStaticKeySettingsPtrOutput)
}

type ChannelStaticKeySettingsOutput struct{ *pulumi.OutputState }

func (ChannelStaticKeySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStaticKeySettings)(nil)).Elem()
}

func (o ChannelStaticKeySettingsOutput) ToChannelStaticKeySettingsOutput() ChannelStaticKeySettingsOutput {
	return o
}

func (o ChannelStaticKeySettingsOutput) ToChannelStaticKeySettingsOutputWithContext(ctx context.Context) ChannelStaticKeySettingsOutput {
	return o
}

func (o ChannelStaticKeySettingsOutput) ToChannelStaticKeySettingsPtrOutput() ChannelStaticKeySettingsPtrOutput {
	return o.ToChannelStaticKeySettingsPtrOutputWithContext(context.Background())
}

func (o ChannelStaticKeySettingsOutput) ToChannelStaticKeySettingsPtrOutputWithContext(ctx context.Context) ChannelStaticKeySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelStaticKeySettings) *ChannelStaticKeySettings {
		return &v
	}).(ChannelStaticKeySettingsPtrOutput)
}

func (o ChannelStaticKeySettingsOutput) KeyProviderServer() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v ChannelStaticKeySettings) *ChannelInputLocation { return v.KeyProviderServer }).(ChannelInputLocationPtrOutput)
}

func (o ChannelStaticKeySettingsOutput) StaticKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelStaticKeySettings) *string { return v.StaticKeyValue }).(pulumi.StringPtrOutput)
}

type ChannelStaticKeySettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelStaticKeySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStaticKeySettings)(nil)).Elem()
}

func (o ChannelStaticKeySettingsPtrOutput) ToChannelStaticKeySettingsPtrOutput() ChannelStaticKeySettingsPtrOutput {
	return o
}

func (o ChannelStaticKeySettingsPtrOutput) ToChannelStaticKeySettingsPtrOutputWithContext(ctx context.Context) ChannelStaticKeySettingsPtrOutput {
	return o
}

func (o ChannelStaticKeySettingsPtrOutput) Elem() ChannelStaticKeySettingsOutput {
	return o.ApplyT(func(v *ChannelStaticKeySettings) ChannelStaticKeySettings {
		if v != nil {
			return *v
		}
		var ret ChannelStaticKeySettings
		return ret
	}).(ChannelStaticKeySettingsOutput)
}

func (o ChannelStaticKeySettingsPtrOutput) KeyProviderServer() ChannelInputLocationPtrOutput {
	return o.ApplyT(func(v *ChannelStaticKeySettings) *ChannelInputLocation {
		if v == nil {
			return nil
		}
		return v.KeyProviderServer
	}).(ChannelInputLocationPtrOutput)
}

func (o ChannelStaticKeySettingsPtrOutput) StaticKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelStaticKeySettings) *string {
		if v == nil {
			return nil
		}
		return v.StaticKeyValue
	}).(pulumi.StringPtrOutput)
}

type ChannelTeletextDestinationSettings struct {
}

// ChannelTeletextDestinationSettingsInput is an input type that accepts ChannelTeletextDestinationSettingsArgs and ChannelTeletextDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelTeletextDestinationSettingsInput` via:
//
//          ChannelTeletextDestinationSettingsArgs{...}
type ChannelTeletextDestinationSettingsInput interface {
	pulumi.Input

	ToChannelTeletextDestinationSettingsOutput() ChannelTeletextDestinationSettingsOutput
	ToChannelTeletextDestinationSettingsOutputWithContext(context.Context) ChannelTeletextDestinationSettingsOutput
}

type ChannelTeletextDestinationSettingsArgs struct {
}

func (ChannelTeletextDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTeletextDestinationSettings)(nil)).Elem()
}

func (i ChannelTeletextDestinationSettingsArgs) ToChannelTeletextDestinationSettingsOutput() ChannelTeletextDestinationSettingsOutput {
	return i.ToChannelTeletextDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelTeletextDestinationSettingsArgs) ToChannelTeletextDestinationSettingsOutputWithContext(ctx context.Context) ChannelTeletextDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTeletextDestinationSettingsOutput)
}

func (i ChannelTeletextDestinationSettingsArgs) ToChannelTeletextDestinationSettingsPtrOutput() ChannelTeletextDestinationSettingsPtrOutput {
	return i.ToChannelTeletextDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelTeletextDestinationSettingsArgs) ToChannelTeletextDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTeletextDestinationSettingsOutput).ToChannelTeletextDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelTeletextDestinationSettingsPtrInput is an input type that accepts ChannelTeletextDestinationSettingsArgs, ChannelTeletextDestinationSettingsPtr and ChannelTeletextDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelTeletextDestinationSettingsPtrInput` via:
//
//          ChannelTeletextDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelTeletextDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelTeletextDestinationSettingsPtrOutput() ChannelTeletextDestinationSettingsPtrOutput
	ToChannelTeletextDestinationSettingsPtrOutputWithContext(context.Context) ChannelTeletextDestinationSettingsPtrOutput
}

type channelTeletextDestinationSettingsPtrType ChannelTeletextDestinationSettingsArgs

func ChannelTeletextDestinationSettingsPtr(v *ChannelTeletextDestinationSettingsArgs) ChannelTeletextDestinationSettingsPtrInput {
	return (*channelTeletextDestinationSettingsPtrType)(v)
}

func (*channelTeletextDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTeletextDestinationSettings)(nil)).Elem()
}

func (i *channelTeletextDestinationSettingsPtrType) ToChannelTeletextDestinationSettingsPtrOutput() ChannelTeletextDestinationSettingsPtrOutput {
	return i.ToChannelTeletextDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelTeletextDestinationSettingsPtrType) ToChannelTeletextDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTeletextDestinationSettingsPtrOutput)
}

type ChannelTeletextDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelTeletextDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTeletextDestinationSettings)(nil)).Elem()
}

func (o ChannelTeletextDestinationSettingsOutput) ToChannelTeletextDestinationSettingsOutput() ChannelTeletextDestinationSettingsOutput {
	return o
}

func (o ChannelTeletextDestinationSettingsOutput) ToChannelTeletextDestinationSettingsOutputWithContext(ctx context.Context) ChannelTeletextDestinationSettingsOutput {
	return o
}

func (o ChannelTeletextDestinationSettingsOutput) ToChannelTeletextDestinationSettingsPtrOutput() ChannelTeletextDestinationSettingsPtrOutput {
	return o.ToChannelTeletextDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelTeletextDestinationSettingsOutput) ToChannelTeletextDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTeletextDestinationSettings) *ChannelTeletextDestinationSettings {
		return &v
	}).(ChannelTeletextDestinationSettingsPtrOutput)
}

type ChannelTeletextDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelTeletextDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTeletextDestinationSettings)(nil)).Elem()
}

func (o ChannelTeletextDestinationSettingsPtrOutput) ToChannelTeletextDestinationSettingsPtrOutput() ChannelTeletextDestinationSettingsPtrOutput {
	return o
}

func (o ChannelTeletextDestinationSettingsPtrOutput) ToChannelTeletextDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextDestinationSettingsPtrOutput {
	return o
}

func (o ChannelTeletextDestinationSettingsPtrOutput) Elem() ChannelTeletextDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelTeletextDestinationSettings) ChannelTeletextDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelTeletextDestinationSettings
		return ret
	}).(ChannelTeletextDestinationSettingsOutput)
}

type ChannelTeletextSourceSettings struct {
	OutputRectangle *ChannelCaptionRectangle `pulumi:"outputRectangle"`
	PageNumber      *string                  `pulumi:"pageNumber"`
}

// ChannelTeletextSourceSettingsInput is an input type that accepts ChannelTeletextSourceSettingsArgs and ChannelTeletextSourceSettingsOutput values.
// You can construct a concrete instance of `ChannelTeletextSourceSettingsInput` via:
//
//          ChannelTeletextSourceSettingsArgs{...}
type ChannelTeletextSourceSettingsInput interface {
	pulumi.Input

	ToChannelTeletextSourceSettingsOutput() ChannelTeletextSourceSettingsOutput
	ToChannelTeletextSourceSettingsOutputWithContext(context.Context) ChannelTeletextSourceSettingsOutput
}

type ChannelTeletextSourceSettingsArgs struct {
	OutputRectangle ChannelCaptionRectanglePtrInput `pulumi:"outputRectangle"`
	PageNumber      pulumi.StringPtrInput           `pulumi:"pageNumber"`
}

func (ChannelTeletextSourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTeletextSourceSettings)(nil)).Elem()
}

func (i ChannelTeletextSourceSettingsArgs) ToChannelTeletextSourceSettingsOutput() ChannelTeletextSourceSettingsOutput {
	return i.ToChannelTeletextSourceSettingsOutputWithContext(context.Background())
}

func (i ChannelTeletextSourceSettingsArgs) ToChannelTeletextSourceSettingsOutputWithContext(ctx context.Context) ChannelTeletextSourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTeletextSourceSettingsOutput)
}

func (i ChannelTeletextSourceSettingsArgs) ToChannelTeletextSourceSettingsPtrOutput() ChannelTeletextSourceSettingsPtrOutput {
	return i.ToChannelTeletextSourceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelTeletextSourceSettingsArgs) ToChannelTeletextSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTeletextSourceSettingsOutput).ToChannelTeletextSourceSettingsPtrOutputWithContext(ctx)
}

// ChannelTeletextSourceSettingsPtrInput is an input type that accepts ChannelTeletextSourceSettingsArgs, ChannelTeletextSourceSettingsPtr and ChannelTeletextSourceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelTeletextSourceSettingsPtrInput` via:
//
//          ChannelTeletextSourceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelTeletextSourceSettingsPtrInput interface {
	pulumi.Input

	ToChannelTeletextSourceSettingsPtrOutput() ChannelTeletextSourceSettingsPtrOutput
	ToChannelTeletextSourceSettingsPtrOutputWithContext(context.Context) ChannelTeletextSourceSettingsPtrOutput
}

type channelTeletextSourceSettingsPtrType ChannelTeletextSourceSettingsArgs

func ChannelTeletextSourceSettingsPtr(v *ChannelTeletextSourceSettingsArgs) ChannelTeletextSourceSettingsPtrInput {
	return (*channelTeletextSourceSettingsPtrType)(v)
}

func (*channelTeletextSourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTeletextSourceSettings)(nil)).Elem()
}

func (i *channelTeletextSourceSettingsPtrType) ToChannelTeletextSourceSettingsPtrOutput() ChannelTeletextSourceSettingsPtrOutput {
	return i.ToChannelTeletextSourceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelTeletextSourceSettingsPtrType) ToChannelTeletextSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextSourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTeletextSourceSettingsPtrOutput)
}

type ChannelTeletextSourceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelTeletextSourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTeletextSourceSettings)(nil)).Elem()
}

func (o ChannelTeletextSourceSettingsOutput) ToChannelTeletextSourceSettingsOutput() ChannelTeletextSourceSettingsOutput {
	return o
}

func (o ChannelTeletextSourceSettingsOutput) ToChannelTeletextSourceSettingsOutputWithContext(ctx context.Context) ChannelTeletextSourceSettingsOutput {
	return o
}

func (o ChannelTeletextSourceSettingsOutput) ToChannelTeletextSourceSettingsPtrOutput() ChannelTeletextSourceSettingsPtrOutput {
	return o.ToChannelTeletextSourceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelTeletextSourceSettingsOutput) ToChannelTeletextSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextSourceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTeletextSourceSettings) *ChannelTeletextSourceSettings {
		return &v
	}).(ChannelTeletextSourceSettingsPtrOutput)
}

func (o ChannelTeletextSourceSettingsOutput) OutputRectangle() ChannelCaptionRectanglePtrOutput {
	return o.ApplyT(func(v ChannelTeletextSourceSettings) *ChannelCaptionRectangle { return v.OutputRectangle }).(ChannelCaptionRectanglePtrOutput)
}

func (o ChannelTeletextSourceSettingsOutput) PageNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTeletextSourceSettings) *string { return v.PageNumber }).(pulumi.StringPtrOutput)
}

type ChannelTeletextSourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelTeletextSourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTeletextSourceSettings)(nil)).Elem()
}

func (o ChannelTeletextSourceSettingsPtrOutput) ToChannelTeletextSourceSettingsPtrOutput() ChannelTeletextSourceSettingsPtrOutput {
	return o
}

func (o ChannelTeletextSourceSettingsPtrOutput) ToChannelTeletextSourceSettingsPtrOutputWithContext(ctx context.Context) ChannelTeletextSourceSettingsPtrOutput {
	return o
}

func (o ChannelTeletextSourceSettingsPtrOutput) Elem() ChannelTeletextSourceSettingsOutput {
	return o.ApplyT(func(v *ChannelTeletextSourceSettings) ChannelTeletextSourceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelTeletextSourceSettings
		return ret
	}).(ChannelTeletextSourceSettingsOutput)
}

func (o ChannelTeletextSourceSettingsPtrOutput) OutputRectangle() ChannelCaptionRectanglePtrOutput {
	return o.ApplyT(func(v *ChannelTeletextSourceSettings) *ChannelCaptionRectangle {
		if v == nil {
			return nil
		}
		return v.OutputRectangle
	}).(ChannelCaptionRectanglePtrOutput)
}

func (o ChannelTeletextSourceSettingsPtrOutput) PageNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTeletextSourceSettings) *string {
		if v == nil {
			return nil
		}
		return v.PageNumber
	}).(pulumi.StringPtrOutput)
}

type ChannelTemporalFilterSettings struct {
	PostFilterSharpening *string `pulumi:"postFilterSharpening"`
	Strength             *string `pulumi:"strength"`
}

// ChannelTemporalFilterSettingsInput is an input type that accepts ChannelTemporalFilterSettingsArgs and ChannelTemporalFilterSettingsOutput values.
// You can construct a concrete instance of `ChannelTemporalFilterSettingsInput` via:
//
//          ChannelTemporalFilterSettingsArgs{...}
type ChannelTemporalFilterSettingsInput interface {
	pulumi.Input

	ToChannelTemporalFilterSettingsOutput() ChannelTemporalFilterSettingsOutput
	ToChannelTemporalFilterSettingsOutputWithContext(context.Context) ChannelTemporalFilterSettingsOutput
}

type ChannelTemporalFilterSettingsArgs struct {
	PostFilterSharpening pulumi.StringPtrInput `pulumi:"postFilterSharpening"`
	Strength             pulumi.StringPtrInput `pulumi:"strength"`
}

func (ChannelTemporalFilterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTemporalFilterSettings)(nil)).Elem()
}

func (i ChannelTemporalFilterSettingsArgs) ToChannelTemporalFilterSettingsOutput() ChannelTemporalFilterSettingsOutput {
	return i.ToChannelTemporalFilterSettingsOutputWithContext(context.Background())
}

func (i ChannelTemporalFilterSettingsArgs) ToChannelTemporalFilterSettingsOutputWithContext(ctx context.Context) ChannelTemporalFilterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTemporalFilterSettingsOutput)
}

func (i ChannelTemporalFilterSettingsArgs) ToChannelTemporalFilterSettingsPtrOutput() ChannelTemporalFilterSettingsPtrOutput {
	return i.ToChannelTemporalFilterSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelTemporalFilterSettingsArgs) ToChannelTemporalFilterSettingsPtrOutputWithContext(ctx context.Context) ChannelTemporalFilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTemporalFilterSettingsOutput).ToChannelTemporalFilterSettingsPtrOutputWithContext(ctx)
}

// ChannelTemporalFilterSettingsPtrInput is an input type that accepts ChannelTemporalFilterSettingsArgs, ChannelTemporalFilterSettingsPtr and ChannelTemporalFilterSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelTemporalFilterSettingsPtrInput` via:
//
//          ChannelTemporalFilterSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelTemporalFilterSettingsPtrInput interface {
	pulumi.Input

	ToChannelTemporalFilterSettingsPtrOutput() ChannelTemporalFilterSettingsPtrOutput
	ToChannelTemporalFilterSettingsPtrOutputWithContext(context.Context) ChannelTemporalFilterSettingsPtrOutput
}

type channelTemporalFilterSettingsPtrType ChannelTemporalFilterSettingsArgs

func ChannelTemporalFilterSettingsPtr(v *ChannelTemporalFilterSettingsArgs) ChannelTemporalFilterSettingsPtrInput {
	return (*channelTemporalFilterSettingsPtrType)(v)
}

func (*channelTemporalFilterSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTemporalFilterSettings)(nil)).Elem()
}

func (i *channelTemporalFilterSettingsPtrType) ToChannelTemporalFilterSettingsPtrOutput() ChannelTemporalFilterSettingsPtrOutput {
	return i.ToChannelTemporalFilterSettingsPtrOutputWithContext(context.Background())
}

func (i *channelTemporalFilterSettingsPtrType) ToChannelTemporalFilterSettingsPtrOutputWithContext(ctx context.Context) ChannelTemporalFilterSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTemporalFilterSettingsPtrOutput)
}

type ChannelTemporalFilterSettingsOutput struct{ *pulumi.OutputState }

func (ChannelTemporalFilterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTemporalFilterSettings)(nil)).Elem()
}

func (o ChannelTemporalFilterSettingsOutput) ToChannelTemporalFilterSettingsOutput() ChannelTemporalFilterSettingsOutput {
	return o
}

func (o ChannelTemporalFilterSettingsOutput) ToChannelTemporalFilterSettingsOutputWithContext(ctx context.Context) ChannelTemporalFilterSettingsOutput {
	return o
}

func (o ChannelTemporalFilterSettingsOutput) ToChannelTemporalFilterSettingsPtrOutput() ChannelTemporalFilterSettingsPtrOutput {
	return o.ToChannelTemporalFilterSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelTemporalFilterSettingsOutput) ToChannelTemporalFilterSettingsPtrOutputWithContext(ctx context.Context) ChannelTemporalFilterSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTemporalFilterSettings) *ChannelTemporalFilterSettings {
		return &v
	}).(ChannelTemporalFilterSettingsPtrOutput)
}

func (o ChannelTemporalFilterSettingsOutput) PostFilterSharpening() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTemporalFilterSettings) *string { return v.PostFilterSharpening }).(pulumi.StringPtrOutput)
}

func (o ChannelTemporalFilterSettingsOutput) Strength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTemporalFilterSettings) *string { return v.Strength }).(pulumi.StringPtrOutput)
}

type ChannelTemporalFilterSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelTemporalFilterSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTemporalFilterSettings)(nil)).Elem()
}

func (o ChannelTemporalFilterSettingsPtrOutput) ToChannelTemporalFilterSettingsPtrOutput() ChannelTemporalFilterSettingsPtrOutput {
	return o
}

func (o ChannelTemporalFilterSettingsPtrOutput) ToChannelTemporalFilterSettingsPtrOutputWithContext(ctx context.Context) ChannelTemporalFilterSettingsPtrOutput {
	return o
}

func (o ChannelTemporalFilterSettingsPtrOutput) Elem() ChannelTemporalFilterSettingsOutput {
	return o.ApplyT(func(v *ChannelTemporalFilterSettings) ChannelTemporalFilterSettings {
		if v != nil {
			return *v
		}
		var ret ChannelTemporalFilterSettings
		return ret
	}).(ChannelTemporalFilterSettingsOutput)
}

func (o ChannelTemporalFilterSettingsPtrOutput) PostFilterSharpening() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTemporalFilterSettings) *string {
		if v == nil {
			return nil
		}
		return v.PostFilterSharpening
	}).(pulumi.StringPtrOutput)
}

func (o ChannelTemporalFilterSettingsPtrOutput) Strength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTemporalFilterSettings) *string {
		if v == nil {
			return nil
		}
		return v.Strength
	}).(pulumi.StringPtrOutput)
}

type ChannelTimecodeConfig struct {
	Source        *string `pulumi:"source"`
	SyncThreshold *int    `pulumi:"syncThreshold"`
}

// ChannelTimecodeConfigInput is an input type that accepts ChannelTimecodeConfigArgs and ChannelTimecodeConfigOutput values.
// You can construct a concrete instance of `ChannelTimecodeConfigInput` via:
//
//          ChannelTimecodeConfigArgs{...}
type ChannelTimecodeConfigInput interface {
	pulumi.Input

	ToChannelTimecodeConfigOutput() ChannelTimecodeConfigOutput
	ToChannelTimecodeConfigOutputWithContext(context.Context) ChannelTimecodeConfigOutput
}

type ChannelTimecodeConfigArgs struct {
	Source        pulumi.StringPtrInput `pulumi:"source"`
	SyncThreshold pulumi.IntPtrInput    `pulumi:"syncThreshold"`
}

func (ChannelTimecodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTimecodeConfig)(nil)).Elem()
}

func (i ChannelTimecodeConfigArgs) ToChannelTimecodeConfigOutput() ChannelTimecodeConfigOutput {
	return i.ToChannelTimecodeConfigOutputWithContext(context.Background())
}

func (i ChannelTimecodeConfigArgs) ToChannelTimecodeConfigOutputWithContext(ctx context.Context) ChannelTimecodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTimecodeConfigOutput)
}

func (i ChannelTimecodeConfigArgs) ToChannelTimecodeConfigPtrOutput() ChannelTimecodeConfigPtrOutput {
	return i.ToChannelTimecodeConfigPtrOutputWithContext(context.Background())
}

func (i ChannelTimecodeConfigArgs) ToChannelTimecodeConfigPtrOutputWithContext(ctx context.Context) ChannelTimecodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTimecodeConfigOutput).ToChannelTimecodeConfigPtrOutputWithContext(ctx)
}

// ChannelTimecodeConfigPtrInput is an input type that accepts ChannelTimecodeConfigArgs, ChannelTimecodeConfigPtr and ChannelTimecodeConfigPtrOutput values.
// You can construct a concrete instance of `ChannelTimecodeConfigPtrInput` via:
//
//          ChannelTimecodeConfigArgs{...}
//
//  or:
//
//          nil
type ChannelTimecodeConfigPtrInput interface {
	pulumi.Input

	ToChannelTimecodeConfigPtrOutput() ChannelTimecodeConfigPtrOutput
	ToChannelTimecodeConfigPtrOutputWithContext(context.Context) ChannelTimecodeConfigPtrOutput
}

type channelTimecodeConfigPtrType ChannelTimecodeConfigArgs

func ChannelTimecodeConfigPtr(v *ChannelTimecodeConfigArgs) ChannelTimecodeConfigPtrInput {
	return (*channelTimecodeConfigPtrType)(v)
}

func (*channelTimecodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTimecodeConfig)(nil)).Elem()
}

func (i *channelTimecodeConfigPtrType) ToChannelTimecodeConfigPtrOutput() ChannelTimecodeConfigPtrOutput {
	return i.ToChannelTimecodeConfigPtrOutputWithContext(context.Background())
}

func (i *channelTimecodeConfigPtrType) ToChannelTimecodeConfigPtrOutputWithContext(ctx context.Context) ChannelTimecodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTimecodeConfigPtrOutput)
}

type ChannelTimecodeConfigOutput struct{ *pulumi.OutputState }

func (ChannelTimecodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTimecodeConfig)(nil)).Elem()
}

func (o ChannelTimecodeConfigOutput) ToChannelTimecodeConfigOutput() ChannelTimecodeConfigOutput {
	return o
}

func (o ChannelTimecodeConfigOutput) ToChannelTimecodeConfigOutputWithContext(ctx context.Context) ChannelTimecodeConfigOutput {
	return o
}

func (o ChannelTimecodeConfigOutput) ToChannelTimecodeConfigPtrOutput() ChannelTimecodeConfigPtrOutput {
	return o.ToChannelTimecodeConfigPtrOutputWithContext(context.Background())
}

func (o ChannelTimecodeConfigOutput) ToChannelTimecodeConfigPtrOutputWithContext(ctx context.Context) ChannelTimecodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTimecodeConfig) *ChannelTimecodeConfig {
		return &v
	}).(ChannelTimecodeConfigPtrOutput)
}

func (o ChannelTimecodeConfigOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTimecodeConfig) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o ChannelTimecodeConfigOutput) SyncThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelTimecodeConfig) *int { return v.SyncThreshold }).(pulumi.IntPtrOutput)
}

type ChannelTimecodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ChannelTimecodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTimecodeConfig)(nil)).Elem()
}

func (o ChannelTimecodeConfigPtrOutput) ToChannelTimecodeConfigPtrOutput() ChannelTimecodeConfigPtrOutput {
	return o
}

func (o ChannelTimecodeConfigPtrOutput) ToChannelTimecodeConfigPtrOutputWithContext(ctx context.Context) ChannelTimecodeConfigPtrOutput {
	return o
}

func (o ChannelTimecodeConfigPtrOutput) Elem() ChannelTimecodeConfigOutput {
	return o.ApplyT(func(v *ChannelTimecodeConfig) ChannelTimecodeConfig {
		if v != nil {
			return *v
		}
		var ret ChannelTimecodeConfig
		return ret
	}).(ChannelTimecodeConfigOutput)
}

func (o ChannelTimecodeConfigPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTimecodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

func (o ChannelTimecodeConfigPtrOutput) SyncThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelTimecodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.SyncThreshold
	}).(pulumi.IntPtrOutput)
}

type ChannelTtmlDestinationSettings struct {
	StyleControl *string `pulumi:"styleControl"`
}

// ChannelTtmlDestinationSettingsInput is an input type that accepts ChannelTtmlDestinationSettingsArgs and ChannelTtmlDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelTtmlDestinationSettingsInput` via:
//
//          ChannelTtmlDestinationSettingsArgs{...}
type ChannelTtmlDestinationSettingsInput interface {
	pulumi.Input

	ToChannelTtmlDestinationSettingsOutput() ChannelTtmlDestinationSettingsOutput
	ToChannelTtmlDestinationSettingsOutputWithContext(context.Context) ChannelTtmlDestinationSettingsOutput
}

type ChannelTtmlDestinationSettingsArgs struct {
	StyleControl pulumi.StringPtrInput `pulumi:"styleControl"`
}

func (ChannelTtmlDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTtmlDestinationSettings)(nil)).Elem()
}

func (i ChannelTtmlDestinationSettingsArgs) ToChannelTtmlDestinationSettingsOutput() ChannelTtmlDestinationSettingsOutput {
	return i.ToChannelTtmlDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelTtmlDestinationSettingsArgs) ToChannelTtmlDestinationSettingsOutputWithContext(ctx context.Context) ChannelTtmlDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTtmlDestinationSettingsOutput)
}

func (i ChannelTtmlDestinationSettingsArgs) ToChannelTtmlDestinationSettingsPtrOutput() ChannelTtmlDestinationSettingsPtrOutput {
	return i.ToChannelTtmlDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelTtmlDestinationSettingsArgs) ToChannelTtmlDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTtmlDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTtmlDestinationSettingsOutput).ToChannelTtmlDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelTtmlDestinationSettingsPtrInput is an input type that accepts ChannelTtmlDestinationSettingsArgs, ChannelTtmlDestinationSettingsPtr and ChannelTtmlDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelTtmlDestinationSettingsPtrInput` via:
//
//          ChannelTtmlDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelTtmlDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelTtmlDestinationSettingsPtrOutput() ChannelTtmlDestinationSettingsPtrOutput
	ToChannelTtmlDestinationSettingsPtrOutputWithContext(context.Context) ChannelTtmlDestinationSettingsPtrOutput
}

type channelTtmlDestinationSettingsPtrType ChannelTtmlDestinationSettingsArgs

func ChannelTtmlDestinationSettingsPtr(v *ChannelTtmlDestinationSettingsArgs) ChannelTtmlDestinationSettingsPtrInput {
	return (*channelTtmlDestinationSettingsPtrType)(v)
}

func (*channelTtmlDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTtmlDestinationSettings)(nil)).Elem()
}

func (i *channelTtmlDestinationSettingsPtrType) ToChannelTtmlDestinationSettingsPtrOutput() ChannelTtmlDestinationSettingsPtrOutput {
	return i.ToChannelTtmlDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelTtmlDestinationSettingsPtrType) ToChannelTtmlDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTtmlDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTtmlDestinationSettingsPtrOutput)
}

type ChannelTtmlDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelTtmlDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTtmlDestinationSettings)(nil)).Elem()
}

func (o ChannelTtmlDestinationSettingsOutput) ToChannelTtmlDestinationSettingsOutput() ChannelTtmlDestinationSettingsOutput {
	return o
}

func (o ChannelTtmlDestinationSettingsOutput) ToChannelTtmlDestinationSettingsOutputWithContext(ctx context.Context) ChannelTtmlDestinationSettingsOutput {
	return o
}

func (o ChannelTtmlDestinationSettingsOutput) ToChannelTtmlDestinationSettingsPtrOutput() ChannelTtmlDestinationSettingsPtrOutput {
	return o.ToChannelTtmlDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelTtmlDestinationSettingsOutput) ToChannelTtmlDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTtmlDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelTtmlDestinationSettings) *ChannelTtmlDestinationSettings {
		return &v
	}).(ChannelTtmlDestinationSettingsPtrOutput)
}

func (o ChannelTtmlDestinationSettingsOutput) StyleControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelTtmlDestinationSettings) *string { return v.StyleControl }).(pulumi.StringPtrOutput)
}

type ChannelTtmlDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelTtmlDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelTtmlDestinationSettings)(nil)).Elem()
}

func (o ChannelTtmlDestinationSettingsPtrOutput) ToChannelTtmlDestinationSettingsPtrOutput() ChannelTtmlDestinationSettingsPtrOutput {
	return o
}

func (o ChannelTtmlDestinationSettingsPtrOutput) ToChannelTtmlDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelTtmlDestinationSettingsPtrOutput {
	return o
}

func (o ChannelTtmlDestinationSettingsPtrOutput) Elem() ChannelTtmlDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelTtmlDestinationSettings) ChannelTtmlDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelTtmlDestinationSettings
		return ret
	}).(ChannelTtmlDestinationSettingsOutput)
}

func (o ChannelTtmlDestinationSettingsPtrOutput) StyleControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelTtmlDestinationSettings) *string {
		if v == nil {
			return nil
		}
		return v.StyleControl
	}).(pulumi.StringPtrOutput)
}

type ChannelUdpContainerSettings struct {
	M2tsSettings *ChannelM2tsSettings `pulumi:"m2tsSettings"`
}

// ChannelUdpContainerSettingsInput is an input type that accepts ChannelUdpContainerSettingsArgs and ChannelUdpContainerSettingsOutput values.
// You can construct a concrete instance of `ChannelUdpContainerSettingsInput` via:
//
//          ChannelUdpContainerSettingsArgs{...}
type ChannelUdpContainerSettingsInput interface {
	pulumi.Input

	ToChannelUdpContainerSettingsOutput() ChannelUdpContainerSettingsOutput
	ToChannelUdpContainerSettingsOutputWithContext(context.Context) ChannelUdpContainerSettingsOutput
}

type ChannelUdpContainerSettingsArgs struct {
	M2tsSettings ChannelM2tsSettingsPtrInput `pulumi:"m2tsSettings"`
}

func (ChannelUdpContainerSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelUdpContainerSettings)(nil)).Elem()
}

func (i ChannelUdpContainerSettingsArgs) ToChannelUdpContainerSettingsOutput() ChannelUdpContainerSettingsOutput {
	return i.ToChannelUdpContainerSettingsOutputWithContext(context.Background())
}

func (i ChannelUdpContainerSettingsArgs) ToChannelUdpContainerSettingsOutputWithContext(ctx context.Context) ChannelUdpContainerSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpContainerSettingsOutput)
}

func (i ChannelUdpContainerSettingsArgs) ToChannelUdpContainerSettingsPtrOutput() ChannelUdpContainerSettingsPtrOutput {
	return i.ToChannelUdpContainerSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelUdpContainerSettingsArgs) ToChannelUdpContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpContainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpContainerSettingsOutput).ToChannelUdpContainerSettingsPtrOutputWithContext(ctx)
}

// ChannelUdpContainerSettingsPtrInput is an input type that accepts ChannelUdpContainerSettingsArgs, ChannelUdpContainerSettingsPtr and ChannelUdpContainerSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelUdpContainerSettingsPtrInput` via:
//
//          ChannelUdpContainerSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelUdpContainerSettingsPtrInput interface {
	pulumi.Input

	ToChannelUdpContainerSettingsPtrOutput() ChannelUdpContainerSettingsPtrOutput
	ToChannelUdpContainerSettingsPtrOutputWithContext(context.Context) ChannelUdpContainerSettingsPtrOutput
}

type channelUdpContainerSettingsPtrType ChannelUdpContainerSettingsArgs

func ChannelUdpContainerSettingsPtr(v *ChannelUdpContainerSettingsArgs) ChannelUdpContainerSettingsPtrInput {
	return (*channelUdpContainerSettingsPtrType)(v)
}

func (*channelUdpContainerSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelUdpContainerSettings)(nil)).Elem()
}

func (i *channelUdpContainerSettingsPtrType) ToChannelUdpContainerSettingsPtrOutput() ChannelUdpContainerSettingsPtrOutput {
	return i.ToChannelUdpContainerSettingsPtrOutputWithContext(context.Background())
}

func (i *channelUdpContainerSettingsPtrType) ToChannelUdpContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpContainerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpContainerSettingsPtrOutput)
}

type ChannelUdpContainerSettingsOutput struct{ *pulumi.OutputState }

func (ChannelUdpContainerSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelUdpContainerSettings)(nil)).Elem()
}

func (o ChannelUdpContainerSettingsOutput) ToChannelUdpContainerSettingsOutput() ChannelUdpContainerSettingsOutput {
	return o
}

func (o ChannelUdpContainerSettingsOutput) ToChannelUdpContainerSettingsOutputWithContext(ctx context.Context) ChannelUdpContainerSettingsOutput {
	return o
}

func (o ChannelUdpContainerSettingsOutput) ToChannelUdpContainerSettingsPtrOutput() ChannelUdpContainerSettingsPtrOutput {
	return o.ToChannelUdpContainerSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelUdpContainerSettingsOutput) ToChannelUdpContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpContainerSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelUdpContainerSettings) *ChannelUdpContainerSettings {
		return &v
	}).(ChannelUdpContainerSettingsPtrOutput)
}

func (o ChannelUdpContainerSettingsOutput) M2tsSettings() ChannelM2tsSettingsPtrOutput {
	return o.ApplyT(func(v ChannelUdpContainerSettings) *ChannelM2tsSettings { return v.M2tsSettings }).(ChannelM2tsSettingsPtrOutput)
}

type ChannelUdpContainerSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelUdpContainerSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelUdpContainerSettings)(nil)).Elem()
}

func (o ChannelUdpContainerSettingsPtrOutput) ToChannelUdpContainerSettingsPtrOutput() ChannelUdpContainerSettingsPtrOutput {
	return o
}

func (o ChannelUdpContainerSettingsPtrOutput) ToChannelUdpContainerSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpContainerSettingsPtrOutput {
	return o
}

func (o ChannelUdpContainerSettingsPtrOutput) Elem() ChannelUdpContainerSettingsOutput {
	return o.ApplyT(func(v *ChannelUdpContainerSettings) ChannelUdpContainerSettings {
		if v != nil {
			return *v
		}
		var ret ChannelUdpContainerSettings
		return ret
	}).(ChannelUdpContainerSettingsOutput)
}

func (o ChannelUdpContainerSettingsPtrOutput) M2tsSettings() ChannelM2tsSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelUdpContainerSettings) *ChannelM2tsSettings {
		if v == nil {
			return nil
		}
		return v.M2tsSettings
	}).(ChannelM2tsSettingsPtrOutput)
}

type ChannelUdpGroupSettings struct {
	InputLossAction        *string `pulumi:"inputLossAction"`
	TimedMetadataId3Frame  *string `pulumi:"timedMetadataId3Frame"`
	TimedMetadataId3Period *int    `pulumi:"timedMetadataId3Period"`
}

// ChannelUdpGroupSettingsInput is an input type that accepts ChannelUdpGroupSettingsArgs and ChannelUdpGroupSettingsOutput values.
// You can construct a concrete instance of `ChannelUdpGroupSettingsInput` via:
//
//          ChannelUdpGroupSettingsArgs{...}
type ChannelUdpGroupSettingsInput interface {
	pulumi.Input

	ToChannelUdpGroupSettingsOutput() ChannelUdpGroupSettingsOutput
	ToChannelUdpGroupSettingsOutputWithContext(context.Context) ChannelUdpGroupSettingsOutput
}

type ChannelUdpGroupSettingsArgs struct {
	InputLossAction        pulumi.StringPtrInput `pulumi:"inputLossAction"`
	TimedMetadataId3Frame  pulumi.StringPtrInput `pulumi:"timedMetadataId3Frame"`
	TimedMetadataId3Period pulumi.IntPtrInput    `pulumi:"timedMetadataId3Period"`
}

func (ChannelUdpGroupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelUdpGroupSettings)(nil)).Elem()
}

func (i ChannelUdpGroupSettingsArgs) ToChannelUdpGroupSettingsOutput() ChannelUdpGroupSettingsOutput {
	return i.ToChannelUdpGroupSettingsOutputWithContext(context.Background())
}

func (i ChannelUdpGroupSettingsArgs) ToChannelUdpGroupSettingsOutputWithContext(ctx context.Context) ChannelUdpGroupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpGroupSettingsOutput)
}

func (i ChannelUdpGroupSettingsArgs) ToChannelUdpGroupSettingsPtrOutput() ChannelUdpGroupSettingsPtrOutput {
	return i.ToChannelUdpGroupSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelUdpGroupSettingsArgs) ToChannelUdpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpGroupSettingsOutput).ToChannelUdpGroupSettingsPtrOutputWithContext(ctx)
}

// ChannelUdpGroupSettingsPtrInput is an input type that accepts ChannelUdpGroupSettingsArgs, ChannelUdpGroupSettingsPtr and ChannelUdpGroupSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelUdpGroupSettingsPtrInput` via:
//
//          ChannelUdpGroupSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelUdpGroupSettingsPtrInput interface {
	pulumi.Input

	ToChannelUdpGroupSettingsPtrOutput() ChannelUdpGroupSettingsPtrOutput
	ToChannelUdpGroupSettingsPtrOutputWithContext(context.Context) ChannelUdpGroupSettingsPtrOutput
}

type channelUdpGroupSettingsPtrType ChannelUdpGroupSettingsArgs

func ChannelUdpGroupSettingsPtr(v *ChannelUdpGroupSettingsArgs) ChannelUdpGroupSettingsPtrInput {
	return (*channelUdpGroupSettingsPtrType)(v)
}

func (*channelUdpGroupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelUdpGroupSettings)(nil)).Elem()
}

func (i *channelUdpGroupSettingsPtrType) ToChannelUdpGroupSettingsPtrOutput() ChannelUdpGroupSettingsPtrOutput {
	return i.ToChannelUdpGroupSettingsPtrOutputWithContext(context.Background())
}

func (i *channelUdpGroupSettingsPtrType) ToChannelUdpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpGroupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpGroupSettingsPtrOutput)
}

type ChannelUdpGroupSettingsOutput struct{ *pulumi.OutputState }

func (ChannelUdpGroupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelUdpGroupSettings)(nil)).Elem()
}

func (o ChannelUdpGroupSettingsOutput) ToChannelUdpGroupSettingsOutput() ChannelUdpGroupSettingsOutput {
	return o
}

func (o ChannelUdpGroupSettingsOutput) ToChannelUdpGroupSettingsOutputWithContext(ctx context.Context) ChannelUdpGroupSettingsOutput {
	return o
}

func (o ChannelUdpGroupSettingsOutput) ToChannelUdpGroupSettingsPtrOutput() ChannelUdpGroupSettingsPtrOutput {
	return o.ToChannelUdpGroupSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelUdpGroupSettingsOutput) ToChannelUdpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpGroupSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelUdpGroupSettings) *ChannelUdpGroupSettings {
		return &v
	}).(ChannelUdpGroupSettingsPtrOutput)
}

func (o ChannelUdpGroupSettingsOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelUdpGroupSettings) *string { return v.InputLossAction }).(pulumi.StringPtrOutput)
}

func (o ChannelUdpGroupSettingsOutput) TimedMetadataId3Frame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelUdpGroupSettings) *string { return v.TimedMetadataId3Frame }).(pulumi.StringPtrOutput)
}

func (o ChannelUdpGroupSettingsOutput) TimedMetadataId3Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelUdpGroupSettings) *int { return v.TimedMetadataId3Period }).(pulumi.IntPtrOutput)
}

type ChannelUdpGroupSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelUdpGroupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelUdpGroupSettings)(nil)).Elem()
}

func (o ChannelUdpGroupSettingsPtrOutput) ToChannelUdpGroupSettingsPtrOutput() ChannelUdpGroupSettingsPtrOutput {
	return o
}

func (o ChannelUdpGroupSettingsPtrOutput) ToChannelUdpGroupSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpGroupSettingsPtrOutput {
	return o
}

func (o ChannelUdpGroupSettingsPtrOutput) Elem() ChannelUdpGroupSettingsOutput {
	return o.ApplyT(func(v *ChannelUdpGroupSettings) ChannelUdpGroupSettings {
		if v != nil {
			return *v
		}
		var ret ChannelUdpGroupSettings
		return ret
	}).(ChannelUdpGroupSettingsOutput)
}

func (o ChannelUdpGroupSettingsPtrOutput) InputLossAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelUdpGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.InputLossAction
	}).(pulumi.StringPtrOutput)
}

func (o ChannelUdpGroupSettingsPtrOutput) TimedMetadataId3Frame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelUdpGroupSettings) *string {
		if v == nil {
			return nil
		}
		return v.TimedMetadataId3Frame
	}).(pulumi.StringPtrOutput)
}

func (o ChannelUdpGroupSettingsPtrOutput) TimedMetadataId3Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelUdpGroupSettings) *int {
		if v == nil {
			return nil
		}
		return v.TimedMetadataId3Period
	}).(pulumi.IntPtrOutput)
}

type ChannelUdpOutputSettings struct {
	BufferMsec        *int                         `pulumi:"bufferMsec"`
	ContainerSettings *ChannelUdpContainerSettings `pulumi:"containerSettings"`
	Destination       *ChannelOutputLocationRef    `pulumi:"destination"`
	FecOutputSettings *ChannelFecOutputSettings    `pulumi:"fecOutputSettings"`
}

// ChannelUdpOutputSettingsInput is an input type that accepts ChannelUdpOutputSettingsArgs and ChannelUdpOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelUdpOutputSettingsInput` via:
//
//          ChannelUdpOutputSettingsArgs{...}
type ChannelUdpOutputSettingsInput interface {
	pulumi.Input

	ToChannelUdpOutputSettingsOutput() ChannelUdpOutputSettingsOutput
	ToChannelUdpOutputSettingsOutputWithContext(context.Context) ChannelUdpOutputSettingsOutput
}

type ChannelUdpOutputSettingsArgs struct {
	BufferMsec        pulumi.IntPtrInput                  `pulumi:"bufferMsec"`
	ContainerSettings ChannelUdpContainerSettingsPtrInput `pulumi:"containerSettings"`
	Destination       ChannelOutputLocationRefPtrInput    `pulumi:"destination"`
	FecOutputSettings ChannelFecOutputSettingsPtrInput    `pulumi:"fecOutputSettings"`
}

func (ChannelUdpOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelUdpOutputSettings)(nil)).Elem()
}

func (i ChannelUdpOutputSettingsArgs) ToChannelUdpOutputSettingsOutput() ChannelUdpOutputSettingsOutput {
	return i.ToChannelUdpOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelUdpOutputSettingsArgs) ToChannelUdpOutputSettingsOutputWithContext(ctx context.Context) ChannelUdpOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpOutputSettingsOutput)
}

func (i ChannelUdpOutputSettingsArgs) ToChannelUdpOutputSettingsPtrOutput() ChannelUdpOutputSettingsPtrOutput {
	return i.ToChannelUdpOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelUdpOutputSettingsArgs) ToChannelUdpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpOutputSettingsOutput).ToChannelUdpOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelUdpOutputSettingsPtrInput is an input type that accepts ChannelUdpOutputSettingsArgs, ChannelUdpOutputSettingsPtr and ChannelUdpOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelUdpOutputSettingsPtrInput` via:
//
//          ChannelUdpOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelUdpOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelUdpOutputSettingsPtrOutput() ChannelUdpOutputSettingsPtrOutput
	ToChannelUdpOutputSettingsPtrOutputWithContext(context.Context) ChannelUdpOutputSettingsPtrOutput
}

type channelUdpOutputSettingsPtrType ChannelUdpOutputSettingsArgs

func ChannelUdpOutputSettingsPtr(v *ChannelUdpOutputSettingsArgs) ChannelUdpOutputSettingsPtrInput {
	return (*channelUdpOutputSettingsPtrType)(v)
}

func (*channelUdpOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelUdpOutputSettings)(nil)).Elem()
}

func (i *channelUdpOutputSettingsPtrType) ToChannelUdpOutputSettingsPtrOutput() ChannelUdpOutputSettingsPtrOutput {
	return i.ToChannelUdpOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelUdpOutputSettingsPtrType) ToChannelUdpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelUdpOutputSettingsPtrOutput)
}

type ChannelUdpOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelUdpOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelUdpOutputSettings)(nil)).Elem()
}

func (o ChannelUdpOutputSettingsOutput) ToChannelUdpOutputSettingsOutput() ChannelUdpOutputSettingsOutput {
	return o
}

func (o ChannelUdpOutputSettingsOutput) ToChannelUdpOutputSettingsOutputWithContext(ctx context.Context) ChannelUdpOutputSettingsOutput {
	return o
}

func (o ChannelUdpOutputSettingsOutput) ToChannelUdpOutputSettingsPtrOutput() ChannelUdpOutputSettingsPtrOutput {
	return o.ToChannelUdpOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelUdpOutputSettingsOutput) ToChannelUdpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelUdpOutputSettings) *ChannelUdpOutputSettings {
		return &v
	}).(ChannelUdpOutputSettingsPtrOutput)
}

func (o ChannelUdpOutputSettingsOutput) BufferMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelUdpOutputSettings) *int { return v.BufferMsec }).(pulumi.IntPtrOutput)
}

func (o ChannelUdpOutputSettingsOutput) ContainerSettings() ChannelUdpContainerSettingsPtrOutput {
	return o.ApplyT(func(v ChannelUdpOutputSettings) *ChannelUdpContainerSettings { return v.ContainerSettings }).(ChannelUdpContainerSettingsPtrOutput)
}

func (o ChannelUdpOutputSettingsOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v ChannelUdpOutputSettings) *ChannelOutputLocationRef { return v.Destination }).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelUdpOutputSettingsOutput) FecOutputSettings() ChannelFecOutputSettingsPtrOutput {
	return o.ApplyT(func(v ChannelUdpOutputSettings) *ChannelFecOutputSettings { return v.FecOutputSettings }).(ChannelFecOutputSettingsPtrOutput)
}

type ChannelUdpOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelUdpOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelUdpOutputSettings)(nil)).Elem()
}

func (o ChannelUdpOutputSettingsPtrOutput) ToChannelUdpOutputSettingsPtrOutput() ChannelUdpOutputSettingsPtrOutput {
	return o
}

func (o ChannelUdpOutputSettingsPtrOutput) ToChannelUdpOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelUdpOutputSettingsPtrOutput {
	return o
}

func (o ChannelUdpOutputSettingsPtrOutput) Elem() ChannelUdpOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelUdpOutputSettings) ChannelUdpOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelUdpOutputSettings
		return ret
	}).(ChannelUdpOutputSettingsOutput)
}

func (o ChannelUdpOutputSettingsPtrOutput) BufferMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelUdpOutputSettings) *int {
		if v == nil {
			return nil
		}
		return v.BufferMsec
	}).(pulumi.IntPtrOutput)
}

func (o ChannelUdpOutputSettingsPtrOutput) ContainerSettings() ChannelUdpContainerSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelUdpOutputSettings) *ChannelUdpContainerSettings {
		if v == nil {
			return nil
		}
		return v.ContainerSettings
	}).(ChannelUdpContainerSettingsPtrOutput)
}

func (o ChannelUdpOutputSettingsPtrOutput) Destination() ChannelOutputLocationRefPtrOutput {
	return o.ApplyT(func(v *ChannelUdpOutputSettings) *ChannelOutputLocationRef {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(ChannelOutputLocationRefPtrOutput)
}

func (o ChannelUdpOutputSettingsPtrOutput) FecOutputSettings() ChannelFecOutputSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelUdpOutputSettings) *ChannelFecOutputSettings {
		if v == nil {
			return nil
		}
		return v.FecOutputSettings
	}).(ChannelFecOutputSettingsPtrOutput)
}

type ChannelVideoBlackFailoverSettings struct {
	BlackDetectThreshold    *float64 `pulumi:"blackDetectThreshold"`
	VideoBlackThresholdMsec *int     `pulumi:"videoBlackThresholdMsec"`
}

// ChannelVideoBlackFailoverSettingsInput is an input type that accepts ChannelVideoBlackFailoverSettingsArgs and ChannelVideoBlackFailoverSettingsOutput values.
// You can construct a concrete instance of `ChannelVideoBlackFailoverSettingsInput` via:
//
//          ChannelVideoBlackFailoverSettingsArgs{...}
type ChannelVideoBlackFailoverSettingsInput interface {
	pulumi.Input

	ToChannelVideoBlackFailoverSettingsOutput() ChannelVideoBlackFailoverSettingsOutput
	ToChannelVideoBlackFailoverSettingsOutputWithContext(context.Context) ChannelVideoBlackFailoverSettingsOutput
}

type ChannelVideoBlackFailoverSettingsArgs struct {
	BlackDetectThreshold    pulumi.Float64PtrInput `pulumi:"blackDetectThreshold"`
	VideoBlackThresholdMsec pulumi.IntPtrInput     `pulumi:"videoBlackThresholdMsec"`
}

func (ChannelVideoBlackFailoverSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoBlackFailoverSettings)(nil)).Elem()
}

func (i ChannelVideoBlackFailoverSettingsArgs) ToChannelVideoBlackFailoverSettingsOutput() ChannelVideoBlackFailoverSettingsOutput {
	return i.ToChannelVideoBlackFailoverSettingsOutputWithContext(context.Background())
}

func (i ChannelVideoBlackFailoverSettingsArgs) ToChannelVideoBlackFailoverSettingsOutputWithContext(ctx context.Context) ChannelVideoBlackFailoverSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoBlackFailoverSettingsOutput)
}

func (i ChannelVideoBlackFailoverSettingsArgs) ToChannelVideoBlackFailoverSettingsPtrOutput() ChannelVideoBlackFailoverSettingsPtrOutput {
	return i.ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelVideoBlackFailoverSettingsArgs) ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoBlackFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoBlackFailoverSettingsOutput).ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(ctx)
}

// ChannelVideoBlackFailoverSettingsPtrInput is an input type that accepts ChannelVideoBlackFailoverSettingsArgs, ChannelVideoBlackFailoverSettingsPtr and ChannelVideoBlackFailoverSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelVideoBlackFailoverSettingsPtrInput` via:
//
//          ChannelVideoBlackFailoverSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelVideoBlackFailoverSettingsPtrInput interface {
	pulumi.Input

	ToChannelVideoBlackFailoverSettingsPtrOutput() ChannelVideoBlackFailoverSettingsPtrOutput
	ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(context.Context) ChannelVideoBlackFailoverSettingsPtrOutput
}

type channelVideoBlackFailoverSettingsPtrType ChannelVideoBlackFailoverSettingsArgs

func ChannelVideoBlackFailoverSettingsPtr(v *ChannelVideoBlackFailoverSettingsArgs) ChannelVideoBlackFailoverSettingsPtrInput {
	return (*channelVideoBlackFailoverSettingsPtrType)(v)
}

func (*channelVideoBlackFailoverSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoBlackFailoverSettings)(nil)).Elem()
}

func (i *channelVideoBlackFailoverSettingsPtrType) ToChannelVideoBlackFailoverSettingsPtrOutput() ChannelVideoBlackFailoverSettingsPtrOutput {
	return i.ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(context.Background())
}

func (i *channelVideoBlackFailoverSettingsPtrType) ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoBlackFailoverSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoBlackFailoverSettingsPtrOutput)
}

type ChannelVideoBlackFailoverSettingsOutput struct{ *pulumi.OutputState }

func (ChannelVideoBlackFailoverSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoBlackFailoverSettings)(nil)).Elem()
}

func (o ChannelVideoBlackFailoverSettingsOutput) ToChannelVideoBlackFailoverSettingsOutput() ChannelVideoBlackFailoverSettingsOutput {
	return o
}

func (o ChannelVideoBlackFailoverSettingsOutput) ToChannelVideoBlackFailoverSettingsOutputWithContext(ctx context.Context) ChannelVideoBlackFailoverSettingsOutput {
	return o
}

func (o ChannelVideoBlackFailoverSettingsOutput) ToChannelVideoBlackFailoverSettingsPtrOutput() ChannelVideoBlackFailoverSettingsPtrOutput {
	return o.ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelVideoBlackFailoverSettingsOutput) ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoBlackFailoverSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoBlackFailoverSettings) *ChannelVideoBlackFailoverSettings {
		return &v
	}).(ChannelVideoBlackFailoverSettingsPtrOutput)
}

func (o ChannelVideoBlackFailoverSettingsOutput) BlackDetectThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelVideoBlackFailoverSettings) *float64 { return v.BlackDetectThreshold }).(pulumi.Float64PtrOutput)
}

func (o ChannelVideoBlackFailoverSettingsOutput) VideoBlackThresholdMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelVideoBlackFailoverSettings) *int { return v.VideoBlackThresholdMsec }).(pulumi.IntPtrOutput)
}

type ChannelVideoBlackFailoverSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoBlackFailoverSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoBlackFailoverSettings)(nil)).Elem()
}

func (o ChannelVideoBlackFailoverSettingsPtrOutput) ToChannelVideoBlackFailoverSettingsPtrOutput() ChannelVideoBlackFailoverSettingsPtrOutput {
	return o
}

func (o ChannelVideoBlackFailoverSettingsPtrOutput) ToChannelVideoBlackFailoverSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoBlackFailoverSettingsPtrOutput {
	return o
}

func (o ChannelVideoBlackFailoverSettingsPtrOutput) Elem() ChannelVideoBlackFailoverSettingsOutput {
	return o.ApplyT(func(v *ChannelVideoBlackFailoverSettings) ChannelVideoBlackFailoverSettings {
		if v != nil {
			return *v
		}
		var ret ChannelVideoBlackFailoverSettings
		return ret
	}).(ChannelVideoBlackFailoverSettingsOutput)
}

func (o ChannelVideoBlackFailoverSettingsPtrOutput) BlackDetectThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelVideoBlackFailoverSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.BlackDetectThreshold
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelVideoBlackFailoverSettingsPtrOutput) VideoBlackThresholdMsec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelVideoBlackFailoverSettings) *int {
		if v == nil {
			return nil
		}
		return v.VideoBlackThresholdMsec
	}).(pulumi.IntPtrOutput)
}

type ChannelVideoCodecSettings struct {
	FrameCaptureSettings *ChannelFrameCaptureSettings `pulumi:"frameCaptureSettings"`
	H264Settings         *ChannelH264Settings         `pulumi:"h264Settings"`
	H265Settings         *ChannelH265Settings         `pulumi:"h265Settings"`
	Mpeg2Settings        *ChannelMpeg2Settings        `pulumi:"mpeg2Settings"`
}

// ChannelVideoCodecSettingsInput is an input type that accepts ChannelVideoCodecSettingsArgs and ChannelVideoCodecSettingsOutput values.
// You can construct a concrete instance of `ChannelVideoCodecSettingsInput` via:
//
//          ChannelVideoCodecSettingsArgs{...}
type ChannelVideoCodecSettingsInput interface {
	pulumi.Input

	ToChannelVideoCodecSettingsOutput() ChannelVideoCodecSettingsOutput
	ToChannelVideoCodecSettingsOutputWithContext(context.Context) ChannelVideoCodecSettingsOutput
}

type ChannelVideoCodecSettingsArgs struct {
	FrameCaptureSettings ChannelFrameCaptureSettingsPtrInput `pulumi:"frameCaptureSettings"`
	H264Settings         ChannelH264SettingsPtrInput         `pulumi:"h264Settings"`
	H265Settings         ChannelH265SettingsPtrInput         `pulumi:"h265Settings"`
	Mpeg2Settings        ChannelMpeg2SettingsPtrInput        `pulumi:"mpeg2Settings"`
}

func (ChannelVideoCodecSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoCodecSettings)(nil)).Elem()
}

func (i ChannelVideoCodecSettingsArgs) ToChannelVideoCodecSettingsOutput() ChannelVideoCodecSettingsOutput {
	return i.ToChannelVideoCodecSettingsOutputWithContext(context.Background())
}

func (i ChannelVideoCodecSettingsArgs) ToChannelVideoCodecSettingsOutputWithContext(ctx context.Context) ChannelVideoCodecSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoCodecSettingsOutput)
}

func (i ChannelVideoCodecSettingsArgs) ToChannelVideoCodecSettingsPtrOutput() ChannelVideoCodecSettingsPtrOutput {
	return i.ToChannelVideoCodecSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelVideoCodecSettingsArgs) ToChannelVideoCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoCodecSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoCodecSettingsOutput).ToChannelVideoCodecSettingsPtrOutputWithContext(ctx)
}

// ChannelVideoCodecSettingsPtrInput is an input type that accepts ChannelVideoCodecSettingsArgs, ChannelVideoCodecSettingsPtr and ChannelVideoCodecSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelVideoCodecSettingsPtrInput` via:
//
//          ChannelVideoCodecSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelVideoCodecSettingsPtrInput interface {
	pulumi.Input

	ToChannelVideoCodecSettingsPtrOutput() ChannelVideoCodecSettingsPtrOutput
	ToChannelVideoCodecSettingsPtrOutputWithContext(context.Context) ChannelVideoCodecSettingsPtrOutput
}

type channelVideoCodecSettingsPtrType ChannelVideoCodecSettingsArgs

func ChannelVideoCodecSettingsPtr(v *ChannelVideoCodecSettingsArgs) ChannelVideoCodecSettingsPtrInput {
	return (*channelVideoCodecSettingsPtrType)(v)
}

func (*channelVideoCodecSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoCodecSettings)(nil)).Elem()
}

func (i *channelVideoCodecSettingsPtrType) ToChannelVideoCodecSettingsPtrOutput() ChannelVideoCodecSettingsPtrOutput {
	return i.ToChannelVideoCodecSettingsPtrOutputWithContext(context.Background())
}

func (i *channelVideoCodecSettingsPtrType) ToChannelVideoCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoCodecSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoCodecSettingsPtrOutput)
}

type ChannelVideoCodecSettingsOutput struct{ *pulumi.OutputState }

func (ChannelVideoCodecSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoCodecSettings)(nil)).Elem()
}

func (o ChannelVideoCodecSettingsOutput) ToChannelVideoCodecSettingsOutput() ChannelVideoCodecSettingsOutput {
	return o
}

func (o ChannelVideoCodecSettingsOutput) ToChannelVideoCodecSettingsOutputWithContext(ctx context.Context) ChannelVideoCodecSettingsOutput {
	return o
}

func (o ChannelVideoCodecSettingsOutput) ToChannelVideoCodecSettingsPtrOutput() ChannelVideoCodecSettingsPtrOutput {
	return o.ToChannelVideoCodecSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelVideoCodecSettingsOutput) ToChannelVideoCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoCodecSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoCodecSettings) *ChannelVideoCodecSettings {
		return &v
	}).(ChannelVideoCodecSettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsOutput) FrameCaptureSettings() ChannelFrameCaptureSettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoCodecSettings) *ChannelFrameCaptureSettings { return v.FrameCaptureSettings }).(ChannelFrameCaptureSettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsOutput) H264Settings() ChannelH264SettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoCodecSettings) *ChannelH264Settings { return v.H264Settings }).(ChannelH264SettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsOutput) H265Settings() ChannelH265SettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoCodecSettings) *ChannelH265Settings { return v.H265Settings }).(ChannelH265SettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsOutput) Mpeg2Settings() ChannelMpeg2SettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoCodecSettings) *ChannelMpeg2Settings { return v.Mpeg2Settings }).(ChannelMpeg2SettingsPtrOutput)
}

type ChannelVideoCodecSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoCodecSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoCodecSettings)(nil)).Elem()
}

func (o ChannelVideoCodecSettingsPtrOutput) ToChannelVideoCodecSettingsPtrOutput() ChannelVideoCodecSettingsPtrOutput {
	return o
}

func (o ChannelVideoCodecSettingsPtrOutput) ToChannelVideoCodecSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoCodecSettingsPtrOutput {
	return o
}

func (o ChannelVideoCodecSettingsPtrOutput) Elem() ChannelVideoCodecSettingsOutput {
	return o.ApplyT(func(v *ChannelVideoCodecSettings) ChannelVideoCodecSettings {
		if v != nil {
			return *v
		}
		var ret ChannelVideoCodecSettings
		return ret
	}).(ChannelVideoCodecSettingsOutput)
}

func (o ChannelVideoCodecSettingsPtrOutput) FrameCaptureSettings() ChannelFrameCaptureSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoCodecSettings) *ChannelFrameCaptureSettings {
		if v == nil {
			return nil
		}
		return v.FrameCaptureSettings
	}).(ChannelFrameCaptureSettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsPtrOutput) H264Settings() ChannelH264SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoCodecSettings) *ChannelH264Settings {
		if v == nil {
			return nil
		}
		return v.H264Settings
	}).(ChannelH264SettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsPtrOutput) H265Settings() ChannelH265SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoCodecSettings) *ChannelH265Settings {
		if v == nil {
			return nil
		}
		return v.H265Settings
	}).(ChannelH265SettingsPtrOutput)
}

func (o ChannelVideoCodecSettingsPtrOutput) Mpeg2Settings() ChannelMpeg2SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoCodecSettings) *ChannelMpeg2Settings {
		if v == nil {
			return nil
		}
		return v.Mpeg2Settings
	}).(ChannelMpeg2SettingsPtrOutput)
}

type ChannelVideoDescription struct {
	CodecSettings   *ChannelVideoCodecSettings `pulumi:"codecSettings"`
	Height          *int                       `pulumi:"height"`
	Name            *string                    `pulumi:"name"`
	RespondToAfd    *string                    `pulumi:"respondToAfd"`
	ScalingBehavior *string                    `pulumi:"scalingBehavior"`
	Sharpness       *int                       `pulumi:"sharpness"`
	Width           *int                       `pulumi:"width"`
}

// ChannelVideoDescriptionInput is an input type that accepts ChannelVideoDescriptionArgs and ChannelVideoDescriptionOutput values.
// You can construct a concrete instance of `ChannelVideoDescriptionInput` via:
//
//          ChannelVideoDescriptionArgs{...}
type ChannelVideoDescriptionInput interface {
	pulumi.Input

	ToChannelVideoDescriptionOutput() ChannelVideoDescriptionOutput
	ToChannelVideoDescriptionOutputWithContext(context.Context) ChannelVideoDescriptionOutput
}

type ChannelVideoDescriptionArgs struct {
	CodecSettings   ChannelVideoCodecSettingsPtrInput `pulumi:"codecSettings"`
	Height          pulumi.IntPtrInput                `pulumi:"height"`
	Name            pulumi.StringPtrInput             `pulumi:"name"`
	RespondToAfd    pulumi.StringPtrInput             `pulumi:"respondToAfd"`
	ScalingBehavior pulumi.StringPtrInput             `pulumi:"scalingBehavior"`
	Sharpness       pulumi.IntPtrInput                `pulumi:"sharpness"`
	Width           pulumi.IntPtrInput                `pulumi:"width"`
}

func (ChannelVideoDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoDescription)(nil)).Elem()
}

func (i ChannelVideoDescriptionArgs) ToChannelVideoDescriptionOutput() ChannelVideoDescriptionOutput {
	return i.ToChannelVideoDescriptionOutputWithContext(context.Background())
}

func (i ChannelVideoDescriptionArgs) ToChannelVideoDescriptionOutputWithContext(ctx context.Context) ChannelVideoDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoDescriptionOutput)
}

// ChannelVideoDescriptionArrayInput is an input type that accepts ChannelVideoDescriptionArray and ChannelVideoDescriptionArrayOutput values.
// You can construct a concrete instance of `ChannelVideoDescriptionArrayInput` via:
//
//          ChannelVideoDescriptionArray{ ChannelVideoDescriptionArgs{...} }
type ChannelVideoDescriptionArrayInput interface {
	pulumi.Input

	ToChannelVideoDescriptionArrayOutput() ChannelVideoDescriptionArrayOutput
	ToChannelVideoDescriptionArrayOutputWithContext(context.Context) ChannelVideoDescriptionArrayOutput
}

type ChannelVideoDescriptionArray []ChannelVideoDescriptionInput

func (ChannelVideoDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelVideoDescription)(nil)).Elem()
}

func (i ChannelVideoDescriptionArray) ToChannelVideoDescriptionArrayOutput() ChannelVideoDescriptionArrayOutput {
	return i.ToChannelVideoDescriptionArrayOutputWithContext(context.Background())
}

func (i ChannelVideoDescriptionArray) ToChannelVideoDescriptionArrayOutputWithContext(ctx context.Context) ChannelVideoDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoDescriptionArrayOutput)
}

type ChannelVideoDescriptionOutput struct{ *pulumi.OutputState }

func (ChannelVideoDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoDescription)(nil)).Elem()
}

func (o ChannelVideoDescriptionOutput) ToChannelVideoDescriptionOutput() ChannelVideoDescriptionOutput {
	return o
}

func (o ChannelVideoDescriptionOutput) ToChannelVideoDescriptionOutputWithContext(ctx context.Context) ChannelVideoDescriptionOutput {
	return o
}

func (o ChannelVideoDescriptionOutput) CodecSettings() ChannelVideoCodecSettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *ChannelVideoCodecSettings { return v.CodecSettings }).(ChannelVideoCodecSettingsPtrOutput)
}

func (o ChannelVideoDescriptionOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *int { return v.Height }).(pulumi.IntPtrOutput)
}

func (o ChannelVideoDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ChannelVideoDescriptionOutput) RespondToAfd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *string { return v.RespondToAfd }).(pulumi.StringPtrOutput)
}

func (o ChannelVideoDescriptionOutput) ScalingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *string { return v.ScalingBehavior }).(pulumi.StringPtrOutput)
}

func (o ChannelVideoDescriptionOutput) Sharpness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *int { return v.Sharpness }).(pulumi.IntPtrOutput)
}

func (o ChannelVideoDescriptionOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelVideoDescription) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type ChannelVideoDescriptionArrayOutput struct{ *pulumi.OutputState }

func (ChannelVideoDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelVideoDescription)(nil)).Elem()
}

func (o ChannelVideoDescriptionArrayOutput) ToChannelVideoDescriptionArrayOutput() ChannelVideoDescriptionArrayOutput {
	return o
}

func (o ChannelVideoDescriptionArrayOutput) ToChannelVideoDescriptionArrayOutputWithContext(ctx context.Context) ChannelVideoDescriptionArrayOutput {
	return o
}

func (o ChannelVideoDescriptionArrayOutput) Index(i pulumi.IntInput) ChannelVideoDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelVideoDescription {
		return vs[0].([]ChannelVideoDescription)[vs[1].(int)]
	}).(ChannelVideoDescriptionOutput)
}

type ChannelVideoSelector struct {
	ColorSpace         *string                                 `pulumi:"colorSpace"`
	ColorSpaceSettings *ChannelVideoSelectorColorSpaceSettings `pulumi:"colorSpaceSettings"`
	ColorSpaceUsage    *string                                 `pulumi:"colorSpaceUsage"`
	SelectorSettings   *ChannelVideoSelectorSettings           `pulumi:"selectorSettings"`
}

// ChannelVideoSelectorInput is an input type that accepts ChannelVideoSelectorArgs and ChannelVideoSelectorOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorInput` via:
//
//          ChannelVideoSelectorArgs{...}
type ChannelVideoSelectorInput interface {
	pulumi.Input

	ToChannelVideoSelectorOutput() ChannelVideoSelectorOutput
	ToChannelVideoSelectorOutputWithContext(context.Context) ChannelVideoSelectorOutput
}

type ChannelVideoSelectorArgs struct {
	ColorSpace         pulumi.StringPtrInput                          `pulumi:"colorSpace"`
	ColorSpaceSettings ChannelVideoSelectorColorSpaceSettingsPtrInput `pulumi:"colorSpaceSettings"`
	ColorSpaceUsage    pulumi.StringPtrInput                          `pulumi:"colorSpaceUsage"`
	SelectorSettings   ChannelVideoSelectorSettingsPtrInput           `pulumi:"selectorSettings"`
}

func (ChannelVideoSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelector)(nil)).Elem()
}

func (i ChannelVideoSelectorArgs) ToChannelVideoSelectorOutput() ChannelVideoSelectorOutput {
	return i.ToChannelVideoSelectorOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorArgs) ToChannelVideoSelectorOutputWithContext(ctx context.Context) ChannelVideoSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorOutput)
}

func (i ChannelVideoSelectorArgs) ToChannelVideoSelectorPtrOutput() ChannelVideoSelectorPtrOutput {
	return i.ToChannelVideoSelectorPtrOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorArgs) ToChannelVideoSelectorPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorOutput).ToChannelVideoSelectorPtrOutputWithContext(ctx)
}

// ChannelVideoSelectorPtrInput is an input type that accepts ChannelVideoSelectorArgs, ChannelVideoSelectorPtr and ChannelVideoSelectorPtrOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorPtrInput` via:
//
//          ChannelVideoSelectorArgs{...}
//
//  or:
//
//          nil
type ChannelVideoSelectorPtrInput interface {
	pulumi.Input

	ToChannelVideoSelectorPtrOutput() ChannelVideoSelectorPtrOutput
	ToChannelVideoSelectorPtrOutputWithContext(context.Context) ChannelVideoSelectorPtrOutput
}

type channelVideoSelectorPtrType ChannelVideoSelectorArgs

func ChannelVideoSelectorPtr(v *ChannelVideoSelectorArgs) ChannelVideoSelectorPtrInput {
	return (*channelVideoSelectorPtrType)(v)
}

func (*channelVideoSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelector)(nil)).Elem()
}

func (i *channelVideoSelectorPtrType) ToChannelVideoSelectorPtrOutput() ChannelVideoSelectorPtrOutput {
	return i.ToChannelVideoSelectorPtrOutputWithContext(context.Background())
}

func (i *channelVideoSelectorPtrType) ToChannelVideoSelectorPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorPtrOutput)
}

type ChannelVideoSelectorOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelector)(nil)).Elem()
}

func (o ChannelVideoSelectorOutput) ToChannelVideoSelectorOutput() ChannelVideoSelectorOutput {
	return o
}

func (o ChannelVideoSelectorOutput) ToChannelVideoSelectorOutputWithContext(ctx context.Context) ChannelVideoSelectorOutput {
	return o
}

func (o ChannelVideoSelectorOutput) ToChannelVideoSelectorPtrOutput() ChannelVideoSelectorPtrOutput {
	return o.ToChannelVideoSelectorPtrOutputWithContext(context.Background())
}

func (o ChannelVideoSelectorOutput) ToChannelVideoSelectorPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoSelector) *ChannelVideoSelector {
		return &v
	}).(ChannelVideoSelectorPtrOutput)
}

func (o ChannelVideoSelectorOutput) ColorSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelector) *string { return v.ColorSpace }).(pulumi.StringPtrOutput)
}

func (o ChannelVideoSelectorOutput) ColorSpaceSettings() ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelector) *ChannelVideoSelectorColorSpaceSettings { return v.ColorSpaceSettings }).(ChannelVideoSelectorColorSpaceSettingsPtrOutput)
}

func (o ChannelVideoSelectorOutput) ColorSpaceUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelector) *string { return v.ColorSpaceUsage }).(pulumi.StringPtrOutput)
}

func (o ChannelVideoSelectorOutput) SelectorSettings() ChannelVideoSelectorSettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelector) *ChannelVideoSelectorSettings { return v.SelectorSettings }).(ChannelVideoSelectorSettingsPtrOutput)
}

type ChannelVideoSelectorPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelector)(nil)).Elem()
}

func (o ChannelVideoSelectorPtrOutput) ToChannelVideoSelectorPtrOutput() ChannelVideoSelectorPtrOutput {
	return o
}

func (o ChannelVideoSelectorPtrOutput) ToChannelVideoSelectorPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPtrOutput {
	return o
}

func (o ChannelVideoSelectorPtrOutput) Elem() ChannelVideoSelectorOutput {
	return o.ApplyT(func(v *ChannelVideoSelector) ChannelVideoSelector {
		if v != nil {
			return *v
		}
		var ret ChannelVideoSelector
		return ret
	}).(ChannelVideoSelectorOutput)
}

func (o ChannelVideoSelectorPtrOutput) ColorSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelector) *string {
		if v == nil {
			return nil
		}
		return v.ColorSpace
	}).(pulumi.StringPtrOutput)
}

func (o ChannelVideoSelectorPtrOutput) ColorSpaceSettings() ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelector) *ChannelVideoSelectorColorSpaceSettings {
		if v == nil {
			return nil
		}
		return v.ColorSpaceSettings
	}).(ChannelVideoSelectorColorSpaceSettingsPtrOutput)
}

func (o ChannelVideoSelectorPtrOutput) ColorSpaceUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelector) *string {
		if v == nil {
			return nil
		}
		return v.ColorSpaceUsage
	}).(pulumi.StringPtrOutput)
}

func (o ChannelVideoSelectorPtrOutput) SelectorSettings() ChannelVideoSelectorSettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelector) *ChannelVideoSelectorSettings {
		if v == nil {
			return nil
		}
		return v.SelectorSettings
	}).(ChannelVideoSelectorSettingsPtrOutput)
}

type ChannelVideoSelectorColorSpaceSettings struct {
	Hdr10Settings *ChannelHdr10Settings `pulumi:"hdr10Settings"`
}

// ChannelVideoSelectorColorSpaceSettingsInput is an input type that accepts ChannelVideoSelectorColorSpaceSettingsArgs and ChannelVideoSelectorColorSpaceSettingsOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorColorSpaceSettingsInput` via:
//
//          ChannelVideoSelectorColorSpaceSettingsArgs{...}
type ChannelVideoSelectorColorSpaceSettingsInput interface {
	pulumi.Input

	ToChannelVideoSelectorColorSpaceSettingsOutput() ChannelVideoSelectorColorSpaceSettingsOutput
	ToChannelVideoSelectorColorSpaceSettingsOutputWithContext(context.Context) ChannelVideoSelectorColorSpaceSettingsOutput
}

type ChannelVideoSelectorColorSpaceSettingsArgs struct {
	Hdr10Settings ChannelHdr10SettingsPtrInput `pulumi:"hdr10Settings"`
}

func (ChannelVideoSelectorColorSpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorColorSpaceSettings)(nil)).Elem()
}

func (i ChannelVideoSelectorColorSpaceSettingsArgs) ToChannelVideoSelectorColorSpaceSettingsOutput() ChannelVideoSelectorColorSpaceSettingsOutput {
	return i.ToChannelVideoSelectorColorSpaceSettingsOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorColorSpaceSettingsArgs) ToChannelVideoSelectorColorSpaceSettingsOutputWithContext(ctx context.Context) ChannelVideoSelectorColorSpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorColorSpaceSettingsOutput)
}

func (i ChannelVideoSelectorColorSpaceSettingsArgs) ToChannelVideoSelectorColorSpaceSettingsPtrOutput() ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return i.ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorColorSpaceSettingsArgs) ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorColorSpaceSettingsOutput).ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(ctx)
}

// ChannelVideoSelectorColorSpaceSettingsPtrInput is an input type that accepts ChannelVideoSelectorColorSpaceSettingsArgs, ChannelVideoSelectorColorSpaceSettingsPtr and ChannelVideoSelectorColorSpaceSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorColorSpaceSettingsPtrInput` via:
//
//          ChannelVideoSelectorColorSpaceSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelVideoSelectorColorSpaceSettingsPtrInput interface {
	pulumi.Input

	ToChannelVideoSelectorColorSpaceSettingsPtrOutput() ChannelVideoSelectorColorSpaceSettingsPtrOutput
	ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(context.Context) ChannelVideoSelectorColorSpaceSettingsPtrOutput
}

type channelVideoSelectorColorSpaceSettingsPtrType ChannelVideoSelectorColorSpaceSettingsArgs

func ChannelVideoSelectorColorSpaceSettingsPtr(v *ChannelVideoSelectorColorSpaceSettingsArgs) ChannelVideoSelectorColorSpaceSettingsPtrInput {
	return (*channelVideoSelectorColorSpaceSettingsPtrType)(v)
}

func (*channelVideoSelectorColorSpaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorColorSpaceSettings)(nil)).Elem()
}

func (i *channelVideoSelectorColorSpaceSettingsPtrType) ToChannelVideoSelectorColorSpaceSettingsPtrOutput() ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return i.ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i *channelVideoSelectorColorSpaceSettingsPtrType) ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorColorSpaceSettingsPtrOutput)
}

type ChannelVideoSelectorColorSpaceSettingsOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorColorSpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorColorSpaceSettings)(nil)).Elem()
}

func (o ChannelVideoSelectorColorSpaceSettingsOutput) ToChannelVideoSelectorColorSpaceSettingsOutput() ChannelVideoSelectorColorSpaceSettingsOutput {
	return o
}

func (o ChannelVideoSelectorColorSpaceSettingsOutput) ToChannelVideoSelectorColorSpaceSettingsOutputWithContext(ctx context.Context) ChannelVideoSelectorColorSpaceSettingsOutput {
	return o
}

func (o ChannelVideoSelectorColorSpaceSettingsOutput) ToChannelVideoSelectorColorSpaceSettingsPtrOutput() ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return o.ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelVideoSelectorColorSpaceSettingsOutput) ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoSelectorColorSpaceSettings) *ChannelVideoSelectorColorSpaceSettings {
		return &v
	}).(ChannelVideoSelectorColorSpaceSettingsPtrOutput)
}

func (o ChannelVideoSelectorColorSpaceSettingsOutput) Hdr10Settings() ChannelHdr10SettingsPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelectorColorSpaceSettings) *ChannelHdr10Settings { return v.Hdr10Settings }).(ChannelHdr10SettingsPtrOutput)
}

type ChannelVideoSelectorColorSpaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorColorSpaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorColorSpaceSettings)(nil)).Elem()
}

func (o ChannelVideoSelectorColorSpaceSettingsPtrOutput) ToChannelVideoSelectorColorSpaceSettingsPtrOutput() ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return o
}

func (o ChannelVideoSelectorColorSpaceSettingsPtrOutput) ToChannelVideoSelectorColorSpaceSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorColorSpaceSettingsPtrOutput {
	return o
}

func (o ChannelVideoSelectorColorSpaceSettingsPtrOutput) Elem() ChannelVideoSelectorColorSpaceSettingsOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorColorSpaceSettings) ChannelVideoSelectorColorSpaceSettings {
		if v != nil {
			return *v
		}
		var ret ChannelVideoSelectorColorSpaceSettings
		return ret
	}).(ChannelVideoSelectorColorSpaceSettingsOutput)
}

func (o ChannelVideoSelectorColorSpaceSettingsPtrOutput) Hdr10Settings() ChannelHdr10SettingsPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorColorSpaceSettings) *ChannelHdr10Settings {
		if v == nil {
			return nil
		}
		return v.Hdr10Settings
	}).(ChannelHdr10SettingsPtrOutput)
}

type ChannelVideoSelectorPid struct {
	Pid *int `pulumi:"pid"`
}

// ChannelVideoSelectorPidInput is an input type that accepts ChannelVideoSelectorPidArgs and ChannelVideoSelectorPidOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorPidInput` via:
//
//          ChannelVideoSelectorPidArgs{...}
type ChannelVideoSelectorPidInput interface {
	pulumi.Input

	ToChannelVideoSelectorPidOutput() ChannelVideoSelectorPidOutput
	ToChannelVideoSelectorPidOutputWithContext(context.Context) ChannelVideoSelectorPidOutput
}

type ChannelVideoSelectorPidArgs struct {
	Pid pulumi.IntPtrInput `pulumi:"pid"`
}

func (ChannelVideoSelectorPidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorPid)(nil)).Elem()
}

func (i ChannelVideoSelectorPidArgs) ToChannelVideoSelectorPidOutput() ChannelVideoSelectorPidOutput {
	return i.ToChannelVideoSelectorPidOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorPidArgs) ToChannelVideoSelectorPidOutputWithContext(ctx context.Context) ChannelVideoSelectorPidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorPidOutput)
}

func (i ChannelVideoSelectorPidArgs) ToChannelVideoSelectorPidPtrOutput() ChannelVideoSelectorPidPtrOutput {
	return i.ToChannelVideoSelectorPidPtrOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorPidArgs) ToChannelVideoSelectorPidPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorPidOutput).ToChannelVideoSelectorPidPtrOutputWithContext(ctx)
}

// ChannelVideoSelectorPidPtrInput is an input type that accepts ChannelVideoSelectorPidArgs, ChannelVideoSelectorPidPtr and ChannelVideoSelectorPidPtrOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorPidPtrInput` via:
//
//          ChannelVideoSelectorPidArgs{...}
//
//  or:
//
//          nil
type ChannelVideoSelectorPidPtrInput interface {
	pulumi.Input

	ToChannelVideoSelectorPidPtrOutput() ChannelVideoSelectorPidPtrOutput
	ToChannelVideoSelectorPidPtrOutputWithContext(context.Context) ChannelVideoSelectorPidPtrOutput
}

type channelVideoSelectorPidPtrType ChannelVideoSelectorPidArgs

func ChannelVideoSelectorPidPtr(v *ChannelVideoSelectorPidArgs) ChannelVideoSelectorPidPtrInput {
	return (*channelVideoSelectorPidPtrType)(v)
}

func (*channelVideoSelectorPidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorPid)(nil)).Elem()
}

func (i *channelVideoSelectorPidPtrType) ToChannelVideoSelectorPidPtrOutput() ChannelVideoSelectorPidPtrOutput {
	return i.ToChannelVideoSelectorPidPtrOutputWithContext(context.Background())
}

func (i *channelVideoSelectorPidPtrType) ToChannelVideoSelectorPidPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorPidPtrOutput)
}

type ChannelVideoSelectorPidOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorPidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorPid)(nil)).Elem()
}

func (o ChannelVideoSelectorPidOutput) ToChannelVideoSelectorPidOutput() ChannelVideoSelectorPidOutput {
	return o
}

func (o ChannelVideoSelectorPidOutput) ToChannelVideoSelectorPidOutputWithContext(ctx context.Context) ChannelVideoSelectorPidOutput {
	return o
}

func (o ChannelVideoSelectorPidOutput) ToChannelVideoSelectorPidPtrOutput() ChannelVideoSelectorPidPtrOutput {
	return o.ToChannelVideoSelectorPidPtrOutputWithContext(context.Background())
}

func (o ChannelVideoSelectorPidOutput) ToChannelVideoSelectorPidPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoSelectorPid) *ChannelVideoSelectorPid {
		return &v
	}).(ChannelVideoSelectorPidPtrOutput)
}

func (o ChannelVideoSelectorPidOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelectorPid) *int { return v.Pid }).(pulumi.IntPtrOutput)
}

type ChannelVideoSelectorPidPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorPidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorPid)(nil)).Elem()
}

func (o ChannelVideoSelectorPidPtrOutput) ToChannelVideoSelectorPidPtrOutput() ChannelVideoSelectorPidPtrOutput {
	return o
}

func (o ChannelVideoSelectorPidPtrOutput) ToChannelVideoSelectorPidPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorPidPtrOutput {
	return o
}

func (o ChannelVideoSelectorPidPtrOutput) Elem() ChannelVideoSelectorPidOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorPid) ChannelVideoSelectorPid {
		if v != nil {
			return *v
		}
		var ret ChannelVideoSelectorPid
		return ret
	}).(ChannelVideoSelectorPidOutput)
}

func (o ChannelVideoSelectorPidPtrOutput) Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorPid) *int {
		if v == nil {
			return nil
		}
		return v.Pid
	}).(pulumi.IntPtrOutput)
}

type ChannelVideoSelectorProgramId struct {
	ProgramId *int `pulumi:"programId"`
}

// ChannelVideoSelectorProgramIdInput is an input type that accepts ChannelVideoSelectorProgramIdArgs and ChannelVideoSelectorProgramIdOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorProgramIdInput` via:
//
//          ChannelVideoSelectorProgramIdArgs{...}
type ChannelVideoSelectorProgramIdInput interface {
	pulumi.Input

	ToChannelVideoSelectorProgramIdOutput() ChannelVideoSelectorProgramIdOutput
	ToChannelVideoSelectorProgramIdOutputWithContext(context.Context) ChannelVideoSelectorProgramIdOutput
}

type ChannelVideoSelectorProgramIdArgs struct {
	ProgramId pulumi.IntPtrInput `pulumi:"programId"`
}

func (ChannelVideoSelectorProgramIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorProgramId)(nil)).Elem()
}

func (i ChannelVideoSelectorProgramIdArgs) ToChannelVideoSelectorProgramIdOutput() ChannelVideoSelectorProgramIdOutput {
	return i.ToChannelVideoSelectorProgramIdOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorProgramIdArgs) ToChannelVideoSelectorProgramIdOutputWithContext(ctx context.Context) ChannelVideoSelectorProgramIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorProgramIdOutput)
}

func (i ChannelVideoSelectorProgramIdArgs) ToChannelVideoSelectorProgramIdPtrOutput() ChannelVideoSelectorProgramIdPtrOutput {
	return i.ToChannelVideoSelectorProgramIdPtrOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorProgramIdArgs) ToChannelVideoSelectorProgramIdPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorProgramIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorProgramIdOutput).ToChannelVideoSelectorProgramIdPtrOutputWithContext(ctx)
}

// ChannelVideoSelectorProgramIdPtrInput is an input type that accepts ChannelVideoSelectorProgramIdArgs, ChannelVideoSelectorProgramIdPtr and ChannelVideoSelectorProgramIdPtrOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorProgramIdPtrInput` via:
//
//          ChannelVideoSelectorProgramIdArgs{...}
//
//  or:
//
//          nil
type ChannelVideoSelectorProgramIdPtrInput interface {
	pulumi.Input

	ToChannelVideoSelectorProgramIdPtrOutput() ChannelVideoSelectorProgramIdPtrOutput
	ToChannelVideoSelectorProgramIdPtrOutputWithContext(context.Context) ChannelVideoSelectorProgramIdPtrOutput
}

type channelVideoSelectorProgramIdPtrType ChannelVideoSelectorProgramIdArgs

func ChannelVideoSelectorProgramIdPtr(v *ChannelVideoSelectorProgramIdArgs) ChannelVideoSelectorProgramIdPtrInput {
	return (*channelVideoSelectorProgramIdPtrType)(v)
}

func (*channelVideoSelectorProgramIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorProgramId)(nil)).Elem()
}

func (i *channelVideoSelectorProgramIdPtrType) ToChannelVideoSelectorProgramIdPtrOutput() ChannelVideoSelectorProgramIdPtrOutput {
	return i.ToChannelVideoSelectorProgramIdPtrOutputWithContext(context.Background())
}

func (i *channelVideoSelectorProgramIdPtrType) ToChannelVideoSelectorProgramIdPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorProgramIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorProgramIdPtrOutput)
}

type ChannelVideoSelectorProgramIdOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorProgramIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorProgramId)(nil)).Elem()
}

func (o ChannelVideoSelectorProgramIdOutput) ToChannelVideoSelectorProgramIdOutput() ChannelVideoSelectorProgramIdOutput {
	return o
}

func (o ChannelVideoSelectorProgramIdOutput) ToChannelVideoSelectorProgramIdOutputWithContext(ctx context.Context) ChannelVideoSelectorProgramIdOutput {
	return o
}

func (o ChannelVideoSelectorProgramIdOutput) ToChannelVideoSelectorProgramIdPtrOutput() ChannelVideoSelectorProgramIdPtrOutput {
	return o.ToChannelVideoSelectorProgramIdPtrOutputWithContext(context.Background())
}

func (o ChannelVideoSelectorProgramIdOutput) ToChannelVideoSelectorProgramIdPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorProgramIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoSelectorProgramId) *ChannelVideoSelectorProgramId {
		return &v
	}).(ChannelVideoSelectorProgramIdPtrOutput)
}

func (o ChannelVideoSelectorProgramIdOutput) ProgramId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelectorProgramId) *int { return v.ProgramId }).(pulumi.IntPtrOutput)
}

type ChannelVideoSelectorProgramIdPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorProgramIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorProgramId)(nil)).Elem()
}

func (o ChannelVideoSelectorProgramIdPtrOutput) ToChannelVideoSelectorProgramIdPtrOutput() ChannelVideoSelectorProgramIdPtrOutput {
	return o
}

func (o ChannelVideoSelectorProgramIdPtrOutput) ToChannelVideoSelectorProgramIdPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorProgramIdPtrOutput {
	return o
}

func (o ChannelVideoSelectorProgramIdPtrOutput) Elem() ChannelVideoSelectorProgramIdOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorProgramId) ChannelVideoSelectorProgramId {
		if v != nil {
			return *v
		}
		var ret ChannelVideoSelectorProgramId
		return ret
	}).(ChannelVideoSelectorProgramIdOutput)
}

func (o ChannelVideoSelectorProgramIdPtrOutput) ProgramId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorProgramId) *int {
		if v == nil {
			return nil
		}
		return v.ProgramId
	}).(pulumi.IntPtrOutput)
}

type ChannelVideoSelectorSettings struct {
	VideoSelectorPid       *ChannelVideoSelectorPid       `pulumi:"videoSelectorPid"`
	VideoSelectorProgramId *ChannelVideoSelectorProgramId `pulumi:"videoSelectorProgramId"`
}

// ChannelVideoSelectorSettingsInput is an input type that accepts ChannelVideoSelectorSettingsArgs and ChannelVideoSelectorSettingsOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorSettingsInput` via:
//
//          ChannelVideoSelectorSettingsArgs{...}
type ChannelVideoSelectorSettingsInput interface {
	pulumi.Input

	ToChannelVideoSelectorSettingsOutput() ChannelVideoSelectorSettingsOutput
	ToChannelVideoSelectorSettingsOutputWithContext(context.Context) ChannelVideoSelectorSettingsOutput
}

type ChannelVideoSelectorSettingsArgs struct {
	VideoSelectorPid       ChannelVideoSelectorPidPtrInput       `pulumi:"videoSelectorPid"`
	VideoSelectorProgramId ChannelVideoSelectorProgramIdPtrInput `pulumi:"videoSelectorProgramId"`
}

func (ChannelVideoSelectorSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorSettings)(nil)).Elem()
}

func (i ChannelVideoSelectorSettingsArgs) ToChannelVideoSelectorSettingsOutput() ChannelVideoSelectorSettingsOutput {
	return i.ToChannelVideoSelectorSettingsOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorSettingsArgs) ToChannelVideoSelectorSettingsOutputWithContext(ctx context.Context) ChannelVideoSelectorSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorSettingsOutput)
}

func (i ChannelVideoSelectorSettingsArgs) ToChannelVideoSelectorSettingsPtrOutput() ChannelVideoSelectorSettingsPtrOutput {
	return i.ToChannelVideoSelectorSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelVideoSelectorSettingsArgs) ToChannelVideoSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorSettingsOutput).ToChannelVideoSelectorSettingsPtrOutputWithContext(ctx)
}

// ChannelVideoSelectorSettingsPtrInput is an input type that accepts ChannelVideoSelectorSettingsArgs, ChannelVideoSelectorSettingsPtr and ChannelVideoSelectorSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelVideoSelectorSettingsPtrInput` via:
//
//          ChannelVideoSelectorSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelVideoSelectorSettingsPtrInput interface {
	pulumi.Input

	ToChannelVideoSelectorSettingsPtrOutput() ChannelVideoSelectorSettingsPtrOutput
	ToChannelVideoSelectorSettingsPtrOutputWithContext(context.Context) ChannelVideoSelectorSettingsPtrOutput
}

type channelVideoSelectorSettingsPtrType ChannelVideoSelectorSettingsArgs

func ChannelVideoSelectorSettingsPtr(v *ChannelVideoSelectorSettingsArgs) ChannelVideoSelectorSettingsPtrInput {
	return (*channelVideoSelectorSettingsPtrType)(v)
}

func (*channelVideoSelectorSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorSettings)(nil)).Elem()
}

func (i *channelVideoSelectorSettingsPtrType) ToChannelVideoSelectorSettingsPtrOutput() ChannelVideoSelectorSettingsPtrOutput {
	return i.ToChannelVideoSelectorSettingsPtrOutputWithContext(context.Background())
}

func (i *channelVideoSelectorSettingsPtrType) ToChannelVideoSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVideoSelectorSettingsPtrOutput)
}

type ChannelVideoSelectorSettingsOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVideoSelectorSettings)(nil)).Elem()
}

func (o ChannelVideoSelectorSettingsOutput) ToChannelVideoSelectorSettingsOutput() ChannelVideoSelectorSettingsOutput {
	return o
}

func (o ChannelVideoSelectorSettingsOutput) ToChannelVideoSelectorSettingsOutputWithContext(ctx context.Context) ChannelVideoSelectorSettingsOutput {
	return o
}

func (o ChannelVideoSelectorSettingsOutput) ToChannelVideoSelectorSettingsPtrOutput() ChannelVideoSelectorSettingsPtrOutput {
	return o.ToChannelVideoSelectorSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelVideoSelectorSettingsOutput) ToChannelVideoSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVideoSelectorSettings) *ChannelVideoSelectorSettings {
		return &v
	}).(ChannelVideoSelectorSettingsPtrOutput)
}

func (o ChannelVideoSelectorSettingsOutput) VideoSelectorPid() ChannelVideoSelectorPidPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelectorSettings) *ChannelVideoSelectorPid { return v.VideoSelectorPid }).(ChannelVideoSelectorPidPtrOutput)
}

func (o ChannelVideoSelectorSettingsOutput) VideoSelectorProgramId() ChannelVideoSelectorProgramIdPtrOutput {
	return o.ApplyT(func(v ChannelVideoSelectorSettings) *ChannelVideoSelectorProgramId { return v.VideoSelectorProgramId }).(ChannelVideoSelectorProgramIdPtrOutput)
}

type ChannelVideoSelectorSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelVideoSelectorSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVideoSelectorSettings)(nil)).Elem()
}

func (o ChannelVideoSelectorSettingsPtrOutput) ToChannelVideoSelectorSettingsPtrOutput() ChannelVideoSelectorSettingsPtrOutput {
	return o
}

func (o ChannelVideoSelectorSettingsPtrOutput) ToChannelVideoSelectorSettingsPtrOutputWithContext(ctx context.Context) ChannelVideoSelectorSettingsPtrOutput {
	return o
}

func (o ChannelVideoSelectorSettingsPtrOutput) Elem() ChannelVideoSelectorSettingsOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorSettings) ChannelVideoSelectorSettings {
		if v != nil {
			return *v
		}
		var ret ChannelVideoSelectorSettings
		return ret
	}).(ChannelVideoSelectorSettingsOutput)
}

func (o ChannelVideoSelectorSettingsPtrOutput) VideoSelectorPid() ChannelVideoSelectorPidPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorSettings) *ChannelVideoSelectorPid {
		if v == nil {
			return nil
		}
		return v.VideoSelectorPid
	}).(ChannelVideoSelectorPidPtrOutput)
}

func (o ChannelVideoSelectorSettingsPtrOutput) VideoSelectorProgramId() ChannelVideoSelectorProgramIdPtrOutput {
	return o.ApplyT(func(v *ChannelVideoSelectorSettings) *ChannelVideoSelectorProgramId {
		if v == nil {
			return nil
		}
		return v.VideoSelectorProgramId
	}).(ChannelVideoSelectorProgramIdPtrOutput)
}

type ChannelVpcOutputSettings struct {
	PublicAddressAllocationIds []string `pulumi:"publicAddressAllocationIds"`
	SecurityGroupIds           []string `pulumi:"securityGroupIds"`
	SubnetIds                  []string `pulumi:"subnetIds"`
}

// ChannelVpcOutputSettingsInput is an input type that accepts ChannelVpcOutputSettingsArgs and ChannelVpcOutputSettingsOutput values.
// You can construct a concrete instance of `ChannelVpcOutputSettingsInput` via:
//
//          ChannelVpcOutputSettingsArgs{...}
type ChannelVpcOutputSettingsInput interface {
	pulumi.Input

	ToChannelVpcOutputSettingsOutput() ChannelVpcOutputSettingsOutput
	ToChannelVpcOutputSettingsOutputWithContext(context.Context) ChannelVpcOutputSettingsOutput
}

type ChannelVpcOutputSettingsArgs struct {
	PublicAddressAllocationIds pulumi.StringArrayInput `pulumi:"publicAddressAllocationIds"`
	SecurityGroupIds           pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds                  pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ChannelVpcOutputSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVpcOutputSettings)(nil)).Elem()
}

func (i ChannelVpcOutputSettingsArgs) ToChannelVpcOutputSettingsOutput() ChannelVpcOutputSettingsOutput {
	return i.ToChannelVpcOutputSettingsOutputWithContext(context.Background())
}

func (i ChannelVpcOutputSettingsArgs) ToChannelVpcOutputSettingsOutputWithContext(ctx context.Context) ChannelVpcOutputSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVpcOutputSettingsOutput)
}

func (i ChannelVpcOutputSettingsArgs) ToChannelVpcOutputSettingsPtrOutput() ChannelVpcOutputSettingsPtrOutput {
	return i.ToChannelVpcOutputSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelVpcOutputSettingsArgs) ToChannelVpcOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelVpcOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVpcOutputSettingsOutput).ToChannelVpcOutputSettingsPtrOutputWithContext(ctx)
}

// ChannelVpcOutputSettingsPtrInput is an input type that accepts ChannelVpcOutputSettingsArgs, ChannelVpcOutputSettingsPtr and ChannelVpcOutputSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelVpcOutputSettingsPtrInput` via:
//
//          ChannelVpcOutputSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelVpcOutputSettingsPtrInput interface {
	pulumi.Input

	ToChannelVpcOutputSettingsPtrOutput() ChannelVpcOutputSettingsPtrOutput
	ToChannelVpcOutputSettingsPtrOutputWithContext(context.Context) ChannelVpcOutputSettingsPtrOutput
}

type channelVpcOutputSettingsPtrType ChannelVpcOutputSettingsArgs

func ChannelVpcOutputSettingsPtr(v *ChannelVpcOutputSettingsArgs) ChannelVpcOutputSettingsPtrInput {
	return (*channelVpcOutputSettingsPtrType)(v)
}

func (*channelVpcOutputSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVpcOutputSettings)(nil)).Elem()
}

func (i *channelVpcOutputSettingsPtrType) ToChannelVpcOutputSettingsPtrOutput() ChannelVpcOutputSettingsPtrOutput {
	return i.ToChannelVpcOutputSettingsPtrOutputWithContext(context.Background())
}

func (i *channelVpcOutputSettingsPtrType) ToChannelVpcOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelVpcOutputSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelVpcOutputSettingsPtrOutput)
}

type ChannelVpcOutputSettingsOutput struct{ *pulumi.OutputState }

func (ChannelVpcOutputSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelVpcOutputSettings)(nil)).Elem()
}

func (o ChannelVpcOutputSettingsOutput) ToChannelVpcOutputSettingsOutput() ChannelVpcOutputSettingsOutput {
	return o
}

func (o ChannelVpcOutputSettingsOutput) ToChannelVpcOutputSettingsOutputWithContext(ctx context.Context) ChannelVpcOutputSettingsOutput {
	return o
}

func (o ChannelVpcOutputSettingsOutput) ToChannelVpcOutputSettingsPtrOutput() ChannelVpcOutputSettingsPtrOutput {
	return o.ToChannelVpcOutputSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelVpcOutputSettingsOutput) ToChannelVpcOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelVpcOutputSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelVpcOutputSettings) *ChannelVpcOutputSettings {
		return &v
	}).(ChannelVpcOutputSettingsPtrOutput)
}

func (o ChannelVpcOutputSettingsOutput) PublicAddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelVpcOutputSettings) []string { return v.PublicAddressAllocationIds }).(pulumi.StringArrayOutput)
}

func (o ChannelVpcOutputSettingsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelVpcOutputSettings) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ChannelVpcOutputSettingsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ChannelVpcOutputSettings) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ChannelVpcOutputSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelVpcOutputSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelVpcOutputSettings)(nil)).Elem()
}

func (o ChannelVpcOutputSettingsPtrOutput) ToChannelVpcOutputSettingsPtrOutput() ChannelVpcOutputSettingsPtrOutput {
	return o
}

func (o ChannelVpcOutputSettingsPtrOutput) ToChannelVpcOutputSettingsPtrOutputWithContext(ctx context.Context) ChannelVpcOutputSettingsPtrOutput {
	return o
}

func (o ChannelVpcOutputSettingsPtrOutput) Elem() ChannelVpcOutputSettingsOutput {
	return o.ApplyT(func(v *ChannelVpcOutputSettings) ChannelVpcOutputSettings {
		if v != nil {
			return *v
		}
		var ret ChannelVpcOutputSettings
		return ret
	}).(ChannelVpcOutputSettingsOutput)
}

func (o ChannelVpcOutputSettingsPtrOutput) PublicAddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ChannelVpcOutputSettings) []string {
		if v == nil {
			return nil
		}
		return v.PublicAddressAllocationIds
	}).(pulumi.StringArrayOutput)
}

func (o ChannelVpcOutputSettingsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ChannelVpcOutputSettings) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ChannelVpcOutputSettingsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ChannelVpcOutputSettings) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type ChannelWavSettings struct {
	BitDepth   *float64 `pulumi:"bitDepth"`
	CodingMode *string  `pulumi:"codingMode"`
	SampleRate *float64 `pulumi:"sampleRate"`
}

// ChannelWavSettingsInput is an input type that accepts ChannelWavSettingsArgs and ChannelWavSettingsOutput values.
// You can construct a concrete instance of `ChannelWavSettingsInput` via:
//
//          ChannelWavSettingsArgs{...}
type ChannelWavSettingsInput interface {
	pulumi.Input

	ToChannelWavSettingsOutput() ChannelWavSettingsOutput
	ToChannelWavSettingsOutputWithContext(context.Context) ChannelWavSettingsOutput
}

type ChannelWavSettingsArgs struct {
	BitDepth   pulumi.Float64PtrInput `pulumi:"bitDepth"`
	CodingMode pulumi.StringPtrInput  `pulumi:"codingMode"`
	SampleRate pulumi.Float64PtrInput `pulumi:"sampleRate"`
}

func (ChannelWavSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelWavSettings)(nil)).Elem()
}

func (i ChannelWavSettingsArgs) ToChannelWavSettingsOutput() ChannelWavSettingsOutput {
	return i.ToChannelWavSettingsOutputWithContext(context.Background())
}

func (i ChannelWavSettingsArgs) ToChannelWavSettingsOutputWithContext(ctx context.Context) ChannelWavSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelWavSettingsOutput)
}

func (i ChannelWavSettingsArgs) ToChannelWavSettingsPtrOutput() ChannelWavSettingsPtrOutput {
	return i.ToChannelWavSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelWavSettingsArgs) ToChannelWavSettingsPtrOutputWithContext(ctx context.Context) ChannelWavSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelWavSettingsOutput).ToChannelWavSettingsPtrOutputWithContext(ctx)
}

// ChannelWavSettingsPtrInput is an input type that accepts ChannelWavSettingsArgs, ChannelWavSettingsPtr and ChannelWavSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelWavSettingsPtrInput` via:
//
//          ChannelWavSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelWavSettingsPtrInput interface {
	pulumi.Input

	ToChannelWavSettingsPtrOutput() ChannelWavSettingsPtrOutput
	ToChannelWavSettingsPtrOutputWithContext(context.Context) ChannelWavSettingsPtrOutput
}

type channelWavSettingsPtrType ChannelWavSettingsArgs

func ChannelWavSettingsPtr(v *ChannelWavSettingsArgs) ChannelWavSettingsPtrInput {
	return (*channelWavSettingsPtrType)(v)
}

func (*channelWavSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelWavSettings)(nil)).Elem()
}

func (i *channelWavSettingsPtrType) ToChannelWavSettingsPtrOutput() ChannelWavSettingsPtrOutput {
	return i.ToChannelWavSettingsPtrOutputWithContext(context.Background())
}

func (i *channelWavSettingsPtrType) ToChannelWavSettingsPtrOutputWithContext(ctx context.Context) ChannelWavSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelWavSettingsPtrOutput)
}

type ChannelWavSettingsOutput struct{ *pulumi.OutputState }

func (ChannelWavSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelWavSettings)(nil)).Elem()
}

func (o ChannelWavSettingsOutput) ToChannelWavSettingsOutput() ChannelWavSettingsOutput {
	return o
}

func (o ChannelWavSettingsOutput) ToChannelWavSettingsOutputWithContext(ctx context.Context) ChannelWavSettingsOutput {
	return o
}

func (o ChannelWavSettingsOutput) ToChannelWavSettingsPtrOutput() ChannelWavSettingsPtrOutput {
	return o.ToChannelWavSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelWavSettingsOutput) ToChannelWavSettingsPtrOutputWithContext(ctx context.Context) ChannelWavSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelWavSettings) *ChannelWavSettings {
		return &v
	}).(ChannelWavSettingsPtrOutput)
}

func (o ChannelWavSettingsOutput) BitDepth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelWavSettings) *float64 { return v.BitDepth }).(pulumi.Float64PtrOutput)
}

func (o ChannelWavSettingsOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelWavSettings) *string { return v.CodingMode }).(pulumi.StringPtrOutput)
}

func (o ChannelWavSettingsOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ChannelWavSettings) *float64 { return v.SampleRate }).(pulumi.Float64PtrOutput)
}

type ChannelWavSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelWavSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelWavSettings)(nil)).Elem()
}

func (o ChannelWavSettingsPtrOutput) ToChannelWavSettingsPtrOutput() ChannelWavSettingsPtrOutput {
	return o
}

func (o ChannelWavSettingsPtrOutput) ToChannelWavSettingsPtrOutputWithContext(ctx context.Context) ChannelWavSettingsPtrOutput {
	return o
}

func (o ChannelWavSettingsPtrOutput) Elem() ChannelWavSettingsOutput {
	return o.ApplyT(func(v *ChannelWavSettings) ChannelWavSettings {
		if v != nil {
			return *v
		}
		var ret ChannelWavSettings
		return ret
	}).(ChannelWavSettingsOutput)
}

func (o ChannelWavSettingsPtrOutput) BitDepth() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelWavSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.BitDepth
	}).(pulumi.Float64PtrOutput)
}

func (o ChannelWavSettingsPtrOutput) CodingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelWavSettings) *string {
		if v == nil {
			return nil
		}
		return v.CodingMode
	}).(pulumi.StringPtrOutput)
}

func (o ChannelWavSettingsPtrOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ChannelWavSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.SampleRate
	}).(pulumi.Float64PtrOutput)
}

type ChannelWebvttDestinationSettings struct {
}

// ChannelWebvttDestinationSettingsInput is an input type that accepts ChannelWebvttDestinationSettingsArgs and ChannelWebvttDestinationSettingsOutput values.
// You can construct a concrete instance of `ChannelWebvttDestinationSettingsInput` via:
//
//          ChannelWebvttDestinationSettingsArgs{...}
type ChannelWebvttDestinationSettingsInput interface {
	pulumi.Input

	ToChannelWebvttDestinationSettingsOutput() ChannelWebvttDestinationSettingsOutput
	ToChannelWebvttDestinationSettingsOutputWithContext(context.Context) ChannelWebvttDestinationSettingsOutput
}

type ChannelWebvttDestinationSettingsArgs struct {
}

func (ChannelWebvttDestinationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelWebvttDestinationSettings)(nil)).Elem()
}

func (i ChannelWebvttDestinationSettingsArgs) ToChannelWebvttDestinationSettingsOutput() ChannelWebvttDestinationSettingsOutput {
	return i.ToChannelWebvttDestinationSettingsOutputWithContext(context.Background())
}

func (i ChannelWebvttDestinationSettingsArgs) ToChannelWebvttDestinationSettingsOutputWithContext(ctx context.Context) ChannelWebvttDestinationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelWebvttDestinationSettingsOutput)
}

func (i ChannelWebvttDestinationSettingsArgs) ToChannelWebvttDestinationSettingsPtrOutput() ChannelWebvttDestinationSettingsPtrOutput {
	return i.ToChannelWebvttDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i ChannelWebvttDestinationSettingsArgs) ToChannelWebvttDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelWebvttDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelWebvttDestinationSettingsOutput).ToChannelWebvttDestinationSettingsPtrOutputWithContext(ctx)
}

// ChannelWebvttDestinationSettingsPtrInput is an input type that accepts ChannelWebvttDestinationSettingsArgs, ChannelWebvttDestinationSettingsPtr and ChannelWebvttDestinationSettingsPtrOutput values.
// You can construct a concrete instance of `ChannelWebvttDestinationSettingsPtrInput` via:
//
//          ChannelWebvttDestinationSettingsArgs{...}
//
//  or:
//
//          nil
type ChannelWebvttDestinationSettingsPtrInput interface {
	pulumi.Input

	ToChannelWebvttDestinationSettingsPtrOutput() ChannelWebvttDestinationSettingsPtrOutput
	ToChannelWebvttDestinationSettingsPtrOutputWithContext(context.Context) ChannelWebvttDestinationSettingsPtrOutput
}

type channelWebvttDestinationSettingsPtrType ChannelWebvttDestinationSettingsArgs

func ChannelWebvttDestinationSettingsPtr(v *ChannelWebvttDestinationSettingsArgs) ChannelWebvttDestinationSettingsPtrInput {
	return (*channelWebvttDestinationSettingsPtrType)(v)
}

func (*channelWebvttDestinationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelWebvttDestinationSettings)(nil)).Elem()
}

func (i *channelWebvttDestinationSettingsPtrType) ToChannelWebvttDestinationSettingsPtrOutput() ChannelWebvttDestinationSettingsPtrOutput {
	return i.ToChannelWebvttDestinationSettingsPtrOutputWithContext(context.Background())
}

func (i *channelWebvttDestinationSettingsPtrType) ToChannelWebvttDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelWebvttDestinationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelWebvttDestinationSettingsPtrOutput)
}

type ChannelWebvttDestinationSettingsOutput struct{ *pulumi.OutputState }

func (ChannelWebvttDestinationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelWebvttDestinationSettings)(nil)).Elem()
}

func (o ChannelWebvttDestinationSettingsOutput) ToChannelWebvttDestinationSettingsOutput() ChannelWebvttDestinationSettingsOutput {
	return o
}

func (o ChannelWebvttDestinationSettingsOutput) ToChannelWebvttDestinationSettingsOutputWithContext(ctx context.Context) ChannelWebvttDestinationSettingsOutput {
	return o
}

func (o ChannelWebvttDestinationSettingsOutput) ToChannelWebvttDestinationSettingsPtrOutput() ChannelWebvttDestinationSettingsPtrOutput {
	return o.ToChannelWebvttDestinationSettingsPtrOutputWithContext(context.Background())
}

func (o ChannelWebvttDestinationSettingsOutput) ToChannelWebvttDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelWebvttDestinationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelWebvttDestinationSettings) *ChannelWebvttDestinationSettings {
		return &v
	}).(ChannelWebvttDestinationSettingsPtrOutput)
}

type ChannelWebvttDestinationSettingsPtrOutput struct{ *pulumi.OutputState }

func (ChannelWebvttDestinationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelWebvttDestinationSettings)(nil)).Elem()
}

func (o ChannelWebvttDestinationSettingsPtrOutput) ToChannelWebvttDestinationSettingsPtrOutput() ChannelWebvttDestinationSettingsPtrOutput {
	return o
}

func (o ChannelWebvttDestinationSettingsPtrOutput) ToChannelWebvttDestinationSettingsPtrOutputWithContext(ctx context.Context) ChannelWebvttDestinationSettingsPtrOutput {
	return o
}

func (o ChannelWebvttDestinationSettingsPtrOutput) Elem() ChannelWebvttDestinationSettingsOutput {
	return o.ApplyT(func(v *ChannelWebvttDestinationSettings) ChannelWebvttDestinationSettings {
		if v != nil {
			return *v
		}
		var ret ChannelWebvttDestinationSettings
		return ret
	}).(ChannelWebvttDestinationSettingsOutput)
}

type InputDestinationRequest struct {
	StreamName *string `pulumi:"streamName"`
}

// InputDestinationRequestInput is an input type that accepts InputDestinationRequestArgs and InputDestinationRequestOutput values.
// You can construct a concrete instance of `InputDestinationRequestInput` via:
//
//          InputDestinationRequestArgs{...}
type InputDestinationRequestInput interface {
	pulumi.Input

	ToInputDestinationRequestOutput() InputDestinationRequestOutput
	ToInputDestinationRequestOutputWithContext(context.Context) InputDestinationRequestOutput
}

type InputDestinationRequestArgs struct {
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (InputDestinationRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDestinationRequest)(nil)).Elem()
}

func (i InputDestinationRequestArgs) ToInputDestinationRequestOutput() InputDestinationRequestOutput {
	return i.ToInputDestinationRequestOutputWithContext(context.Background())
}

func (i InputDestinationRequestArgs) ToInputDestinationRequestOutputWithContext(ctx context.Context) InputDestinationRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDestinationRequestOutput)
}

// InputDestinationRequestArrayInput is an input type that accepts InputDestinationRequestArray and InputDestinationRequestArrayOutput values.
// You can construct a concrete instance of `InputDestinationRequestArrayInput` via:
//
//          InputDestinationRequestArray{ InputDestinationRequestArgs{...} }
type InputDestinationRequestArrayInput interface {
	pulumi.Input

	ToInputDestinationRequestArrayOutput() InputDestinationRequestArrayOutput
	ToInputDestinationRequestArrayOutputWithContext(context.Context) InputDestinationRequestArrayOutput
}

type InputDestinationRequestArray []InputDestinationRequestInput

func (InputDestinationRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDestinationRequest)(nil)).Elem()
}

func (i InputDestinationRequestArray) ToInputDestinationRequestArrayOutput() InputDestinationRequestArrayOutput {
	return i.ToInputDestinationRequestArrayOutputWithContext(context.Background())
}

func (i InputDestinationRequestArray) ToInputDestinationRequestArrayOutputWithContext(ctx context.Context) InputDestinationRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDestinationRequestArrayOutput)
}

type InputDestinationRequestOutput struct{ *pulumi.OutputState }

func (InputDestinationRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDestinationRequest)(nil)).Elem()
}

func (o InputDestinationRequestOutput) ToInputDestinationRequestOutput() InputDestinationRequestOutput {
	return o
}

func (o InputDestinationRequestOutput) ToInputDestinationRequestOutputWithContext(ctx context.Context) InputDestinationRequestOutput {
	return o
}

func (o InputDestinationRequestOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDestinationRequest) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

type InputDestinationRequestArrayOutput struct{ *pulumi.OutputState }

func (InputDestinationRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDestinationRequest)(nil)).Elem()
}

func (o InputDestinationRequestArrayOutput) ToInputDestinationRequestArrayOutput() InputDestinationRequestArrayOutput {
	return o
}

func (o InputDestinationRequestArrayOutput) ToInputDestinationRequestArrayOutputWithContext(ctx context.Context) InputDestinationRequestArrayOutput {
	return o
}

func (o InputDestinationRequestArrayOutput) Index(i pulumi.IntInput) InputDestinationRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputDestinationRequest {
		return vs[0].([]InputDestinationRequest)[vs[1].(int)]
	}).(InputDestinationRequestOutput)
}

type InputDeviceSettings struct {
	Id *string `pulumi:"id"`
}

// InputDeviceSettingsInput is an input type that accepts InputDeviceSettingsArgs and InputDeviceSettingsOutput values.
// You can construct a concrete instance of `InputDeviceSettingsInput` via:
//
//          InputDeviceSettingsArgs{...}
type InputDeviceSettingsInput interface {
	pulumi.Input

	ToInputDeviceSettingsOutput() InputDeviceSettingsOutput
	ToInputDeviceSettingsOutputWithContext(context.Context) InputDeviceSettingsOutput
}

type InputDeviceSettingsArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (InputDeviceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDeviceSettings)(nil)).Elem()
}

func (i InputDeviceSettingsArgs) ToInputDeviceSettingsOutput() InputDeviceSettingsOutput {
	return i.ToInputDeviceSettingsOutputWithContext(context.Background())
}

func (i InputDeviceSettingsArgs) ToInputDeviceSettingsOutputWithContext(ctx context.Context) InputDeviceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDeviceSettingsOutput)
}

// InputDeviceSettingsArrayInput is an input type that accepts InputDeviceSettingsArray and InputDeviceSettingsArrayOutput values.
// You can construct a concrete instance of `InputDeviceSettingsArrayInput` via:
//
//          InputDeviceSettingsArray{ InputDeviceSettingsArgs{...} }
type InputDeviceSettingsArrayInput interface {
	pulumi.Input

	ToInputDeviceSettingsArrayOutput() InputDeviceSettingsArrayOutput
	ToInputDeviceSettingsArrayOutputWithContext(context.Context) InputDeviceSettingsArrayOutput
}

type InputDeviceSettingsArray []InputDeviceSettingsInput

func (InputDeviceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDeviceSettings)(nil)).Elem()
}

func (i InputDeviceSettingsArray) ToInputDeviceSettingsArrayOutput() InputDeviceSettingsArrayOutput {
	return i.ToInputDeviceSettingsArrayOutputWithContext(context.Background())
}

func (i InputDeviceSettingsArray) ToInputDeviceSettingsArrayOutputWithContext(ctx context.Context) InputDeviceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDeviceSettingsArrayOutput)
}

type InputDeviceSettingsOutput struct{ *pulumi.OutputState }

func (InputDeviceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDeviceSettings)(nil)).Elem()
}

func (o InputDeviceSettingsOutput) ToInputDeviceSettingsOutput() InputDeviceSettingsOutput {
	return o
}

func (o InputDeviceSettingsOutput) ToInputDeviceSettingsOutputWithContext(ctx context.Context) InputDeviceSettingsOutput {
	return o
}

func (o InputDeviceSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDeviceSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type InputDeviceSettingsArrayOutput struct{ *pulumi.OutputState }

func (InputDeviceSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDeviceSettings)(nil)).Elem()
}

func (o InputDeviceSettingsArrayOutput) ToInputDeviceSettingsArrayOutput() InputDeviceSettingsArrayOutput {
	return o
}

func (o InputDeviceSettingsArrayOutput) ToInputDeviceSettingsArrayOutputWithContext(ctx context.Context) InputDeviceSettingsArrayOutput {
	return o
}

func (o InputDeviceSettingsArrayOutput) Index(i pulumi.IntInput) InputDeviceSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputDeviceSettings {
		return vs[0].([]InputDeviceSettings)[vs[1].(int)]
	}).(InputDeviceSettingsOutput)
}

type InputMediaConnectFlowRequest struct {
	FlowArn *string `pulumi:"flowArn"`
}

// InputMediaConnectFlowRequestInput is an input type that accepts InputMediaConnectFlowRequestArgs and InputMediaConnectFlowRequestOutput values.
// You can construct a concrete instance of `InputMediaConnectFlowRequestInput` via:
//
//          InputMediaConnectFlowRequestArgs{...}
type InputMediaConnectFlowRequestInput interface {
	pulumi.Input

	ToInputMediaConnectFlowRequestOutput() InputMediaConnectFlowRequestOutput
	ToInputMediaConnectFlowRequestOutputWithContext(context.Context) InputMediaConnectFlowRequestOutput
}

type InputMediaConnectFlowRequestArgs struct {
	FlowArn pulumi.StringPtrInput `pulumi:"flowArn"`
}

func (InputMediaConnectFlowRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputMediaConnectFlowRequest)(nil)).Elem()
}

func (i InputMediaConnectFlowRequestArgs) ToInputMediaConnectFlowRequestOutput() InputMediaConnectFlowRequestOutput {
	return i.ToInputMediaConnectFlowRequestOutputWithContext(context.Background())
}

func (i InputMediaConnectFlowRequestArgs) ToInputMediaConnectFlowRequestOutputWithContext(ctx context.Context) InputMediaConnectFlowRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputMediaConnectFlowRequestOutput)
}

// InputMediaConnectFlowRequestArrayInput is an input type that accepts InputMediaConnectFlowRequestArray and InputMediaConnectFlowRequestArrayOutput values.
// You can construct a concrete instance of `InputMediaConnectFlowRequestArrayInput` via:
//
//          InputMediaConnectFlowRequestArray{ InputMediaConnectFlowRequestArgs{...} }
type InputMediaConnectFlowRequestArrayInput interface {
	pulumi.Input

	ToInputMediaConnectFlowRequestArrayOutput() InputMediaConnectFlowRequestArrayOutput
	ToInputMediaConnectFlowRequestArrayOutputWithContext(context.Context) InputMediaConnectFlowRequestArrayOutput
}

type InputMediaConnectFlowRequestArray []InputMediaConnectFlowRequestInput

func (InputMediaConnectFlowRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputMediaConnectFlowRequest)(nil)).Elem()
}

func (i InputMediaConnectFlowRequestArray) ToInputMediaConnectFlowRequestArrayOutput() InputMediaConnectFlowRequestArrayOutput {
	return i.ToInputMediaConnectFlowRequestArrayOutputWithContext(context.Background())
}

func (i InputMediaConnectFlowRequestArray) ToInputMediaConnectFlowRequestArrayOutputWithContext(ctx context.Context) InputMediaConnectFlowRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputMediaConnectFlowRequestArrayOutput)
}

type InputMediaConnectFlowRequestOutput struct{ *pulumi.OutputState }

func (InputMediaConnectFlowRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputMediaConnectFlowRequest)(nil)).Elem()
}

func (o InputMediaConnectFlowRequestOutput) ToInputMediaConnectFlowRequestOutput() InputMediaConnectFlowRequestOutput {
	return o
}

func (o InputMediaConnectFlowRequestOutput) ToInputMediaConnectFlowRequestOutputWithContext(ctx context.Context) InputMediaConnectFlowRequestOutput {
	return o
}

func (o InputMediaConnectFlowRequestOutput) FlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputMediaConnectFlowRequest) *string { return v.FlowArn }).(pulumi.StringPtrOutput)
}

type InputMediaConnectFlowRequestArrayOutput struct{ *pulumi.OutputState }

func (InputMediaConnectFlowRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputMediaConnectFlowRequest)(nil)).Elem()
}

func (o InputMediaConnectFlowRequestArrayOutput) ToInputMediaConnectFlowRequestArrayOutput() InputMediaConnectFlowRequestArrayOutput {
	return o
}

func (o InputMediaConnectFlowRequestArrayOutput) ToInputMediaConnectFlowRequestArrayOutputWithContext(ctx context.Context) InputMediaConnectFlowRequestArrayOutput {
	return o
}

func (o InputMediaConnectFlowRequestArrayOutput) Index(i pulumi.IntInput) InputMediaConnectFlowRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputMediaConnectFlowRequest {
		return vs[0].([]InputMediaConnectFlowRequest)[vs[1].(int)]
	}).(InputMediaConnectFlowRequestOutput)
}

type InputSecurityGroupInputWhitelistRuleCidr struct {
	Cidr *string `pulumi:"cidr"`
}

// InputSecurityGroupInputWhitelistRuleCidrInput is an input type that accepts InputSecurityGroupInputWhitelistRuleCidrArgs and InputSecurityGroupInputWhitelistRuleCidrOutput values.
// You can construct a concrete instance of `InputSecurityGroupInputWhitelistRuleCidrInput` via:
//
//          InputSecurityGroupInputWhitelistRuleCidrArgs{...}
type InputSecurityGroupInputWhitelistRuleCidrInput interface {
	pulumi.Input

	ToInputSecurityGroupInputWhitelistRuleCidrOutput() InputSecurityGroupInputWhitelistRuleCidrOutput
	ToInputSecurityGroupInputWhitelistRuleCidrOutputWithContext(context.Context) InputSecurityGroupInputWhitelistRuleCidrOutput
}

type InputSecurityGroupInputWhitelistRuleCidrArgs struct {
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
}

func (InputSecurityGroupInputWhitelistRuleCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSecurityGroupInputWhitelistRuleCidr)(nil)).Elem()
}

func (i InputSecurityGroupInputWhitelistRuleCidrArgs) ToInputSecurityGroupInputWhitelistRuleCidrOutput() InputSecurityGroupInputWhitelistRuleCidrOutput {
	return i.ToInputSecurityGroupInputWhitelistRuleCidrOutputWithContext(context.Background())
}

func (i InputSecurityGroupInputWhitelistRuleCidrArgs) ToInputSecurityGroupInputWhitelistRuleCidrOutputWithContext(ctx context.Context) InputSecurityGroupInputWhitelistRuleCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSecurityGroupInputWhitelistRuleCidrOutput)
}

// InputSecurityGroupInputWhitelistRuleCidrArrayInput is an input type that accepts InputSecurityGroupInputWhitelistRuleCidrArray and InputSecurityGroupInputWhitelistRuleCidrArrayOutput values.
// You can construct a concrete instance of `InputSecurityGroupInputWhitelistRuleCidrArrayInput` via:
//
//          InputSecurityGroupInputWhitelistRuleCidrArray{ InputSecurityGroupInputWhitelistRuleCidrArgs{...} }
type InputSecurityGroupInputWhitelistRuleCidrArrayInput interface {
	pulumi.Input

	ToInputSecurityGroupInputWhitelistRuleCidrArrayOutput() InputSecurityGroupInputWhitelistRuleCidrArrayOutput
	ToInputSecurityGroupInputWhitelistRuleCidrArrayOutputWithContext(context.Context) InputSecurityGroupInputWhitelistRuleCidrArrayOutput
}

type InputSecurityGroupInputWhitelistRuleCidrArray []InputSecurityGroupInputWhitelistRuleCidrInput

func (InputSecurityGroupInputWhitelistRuleCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSecurityGroupInputWhitelistRuleCidr)(nil)).Elem()
}

func (i InputSecurityGroupInputWhitelistRuleCidrArray) ToInputSecurityGroupInputWhitelistRuleCidrArrayOutput() InputSecurityGroupInputWhitelistRuleCidrArrayOutput {
	return i.ToInputSecurityGroupInputWhitelistRuleCidrArrayOutputWithContext(context.Background())
}

func (i InputSecurityGroupInputWhitelistRuleCidrArray) ToInputSecurityGroupInputWhitelistRuleCidrArrayOutputWithContext(ctx context.Context) InputSecurityGroupInputWhitelistRuleCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSecurityGroupInputWhitelistRuleCidrArrayOutput)
}

type InputSecurityGroupInputWhitelistRuleCidrOutput struct{ *pulumi.OutputState }

func (InputSecurityGroupInputWhitelistRuleCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSecurityGroupInputWhitelistRuleCidr)(nil)).Elem()
}

func (o InputSecurityGroupInputWhitelistRuleCidrOutput) ToInputSecurityGroupInputWhitelistRuleCidrOutput() InputSecurityGroupInputWhitelistRuleCidrOutput {
	return o
}

func (o InputSecurityGroupInputWhitelistRuleCidrOutput) ToInputSecurityGroupInputWhitelistRuleCidrOutputWithContext(ctx context.Context) InputSecurityGroupInputWhitelistRuleCidrOutput {
	return o
}

func (o InputSecurityGroupInputWhitelistRuleCidrOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSecurityGroupInputWhitelistRuleCidr) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

type InputSecurityGroupInputWhitelistRuleCidrArrayOutput struct{ *pulumi.OutputState }

func (InputSecurityGroupInputWhitelistRuleCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSecurityGroupInputWhitelistRuleCidr)(nil)).Elem()
}

func (o InputSecurityGroupInputWhitelistRuleCidrArrayOutput) ToInputSecurityGroupInputWhitelistRuleCidrArrayOutput() InputSecurityGroupInputWhitelistRuleCidrArrayOutput {
	return o
}

func (o InputSecurityGroupInputWhitelistRuleCidrArrayOutput) ToInputSecurityGroupInputWhitelistRuleCidrArrayOutputWithContext(ctx context.Context) InputSecurityGroupInputWhitelistRuleCidrArrayOutput {
	return o
}

func (o InputSecurityGroupInputWhitelistRuleCidrArrayOutput) Index(i pulumi.IntInput) InputSecurityGroupInputWhitelistRuleCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputSecurityGroupInputWhitelistRuleCidr {
		return vs[0].([]InputSecurityGroupInputWhitelistRuleCidr)[vs[1].(int)]
	}).(InputSecurityGroupInputWhitelistRuleCidrOutput)
}

type InputSourceRequest struct {
	PasswordParam *string `pulumi:"passwordParam"`
	Url           *string `pulumi:"url"`
	Username      *string `pulumi:"username"`
}

// InputSourceRequestInput is an input type that accepts InputSourceRequestArgs and InputSourceRequestOutput values.
// You can construct a concrete instance of `InputSourceRequestInput` via:
//
//          InputSourceRequestArgs{...}
type InputSourceRequestInput interface {
	pulumi.Input

	ToInputSourceRequestOutput() InputSourceRequestOutput
	ToInputSourceRequestOutputWithContext(context.Context) InputSourceRequestOutput
}

type InputSourceRequestArgs struct {
	PasswordParam pulumi.StringPtrInput `pulumi:"passwordParam"`
	Url           pulumi.StringPtrInput `pulumi:"url"`
	Username      pulumi.StringPtrInput `pulumi:"username"`
}

func (InputSourceRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSourceRequest)(nil)).Elem()
}

func (i InputSourceRequestArgs) ToInputSourceRequestOutput() InputSourceRequestOutput {
	return i.ToInputSourceRequestOutputWithContext(context.Background())
}

func (i InputSourceRequestArgs) ToInputSourceRequestOutputWithContext(ctx context.Context) InputSourceRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSourceRequestOutput)
}

// InputSourceRequestArrayInput is an input type that accepts InputSourceRequestArray and InputSourceRequestArrayOutput values.
// You can construct a concrete instance of `InputSourceRequestArrayInput` via:
//
//          InputSourceRequestArray{ InputSourceRequestArgs{...} }
type InputSourceRequestArrayInput interface {
	pulumi.Input

	ToInputSourceRequestArrayOutput() InputSourceRequestArrayOutput
	ToInputSourceRequestArrayOutputWithContext(context.Context) InputSourceRequestArrayOutput
}

type InputSourceRequestArray []InputSourceRequestInput

func (InputSourceRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSourceRequest)(nil)).Elem()
}

func (i InputSourceRequestArray) ToInputSourceRequestArrayOutput() InputSourceRequestArrayOutput {
	return i.ToInputSourceRequestArrayOutputWithContext(context.Background())
}

func (i InputSourceRequestArray) ToInputSourceRequestArrayOutputWithContext(ctx context.Context) InputSourceRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSourceRequestArrayOutput)
}

type InputSourceRequestOutput struct{ *pulumi.OutputState }

func (InputSourceRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSourceRequest)(nil)).Elem()
}

func (o InputSourceRequestOutput) ToInputSourceRequestOutput() InputSourceRequestOutput {
	return o
}

func (o InputSourceRequestOutput) ToInputSourceRequestOutputWithContext(ctx context.Context) InputSourceRequestOutput {
	return o
}

func (o InputSourceRequestOutput) PasswordParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSourceRequest) *string { return v.PasswordParam }).(pulumi.StringPtrOutput)
}

func (o InputSourceRequestOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSourceRequest) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o InputSourceRequestOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSourceRequest) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type InputSourceRequestArrayOutput struct{ *pulumi.OutputState }

func (InputSourceRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSourceRequest)(nil)).Elem()
}

func (o InputSourceRequestArrayOutput) ToInputSourceRequestArrayOutput() InputSourceRequestArrayOutput {
	return o
}

func (o InputSourceRequestArrayOutput) ToInputSourceRequestArrayOutputWithContext(ctx context.Context) InputSourceRequestArrayOutput {
	return o
}

func (o InputSourceRequestArrayOutput) Index(i pulumi.IntInput) InputSourceRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputSourceRequest {
		return vs[0].([]InputSourceRequest)[vs[1].(int)]
	}).(InputSourceRequestOutput)
}

type InputVpcRequest struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
}

// InputVpcRequestInput is an input type that accepts InputVpcRequestArgs and InputVpcRequestOutput values.
// You can construct a concrete instance of `InputVpcRequestInput` via:
//
//          InputVpcRequestArgs{...}
type InputVpcRequestInput interface {
	pulumi.Input

	ToInputVpcRequestOutput() InputVpcRequestOutput
	ToInputVpcRequestOutputWithContext(context.Context) InputVpcRequestOutput
}

type InputVpcRequestArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (InputVpcRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputVpcRequest)(nil)).Elem()
}

func (i InputVpcRequestArgs) ToInputVpcRequestOutput() InputVpcRequestOutput {
	return i.ToInputVpcRequestOutputWithContext(context.Background())
}

func (i InputVpcRequestArgs) ToInputVpcRequestOutputWithContext(ctx context.Context) InputVpcRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputVpcRequestOutput)
}

func (i InputVpcRequestArgs) ToInputVpcRequestPtrOutput() InputVpcRequestPtrOutput {
	return i.ToInputVpcRequestPtrOutputWithContext(context.Background())
}

func (i InputVpcRequestArgs) ToInputVpcRequestPtrOutputWithContext(ctx context.Context) InputVpcRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputVpcRequestOutput).ToInputVpcRequestPtrOutputWithContext(ctx)
}

// InputVpcRequestPtrInput is an input type that accepts InputVpcRequestArgs, InputVpcRequestPtr and InputVpcRequestPtrOutput values.
// You can construct a concrete instance of `InputVpcRequestPtrInput` via:
//
//          InputVpcRequestArgs{...}
//
//  or:
//
//          nil
type InputVpcRequestPtrInput interface {
	pulumi.Input

	ToInputVpcRequestPtrOutput() InputVpcRequestPtrOutput
	ToInputVpcRequestPtrOutputWithContext(context.Context) InputVpcRequestPtrOutput
}

type inputVpcRequestPtrType InputVpcRequestArgs

func InputVpcRequestPtr(v *InputVpcRequestArgs) InputVpcRequestPtrInput {
	return (*inputVpcRequestPtrType)(v)
}

func (*inputVpcRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputVpcRequest)(nil)).Elem()
}

func (i *inputVpcRequestPtrType) ToInputVpcRequestPtrOutput() InputVpcRequestPtrOutput {
	return i.ToInputVpcRequestPtrOutputWithContext(context.Background())
}

func (i *inputVpcRequestPtrType) ToInputVpcRequestPtrOutputWithContext(ctx context.Context) InputVpcRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputVpcRequestPtrOutput)
}

type InputVpcRequestOutput struct{ *pulumi.OutputState }

func (InputVpcRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputVpcRequest)(nil)).Elem()
}

func (o InputVpcRequestOutput) ToInputVpcRequestOutput() InputVpcRequestOutput {
	return o
}

func (o InputVpcRequestOutput) ToInputVpcRequestOutputWithContext(ctx context.Context) InputVpcRequestOutput {
	return o
}

func (o InputVpcRequestOutput) ToInputVpcRequestPtrOutput() InputVpcRequestPtrOutput {
	return o.ToInputVpcRequestPtrOutputWithContext(context.Background())
}

func (o InputVpcRequestOutput) ToInputVpcRequestPtrOutputWithContext(ctx context.Context) InputVpcRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputVpcRequest) *InputVpcRequest {
		return &v
	}).(InputVpcRequestPtrOutput)
}

func (o InputVpcRequestOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InputVpcRequest) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o InputVpcRequestOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InputVpcRequest) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type InputVpcRequestPtrOutput struct{ *pulumi.OutputState }

func (InputVpcRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputVpcRequest)(nil)).Elem()
}

func (o InputVpcRequestPtrOutput) ToInputVpcRequestPtrOutput() InputVpcRequestPtrOutput {
	return o
}

func (o InputVpcRequestPtrOutput) ToInputVpcRequestPtrOutputWithContext(ctx context.Context) InputVpcRequestPtrOutput {
	return o
}

func (o InputVpcRequestPtrOutput) Elem() InputVpcRequestOutput {
	return o.ApplyT(func(v *InputVpcRequest) InputVpcRequest {
		if v != nil {
			return *v
		}
		var ret InputVpcRequest
		return ret
	}).(InputVpcRequestOutput)
}

func (o InputVpcRequestPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InputVpcRequest) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o InputVpcRequestPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InputVpcRequest) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ChannelAacSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAacSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAc3SettingsOutput{})
	pulumi.RegisterOutputType(ChannelAc3SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAncillarySourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAncillarySourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelArchiveCdnSettingsOutput{})
	pulumi.RegisterOutputType(ChannelArchiveCdnSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelArchiveContainerSettingsOutput{})
	pulumi.RegisterOutputType(ChannelArchiveContainerSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelArchiveGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelArchiveGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelArchiveOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelArchiveOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelArchiveS3SettingsOutput{})
	pulumi.RegisterOutputType(ChannelArchiveS3SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAribDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAribDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAribSourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAribSourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioChannelMappingOutput{})
	pulumi.RegisterOutputType(ChannelAudioChannelMappingArrayOutput{})
	pulumi.RegisterOutputType(ChannelAudioCodecSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAudioCodecSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioDescriptionOutput{})
	pulumi.RegisterOutputType(ChannelAudioDescriptionArrayOutput{})
	pulumi.RegisterOutputType(ChannelAudioLanguageSelectionOutput{})
	pulumi.RegisterOutputType(ChannelAudioLanguageSelectionPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioNormalizationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAudioNormalizationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioOnlyHlsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAudioOnlyHlsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioPidSelectionOutput{})
	pulumi.RegisterOutputType(ChannelAudioPidSelectionPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioSelectorOutput{})
	pulumi.RegisterOutputType(ChannelAudioSelectorArrayOutput{})
	pulumi.RegisterOutputType(ChannelAudioSelectorSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAudioSelectorSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioSilenceFailoverSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAudioSilenceFailoverSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAudioTrackOutput{})
	pulumi.RegisterOutputType(ChannelAudioTrackArrayOutput{})
	pulumi.RegisterOutputType(ChannelAudioTrackSelectionOutput{})
	pulumi.RegisterOutputType(ChannelAudioTrackSelectionPtrOutput{})
	pulumi.RegisterOutputType(ChannelAutomaticInputFailoverSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAutomaticInputFailoverSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelAvailBlankingOutput{})
	pulumi.RegisterOutputType(ChannelAvailBlankingPtrOutput{})
	pulumi.RegisterOutputType(ChannelAvailConfigurationOutput{})
	pulumi.RegisterOutputType(ChannelAvailConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ChannelAvailSettingsOutput{})
	pulumi.RegisterOutputType(ChannelAvailSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelBlackoutSlateOutput{})
	pulumi.RegisterOutputType(ChannelBlackoutSlatePtrOutput{})
	pulumi.RegisterOutputType(ChannelBurnInDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelBurnInDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelCaptionDescriptionOutput{})
	pulumi.RegisterOutputType(ChannelCaptionDescriptionArrayOutput{})
	pulumi.RegisterOutputType(ChannelCaptionDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelCaptionDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelCaptionLanguageMappingOutput{})
	pulumi.RegisterOutputType(ChannelCaptionLanguageMappingArrayOutput{})
	pulumi.RegisterOutputType(ChannelCaptionRectangleOutput{})
	pulumi.RegisterOutputType(ChannelCaptionRectanglePtrOutput{})
	pulumi.RegisterOutputType(ChannelCaptionSelectorOutput{})
	pulumi.RegisterOutputType(ChannelCaptionSelectorArrayOutput{})
	pulumi.RegisterOutputType(ChannelCaptionSelectorSettingsOutput{})
	pulumi.RegisterOutputType(ChannelCaptionSelectorSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelCdiInputSpecificationOutput{})
	pulumi.RegisterOutputType(ChannelCdiInputSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ChannelColorSpacePassthroughSettingsOutput{})
	pulumi.RegisterOutputType(ChannelColorSpacePassthroughSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelDvbNitSettingsOutput{})
	pulumi.RegisterOutputType(ChannelDvbNitSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelDvbSdtSettingsOutput{})
	pulumi.RegisterOutputType(ChannelDvbSdtSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelDvbSubDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelDvbSubDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelDvbSubSourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelDvbSubSourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelDvbTdtSettingsOutput{})
	pulumi.RegisterOutputType(ChannelDvbTdtSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelEac3SettingsOutput{})
	pulumi.RegisterOutputType(ChannelEac3SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelEbuTtDDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelEbuTtDDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelEmbeddedDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelEmbeddedDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelEmbeddedPlusScte20DestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelEmbeddedPlusScte20DestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelEmbeddedSourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelEmbeddedSourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelEncoderSettingsOutput{})
	pulumi.RegisterOutputType(ChannelEncoderSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFailoverConditionOutput{})
	pulumi.RegisterOutputType(ChannelFailoverConditionArrayOutput{})
	pulumi.RegisterOutputType(ChannelFailoverConditionSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFailoverConditionSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFeatureActivationsOutput{})
	pulumi.RegisterOutputType(ChannelFeatureActivationsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFecOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFecOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFmp4HlsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFmp4HlsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureCdnSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureCdnSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureHlsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureHlsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureS3SettingsOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureS3SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureSettingsOutput{})
	pulumi.RegisterOutputType(ChannelFrameCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelGlobalConfigurationOutput{})
	pulumi.RegisterOutputType(ChannelGlobalConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ChannelH264ColorSpaceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelH264ColorSpaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelH264FilterSettingsOutput{})
	pulumi.RegisterOutputType(ChannelH264FilterSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelH264SettingsOutput{})
	pulumi.RegisterOutputType(ChannelH264SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelH265ColorSpaceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelH265ColorSpaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelH265FilterSettingsOutput{})
	pulumi.RegisterOutputType(ChannelH265FilterSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelH265SettingsOutput{})
	pulumi.RegisterOutputType(ChannelH265SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHdr10SettingsOutput{})
	pulumi.RegisterOutputType(ChannelHdr10SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsAkamaiSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsAkamaiSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsBasicPutSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsBasicPutSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsCdnSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsCdnSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsInputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsInputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsMediaStoreSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsMediaStoreSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsS3SettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsS3SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHlsWebdavSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHlsWebdavSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelHtmlMotionGraphicsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelHtmlMotionGraphicsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelInputAttachmentOutput{})
	pulumi.RegisterOutputType(ChannelInputAttachmentArrayOutput{})
	pulumi.RegisterOutputType(ChannelInputChannelLevelOutput{})
	pulumi.RegisterOutputType(ChannelInputChannelLevelArrayOutput{})
	pulumi.RegisterOutputType(ChannelInputLocationOutput{})
	pulumi.RegisterOutputType(ChannelInputLocationPtrOutput{})
	pulumi.RegisterOutputType(ChannelInputLossBehaviorOutput{})
	pulumi.RegisterOutputType(ChannelInputLossBehaviorPtrOutput{})
	pulumi.RegisterOutputType(ChannelInputLossFailoverSettingsOutput{})
	pulumi.RegisterOutputType(ChannelInputLossFailoverSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelInputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelInputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelInputSpecificationOutput{})
	pulumi.RegisterOutputType(ChannelInputSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ChannelKeyProviderSettingsOutput{})
	pulumi.RegisterOutputType(ChannelKeyProviderSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelM2tsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelM2tsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelM3u8SettingsOutput{})
	pulumi.RegisterOutputType(ChannelM3u8SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMediaPackageGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMediaPackageGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMediaPackageOutputDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMediaPackageOutputDestinationSettingsArrayOutput{})
	pulumi.RegisterOutputType(ChannelMediaPackageOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMediaPackageOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMotionGraphicsConfigurationOutput{})
	pulumi.RegisterOutputType(ChannelMotionGraphicsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ChannelMotionGraphicsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMotionGraphicsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMp2SettingsOutput{})
	pulumi.RegisterOutputType(ChannelMp2SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMpeg2FilterSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMpeg2FilterSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMpeg2SettingsOutput{})
	pulumi.RegisterOutputType(ChannelMpeg2SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMsSmoothGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMsSmoothGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMsSmoothOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMsSmoothOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMultiplexGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMultiplexGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMultiplexOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMultiplexOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelMultiplexProgramChannelDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelMultiplexProgramChannelDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelNetworkInputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelNetworkInputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelNielsenConfigurationOutput{})
	pulumi.RegisterOutputType(ChannelNielsenConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ChannelOutputTypeOutput{})
	pulumi.RegisterOutputType(ChannelOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(ChannelOutputDestinationOutput{})
	pulumi.RegisterOutputType(ChannelOutputDestinationArrayOutput{})
	pulumi.RegisterOutputType(ChannelOutputDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelOutputDestinationSettingsArrayOutput{})
	pulumi.RegisterOutputType(ChannelOutputGroupOutput{})
	pulumi.RegisterOutputType(ChannelOutputGroupArrayOutput{})
	pulumi.RegisterOutputType(ChannelOutputGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelOutputGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelOutputLocationRefOutput{})
	pulumi.RegisterOutputType(ChannelOutputLocationRefPtrOutput{})
	pulumi.RegisterOutputType(ChannelOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelPassThroughSettingsOutput{})
	pulumi.RegisterOutputType(ChannelPassThroughSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRawSettingsOutput{})
	pulumi.RegisterOutputType(ChannelRawSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRec601SettingsOutput{})
	pulumi.RegisterOutputType(ChannelRec601SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRec709SettingsOutput{})
	pulumi.RegisterOutputType(ChannelRec709SettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRemixSettingsOutput{})
	pulumi.RegisterOutputType(ChannelRemixSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRtmpCaptionInfoDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelRtmpCaptionInfoDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRtmpGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelRtmpGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelRtmpOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelRtmpOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelScte20PlusEmbeddedDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelScte20PlusEmbeddedDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelScte20SourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelScte20SourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelScte27DestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelScte27DestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelScte27SourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelScte27SourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelScte35SpliceInsertOutput{})
	pulumi.RegisterOutputType(ChannelScte35SpliceInsertPtrOutput{})
	pulumi.RegisterOutputType(ChannelScte35TimeSignalAposOutput{})
	pulumi.RegisterOutputType(ChannelScte35TimeSignalAposPtrOutput{})
	pulumi.RegisterOutputType(ChannelSmpteTtDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelSmpteTtDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelStandardHlsSettingsOutput{})
	pulumi.RegisterOutputType(ChannelStandardHlsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelStaticKeySettingsOutput{})
	pulumi.RegisterOutputType(ChannelStaticKeySettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelTeletextDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelTeletextDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelTeletextSourceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelTeletextSourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelTemporalFilterSettingsOutput{})
	pulumi.RegisterOutputType(ChannelTemporalFilterSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelTimecodeConfigOutput{})
	pulumi.RegisterOutputType(ChannelTimecodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ChannelTtmlDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelTtmlDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelUdpContainerSettingsOutput{})
	pulumi.RegisterOutputType(ChannelUdpContainerSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelUdpGroupSettingsOutput{})
	pulumi.RegisterOutputType(ChannelUdpGroupSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelUdpOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelUdpOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoBlackFailoverSettingsOutput{})
	pulumi.RegisterOutputType(ChannelVideoBlackFailoverSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoCodecSettingsOutput{})
	pulumi.RegisterOutputType(ChannelVideoCodecSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoDescriptionOutput{})
	pulumi.RegisterOutputType(ChannelVideoDescriptionArrayOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorColorSpaceSettingsOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorColorSpaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorPidOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorPidPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorProgramIdOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorProgramIdPtrOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorSettingsOutput{})
	pulumi.RegisterOutputType(ChannelVideoSelectorSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelVpcOutputSettingsOutput{})
	pulumi.RegisterOutputType(ChannelVpcOutputSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelWavSettingsOutput{})
	pulumi.RegisterOutputType(ChannelWavSettingsPtrOutput{})
	pulumi.RegisterOutputType(ChannelWebvttDestinationSettingsOutput{})
	pulumi.RegisterOutputType(ChannelWebvttDestinationSettingsPtrOutput{})
	pulumi.RegisterOutputType(InputDestinationRequestOutput{})
	pulumi.RegisterOutputType(InputDestinationRequestArrayOutput{})
	pulumi.RegisterOutputType(InputDeviceSettingsOutput{})
	pulumi.RegisterOutputType(InputDeviceSettingsArrayOutput{})
	pulumi.RegisterOutputType(InputMediaConnectFlowRequestOutput{})
	pulumi.RegisterOutputType(InputMediaConnectFlowRequestArrayOutput{})
	pulumi.RegisterOutputType(InputSecurityGroupInputWhitelistRuleCidrOutput{})
	pulumi.RegisterOutputType(InputSecurityGroupInputWhitelistRuleCidrArrayOutput{})
	pulumi.RegisterOutputType(InputSourceRequestOutput{})
	pulumi.RegisterOutputType(InputSourceRequestArrayOutput{})
	pulumi.RegisterOutputType(InputVpcRequestOutput{})
	pulumi.RegisterOutputType(InputVpcRequestPtrOutput{})
}
