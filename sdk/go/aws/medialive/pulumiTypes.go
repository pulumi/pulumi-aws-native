// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type ChannelPlacementGroupTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// Network mappings for the cluster
type ClusterInterfaceMapping struct {
	// logical interface name, unique in the list
	LogicalInterfaceName *string `pulumi:"logicalInterfaceName"`
	// Network Id to be associated with the logical interface name, can be duplicated in list
	NetworkId *string `pulumi:"networkId"`
}

// ClusterInterfaceMappingInput is an input type that accepts ClusterInterfaceMappingArgs and ClusterInterfaceMappingOutput values.
// You can construct a concrete instance of `ClusterInterfaceMappingInput` via:
//
//	ClusterInterfaceMappingArgs{...}
type ClusterInterfaceMappingInput interface {
	pulumi.Input

	ToClusterInterfaceMappingOutput() ClusterInterfaceMappingOutput
	ToClusterInterfaceMappingOutputWithContext(context.Context) ClusterInterfaceMappingOutput
}

// Network mappings for the cluster
type ClusterInterfaceMappingArgs struct {
	// logical interface name, unique in the list
	LogicalInterfaceName pulumi.StringPtrInput `pulumi:"logicalInterfaceName"`
	// Network Id to be associated with the logical interface name, can be duplicated in list
	NetworkId pulumi.StringPtrInput `pulumi:"networkId"`
}

func (ClusterInterfaceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInterfaceMapping)(nil)).Elem()
}

func (i ClusterInterfaceMappingArgs) ToClusterInterfaceMappingOutput() ClusterInterfaceMappingOutput {
	return i.ToClusterInterfaceMappingOutputWithContext(context.Background())
}

func (i ClusterInterfaceMappingArgs) ToClusterInterfaceMappingOutputWithContext(ctx context.Context) ClusterInterfaceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInterfaceMappingOutput)
}

// ClusterInterfaceMappingArrayInput is an input type that accepts ClusterInterfaceMappingArray and ClusterInterfaceMappingArrayOutput values.
// You can construct a concrete instance of `ClusterInterfaceMappingArrayInput` via:
//
//	ClusterInterfaceMappingArray{ ClusterInterfaceMappingArgs{...} }
type ClusterInterfaceMappingArrayInput interface {
	pulumi.Input

	ToClusterInterfaceMappingArrayOutput() ClusterInterfaceMappingArrayOutput
	ToClusterInterfaceMappingArrayOutputWithContext(context.Context) ClusterInterfaceMappingArrayOutput
}

type ClusterInterfaceMappingArray []ClusterInterfaceMappingInput

func (ClusterInterfaceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterInterfaceMapping)(nil)).Elem()
}

func (i ClusterInterfaceMappingArray) ToClusterInterfaceMappingArrayOutput() ClusterInterfaceMappingArrayOutput {
	return i.ToClusterInterfaceMappingArrayOutputWithContext(context.Background())
}

func (i ClusterInterfaceMappingArray) ToClusterInterfaceMappingArrayOutputWithContext(ctx context.Context) ClusterInterfaceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInterfaceMappingArrayOutput)
}

// Network mappings for the cluster
type ClusterInterfaceMappingOutput struct{ *pulumi.OutputState }

func (ClusterInterfaceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInterfaceMapping)(nil)).Elem()
}

func (o ClusterInterfaceMappingOutput) ToClusterInterfaceMappingOutput() ClusterInterfaceMappingOutput {
	return o
}

func (o ClusterInterfaceMappingOutput) ToClusterInterfaceMappingOutputWithContext(ctx context.Context) ClusterInterfaceMappingOutput {
	return o
}

// logical interface name, unique in the list
func (o ClusterInterfaceMappingOutput) LogicalInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInterfaceMapping) *string { return v.LogicalInterfaceName }).(pulumi.StringPtrOutput)
}

// Network Id to be associated with the logical interface name, can be duplicated in list
func (o ClusterInterfaceMappingOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInterfaceMapping) *string { return v.NetworkId }).(pulumi.StringPtrOutput)
}

type ClusterInterfaceMappingArrayOutput struct{ *pulumi.OutputState }

func (ClusterInterfaceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterInterfaceMapping)(nil)).Elem()
}

func (o ClusterInterfaceMappingArrayOutput) ToClusterInterfaceMappingArrayOutput() ClusterInterfaceMappingArrayOutput {
	return o
}

func (o ClusterInterfaceMappingArrayOutput) ToClusterInterfaceMappingArrayOutputWithContext(ctx context.Context) ClusterInterfaceMappingArrayOutput {
	return o
}

func (o ClusterInterfaceMappingArrayOutput) Index(i pulumi.IntInput) ClusterInterfaceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterInterfaceMapping {
		return vs[0].([]ClusterInterfaceMapping)[vs[1].(int)]
	}).(ClusterInterfaceMappingOutput)
}

// On premises settings which will have the interface network mappings and default Output logical interface
type ClusterNetworkSettings struct {
	// Default value if the customer does not define it in channel Output API
	DefaultRoute *string `pulumi:"defaultRoute"`
	// Network mappings for the cluster
	InterfaceMappings []ClusterInterfaceMapping `pulumi:"interfaceMappings"`
}

// ClusterNetworkSettingsInput is an input type that accepts ClusterNetworkSettingsArgs and ClusterNetworkSettingsOutput values.
// You can construct a concrete instance of `ClusterNetworkSettingsInput` via:
//
//	ClusterNetworkSettingsArgs{...}
type ClusterNetworkSettingsInput interface {
	pulumi.Input

	ToClusterNetworkSettingsOutput() ClusterNetworkSettingsOutput
	ToClusterNetworkSettingsOutputWithContext(context.Context) ClusterNetworkSettingsOutput
}

// On premises settings which will have the interface network mappings and default Output logical interface
type ClusterNetworkSettingsArgs struct {
	// Default value if the customer does not define it in channel Output API
	DefaultRoute pulumi.StringPtrInput `pulumi:"defaultRoute"`
	// Network mappings for the cluster
	InterfaceMappings ClusterInterfaceMappingArrayInput `pulumi:"interfaceMappings"`
}

func (ClusterNetworkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkSettings)(nil)).Elem()
}

func (i ClusterNetworkSettingsArgs) ToClusterNetworkSettingsOutput() ClusterNetworkSettingsOutput {
	return i.ToClusterNetworkSettingsOutputWithContext(context.Background())
}

func (i ClusterNetworkSettingsArgs) ToClusterNetworkSettingsOutputWithContext(ctx context.Context) ClusterNetworkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkSettingsOutput)
}

func (i ClusterNetworkSettingsArgs) ToClusterNetworkSettingsPtrOutput() ClusterNetworkSettingsPtrOutput {
	return i.ToClusterNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkSettingsArgs) ToClusterNetworkSettingsPtrOutputWithContext(ctx context.Context) ClusterNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkSettingsOutput).ToClusterNetworkSettingsPtrOutputWithContext(ctx)
}

// ClusterNetworkSettingsPtrInput is an input type that accepts ClusterNetworkSettingsArgs, ClusterNetworkSettingsPtr and ClusterNetworkSettingsPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkSettingsPtrInput` via:
//
//	        ClusterNetworkSettingsArgs{...}
//
//	or:
//
//	        nil
type ClusterNetworkSettingsPtrInput interface {
	pulumi.Input

	ToClusterNetworkSettingsPtrOutput() ClusterNetworkSettingsPtrOutput
	ToClusterNetworkSettingsPtrOutputWithContext(context.Context) ClusterNetworkSettingsPtrOutput
}

type clusterNetworkSettingsPtrType ClusterNetworkSettingsArgs

func ClusterNetworkSettingsPtr(v *ClusterNetworkSettingsArgs) ClusterNetworkSettingsPtrInput {
	return (*clusterNetworkSettingsPtrType)(v)
}

func (*clusterNetworkSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkSettings)(nil)).Elem()
}

func (i *clusterNetworkSettingsPtrType) ToClusterNetworkSettingsPtrOutput() ClusterNetworkSettingsPtrOutput {
	return i.ToClusterNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkSettingsPtrType) ToClusterNetworkSettingsPtrOutputWithContext(ctx context.Context) ClusterNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkSettingsPtrOutput)
}

// On premises settings which will have the interface network mappings and default Output logical interface
type ClusterNetworkSettingsOutput struct{ *pulumi.OutputState }

func (ClusterNetworkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkSettings)(nil)).Elem()
}

func (o ClusterNetworkSettingsOutput) ToClusterNetworkSettingsOutput() ClusterNetworkSettingsOutput {
	return o
}

func (o ClusterNetworkSettingsOutput) ToClusterNetworkSettingsOutputWithContext(ctx context.Context) ClusterNetworkSettingsOutput {
	return o
}

func (o ClusterNetworkSettingsOutput) ToClusterNetworkSettingsPtrOutput() ClusterNetworkSettingsPtrOutput {
	return o.ToClusterNetworkSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkSettingsOutput) ToClusterNetworkSettingsPtrOutputWithContext(ctx context.Context) ClusterNetworkSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworkSettings) *ClusterNetworkSettings {
		return &v
	}).(ClusterNetworkSettingsPtrOutput)
}

// Default value if the customer does not define it in channel Output API
func (o ClusterNetworkSettingsOutput) DefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkSettings) *string { return v.DefaultRoute }).(pulumi.StringPtrOutput)
}

// Network mappings for the cluster
func (o ClusterNetworkSettingsOutput) InterfaceMappings() ClusterInterfaceMappingArrayOutput {
	return o.ApplyT(func(v ClusterNetworkSettings) []ClusterInterfaceMapping { return v.InterfaceMappings }).(ClusterInterfaceMappingArrayOutput)
}

type ClusterNetworkSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkSettings)(nil)).Elem()
}

func (o ClusterNetworkSettingsPtrOutput) ToClusterNetworkSettingsPtrOutput() ClusterNetworkSettingsPtrOutput {
	return o
}

func (o ClusterNetworkSettingsPtrOutput) ToClusterNetworkSettingsPtrOutputWithContext(ctx context.Context) ClusterNetworkSettingsPtrOutput {
	return o
}

func (o ClusterNetworkSettingsPtrOutput) Elem() ClusterNetworkSettingsOutput {
	return o.ApplyT(func(v *ClusterNetworkSettings) ClusterNetworkSettings {
		if v != nil {
			return *v
		}
		var ret ClusterNetworkSettings
		return ret
	}).(ClusterNetworkSettingsOutput)
}

// Default value if the customer does not define it in channel Output API
func (o ClusterNetworkSettingsPtrOutput) DefaultRoute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRoute
	}).(pulumi.StringPtrOutput)
}

// Network mappings for the cluster
func (o ClusterNetworkSettingsPtrOutput) InterfaceMappings() ClusterInterfaceMappingArrayOutput {
	return o.ApplyT(func(v *ClusterNetworkSettings) []ClusterInterfaceMapping {
		if v == nil {
			return nil
		}
		return v.InterfaceMappings
	}).(ClusterInterfaceMappingArrayOutput)
}

// A key-value pair to associate with a resource.
type ClusterTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// The target to which to send matching events.
type EventBridgeRuleTemplateTarget struct {
	// Target ARNs must be either an SNS topic or CloudWatch log group.
	Arn string `pulumi:"arn"`
}

// EventBridgeRuleTemplateTargetInput is an input type that accepts EventBridgeRuleTemplateTargetArgs and EventBridgeRuleTemplateTargetOutput values.
// You can construct a concrete instance of `EventBridgeRuleTemplateTargetInput` via:
//
//	EventBridgeRuleTemplateTargetArgs{...}
type EventBridgeRuleTemplateTargetInput interface {
	pulumi.Input

	ToEventBridgeRuleTemplateTargetOutput() EventBridgeRuleTemplateTargetOutput
	ToEventBridgeRuleTemplateTargetOutputWithContext(context.Context) EventBridgeRuleTemplateTargetOutput
}

// The target to which to send matching events.
type EventBridgeRuleTemplateTargetArgs struct {
	// Target ARNs must be either an SNS topic or CloudWatch log group.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (EventBridgeRuleTemplateTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventBridgeRuleTemplateTarget)(nil)).Elem()
}

func (i EventBridgeRuleTemplateTargetArgs) ToEventBridgeRuleTemplateTargetOutput() EventBridgeRuleTemplateTargetOutput {
	return i.ToEventBridgeRuleTemplateTargetOutputWithContext(context.Background())
}

func (i EventBridgeRuleTemplateTargetArgs) ToEventBridgeRuleTemplateTargetOutputWithContext(ctx context.Context) EventBridgeRuleTemplateTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBridgeRuleTemplateTargetOutput)
}

// EventBridgeRuleTemplateTargetArrayInput is an input type that accepts EventBridgeRuleTemplateTargetArray and EventBridgeRuleTemplateTargetArrayOutput values.
// You can construct a concrete instance of `EventBridgeRuleTemplateTargetArrayInput` via:
//
//	EventBridgeRuleTemplateTargetArray{ EventBridgeRuleTemplateTargetArgs{...} }
type EventBridgeRuleTemplateTargetArrayInput interface {
	pulumi.Input

	ToEventBridgeRuleTemplateTargetArrayOutput() EventBridgeRuleTemplateTargetArrayOutput
	ToEventBridgeRuleTemplateTargetArrayOutputWithContext(context.Context) EventBridgeRuleTemplateTargetArrayOutput
}

type EventBridgeRuleTemplateTargetArray []EventBridgeRuleTemplateTargetInput

func (EventBridgeRuleTemplateTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventBridgeRuleTemplateTarget)(nil)).Elem()
}

func (i EventBridgeRuleTemplateTargetArray) ToEventBridgeRuleTemplateTargetArrayOutput() EventBridgeRuleTemplateTargetArrayOutput {
	return i.ToEventBridgeRuleTemplateTargetArrayOutputWithContext(context.Background())
}

func (i EventBridgeRuleTemplateTargetArray) ToEventBridgeRuleTemplateTargetArrayOutputWithContext(ctx context.Context) EventBridgeRuleTemplateTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBridgeRuleTemplateTargetArrayOutput)
}

// The target to which to send matching events.
type EventBridgeRuleTemplateTargetOutput struct{ *pulumi.OutputState }

func (EventBridgeRuleTemplateTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventBridgeRuleTemplateTarget)(nil)).Elem()
}

func (o EventBridgeRuleTemplateTargetOutput) ToEventBridgeRuleTemplateTargetOutput() EventBridgeRuleTemplateTargetOutput {
	return o
}

func (o EventBridgeRuleTemplateTargetOutput) ToEventBridgeRuleTemplateTargetOutputWithContext(ctx context.Context) EventBridgeRuleTemplateTargetOutput {
	return o
}

// Target ARNs must be either an SNS topic or CloudWatch log group.
func (o EventBridgeRuleTemplateTargetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v EventBridgeRuleTemplateTarget) string { return v.Arn }).(pulumi.StringOutput)
}

type EventBridgeRuleTemplateTargetArrayOutput struct{ *pulumi.OutputState }

func (EventBridgeRuleTemplateTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventBridgeRuleTemplateTarget)(nil)).Elem()
}

func (o EventBridgeRuleTemplateTargetArrayOutput) ToEventBridgeRuleTemplateTargetArrayOutput() EventBridgeRuleTemplateTargetArrayOutput {
	return o
}

func (o EventBridgeRuleTemplateTargetArrayOutput) ToEventBridgeRuleTemplateTargetArrayOutputWithContext(ctx context.Context) EventBridgeRuleTemplateTargetArrayOutput {
	return o
}

func (o EventBridgeRuleTemplateTargetArrayOutput) Index(i pulumi.IntInput) EventBridgeRuleTemplateTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventBridgeRuleTemplateTarget {
		return vs[0].([]EventBridgeRuleTemplateTarget)[vs[1].(int)]
	}).(EventBridgeRuleTemplateTargetOutput)
}

// Multiplex MediaConnect output destination settings.
type MultiplexOutputDestination struct {
	// Multiplex MediaConnect output destination settings.
	MultiplexMediaConnectOutputDestinationSettings *MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties `pulumi:"multiplexMediaConnectOutputDestinationSettings"`
}

// MultiplexOutputDestinationInput is an input type that accepts MultiplexOutputDestinationArgs and MultiplexOutputDestinationOutput values.
// You can construct a concrete instance of `MultiplexOutputDestinationInput` via:
//
//	MultiplexOutputDestinationArgs{...}
type MultiplexOutputDestinationInput interface {
	pulumi.Input

	ToMultiplexOutputDestinationOutput() MultiplexOutputDestinationOutput
	ToMultiplexOutputDestinationOutputWithContext(context.Context) MultiplexOutputDestinationOutput
}

// Multiplex MediaConnect output destination settings.
type MultiplexOutputDestinationArgs struct {
	// Multiplex MediaConnect output destination settings.
	MultiplexMediaConnectOutputDestinationSettings MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrInput `pulumi:"multiplexMediaConnectOutputDestinationSettings"`
}

func (MultiplexOutputDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexOutputDestination)(nil)).Elem()
}

func (i MultiplexOutputDestinationArgs) ToMultiplexOutputDestinationOutput() MultiplexOutputDestinationOutput {
	return i.ToMultiplexOutputDestinationOutputWithContext(context.Background())
}

func (i MultiplexOutputDestinationArgs) ToMultiplexOutputDestinationOutputWithContext(ctx context.Context) MultiplexOutputDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexOutputDestinationOutput)
}

// MultiplexOutputDestinationArrayInput is an input type that accepts MultiplexOutputDestinationArray and MultiplexOutputDestinationArrayOutput values.
// You can construct a concrete instance of `MultiplexOutputDestinationArrayInput` via:
//
//	MultiplexOutputDestinationArray{ MultiplexOutputDestinationArgs{...} }
type MultiplexOutputDestinationArrayInput interface {
	pulumi.Input

	ToMultiplexOutputDestinationArrayOutput() MultiplexOutputDestinationArrayOutput
	ToMultiplexOutputDestinationArrayOutputWithContext(context.Context) MultiplexOutputDestinationArrayOutput
}

type MultiplexOutputDestinationArray []MultiplexOutputDestinationInput

func (MultiplexOutputDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MultiplexOutputDestination)(nil)).Elem()
}

func (i MultiplexOutputDestinationArray) ToMultiplexOutputDestinationArrayOutput() MultiplexOutputDestinationArrayOutput {
	return i.ToMultiplexOutputDestinationArrayOutputWithContext(context.Background())
}

func (i MultiplexOutputDestinationArray) ToMultiplexOutputDestinationArrayOutputWithContext(ctx context.Context) MultiplexOutputDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexOutputDestinationArrayOutput)
}

// Multiplex MediaConnect output destination settings.
type MultiplexOutputDestinationOutput struct{ *pulumi.OutputState }

func (MultiplexOutputDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexOutputDestination)(nil)).Elem()
}

func (o MultiplexOutputDestinationOutput) ToMultiplexOutputDestinationOutput() MultiplexOutputDestinationOutput {
	return o
}

func (o MultiplexOutputDestinationOutput) ToMultiplexOutputDestinationOutputWithContext(ctx context.Context) MultiplexOutputDestinationOutput {
	return o
}

// Multiplex MediaConnect output destination settings.
func (o MultiplexOutputDestinationOutput) MultiplexMediaConnectOutputDestinationSettings() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v MultiplexOutputDestination) *MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties {
		return v.MultiplexMediaConnectOutputDestinationSettings
	}).(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput)
}

type MultiplexOutputDestinationArrayOutput struct{ *pulumi.OutputState }

func (MultiplexOutputDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MultiplexOutputDestination)(nil)).Elem()
}

func (o MultiplexOutputDestinationArrayOutput) ToMultiplexOutputDestinationArrayOutput() MultiplexOutputDestinationArrayOutput {
	return o
}

func (o MultiplexOutputDestinationArrayOutput) ToMultiplexOutputDestinationArrayOutputWithContext(ctx context.Context) MultiplexOutputDestinationArrayOutput {
	return o
}

func (o MultiplexOutputDestinationArrayOutput) Index(i pulumi.IntInput) MultiplexOutputDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MultiplexOutputDestination {
		return vs[0].([]MultiplexOutputDestination)[vs[1].(int)]
	}).(MultiplexOutputDestinationOutput)
}

// Multiplex MediaConnect output destination settings.
type MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties struct {
	// The MediaConnect entitlement ARN available as a Flow source.
	EntitlementArn *string `pulumi:"entitlementArn"`
}

// MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesInput is an input type that accepts MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs and MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput values.
// You can construct a concrete instance of `MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesInput` via:
//
//	MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs{...}
type MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesInput interface {
	pulumi.Input

	ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput
	ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutputWithContext(context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput
}

// Multiplex MediaConnect output destination settings.
type MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs struct {
	// The MediaConnect entitlement ARN available as a Flow source.
	EntitlementArn pulumi.StringPtrInput `pulumi:"entitlementArn"`
}

func (MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties)(nil)).Elem()
}

func (i MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput {
	return i.ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutputWithContext(context.Background())
}

func (i MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutputWithContext(ctx context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput)
}

func (i MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return i.ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(ctx context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput).ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(ctx)
}

// MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrInput is an input type that accepts MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs, MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtr and MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrInput` via:
//
//	        MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput
	ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput
}

type multiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrType MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs

func MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtr(v *MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrInput {
	return (*multiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrType)(v)
}

func (*multiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties)(nil)).Elem()
}

func (i *multiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrType) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return i.ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *multiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrType) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(ctx context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput)
}

// Multiplex MediaConnect output destination settings.
type MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties)(nil)).Elem()
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput {
	return o
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutputWithContext(ctx context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput {
	return o
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return o.ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(ctx context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties) *MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties {
		return &v
	}).(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput)
}

// The MediaConnect entitlement ARN available as a Flow source.
func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput) EntitlementArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties) *string {
		return v.EntitlementArn
	}).(pulumi.StringPtrOutput)
}

type MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties)(nil)).Elem()
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return o
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput) ToMultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutputWithContext(ctx context.Context) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput {
	return o
}

func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput) Elem() MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput {
	return o.ApplyT(func(v *MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties) MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties {
		if v != nil {
			return *v
		}
		var ret MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties
		return ret
	}).(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput)
}

// The MediaConnect entitlement ARN available as a Flow source.
func (o MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput) EntitlementArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.EntitlementArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type MultiplexSettings struct {
	// Maximum video buffer delay in milliseconds.
	MaximumVideoBufferDelayMilliseconds *int `pulumi:"maximumVideoBufferDelayMilliseconds"`
	// Transport stream bit rate.
	TransportStreamBitrate int `pulumi:"transportStreamBitrate"`
	// Transport stream ID.
	TransportStreamId int `pulumi:"transportStreamId"`
	// Transport stream reserved bit rate.
	TransportStreamReservedBitrate *int `pulumi:"transportStreamReservedBitrate"`
}

// MultiplexSettingsInput is an input type that accepts MultiplexSettingsArgs and MultiplexSettingsOutput values.
// You can construct a concrete instance of `MultiplexSettingsInput` via:
//
//	MultiplexSettingsArgs{...}
type MultiplexSettingsInput interface {
	pulumi.Input

	ToMultiplexSettingsOutput() MultiplexSettingsOutput
	ToMultiplexSettingsOutputWithContext(context.Context) MultiplexSettingsOutput
}

// A key-value pair to associate with a resource.
type MultiplexSettingsArgs struct {
	// Maximum video buffer delay in milliseconds.
	MaximumVideoBufferDelayMilliseconds pulumi.IntPtrInput `pulumi:"maximumVideoBufferDelayMilliseconds"`
	// Transport stream bit rate.
	TransportStreamBitrate pulumi.IntInput `pulumi:"transportStreamBitrate"`
	// Transport stream ID.
	TransportStreamId pulumi.IntInput `pulumi:"transportStreamId"`
	// Transport stream reserved bit rate.
	TransportStreamReservedBitrate pulumi.IntPtrInput `pulumi:"transportStreamReservedBitrate"`
}

func (MultiplexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexSettings)(nil)).Elem()
}

func (i MultiplexSettingsArgs) ToMultiplexSettingsOutput() MultiplexSettingsOutput {
	return i.ToMultiplexSettingsOutputWithContext(context.Background())
}

func (i MultiplexSettingsArgs) ToMultiplexSettingsOutputWithContext(ctx context.Context) MultiplexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexSettingsOutput)
}

// A key-value pair to associate with a resource.
type MultiplexSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexSettings)(nil)).Elem()
}

func (o MultiplexSettingsOutput) ToMultiplexSettingsOutput() MultiplexSettingsOutput {
	return o
}

func (o MultiplexSettingsOutput) ToMultiplexSettingsOutputWithContext(ctx context.Context) MultiplexSettingsOutput {
	return o
}

// Maximum video buffer delay in milliseconds.
func (o MultiplexSettingsOutput) MaximumVideoBufferDelayMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexSettings) *int { return v.MaximumVideoBufferDelayMilliseconds }).(pulumi.IntPtrOutput)
}

// Transport stream bit rate.
func (o MultiplexSettingsOutput) TransportStreamBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v MultiplexSettings) int { return v.TransportStreamBitrate }).(pulumi.IntOutput)
}

// Transport stream ID.
func (o MultiplexSettingsOutput) TransportStreamId() pulumi.IntOutput {
	return o.ApplyT(func(v MultiplexSettings) int { return v.TransportStreamId }).(pulumi.IntOutput)
}

// Transport stream reserved bit rate.
func (o MultiplexSettingsOutput) TransportStreamReservedBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexSettings) *int { return v.TransportStreamReservedBitrate }).(pulumi.IntPtrOutput)
}

type MultiplexSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexSettings)(nil)).Elem()
}

func (o MultiplexSettingsPtrOutput) ToMultiplexSettingsPtrOutput() MultiplexSettingsPtrOutput {
	return o
}

func (o MultiplexSettingsPtrOutput) ToMultiplexSettingsPtrOutputWithContext(ctx context.Context) MultiplexSettingsPtrOutput {
	return o
}

func (o MultiplexSettingsPtrOutput) Elem() MultiplexSettingsOutput {
	return o.ApplyT(func(v *MultiplexSettings) MultiplexSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexSettings
		return ret
	}).(MultiplexSettingsOutput)
}

// Maximum video buffer delay in milliseconds.
func (o MultiplexSettingsPtrOutput) MaximumVideoBufferDelayMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaximumVideoBufferDelayMilliseconds
	}).(pulumi.IntPtrOutput)
}

// Transport stream bit rate.
func (o MultiplexSettingsPtrOutput) TransportStreamBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TransportStreamBitrate
	}).(pulumi.IntPtrOutput)
}

// Transport stream ID.
func (o MultiplexSettingsPtrOutput) TransportStreamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TransportStreamId
	}).(pulumi.IntPtrOutput)
}

// Transport stream reserved bit rate.
func (o MultiplexSettingsPtrOutput) TransportStreamReservedBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return v.TransportStreamReservedBitrate
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type MultiplexTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// Packet identifiers map for a given Multiplex program.
type MultiplexprogramMultiplexProgramPacketIdentifiersMap struct {
	AudioPids          []int `pulumi:"audioPids"`
	DvbSubPids         []int `pulumi:"dvbSubPids"`
	DvbTeletextPid     *int  `pulumi:"dvbTeletextPid"`
	EtvPlatformPid     *int  `pulumi:"etvPlatformPid"`
	EtvSignalPid       *int  `pulumi:"etvSignalPid"`
	KlvDataPids        []int `pulumi:"klvDataPids"`
	PcrPid             *int  `pulumi:"pcrPid"`
	PmtPid             *int  `pulumi:"pmtPid"`
	PrivateMetadataPid *int  `pulumi:"privateMetadataPid"`
	Scte27Pids         []int `pulumi:"scte27Pids"`
	Scte35Pid          *int  `pulumi:"scte35Pid"`
	TimedMetadataPid   *int  `pulumi:"timedMetadataPid"`
	VideoPid           *int  `pulumi:"videoPid"`
}

// MultiplexprogramMultiplexProgramPacketIdentifiersMapInput is an input type that accepts MultiplexprogramMultiplexProgramPacketIdentifiersMap and MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramPacketIdentifiersMapInput` via:
//
//	MultiplexprogramMultiplexProgramPacketIdentifiersMap{ "key": MultiplexprogramMultiplexProgramPacketIdentifiersArgs{...} }
type MultiplexprogramMultiplexProgramPacketIdentifiersMapInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput
	ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutputWithContext(context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput
}

// Packet identifiers map for a given Multiplex program.
type MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs struct {
	AudioPids          pulumi.IntArrayInput `pulumi:"audioPids"`
	DvbSubPids         pulumi.IntArrayInput `pulumi:"dvbSubPids"`
	DvbTeletextPid     pulumi.IntPtrInput   `pulumi:"dvbTeletextPid"`
	EtvPlatformPid     pulumi.IntPtrInput   `pulumi:"etvPlatformPid"`
	EtvSignalPid       pulumi.IntPtrInput   `pulumi:"etvSignalPid"`
	KlvDataPids        pulumi.IntArrayInput `pulumi:"klvDataPids"`
	PcrPid             pulumi.IntPtrInput   `pulumi:"pcrPid"`
	PmtPid             pulumi.IntPtrInput   `pulumi:"pmtPid"`
	PrivateMetadataPid pulumi.IntPtrInput   `pulumi:"privateMetadataPid"`
	Scte27Pids         pulumi.IntArrayInput `pulumi:"scte27Pids"`
	Scte35Pid          pulumi.IntPtrInput   `pulumi:"scte35Pid"`
	TimedMetadataPid   pulumi.IntPtrInput   `pulumi:"timedMetadataPid"`
	VideoPid           pulumi.IntPtrInput   `pulumi:"videoPid"`
}

func (MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramPacketIdentifiersMap)(nil)).Elem()
}

func (i MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput {
	return i.ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput)
}

func (i MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return i.ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput).ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(ctx)
}

// MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrInput is an input type that accepts MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs, MultiplexprogramMultiplexProgramPacketIdentifiersMapPtr and MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrInput` via:
//
//	        MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs{...}
//
//	or:
//
//	        nil
type MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput
	ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput
}

type multiplexprogramMultiplexProgramPacketIdentifiersMapPtrType MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs

func MultiplexprogramMultiplexProgramPacketIdentifiersMapPtr(v *MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs) MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrInput {
	return (*multiplexprogramMultiplexProgramPacketIdentifiersMapPtrType)(v)
}

func (*multiplexprogramMultiplexProgramPacketIdentifiersMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexProgramPacketIdentifiersMap)(nil)).Elem()
}

func (i *multiplexprogramMultiplexProgramPacketIdentifiersMapPtrType) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return i.ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(context.Background())
}

func (i *multiplexprogramMultiplexProgramPacketIdentifiersMapPtrType) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput)
}

// Packet identifiers map for a given Multiplex program.
type MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramPacketIdentifiersMap)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return o.ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *MultiplexprogramMultiplexProgramPacketIdentifiersMap {
		return &v
	}).(MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) AudioPids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int { return v.AudioPids }).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) DvbSubPids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int { return v.DvbSubPids }).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) DvbTeletextPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.DvbTeletextPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) EtvPlatformPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.EtvPlatformPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) EtvSignalPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.EtvSignalPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) KlvDataPids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int { return v.KlvDataPids }).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) PcrPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.PcrPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) PmtPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.PmtPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) PrivateMetadataPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.PrivateMetadataPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) Scte27Pids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int { return v.Scte27Pids }).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) Scte35Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.Scte35Pid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) TimedMetadataPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.TimedMetadataPid }).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput) VideoPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int { return v.VideoPid }).(pulumi.IntPtrOutput)
}

type MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexProgramPacketIdentifiersMap)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput() MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) ToMultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) Elem() MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) MultiplexprogramMultiplexProgramPacketIdentifiersMap {
		if v != nil {
			return *v
		}
		var ret MultiplexprogramMultiplexProgramPacketIdentifiersMap
		return ret
	}).(MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) AudioPids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int {
		if v == nil {
			return nil
		}
		return v.AudioPids
	}).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) DvbSubPids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int {
		if v == nil {
			return nil
		}
		return v.DvbSubPids
	}).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) DvbTeletextPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.DvbTeletextPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) EtvPlatformPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.EtvPlatformPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) EtvSignalPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.EtvSignalPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) KlvDataPids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int {
		if v == nil {
			return nil
		}
		return v.KlvDataPids
	}).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) PcrPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.PcrPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) PmtPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.PmtPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) PrivateMetadataPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.PrivateMetadataPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) Scte27Pids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) []int {
		if v == nil {
			return nil
		}
		return v.Scte27Pids
	}).(pulumi.IntArrayOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) Scte35Pid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.Scte35Pid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) TimedMetadataPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.TimedMetadataPid
	}).(pulumi.IntPtrOutput)
}

func (o MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput) VideoPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramPacketIdentifiersMap) *int {
		if v == nil {
			return nil
		}
		return v.VideoPid
	}).(pulumi.IntPtrOutput)
}

// The current source for one of the pipelines in the multiplex.
type MultiplexprogramMultiplexProgramPipelineDetail struct {
	// Identifies the channel pipeline that is currently active for the pipeline (identified by PipelineId) in the multiplex.
	ActiveChannelPipeline *string `pulumi:"activeChannelPipeline"`
	// Identifies a specific pipeline in the multiplex.
	PipelineId *string `pulumi:"pipelineId"`
}

// MultiplexprogramMultiplexProgramPipelineDetailInput is an input type that accepts MultiplexprogramMultiplexProgramPipelineDetailArgs and MultiplexprogramMultiplexProgramPipelineDetailOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramPipelineDetailInput` via:
//
//	MultiplexprogramMultiplexProgramPipelineDetailArgs{...}
type MultiplexprogramMultiplexProgramPipelineDetailInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramPipelineDetailOutput() MultiplexprogramMultiplexProgramPipelineDetailOutput
	ToMultiplexprogramMultiplexProgramPipelineDetailOutputWithContext(context.Context) MultiplexprogramMultiplexProgramPipelineDetailOutput
}

// The current source for one of the pipelines in the multiplex.
type MultiplexprogramMultiplexProgramPipelineDetailArgs struct {
	// Identifies the channel pipeline that is currently active for the pipeline (identified by PipelineId) in the multiplex.
	ActiveChannelPipeline pulumi.StringPtrInput `pulumi:"activeChannelPipeline"`
	// Identifies a specific pipeline in the multiplex.
	PipelineId pulumi.StringPtrInput `pulumi:"pipelineId"`
}

func (MultiplexprogramMultiplexProgramPipelineDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramPipelineDetail)(nil)).Elem()
}

func (i MultiplexprogramMultiplexProgramPipelineDetailArgs) ToMultiplexprogramMultiplexProgramPipelineDetailOutput() MultiplexprogramMultiplexProgramPipelineDetailOutput {
	return i.ToMultiplexprogramMultiplexProgramPipelineDetailOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramPipelineDetailArgs) ToMultiplexprogramMultiplexProgramPipelineDetailOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPipelineDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramPipelineDetailOutput)
}

// MultiplexprogramMultiplexProgramPipelineDetailArrayInput is an input type that accepts MultiplexprogramMultiplexProgramPipelineDetailArray and MultiplexprogramMultiplexProgramPipelineDetailArrayOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramPipelineDetailArrayInput` via:
//
//	MultiplexprogramMultiplexProgramPipelineDetailArray{ MultiplexprogramMultiplexProgramPipelineDetailArgs{...} }
type MultiplexprogramMultiplexProgramPipelineDetailArrayInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutput() MultiplexprogramMultiplexProgramPipelineDetailArrayOutput
	ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutputWithContext(context.Context) MultiplexprogramMultiplexProgramPipelineDetailArrayOutput
}

type MultiplexprogramMultiplexProgramPipelineDetailArray []MultiplexprogramMultiplexProgramPipelineDetailInput

func (MultiplexprogramMultiplexProgramPipelineDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MultiplexprogramMultiplexProgramPipelineDetail)(nil)).Elem()
}

func (i MultiplexprogramMultiplexProgramPipelineDetailArray) ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutput() MultiplexprogramMultiplexProgramPipelineDetailArrayOutput {
	return i.ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramPipelineDetailArray) ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPipelineDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramPipelineDetailArrayOutput)
}

// The current source for one of the pipelines in the multiplex.
type MultiplexprogramMultiplexProgramPipelineDetailOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramPipelineDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramPipelineDetail)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramPipelineDetailOutput) ToMultiplexprogramMultiplexProgramPipelineDetailOutput() MultiplexprogramMultiplexProgramPipelineDetailOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPipelineDetailOutput) ToMultiplexprogramMultiplexProgramPipelineDetailOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPipelineDetailOutput {
	return o
}

// Identifies the channel pipeline that is currently active for the pipeline (identified by PipelineId) in the multiplex.
func (o MultiplexprogramMultiplexProgramPipelineDetailOutput) ActiveChannelPipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPipelineDetail) *string { return v.ActiveChannelPipeline }).(pulumi.StringPtrOutput)
}

// Identifies a specific pipeline in the multiplex.
func (o MultiplexprogramMultiplexProgramPipelineDetailOutput) PipelineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramPipelineDetail) *string { return v.PipelineId }).(pulumi.StringPtrOutput)
}

type MultiplexprogramMultiplexProgramPipelineDetailArrayOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramPipelineDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MultiplexprogramMultiplexProgramPipelineDetail)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramPipelineDetailArrayOutput) ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutput() MultiplexprogramMultiplexProgramPipelineDetailArrayOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPipelineDetailArrayOutput) ToMultiplexprogramMultiplexProgramPipelineDetailArrayOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramPipelineDetailArrayOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramPipelineDetailArrayOutput) Index(i pulumi.IntInput) MultiplexprogramMultiplexProgramPipelineDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MultiplexprogramMultiplexProgramPipelineDetail {
		return vs[0].([]MultiplexprogramMultiplexProgramPipelineDetail)[vs[1].(int)]
	}).(MultiplexprogramMultiplexProgramPipelineDetailOutput)
}

// Transport stream service descriptor configuration for the Multiplex program.
type MultiplexprogramMultiplexProgramServiceDescriptor struct {
	// Name of the provider.
	ProviderName string `pulumi:"providerName"`
	// Name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// MultiplexprogramMultiplexProgramServiceDescriptorInput is an input type that accepts MultiplexprogramMultiplexProgramServiceDescriptorArgs and MultiplexprogramMultiplexProgramServiceDescriptorOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramServiceDescriptorInput` via:
//
//	MultiplexprogramMultiplexProgramServiceDescriptorArgs{...}
type MultiplexprogramMultiplexProgramServiceDescriptorInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramServiceDescriptorOutput() MultiplexprogramMultiplexProgramServiceDescriptorOutput
	ToMultiplexprogramMultiplexProgramServiceDescriptorOutputWithContext(context.Context) MultiplexprogramMultiplexProgramServiceDescriptorOutput
}

// Transport stream service descriptor configuration for the Multiplex program.
type MultiplexprogramMultiplexProgramServiceDescriptorArgs struct {
	// Name of the provider.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Name of the service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (MultiplexprogramMultiplexProgramServiceDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramServiceDescriptor)(nil)).Elem()
}

func (i MultiplexprogramMultiplexProgramServiceDescriptorArgs) ToMultiplexprogramMultiplexProgramServiceDescriptorOutput() MultiplexprogramMultiplexProgramServiceDescriptorOutput {
	return i.ToMultiplexprogramMultiplexProgramServiceDescriptorOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramServiceDescriptorArgs) ToMultiplexprogramMultiplexProgramServiceDescriptorOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramServiceDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramServiceDescriptorOutput)
}

func (i MultiplexprogramMultiplexProgramServiceDescriptorArgs) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutput() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return i.ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramServiceDescriptorArgs) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramServiceDescriptorOutput).ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(ctx)
}

// MultiplexprogramMultiplexProgramServiceDescriptorPtrInput is an input type that accepts MultiplexprogramMultiplexProgramServiceDescriptorArgs, MultiplexprogramMultiplexProgramServiceDescriptorPtr and MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramServiceDescriptorPtrInput` via:
//
//	        MultiplexprogramMultiplexProgramServiceDescriptorArgs{...}
//
//	or:
//
//	        nil
type MultiplexprogramMultiplexProgramServiceDescriptorPtrInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutput() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput
	ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(context.Context) MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput
}

type multiplexprogramMultiplexProgramServiceDescriptorPtrType MultiplexprogramMultiplexProgramServiceDescriptorArgs

func MultiplexprogramMultiplexProgramServiceDescriptorPtr(v *MultiplexprogramMultiplexProgramServiceDescriptorArgs) MultiplexprogramMultiplexProgramServiceDescriptorPtrInput {
	return (*multiplexprogramMultiplexProgramServiceDescriptorPtrType)(v)
}

func (*multiplexprogramMultiplexProgramServiceDescriptorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexProgramServiceDescriptor)(nil)).Elem()
}

func (i *multiplexprogramMultiplexProgramServiceDescriptorPtrType) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutput() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return i.ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(context.Background())
}

func (i *multiplexprogramMultiplexProgramServiceDescriptorPtrType) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput)
}

// Transport stream service descriptor configuration for the Multiplex program.
type MultiplexprogramMultiplexProgramServiceDescriptorOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramServiceDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramServiceDescriptor)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorOutput) ToMultiplexprogramMultiplexProgramServiceDescriptorOutput() MultiplexprogramMultiplexProgramServiceDescriptorOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorOutput) ToMultiplexprogramMultiplexProgramServiceDescriptorOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramServiceDescriptorOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorOutput) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutput() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return o.ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorOutput) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexprogramMultiplexProgramServiceDescriptor) *MultiplexprogramMultiplexProgramServiceDescriptor {
		return &v
	}).(MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput)
}

// Name of the provider.
func (o MultiplexprogramMultiplexProgramServiceDescriptorOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramServiceDescriptor) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Name of the service.
func (o MultiplexprogramMultiplexProgramServiceDescriptorOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramServiceDescriptor) string { return v.ServiceName }).(pulumi.StringOutput)
}

type MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexProgramServiceDescriptor)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutput() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput) ToMultiplexprogramMultiplexProgramServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput) Elem() MultiplexprogramMultiplexProgramServiceDescriptorOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramServiceDescriptor) MultiplexprogramMultiplexProgramServiceDescriptor {
		if v != nil {
			return *v
		}
		var ret MultiplexprogramMultiplexProgramServiceDescriptor
		return ret
	}).(MultiplexprogramMultiplexProgramServiceDescriptorOutput)
}

// Name of the provider.
func (o MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramServiceDescriptor) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderName
	}).(pulumi.StringPtrOutput)
}

// Name of the service.
func (o MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramServiceDescriptor) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Multiplex Program settings configuration.
type MultiplexprogramMultiplexProgramSettings struct {
	// Indicates which pipeline is preferred by the multiplex for program ingest.
	PreferredChannelPipeline *MultiplexprogramPreferredChannelPipeline `pulumi:"preferredChannelPipeline"`
	// Unique program number.
	ProgramNumber int `pulumi:"programNumber"`
	// Transport stream service descriptor configuration for the Multiplex program.
	ServiceDescriptor *MultiplexprogramMultiplexProgramServiceDescriptor `pulumi:"serviceDescriptor"`
	// Program video settings configuration.
	VideoSettings *MultiplexprogramMultiplexVideoSettings `pulumi:"videoSettings"`
}

// MultiplexprogramMultiplexProgramSettingsInput is an input type that accepts MultiplexprogramMultiplexProgramSettingsArgs and MultiplexprogramMultiplexProgramSettingsOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramSettingsInput` via:
//
//	MultiplexprogramMultiplexProgramSettingsArgs{...}
type MultiplexprogramMultiplexProgramSettingsInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramSettingsOutput() MultiplexprogramMultiplexProgramSettingsOutput
	ToMultiplexprogramMultiplexProgramSettingsOutputWithContext(context.Context) MultiplexprogramMultiplexProgramSettingsOutput
}

// Multiplex Program settings configuration.
type MultiplexprogramMultiplexProgramSettingsArgs struct {
	// Indicates which pipeline is preferred by the multiplex for program ingest.
	PreferredChannelPipeline MultiplexprogramPreferredChannelPipelinePtrInput `pulumi:"preferredChannelPipeline"`
	// Unique program number.
	ProgramNumber pulumi.IntInput `pulumi:"programNumber"`
	// Transport stream service descriptor configuration for the Multiplex program.
	ServiceDescriptor MultiplexprogramMultiplexProgramServiceDescriptorPtrInput `pulumi:"serviceDescriptor"`
	// Program video settings configuration.
	VideoSettings MultiplexprogramMultiplexVideoSettingsPtrInput `pulumi:"videoSettings"`
}

func (MultiplexprogramMultiplexProgramSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramSettings)(nil)).Elem()
}

func (i MultiplexprogramMultiplexProgramSettingsArgs) ToMultiplexprogramMultiplexProgramSettingsOutput() MultiplexprogramMultiplexProgramSettingsOutput {
	return i.ToMultiplexprogramMultiplexProgramSettingsOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramSettingsArgs) ToMultiplexprogramMultiplexProgramSettingsOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramSettingsOutput)
}

func (i MultiplexprogramMultiplexProgramSettingsArgs) ToMultiplexprogramMultiplexProgramSettingsPtrOutput() MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return i.ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexProgramSettingsArgs) ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramSettingsOutput).ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(ctx)
}

// MultiplexprogramMultiplexProgramSettingsPtrInput is an input type that accepts MultiplexprogramMultiplexProgramSettingsArgs, MultiplexprogramMultiplexProgramSettingsPtr and MultiplexprogramMultiplexProgramSettingsPtrOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexProgramSettingsPtrInput` via:
//
//	        MultiplexprogramMultiplexProgramSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiplexprogramMultiplexProgramSettingsPtrInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexProgramSettingsPtrOutput() MultiplexprogramMultiplexProgramSettingsPtrOutput
	ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(context.Context) MultiplexprogramMultiplexProgramSettingsPtrOutput
}

type multiplexprogramMultiplexProgramSettingsPtrType MultiplexprogramMultiplexProgramSettingsArgs

func MultiplexprogramMultiplexProgramSettingsPtr(v *MultiplexprogramMultiplexProgramSettingsArgs) MultiplexprogramMultiplexProgramSettingsPtrInput {
	return (*multiplexprogramMultiplexProgramSettingsPtrType)(v)
}

func (*multiplexprogramMultiplexProgramSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexProgramSettings)(nil)).Elem()
}

func (i *multiplexprogramMultiplexProgramSettingsPtrType) ToMultiplexprogramMultiplexProgramSettingsPtrOutput() MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return i.ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(context.Background())
}

func (i *multiplexprogramMultiplexProgramSettingsPtrType) ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexProgramSettingsPtrOutput)
}

// Multiplex Program settings configuration.
type MultiplexprogramMultiplexProgramSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexProgramSettings)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramSettingsOutput) ToMultiplexprogramMultiplexProgramSettingsOutput() MultiplexprogramMultiplexProgramSettingsOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramSettingsOutput) ToMultiplexprogramMultiplexProgramSettingsOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramSettingsOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramSettingsOutput) ToMultiplexprogramMultiplexProgramSettingsPtrOutput() MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return o.ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramMultiplexProgramSettingsOutput) ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexprogramMultiplexProgramSettings) *MultiplexprogramMultiplexProgramSettings {
		return &v
	}).(MultiplexprogramMultiplexProgramSettingsPtrOutput)
}

// Indicates which pipeline is preferred by the multiplex for program ingest.
func (o MultiplexprogramMultiplexProgramSettingsOutput) PreferredChannelPipeline() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramSettings) *MultiplexprogramPreferredChannelPipeline {
		return v.PreferredChannelPipeline
	}).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

// Unique program number.
func (o MultiplexprogramMultiplexProgramSettingsOutput) ProgramNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramSettings) int { return v.ProgramNumber }).(pulumi.IntOutput)
}

// Transport stream service descriptor configuration for the Multiplex program.
func (o MultiplexprogramMultiplexProgramSettingsOutput) ServiceDescriptor() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramSettings) *MultiplexprogramMultiplexProgramServiceDescriptor {
		return v.ServiceDescriptor
	}).(MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput)
}

// Program video settings configuration.
func (o MultiplexprogramMultiplexProgramSettingsOutput) VideoSettings() MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return o.ApplyT(func(v MultiplexprogramMultiplexProgramSettings) *MultiplexprogramMultiplexVideoSettings {
		return v.VideoSettings
	}).(MultiplexprogramMultiplexVideoSettingsPtrOutput)
}

type MultiplexprogramMultiplexProgramSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexProgramSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexProgramSettings)(nil)).Elem()
}

func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) ToMultiplexprogramMultiplexProgramSettingsPtrOutput() MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) ToMultiplexprogramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexProgramSettingsPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) Elem() MultiplexprogramMultiplexProgramSettingsOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramSettings) MultiplexprogramMultiplexProgramSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexprogramMultiplexProgramSettings
		return ret
	}).(MultiplexprogramMultiplexProgramSettingsOutput)
}

// Indicates which pipeline is preferred by the multiplex for program ingest.
func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) PreferredChannelPipeline() MultiplexprogramPreferredChannelPipelinePtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramSettings) *MultiplexprogramPreferredChannelPipeline {
		if v == nil {
			return nil
		}
		return v.PreferredChannelPipeline
	}).(MultiplexprogramPreferredChannelPipelinePtrOutput)
}

// Unique program number.
func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) ProgramNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ProgramNumber
	}).(pulumi.IntPtrOutput)
}

// Transport stream service descriptor configuration for the Multiplex program.
func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) ServiceDescriptor() MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramSettings) *MultiplexprogramMultiplexProgramServiceDescriptor {
		if v == nil {
			return nil
		}
		return v.ServiceDescriptor
	}).(MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput)
}

// Program video settings configuration.
func (o MultiplexprogramMultiplexProgramSettingsPtrOutput) VideoSettings() MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexProgramSettings) *MultiplexprogramMultiplexVideoSettings {
		if v == nil {
			return nil
		}
		return v.VideoSettings
	}).(MultiplexprogramMultiplexVideoSettingsPtrOutput)
}

// The video configuration for each program in a multiplex.
type MultiplexprogramMultiplexVideoSettings struct {
}

// MultiplexprogramMultiplexVideoSettingsInput is an input type that accepts MultiplexprogramMultiplexVideoSettingsArgs and MultiplexprogramMultiplexVideoSettingsOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexVideoSettingsInput` via:
//
//	MultiplexprogramMultiplexVideoSettingsArgs{...}
type MultiplexprogramMultiplexVideoSettingsInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexVideoSettingsOutput() MultiplexprogramMultiplexVideoSettingsOutput
	ToMultiplexprogramMultiplexVideoSettingsOutputWithContext(context.Context) MultiplexprogramMultiplexVideoSettingsOutput
}

// The video configuration for each program in a multiplex.
type MultiplexprogramMultiplexVideoSettingsArgs struct {
}

func (MultiplexprogramMultiplexVideoSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexVideoSettings)(nil)).Elem()
}

func (i MultiplexprogramMultiplexVideoSettingsArgs) ToMultiplexprogramMultiplexVideoSettingsOutput() MultiplexprogramMultiplexVideoSettingsOutput {
	return i.ToMultiplexprogramMultiplexVideoSettingsOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexVideoSettingsArgs) ToMultiplexprogramMultiplexVideoSettingsOutputWithContext(ctx context.Context) MultiplexprogramMultiplexVideoSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexVideoSettingsOutput)
}

func (i MultiplexprogramMultiplexVideoSettingsArgs) ToMultiplexprogramMultiplexVideoSettingsPtrOutput() MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return i.ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(context.Background())
}

func (i MultiplexprogramMultiplexVideoSettingsArgs) ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexVideoSettingsOutput).ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(ctx)
}

// MultiplexprogramMultiplexVideoSettingsPtrInput is an input type that accepts MultiplexprogramMultiplexVideoSettingsArgs, MultiplexprogramMultiplexVideoSettingsPtr and MultiplexprogramMultiplexVideoSettingsPtrOutput values.
// You can construct a concrete instance of `MultiplexprogramMultiplexVideoSettingsPtrInput` via:
//
//	        MultiplexprogramMultiplexVideoSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiplexprogramMultiplexVideoSettingsPtrInput interface {
	pulumi.Input

	ToMultiplexprogramMultiplexVideoSettingsPtrOutput() MultiplexprogramMultiplexVideoSettingsPtrOutput
	ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(context.Context) MultiplexprogramMultiplexVideoSettingsPtrOutput
}

type multiplexprogramMultiplexVideoSettingsPtrType MultiplexprogramMultiplexVideoSettingsArgs

func MultiplexprogramMultiplexVideoSettingsPtr(v *MultiplexprogramMultiplexVideoSettingsArgs) MultiplexprogramMultiplexVideoSettingsPtrInput {
	return (*multiplexprogramMultiplexVideoSettingsPtrType)(v)
}

func (*multiplexprogramMultiplexVideoSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexVideoSettings)(nil)).Elem()
}

func (i *multiplexprogramMultiplexVideoSettingsPtrType) ToMultiplexprogramMultiplexVideoSettingsPtrOutput() MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return i.ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(context.Background())
}

func (i *multiplexprogramMultiplexVideoSettingsPtrType) ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexprogramMultiplexVideoSettingsPtrOutput)
}

// The video configuration for each program in a multiplex.
type MultiplexprogramMultiplexVideoSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexVideoSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexprogramMultiplexVideoSettings)(nil)).Elem()
}

func (o MultiplexprogramMultiplexVideoSettingsOutput) ToMultiplexprogramMultiplexVideoSettingsOutput() MultiplexprogramMultiplexVideoSettingsOutput {
	return o
}

func (o MultiplexprogramMultiplexVideoSettingsOutput) ToMultiplexprogramMultiplexVideoSettingsOutputWithContext(ctx context.Context) MultiplexprogramMultiplexVideoSettingsOutput {
	return o
}

func (o MultiplexprogramMultiplexVideoSettingsOutput) ToMultiplexprogramMultiplexVideoSettingsPtrOutput() MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return o.ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(context.Background())
}

func (o MultiplexprogramMultiplexVideoSettingsOutput) ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexprogramMultiplexVideoSettings) *MultiplexprogramMultiplexVideoSettings {
		return &v
	}).(MultiplexprogramMultiplexVideoSettingsPtrOutput)
}

type MultiplexprogramMultiplexVideoSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexprogramMultiplexVideoSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexprogramMultiplexVideoSettings)(nil)).Elem()
}

func (o MultiplexprogramMultiplexVideoSettingsPtrOutput) ToMultiplexprogramMultiplexVideoSettingsPtrOutput() MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexVideoSettingsPtrOutput) ToMultiplexprogramMultiplexVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexprogramMultiplexVideoSettingsPtrOutput {
	return o
}

func (o MultiplexprogramMultiplexVideoSettingsPtrOutput) Elem() MultiplexprogramMultiplexVideoSettingsOutput {
	return o.ApplyT(func(v *MultiplexprogramMultiplexVideoSettings) MultiplexprogramMultiplexVideoSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexprogramMultiplexVideoSettings
		return ret
	}).(MultiplexprogramMultiplexVideoSettingsOutput)
}

// IP address cidr pool
type NetworkIpPool struct {
	// IP address cidr pool
	Cidr *string `pulumi:"cidr"`
}

// NetworkIpPoolInput is an input type that accepts NetworkIpPoolArgs and NetworkIpPoolOutput values.
// You can construct a concrete instance of `NetworkIpPoolInput` via:
//
//	NetworkIpPoolArgs{...}
type NetworkIpPoolInput interface {
	pulumi.Input

	ToNetworkIpPoolOutput() NetworkIpPoolOutput
	ToNetworkIpPoolOutputWithContext(context.Context) NetworkIpPoolOutput
}

// IP address cidr pool
type NetworkIpPoolArgs struct {
	// IP address cidr pool
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
}

func (NetworkIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIpPool)(nil)).Elem()
}

func (i NetworkIpPoolArgs) ToNetworkIpPoolOutput() NetworkIpPoolOutput {
	return i.ToNetworkIpPoolOutputWithContext(context.Background())
}

func (i NetworkIpPoolArgs) ToNetworkIpPoolOutputWithContext(ctx context.Context) NetworkIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpPoolOutput)
}

// NetworkIpPoolArrayInput is an input type that accepts NetworkIpPoolArray and NetworkIpPoolArrayOutput values.
// You can construct a concrete instance of `NetworkIpPoolArrayInput` via:
//
//	NetworkIpPoolArray{ NetworkIpPoolArgs{...} }
type NetworkIpPoolArrayInput interface {
	pulumi.Input

	ToNetworkIpPoolArrayOutput() NetworkIpPoolArrayOutput
	ToNetworkIpPoolArrayOutputWithContext(context.Context) NetworkIpPoolArrayOutput
}

type NetworkIpPoolArray []NetworkIpPoolInput

func (NetworkIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIpPool)(nil)).Elem()
}

func (i NetworkIpPoolArray) ToNetworkIpPoolArrayOutput() NetworkIpPoolArrayOutput {
	return i.ToNetworkIpPoolArrayOutputWithContext(context.Background())
}

func (i NetworkIpPoolArray) ToNetworkIpPoolArrayOutputWithContext(ctx context.Context) NetworkIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpPoolArrayOutput)
}

// IP address cidr pool
type NetworkIpPoolOutput struct{ *pulumi.OutputState }

func (NetworkIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIpPool)(nil)).Elem()
}

func (o NetworkIpPoolOutput) ToNetworkIpPoolOutput() NetworkIpPoolOutput {
	return o
}

func (o NetworkIpPoolOutput) ToNetworkIpPoolOutputWithContext(ctx context.Context) NetworkIpPoolOutput {
	return o
}

// IP address cidr pool
func (o NetworkIpPoolOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIpPool) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

type NetworkIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkIpPool)(nil)).Elem()
}

func (o NetworkIpPoolArrayOutput) ToNetworkIpPoolArrayOutput() NetworkIpPoolArrayOutput {
	return o
}

func (o NetworkIpPoolArrayOutput) ToNetworkIpPoolArrayOutputWithContext(ctx context.Context) NetworkIpPoolArrayOutput {
	return o
}

func (o NetworkIpPoolArrayOutput) Index(i pulumi.IntInput) NetworkIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkIpPool {
		return vs[0].([]NetworkIpPool)[vs[1].(int)]
	}).(NetworkIpPoolOutput)
}

type NetworkRoute struct {
	// Ip address cidr
	Cidr *string `pulumi:"cidr"`
	// IP address for the route packet paths
	Gateway *string `pulumi:"gateway"`
}

// NetworkRouteInput is an input type that accepts NetworkRouteArgs and NetworkRouteOutput values.
// You can construct a concrete instance of `NetworkRouteInput` via:
//
//	NetworkRouteArgs{...}
type NetworkRouteInput interface {
	pulumi.Input

	ToNetworkRouteOutput() NetworkRouteOutput
	ToNetworkRouteOutputWithContext(context.Context) NetworkRouteOutput
}

type NetworkRouteArgs struct {
	// Ip address cidr
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// IP address for the route packet paths
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
}

func (NetworkRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoute)(nil)).Elem()
}

func (i NetworkRouteArgs) ToNetworkRouteOutput() NetworkRouteOutput {
	return i.ToNetworkRouteOutputWithContext(context.Background())
}

func (i NetworkRouteArgs) ToNetworkRouteOutputWithContext(ctx context.Context) NetworkRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRouteOutput)
}

// NetworkRouteArrayInput is an input type that accepts NetworkRouteArray and NetworkRouteArrayOutput values.
// You can construct a concrete instance of `NetworkRouteArrayInput` via:
//
//	NetworkRouteArray{ NetworkRouteArgs{...} }
type NetworkRouteArrayInput interface {
	pulumi.Input

	ToNetworkRouteArrayOutput() NetworkRouteArrayOutput
	ToNetworkRouteArrayOutputWithContext(context.Context) NetworkRouteArrayOutput
}

type NetworkRouteArray []NetworkRouteInput

func (NetworkRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoute)(nil)).Elem()
}

func (i NetworkRouteArray) ToNetworkRouteArrayOutput() NetworkRouteArrayOutput {
	return i.ToNetworkRouteArrayOutputWithContext(context.Background())
}

func (i NetworkRouteArray) ToNetworkRouteArrayOutputWithContext(ctx context.Context) NetworkRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRouteArrayOutput)
}

type NetworkRouteOutput struct{ *pulumi.OutputState }

func (NetworkRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoute)(nil)).Elem()
}

func (o NetworkRouteOutput) ToNetworkRouteOutput() NetworkRouteOutput {
	return o
}

func (o NetworkRouteOutput) ToNetworkRouteOutputWithContext(ctx context.Context) NetworkRouteOutput {
	return o
}

// Ip address cidr
func (o NetworkRouteOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoute) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// IP address for the route packet paths
func (o NetworkRouteOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRoute) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

type NetworkRouteArrayOutput struct{ *pulumi.OutputState }

func (NetworkRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkRoute)(nil)).Elem()
}

func (o NetworkRouteArrayOutput) ToNetworkRouteArrayOutput() NetworkRouteArrayOutput {
	return o
}

func (o NetworkRouteArrayOutput) ToNetworkRouteArrayOutputWithContext(ctx context.Context) NetworkRouteArrayOutput {
	return o
}

func (o NetworkRouteArrayOutput) Index(i pulumi.IntInput) NetworkRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkRoute {
		return vs[0].([]NetworkRoute)[vs[1].(int)]
	}).(NetworkRouteOutput)
}

// A key-value pair to associate with a resource.
type NetworkTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type SdiSourceTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// An AWS resource used in media workflows.
type SignalMapMediaResource struct {
	// A direct destination neighbor to an Amazon Web Services media resource.
	Destinations []SignalMapMediaResourceNeighbor `pulumi:"destinations"`
	// The logical name of an AWS media resource.
	Name *string `pulumi:"name"`
	// A direct source neighbor to an Amazon Web Services media resource.
	Sources []SignalMapMediaResourceNeighbor `pulumi:"sources"`
}

// An AWS resource used in media workflows.
type SignalMapMediaResourceOutput struct{ *pulumi.OutputState }

func (SignalMapMediaResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalMapMediaResource)(nil)).Elem()
}

func (o SignalMapMediaResourceOutput) ToSignalMapMediaResourceOutput() SignalMapMediaResourceOutput {
	return o
}

func (o SignalMapMediaResourceOutput) ToSignalMapMediaResourceOutputWithContext(ctx context.Context) SignalMapMediaResourceOutput {
	return o
}

// A direct destination neighbor to an Amazon Web Services media resource.
func (o SignalMapMediaResourceOutput) Destinations() SignalMapMediaResourceNeighborArrayOutput {
	return o.ApplyT(func(v SignalMapMediaResource) []SignalMapMediaResourceNeighbor { return v.Destinations }).(SignalMapMediaResourceNeighborArrayOutput)
}

// The logical name of an AWS media resource.
func (o SignalMapMediaResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SignalMapMediaResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A direct source neighbor to an Amazon Web Services media resource.
func (o SignalMapMediaResourceOutput) Sources() SignalMapMediaResourceNeighborArrayOutput {
	return o.ApplyT(func(v SignalMapMediaResource) []SignalMapMediaResourceNeighbor { return v.Sources }).(SignalMapMediaResourceNeighborArrayOutput)
}

type SignalMapMediaResourceMapOutput struct{ *pulumi.OutputState }

func (SignalMapMediaResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SignalMapMediaResource)(nil)).Elem()
}

func (o SignalMapMediaResourceMapOutput) ToSignalMapMediaResourceMapOutput() SignalMapMediaResourceMapOutput {
	return o
}

func (o SignalMapMediaResourceMapOutput) ToSignalMapMediaResourceMapOutputWithContext(ctx context.Context) SignalMapMediaResourceMapOutput {
	return o
}

func (o SignalMapMediaResourceMapOutput) MapIndex(k pulumi.StringInput) SignalMapMediaResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SignalMapMediaResource {
		return vs[0].(map[string]SignalMapMediaResource)[vs[1].(string)]
	}).(SignalMapMediaResourceOutput)
}

// A direct source or destination neighbor to an AWS media resource.
type SignalMapMediaResourceNeighbor struct {
	// The ARN of a resource used in AWS media workflows.
	Arn string `pulumi:"arn"`
	// The logical name of an AWS media resource.
	Name *string `pulumi:"name"`
}

// A direct source or destination neighbor to an AWS media resource.
type SignalMapMediaResourceNeighborOutput struct{ *pulumi.OutputState }

func (SignalMapMediaResourceNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalMapMediaResourceNeighbor)(nil)).Elem()
}

func (o SignalMapMediaResourceNeighborOutput) ToSignalMapMediaResourceNeighborOutput() SignalMapMediaResourceNeighborOutput {
	return o
}

func (o SignalMapMediaResourceNeighborOutput) ToSignalMapMediaResourceNeighborOutputWithContext(ctx context.Context) SignalMapMediaResourceNeighborOutput {
	return o
}

// The ARN of a resource used in AWS media workflows.
func (o SignalMapMediaResourceNeighborOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v SignalMapMediaResourceNeighbor) string { return v.Arn }).(pulumi.StringOutput)
}

// The logical name of an AWS media resource.
func (o SignalMapMediaResourceNeighborOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SignalMapMediaResourceNeighbor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SignalMapMediaResourceNeighborArrayOutput struct{ *pulumi.OutputState }

func (SignalMapMediaResourceNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SignalMapMediaResourceNeighbor)(nil)).Elem()
}

func (o SignalMapMediaResourceNeighborArrayOutput) ToSignalMapMediaResourceNeighborArrayOutput() SignalMapMediaResourceNeighborArrayOutput {
	return o
}

func (o SignalMapMediaResourceNeighborArrayOutput) ToSignalMapMediaResourceNeighborArrayOutputWithContext(ctx context.Context) SignalMapMediaResourceNeighborArrayOutput {
	return o
}

func (o SignalMapMediaResourceNeighborArrayOutput) Index(i pulumi.IntInput) SignalMapMediaResourceNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SignalMapMediaResourceNeighbor {
		return vs[0].([]SignalMapMediaResourceNeighbor)[vs[1].(int)]
	}).(SignalMapMediaResourceNeighborOutput)
}

// Represents the latest monitor deployment of a signal map.
type SignalMapMonitorDeployment struct {
	// URI associated with a signal map's monitor deployment.
	DetailsUri *string `pulumi:"detailsUri"`
	// Error message associated with a failed monitor deployment of a signal map.
	ErrorMessage *string `pulumi:"errorMessage"`
	// The signal map monitor deployment status.
	Status SignalMapMonitorDeploymentStatus `pulumi:"status"`
}

// Represents the latest monitor deployment of a signal map.
type SignalMapMonitorDeploymentOutput struct{ *pulumi.OutputState }

func (SignalMapMonitorDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalMapMonitorDeployment)(nil)).Elem()
}

func (o SignalMapMonitorDeploymentOutput) ToSignalMapMonitorDeploymentOutput() SignalMapMonitorDeploymentOutput {
	return o
}

func (o SignalMapMonitorDeploymentOutput) ToSignalMapMonitorDeploymentOutputWithContext(ctx context.Context) SignalMapMonitorDeploymentOutput {
	return o
}

// URI associated with a signal map's monitor deployment.
func (o SignalMapMonitorDeploymentOutput) DetailsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SignalMapMonitorDeployment) *string { return v.DetailsUri }).(pulumi.StringPtrOutput)
}

// Error message associated with a failed monitor deployment of a signal map.
func (o SignalMapMonitorDeploymentOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SignalMapMonitorDeployment) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// The signal map monitor deployment status.
func (o SignalMapMonitorDeploymentOutput) Status() SignalMapMonitorDeploymentStatusOutput {
	return o.ApplyT(func(v SignalMapMonitorDeployment) SignalMapMonitorDeploymentStatus { return v.Status }).(SignalMapMonitorDeploymentStatusOutput)
}

type SignalMapMonitorDeploymentPtrOutput struct{ *pulumi.OutputState }

func (SignalMapMonitorDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalMapMonitorDeployment)(nil)).Elem()
}

func (o SignalMapMonitorDeploymentPtrOutput) ToSignalMapMonitorDeploymentPtrOutput() SignalMapMonitorDeploymentPtrOutput {
	return o
}

func (o SignalMapMonitorDeploymentPtrOutput) ToSignalMapMonitorDeploymentPtrOutputWithContext(ctx context.Context) SignalMapMonitorDeploymentPtrOutput {
	return o
}

func (o SignalMapMonitorDeploymentPtrOutput) Elem() SignalMapMonitorDeploymentOutput {
	return o.ApplyT(func(v *SignalMapMonitorDeployment) SignalMapMonitorDeployment {
		if v != nil {
			return *v
		}
		var ret SignalMapMonitorDeployment
		return ret
	}).(SignalMapMonitorDeploymentOutput)
}

// URI associated with a signal map's monitor deployment.
func (o SignalMapMonitorDeploymentPtrOutput) DetailsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SignalMapMonitorDeployment) *string {
		if v == nil {
			return nil
		}
		return v.DetailsUri
	}).(pulumi.StringPtrOutput)
}

// Error message associated with a failed monitor deployment of a signal map.
func (o SignalMapMonitorDeploymentPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SignalMapMonitorDeployment) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// The signal map monitor deployment status.
func (o SignalMapMonitorDeploymentPtrOutput) Status() SignalMapMonitorDeploymentStatusPtrOutput {
	return o.ApplyT(func(v *SignalMapMonitorDeployment) *SignalMapMonitorDeploymentStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(SignalMapMonitorDeploymentStatusPtrOutput)
}

// Represents the latest successful monitor deployment of a signal map.
type SignalMapSuccessfulMonitorDeployment struct {
	// URI associated with a signal map's monitor deployment.
	DetailsUri string `pulumi:"detailsUri"`
	// A signal map's monitor deployment status.
	Status SignalMapMonitorDeploymentStatus `pulumi:"status"`
}

// Represents the latest successful monitor deployment of a signal map.
type SignalMapSuccessfulMonitorDeploymentOutput struct{ *pulumi.OutputState }

func (SignalMapSuccessfulMonitorDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignalMapSuccessfulMonitorDeployment)(nil)).Elem()
}

func (o SignalMapSuccessfulMonitorDeploymentOutput) ToSignalMapSuccessfulMonitorDeploymentOutput() SignalMapSuccessfulMonitorDeploymentOutput {
	return o
}

func (o SignalMapSuccessfulMonitorDeploymentOutput) ToSignalMapSuccessfulMonitorDeploymentOutputWithContext(ctx context.Context) SignalMapSuccessfulMonitorDeploymentOutput {
	return o
}

// URI associated with a signal map's monitor deployment.
func (o SignalMapSuccessfulMonitorDeploymentOutput) DetailsUri() pulumi.StringOutput {
	return o.ApplyT(func(v SignalMapSuccessfulMonitorDeployment) string { return v.DetailsUri }).(pulumi.StringOutput)
}

// A signal map's monitor deployment status.
func (o SignalMapSuccessfulMonitorDeploymentOutput) Status() SignalMapMonitorDeploymentStatusOutput {
	return o.ApplyT(func(v SignalMapSuccessfulMonitorDeployment) SignalMapMonitorDeploymentStatus { return v.Status }).(SignalMapMonitorDeploymentStatusOutput)
}

type SignalMapSuccessfulMonitorDeploymentPtrOutput struct{ *pulumi.OutputState }

func (SignalMapSuccessfulMonitorDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalMapSuccessfulMonitorDeployment)(nil)).Elem()
}

func (o SignalMapSuccessfulMonitorDeploymentPtrOutput) ToSignalMapSuccessfulMonitorDeploymentPtrOutput() SignalMapSuccessfulMonitorDeploymentPtrOutput {
	return o
}

func (o SignalMapSuccessfulMonitorDeploymentPtrOutput) ToSignalMapSuccessfulMonitorDeploymentPtrOutputWithContext(ctx context.Context) SignalMapSuccessfulMonitorDeploymentPtrOutput {
	return o
}

func (o SignalMapSuccessfulMonitorDeploymentPtrOutput) Elem() SignalMapSuccessfulMonitorDeploymentOutput {
	return o.ApplyT(func(v *SignalMapSuccessfulMonitorDeployment) SignalMapSuccessfulMonitorDeployment {
		if v != nil {
			return *v
		}
		var ret SignalMapSuccessfulMonitorDeployment
		return ret
	}).(SignalMapSuccessfulMonitorDeploymentOutput)
}

// URI associated with a signal map's monitor deployment.
func (o SignalMapSuccessfulMonitorDeploymentPtrOutput) DetailsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SignalMapSuccessfulMonitorDeployment) *string {
		if v == nil {
			return nil
		}
		return &v.DetailsUri
	}).(pulumi.StringPtrOutput)
}

// A signal map's monitor deployment status.
func (o SignalMapSuccessfulMonitorDeploymentPtrOutput) Status() SignalMapMonitorDeploymentStatusPtrOutput {
	return o.ApplyT(func(v *SignalMapSuccessfulMonitorDeployment) *SignalMapMonitorDeploymentStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(SignalMapMonitorDeploymentStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInterfaceMappingInput)(nil)).Elem(), ClusterInterfaceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInterfaceMappingArrayInput)(nil)).Elem(), ClusterInterfaceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkSettingsInput)(nil)).Elem(), ClusterNetworkSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkSettingsPtrInput)(nil)).Elem(), ClusterNetworkSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventBridgeRuleTemplateTargetInput)(nil)).Elem(), EventBridgeRuleTemplateTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventBridgeRuleTemplateTargetArrayInput)(nil)).Elem(), EventBridgeRuleTemplateTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexOutputDestinationInput)(nil)).Elem(), MultiplexOutputDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexOutputDestinationArrayInput)(nil)).Elem(), MultiplexOutputDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesInput)(nil)).Elem(), MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrInput)(nil)).Elem(), MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexSettingsInput)(nil)).Elem(), MultiplexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramPacketIdentifiersMapInput)(nil)).Elem(), MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrInput)(nil)).Elem(), MultiplexprogramMultiplexProgramPacketIdentifiersMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramPipelineDetailInput)(nil)).Elem(), MultiplexprogramMultiplexProgramPipelineDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramPipelineDetailArrayInput)(nil)).Elem(), MultiplexprogramMultiplexProgramPipelineDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramServiceDescriptorInput)(nil)).Elem(), MultiplexprogramMultiplexProgramServiceDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramServiceDescriptorPtrInput)(nil)).Elem(), MultiplexprogramMultiplexProgramServiceDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramSettingsInput)(nil)).Elem(), MultiplexprogramMultiplexProgramSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexProgramSettingsPtrInput)(nil)).Elem(), MultiplexprogramMultiplexProgramSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexVideoSettingsInput)(nil)).Elem(), MultiplexprogramMultiplexVideoSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexprogramMultiplexVideoSettingsPtrInput)(nil)).Elem(), MultiplexprogramMultiplexVideoSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpPoolInput)(nil)).Elem(), NetworkIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpPoolArrayInput)(nil)).Elem(), NetworkIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRouteInput)(nil)).Elem(), NetworkRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRouteArrayInput)(nil)).Elem(), NetworkRouteArray{})
	pulumi.RegisterOutputType(ClusterInterfaceMappingOutput{})
	pulumi.RegisterOutputType(ClusterInterfaceMappingArrayOutput{})
	pulumi.RegisterOutputType(ClusterNetworkSettingsOutput{})
	pulumi.RegisterOutputType(ClusterNetworkSettingsPtrOutput{})
	pulumi.RegisterOutputType(EventBridgeRuleTemplateTargetOutput{})
	pulumi.RegisterOutputType(EventBridgeRuleTemplateTargetArrayOutput{})
	pulumi.RegisterOutputType(MultiplexOutputDestinationOutput{})
	pulumi.RegisterOutputType(MultiplexOutputDestinationArrayOutput{})
	pulumi.RegisterOutputType(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(MultiplexOutputDestinationMultiplexMediaConnectOutputDestinationSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MultiplexSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexSettingsPtrOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramPacketIdentifiersMapOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramPacketIdentifiersMapPtrOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramPipelineDetailOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramPipelineDetailArrayOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramServiceDescriptorOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramServiceDescriptorPtrOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexProgramSettingsPtrOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexVideoSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexprogramMultiplexVideoSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkIpPoolOutput{})
	pulumi.RegisterOutputType(NetworkIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkRouteOutput{})
	pulumi.RegisterOutputType(NetworkRouteArrayOutput{})
	pulumi.RegisterOutputType(SignalMapMediaResourceOutput{})
	pulumi.RegisterOutputType(SignalMapMediaResourceMapOutput{})
	pulumi.RegisterOutputType(SignalMapMediaResourceNeighborOutput{})
	pulumi.RegisterOutputType(SignalMapMediaResourceNeighborArrayOutput{})
	pulumi.RegisterOutputType(SignalMapMonitorDeploymentOutput{})
	pulumi.RegisterOutputType(SignalMapMonitorDeploymentPtrOutput{})
	pulumi.RegisterOutputType(SignalMapSuccessfulMonitorDeploymentOutput{})
	pulumi.RegisterOutputType(SignalMapSuccessfulMonitorDeploymentPtrOutput{})
}
