// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::RedshiftServerless::Namespace Resource Type
type Namespace struct {
	pulumi.CustomResourceState

	// The ID of the AWS Key Management Service (KMS) key used to encrypt and store the namespace's admin credentials secret. You can only use this parameter if manageAdminPassword is true.
	AdminPasswordSecretKmsKeyId pulumi.StringPtrOutput `pulumi:"adminPasswordSecretKmsKeyId"`
	// The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit. You can't use adminUserPassword if manageAdminPassword is true.
	AdminUserPassword pulumi.StringPtrOutput `pulumi:"adminUserPassword"`
	// The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
	AdminUsername pulumi.StringPtrOutput `pulumi:"adminUsername"`
	// The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
	DbName pulumi.StringPtrOutput `pulumi:"dbName"`
	// The default IAM role ARN for the namespace that is being created.
	DefaultIamRoleArn pulumi.StringPtrOutput `pulumi:"defaultIamRoleArn"`
	// The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace
	FinalSnapshotName pulumi.StringPtrOutput `pulumi:"finalSnapshotName"`
	// The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.
	FinalSnapshotRetentionPeriod pulumi.IntPtrOutput `pulumi:"finalSnapshotRetentionPeriod"`
	// A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
	IamRoles pulumi.StringArrayOutput `pulumi:"iamRoles"`
	// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
	LogExports NamespaceLogExportArrayOutput `pulumi:"logExports"`
	// If true, Amazon Redshift uses AWS Secrets Manager to manage the namespace's admin credentials. You can't use adminUserPassword if manageAdminPassword is true. If manageAdminPassword is false or not set, Amazon Redshift uses adminUserPassword for the admin user account's password.
	ManageAdminPassword pulumi.BoolPtrOutput `pulumi:"manageAdminPassword"`
	// Definition of Namespace resource.
	Namespace NamespaceTypeOutput `pulumi:"namespace"`
	// A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
	NamespaceName pulumi.StringOutput `pulumi:"namespaceName"`
	// The resource policy document that will be attached to the namespace.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RedshiftServerless::Namespace` for more information about the expected schema for this property.
	NamespaceResourcePolicy pulumi.AnyOutput `pulumi:"namespaceResourcePolicy"`
	// The ARN for the Redshift application that integrates with IAM Identity Center.
	RedshiftIdcApplicationArn pulumi.StringPtrOutput `pulumi:"redshiftIdcApplicationArn"`
	// The list of tags for the namespace.
	Tags aws.CreateOnlyTagArrayOutput `pulumi:"tags"`
}

// NewNamespace registers a new resource with the given unique name, arguments, and options.
func NewNamespace(ctx *pulumi.Context,
	name string, args *NamespaceArgs, opts ...pulumi.ResourceOption) (*Namespace, error) {
	if args == nil {
		args = &NamespaceArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"namespaceName",
		"tags[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Namespace
	err := ctx.RegisterResource("aws-native:redshiftserverless:Namespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespace gets an existing Namespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceState, opts ...pulumi.ResourceOption) (*Namespace, error) {
	var resource Namespace
	err := ctx.ReadResource("aws-native:redshiftserverless:Namespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Namespace resources.
type namespaceState struct {
}

type NamespaceState struct {
}

func (NamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceState)(nil)).Elem()
}

type namespaceArgs struct {
	// The ID of the AWS Key Management Service (KMS) key used to encrypt and store the namespace's admin credentials secret. You can only use this parameter if manageAdminPassword is true.
	AdminPasswordSecretKmsKeyId *string `pulumi:"adminPasswordSecretKmsKeyId"`
	// The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit. You can't use adminUserPassword if manageAdminPassword is true.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
	AdminUsername *string `pulumi:"adminUsername"`
	// The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
	DbName *string `pulumi:"dbName"`
	// The default IAM role ARN for the namespace that is being created.
	DefaultIamRoleArn *string `pulumi:"defaultIamRoleArn"`
	// The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.
	FinalSnapshotRetentionPeriod *int `pulumi:"finalSnapshotRetentionPeriod"`
	// A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
	IamRoles []string `pulumi:"iamRoles"`
	// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
	LogExports []NamespaceLogExport `pulumi:"logExports"`
	// If true, Amazon Redshift uses AWS Secrets Manager to manage the namespace's admin credentials. You can't use adminUserPassword if manageAdminPassword is true. If manageAdminPassword is false or not set, Amazon Redshift uses adminUserPassword for the admin user account's password.
	ManageAdminPassword *bool `pulumi:"manageAdminPassword"`
	// A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
	NamespaceName *string `pulumi:"namespaceName"`
	// The resource policy document that will be attached to the namespace.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RedshiftServerless::Namespace` for more information about the expected schema for this property.
	NamespaceResourcePolicy interface{} `pulumi:"namespaceResourcePolicy"`
	// The ARN for the Redshift application that integrates with IAM Identity Center.
	RedshiftIdcApplicationArn *string `pulumi:"redshiftIdcApplicationArn"`
	// The list of tags for the namespace.
	Tags []aws.CreateOnlyTag `pulumi:"tags"`
}

// The set of arguments for constructing a Namespace resource.
type NamespaceArgs struct {
	// The ID of the AWS Key Management Service (KMS) key used to encrypt and store the namespace's admin credentials secret. You can only use this parameter if manageAdminPassword is true.
	AdminPasswordSecretKmsKeyId pulumi.StringPtrInput
	// The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit. You can't use adminUserPassword if manageAdminPassword is true.
	AdminUserPassword pulumi.StringPtrInput
	// The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
	AdminUsername pulumi.StringPtrInput
	// The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
	DbName pulumi.StringPtrInput
	// The default IAM role ARN for the namespace that is being created.
	DefaultIamRoleArn pulumi.StringPtrInput
	// The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace
	FinalSnapshotName pulumi.StringPtrInput
	// The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.
	FinalSnapshotRetentionPeriod pulumi.IntPtrInput
	// A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
	IamRoles pulumi.StringArrayInput
	// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
	KmsKeyId pulumi.StringPtrInput
	// The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
	LogExports NamespaceLogExportArrayInput
	// If true, Amazon Redshift uses AWS Secrets Manager to manage the namespace's admin credentials. You can't use adminUserPassword if manageAdminPassword is true. If manageAdminPassword is false or not set, Amazon Redshift uses adminUserPassword for the admin user account's password.
	ManageAdminPassword pulumi.BoolPtrInput
	// A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
	NamespaceName pulumi.StringPtrInput
	// The resource policy document that will be attached to the namespace.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RedshiftServerless::Namespace` for more information about the expected schema for this property.
	NamespaceResourcePolicy pulumi.Input
	// The ARN for the Redshift application that integrates with IAM Identity Center.
	RedshiftIdcApplicationArn pulumi.StringPtrInput
	// The list of tags for the namespace.
	Tags aws.CreateOnlyTagArrayInput
}

func (NamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceArgs)(nil)).Elem()
}

type NamespaceInput interface {
	pulumi.Input

	ToNamespaceOutput() NamespaceOutput
	ToNamespaceOutputWithContext(ctx context.Context) NamespaceOutput
}

func (*Namespace) ElementType() reflect.Type {
	return reflect.TypeOf((**Namespace)(nil)).Elem()
}

func (i *Namespace) ToNamespaceOutput() NamespaceOutput {
	return i.ToNamespaceOutputWithContext(context.Background())
}

func (i *Namespace) ToNamespaceOutputWithContext(ctx context.Context) NamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceOutput)
}

type NamespaceOutput struct{ *pulumi.OutputState }

func (NamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Namespace)(nil)).Elem()
}

func (o NamespaceOutput) ToNamespaceOutput() NamespaceOutput {
	return o
}

func (o NamespaceOutput) ToNamespaceOutputWithContext(ctx context.Context) NamespaceOutput {
	return o
}

// The ID of the AWS Key Management Service (KMS) key used to encrypt and store the namespace's admin credentials secret. You can only use this parameter if manageAdminPassword is true.
func (o NamespaceOutput) AdminPasswordSecretKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.AdminPasswordSecretKmsKeyId }).(pulumi.StringPtrOutput)
}

// The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit. You can't use adminUserPassword if manageAdminPassword is true.
func (o NamespaceOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
func (o NamespaceOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
func (o NamespaceOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.DbName }).(pulumi.StringPtrOutput)
}

// The default IAM role ARN for the namespace that is being created.
func (o NamespaceOutput) DefaultIamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.DefaultIamRoleArn }).(pulumi.StringPtrOutput)
}

// The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace
func (o NamespaceOutput) FinalSnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.FinalSnapshotName }).(pulumi.StringPtrOutput)
}

// The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.
func (o NamespaceOutput) FinalSnapshotRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.IntPtrOutput { return v.FinalSnapshotRetentionPeriod }).(pulumi.IntPtrOutput)
}

// A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
func (o NamespaceOutput) IamRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringArrayOutput { return v.IamRoles }).(pulumi.StringArrayOutput)
}

// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
func (o NamespaceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
func (o NamespaceOutput) LogExports() NamespaceLogExportArrayOutput {
	return o.ApplyT(func(v *Namespace) NamespaceLogExportArrayOutput { return v.LogExports }).(NamespaceLogExportArrayOutput)
}

// If true, Amazon Redshift uses AWS Secrets Manager to manage the namespace's admin credentials. You can't use adminUserPassword if manageAdminPassword is true. If manageAdminPassword is false or not set, Amazon Redshift uses adminUserPassword for the admin user account's password.
func (o NamespaceOutput) ManageAdminPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.BoolPtrOutput { return v.ManageAdminPassword }).(pulumi.BoolPtrOutput)
}

// Definition of Namespace resource.
func (o NamespaceOutput) Namespace() NamespaceTypeOutput {
	return o.ApplyT(func(v *Namespace) NamespaceTypeOutput { return v.Namespace }).(NamespaceTypeOutput)
}

// A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
func (o NamespaceOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringOutput { return v.NamespaceName }).(pulumi.StringOutput)
}

// The resource policy document that will be attached to the namespace.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RedshiftServerless::Namespace` for more information about the expected schema for this property.
func (o NamespaceOutput) NamespaceResourcePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *Namespace) pulumi.AnyOutput { return v.NamespaceResourcePolicy }).(pulumi.AnyOutput)
}

// The ARN for the Redshift application that integrates with IAM Identity Center.
func (o NamespaceOutput) RedshiftIdcApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Namespace) pulumi.StringPtrOutput { return v.RedshiftIdcApplicationArn }).(pulumi.StringPtrOutput)
}

// The list of tags for the namespace.
func (o NamespaceOutput) Tags() aws.CreateOnlyTagArrayOutput {
	return o.ApplyT(func(v *Namespace) aws.CreateOnlyTagArrayOutput { return v.Tags }).(aws.CreateOnlyTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NamespaceInput)(nil)).Elem(), &Namespace{})
	pulumi.RegisterOutputType(NamespaceOutput{})
}
