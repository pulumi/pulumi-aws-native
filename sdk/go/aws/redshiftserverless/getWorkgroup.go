// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::RedshiftServerless::Workgroup Resource Type
func LookupWorkgroup(ctx *pulumi.Context, args *LookupWorkgroupArgs, opts ...pulumi.InvokeOption) (*LookupWorkgroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkgroupResult
	err := ctx.Invoke("aws-native:redshiftserverless:getWorkgroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkgroupArgs struct {
	// The name of the workgroup.
	WorkgroupName string `pulumi:"workgroupName"`
}

type LookupWorkgroupResult struct {
	// The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.
	EnhancedVpcRouting *bool `pulumi:"enhancedVpcRouting"`
	// The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.
	Port *int `pulumi:"port"`
	// A property that represents the price performance target settings for the workgroup.
	PricePerformanceTarget *WorkgroupPerformanceTarget `pulumi:"pricePerformanceTarget"`
	// A value that specifies whether the workgroup can be accessible from a public network.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// The map of the key-value pairs used to tag the workgroup.
	Tags []aws.Tag `pulumi:"tags"`
	// Definition for workgroup resource
	Workgroup *WorkgroupType `pulumi:"workgroup"`
}

func LookupWorkgroupOutput(ctx *pulumi.Context, args LookupWorkgroupOutputArgs, opts ...pulumi.InvokeOption) LookupWorkgroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkgroupResultOutput, error) {
			args := v.(LookupWorkgroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:redshiftserverless:getWorkgroup", args, LookupWorkgroupResultOutput{}, options).(LookupWorkgroupResultOutput), nil
		}).(LookupWorkgroupResultOutput)
}

type LookupWorkgroupOutputArgs struct {
	// The name of the workgroup.
	WorkgroupName pulumi.StringInput `pulumi:"workgroupName"`
}

func (LookupWorkgroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkgroupArgs)(nil)).Elem()
}

type LookupWorkgroupResultOutput struct{ *pulumi.OutputState }

func (LookupWorkgroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkgroupResult)(nil)).Elem()
}

func (o LookupWorkgroupResultOutput) ToLookupWorkgroupResultOutput() LookupWorkgroupResultOutput {
	return o
}

func (o LookupWorkgroupResultOutput) ToLookupWorkgroupResultOutputWithContext(ctx context.Context) LookupWorkgroupResultOutput {
	return o
}

// The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.
func (o LookupWorkgroupResultOutput) EnhancedVpcRouting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupWorkgroupResult) *bool { return v.EnhancedVpcRouting }).(pulumi.BoolPtrOutput)
}

// The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.
func (o LookupWorkgroupResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWorkgroupResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// A property that represents the price performance target settings for the workgroup.
func (o LookupWorkgroupResultOutput) PricePerformanceTarget() WorkgroupPerformanceTargetPtrOutput {
	return o.ApplyT(func(v LookupWorkgroupResult) *WorkgroupPerformanceTarget { return v.PricePerformanceTarget }).(WorkgroupPerformanceTargetPtrOutput)
}

// A value that specifies whether the workgroup can be accessible from a public network.
func (o LookupWorkgroupResultOutput) PubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupWorkgroupResult) *bool { return v.PubliclyAccessible }).(pulumi.BoolPtrOutput)
}

// The map of the key-value pairs used to tag the workgroup.
func (o LookupWorkgroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupWorkgroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// Definition for workgroup resource
func (o LookupWorkgroupResultOutput) Workgroup() WorkgroupTypePtrOutput {
	return o.ApplyT(func(v LookupWorkgroupResult) *WorkgroupType { return v.Workgroup }).(WorkgroupTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkgroupResultOutput{})
}
