// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html
type PackagingGroup struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-authorization
	Authorization PackagingGroupAuthorizationPtrOutput `pulumi:"authorization"`
	DomainName    pulumi.StringOutput                  `pulumi:"domainName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-egressaccesslogs
	EgressAccessLogs PackagingGroupLogConfigurationPtrOutput `pulumi:"egressAccessLogs"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-id
	Id pulumi.StringOutput `pulumi:"id"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewPackagingGroup registers a new resource with the given unique name, arguments, and options.
func NewPackagingGroup(ctx *pulumi.Context,
	name string, args *PackagingGroupArgs, opts ...pulumi.ResourceOption) (*PackagingGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Id == nil {
		return nil, errors.New("invalid value for required argument 'Id'")
	}
	var resource PackagingGroup
	err := ctx.RegisterResource("aws-native:mediapackage:PackagingGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPackagingGroup gets an existing PackagingGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPackagingGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PackagingGroupState, opts ...pulumi.ResourceOption) (*PackagingGroup, error) {
	var resource PackagingGroup
	err := ctx.ReadResource("aws-native:mediapackage:PackagingGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PackagingGroup resources.
type packagingGroupState struct {
}

type PackagingGroupState struct {
}

func (PackagingGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*packagingGroupState)(nil)).Elem()
}

type packagingGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-authorization
	Authorization *PackagingGroupAuthorization `pulumi:"authorization"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-egressaccesslogs
	EgressAccessLogs *PackagingGroupLogConfiguration `pulumi:"egressAccessLogs"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-id
	Id string `pulumi:"id"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a PackagingGroup resource.
type PackagingGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-authorization
	Authorization PackagingGroupAuthorizationPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-egressaccesslogs
	EgressAccessLogs PackagingGroupLogConfigurationPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-id
	Id pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-tags
	Tags aws.TagArrayInput
}

func (PackagingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packagingGroupArgs)(nil)).Elem()
}

type PackagingGroupInput interface {
	pulumi.Input

	ToPackagingGroupOutput() PackagingGroupOutput
	ToPackagingGroupOutputWithContext(ctx context.Context) PackagingGroupOutput
}

func (*PackagingGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroup)(nil))
}

func (i *PackagingGroup) ToPackagingGroupOutput() PackagingGroupOutput {
	return i.ToPackagingGroupOutputWithContext(context.Background())
}

func (i *PackagingGroup) ToPackagingGroupOutputWithContext(ctx context.Context) PackagingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupOutput)
}

type PackagingGroupOutput struct{ *pulumi.OutputState }

func (PackagingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroup)(nil))
}

func (o PackagingGroupOutput) ToPackagingGroupOutput() PackagingGroupOutput {
	return o
}

func (o PackagingGroupOutput) ToPackagingGroupOutputWithContext(ctx context.Context) PackagingGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PackagingGroupOutput{})
}
