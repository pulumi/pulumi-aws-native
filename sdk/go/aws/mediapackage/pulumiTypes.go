// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The endpoint URL used to access an Asset using one PackagingConfiguration.
type AssetEgressEndpoint struct {
	// The ID of the PackagingConfiguration being applied to the Asset.
	PackagingConfigurationId string `pulumi:"packagingConfigurationId"`
	// The URL of the parent manifest for the repackaged Asset.
	Url string `pulumi:"url"`
}

// AssetEgressEndpointInput is an input type that accepts AssetEgressEndpointArgs and AssetEgressEndpointOutput values.
// You can construct a concrete instance of `AssetEgressEndpointInput` via:
//
//          AssetEgressEndpointArgs{...}
type AssetEgressEndpointInput interface {
	pulumi.Input

	ToAssetEgressEndpointOutput() AssetEgressEndpointOutput
	ToAssetEgressEndpointOutputWithContext(context.Context) AssetEgressEndpointOutput
}

// The endpoint URL used to access an Asset using one PackagingConfiguration.
type AssetEgressEndpointArgs struct {
	// The ID of the PackagingConfiguration being applied to the Asset.
	PackagingConfigurationId pulumi.StringInput `pulumi:"packagingConfigurationId"`
	// The URL of the parent manifest for the repackaged Asset.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AssetEgressEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetEgressEndpoint)(nil)).Elem()
}

func (i AssetEgressEndpointArgs) ToAssetEgressEndpointOutput() AssetEgressEndpointOutput {
	return i.ToAssetEgressEndpointOutputWithContext(context.Background())
}

func (i AssetEgressEndpointArgs) ToAssetEgressEndpointOutputWithContext(ctx context.Context) AssetEgressEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetEgressEndpointOutput)
}

// AssetEgressEndpointArrayInput is an input type that accepts AssetEgressEndpointArray and AssetEgressEndpointArrayOutput values.
// You can construct a concrete instance of `AssetEgressEndpointArrayInput` via:
//
//          AssetEgressEndpointArray{ AssetEgressEndpointArgs{...} }
type AssetEgressEndpointArrayInput interface {
	pulumi.Input

	ToAssetEgressEndpointArrayOutput() AssetEgressEndpointArrayOutput
	ToAssetEgressEndpointArrayOutputWithContext(context.Context) AssetEgressEndpointArrayOutput
}

type AssetEgressEndpointArray []AssetEgressEndpointInput

func (AssetEgressEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssetEgressEndpoint)(nil)).Elem()
}

func (i AssetEgressEndpointArray) ToAssetEgressEndpointArrayOutput() AssetEgressEndpointArrayOutput {
	return i.ToAssetEgressEndpointArrayOutputWithContext(context.Background())
}

func (i AssetEgressEndpointArray) ToAssetEgressEndpointArrayOutputWithContext(ctx context.Context) AssetEgressEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetEgressEndpointArrayOutput)
}

// The endpoint URL used to access an Asset using one PackagingConfiguration.
type AssetEgressEndpointOutput struct{ *pulumi.OutputState }

func (AssetEgressEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetEgressEndpoint)(nil)).Elem()
}

func (o AssetEgressEndpointOutput) ToAssetEgressEndpointOutput() AssetEgressEndpointOutput {
	return o
}

func (o AssetEgressEndpointOutput) ToAssetEgressEndpointOutputWithContext(ctx context.Context) AssetEgressEndpointOutput {
	return o
}

// The ID of the PackagingConfiguration being applied to the Asset.
func (o AssetEgressEndpointOutput) PackagingConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v AssetEgressEndpoint) string { return v.PackagingConfigurationId }).(pulumi.StringOutput)
}

// The URL of the parent manifest for the repackaged Asset.
func (o AssetEgressEndpointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AssetEgressEndpoint) string { return v.Url }).(pulumi.StringOutput)
}

type AssetEgressEndpointArrayOutput struct{ *pulumi.OutputState }

func (AssetEgressEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssetEgressEndpoint)(nil)).Elem()
}

func (o AssetEgressEndpointArrayOutput) ToAssetEgressEndpointArrayOutput() AssetEgressEndpointArrayOutput {
	return o
}

func (o AssetEgressEndpointArrayOutput) ToAssetEgressEndpointArrayOutputWithContext(ctx context.Context) AssetEgressEndpointArrayOutput {
	return o
}

func (o AssetEgressEndpointArrayOutput) Index(i pulumi.IntInput) AssetEgressEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssetEgressEndpoint {
		return vs[0].([]AssetEgressEndpoint)[vs[1].(int)]
	}).(AssetEgressEndpointOutput)
}

type AssetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AssetTagInput is an input type that accepts AssetTagArgs and AssetTagOutput values.
// You can construct a concrete instance of `AssetTagInput` via:
//
//          AssetTagArgs{...}
type AssetTagInput interface {
	pulumi.Input

	ToAssetTagOutput() AssetTagOutput
	ToAssetTagOutputWithContext(context.Context) AssetTagOutput
}

type AssetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AssetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetTag)(nil)).Elem()
}

func (i AssetTagArgs) ToAssetTagOutput() AssetTagOutput {
	return i.ToAssetTagOutputWithContext(context.Background())
}

func (i AssetTagArgs) ToAssetTagOutputWithContext(ctx context.Context) AssetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetTagOutput)
}

// AssetTagArrayInput is an input type that accepts AssetTagArray and AssetTagArrayOutput values.
// You can construct a concrete instance of `AssetTagArrayInput` via:
//
//          AssetTagArray{ AssetTagArgs{...} }
type AssetTagArrayInput interface {
	pulumi.Input

	ToAssetTagArrayOutput() AssetTagArrayOutput
	ToAssetTagArrayOutputWithContext(context.Context) AssetTagArrayOutput
}

type AssetTagArray []AssetTagInput

func (AssetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssetTag)(nil)).Elem()
}

func (i AssetTagArray) ToAssetTagArrayOutput() AssetTagArrayOutput {
	return i.ToAssetTagArrayOutputWithContext(context.Background())
}

func (i AssetTagArray) ToAssetTagArrayOutputWithContext(ctx context.Context) AssetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetTagArrayOutput)
}

type AssetTagOutput struct{ *pulumi.OutputState }

func (AssetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetTag)(nil)).Elem()
}

func (o AssetTagOutput) ToAssetTagOutput() AssetTagOutput {
	return o
}

func (o AssetTagOutput) ToAssetTagOutputWithContext(ctx context.Context) AssetTagOutput {
	return o
}

func (o AssetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AssetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AssetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AssetTag) string { return v.Value }).(pulumi.StringOutput)
}

type AssetTagArrayOutput struct{ *pulumi.OutputState }

func (AssetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssetTag)(nil)).Elem()
}

func (o AssetTagArrayOutput) ToAssetTagArrayOutput() AssetTagArrayOutput {
	return o
}

func (o AssetTagArrayOutput) ToAssetTagArrayOutputWithContext(ctx context.Context) AssetTagArrayOutput {
	return o
}

func (o AssetTagArrayOutput) Index(i pulumi.IntInput) AssetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssetTag {
		return vs[0].([]AssetTag)[vs[1].(int)]
	}).(AssetTagOutput)
}

// An HTTP Live Streaming (HLS) ingest resource configuration.
type ChannelHlsIngest struct {
	// A list of endpoints to which the source stream should be sent.
	IngestEndpoints []ChannelIngestEndpoint `pulumi:"ingestEndpoints"`
}

// ChannelHlsIngestInput is an input type that accepts ChannelHlsIngestArgs and ChannelHlsIngestOutput values.
// You can construct a concrete instance of `ChannelHlsIngestInput` via:
//
//          ChannelHlsIngestArgs{...}
type ChannelHlsIngestInput interface {
	pulumi.Input

	ToChannelHlsIngestOutput() ChannelHlsIngestOutput
	ToChannelHlsIngestOutputWithContext(context.Context) ChannelHlsIngestOutput
}

// An HTTP Live Streaming (HLS) ingest resource configuration.
type ChannelHlsIngestArgs struct {
	// A list of endpoints to which the source stream should be sent.
	IngestEndpoints ChannelIngestEndpointArrayInput `pulumi:"ingestEndpoints"`
}

func (ChannelHlsIngestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsIngest)(nil)).Elem()
}

func (i ChannelHlsIngestArgs) ToChannelHlsIngestOutput() ChannelHlsIngestOutput {
	return i.ToChannelHlsIngestOutputWithContext(context.Background())
}

func (i ChannelHlsIngestArgs) ToChannelHlsIngestOutputWithContext(ctx context.Context) ChannelHlsIngestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsIngestOutput)
}

func (i ChannelHlsIngestArgs) ToChannelHlsIngestPtrOutput() ChannelHlsIngestPtrOutput {
	return i.ToChannelHlsIngestPtrOutputWithContext(context.Background())
}

func (i ChannelHlsIngestArgs) ToChannelHlsIngestPtrOutputWithContext(ctx context.Context) ChannelHlsIngestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsIngestOutput).ToChannelHlsIngestPtrOutputWithContext(ctx)
}

// ChannelHlsIngestPtrInput is an input type that accepts ChannelHlsIngestArgs, ChannelHlsIngestPtr and ChannelHlsIngestPtrOutput values.
// You can construct a concrete instance of `ChannelHlsIngestPtrInput` via:
//
//          ChannelHlsIngestArgs{...}
//
//  or:
//
//          nil
type ChannelHlsIngestPtrInput interface {
	pulumi.Input

	ToChannelHlsIngestPtrOutput() ChannelHlsIngestPtrOutput
	ToChannelHlsIngestPtrOutputWithContext(context.Context) ChannelHlsIngestPtrOutput
}

type channelHlsIngestPtrType ChannelHlsIngestArgs

func ChannelHlsIngestPtr(v *ChannelHlsIngestArgs) ChannelHlsIngestPtrInput {
	return (*channelHlsIngestPtrType)(v)
}

func (*channelHlsIngestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsIngest)(nil)).Elem()
}

func (i *channelHlsIngestPtrType) ToChannelHlsIngestPtrOutput() ChannelHlsIngestPtrOutput {
	return i.ToChannelHlsIngestPtrOutputWithContext(context.Background())
}

func (i *channelHlsIngestPtrType) ToChannelHlsIngestPtrOutputWithContext(ctx context.Context) ChannelHlsIngestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsIngestPtrOutput)
}

// An HTTP Live Streaming (HLS) ingest resource configuration.
type ChannelHlsIngestOutput struct{ *pulumi.OutputState }

func (ChannelHlsIngestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsIngest)(nil)).Elem()
}

func (o ChannelHlsIngestOutput) ToChannelHlsIngestOutput() ChannelHlsIngestOutput {
	return o
}

func (o ChannelHlsIngestOutput) ToChannelHlsIngestOutputWithContext(ctx context.Context) ChannelHlsIngestOutput {
	return o
}

func (o ChannelHlsIngestOutput) ToChannelHlsIngestPtrOutput() ChannelHlsIngestPtrOutput {
	return o.ToChannelHlsIngestPtrOutputWithContext(context.Background())
}

func (o ChannelHlsIngestOutput) ToChannelHlsIngestPtrOutputWithContext(ctx context.Context) ChannelHlsIngestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelHlsIngest) *ChannelHlsIngest {
		return &v
	}).(ChannelHlsIngestPtrOutput)
}

// A list of endpoints to which the source stream should be sent.
func (o ChannelHlsIngestOutput) IngestEndpoints() ChannelIngestEndpointArrayOutput {
	return o.ApplyT(func(v ChannelHlsIngest) []ChannelIngestEndpoint { return v.IngestEndpoints }).(ChannelIngestEndpointArrayOutput)
}

type ChannelHlsIngestPtrOutput struct{ *pulumi.OutputState }

func (ChannelHlsIngestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelHlsIngest)(nil)).Elem()
}

func (o ChannelHlsIngestPtrOutput) ToChannelHlsIngestPtrOutput() ChannelHlsIngestPtrOutput {
	return o
}

func (o ChannelHlsIngestPtrOutput) ToChannelHlsIngestPtrOutputWithContext(ctx context.Context) ChannelHlsIngestPtrOutput {
	return o
}

func (o ChannelHlsIngestPtrOutput) Elem() ChannelHlsIngestOutput {
	return o.ApplyT(func(v *ChannelHlsIngest) ChannelHlsIngest {
		if v != nil {
			return *v
		}
		var ret ChannelHlsIngest
		return ret
	}).(ChannelHlsIngestOutput)
}

// A list of endpoints to which the source stream should be sent.
func (o ChannelHlsIngestPtrOutput) IngestEndpoints() ChannelIngestEndpointArrayOutput {
	return o.ApplyT(func(v *ChannelHlsIngest) []ChannelIngestEndpoint {
		if v == nil {
			return nil
		}
		return v.IngestEndpoints
	}).(ChannelIngestEndpointArrayOutput)
}

// An endpoint for ingesting source content for a Channel.
type ChannelIngestEndpoint struct {
	// The system generated unique identifier for the IngestEndpoint
	Id *string `pulumi:"id"`
	// The system generated password for ingest authentication.
	Password *string `pulumi:"password"`
	// The ingest URL to which the source stream should be sent.
	Url *string `pulumi:"url"`
	// The system generated username for ingest authentication.
	Username *string `pulumi:"username"`
}

// ChannelIngestEndpointInput is an input type that accepts ChannelIngestEndpointArgs and ChannelIngestEndpointOutput values.
// You can construct a concrete instance of `ChannelIngestEndpointInput` via:
//
//          ChannelIngestEndpointArgs{...}
type ChannelIngestEndpointInput interface {
	pulumi.Input

	ToChannelIngestEndpointOutput() ChannelIngestEndpointOutput
	ToChannelIngestEndpointOutputWithContext(context.Context) ChannelIngestEndpointOutput
}

// An endpoint for ingesting source content for a Channel.
type ChannelIngestEndpointArgs struct {
	// The system generated unique identifier for the IngestEndpoint
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The system generated password for ingest authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The ingest URL to which the source stream should be sent.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// The system generated username for ingest authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ChannelIngestEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelIngestEndpoint)(nil)).Elem()
}

func (i ChannelIngestEndpointArgs) ToChannelIngestEndpointOutput() ChannelIngestEndpointOutput {
	return i.ToChannelIngestEndpointOutputWithContext(context.Background())
}

func (i ChannelIngestEndpointArgs) ToChannelIngestEndpointOutputWithContext(ctx context.Context) ChannelIngestEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelIngestEndpointOutput)
}

// ChannelIngestEndpointArrayInput is an input type that accepts ChannelIngestEndpointArray and ChannelIngestEndpointArrayOutput values.
// You can construct a concrete instance of `ChannelIngestEndpointArrayInput` via:
//
//          ChannelIngestEndpointArray{ ChannelIngestEndpointArgs{...} }
type ChannelIngestEndpointArrayInput interface {
	pulumi.Input

	ToChannelIngestEndpointArrayOutput() ChannelIngestEndpointArrayOutput
	ToChannelIngestEndpointArrayOutputWithContext(context.Context) ChannelIngestEndpointArrayOutput
}

type ChannelIngestEndpointArray []ChannelIngestEndpointInput

func (ChannelIngestEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelIngestEndpoint)(nil)).Elem()
}

func (i ChannelIngestEndpointArray) ToChannelIngestEndpointArrayOutput() ChannelIngestEndpointArrayOutput {
	return i.ToChannelIngestEndpointArrayOutputWithContext(context.Background())
}

func (i ChannelIngestEndpointArray) ToChannelIngestEndpointArrayOutputWithContext(ctx context.Context) ChannelIngestEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelIngestEndpointArrayOutput)
}

// An endpoint for ingesting source content for a Channel.
type ChannelIngestEndpointOutput struct{ *pulumi.OutputState }

func (ChannelIngestEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelIngestEndpoint)(nil)).Elem()
}

func (o ChannelIngestEndpointOutput) ToChannelIngestEndpointOutput() ChannelIngestEndpointOutput {
	return o
}

func (o ChannelIngestEndpointOutput) ToChannelIngestEndpointOutputWithContext(ctx context.Context) ChannelIngestEndpointOutput {
	return o
}

// The system generated unique identifier for the IngestEndpoint
func (o ChannelIngestEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelIngestEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The system generated password for ingest authentication.
func (o ChannelIngestEndpointOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelIngestEndpoint) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The ingest URL to which the source stream should be sent.
func (o ChannelIngestEndpointOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelIngestEndpoint) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// The system generated username for ingest authentication.
func (o ChannelIngestEndpointOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelIngestEndpoint) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ChannelIngestEndpointArrayOutput struct{ *pulumi.OutputState }

func (ChannelIngestEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelIngestEndpoint)(nil)).Elem()
}

func (o ChannelIngestEndpointArrayOutput) ToChannelIngestEndpointArrayOutput() ChannelIngestEndpointArrayOutput {
	return o
}

func (o ChannelIngestEndpointArrayOutput) ToChannelIngestEndpointArrayOutputWithContext(ctx context.Context) ChannelIngestEndpointArrayOutput {
	return o
}

func (o ChannelIngestEndpointArrayOutput) Index(i pulumi.IntInput) ChannelIngestEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelIngestEndpoint {
		return vs[0].([]ChannelIngestEndpoint)[vs[1].(int)]
	}).(ChannelIngestEndpointOutput)
}

type ChannelLogConfiguration struct {
	// Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
	LogGroupName *string `pulumi:"logGroupName"`
}

// ChannelLogConfigurationInput is an input type that accepts ChannelLogConfigurationArgs and ChannelLogConfigurationOutput values.
// You can construct a concrete instance of `ChannelLogConfigurationInput` via:
//
//          ChannelLogConfigurationArgs{...}
type ChannelLogConfigurationInput interface {
	pulumi.Input

	ToChannelLogConfigurationOutput() ChannelLogConfigurationOutput
	ToChannelLogConfigurationOutputWithContext(context.Context) ChannelLogConfigurationOutput
}

type ChannelLogConfigurationArgs struct {
	// Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
}

func (ChannelLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelLogConfiguration)(nil)).Elem()
}

func (i ChannelLogConfigurationArgs) ToChannelLogConfigurationOutput() ChannelLogConfigurationOutput {
	return i.ToChannelLogConfigurationOutputWithContext(context.Background())
}

func (i ChannelLogConfigurationArgs) ToChannelLogConfigurationOutputWithContext(ctx context.Context) ChannelLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelLogConfigurationOutput)
}

func (i ChannelLogConfigurationArgs) ToChannelLogConfigurationPtrOutput() ChannelLogConfigurationPtrOutput {
	return i.ToChannelLogConfigurationPtrOutputWithContext(context.Background())
}

func (i ChannelLogConfigurationArgs) ToChannelLogConfigurationPtrOutputWithContext(ctx context.Context) ChannelLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelLogConfigurationOutput).ToChannelLogConfigurationPtrOutputWithContext(ctx)
}

// ChannelLogConfigurationPtrInput is an input type that accepts ChannelLogConfigurationArgs, ChannelLogConfigurationPtr and ChannelLogConfigurationPtrOutput values.
// You can construct a concrete instance of `ChannelLogConfigurationPtrInput` via:
//
//          ChannelLogConfigurationArgs{...}
//
//  or:
//
//          nil
type ChannelLogConfigurationPtrInput interface {
	pulumi.Input

	ToChannelLogConfigurationPtrOutput() ChannelLogConfigurationPtrOutput
	ToChannelLogConfigurationPtrOutputWithContext(context.Context) ChannelLogConfigurationPtrOutput
}

type channelLogConfigurationPtrType ChannelLogConfigurationArgs

func ChannelLogConfigurationPtr(v *ChannelLogConfigurationArgs) ChannelLogConfigurationPtrInput {
	return (*channelLogConfigurationPtrType)(v)
}

func (*channelLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelLogConfiguration)(nil)).Elem()
}

func (i *channelLogConfigurationPtrType) ToChannelLogConfigurationPtrOutput() ChannelLogConfigurationPtrOutput {
	return i.ToChannelLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *channelLogConfigurationPtrType) ToChannelLogConfigurationPtrOutputWithContext(ctx context.Context) ChannelLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelLogConfigurationPtrOutput)
}

type ChannelLogConfigurationOutput struct{ *pulumi.OutputState }

func (ChannelLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelLogConfiguration)(nil)).Elem()
}

func (o ChannelLogConfigurationOutput) ToChannelLogConfigurationOutput() ChannelLogConfigurationOutput {
	return o
}

func (o ChannelLogConfigurationOutput) ToChannelLogConfigurationOutputWithContext(ctx context.Context) ChannelLogConfigurationOutput {
	return o
}

func (o ChannelLogConfigurationOutput) ToChannelLogConfigurationPtrOutput() ChannelLogConfigurationPtrOutput {
	return o.ToChannelLogConfigurationPtrOutputWithContext(context.Background())
}

func (o ChannelLogConfigurationOutput) ToChannelLogConfigurationPtrOutputWithContext(ctx context.Context) ChannelLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelLogConfiguration) *ChannelLogConfiguration {
		return &v
	}).(ChannelLogConfigurationPtrOutput)
}

// Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
func (o ChannelLogConfigurationOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelLogConfiguration) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

type ChannelLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ChannelLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelLogConfiguration)(nil)).Elem()
}

func (o ChannelLogConfigurationPtrOutput) ToChannelLogConfigurationPtrOutput() ChannelLogConfigurationPtrOutput {
	return o
}

func (o ChannelLogConfigurationPtrOutput) ToChannelLogConfigurationPtrOutputWithContext(ctx context.Context) ChannelLogConfigurationPtrOutput {
	return o
}

func (o ChannelLogConfigurationPtrOutput) Elem() ChannelLogConfigurationOutput {
	return o.ApplyT(func(v *ChannelLogConfiguration) ChannelLogConfiguration {
		if v != nil {
			return *v
		}
		var ret ChannelLogConfiguration
		return ret
	}).(ChannelLogConfigurationOutput)
}

// Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
func (o ChannelLogConfigurationPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

type ChannelTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ChannelTagInput is an input type that accepts ChannelTagArgs and ChannelTagOutput values.
// You can construct a concrete instance of `ChannelTagInput` via:
//
//          ChannelTagArgs{...}
type ChannelTagInput interface {
	pulumi.Input

	ToChannelTagOutput() ChannelTagOutput
	ToChannelTagOutputWithContext(context.Context) ChannelTagOutput
}

type ChannelTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ChannelTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTag)(nil)).Elem()
}

func (i ChannelTagArgs) ToChannelTagOutput() ChannelTagOutput {
	return i.ToChannelTagOutputWithContext(context.Background())
}

func (i ChannelTagArgs) ToChannelTagOutputWithContext(ctx context.Context) ChannelTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTagOutput)
}

// ChannelTagArrayInput is an input type that accepts ChannelTagArray and ChannelTagArrayOutput values.
// You can construct a concrete instance of `ChannelTagArrayInput` via:
//
//          ChannelTagArray{ ChannelTagArgs{...} }
type ChannelTagArrayInput interface {
	pulumi.Input

	ToChannelTagArrayOutput() ChannelTagArrayOutput
	ToChannelTagArrayOutputWithContext(context.Context) ChannelTagArrayOutput
}

type ChannelTagArray []ChannelTagInput

func (ChannelTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTag)(nil)).Elem()
}

func (i ChannelTagArray) ToChannelTagArrayOutput() ChannelTagArrayOutput {
	return i.ToChannelTagArrayOutputWithContext(context.Background())
}

func (i ChannelTagArray) ToChannelTagArrayOutputWithContext(ctx context.Context) ChannelTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTagArrayOutput)
}

type ChannelTagOutput struct{ *pulumi.OutputState }

func (ChannelTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTag)(nil)).Elem()
}

func (o ChannelTagOutput) ToChannelTagOutput() ChannelTagOutput {
	return o
}

func (o ChannelTagOutput) ToChannelTagOutputWithContext(ctx context.Context) ChannelTagOutput {
	return o
}

func (o ChannelTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ChannelTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTag) string { return v.Value }).(pulumi.StringOutput)
}

type ChannelTagArrayOutput struct{ *pulumi.OutputState }

func (ChannelTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTag)(nil)).Elem()
}

func (o ChannelTagArrayOutput) ToChannelTagArrayOutput() ChannelTagArrayOutput {
	return o
}

func (o ChannelTagArrayOutput) ToChannelTagArrayOutputWithContext(ctx context.Context) ChannelTagArrayOutput {
	return o
}

func (o ChannelTagArrayOutput) Index(i pulumi.IntInput) ChannelTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelTag {
		return vs[0].([]ChannelTag)[vs[1].(int)]
	}).(ChannelTagOutput)
}

// CDN Authorization credentials
type OriginEndpointAuthorization struct {
	// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
	CdnIdentifierSecret string `pulumi:"cdnIdentifierSecret"`
	// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
	SecretsRoleArn string `pulumi:"secretsRoleArn"`
}

// OriginEndpointAuthorizationInput is an input type that accepts OriginEndpointAuthorizationArgs and OriginEndpointAuthorizationOutput values.
// You can construct a concrete instance of `OriginEndpointAuthorizationInput` via:
//
//          OriginEndpointAuthorizationArgs{...}
type OriginEndpointAuthorizationInput interface {
	pulumi.Input

	ToOriginEndpointAuthorizationOutput() OriginEndpointAuthorizationOutput
	ToOriginEndpointAuthorizationOutputWithContext(context.Context) OriginEndpointAuthorizationOutput
}

// CDN Authorization credentials
type OriginEndpointAuthorizationArgs struct {
	// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
	CdnIdentifierSecret pulumi.StringInput `pulumi:"cdnIdentifierSecret"`
	// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
	SecretsRoleArn pulumi.StringInput `pulumi:"secretsRoleArn"`
}

func (OriginEndpointAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointAuthorization)(nil)).Elem()
}

func (i OriginEndpointAuthorizationArgs) ToOriginEndpointAuthorizationOutput() OriginEndpointAuthorizationOutput {
	return i.ToOriginEndpointAuthorizationOutputWithContext(context.Background())
}

func (i OriginEndpointAuthorizationArgs) ToOriginEndpointAuthorizationOutputWithContext(ctx context.Context) OriginEndpointAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointAuthorizationOutput)
}

func (i OriginEndpointAuthorizationArgs) ToOriginEndpointAuthorizationPtrOutput() OriginEndpointAuthorizationPtrOutput {
	return i.ToOriginEndpointAuthorizationPtrOutputWithContext(context.Background())
}

func (i OriginEndpointAuthorizationArgs) ToOriginEndpointAuthorizationPtrOutputWithContext(ctx context.Context) OriginEndpointAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointAuthorizationOutput).ToOriginEndpointAuthorizationPtrOutputWithContext(ctx)
}

// OriginEndpointAuthorizationPtrInput is an input type that accepts OriginEndpointAuthorizationArgs, OriginEndpointAuthorizationPtr and OriginEndpointAuthorizationPtrOutput values.
// You can construct a concrete instance of `OriginEndpointAuthorizationPtrInput` via:
//
//          OriginEndpointAuthorizationArgs{...}
//
//  or:
//
//          nil
type OriginEndpointAuthorizationPtrInput interface {
	pulumi.Input

	ToOriginEndpointAuthorizationPtrOutput() OriginEndpointAuthorizationPtrOutput
	ToOriginEndpointAuthorizationPtrOutputWithContext(context.Context) OriginEndpointAuthorizationPtrOutput
}

type originEndpointAuthorizationPtrType OriginEndpointAuthorizationArgs

func OriginEndpointAuthorizationPtr(v *OriginEndpointAuthorizationArgs) OriginEndpointAuthorizationPtrInput {
	return (*originEndpointAuthorizationPtrType)(v)
}

func (*originEndpointAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointAuthorization)(nil)).Elem()
}

func (i *originEndpointAuthorizationPtrType) ToOriginEndpointAuthorizationPtrOutput() OriginEndpointAuthorizationPtrOutput {
	return i.ToOriginEndpointAuthorizationPtrOutputWithContext(context.Background())
}

func (i *originEndpointAuthorizationPtrType) ToOriginEndpointAuthorizationPtrOutputWithContext(ctx context.Context) OriginEndpointAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointAuthorizationPtrOutput)
}

// CDN Authorization credentials
type OriginEndpointAuthorizationOutput struct{ *pulumi.OutputState }

func (OriginEndpointAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointAuthorization)(nil)).Elem()
}

func (o OriginEndpointAuthorizationOutput) ToOriginEndpointAuthorizationOutput() OriginEndpointAuthorizationOutput {
	return o
}

func (o OriginEndpointAuthorizationOutput) ToOriginEndpointAuthorizationOutputWithContext(ctx context.Context) OriginEndpointAuthorizationOutput {
	return o
}

func (o OriginEndpointAuthorizationOutput) ToOriginEndpointAuthorizationPtrOutput() OriginEndpointAuthorizationPtrOutput {
	return o.ToOriginEndpointAuthorizationPtrOutputWithContext(context.Background())
}

func (o OriginEndpointAuthorizationOutput) ToOriginEndpointAuthorizationPtrOutputWithContext(ctx context.Context) OriginEndpointAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointAuthorization) *OriginEndpointAuthorization {
		return &v
	}).(OriginEndpointAuthorizationPtrOutput)
}

// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
func (o OriginEndpointAuthorizationOutput) CdnIdentifierSecret() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointAuthorization) string { return v.CdnIdentifierSecret }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
func (o OriginEndpointAuthorizationOutput) SecretsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointAuthorization) string { return v.SecretsRoleArn }).(pulumi.StringOutput)
}

type OriginEndpointAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointAuthorization)(nil)).Elem()
}

func (o OriginEndpointAuthorizationPtrOutput) ToOriginEndpointAuthorizationPtrOutput() OriginEndpointAuthorizationPtrOutput {
	return o
}

func (o OriginEndpointAuthorizationPtrOutput) ToOriginEndpointAuthorizationPtrOutputWithContext(ctx context.Context) OriginEndpointAuthorizationPtrOutput {
	return o
}

func (o OriginEndpointAuthorizationPtrOutput) Elem() OriginEndpointAuthorizationOutput {
	return o.ApplyT(func(v *OriginEndpointAuthorization) OriginEndpointAuthorization {
		if v != nil {
			return *v
		}
		var ret OriginEndpointAuthorization
		return ret
	}).(OriginEndpointAuthorizationOutput)
}

// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
func (o OriginEndpointAuthorizationPtrOutput) CdnIdentifierSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointAuthorization) *string {
		if v == nil {
			return nil
		}
		return &v.CdnIdentifierSecret
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
func (o OriginEndpointAuthorizationPtrOutput) SecretsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointAuthorization) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsRoleArn
	}).(pulumi.StringPtrOutput)
}

// A Common Media Application Format (CMAF) encryption configuration.
type OriginEndpointCmafEncryption struct {
	// An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV).
	ConstantInitializationVector *string `pulumi:"constantInitializationVector"`
	// Time (in seconds) between each encryption key rotation.
	KeyRotationIntervalSeconds *int                           `pulumi:"keyRotationIntervalSeconds"`
	SpekeKeyProvider           OriginEndpointSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// OriginEndpointCmafEncryptionInput is an input type that accepts OriginEndpointCmafEncryptionArgs and OriginEndpointCmafEncryptionOutput values.
// You can construct a concrete instance of `OriginEndpointCmafEncryptionInput` via:
//
//          OriginEndpointCmafEncryptionArgs{...}
type OriginEndpointCmafEncryptionInput interface {
	pulumi.Input

	ToOriginEndpointCmafEncryptionOutput() OriginEndpointCmafEncryptionOutput
	ToOriginEndpointCmafEncryptionOutputWithContext(context.Context) OriginEndpointCmafEncryptionOutput
}

// A Common Media Application Format (CMAF) encryption configuration.
type OriginEndpointCmafEncryptionArgs struct {
	// An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV).
	ConstantInitializationVector pulumi.StringPtrInput `pulumi:"constantInitializationVector"`
	// Time (in seconds) between each encryption key rotation.
	KeyRotationIntervalSeconds pulumi.IntPtrInput                  `pulumi:"keyRotationIntervalSeconds"`
	SpekeKeyProvider           OriginEndpointSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (OriginEndpointCmafEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointCmafEncryption)(nil)).Elem()
}

func (i OriginEndpointCmafEncryptionArgs) ToOriginEndpointCmafEncryptionOutput() OriginEndpointCmafEncryptionOutput {
	return i.ToOriginEndpointCmafEncryptionOutputWithContext(context.Background())
}

func (i OriginEndpointCmafEncryptionArgs) ToOriginEndpointCmafEncryptionOutputWithContext(ctx context.Context) OriginEndpointCmafEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointCmafEncryptionOutput)
}

func (i OriginEndpointCmafEncryptionArgs) ToOriginEndpointCmafEncryptionPtrOutput() OriginEndpointCmafEncryptionPtrOutput {
	return i.ToOriginEndpointCmafEncryptionPtrOutputWithContext(context.Background())
}

func (i OriginEndpointCmafEncryptionArgs) ToOriginEndpointCmafEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointCmafEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointCmafEncryptionOutput).ToOriginEndpointCmafEncryptionPtrOutputWithContext(ctx)
}

// OriginEndpointCmafEncryptionPtrInput is an input type that accepts OriginEndpointCmafEncryptionArgs, OriginEndpointCmafEncryptionPtr and OriginEndpointCmafEncryptionPtrOutput values.
// You can construct a concrete instance of `OriginEndpointCmafEncryptionPtrInput` via:
//
//          OriginEndpointCmafEncryptionArgs{...}
//
//  or:
//
//          nil
type OriginEndpointCmafEncryptionPtrInput interface {
	pulumi.Input

	ToOriginEndpointCmafEncryptionPtrOutput() OriginEndpointCmafEncryptionPtrOutput
	ToOriginEndpointCmafEncryptionPtrOutputWithContext(context.Context) OriginEndpointCmafEncryptionPtrOutput
}

type originEndpointCmafEncryptionPtrType OriginEndpointCmafEncryptionArgs

func OriginEndpointCmafEncryptionPtr(v *OriginEndpointCmafEncryptionArgs) OriginEndpointCmafEncryptionPtrInput {
	return (*originEndpointCmafEncryptionPtrType)(v)
}

func (*originEndpointCmafEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointCmafEncryption)(nil)).Elem()
}

func (i *originEndpointCmafEncryptionPtrType) ToOriginEndpointCmafEncryptionPtrOutput() OriginEndpointCmafEncryptionPtrOutput {
	return i.ToOriginEndpointCmafEncryptionPtrOutputWithContext(context.Background())
}

func (i *originEndpointCmafEncryptionPtrType) ToOriginEndpointCmafEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointCmafEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointCmafEncryptionPtrOutput)
}

// A Common Media Application Format (CMAF) encryption configuration.
type OriginEndpointCmafEncryptionOutput struct{ *pulumi.OutputState }

func (OriginEndpointCmafEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointCmafEncryption)(nil)).Elem()
}

func (o OriginEndpointCmafEncryptionOutput) ToOriginEndpointCmafEncryptionOutput() OriginEndpointCmafEncryptionOutput {
	return o
}

func (o OriginEndpointCmafEncryptionOutput) ToOriginEndpointCmafEncryptionOutputWithContext(ctx context.Context) OriginEndpointCmafEncryptionOutput {
	return o
}

func (o OriginEndpointCmafEncryptionOutput) ToOriginEndpointCmafEncryptionPtrOutput() OriginEndpointCmafEncryptionPtrOutput {
	return o.ToOriginEndpointCmafEncryptionPtrOutputWithContext(context.Background())
}

func (o OriginEndpointCmafEncryptionOutput) ToOriginEndpointCmafEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointCmafEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointCmafEncryption) *OriginEndpointCmafEncryption {
		return &v
	}).(OriginEndpointCmafEncryptionPtrOutput)
}

// An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV).
func (o OriginEndpointCmafEncryptionOutput) ConstantInitializationVector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointCmafEncryption) *string { return v.ConstantInitializationVector }).(pulumi.StringPtrOutput)
}

// Time (in seconds) between each encryption key rotation.
func (o OriginEndpointCmafEncryptionOutput) KeyRotationIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointCmafEncryption) *int { return v.KeyRotationIntervalSeconds }).(pulumi.IntPtrOutput)
}

func (o OriginEndpointCmafEncryptionOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderOutput {
	return o.ApplyT(func(v OriginEndpointCmafEncryption) OriginEndpointSpekeKeyProvider { return v.SpekeKeyProvider }).(OriginEndpointSpekeKeyProviderOutput)
}

type OriginEndpointCmafEncryptionPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointCmafEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointCmafEncryption)(nil)).Elem()
}

func (o OriginEndpointCmafEncryptionPtrOutput) ToOriginEndpointCmafEncryptionPtrOutput() OriginEndpointCmafEncryptionPtrOutput {
	return o
}

func (o OriginEndpointCmafEncryptionPtrOutput) ToOriginEndpointCmafEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointCmafEncryptionPtrOutput {
	return o
}

func (o OriginEndpointCmafEncryptionPtrOutput) Elem() OriginEndpointCmafEncryptionOutput {
	return o.ApplyT(func(v *OriginEndpointCmafEncryption) OriginEndpointCmafEncryption {
		if v != nil {
			return *v
		}
		var ret OriginEndpointCmafEncryption
		return ret
	}).(OriginEndpointCmafEncryptionOutput)
}

// An optional 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting blocks. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV).
func (o OriginEndpointCmafEncryptionPtrOutput) ConstantInitializationVector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafEncryption) *string {
		if v == nil {
			return nil
		}
		return v.ConstantInitializationVector
	}).(pulumi.StringPtrOutput)
}

// Time (in seconds) between each encryption key rotation.
func (o OriginEndpointCmafEncryptionPtrOutput) KeyRotationIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafEncryption) *int {
		if v == nil {
			return nil
		}
		return v.KeyRotationIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

func (o OriginEndpointCmafEncryptionPtrOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafEncryption) *OriginEndpointSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(OriginEndpointSpekeKeyProviderPtrOutput)
}

// A Common Media Application Format (CMAF) packaging configuration.
type OriginEndpointCmafPackage struct {
	Encryption *OriginEndpointCmafEncryption `pulumi:"encryption"`
	// A list of HLS manifest configurations
	HlsManifests []OriginEndpointHlsManifest `pulumi:"hlsManifests"`
	// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
	SegmentDurationSeconds *int `pulumi:"segmentDurationSeconds"`
	// An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.
	SegmentPrefix   *string                        `pulumi:"segmentPrefix"`
	StreamSelection *OriginEndpointStreamSelection `pulumi:"streamSelection"`
}

// OriginEndpointCmafPackageInput is an input type that accepts OriginEndpointCmafPackageArgs and OriginEndpointCmafPackageOutput values.
// You can construct a concrete instance of `OriginEndpointCmafPackageInput` via:
//
//          OriginEndpointCmafPackageArgs{...}
type OriginEndpointCmafPackageInput interface {
	pulumi.Input

	ToOriginEndpointCmafPackageOutput() OriginEndpointCmafPackageOutput
	ToOriginEndpointCmafPackageOutputWithContext(context.Context) OriginEndpointCmafPackageOutput
}

// A Common Media Application Format (CMAF) packaging configuration.
type OriginEndpointCmafPackageArgs struct {
	Encryption OriginEndpointCmafEncryptionPtrInput `pulumi:"encryption"`
	// A list of HLS manifest configurations
	HlsManifests OriginEndpointHlsManifestArrayInput `pulumi:"hlsManifests"`
	// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
	SegmentDurationSeconds pulumi.IntPtrInput `pulumi:"segmentDurationSeconds"`
	// An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.
	SegmentPrefix   pulumi.StringPtrInput                 `pulumi:"segmentPrefix"`
	StreamSelection OriginEndpointStreamSelectionPtrInput `pulumi:"streamSelection"`
}

func (OriginEndpointCmafPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointCmafPackage)(nil)).Elem()
}

func (i OriginEndpointCmafPackageArgs) ToOriginEndpointCmafPackageOutput() OriginEndpointCmafPackageOutput {
	return i.ToOriginEndpointCmafPackageOutputWithContext(context.Background())
}

func (i OriginEndpointCmafPackageArgs) ToOriginEndpointCmafPackageOutputWithContext(ctx context.Context) OriginEndpointCmafPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointCmafPackageOutput)
}

func (i OriginEndpointCmafPackageArgs) ToOriginEndpointCmafPackagePtrOutput() OriginEndpointCmafPackagePtrOutput {
	return i.ToOriginEndpointCmafPackagePtrOutputWithContext(context.Background())
}

func (i OriginEndpointCmafPackageArgs) ToOriginEndpointCmafPackagePtrOutputWithContext(ctx context.Context) OriginEndpointCmafPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointCmafPackageOutput).ToOriginEndpointCmafPackagePtrOutputWithContext(ctx)
}

// OriginEndpointCmafPackagePtrInput is an input type that accepts OriginEndpointCmafPackageArgs, OriginEndpointCmafPackagePtr and OriginEndpointCmafPackagePtrOutput values.
// You can construct a concrete instance of `OriginEndpointCmafPackagePtrInput` via:
//
//          OriginEndpointCmafPackageArgs{...}
//
//  or:
//
//          nil
type OriginEndpointCmafPackagePtrInput interface {
	pulumi.Input

	ToOriginEndpointCmafPackagePtrOutput() OriginEndpointCmafPackagePtrOutput
	ToOriginEndpointCmafPackagePtrOutputWithContext(context.Context) OriginEndpointCmafPackagePtrOutput
}

type originEndpointCmafPackagePtrType OriginEndpointCmafPackageArgs

func OriginEndpointCmafPackagePtr(v *OriginEndpointCmafPackageArgs) OriginEndpointCmafPackagePtrInput {
	return (*originEndpointCmafPackagePtrType)(v)
}

func (*originEndpointCmafPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointCmafPackage)(nil)).Elem()
}

func (i *originEndpointCmafPackagePtrType) ToOriginEndpointCmafPackagePtrOutput() OriginEndpointCmafPackagePtrOutput {
	return i.ToOriginEndpointCmafPackagePtrOutputWithContext(context.Background())
}

func (i *originEndpointCmafPackagePtrType) ToOriginEndpointCmafPackagePtrOutputWithContext(ctx context.Context) OriginEndpointCmafPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointCmafPackagePtrOutput)
}

// A Common Media Application Format (CMAF) packaging configuration.
type OriginEndpointCmafPackageOutput struct{ *pulumi.OutputState }

func (OriginEndpointCmafPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointCmafPackage)(nil)).Elem()
}

func (o OriginEndpointCmafPackageOutput) ToOriginEndpointCmafPackageOutput() OriginEndpointCmafPackageOutput {
	return o
}

func (o OriginEndpointCmafPackageOutput) ToOriginEndpointCmafPackageOutputWithContext(ctx context.Context) OriginEndpointCmafPackageOutput {
	return o
}

func (o OriginEndpointCmafPackageOutput) ToOriginEndpointCmafPackagePtrOutput() OriginEndpointCmafPackagePtrOutput {
	return o.ToOriginEndpointCmafPackagePtrOutputWithContext(context.Background())
}

func (o OriginEndpointCmafPackageOutput) ToOriginEndpointCmafPackagePtrOutputWithContext(ctx context.Context) OriginEndpointCmafPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointCmafPackage) *OriginEndpointCmafPackage {
		return &v
	}).(OriginEndpointCmafPackagePtrOutput)
}

func (o OriginEndpointCmafPackageOutput) Encryption() OriginEndpointCmafEncryptionPtrOutput {
	return o.ApplyT(func(v OriginEndpointCmafPackage) *OriginEndpointCmafEncryption { return v.Encryption }).(OriginEndpointCmafEncryptionPtrOutput)
}

// A list of HLS manifest configurations
func (o OriginEndpointCmafPackageOutput) HlsManifests() OriginEndpointHlsManifestArrayOutput {
	return o.ApplyT(func(v OriginEndpointCmafPackage) []OriginEndpointHlsManifest { return v.HlsManifests }).(OriginEndpointHlsManifestArrayOutput)
}

// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
func (o OriginEndpointCmafPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointCmafPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

// An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.
func (o OriginEndpointCmafPackageOutput) SegmentPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointCmafPackage) *string { return v.SegmentPrefix }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointCmafPackageOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v OriginEndpointCmafPackage) *OriginEndpointStreamSelection { return v.StreamSelection }).(OriginEndpointStreamSelectionPtrOutput)
}

type OriginEndpointCmafPackagePtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointCmafPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointCmafPackage)(nil)).Elem()
}

func (o OriginEndpointCmafPackagePtrOutput) ToOriginEndpointCmafPackagePtrOutput() OriginEndpointCmafPackagePtrOutput {
	return o
}

func (o OriginEndpointCmafPackagePtrOutput) ToOriginEndpointCmafPackagePtrOutputWithContext(ctx context.Context) OriginEndpointCmafPackagePtrOutput {
	return o
}

func (o OriginEndpointCmafPackagePtrOutput) Elem() OriginEndpointCmafPackageOutput {
	return o.ApplyT(func(v *OriginEndpointCmafPackage) OriginEndpointCmafPackage {
		if v != nil {
			return *v
		}
		var ret OriginEndpointCmafPackage
		return ret
	}).(OriginEndpointCmafPackageOutput)
}

func (o OriginEndpointCmafPackagePtrOutput) Encryption() OriginEndpointCmafEncryptionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafPackage) *OriginEndpointCmafEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(OriginEndpointCmafEncryptionPtrOutput)
}

// A list of HLS manifest configurations
func (o OriginEndpointCmafPackagePtrOutput) HlsManifests() OriginEndpointHlsManifestArrayOutput {
	return o.ApplyT(func(v *OriginEndpointCmafPackage) []OriginEndpointHlsManifest {
		if v == nil {
			return nil
		}
		return v.HlsManifests
	}).(OriginEndpointHlsManifestArrayOutput)
}

// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
func (o OriginEndpointCmafPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

// An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.
func (o OriginEndpointCmafPackagePtrOutput) SegmentPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafPackage) *string {
		if v == nil {
			return nil
		}
		return v.SegmentPrefix
	}).(pulumi.StringPtrOutput)
}

func (o OriginEndpointCmafPackagePtrOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointCmafPackage) *OriginEndpointStreamSelection {
		if v == nil {
			return nil
		}
		return v.StreamSelection
	}).(OriginEndpointStreamSelectionPtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
type OriginEndpointDashEncryption struct {
	// Time (in seconds) between each encryption key rotation.
	KeyRotationIntervalSeconds *int                           `pulumi:"keyRotationIntervalSeconds"`
	SpekeKeyProvider           OriginEndpointSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// OriginEndpointDashEncryptionInput is an input type that accepts OriginEndpointDashEncryptionArgs and OriginEndpointDashEncryptionOutput values.
// You can construct a concrete instance of `OriginEndpointDashEncryptionInput` via:
//
//          OriginEndpointDashEncryptionArgs{...}
type OriginEndpointDashEncryptionInput interface {
	pulumi.Input

	ToOriginEndpointDashEncryptionOutput() OriginEndpointDashEncryptionOutput
	ToOriginEndpointDashEncryptionOutputWithContext(context.Context) OriginEndpointDashEncryptionOutput
}

// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
type OriginEndpointDashEncryptionArgs struct {
	// Time (in seconds) between each encryption key rotation.
	KeyRotationIntervalSeconds pulumi.IntPtrInput                  `pulumi:"keyRotationIntervalSeconds"`
	SpekeKeyProvider           OriginEndpointSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (OriginEndpointDashEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointDashEncryption)(nil)).Elem()
}

func (i OriginEndpointDashEncryptionArgs) ToOriginEndpointDashEncryptionOutput() OriginEndpointDashEncryptionOutput {
	return i.ToOriginEndpointDashEncryptionOutputWithContext(context.Background())
}

func (i OriginEndpointDashEncryptionArgs) ToOriginEndpointDashEncryptionOutputWithContext(ctx context.Context) OriginEndpointDashEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointDashEncryptionOutput)
}

func (i OriginEndpointDashEncryptionArgs) ToOriginEndpointDashEncryptionPtrOutput() OriginEndpointDashEncryptionPtrOutput {
	return i.ToOriginEndpointDashEncryptionPtrOutputWithContext(context.Background())
}

func (i OriginEndpointDashEncryptionArgs) ToOriginEndpointDashEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointDashEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointDashEncryptionOutput).ToOriginEndpointDashEncryptionPtrOutputWithContext(ctx)
}

// OriginEndpointDashEncryptionPtrInput is an input type that accepts OriginEndpointDashEncryptionArgs, OriginEndpointDashEncryptionPtr and OriginEndpointDashEncryptionPtrOutput values.
// You can construct a concrete instance of `OriginEndpointDashEncryptionPtrInput` via:
//
//          OriginEndpointDashEncryptionArgs{...}
//
//  or:
//
//          nil
type OriginEndpointDashEncryptionPtrInput interface {
	pulumi.Input

	ToOriginEndpointDashEncryptionPtrOutput() OriginEndpointDashEncryptionPtrOutput
	ToOriginEndpointDashEncryptionPtrOutputWithContext(context.Context) OriginEndpointDashEncryptionPtrOutput
}

type originEndpointDashEncryptionPtrType OriginEndpointDashEncryptionArgs

func OriginEndpointDashEncryptionPtr(v *OriginEndpointDashEncryptionArgs) OriginEndpointDashEncryptionPtrInput {
	return (*originEndpointDashEncryptionPtrType)(v)
}

func (*originEndpointDashEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointDashEncryption)(nil)).Elem()
}

func (i *originEndpointDashEncryptionPtrType) ToOriginEndpointDashEncryptionPtrOutput() OriginEndpointDashEncryptionPtrOutput {
	return i.ToOriginEndpointDashEncryptionPtrOutputWithContext(context.Background())
}

func (i *originEndpointDashEncryptionPtrType) ToOriginEndpointDashEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointDashEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointDashEncryptionPtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
type OriginEndpointDashEncryptionOutput struct{ *pulumi.OutputState }

func (OriginEndpointDashEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointDashEncryption)(nil)).Elem()
}

func (o OriginEndpointDashEncryptionOutput) ToOriginEndpointDashEncryptionOutput() OriginEndpointDashEncryptionOutput {
	return o
}

func (o OriginEndpointDashEncryptionOutput) ToOriginEndpointDashEncryptionOutputWithContext(ctx context.Context) OriginEndpointDashEncryptionOutput {
	return o
}

func (o OriginEndpointDashEncryptionOutput) ToOriginEndpointDashEncryptionPtrOutput() OriginEndpointDashEncryptionPtrOutput {
	return o.ToOriginEndpointDashEncryptionPtrOutputWithContext(context.Background())
}

func (o OriginEndpointDashEncryptionOutput) ToOriginEndpointDashEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointDashEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointDashEncryption) *OriginEndpointDashEncryption {
		return &v
	}).(OriginEndpointDashEncryptionPtrOutput)
}

// Time (in seconds) between each encryption key rotation.
func (o OriginEndpointDashEncryptionOutput) KeyRotationIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashEncryption) *int { return v.KeyRotationIntervalSeconds }).(pulumi.IntPtrOutput)
}

func (o OriginEndpointDashEncryptionOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderOutput {
	return o.ApplyT(func(v OriginEndpointDashEncryption) OriginEndpointSpekeKeyProvider { return v.SpekeKeyProvider }).(OriginEndpointSpekeKeyProviderOutput)
}

type OriginEndpointDashEncryptionPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointDashEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointDashEncryption)(nil)).Elem()
}

func (o OriginEndpointDashEncryptionPtrOutput) ToOriginEndpointDashEncryptionPtrOutput() OriginEndpointDashEncryptionPtrOutput {
	return o
}

func (o OriginEndpointDashEncryptionPtrOutput) ToOriginEndpointDashEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointDashEncryptionPtrOutput {
	return o
}

func (o OriginEndpointDashEncryptionPtrOutput) Elem() OriginEndpointDashEncryptionOutput {
	return o.ApplyT(func(v *OriginEndpointDashEncryption) OriginEndpointDashEncryption {
		if v != nil {
			return *v
		}
		var ret OriginEndpointDashEncryption
		return ret
	}).(OriginEndpointDashEncryptionOutput)
}

// Time (in seconds) between each encryption key rotation.
func (o OriginEndpointDashEncryptionPtrOutput) KeyRotationIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashEncryption) *int {
		if v == nil {
			return nil
		}
		return v.KeyRotationIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

func (o OriginEndpointDashEncryptionPtrOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashEncryption) *OriginEndpointSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(OriginEndpointSpekeKeyProviderPtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
type OriginEndpointDashPackage struct {
	// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
	AdTriggers                []string                      `pulumi:"adTriggers"`
	AdsOnDeliveryRestrictions *string                       `pulumi:"adsOnDeliveryRestrictions"`
	Encryption                *OriginEndpointDashEncryption `pulumi:"encryption"`
	// Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
	ManifestLayout *string `pulumi:"manifestLayout"`
	// Time window (in seconds) contained in each manifest.
	ManifestWindowSeconds *int `pulumi:"manifestWindowSeconds"`
	// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
	MinBufferTimeSeconds *int `pulumi:"minBufferTimeSeconds"`
	// Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
	MinUpdatePeriodSeconds *int `pulumi:"minUpdatePeriodSeconds"`
	// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Channel source contains SCTE-35 ad markers.
	PeriodTriggers []string `pulumi:"periodTriggers"`
	// The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
	Profile *string `pulumi:"profile"`
	// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
	SegmentDurationSeconds *int `pulumi:"segmentDurationSeconds"`
	// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
	SegmentTemplateFormat *string                        `pulumi:"segmentTemplateFormat"`
	StreamSelection       *OriginEndpointStreamSelection `pulumi:"streamSelection"`
	// Duration (in seconds) to delay live content before presentation.
	SuggestedPresentationDelaySeconds *int `pulumi:"suggestedPresentationDelaySeconds"`
	// Determines the type of UTCTiming included in the Media Presentation Description (MPD)
	UtcTiming *string `pulumi:"utcTiming"`
	// Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
	UtcTimingUri *string `pulumi:"utcTimingUri"`
}

// OriginEndpointDashPackageInput is an input type that accepts OriginEndpointDashPackageArgs and OriginEndpointDashPackageOutput values.
// You can construct a concrete instance of `OriginEndpointDashPackageInput` via:
//
//          OriginEndpointDashPackageArgs{...}
type OriginEndpointDashPackageInput interface {
	pulumi.Input

	ToOriginEndpointDashPackageOutput() OriginEndpointDashPackageOutput
	ToOriginEndpointDashPackageOutputWithContext(context.Context) OriginEndpointDashPackageOutput
}

// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
type OriginEndpointDashPackageArgs struct {
	// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
	AdTriggers                pulumi.StringArrayInput              `pulumi:"adTriggers"`
	AdsOnDeliveryRestrictions pulumi.StringPtrInput                `pulumi:"adsOnDeliveryRestrictions"`
	Encryption                OriginEndpointDashEncryptionPtrInput `pulumi:"encryption"`
	// Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
	ManifestLayout pulumi.StringPtrInput `pulumi:"manifestLayout"`
	// Time window (in seconds) contained in each manifest.
	ManifestWindowSeconds pulumi.IntPtrInput `pulumi:"manifestWindowSeconds"`
	// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
	MinBufferTimeSeconds pulumi.IntPtrInput `pulumi:"minBufferTimeSeconds"`
	// Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
	MinUpdatePeriodSeconds pulumi.IntPtrInput `pulumi:"minUpdatePeriodSeconds"`
	// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Channel source contains SCTE-35 ad markers.
	PeriodTriggers pulumi.StringArrayInput `pulumi:"periodTriggers"`
	// The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
	Profile pulumi.StringPtrInput `pulumi:"profile"`
	// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
	SegmentDurationSeconds pulumi.IntPtrInput `pulumi:"segmentDurationSeconds"`
	// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
	SegmentTemplateFormat pulumi.StringPtrInput                 `pulumi:"segmentTemplateFormat"`
	StreamSelection       OriginEndpointStreamSelectionPtrInput `pulumi:"streamSelection"`
	// Duration (in seconds) to delay live content before presentation.
	SuggestedPresentationDelaySeconds pulumi.IntPtrInput `pulumi:"suggestedPresentationDelaySeconds"`
	// Determines the type of UTCTiming included in the Media Presentation Description (MPD)
	UtcTiming pulumi.StringPtrInput `pulumi:"utcTiming"`
	// Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
	UtcTimingUri pulumi.StringPtrInput `pulumi:"utcTimingUri"`
}

func (OriginEndpointDashPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointDashPackage)(nil)).Elem()
}

func (i OriginEndpointDashPackageArgs) ToOriginEndpointDashPackageOutput() OriginEndpointDashPackageOutput {
	return i.ToOriginEndpointDashPackageOutputWithContext(context.Background())
}

func (i OriginEndpointDashPackageArgs) ToOriginEndpointDashPackageOutputWithContext(ctx context.Context) OriginEndpointDashPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointDashPackageOutput)
}

func (i OriginEndpointDashPackageArgs) ToOriginEndpointDashPackagePtrOutput() OriginEndpointDashPackagePtrOutput {
	return i.ToOriginEndpointDashPackagePtrOutputWithContext(context.Background())
}

func (i OriginEndpointDashPackageArgs) ToOriginEndpointDashPackagePtrOutputWithContext(ctx context.Context) OriginEndpointDashPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointDashPackageOutput).ToOriginEndpointDashPackagePtrOutputWithContext(ctx)
}

// OriginEndpointDashPackagePtrInput is an input type that accepts OriginEndpointDashPackageArgs, OriginEndpointDashPackagePtr and OriginEndpointDashPackagePtrOutput values.
// You can construct a concrete instance of `OriginEndpointDashPackagePtrInput` via:
//
//          OriginEndpointDashPackageArgs{...}
//
//  or:
//
//          nil
type OriginEndpointDashPackagePtrInput interface {
	pulumi.Input

	ToOriginEndpointDashPackagePtrOutput() OriginEndpointDashPackagePtrOutput
	ToOriginEndpointDashPackagePtrOutputWithContext(context.Context) OriginEndpointDashPackagePtrOutput
}

type originEndpointDashPackagePtrType OriginEndpointDashPackageArgs

func OriginEndpointDashPackagePtr(v *OriginEndpointDashPackageArgs) OriginEndpointDashPackagePtrInput {
	return (*originEndpointDashPackagePtrType)(v)
}

func (*originEndpointDashPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointDashPackage)(nil)).Elem()
}

func (i *originEndpointDashPackagePtrType) ToOriginEndpointDashPackagePtrOutput() OriginEndpointDashPackagePtrOutput {
	return i.ToOriginEndpointDashPackagePtrOutputWithContext(context.Background())
}

func (i *originEndpointDashPackagePtrType) ToOriginEndpointDashPackagePtrOutputWithContext(ctx context.Context) OriginEndpointDashPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointDashPackagePtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
type OriginEndpointDashPackageOutput struct{ *pulumi.OutputState }

func (OriginEndpointDashPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointDashPackage)(nil)).Elem()
}

func (o OriginEndpointDashPackageOutput) ToOriginEndpointDashPackageOutput() OriginEndpointDashPackageOutput {
	return o
}

func (o OriginEndpointDashPackageOutput) ToOriginEndpointDashPackageOutputWithContext(ctx context.Context) OriginEndpointDashPackageOutput {
	return o
}

func (o OriginEndpointDashPackageOutput) ToOriginEndpointDashPackagePtrOutput() OriginEndpointDashPackagePtrOutput {
	return o.ToOriginEndpointDashPackagePtrOutputWithContext(context.Background())
}

func (o OriginEndpointDashPackageOutput) ToOriginEndpointDashPackagePtrOutputWithContext(ctx context.Context) OriginEndpointDashPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointDashPackage) *OriginEndpointDashPackage {
		return &v
	}).(OriginEndpointDashPackagePtrOutput)
}

// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
func (o OriginEndpointDashPackageOutput) AdTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) []string { return v.AdTriggers }).(pulumi.StringArrayOutput)
}

func (o OriginEndpointDashPackageOutput) AdsOnDeliveryRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *string { return v.AdsOnDeliveryRestrictions }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointDashPackageOutput) Encryption() OriginEndpointDashEncryptionPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *OriginEndpointDashEncryption { return v.Encryption }).(OriginEndpointDashEncryptionPtrOutput)
}

// Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
func (o OriginEndpointDashPackageOutput) ManifestLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *string { return v.ManifestLayout }).(pulumi.StringPtrOutput)
}

// Time window (in seconds) contained in each manifest.
func (o OriginEndpointDashPackageOutput) ManifestWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *int { return v.ManifestWindowSeconds }).(pulumi.IntPtrOutput)
}

// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
func (o OriginEndpointDashPackageOutput) MinBufferTimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *int { return v.MinBufferTimeSeconds }).(pulumi.IntPtrOutput)
}

// Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
func (o OriginEndpointDashPackageOutput) MinUpdatePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *int { return v.MinUpdatePeriodSeconds }).(pulumi.IntPtrOutput)
}

// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Channel source contains SCTE-35 ad markers.
func (o OriginEndpointDashPackageOutput) PeriodTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) []string { return v.PeriodTriggers }).(pulumi.StringArrayOutput)
}

// The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
func (o OriginEndpointDashPackageOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
func (o OriginEndpointDashPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
func (o OriginEndpointDashPackageOutput) SegmentTemplateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *string { return v.SegmentTemplateFormat }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointDashPackageOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *OriginEndpointStreamSelection { return v.StreamSelection }).(OriginEndpointStreamSelectionPtrOutput)
}

// Duration (in seconds) to delay live content before presentation.
func (o OriginEndpointDashPackageOutput) SuggestedPresentationDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *int { return v.SuggestedPresentationDelaySeconds }).(pulumi.IntPtrOutput)
}

// Determines the type of UTCTiming included in the Media Presentation Description (MPD)
func (o OriginEndpointDashPackageOutput) UtcTiming() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *string { return v.UtcTiming }).(pulumi.StringPtrOutput)
}

// Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
func (o OriginEndpointDashPackageOutput) UtcTimingUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointDashPackage) *string { return v.UtcTimingUri }).(pulumi.StringPtrOutput)
}

type OriginEndpointDashPackagePtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointDashPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointDashPackage)(nil)).Elem()
}

func (o OriginEndpointDashPackagePtrOutput) ToOriginEndpointDashPackagePtrOutput() OriginEndpointDashPackagePtrOutput {
	return o
}

func (o OriginEndpointDashPackagePtrOutput) ToOriginEndpointDashPackagePtrOutputWithContext(ctx context.Context) OriginEndpointDashPackagePtrOutput {
	return o
}

func (o OriginEndpointDashPackagePtrOutput) Elem() OriginEndpointDashPackageOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) OriginEndpointDashPackage {
		if v != nil {
			return *v
		}
		var ret OriginEndpointDashPackage
		return ret
	}).(OriginEndpointDashPackageOutput)
}

// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
func (o OriginEndpointDashPackagePtrOutput) AdTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) []string {
		if v == nil {
			return nil
		}
		return v.AdTriggers
	}).(pulumi.StringArrayOutput)
}

func (o OriginEndpointDashPackagePtrOutput) AdsOnDeliveryRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.AdsOnDeliveryRestrictions
	}).(pulumi.StringPtrOutput)
}

func (o OriginEndpointDashPackagePtrOutput) Encryption() OriginEndpointDashEncryptionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *OriginEndpointDashEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(OriginEndpointDashEncryptionPtrOutput)
}

// Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
func (o OriginEndpointDashPackagePtrOutput) ManifestLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.ManifestLayout
	}).(pulumi.StringPtrOutput)
}

// Time window (in seconds) contained in each manifest.
func (o OriginEndpointDashPackagePtrOutput) ManifestWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *int {
		if v == nil {
			return nil
		}
		return v.ManifestWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
func (o OriginEndpointDashPackagePtrOutput) MinBufferTimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *int {
		if v == nil {
			return nil
		}
		return v.MinBufferTimeSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
func (o OriginEndpointDashPackagePtrOutput) MinUpdatePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *int {
		if v == nil {
			return nil
		}
		return v.MinUpdatePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Channel source contains SCTE-35 ad markers.
func (o OriginEndpointDashPackagePtrOutput) PeriodTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) []string {
		if v == nil {
			return nil
		}
		return v.PeriodTriggers
	}).(pulumi.StringArrayOutput)
}

// The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
func (o OriginEndpointDashPackagePtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
func (o OriginEndpointDashPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
func (o OriginEndpointDashPackagePtrOutput) SegmentTemplateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.SegmentTemplateFormat
	}).(pulumi.StringPtrOutput)
}

func (o OriginEndpointDashPackagePtrOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *OriginEndpointStreamSelection {
		if v == nil {
			return nil
		}
		return v.StreamSelection
	}).(OriginEndpointStreamSelectionPtrOutput)
}

// Duration (in seconds) to delay live content before presentation.
func (o OriginEndpointDashPackagePtrOutput) SuggestedPresentationDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *int {
		if v == nil {
			return nil
		}
		return v.SuggestedPresentationDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Determines the type of UTCTiming included in the Media Presentation Description (MPD)
func (o OriginEndpointDashPackagePtrOutput) UtcTiming() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.UtcTiming
	}).(pulumi.StringPtrOutput)
}

// Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
func (o OriginEndpointDashPackagePtrOutput) UtcTimingUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.UtcTimingUri
	}).(pulumi.StringPtrOutput)
}

// An HTTP Live Streaming (HLS) encryption configuration.
type OriginEndpointHlsEncryption struct {
	// A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
	ConstantInitializationVector *string `pulumi:"constantInitializationVector"`
	// The encryption method to use.
	EncryptionMethod *string `pulumi:"encryptionMethod"`
	// Interval (in seconds) between each encryption key rotation.
	KeyRotationIntervalSeconds *int `pulumi:"keyRotationIntervalSeconds"`
	// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
	RepeatExtXKey    *bool                          `pulumi:"repeatExtXKey"`
	SpekeKeyProvider OriginEndpointSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// OriginEndpointHlsEncryptionInput is an input type that accepts OriginEndpointHlsEncryptionArgs and OriginEndpointHlsEncryptionOutput values.
// You can construct a concrete instance of `OriginEndpointHlsEncryptionInput` via:
//
//          OriginEndpointHlsEncryptionArgs{...}
type OriginEndpointHlsEncryptionInput interface {
	pulumi.Input

	ToOriginEndpointHlsEncryptionOutput() OriginEndpointHlsEncryptionOutput
	ToOriginEndpointHlsEncryptionOutputWithContext(context.Context) OriginEndpointHlsEncryptionOutput
}

// An HTTP Live Streaming (HLS) encryption configuration.
type OriginEndpointHlsEncryptionArgs struct {
	// A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
	ConstantInitializationVector pulumi.StringPtrInput `pulumi:"constantInitializationVector"`
	// The encryption method to use.
	EncryptionMethod pulumi.StringPtrInput `pulumi:"encryptionMethod"`
	// Interval (in seconds) between each encryption key rotation.
	KeyRotationIntervalSeconds pulumi.IntPtrInput `pulumi:"keyRotationIntervalSeconds"`
	// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
	RepeatExtXKey    pulumi.BoolPtrInput                 `pulumi:"repeatExtXKey"`
	SpekeKeyProvider OriginEndpointSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (OriginEndpointHlsEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointHlsEncryption)(nil)).Elem()
}

func (i OriginEndpointHlsEncryptionArgs) ToOriginEndpointHlsEncryptionOutput() OriginEndpointHlsEncryptionOutput {
	return i.ToOriginEndpointHlsEncryptionOutputWithContext(context.Background())
}

func (i OriginEndpointHlsEncryptionArgs) ToOriginEndpointHlsEncryptionOutputWithContext(ctx context.Context) OriginEndpointHlsEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsEncryptionOutput)
}

func (i OriginEndpointHlsEncryptionArgs) ToOriginEndpointHlsEncryptionPtrOutput() OriginEndpointHlsEncryptionPtrOutput {
	return i.ToOriginEndpointHlsEncryptionPtrOutputWithContext(context.Background())
}

func (i OriginEndpointHlsEncryptionArgs) ToOriginEndpointHlsEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointHlsEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsEncryptionOutput).ToOriginEndpointHlsEncryptionPtrOutputWithContext(ctx)
}

// OriginEndpointHlsEncryptionPtrInput is an input type that accepts OriginEndpointHlsEncryptionArgs, OriginEndpointHlsEncryptionPtr and OriginEndpointHlsEncryptionPtrOutput values.
// You can construct a concrete instance of `OriginEndpointHlsEncryptionPtrInput` via:
//
//          OriginEndpointHlsEncryptionArgs{...}
//
//  or:
//
//          nil
type OriginEndpointHlsEncryptionPtrInput interface {
	pulumi.Input

	ToOriginEndpointHlsEncryptionPtrOutput() OriginEndpointHlsEncryptionPtrOutput
	ToOriginEndpointHlsEncryptionPtrOutputWithContext(context.Context) OriginEndpointHlsEncryptionPtrOutput
}

type originEndpointHlsEncryptionPtrType OriginEndpointHlsEncryptionArgs

func OriginEndpointHlsEncryptionPtr(v *OriginEndpointHlsEncryptionArgs) OriginEndpointHlsEncryptionPtrInput {
	return (*originEndpointHlsEncryptionPtrType)(v)
}

func (*originEndpointHlsEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointHlsEncryption)(nil)).Elem()
}

func (i *originEndpointHlsEncryptionPtrType) ToOriginEndpointHlsEncryptionPtrOutput() OriginEndpointHlsEncryptionPtrOutput {
	return i.ToOriginEndpointHlsEncryptionPtrOutputWithContext(context.Background())
}

func (i *originEndpointHlsEncryptionPtrType) ToOriginEndpointHlsEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointHlsEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsEncryptionPtrOutput)
}

// An HTTP Live Streaming (HLS) encryption configuration.
type OriginEndpointHlsEncryptionOutput struct{ *pulumi.OutputState }

func (OriginEndpointHlsEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointHlsEncryption)(nil)).Elem()
}

func (o OriginEndpointHlsEncryptionOutput) ToOriginEndpointHlsEncryptionOutput() OriginEndpointHlsEncryptionOutput {
	return o
}

func (o OriginEndpointHlsEncryptionOutput) ToOriginEndpointHlsEncryptionOutputWithContext(ctx context.Context) OriginEndpointHlsEncryptionOutput {
	return o
}

func (o OriginEndpointHlsEncryptionOutput) ToOriginEndpointHlsEncryptionPtrOutput() OriginEndpointHlsEncryptionPtrOutput {
	return o.ToOriginEndpointHlsEncryptionPtrOutputWithContext(context.Background())
}

func (o OriginEndpointHlsEncryptionOutput) ToOriginEndpointHlsEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointHlsEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointHlsEncryption) *OriginEndpointHlsEncryption {
		return &v
	}).(OriginEndpointHlsEncryptionPtrOutput)
}

// A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
func (o OriginEndpointHlsEncryptionOutput) ConstantInitializationVector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsEncryption) *string { return v.ConstantInitializationVector }).(pulumi.StringPtrOutput)
}

// The encryption method to use.
func (o OriginEndpointHlsEncryptionOutput) EncryptionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsEncryption) *string { return v.EncryptionMethod }).(pulumi.StringPtrOutput)
}

// Interval (in seconds) between each encryption key rotation.
func (o OriginEndpointHlsEncryptionOutput) KeyRotationIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsEncryption) *int { return v.KeyRotationIntervalSeconds }).(pulumi.IntPtrOutput)
}

// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
func (o OriginEndpointHlsEncryptionOutput) RepeatExtXKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsEncryption) *bool { return v.RepeatExtXKey }).(pulumi.BoolPtrOutput)
}

func (o OriginEndpointHlsEncryptionOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderOutput {
	return o.ApplyT(func(v OriginEndpointHlsEncryption) OriginEndpointSpekeKeyProvider { return v.SpekeKeyProvider }).(OriginEndpointSpekeKeyProviderOutput)
}

type OriginEndpointHlsEncryptionPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointHlsEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointHlsEncryption)(nil)).Elem()
}

func (o OriginEndpointHlsEncryptionPtrOutput) ToOriginEndpointHlsEncryptionPtrOutput() OriginEndpointHlsEncryptionPtrOutput {
	return o
}

func (o OriginEndpointHlsEncryptionPtrOutput) ToOriginEndpointHlsEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointHlsEncryptionPtrOutput {
	return o
}

func (o OriginEndpointHlsEncryptionPtrOutput) Elem() OriginEndpointHlsEncryptionOutput {
	return o.ApplyT(func(v *OriginEndpointHlsEncryption) OriginEndpointHlsEncryption {
		if v != nil {
			return *v
		}
		var ret OriginEndpointHlsEncryption
		return ret
	}).(OriginEndpointHlsEncryptionOutput)
}

// A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
func (o OriginEndpointHlsEncryptionPtrOutput) ConstantInitializationVector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsEncryption) *string {
		if v == nil {
			return nil
		}
		return v.ConstantInitializationVector
	}).(pulumi.StringPtrOutput)
}

// The encryption method to use.
func (o OriginEndpointHlsEncryptionPtrOutput) EncryptionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsEncryption) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionMethod
	}).(pulumi.StringPtrOutput)
}

// Interval (in seconds) between each encryption key rotation.
func (o OriginEndpointHlsEncryptionPtrOutput) KeyRotationIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsEncryption) *int {
		if v == nil {
			return nil
		}
		return v.KeyRotationIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
func (o OriginEndpointHlsEncryptionPtrOutput) RepeatExtXKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsEncryption) *bool {
		if v == nil {
			return nil
		}
		return v.RepeatExtXKey
	}).(pulumi.BoolPtrOutput)
}

func (o OriginEndpointHlsEncryptionPtrOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsEncryption) *OriginEndpointSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(OriginEndpointSpekeKeyProviderPtrOutput)
}

// A HTTP Live Streaming (HLS) manifest configuration.
type OriginEndpointHlsManifest struct {
	// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
	AdMarkers *string `pulumi:"adMarkers"`
	// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
	AdTriggers                []string `pulumi:"adTriggers"`
	AdsOnDeliveryRestrictions *string  `pulumi:"adsOnDeliveryRestrictions"`
	// The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
	Id string `pulumi:"id"`
	// When enabled, an I-Frame only stream will be included in the output.
	IncludeIframeOnlyStream *bool `pulumi:"includeIframeOnlyStream"`
	// An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.
	ManifestName *string `pulumi:"manifestName"`
	// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
	PlaylistType *string `pulumi:"playlistType"`
	// Time window (in seconds) contained in each parent manifest.
	PlaylistWindowSeconds *int `pulumi:"playlistWindowSeconds"`
	// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
	ProgramDateTimeIntervalSeconds *int `pulumi:"programDateTimeIntervalSeconds"`
	// The URL of the packaged OriginEndpoint for consumption.
	Url *string `pulumi:"url"`
}

// OriginEndpointHlsManifestInput is an input type that accepts OriginEndpointHlsManifestArgs and OriginEndpointHlsManifestOutput values.
// You can construct a concrete instance of `OriginEndpointHlsManifestInput` via:
//
//          OriginEndpointHlsManifestArgs{...}
type OriginEndpointHlsManifestInput interface {
	pulumi.Input

	ToOriginEndpointHlsManifestOutput() OriginEndpointHlsManifestOutput
	ToOriginEndpointHlsManifestOutputWithContext(context.Context) OriginEndpointHlsManifestOutput
}

// A HTTP Live Streaming (HLS) manifest configuration.
type OriginEndpointHlsManifestArgs struct {
	// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
	AdMarkers pulumi.StringPtrInput `pulumi:"adMarkers"`
	// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
	AdTriggers                pulumi.StringArrayInput `pulumi:"adTriggers"`
	AdsOnDeliveryRestrictions pulumi.StringPtrInput   `pulumi:"adsOnDeliveryRestrictions"`
	// The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
	Id pulumi.StringInput `pulumi:"id"`
	// When enabled, an I-Frame only stream will be included in the output.
	IncludeIframeOnlyStream pulumi.BoolPtrInput `pulumi:"includeIframeOnlyStream"`
	// An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.
	ManifestName pulumi.StringPtrInput `pulumi:"manifestName"`
	// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
	PlaylistType pulumi.StringPtrInput `pulumi:"playlistType"`
	// Time window (in seconds) contained in each parent manifest.
	PlaylistWindowSeconds pulumi.IntPtrInput `pulumi:"playlistWindowSeconds"`
	// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
	ProgramDateTimeIntervalSeconds pulumi.IntPtrInput `pulumi:"programDateTimeIntervalSeconds"`
	// The URL of the packaged OriginEndpoint for consumption.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (OriginEndpointHlsManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointHlsManifest)(nil)).Elem()
}

func (i OriginEndpointHlsManifestArgs) ToOriginEndpointHlsManifestOutput() OriginEndpointHlsManifestOutput {
	return i.ToOriginEndpointHlsManifestOutputWithContext(context.Background())
}

func (i OriginEndpointHlsManifestArgs) ToOriginEndpointHlsManifestOutputWithContext(ctx context.Context) OriginEndpointHlsManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsManifestOutput)
}

// OriginEndpointHlsManifestArrayInput is an input type that accepts OriginEndpointHlsManifestArray and OriginEndpointHlsManifestArrayOutput values.
// You can construct a concrete instance of `OriginEndpointHlsManifestArrayInput` via:
//
//          OriginEndpointHlsManifestArray{ OriginEndpointHlsManifestArgs{...} }
type OriginEndpointHlsManifestArrayInput interface {
	pulumi.Input

	ToOriginEndpointHlsManifestArrayOutput() OriginEndpointHlsManifestArrayOutput
	ToOriginEndpointHlsManifestArrayOutputWithContext(context.Context) OriginEndpointHlsManifestArrayOutput
}

type OriginEndpointHlsManifestArray []OriginEndpointHlsManifestInput

func (OriginEndpointHlsManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginEndpointHlsManifest)(nil)).Elem()
}

func (i OriginEndpointHlsManifestArray) ToOriginEndpointHlsManifestArrayOutput() OriginEndpointHlsManifestArrayOutput {
	return i.ToOriginEndpointHlsManifestArrayOutputWithContext(context.Background())
}

func (i OriginEndpointHlsManifestArray) ToOriginEndpointHlsManifestArrayOutputWithContext(ctx context.Context) OriginEndpointHlsManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsManifestArrayOutput)
}

// A HTTP Live Streaming (HLS) manifest configuration.
type OriginEndpointHlsManifestOutput struct{ *pulumi.OutputState }

func (OriginEndpointHlsManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointHlsManifest)(nil)).Elem()
}

func (o OriginEndpointHlsManifestOutput) ToOriginEndpointHlsManifestOutput() OriginEndpointHlsManifestOutput {
	return o
}

func (o OriginEndpointHlsManifestOutput) ToOriginEndpointHlsManifestOutputWithContext(ctx context.Context) OriginEndpointHlsManifestOutput {
	return o
}

// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
func (o OriginEndpointHlsManifestOutput) AdMarkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *string { return v.AdMarkers }).(pulumi.StringPtrOutput)
}

// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
func (o OriginEndpointHlsManifestOutput) AdTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) []string { return v.AdTriggers }).(pulumi.StringArrayOutput)
}

func (o OriginEndpointHlsManifestOutput) AdsOnDeliveryRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *string { return v.AdsOnDeliveryRestrictions }).(pulumi.StringPtrOutput)
}

// The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
func (o OriginEndpointHlsManifestOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) string { return v.Id }).(pulumi.StringOutput)
}

// When enabled, an I-Frame only stream will be included in the output.
func (o OriginEndpointHlsManifestOutput) IncludeIframeOnlyStream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *bool { return v.IncludeIframeOnlyStream }).(pulumi.BoolPtrOutput)
}

// An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.
func (o OriginEndpointHlsManifestOutput) ManifestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *string { return v.ManifestName }).(pulumi.StringPtrOutput)
}

// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
func (o OriginEndpointHlsManifestOutput) PlaylistType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *string { return v.PlaylistType }).(pulumi.StringPtrOutput)
}

// Time window (in seconds) contained in each parent manifest.
func (o OriginEndpointHlsManifestOutput) PlaylistWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *int { return v.PlaylistWindowSeconds }).(pulumi.IntPtrOutput)
}

// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
func (o OriginEndpointHlsManifestOutput) ProgramDateTimeIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *int { return v.ProgramDateTimeIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The URL of the packaged OriginEndpoint for consumption.
func (o OriginEndpointHlsManifestOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsManifest) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type OriginEndpointHlsManifestArrayOutput struct{ *pulumi.OutputState }

func (OriginEndpointHlsManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginEndpointHlsManifest)(nil)).Elem()
}

func (o OriginEndpointHlsManifestArrayOutput) ToOriginEndpointHlsManifestArrayOutput() OriginEndpointHlsManifestArrayOutput {
	return o
}

func (o OriginEndpointHlsManifestArrayOutput) ToOriginEndpointHlsManifestArrayOutputWithContext(ctx context.Context) OriginEndpointHlsManifestArrayOutput {
	return o
}

func (o OriginEndpointHlsManifestArrayOutput) Index(i pulumi.IntInput) OriginEndpointHlsManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginEndpointHlsManifest {
		return vs[0].([]OriginEndpointHlsManifest)[vs[1].(int)]
	}).(OriginEndpointHlsManifestOutput)
}

// An HTTP Live Streaming (HLS) packaging configuration.
type OriginEndpointHlsPackage struct {
	// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
	AdMarkers *string `pulumi:"adMarkers"`
	// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
	AdTriggers                []string                     `pulumi:"adTriggers"`
	AdsOnDeliveryRestrictions *string                      `pulumi:"adsOnDeliveryRestrictions"`
	Encryption                *OriginEndpointHlsEncryption `pulumi:"encryption"`
	// When enabled, an I-Frame only stream will be included in the output.
	IncludeIframeOnlyStream *bool `pulumi:"includeIframeOnlyStream"`
	// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
	PlaylistType *string `pulumi:"playlistType"`
	// Time window (in seconds) contained in each parent manifest.
	PlaylistWindowSeconds *int `pulumi:"playlistWindowSeconds"`
	// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
	ProgramDateTimeIntervalSeconds *int `pulumi:"programDateTimeIntervalSeconds"`
	// Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
	SegmentDurationSeconds *int                           `pulumi:"segmentDurationSeconds"`
	StreamSelection        *OriginEndpointStreamSelection `pulumi:"streamSelection"`
	// When enabled, audio streams will be placed in rendition groups in the output.
	UseAudioRenditionGroup *bool `pulumi:"useAudioRenditionGroup"`
}

// OriginEndpointHlsPackageInput is an input type that accepts OriginEndpointHlsPackageArgs and OriginEndpointHlsPackageOutput values.
// You can construct a concrete instance of `OriginEndpointHlsPackageInput` via:
//
//          OriginEndpointHlsPackageArgs{...}
type OriginEndpointHlsPackageInput interface {
	pulumi.Input

	ToOriginEndpointHlsPackageOutput() OriginEndpointHlsPackageOutput
	ToOriginEndpointHlsPackageOutputWithContext(context.Context) OriginEndpointHlsPackageOutput
}

// An HTTP Live Streaming (HLS) packaging configuration.
type OriginEndpointHlsPackageArgs struct {
	// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
	AdMarkers pulumi.StringPtrInput `pulumi:"adMarkers"`
	// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
	AdTriggers                pulumi.StringArrayInput             `pulumi:"adTriggers"`
	AdsOnDeliveryRestrictions pulumi.StringPtrInput               `pulumi:"adsOnDeliveryRestrictions"`
	Encryption                OriginEndpointHlsEncryptionPtrInput `pulumi:"encryption"`
	// When enabled, an I-Frame only stream will be included in the output.
	IncludeIframeOnlyStream pulumi.BoolPtrInput `pulumi:"includeIframeOnlyStream"`
	// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
	PlaylistType pulumi.StringPtrInput `pulumi:"playlistType"`
	// Time window (in seconds) contained in each parent manifest.
	PlaylistWindowSeconds pulumi.IntPtrInput `pulumi:"playlistWindowSeconds"`
	// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
	ProgramDateTimeIntervalSeconds pulumi.IntPtrInput `pulumi:"programDateTimeIntervalSeconds"`
	// Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
	SegmentDurationSeconds pulumi.IntPtrInput                    `pulumi:"segmentDurationSeconds"`
	StreamSelection        OriginEndpointStreamSelectionPtrInput `pulumi:"streamSelection"`
	// When enabled, audio streams will be placed in rendition groups in the output.
	UseAudioRenditionGroup pulumi.BoolPtrInput `pulumi:"useAudioRenditionGroup"`
}

func (OriginEndpointHlsPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointHlsPackage)(nil)).Elem()
}

func (i OriginEndpointHlsPackageArgs) ToOriginEndpointHlsPackageOutput() OriginEndpointHlsPackageOutput {
	return i.ToOriginEndpointHlsPackageOutputWithContext(context.Background())
}

func (i OriginEndpointHlsPackageArgs) ToOriginEndpointHlsPackageOutputWithContext(ctx context.Context) OriginEndpointHlsPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsPackageOutput)
}

func (i OriginEndpointHlsPackageArgs) ToOriginEndpointHlsPackagePtrOutput() OriginEndpointHlsPackagePtrOutput {
	return i.ToOriginEndpointHlsPackagePtrOutputWithContext(context.Background())
}

func (i OriginEndpointHlsPackageArgs) ToOriginEndpointHlsPackagePtrOutputWithContext(ctx context.Context) OriginEndpointHlsPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsPackageOutput).ToOriginEndpointHlsPackagePtrOutputWithContext(ctx)
}

// OriginEndpointHlsPackagePtrInput is an input type that accepts OriginEndpointHlsPackageArgs, OriginEndpointHlsPackagePtr and OriginEndpointHlsPackagePtrOutput values.
// You can construct a concrete instance of `OriginEndpointHlsPackagePtrInput` via:
//
//          OriginEndpointHlsPackageArgs{...}
//
//  or:
//
//          nil
type OriginEndpointHlsPackagePtrInput interface {
	pulumi.Input

	ToOriginEndpointHlsPackagePtrOutput() OriginEndpointHlsPackagePtrOutput
	ToOriginEndpointHlsPackagePtrOutputWithContext(context.Context) OriginEndpointHlsPackagePtrOutput
}

type originEndpointHlsPackagePtrType OriginEndpointHlsPackageArgs

func OriginEndpointHlsPackagePtr(v *OriginEndpointHlsPackageArgs) OriginEndpointHlsPackagePtrInput {
	return (*originEndpointHlsPackagePtrType)(v)
}

func (*originEndpointHlsPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointHlsPackage)(nil)).Elem()
}

func (i *originEndpointHlsPackagePtrType) ToOriginEndpointHlsPackagePtrOutput() OriginEndpointHlsPackagePtrOutput {
	return i.ToOriginEndpointHlsPackagePtrOutputWithContext(context.Background())
}

func (i *originEndpointHlsPackagePtrType) ToOriginEndpointHlsPackagePtrOutputWithContext(ctx context.Context) OriginEndpointHlsPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointHlsPackagePtrOutput)
}

// An HTTP Live Streaming (HLS) packaging configuration.
type OriginEndpointHlsPackageOutput struct{ *pulumi.OutputState }

func (OriginEndpointHlsPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointHlsPackage)(nil)).Elem()
}

func (o OriginEndpointHlsPackageOutput) ToOriginEndpointHlsPackageOutput() OriginEndpointHlsPackageOutput {
	return o
}

func (o OriginEndpointHlsPackageOutput) ToOriginEndpointHlsPackageOutputWithContext(ctx context.Context) OriginEndpointHlsPackageOutput {
	return o
}

func (o OriginEndpointHlsPackageOutput) ToOriginEndpointHlsPackagePtrOutput() OriginEndpointHlsPackagePtrOutput {
	return o.ToOriginEndpointHlsPackagePtrOutputWithContext(context.Background())
}

func (o OriginEndpointHlsPackageOutput) ToOriginEndpointHlsPackagePtrOutputWithContext(ctx context.Context) OriginEndpointHlsPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointHlsPackage) *OriginEndpointHlsPackage {
		return &v
	}).(OriginEndpointHlsPackagePtrOutput)
}

// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
func (o OriginEndpointHlsPackageOutput) AdMarkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *string { return v.AdMarkers }).(pulumi.StringPtrOutput)
}

// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
func (o OriginEndpointHlsPackageOutput) AdTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) []string { return v.AdTriggers }).(pulumi.StringArrayOutput)
}

func (o OriginEndpointHlsPackageOutput) AdsOnDeliveryRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *string { return v.AdsOnDeliveryRestrictions }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointHlsPackageOutput) Encryption() OriginEndpointHlsEncryptionPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *OriginEndpointHlsEncryption { return v.Encryption }).(OriginEndpointHlsEncryptionPtrOutput)
}

// When enabled, an I-Frame only stream will be included in the output.
func (o OriginEndpointHlsPackageOutput) IncludeIframeOnlyStream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *bool { return v.IncludeIframeOnlyStream }).(pulumi.BoolPtrOutput)
}

// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
func (o OriginEndpointHlsPackageOutput) PlaylistType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *string { return v.PlaylistType }).(pulumi.StringPtrOutput)
}

// Time window (in seconds) contained in each parent manifest.
func (o OriginEndpointHlsPackageOutput) PlaylistWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *int { return v.PlaylistWindowSeconds }).(pulumi.IntPtrOutput)
}

// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
func (o OriginEndpointHlsPackageOutput) ProgramDateTimeIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *int { return v.ProgramDateTimeIntervalSeconds }).(pulumi.IntPtrOutput)
}

// Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
func (o OriginEndpointHlsPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

func (o OriginEndpointHlsPackageOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *OriginEndpointStreamSelection { return v.StreamSelection }).(OriginEndpointStreamSelectionPtrOutput)
}

// When enabled, audio streams will be placed in rendition groups in the output.
func (o OriginEndpointHlsPackageOutput) UseAudioRenditionGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginEndpointHlsPackage) *bool { return v.UseAudioRenditionGroup }).(pulumi.BoolPtrOutput)
}

type OriginEndpointHlsPackagePtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointHlsPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointHlsPackage)(nil)).Elem()
}

func (o OriginEndpointHlsPackagePtrOutput) ToOriginEndpointHlsPackagePtrOutput() OriginEndpointHlsPackagePtrOutput {
	return o
}

func (o OriginEndpointHlsPackagePtrOutput) ToOriginEndpointHlsPackagePtrOutputWithContext(ctx context.Context) OriginEndpointHlsPackagePtrOutput {
	return o
}

func (o OriginEndpointHlsPackagePtrOutput) Elem() OriginEndpointHlsPackageOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) OriginEndpointHlsPackage {
		if v != nil {
			return *v
		}
		var ret OriginEndpointHlsPackage
		return ret
	}).(OriginEndpointHlsPackageOutput)
}

// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
func (o OriginEndpointHlsPackagePtrOutput) AdMarkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *string {
		if v == nil {
			return nil
		}
		return v.AdMarkers
	}).(pulumi.StringPtrOutput)
}

// A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
func (o OriginEndpointHlsPackagePtrOutput) AdTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) []string {
		if v == nil {
			return nil
		}
		return v.AdTriggers
	}).(pulumi.StringArrayOutput)
}

func (o OriginEndpointHlsPackagePtrOutput) AdsOnDeliveryRestrictions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *string {
		if v == nil {
			return nil
		}
		return v.AdsOnDeliveryRestrictions
	}).(pulumi.StringPtrOutput)
}

func (o OriginEndpointHlsPackagePtrOutput) Encryption() OriginEndpointHlsEncryptionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *OriginEndpointHlsEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(OriginEndpointHlsEncryptionPtrOutput)
}

// When enabled, an I-Frame only stream will be included in the output.
func (o OriginEndpointHlsPackagePtrOutput) IncludeIframeOnlyStream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeIframeOnlyStream
	}).(pulumi.BoolPtrOutput)
}

// The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
func (o OriginEndpointHlsPackagePtrOutput) PlaylistType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *string {
		if v == nil {
			return nil
		}
		return v.PlaylistType
	}).(pulumi.StringPtrOutput)
}

// Time window (in seconds) contained in each parent manifest.
func (o OriginEndpointHlsPackagePtrOutput) PlaylistWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *int {
		if v == nil {
			return nil
		}
		return v.PlaylistWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
func (o OriginEndpointHlsPackagePtrOutput) ProgramDateTimeIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *int {
		if v == nil {
			return nil
		}
		return v.ProgramDateTimeIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
func (o OriginEndpointHlsPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o OriginEndpointHlsPackagePtrOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *OriginEndpointStreamSelection {
		if v == nil {
			return nil
		}
		return v.StreamSelection
	}).(OriginEndpointStreamSelectionPtrOutput)
}

// When enabled, audio streams will be placed in rendition groups in the output.
func (o OriginEndpointHlsPackagePtrOutput) UseAudioRenditionGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OriginEndpointHlsPackage) *bool {
		if v == nil {
			return nil
		}
		return v.UseAudioRenditionGroup
	}).(pulumi.BoolPtrOutput)
}

// A Microsoft Smooth Streaming (MSS) encryption configuration.
type OriginEndpointMssEncryption struct {
	SpekeKeyProvider OriginEndpointSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// OriginEndpointMssEncryptionInput is an input type that accepts OriginEndpointMssEncryptionArgs and OriginEndpointMssEncryptionOutput values.
// You can construct a concrete instance of `OriginEndpointMssEncryptionInput` via:
//
//          OriginEndpointMssEncryptionArgs{...}
type OriginEndpointMssEncryptionInput interface {
	pulumi.Input

	ToOriginEndpointMssEncryptionOutput() OriginEndpointMssEncryptionOutput
	ToOriginEndpointMssEncryptionOutputWithContext(context.Context) OriginEndpointMssEncryptionOutput
}

// A Microsoft Smooth Streaming (MSS) encryption configuration.
type OriginEndpointMssEncryptionArgs struct {
	SpekeKeyProvider OriginEndpointSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (OriginEndpointMssEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointMssEncryption)(nil)).Elem()
}

func (i OriginEndpointMssEncryptionArgs) ToOriginEndpointMssEncryptionOutput() OriginEndpointMssEncryptionOutput {
	return i.ToOriginEndpointMssEncryptionOutputWithContext(context.Background())
}

func (i OriginEndpointMssEncryptionArgs) ToOriginEndpointMssEncryptionOutputWithContext(ctx context.Context) OriginEndpointMssEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointMssEncryptionOutput)
}

func (i OriginEndpointMssEncryptionArgs) ToOriginEndpointMssEncryptionPtrOutput() OriginEndpointMssEncryptionPtrOutput {
	return i.ToOriginEndpointMssEncryptionPtrOutputWithContext(context.Background())
}

func (i OriginEndpointMssEncryptionArgs) ToOriginEndpointMssEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointMssEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointMssEncryptionOutput).ToOriginEndpointMssEncryptionPtrOutputWithContext(ctx)
}

// OriginEndpointMssEncryptionPtrInput is an input type that accepts OriginEndpointMssEncryptionArgs, OriginEndpointMssEncryptionPtr and OriginEndpointMssEncryptionPtrOutput values.
// You can construct a concrete instance of `OriginEndpointMssEncryptionPtrInput` via:
//
//          OriginEndpointMssEncryptionArgs{...}
//
//  or:
//
//          nil
type OriginEndpointMssEncryptionPtrInput interface {
	pulumi.Input

	ToOriginEndpointMssEncryptionPtrOutput() OriginEndpointMssEncryptionPtrOutput
	ToOriginEndpointMssEncryptionPtrOutputWithContext(context.Context) OriginEndpointMssEncryptionPtrOutput
}

type originEndpointMssEncryptionPtrType OriginEndpointMssEncryptionArgs

func OriginEndpointMssEncryptionPtr(v *OriginEndpointMssEncryptionArgs) OriginEndpointMssEncryptionPtrInput {
	return (*originEndpointMssEncryptionPtrType)(v)
}

func (*originEndpointMssEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointMssEncryption)(nil)).Elem()
}

func (i *originEndpointMssEncryptionPtrType) ToOriginEndpointMssEncryptionPtrOutput() OriginEndpointMssEncryptionPtrOutput {
	return i.ToOriginEndpointMssEncryptionPtrOutputWithContext(context.Background())
}

func (i *originEndpointMssEncryptionPtrType) ToOriginEndpointMssEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointMssEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointMssEncryptionPtrOutput)
}

// A Microsoft Smooth Streaming (MSS) encryption configuration.
type OriginEndpointMssEncryptionOutput struct{ *pulumi.OutputState }

func (OriginEndpointMssEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointMssEncryption)(nil)).Elem()
}

func (o OriginEndpointMssEncryptionOutput) ToOriginEndpointMssEncryptionOutput() OriginEndpointMssEncryptionOutput {
	return o
}

func (o OriginEndpointMssEncryptionOutput) ToOriginEndpointMssEncryptionOutputWithContext(ctx context.Context) OriginEndpointMssEncryptionOutput {
	return o
}

func (o OriginEndpointMssEncryptionOutput) ToOriginEndpointMssEncryptionPtrOutput() OriginEndpointMssEncryptionPtrOutput {
	return o.ToOriginEndpointMssEncryptionPtrOutputWithContext(context.Background())
}

func (o OriginEndpointMssEncryptionOutput) ToOriginEndpointMssEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointMssEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointMssEncryption) *OriginEndpointMssEncryption {
		return &v
	}).(OriginEndpointMssEncryptionPtrOutput)
}

func (o OriginEndpointMssEncryptionOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderOutput {
	return o.ApplyT(func(v OriginEndpointMssEncryption) OriginEndpointSpekeKeyProvider { return v.SpekeKeyProvider }).(OriginEndpointSpekeKeyProviderOutput)
}

type OriginEndpointMssEncryptionPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointMssEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointMssEncryption)(nil)).Elem()
}

func (o OriginEndpointMssEncryptionPtrOutput) ToOriginEndpointMssEncryptionPtrOutput() OriginEndpointMssEncryptionPtrOutput {
	return o
}

func (o OriginEndpointMssEncryptionPtrOutput) ToOriginEndpointMssEncryptionPtrOutputWithContext(ctx context.Context) OriginEndpointMssEncryptionPtrOutput {
	return o
}

func (o OriginEndpointMssEncryptionPtrOutput) Elem() OriginEndpointMssEncryptionOutput {
	return o.ApplyT(func(v *OriginEndpointMssEncryption) OriginEndpointMssEncryption {
		if v != nil {
			return *v
		}
		var ret OriginEndpointMssEncryption
		return ret
	}).(OriginEndpointMssEncryptionOutput)
}

func (o OriginEndpointMssEncryptionPtrOutput) SpekeKeyProvider() OriginEndpointSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *OriginEndpointMssEncryption) *OriginEndpointSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(OriginEndpointSpekeKeyProviderPtrOutput)
}

// A Microsoft Smooth Streaming (MSS) packaging configuration.
type OriginEndpointMssPackage struct {
	Encryption *OriginEndpointMssEncryption `pulumi:"encryption"`
	// The time window (in seconds) contained in each manifest.
	ManifestWindowSeconds *int `pulumi:"manifestWindowSeconds"`
	// The duration (in seconds) of each segment.
	SegmentDurationSeconds *int                           `pulumi:"segmentDurationSeconds"`
	StreamSelection        *OriginEndpointStreamSelection `pulumi:"streamSelection"`
}

// OriginEndpointMssPackageInput is an input type that accepts OriginEndpointMssPackageArgs and OriginEndpointMssPackageOutput values.
// You can construct a concrete instance of `OriginEndpointMssPackageInput` via:
//
//          OriginEndpointMssPackageArgs{...}
type OriginEndpointMssPackageInput interface {
	pulumi.Input

	ToOriginEndpointMssPackageOutput() OriginEndpointMssPackageOutput
	ToOriginEndpointMssPackageOutputWithContext(context.Context) OriginEndpointMssPackageOutput
}

// A Microsoft Smooth Streaming (MSS) packaging configuration.
type OriginEndpointMssPackageArgs struct {
	Encryption OriginEndpointMssEncryptionPtrInput `pulumi:"encryption"`
	// The time window (in seconds) contained in each manifest.
	ManifestWindowSeconds pulumi.IntPtrInput `pulumi:"manifestWindowSeconds"`
	// The duration (in seconds) of each segment.
	SegmentDurationSeconds pulumi.IntPtrInput                    `pulumi:"segmentDurationSeconds"`
	StreamSelection        OriginEndpointStreamSelectionPtrInput `pulumi:"streamSelection"`
}

func (OriginEndpointMssPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointMssPackage)(nil)).Elem()
}

func (i OriginEndpointMssPackageArgs) ToOriginEndpointMssPackageOutput() OriginEndpointMssPackageOutput {
	return i.ToOriginEndpointMssPackageOutputWithContext(context.Background())
}

func (i OriginEndpointMssPackageArgs) ToOriginEndpointMssPackageOutputWithContext(ctx context.Context) OriginEndpointMssPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointMssPackageOutput)
}

func (i OriginEndpointMssPackageArgs) ToOriginEndpointMssPackagePtrOutput() OriginEndpointMssPackagePtrOutput {
	return i.ToOriginEndpointMssPackagePtrOutputWithContext(context.Background())
}

func (i OriginEndpointMssPackageArgs) ToOriginEndpointMssPackagePtrOutputWithContext(ctx context.Context) OriginEndpointMssPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointMssPackageOutput).ToOriginEndpointMssPackagePtrOutputWithContext(ctx)
}

// OriginEndpointMssPackagePtrInput is an input type that accepts OriginEndpointMssPackageArgs, OriginEndpointMssPackagePtr and OriginEndpointMssPackagePtrOutput values.
// You can construct a concrete instance of `OriginEndpointMssPackagePtrInput` via:
//
//          OriginEndpointMssPackageArgs{...}
//
//  or:
//
//          nil
type OriginEndpointMssPackagePtrInput interface {
	pulumi.Input

	ToOriginEndpointMssPackagePtrOutput() OriginEndpointMssPackagePtrOutput
	ToOriginEndpointMssPackagePtrOutputWithContext(context.Context) OriginEndpointMssPackagePtrOutput
}

type originEndpointMssPackagePtrType OriginEndpointMssPackageArgs

func OriginEndpointMssPackagePtr(v *OriginEndpointMssPackageArgs) OriginEndpointMssPackagePtrInput {
	return (*originEndpointMssPackagePtrType)(v)
}

func (*originEndpointMssPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointMssPackage)(nil)).Elem()
}

func (i *originEndpointMssPackagePtrType) ToOriginEndpointMssPackagePtrOutput() OriginEndpointMssPackagePtrOutput {
	return i.ToOriginEndpointMssPackagePtrOutputWithContext(context.Background())
}

func (i *originEndpointMssPackagePtrType) ToOriginEndpointMssPackagePtrOutputWithContext(ctx context.Context) OriginEndpointMssPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointMssPackagePtrOutput)
}

// A Microsoft Smooth Streaming (MSS) packaging configuration.
type OriginEndpointMssPackageOutput struct{ *pulumi.OutputState }

func (OriginEndpointMssPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointMssPackage)(nil)).Elem()
}

func (o OriginEndpointMssPackageOutput) ToOriginEndpointMssPackageOutput() OriginEndpointMssPackageOutput {
	return o
}

func (o OriginEndpointMssPackageOutput) ToOriginEndpointMssPackageOutputWithContext(ctx context.Context) OriginEndpointMssPackageOutput {
	return o
}

func (o OriginEndpointMssPackageOutput) ToOriginEndpointMssPackagePtrOutput() OriginEndpointMssPackagePtrOutput {
	return o.ToOriginEndpointMssPackagePtrOutputWithContext(context.Background())
}

func (o OriginEndpointMssPackageOutput) ToOriginEndpointMssPackagePtrOutputWithContext(ctx context.Context) OriginEndpointMssPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointMssPackage) *OriginEndpointMssPackage {
		return &v
	}).(OriginEndpointMssPackagePtrOutput)
}

func (o OriginEndpointMssPackageOutput) Encryption() OriginEndpointMssEncryptionPtrOutput {
	return o.ApplyT(func(v OriginEndpointMssPackage) *OriginEndpointMssEncryption { return v.Encryption }).(OriginEndpointMssEncryptionPtrOutput)
}

// The time window (in seconds) contained in each manifest.
func (o OriginEndpointMssPackageOutput) ManifestWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointMssPackage) *int { return v.ManifestWindowSeconds }).(pulumi.IntPtrOutput)
}

// The duration (in seconds) of each segment.
func (o OriginEndpointMssPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointMssPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

func (o OriginEndpointMssPackageOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v OriginEndpointMssPackage) *OriginEndpointStreamSelection { return v.StreamSelection }).(OriginEndpointStreamSelectionPtrOutput)
}

type OriginEndpointMssPackagePtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointMssPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointMssPackage)(nil)).Elem()
}

func (o OriginEndpointMssPackagePtrOutput) ToOriginEndpointMssPackagePtrOutput() OriginEndpointMssPackagePtrOutput {
	return o
}

func (o OriginEndpointMssPackagePtrOutput) ToOriginEndpointMssPackagePtrOutputWithContext(ctx context.Context) OriginEndpointMssPackagePtrOutput {
	return o
}

func (o OriginEndpointMssPackagePtrOutput) Elem() OriginEndpointMssPackageOutput {
	return o.ApplyT(func(v *OriginEndpointMssPackage) OriginEndpointMssPackage {
		if v != nil {
			return *v
		}
		var ret OriginEndpointMssPackage
		return ret
	}).(OriginEndpointMssPackageOutput)
}

func (o OriginEndpointMssPackagePtrOutput) Encryption() OriginEndpointMssEncryptionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointMssPackage) *OriginEndpointMssEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(OriginEndpointMssEncryptionPtrOutput)
}

// The time window (in seconds) contained in each manifest.
func (o OriginEndpointMssPackagePtrOutput) ManifestWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointMssPackage) *int {
		if v == nil {
			return nil
		}
		return v.ManifestWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// The duration (in seconds) of each segment.
func (o OriginEndpointMssPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointMssPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o OriginEndpointMssPackagePtrOutput) StreamSelection() OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyT(func(v *OriginEndpointMssPackage) *OriginEndpointStreamSelection {
		if v == nil {
			return nil
		}
		return v.StreamSelection
	}).(OriginEndpointStreamSelectionPtrOutput)
}

// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
type OriginEndpointSpekeKeyProvider struct {
	// An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
	CertificateArn *string `pulumi:"certificateArn"`
	// The resource ID to include in key requests.
	ResourceId string `pulumi:"resourceId"`
	// An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
	RoleArn string `pulumi:"roleArn"`
	// The system IDs to include in key requests.
	SystemIds []string `pulumi:"systemIds"`
	// The URL of the external key provider service.
	Url string `pulumi:"url"`
}

// OriginEndpointSpekeKeyProviderInput is an input type that accepts OriginEndpointSpekeKeyProviderArgs and OriginEndpointSpekeKeyProviderOutput values.
// You can construct a concrete instance of `OriginEndpointSpekeKeyProviderInput` via:
//
//          OriginEndpointSpekeKeyProviderArgs{...}
type OriginEndpointSpekeKeyProviderInput interface {
	pulumi.Input

	ToOriginEndpointSpekeKeyProviderOutput() OriginEndpointSpekeKeyProviderOutput
	ToOriginEndpointSpekeKeyProviderOutputWithContext(context.Context) OriginEndpointSpekeKeyProviderOutput
}

// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
type OriginEndpointSpekeKeyProviderArgs struct {
	// An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
	CertificateArn pulumi.StringPtrInput `pulumi:"certificateArn"`
	// The resource ID to include in key requests.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The system IDs to include in key requests.
	SystemIds pulumi.StringArrayInput `pulumi:"systemIds"`
	// The URL of the external key provider service.
	Url pulumi.StringInput `pulumi:"url"`
}

func (OriginEndpointSpekeKeyProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointSpekeKeyProvider)(nil)).Elem()
}

func (i OriginEndpointSpekeKeyProviderArgs) ToOriginEndpointSpekeKeyProviderOutput() OriginEndpointSpekeKeyProviderOutput {
	return i.ToOriginEndpointSpekeKeyProviderOutputWithContext(context.Background())
}

func (i OriginEndpointSpekeKeyProviderArgs) ToOriginEndpointSpekeKeyProviderOutputWithContext(ctx context.Context) OriginEndpointSpekeKeyProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointSpekeKeyProviderOutput)
}

func (i OriginEndpointSpekeKeyProviderArgs) ToOriginEndpointSpekeKeyProviderPtrOutput() OriginEndpointSpekeKeyProviderPtrOutput {
	return i.ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(context.Background())
}

func (i OriginEndpointSpekeKeyProviderArgs) ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(ctx context.Context) OriginEndpointSpekeKeyProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointSpekeKeyProviderOutput).ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(ctx)
}

// OriginEndpointSpekeKeyProviderPtrInput is an input type that accepts OriginEndpointSpekeKeyProviderArgs, OriginEndpointSpekeKeyProviderPtr and OriginEndpointSpekeKeyProviderPtrOutput values.
// You can construct a concrete instance of `OriginEndpointSpekeKeyProviderPtrInput` via:
//
//          OriginEndpointSpekeKeyProviderArgs{...}
//
//  or:
//
//          nil
type OriginEndpointSpekeKeyProviderPtrInput interface {
	pulumi.Input

	ToOriginEndpointSpekeKeyProviderPtrOutput() OriginEndpointSpekeKeyProviderPtrOutput
	ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(context.Context) OriginEndpointSpekeKeyProviderPtrOutput
}

type originEndpointSpekeKeyProviderPtrType OriginEndpointSpekeKeyProviderArgs

func OriginEndpointSpekeKeyProviderPtr(v *OriginEndpointSpekeKeyProviderArgs) OriginEndpointSpekeKeyProviderPtrInput {
	return (*originEndpointSpekeKeyProviderPtrType)(v)
}

func (*originEndpointSpekeKeyProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointSpekeKeyProvider)(nil)).Elem()
}

func (i *originEndpointSpekeKeyProviderPtrType) ToOriginEndpointSpekeKeyProviderPtrOutput() OriginEndpointSpekeKeyProviderPtrOutput {
	return i.ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(context.Background())
}

func (i *originEndpointSpekeKeyProviderPtrType) ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(ctx context.Context) OriginEndpointSpekeKeyProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointSpekeKeyProviderPtrOutput)
}

// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
type OriginEndpointSpekeKeyProviderOutput struct{ *pulumi.OutputState }

func (OriginEndpointSpekeKeyProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointSpekeKeyProvider)(nil)).Elem()
}

func (o OriginEndpointSpekeKeyProviderOutput) ToOriginEndpointSpekeKeyProviderOutput() OriginEndpointSpekeKeyProviderOutput {
	return o
}

func (o OriginEndpointSpekeKeyProviderOutput) ToOriginEndpointSpekeKeyProviderOutputWithContext(ctx context.Context) OriginEndpointSpekeKeyProviderOutput {
	return o
}

func (o OriginEndpointSpekeKeyProviderOutput) ToOriginEndpointSpekeKeyProviderPtrOutput() OriginEndpointSpekeKeyProviderPtrOutput {
	return o.ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(context.Background())
}

func (o OriginEndpointSpekeKeyProviderOutput) ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(ctx context.Context) OriginEndpointSpekeKeyProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointSpekeKeyProvider) *OriginEndpointSpekeKeyProvider {
		return &v
	}).(OriginEndpointSpekeKeyProviderPtrOutput)
}

// An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
func (o OriginEndpointSpekeKeyProviderOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointSpekeKeyProvider) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

// The resource ID to include in key requests.
func (o OriginEndpointSpekeKeyProviderOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointSpekeKeyProvider) string { return v.ResourceId }).(pulumi.StringOutput)
}

// An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
func (o OriginEndpointSpekeKeyProviderOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointSpekeKeyProvider) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The system IDs to include in key requests.
func (o OriginEndpointSpekeKeyProviderOutput) SystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginEndpointSpekeKeyProvider) []string { return v.SystemIds }).(pulumi.StringArrayOutput)
}

// The URL of the external key provider service.
func (o OriginEndpointSpekeKeyProviderOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointSpekeKeyProvider) string { return v.Url }).(pulumi.StringOutput)
}

type OriginEndpointSpekeKeyProviderPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointSpekeKeyProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointSpekeKeyProvider)(nil)).Elem()
}

func (o OriginEndpointSpekeKeyProviderPtrOutput) ToOriginEndpointSpekeKeyProviderPtrOutput() OriginEndpointSpekeKeyProviderPtrOutput {
	return o
}

func (o OriginEndpointSpekeKeyProviderPtrOutput) ToOriginEndpointSpekeKeyProviderPtrOutputWithContext(ctx context.Context) OriginEndpointSpekeKeyProviderPtrOutput {
	return o
}

func (o OriginEndpointSpekeKeyProviderPtrOutput) Elem() OriginEndpointSpekeKeyProviderOutput {
	return o.ApplyT(func(v *OriginEndpointSpekeKeyProvider) OriginEndpointSpekeKeyProvider {
		if v != nil {
			return *v
		}
		var ret OriginEndpointSpekeKeyProvider
		return ret
	}).(OriginEndpointSpekeKeyProviderOutput)
}

// An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
func (o OriginEndpointSpekeKeyProviderPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointSpekeKeyProvider) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

// The resource ID to include in key requests.
func (o OriginEndpointSpekeKeyProviderPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointSpekeKeyProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
func (o OriginEndpointSpekeKeyProviderPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointSpekeKeyProvider) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The system IDs to include in key requests.
func (o OriginEndpointSpekeKeyProviderPtrOutput) SystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginEndpointSpekeKeyProvider) []string {
		if v == nil {
			return nil
		}
		return v.SystemIds
	}).(pulumi.StringArrayOutput)
}

// The URL of the external key provider service.
func (o OriginEndpointSpekeKeyProviderPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointSpekeKeyProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// A StreamSelection configuration.
type OriginEndpointStreamSelection struct {
	// The maximum video bitrate (bps) to include in output.
	MaxVideoBitsPerSecond *int `pulumi:"maxVideoBitsPerSecond"`
	// The minimum video bitrate (bps) to include in output.
	MinVideoBitsPerSecond *int `pulumi:"minVideoBitsPerSecond"`
	// A directive that determines the order of streams in the output.
	StreamOrder *string `pulumi:"streamOrder"`
}

// OriginEndpointStreamSelectionInput is an input type that accepts OriginEndpointStreamSelectionArgs and OriginEndpointStreamSelectionOutput values.
// You can construct a concrete instance of `OriginEndpointStreamSelectionInput` via:
//
//          OriginEndpointStreamSelectionArgs{...}
type OriginEndpointStreamSelectionInput interface {
	pulumi.Input

	ToOriginEndpointStreamSelectionOutput() OriginEndpointStreamSelectionOutput
	ToOriginEndpointStreamSelectionOutputWithContext(context.Context) OriginEndpointStreamSelectionOutput
}

// A StreamSelection configuration.
type OriginEndpointStreamSelectionArgs struct {
	// The maximum video bitrate (bps) to include in output.
	MaxVideoBitsPerSecond pulumi.IntPtrInput `pulumi:"maxVideoBitsPerSecond"`
	// The minimum video bitrate (bps) to include in output.
	MinVideoBitsPerSecond pulumi.IntPtrInput `pulumi:"minVideoBitsPerSecond"`
	// A directive that determines the order of streams in the output.
	StreamOrder pulumi.StringPtrInput `pulumi:"streamOrder"`
}

func (OriginEndpointStreamSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointStreamSelection)(nil)).Elem()
}

func (i OriginEndpointStreamSelectionArgs) ToOriginEndpointStreamSelectionOutput() OriginEndpointStreamSelectionOutput {
	return i.ToOriginEndpointStreamSelectionOutputWithContext(context.Background())
}

func (i OriginEndpointStreamSelectionArgs) ToOriginEndpointStreamSelectionOutputWithContext(ctx context.Context) OriginEndpointStreamSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointStreamSelectionOutput)
}

func (i OriginEndpointStreamSelectionArgs) ToOriginEndpointStreamSelectionPtrOutput() OriginEndpointStreamSelectionPtrOutput {
	return i.ToOriginEndpointStreamSelectionPtrOutputWithContext(context.Background())
}

func (i OriginEndpointStreamSelectionArgs) ToOriginEndpointStreamSelectionPtrOutputWithContext(ctx context.Context) OriginEndpointStreamSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointStreamSelectionOutput).ToOriginEndpointStreamSelectionPtrOutputWithContext(ctx)
}

// OriginEndpointStreamSelectionPtrInput is an input type that accepts OriginEndpointStreamSelectionArgs, OriginEndpointStreamSelectionPtr and OriginEndpointStreamSelectionPtrOutput values.
// You can construct a concrete instance of `OriginEndpointStreamSelectionPtrInput` via:
//
//          OriginEndpointStreamSelectionArgs{...}
//
//  or:
//
//          nil
type OriginEndpointStreamSelectionPtrInput interface {
	pulumi.Input

	ToOriginEndpointStreamSelectionPtrOutput() OriginEndpointStreamSelectionPtrOutput
	ToOriginEndpointStreamSelectionPtrOutputWithContext(context.Context) OriginEndpointStreamSelectionPtrOutput
}

type originEndpointStreamSelectionPtrType OriginEndpointStreamSelectionArgs

func OriginEndpointStreamSelectionPtr(v *OriginEndpointStreamSelectionArgs) OriginEndpointStreamSelectionPtrInput {
	return (*originEndpointStreamSelectionPtrType)(v)
}

func (*originEndpointStreamSelectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointStreamSelection)(nil)).Elem()
}

func (i *originEndpointStreamSelectionPtrType) ToOriginEndpointStreamSelectionPtrOutput() OriginEndpointStreamSelectionPtrOutput {
	return i.ToOriginEndpointStreamSelectionPtrOutputWithContext(context.Background())
}

func (i *originEndpointStreamSelectionPtrType) ToOriginEndpointStreamSelectionPtrOutputWithContext(ctx context.Context) OriginEndpointStreamSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointStreamSelectionPtrOutput)
}

// A StreamSelection configuration.
type OriginEndpointStreamSelectionOutput struct{ *pulumi.OutputState }

func (OriginEndpointStreamSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointStreamSelection)(nil)).Elem()
}

func (o OriginEndpointStreamSelectionOutput) ToOriginEndpointStreamSelectionOutput() OriginEndpointStreamSelectionOutput {
	return o
}

func (o OriginEndpointStreamSelectionOutput) ToOriginEndpointStreamSelectionOutputWithContext(ctx context.Context) OriginEndpointStreamSelectionOutput {
	return o
}

func (o OriginEndpointStreamSelectionOutput) ToOriginEndpointStreamSelectionPtrOutput() OriginEndpointStreamSelectionPtrOutput {
	return o.ToOriginEndpointStreamSelectionPtrOutputWithContext(context.Background())
}

func (o OriginEndpointStreamSelectionOutput) ToOriginEndpointStreamSelectionPtrOutputWithContext(ctx context.Context) OriginEndpointStreamSelectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OriginEndpointStreamSelection) *OriginEndpointStreamSelection {
		return &v
	}).(OriginEndpointStreamSelectionPtrOutput)
}

// The maximum video bitrate (bps) to include in output.
func (o OriginEndpointStreamSelectionOutput) MaxVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointStreamSelection) *int { return v.MaxVideoBitsPerSecond }).(pulumi.IntPtrOutput)
}

// The minimum video bitrate (bps) to include in output.
func (o OriginEndpointStreamSelectionOutput) MinVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginEndpointStreamSelection) *int { return v.MinVideoBitsPerSecond }).(pulumi.IntPtrOutput)
}

// A directive that determines the order of streams in the output.
func (o OriginEndpointStreamSelectionOutput) StreamOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginEndpointStreamSelection) *string { return v.StreamOrder }).(pulumi.StringPtrOutput)
}

type OriginEndpointStreamSelectionPtrOutput struct{ *pulumi.OutputState }

func (OriginEndpointStreamSelectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointStreamSelection)(nil)).Elem()
}

func (o OriginEndpointStreamSelectionPtrOutput) ToOriginEndpointStreamSelectionPtrOutput() OriginEndpointStreamSelectionPtrOutput {
	return o
}

func (o OriginEndpointStreamSelectionPtrOutput) ToOriginEndpointStreamSelectionPtrOutputWithContext(ctx context.Context) OriginEndpointStreamSelectionPtrOutput {
	return o
}

func (o OriginEndpointStreamSelectionPtrOutput) Elem() OriginEndpointStreamSelectionOutput {
	return o.ApplyT(func(v *OriginEndpointStreamSelection) OriginEndpointStreamSelection {
		if v != nil {
			return *v
		}
		var ret OriginEndpointStreamSelection
		return ret
	}).(OriginEndpointStreamSelectionOutput)
}

// The maximum video bitrate (bps) to include in output.
func (o OriginEndpointStreamSelectionPtrOutput) MaxVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointStreamSelection) *int {
		if v == nil {
			return nil
		}
		return v.MaxVideoBitsPerSecond
	}).(pulumi.IntPtrOutput)
}

// The minimum video bitrate (bps) to include in output.
func (o OriginEndpointStreamSelectionPtrOutput) MinVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OriginEndpointStreamSelection) *int {
		if v == nil {
			return nil
		}
		return v.MinVideoBitsPerSecond
	}).(pulumi.IntPtrOutput)
}

// A directive that determines the order of streams in the output.
func (o OriginEndpointStreamSelectionPtrOutput) StreamOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointStreamSelection) *string {
		if v == nil {
			return nil
		}
		return v.StreamOrder
	}).(pulumi.StringPtrOutput)
}

type OriginEndpointTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// OriginEndpointTagInput is an input type that accepts OriginEndpointTagArgs and OriginEndpointTagOutput values.
// You can construct a concrete instance of `OriginEndpointTagInput` via:
//
//          OriginEndpointTagArgs{...}
type OriginEndpointTagInput interface {
	pulumi.Input

	ToOriginEndpointTagOutput() OriginEndpointTagOutput
	ToOriginEndpointTagOutputWithContext(context.Context) OriginEndpointTagOutput
}

type OriginEndpointTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (OriginEndpointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointTag)(nil)).Elem()
}

func (i OriginEndpointTagArgs) ToOriginEndpointTagOutput() OriginEndpointTagOutput {
	return i.ToOriginEndpointTagOutputWithContext(context.Background())
}

func (i OriginEndpointTagArgs) ToOriginEndpointTagOutputWithContext(ctx context.Context) OriginEndpointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointTagOutput)
}

// OriginEndpointTagArrayInput is an input type that accepts OriginEndpointTagArray and OriginEndpointTagArrayOutput values.
// You can construct a concrete instance of `OriginEndpointTagArrayInput` via:
//
//          OriginEndpointTagArray{ OriginEndpointTagArgs{...} }
type OriginEndpointTagArrayInput interface {
	pulumi.Input

	ToOriginEndpointTagArrayOutput() OriginEndpointTagArrayOutput
	ToOriginEndpointTagArrayOutputWithContext(context.Context) OriginEndpointTagArrayOutput
}

type OriginEndpointTagArray []OriginEndpointTagInput

func (OriginEndpointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginEndpointTag)(nil)).Elem()
}

func (i OriginEndpointTagArray) ToOriginEndpointTagArrayOutput() OriginEndpointTagArrayOutput {
	return i.ToOriginEndpointTagArrayOutputWithContext(context.Background())
}

func (i OriginEndpointTagArray) ToOriginEndpointTagArrayOutputWithContext(ctx context.Context) OriginEndpointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointTagArrayOutput)
}

type OriginEndpointTagOutput struct{ *pulumi.OutputState }

func (OriginEndpointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginEndpointTag)(nil)).Elem()
}

func (o OriginEndpointTagOutput) ToOriginEndpointTagOutput() OriginEndpointTagOutput {
	return o
}

func (o OriginEndpointTagOutput) ToOriginEndpointTagOutputWithContext(ctx context.Context) OriginEndpointTagOutput {
	return o
}

func (o OriginEndpointTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o OriginEndpointTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OriginEndpointTag) string { return v.Value }).(pulumi.StringOutput)
}

type OriginEndpointTagArrayOutput struct{ *pulumi.OutputState }

func (OriginEndpointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginEndpointTag)(nil)).Elem()
}

func (o OriginEndpointTagArrayOutput) ToOriginEndpointTagArrayOutput() OriginEndpointTagArrayOutput {
	return o
}

func (o OriginEndpointTagArrayOutput) ToOriginEndpointTagArrayOutputWithContext(ctx context.Context) OriginEndpointTagArrayOutput {
	return o
}

func (o OriginEndpointTagArrayOutput) Index(i pulumi.IntInput) OriginEndpointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginEndpointTag {
		return vs[0].([]OriginEndpointTag)[vs[1].(int)]
	}).(OriginEndpointTagOutput)
}

// A CMAF encryption configuration.
type PackagingConfigurationCmafEncryption struct {
	SpekeKeyProvider PackagingConfigurationSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// PackagingConfigurationCmafEncryptionInput is an input type that accepts PackagingConfigurationCmafEncryptionArgs and PackagingConfigurationCmafEncryptionOutput values.
// You can construct a concrete instance of `PackagingConfigurationCmafEncryptionInput` via:
//
//          PackagingConfigurationCmafEncryptionArgs{...}
type PackagingConfigurationCmafEncryptionInput interface {
	pulumi.Input

	ToPackagingConfigurationCmafEncryptionOutput() PackagingConfigurationCmafEncryptionOutput
	ToPackagingConfigurationCmafEncryptionOutputWithContext(context.Context) PackagingConfigurationCmafEncryptionOutput
}

// A CMAF encryption configuration.
type PackagingConfigurationCmafEncryptionArgs struct {
	SpekeKeyProvider PackagingConfigurationSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (PackagingConfigurationCmafEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationCmafEncryption)(nil)).Elem()
}

func (i PackagingConfigurationCmafEncryptionArgs) ToPackagingConfigurationCmafEncryptionOutput() PackagingConfigurationCmafEncryptionOutput {
	return i.ToPackagingConfigurationCmafEncryptionOutputWithContext(context.Background())
}

func (i PackagingConfigurationCmafEncryptionArgs) ToPackagingConfigurationCmafEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationCmafEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationCmafEncryptionOutput)
}

func (i PackagingConfigurationCmafEncryptionArgs) ToPackagingConfigurationCmafEncryptionPtrOutput() PackagingConfigurationCmafEncryptionPtrOutput {
	return i.ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationCmafEncryptionArgs) ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationCmafEncryptionOutput).ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(ctx)
}

// PackagingConfigurationCmafEncryptionPtrInput is an input type that accepts PackagingConfigurationCmafEncryptionArgs, PackagingConfigurationCmafEncryptionPtr and PackagingConfigurationCmafEncryptionPtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationCmafEncryptionPtrInput` via:
//
//          PackagingConfigurationCmafEncryptionArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationCmafEncryptionPtrInput interface {
	pulumi.Input

	ToPackagingConfigurationCmafEncryptionPtrOutput() PackagingConfigurationCmafEncryptionPtrOutput
	ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(context.Context) PackagingConfigurationCmafEncryptionPtrOutput
}

type packagingConfigurationCmafEncryptionPtrType PackagingConfigurationCmafEncryptionArgs

func PackagingConfigurationCmafEncryptionPtr(v *PackagingConfigurationCmafEncryptionArgs) PackagingConfigurationCmafEncryptionPtrInput {
	return (*packagingConfigurationCmafEncryptionPtrType)(v)
}

func (*packagingConfigurationCmafEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationCmafEncryption)(nil)).Elem()
}

func (i *packagingConfigurationCmafEncryptionPtrType) ToPackagingConfigurationCmafEncryptionPtrOutput() PackagingConfigurationCmafEncryptionPtrOutput {
	return i.ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationCmafEncryptionPtrType) ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationCmafEncryptionPtrOutput)
}

// A CMAF encryption configuration.
type PackagingConfigurationCmafEncryptionOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationCmafEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationCmafEncryption)(nil)).Elem()
}

func (o PackagingConfigurationCmafEncryptionOutput) ToPackagingConfigurationCmafEncryptionOutput() PackagingConfigurationCmafEncryptionOutput {
	return o
}

func (o PackagingConfigurationCmafEncryptionOutput) ToPackagingConfigurationCmafEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationCmafEncryptionOutput {
	return o
}

func (o PackagingConfigurationCmafEncryptionOutput) ToPackagingConfigurationCmafEncryptionPtrOutput() PackagingConfigurationCmafEncryptionPtrOutput {
	return o.ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationCmafEncryptionOutput) ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationCmafEncryption) *PackagingConfigurationCmafEncryption {
		return &v
	}).(PackagingConfigurationCmafEncryptionPtrOutput)
}

func (o PackagingConfigurationCmafEncryptionOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderOutput {
	return o.ApplyT(func(v PackagingConfigurationCmafEncryption) PackagingConfigurationSpekeKeyProvider {
		return v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderOutput)
}

type PackagingConfigurationCmafEncryptionPtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationCmafEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationCmafEncryption)(nil)).Elem()
}

func (o PackagingConfigurationCmafEncryptionPtrOutput) ToPackagingConfigurationCmafEncryptionPtrOutput() PackagingConfigurationCmafEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationCmafEncryptionPtrOutput) ToPackagingConfigurationCmafEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationCmafEncryptionPtrOutput) Elem() PackagingConfigurationCmafEncryptionOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafEncryption) PackagingConfigurationCmafEncryption {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationCmafEncryption
		return ret
	}).(PackagingConfigurationCmafEncryptionOutput)
}

func (o PackagingConfigurationCmafEncryptionPtrOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafEncryption) *PackagingConfigurationSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderPtrOutput)
}

// A CMAF packaging configuration.
type PackagingConfigurationCmafPackage struct {
	Encryption *PackagingConfigurationCmafEncryption `pulumi:"encryption"`
	// A list of HLS manifest configurations.
	HlsManifests []PackagingConfigurationHlsManifest `pulumi:"hlsManifests"`
	// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
	IncludeEncoderConfigurationInSegments *bool `pulumi:"includeEncoderConfigurationInSegments"`
	SegmentDurationSeconds                *int  `pulumi:"segmentDurationSeconds"`
}

// PackagingConfigurationCmafPackageInput is an input type that accepts PackagingConfigurationCmafPackageArgs and PackagingConfigurationCmafPackageOutput values.
// You can construct a concrete instance of `PackagingConfigurationCmafPackageInput` via:
//
//          PackagingConfigurationCmafPackageArgs{...}
type PackagingConfigurationCmafPackageInput interface {
	pulumi.Input

	ToPackagingConfigurationCmafPackageOutput() PackagingConfigurationCmafPackageOutput
	ToPackagingConfigurationCmafPackageOutputWithContext(context.Context) PackagingConfigurationCmafPackageOutput
}

// A CMAF packaging configuration.
type PackagingConfigurationCmafPackageArgs struct {
	Encryption PackagingConfigurationCmafEncryptionPtrInput `pulumi:"encryption"`
	// A list of HLS manifest configurations.
	HlsManifests PackagingConfigurationHlsManifestArrayInput `pulumi:"hlsManifests"`
	// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
	IncludeEncoderConfigurationInSegments pulumi.BoolPtrInput `pulumi:"includeEncoderConfigurationInSegments"`
	SegmentDurationSeconds                pulumi.IntPtrInput  `pulumi:"segmentDurationSeconds"`
}

func (PackagingConfigurationCmafPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationCmafPackage)(nil)).Elem()
}

func (i PackagingConfigurationCmafPackageArgs) ToPackagingConfigurationCmafPackageOutput() PackagingConfigurationCmafPackageOutput {
	return i.ToPackagingConfigurationCmafPackageOutputWithContext(context.Background())
}

func (i PackagingConfigurationCmafPackageArgs) ToPackagingConfigurationCmafPackageOutputWithContext(ctx context.Context) PackagingConfigurationCmafPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationCmafPackageOutput)
}

func (i PackagingConfigurationCmafPackageArgs) ToPackagingConfigurationCmafPackagePtrOutput() PackagingConfigurationCmafPackagePtrOutput {
	return i.ToPackagingConfigurationCmafPackagePtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationCmafPackageArgs) ToPackagingConfigurationCmafPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationCmafPackageOutput).ToPackagingConfigurationCmafPackagePtrOutputWithContext(ctx)
}

// PackagingConfigurationCmafPackagePtrInput is an input type that accepts PackagingConfigurationCmafPackageArgs, PackagingConfigurationCmafPackagePtr and PackagingConfigurationCmafPackagePtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationCmafPackagePtrInput` via:
//
//          PackagingConfigurationCmafPackageArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationCmafPackagePtrInput interface {
	pulumi.Input

	ToPackagingConfigurationCmafPackagePtrOutput() PackagingConfigurationCmafPackagePtrOutput
	ToPackagingConfigurationCmafPackagePtrOutputWithContext(context.Context) PackagingConfigurationCmafPackagePtrOutput
}

type packagingConfigurationCmafPackagePtrType PackagingConfigurationCmafPackageArgs

func PackagingConfigurationCmafPackagePtr(v *PackagingConfigurationCmafPackageArgs) PackagingConfigurationCmafPackagePtrInput {
	return (*packagingConfigurationCmafPackagePtrType)(v)
}

func (*packagingConfigurationCmafPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationCmafPackage)(nil)).Elem()
}

func (i *packagingConfigurationCmafPackagePtrType) ToPackagingConfigurationCmafPackagePtrOutput() PackagingConfigurationCmafPackagePtrOutput {
	return i.ToPackagingConfigurationCmafPackagePtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationCmafPackagePtrType) ToPackagingConfigurationCmafPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationCmafPackagePtrOutput)
}

// A CMAF packaging configuration.
type PackagingConfigurationCmafPackageOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationCmafPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationCmafPackage)(nil)).Elem()
}

func (o PackagingConfigurationCmafPackageOutput) ToPackagingConfigurationCmafPackageOutput() PackagingConfigurationCmafPackageOutput {
	return o
}

func (o PackagingConfigurationCmafPackageOutput) ToPackagingConfigurationCmafPackageOutputWithContext(ctx context.Context) PackagingConfigurationCmafPackageOutput {
	return o
}

func (o PackagingConfigurationCmafPackageOutput) ToPackagingConfigurationCmafPackagePtrOutput() PackagingConfigurationCmafPackagePtrOutput {
	return o.ToPackagingConfigurationCmafPackagePtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationCmafPackageOutput) ToPackagingConfigurationCmafPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationCmafPackage) *PackagingConfigurationCmafPackage {
		return &v
	}).(PackagingConfigurationCmafPackagePtrOutput)
}

func (o PackagingConfigurationCmafPackageOutput) Encryption() PackagingConfigurationCmafEncryptionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationCmafPackage) *PackagingConfigurationCmafEncryption { return v.Encryption }).(PackagingConfigurationCmafEncryptionPtrOutput)
}

// A list of HLS manifest configurations.
func (o PackagingConfigurationCmafPackageOutput) HlsManifests() PackagingConfigurationHlsManifestArrayOutput {
	return o.ApplyT(func(v PackagingConfigurationCmafPackage) []PackagingConfigurationHlsManifest { return v.HlsManifests }).(PackagingConfigurationHlsManifestArrayOutput)
}

// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
func (o PackagingConfigurationCmafPackageOutput) IncludeEncoderConfigurationInSegments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationCmafPackage) *bool { return v.IncludeEncoderConfigurationInSegments }).(pulumi.BoolPtrOutput)
}

func (o PackagingConfigurationCmafPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationCmafPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

type PackagingConfigurationCmafPackagePtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationCmafPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationCmafPackage)(nil)).Elem()
}

func (o PackagingConfigurationCmafPackagePtrOutput) ToPackagingConfigurationCmafPackagePtrOutput() PackagingConfigurationCmafPackagePtrOutput {
	return o
}

func (o PackagingConfigurationCmafPackagePtrOutput) ToPackagingConfigurationCmafPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationCmafPackagePtrOutput {
	return o
}

func (o PackagingConfigurationCmafPackagePtrOutput) Elem() PackagingConfigurationCmafPackageOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafPackage) PackagingConfigurationCmafPackage {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationCmafPackage
		return ret
	}).(PackagingConfigurationCmafPackageOutput)
}

func (o PackagingConfigurationCmafPackagePtrOutput) Encryption() PackagingConfigurationCmafEncryptionPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafPackage) *PackagingConfigurationCmafEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(PackagingConfigurationCmafEncryptionPtrOutput)
}

// A list of HLS manifest configurations.
func (o PackagingConfigurationCmafPackagePtrOutput) HlsManifests() PackagingConfigurationHlsManifestArrayOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafPackage) []PackagingConfigurationHlsManifest {
		if v == nil {
			return nil
		}
		return v.HlsManifests
	}).(PackagingConfigurationHlsManifestArrayOutput)
}

// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
func (o PackagingConfigurationCmafPackagePtrOutput) IncludeEncoderConfigurationInSegments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafPackage) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeEncoderConfigurationInSegments
	}).(pulumi.BoolPtrOutput)
}

func (o PackagingConfigurationCmafPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationCmafPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
type PackagingConfigurationDashEncryption struct {
	SpekeKeyProvider PackagingConfigurationSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// PackagingConfigurationDashEncryptionInput is an input type that accepts PackagingConfigurationDashEncryptionArgs and PackagingConfigurationDashEncryptionOutput values.
// You can construct a concrete instance of `PackagingConfigurationDashEncryptionInput` via:
//
//          PackagingConfigurationDashEncryptionArgs{...}
type PackagingConfigurationDashEncryptionInput interface {
	pulumi.Input

	ToPackagingConfigurationDashEncryptionOutput() PackagingConfigurationDashEncryptionOutput
	ToPackagingConfigurationDashEncryptionOutputWithContext(context.Context) PackagingConfigurationDashEncryptionOutput
}

// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
type PackagingConfigurationDashEncryptionArgs struct {
	SpekeKeyProvider PackagingConfigurationSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (PackagingConfigurationDashEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationDashEncryption)(nil)).Elem()
}

func (i PackagingConfigurationDashEncryptionArgs) ToPackagingConfigurationDashEncryptionOutput() PackagingConfigurationDashEncryptionOutput {
	return i.ToPackagingConfigurationDashEncryptionOutputWithContext(context.Background())
}

func (i PackagingConfigurationDashEncryptionArgs) ToPackagingConfigurationDashEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationDashEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashEncryptionOutput)
}

func (i PackagingConfigurationDashEncryptionArgs) ToPackagingConfigurationDashEncryptionPtrOutput() PackagingConfigurationDashEncryptionPtrOutput {
	return i.ToPackagingConfigurationDashEncryptionPtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationDashEncryptionArgs) ToPackagingConfigurationDashEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationDashEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashEncryptionOutput).ToPackagingConfigurationDashEncryptionPtrOutputWithContext(ctx)
}

// PackagingConfigurationDashEncryptionPtrInput is an input type that accepts PackagingConfigurationDashEncryptionArgs, PackagingConfigurationDashEncryptionPtr and PackagingConfigurationDashEncryptionPtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationDashEncryptionPtrInput` via:
//
//          PackagingConfigurationDashEncryptionArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationDashEncryptionPtrInput interface {
	pulumi.Input

	ToPackagingConfigurationDashEncryptionPtrOutput() PackagingConfigurationDashEncryptionPtrOutput
	ToPackagingConfigurationDashEncryptionPtrOutputWithContext(context.Context) PackagingConfigurationDashEncryptionPtrOutput
}

type packagingConfigurationDashEncryptionPtrType PackagingConfigurationDashEncryptionArgs

func PackagingConfigurationDashEncryptionPtr(v *PackagingConfigurationDashEncryptionArgs) PackagingConfigurationDashEncryptionPtrInput {
	return (*packagingConfigurationDashEncryptionPtrType)(v)
}

func (*packagingConfigurationDashEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationDashEncryption)(nil)).Elem()
}

func (i *packagingConfigurationDashEncryptionPtrType) ToPackagingConfigurationDashEncryptionPtrOutput() PackagingConfigurationDashEncryptionPtrOutput {
	return i.ToPackagingConfigurationDashEncryptionPtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationDashEncryptionPtrType) ToPackagingConfigurationDashEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationDashEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashEncryptionPtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
type PackagingConfigurationDashEncryptionOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationDashEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationDashEncryption)(nil)).Elem()
}

func (o PackagingConfigurationDashEncryptionOutput) ToPackagingConfigurationDashEncryptionOutput() PackagingConfigurationDashEncryptionOutput {
	return o
}

func (o PackagingConfigurationDashEncryptionOutput) ToPackagingConfigurationDashEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationDashEncryptionOutput {
	return o
}

func (o PackagingConfigurationDashEncryptionOutput) ToPackagingConfigurationDashEncryptionPtrOutput() PackagingConfigurationDashEncryptionPtrOutput {
	return o.ToPackagingConfigurationDashEncryptionPtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationDashEncryptionOutput) ToPackagingConfigurationDashEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationDashEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationDashEncryption) *PackagingConfigurationDashEncryption {
		return &v
	}).(PackagingConfigurationDashEncryptionPtrOutput)
}

func (o PackagingConfigurationDashEncryptionOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderOutput {
	return o.ApplyT(func(v PackagingConfigurationDashEncryption) PackagingConfigurationSpekeKeyProvider {
		return v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderOutput)
}

type PackagingConfigurationDashEncryptionPtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationDashEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationDashEncryption)(nil)).Elem()
}

func (o PackagingConfigurationDashEncryptionPtrOutput) ToPackagingConfigurationDashEncryptionPtrOutput() PackagingConfigurationDashEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationDashEncryptionPtrOutput) ToPackagingConfigurationDashEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationDashEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationDashEncryptionPtrOutput) Elem() PackagingConfigurationDashEncryptionOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashEncryption) PackagingConfigurationDashEncryption {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationDashEncryption
		return ret
	}).(PackagingConfigurationDashEncryptionOutput)
}

func (o PackagingConfigurationDashEncryptionPtrOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashEncryption) *PackagingConfigurationSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderPtrOutput)
}

// A DASH manifest configuration.
type PackagingConfigurationDashManifest struct {
	// Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
	ManifestLayout *string `pulumi:"manifestLayout"`
	ManifestName   *string `pulumi:"manifestName"`
	// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
	MinBufferTimeSeconds *int `pulumi:"minBufferTimeSeconds"`
	// The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
	Profile         *string                                `pulumi:"profile"`
	StreamSelection *PackagingConfigurationStreamSelection `pulumi:"streamSelection"`
}

// PackagingConfigurationDashManifestInput is an input type that accepts PackagingConfigurationDashManifestArgs and PackagingConfigurationDashManifestOutput values.
// You can construct a concrete instance of `PackagingConfigurationDashManifestInput` via:
//
//          PackagingConfigurationDashManifestArgs{...}
type PackagingConfigurationDashManifestInput interface {
	pulumi.Input

	ToPackagingConfigurationDashManifestOutput() PackagingConfigurationDashManifestOutput
	ToPackagingConfigurationDashManifestOutputWithContext(context.Context) PackagingConfigurationDashManifestOutput
}

// A DASH manifest configuration.
type PackagingConfigurationDashManifestArgs struct {
	// Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
	ManifestLayout pulumi.StringPtrInput `pulumi:"manifestLayout"`
	ManifestName   pulumi.StringPtrInput `pulumi:"manifestName"`
	// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
	MinBufferTimeSeconds pulumi.IntPtrInput `pulumi:"minBufferTimeSeconds"`
	// The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
	Profile         pulumi.StringPtrInput                         `pulumi:"profile"`
	StreamSelection PackagingConfigurationStreamSelectionPtrInput `pulumi:"streamSelection"`
}

func (PackagingConfigurationDashManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationDashManifest)(nil)).Elem()
}

func (i PackagingConfigurationDashManifestArgs) ToPackagingConfigurationDashManifestOutput() PackagingConfigurationDashManifestOutput {
	return i.ToPackagingConfigurationDashManifestOutputWithContext(context.Background())
}

func (i PackagingConfigurationDashManifestArgs) ToPackagingConfigurationDashManifestOutputWithContext(ctx context.Context) PackagingConfigurationDashManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashManifestOutput)
}

// PackagingConfigurationDashManifestArrayInput is an input type that accepts PackagingConfigurationDashManifestArray and PackagingConfigurationDashManifestArrayOutput values.
// You can construct a concrete instance of `PackagingConfigurationDashManifestArrayInput` via:
//
//          PackagingConfigurationDashManifestArray{ PackagingConfigurationDashManifestArgs{...} }
type PackagingConfigurationDashManifestArrayInput interface {
	pulumi.Input

	ToPackagingConfigurationDashManifestArrayOutput() PackagingConfigurationDashManifestArrayOutput
	ToPackagingConfigurationDashManifestArrayOutputWithContext(context.Context) PackagingConfigurationDashManifestArrayOutput
}

type PackagingConfigurationDashManifestArray []PackagingConfigurationDashManifestInput

func (PackagingConfigurationDashManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationDashManifest)(nil)).Elem()
}

func (i PackagingConfigurationDashManifestArray) ToPackagingConfigurationDashManifestArrayOutput() PackagingConfigurationDashManifestArrayOutput {
	return i.ToPackagingConfigurationDashManifestArrayOutputWithContext(context.Background())
}

func (i PackagingConfigurationDashManifestArray) ToPackagingConfigurationDashManifestArrayOutputWithContext(ctx context.Context) PackagingConfigurationDashManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashManifestArrayOutput)
}

// A DASH manifest configuration.
type PackagingConfigurationDashManifestOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationDashManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationDashManifest)(nil)).Elem()
}

func (o PackagingConfigurationDashManifestOutput) ToPackagingConfigurationDashManifestOutput() PackagingConfigurationDashManifestOutput {
	return o
}

func (o PackagingConfigurationDashManifestOutput) ToPackagingConfigurationDashManifestOutputWithContext(ctx context.Context) PackagingConfigurationDashManifestOutput {
	return o
}

// Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
func (o PackagingConfigurationDashManifestOutput) ManifestLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashManifest) *string { return v.ManifestLayout }).(pulumi.StringPtrOutput)
}

func (o PackagingConfigurationDashManifestOutput) ManifestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashManifest) *string { return v.ManifestName }).(pulumi.StringPtrOutput)
}

// Minimum duration (in seconds) that a player will buffer media before starting the presentation.
func (o PackagingConfigurationDashManifestOutput) MinBufferTimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashManifest) *int { return v.MinBufferTimeSeconds }).(pulumi.IntPtrOutput)
}

// The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
func (o PackagingConfigurationDashManifestOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashManifest) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

func (o PackagingConfigurationDashManifestOutput) StreamSelection() PackagingConfigurationStreamSelectionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashManifest) *PackagingConfigurationStreamSelection {
		return v.StreamSelection
	}).(PackagingConfigurationStreamSelectionPtrOutput)
}

type PackagingConfigurationDashManifestArrayOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationDashManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationDashManifest)(nil)).Elem()
}

func (o PackagingConfigurationDashManifestArrayOutput) ToPackagingConfigurationDashManifestArrayOutput() PackagingConfigurationDashManifestArrayOutput {
	return o
}

func (o PackagingConfigurationDashManifestArrayOutput) ToPackagingConfigurationDashManifestArrayOutputWithContext(ctx context.Context) PackagingConfigurationDashManifestArrayOutput {
	return o
}

func (o PackagingConfigurationDashManifestArrayOutput) Index(i pulumi.IntInput) PackagingConfigurationDashManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PackagingConfigurationDashManifest {
		return vs[0].([]PackagingConfigurationDashManifest)[vs[1].(int)]
	}).(PackagingConfigurationDashManifestOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
type PackagingConfigurationDashPackage struct {
	// A list of DASH manifest configurations.
	DashManifests []PackagingConfigurationDashManifest  `pulumi:"dashManifests"`
	Encryption    *PackagingConfigurationDashEncryption `pulumi:"encryption"`
	// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
	IncludeEncoderConfigurationInSegments *bool `pulumi:"includeEncoderConfigurationInSegments"`
	// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Asset contains SCTE-35 ad markers.
	PeriodTriggers         []string `pulumi:"periodTriggers"`
	SegmentDurationSeconds *int     `pulumi:"segmentDurationSeconds"`
	// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
	SegmentTemplateFormat *string `pulumi:"segmentTemplateFormat"`
}

// PackagingConfigurationDashPackageInput is an input type that accepts PackagingConfigurationDashPackageArgs and PackagingConfigurationDashPackageOutput values.
// You can construct a concrete instance of `PackagingConfigurationDashPackageInput` via:
//
//          PackagingConfigurationDashPackageArgs{...}
type PackagingConfigurationDashPackageInput interface {
	pulumi.Input

	ToPackagingConfigurationDashPackageOutput() PackagingConfigurationDashPackageOutput
	ToPackagingConfigurationDashPackageOutputWithContext(context.Context) PackagingConfigurationDashPackageOutput
}

// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
type PackagingConfigurationDashPackageArgs struct {
	// A list of DASH manifest configurations.
	DashManifests PackagingConfigurationDashManifestArrayInput `pulumi:"dashManifests"`
	Encryption    PackagingConfigurationDashEncryptionPtrInput `pulumi:"encryption"`
	// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
	IncludeEncoderConfigurationInSegments pulumi.BoolPtrInput `pulumi:"includeEncoderConfigurationInSegments"`
	// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Asset contains SCTE-35 ad markers.
	PeriodTriggers         pulumi.StringArrayInput `pulumi:"periodTriggers"`
	SegmentDurationSeconds pulumi.IntPtrInput      `pulumi:"segmentDurationSeconds"`
	// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
	SegmentTemplateFormat pulumi.StringPtrInput `pulumi:"segmentTemplateFormat"`
}

func (PackagingConfigurationDashPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationDashPackage)(nil)).Elem()
}

func (i PackagingConfigurationDashPackageArgs) ToPackagingConfigurationDashPackageOutput() PackagingConfigurationDashPackageOutput {
	return i.ToPackagingConfigurationDashPackageOutputWithContext(context.Background())
}

func (i PackagingConfigurationDashPackageArgs) ToPackagingConfigurationDashPackageOutputWithContext(ctx context.Context) PackagingConfigurationDashPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashPackageOutput)
}

func (i PackagingConfigurationDashPackageArgs) ToPackagingConfigurationDashPackagePtrOutput() PackagingConfigurationDashPackagePtrOutput {
	return i.ToPackagingConfigurationDashPackagePtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationDashPackageArgs) ToPackagingConfigurationDashPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationDashPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashPackageOutput).ToPackagingConfigurationDashPackagePtrOutputWithContext(ctx)
}

// PackagingConfigurationDashPackagePtrInput is an input type that accepts PackagingConfigurationDashPackageArgs, PackagingConfigurationDashPackagePtr and PackagingConfigurationDashPackagePtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationDashPackagePtrInput` via:
//
//          PackagingConfigurationDashPackageArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationDashPackagePtrInput interface {
	pulumi.Input

	ToPackagingConfigurationDashPackagePtrOutput() PackagingConfigurationDashPackagePtrOutput
	ToPackagingConfigurationDashPackagePtrOutputWithContext(context.Context) PackagingConfigurationDashPackagePtrOutput
}

type packagingConfigurationDashPackagePtrType PackagingConfigurationDashPackageArgs

func PackagingConfigurationDashPackagePtr(v *PackagingConfigurationDashPackageArgs) PackagingConfigurationDashPackagePtrInput {
	return (*packagingConfigurationDashPackagePtrType)(v)
}

func (*packagingConfigurationDashPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationDashPackage)(nil)).Elem()
}

func (i *packagingConfigurationDashPackagePtrType) ToPackagingConfigurationDashPackagePtrOutput() PackagingConfigurationDashPackagePtrOutput {
	return i.ToPackagingConfigurationDashPackagePtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationDashPackagePtrType) ToPackagingConfigurationDashPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationDashPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationDashPackagePtrOutput)
}

// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
type PackagingConfigurationDashPackageOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationDashPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationDashPackage)(nil)).Elem()
}

func (o PackagingConfigurationDashPackageOutput) ToPackagingConfigurationDashPackageOutput() PackagingConfigurationDashPackageOutput {
	return o
}

func (o PackagingConfigurationDashPackageOutput) ToPackagingConfigurationDashPackageOutputWithContext(ctx context.Context) PackagingConfigurationDashPackageOutput {
	return o
}

func (o PackagingConfigurationDashPackageOutput) ToPackagingConfigurationDashPackagePtrOutput() PackagingConfigurationDashPackagePtrOutput {
	return o.ToPackagingConfigurationDashPackagePtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationDashPackageOutput) ToPackagingConfigurationDashPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationDashPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationDashPackage) *PackagingConfigurationDashPackage {
		return &v
	}).(PackagingConfigurationDashPackagePtrOutput)
}

// A list of DASH manifest configurations.
func (o PackagingConfigurationDashPackageOutput) DashManifests() PackagingConfigurationDashManifestArrayOutput {
	return o.ApplyT(func(v PackagingConfigurationDashPackage) []PackagingConfigurationDashManifest { return v.DashManifests }).(PackagingConfigurationDashManifestArrayOutput)
}

func (o PackagingConfigurationDashPackageOutput) Encryption() PackagingConfigurationDashEncryptionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashPackage) *PackagingConfigurationDashEncryption { return v.Encryption }).(PackagingConfigurationDashEncryptionPtrOutput)
}

// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
func (o PackagingConfigurationDashPackageOutput) IncludeEncoderConfigurationInSegments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashPackage) *bool { return v.IncludeEncoderConfigurationInSegments }).(pulumi.BoolPtrOutput)
}

// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Asset contains SCTE-35 ad markers.
func (o PackagingConfigurationDashPackageOutput) PeriodTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PackagingConfigurationDashPackage) []string { return v.PeriodTriggers }).(pulumi.StringArrayOutput)
}

func (o PackagingConfigurationDashPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
func (o PackagingConfigurationDashPackageOutput) SegmentTemplateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationDashPackage) *string { return v.SegmentTemplateFormat }).(pulumi.StringPtrOutput)
}

type PackagingConfigurationDashPackagePtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationDashPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationDashPackage)(nil)).Elem()
}

func (o PackagingConfigurationDashPackagePtrOutput) ToPackagingConfigurationDashPackagePtrOutput() PackagingConfigurationDashPackagePtrOutput {
	return o
}

func (o PackagingConfigurationDashPackagePtrOutput) ToPackagingConfigurationDashPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationDashPackagePtrOutput {
	return o
}

func (o PackagingConfigurationDashPackagePtrOutput) Elem() PackagingConfigurationDashPackageOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) PackagingConfigurationDashPackage {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationDashPackage
		return ret
	}).(PackagingConfigurationDashPackageOutput)
}

// A list of DASH manifest configurations.
func (o PackagingConfigurationDashPackagePtrOutput) DashManifests() PackagingConfigurationDashManifestArrayOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) []PackagingConfigurationDashManifest {
		if v == nil {
			return nil
		}
		return v.DashManifests
	}).(PackagingConfigurationDashManifestArrayOutput)
}

func (o PackagingConfigurationDashPackagePtrOutput) Encryption() PackagingConfigurationDashEncryptionPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) *PackagingConfigurationDashEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(PackagingConfigurationDashEncryptionPtrOutput)
}

// When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
func (o PackagingConfigurationDashPackagePtrOutput) IncludeEncoderConfigurationInSegments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeEncoderConfigurationInSegments
	}).(pulumi.BoolPtrOutput)
}

// A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Asset contains SCTE-35 ad markers.
func (o PackagingConfigurationDashPackagePtrOutput) PeriodTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) []string {
		if v == nil {
			return nil
		}
		return v.PeriodTriggers
	}).(pulumi.StringArrayOutput)
}

func (o PackagingConfigurationDashPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

// Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
func (o PackagingConfigurationDashPackagePtrOutput) SegmentTemplateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationDashPackage) *string {
		if v == nil {
			return nil
		}
		return v.SegmentTemplateFormat
	}).(pulumi.StringPtrOutput)
}

// An HTTP Live Streaming (HLS) encryption configuration.
type PackagingConfigurationHlsEncryption struct {
	// An HTTP Live Streaming (HLS) encryption configuration.
	ConstantInitializationVector *string `pulumi:"constantInitializationVector"`
	// The encryption method to use.
	EncryptionMethod *string                                `pulumi:"encryptionMethod"`
	SpekeKeyProvider PackagingConfigurationSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// PackagingConfigurationHlsEncryptionInput is an input type that accepts PackagingConfigurationHlsEncryptionArgs and PackagingConfigurationHlsEncryptionOutput values.
// You can construct a concrete instance of `PackagingConfigurationHlsEncryptionInput` via:
//
//          PackagingConfigurationHlsEncryptionArgs{...}
type PackagingConfigurationHlsEncryptionInput interface {
	pulumi.Input

	ToPackagingConfigurationHlsEncryptionOutput() PackagingConfigurationHlsEncryptionOutput
	ToPackagingConfigurationHlsEncryptionOutputWithContext(context.Context) PackagingConfigurationHlsEncryptionOutput
}

// An HTTP Live Streaming (HLS) encryption configuration.
type PackagingConfigurationHlsEncryptionArgs struct {
	// An HTTP Live Streaming (HLS) encryption configuration.
	ConstantInitializationVector pulumi.StringPtrInput `pulumi:"constantInitializationVector"`
	// The encryption method to use.
	EncryptionMethod pulumi.StringPtrInput                       `pulumi:"encryptionMethod"`
	SpekeKeyProvider PackagingConfigurationSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (PackagingConfigurationHlsEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationHlsEncryption)(nil)).Elem()
}

func (i PackagingConfigurationHlsEncryptionArgs) ToPackagingConfigurationHlsEncryptionOutput() PackagingConfigurationHlsEncryptionOutput {
	return i.ToPackagingConfigurationHlsEncryptionOutputWithContext(context.Background())
}

func (i PackagingConfigurationHlsEncryptionArgs) ToPackagingConfigurationHlsEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationHlsEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsEncryptionOutput)
}

func (i PackagingConfigurationHlsEncryptionArgs) ToPackagingConfigurationHlsEncryptionPtrOutput() PackagingConfigurationHlsEncryptionPtrOutput {
	return i.ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationHlsEncryptionArgs) ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsEncryptionOutput).ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(ctx)
}

// PackagingConfigurationHlsEncryptionPtrInput is an input type that accepts PackagingConfigurationHlsEncryptionArgs, PackagingConfigurationHlsEncryptionPtr and PackagingConfigurationHlsEncryptionPtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationHlsEncryptionPtrInput` via:
//
//          PackagingConfigurationHlsEncryptionArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationHlsEncryptionPtrInput interface {
	pulumi.Input

	ToPackagingConfigurationHlsEncryptionPtrOutput() PackagingConfigurationHlsEncryptionPtrOutput
	ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(context.Context) PackagingConfigurationHlsEncryptionPtrOutput
}

type packagingConfigurationHlsEncryptionPtrType PackagingConfigurationHlsEncryptionArgs

func PackagingConfigurationHlsEncryptionPtr(v *PackagingConfigurationHlsEncryptionArgs) PackagingConfigurationHlsEncryptionPtrInput {
	return (*packagingConfigurationHlsEncryptionPtrType)(v)
}

func (*packagingConfigurationHlsEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationHlsEncryption)(nil)).Elem()
}

func (i *packagingConfigurationHlsEncryptionPtrType) ToPackagingConfigurationHlsEncryptionPtrOutput() PackagingConfigurationHlsEncryptionPtrOutput {
	return i.ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationHlsEncryptionPtrType) ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsEncryptionPtrOutput)
}

// An HTTP Live Streaming (HLS) encryption configuration.
type PackagingConfigurationHlsEncryptionOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationHlsEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationHlsEncryption)(nil)).Elem()
}

func (o PackagingConfigurationHlsEncryptionOutput) ToPackagingConfigurationHlsEncryptionOutput() PackagingConfigurationHlsEncryptionOutput {
	return o
}

func (o PackagingConfigurationHlsEncryptionOutput) ToPackagingConfigurationHlsEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationHlsEncryptionOutput {
	return o
}

func (o PackagingConfigurationHlsEncryptionOutput) ToPackagingConfigurationHlsEncryptionPtrOutput() PackagingConfigurationHlsEncryptionPtrOutput {
	return o.ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationHlsEncryptionOutput) ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationHlsEncryption) *PackagingConfigurationHlsEncryption {
		return &v
	}).(PackagingConfigurationHlsEncryptionPtrOutput)
}

// An HTTP Live Streaming (HLS) encryption configuration.
func (o PackagingConfigurationHlsEncryptionOutput) ConstantInitializationVector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsEncryption) *string { return v.ConstantInitializationVector }).(pulumi.StringPtrOutput)
}

// The encryption method to use.
func (o PackagingConfigurationHlsEncryptionOutput) EncryptionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsEncryption) *string { return v.EncryptionMethod }).(pulumi.StringPtrOutput)
}

func (o PackagingConfigurationHlsEncryptionOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsEncryption) PackagingConfigurationSpekeKeyProvider {
		return v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderOutput)
}

type PackagingConfigurationHlsEncryptionPtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationHlsEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationHlsEncryption)(nil)).Elem()
}

func (o PackagingConfigurationHlsEncryptionPtrOutput) ToPackagingConfigurationHlsEncryptionPtrOutput() PackagingConfigurationHlsEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationHlsEncryptionPtrOutput) ToPackagingConfigurationHlsEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationHlsEncryptionPtrOutput) Elem() PackagingConfigurationHlsEncryptionOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsEncryption) PackagingConfigurationHlsEncryption {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationHlsEncryption
		return ret
	}).(PackagingConfigurationHlsEncryptionOutput)
}

// An HTTP Live Streaming (HLS) encryption configuration.
func (o PackagingConfigurationHlsEncryptionPtrOutput) ConstantInitializationVector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsEncryption) *string {
		if v == nil {
			return nil
		}
		return v.ConstantInitializationVector
	}).(pulumi.StringPtrOutput)
}

// The encryption method to use.
func (o PackagingConfigurationHlsEncryptionPtrOutput) EncryptionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsEncryption) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionMethod
	}).(pulumi.StringPtrOutput)
}

func (o PackagingConfigurationHlsEncryptionPtrOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsEncryption) *PackagingConfigurationSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderPtrOutput)
}

// An HTTP Live Streaming (HLS) manifest configuration.
type PackagingConfigurationHlsManifest struct {
	// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source.
	AdMarkers *string `pulumi:"adMarkers"`
	// When enabled, an I-Frame only stream will be included in the output.
	IncludeIframeOnlyStream *bool   `pulumi:"includeIframeOnlyStream"`
	ManifestName            *string `pulumi:"manifestName"`
	// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
	ProgramDateTimeIntervalSeconds *int `pulumi:"programDateTimeIntervalSeconds"`
	// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
	RepeatExtXKey   *bool                                  `pulumi:"repeatExtXKey"`
	StreamSelection *PackagingConfigurationStreamSelection `pulumi:"streamSelection"`
}

// PackagingConfigurationHlsManifestInput is an input type that accepts PackagingConfigurationHlsManifestArgs and PackagingConfigurationHlsManifestOutput values.
// You can construct a concrete instance of `PackagingConfigurationHlsManifestInput` via:
//
//          PackagingConfigurationHlsManifestArgs{...}
type PackagingConfigurationHlsManifestInput interface {
	pulumi.Input

	ToPackagingConfigurationHlsManifestOutput() PackagingConfigurationHlsManifestOutput
	ToPackagingConfigurationHlsManifestOutputWithContext(context.Context) PackagingConfigurationHlsManifestOutput
}

// An HTTP Live Streaming (HLS) manifest configuration.
type PackagingConfigurationHlsManifestArgs struct {
	// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source.
	AdMarkers pulumi.StringPtrInput `pulumi:"adMarkers"`
	// When enabled, an I-Frame only stream will be included in the output.
	IncludeIframeOnlyStream pulumi.BoolPtrInput   `pulumi:"includeIframeOnlyStream"`
	ManifestName            pulumi.StringPtrInput `pulumi:"manifestName"`
	// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
	ProgramDateTimeIntervalSeconds pulumi.IntPtrInput `pulumi:"programDateTimeIntervalSeconds"`
	// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
	RepeatExtXKey   pulumi.BoolPtrInput                           `pulumi:"repeatExtXKey"`
	StreamSelection PackagingConfigurationStreamSelectionPtrInput `pulumi:"streamSelection"`
}

func (PackagingConfigurationHlsManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationHlsManifest)(nil)).Elem()
}

func (i PackagingConfigurationHlsManifestArgs) ToPackagingConfigurationHlsManifestOutput() PackagingConfigurationHlsManifestOutput {
	return i.ToPackagingConfigurationHlsManifestOutputWithContext(context.Background())
}

func (i PackagingConfigurationHlsManifestArgs) ToPackagingConfigurationHlsManifestOutputWithContext(ctx context.Context) PackagingConfigurationHlsManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsManifestOutput)
}

// PackagingConfigurationHlsManifestArrayInput is an input type that accepts PackagingConfigurationHlsManifestArray and PackagingConfigurationHlsManifestArrayOutput values.
// You can construct a concrete instance of `PackagingConfigurationHlsManifestArrayInput` via:
//
//          PackagingConfigurationHlsManifestArray{ PackagingConfigurationHlsManifestArgs{...} }
type PackagingConfigurationHlsManifestArrayInput interface {
	pulumi.Input

	ToPackagingConfigurationHlsManifestArrayOutput() PackagingConfigurationHlsManifestArrayOutput
	ToPackagingConfigurationHlsManifestArrayOutputWithContext(context.Context) PackagingConfigurationHlsManifestArrayOutput
}

type PackagingConfigurationHlsManifestArray []PackagingConfigurationHlsManifestInput

func (PackagingConfigurationHlsManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationHlsManifest)(nil)).Elem()
}

func (i PackagingConfigurationHlsManifestArray) ToPackagingConfigurationHlsManifestArrayOutput() PackagingConfigurationHlsManifestArrayOutput {
	return i.ToPackagingConfigurationHlsManifestArrayOutputWithContext(context.Background())
}

func (i PackagingConfigurationHlsManifestArray) ToPackagingConfigurationHlsManifestArrayOutputWithContext(ctx context.Context) PackagingConfigurationHlsManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsManifestArrayOutput)
}

// An HTTP Live Streaming (HLS) manifest configuration.
type PackagingConfigurationHlsManifestOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationHlsManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationHlsManifest)(nil)).Elem()
}

func (o PackagingConfigurationHlsManifestOutput) ToPackagingConfigurationHlsManifestOutput() PackagingConfigurationHlsManifestOutput {
	return o
}

func (o PackagingConfigurationHlsManifestOutput) ToPackagingConfigurationHlsManifestOutputWithContext(ctx context.Context) PackagingConfigurationHlsManifestOutput {
	return o
}

// This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source.
func (o PackagingConfigurationHlsManifestOutput) AdMarkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsManifest) *string { return v.AdMarkers }).(pulumi.StringPtrOutput)
}

// When enabled, an I-Frame only stream will be included in the output.
func (o PackagingConfigurationHlsManifestOutput) IncludeIframeOnlyStream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsManifest) *bool { return v.IncludeIframeOnlyStream }).(pulumi.BoolPtrOutput)
}

func (o PackagingConfigurationHlsManifestOutput) ManifestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsManifest) *string { return v.ManifestName }).(pulumi.StringPtrOutput)
}

// The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
func (o PackagingConfigurationHlsManifestOutput) ProgramDateTimeIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsManifest) *int { return v.ProgramDateTimeIntervalSeconds }).(pulumi.IntPtrOutput)
}

// When enabled, the EXT-X-KEY tag will be repeated in output manifests.
func (o PackagingConfigurationHlsManifestOutput) RepeatExtXKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsManifest) *bool { return v.RepeatExtXKey }).(pulumi.BoolPtrOutput)
}

func (o PackagingConfigurationHlsManifestOutput) StreamSelection() PackagingConfigurationStreamSelectionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsManifest) *PackagingConfigurationStreamSelection {
		return v.StreamSelection
	}).(PackagingConfigurationStreamSelectionPtrOutput)
}

type PackagingConfigurationHlsManifestArrayOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationHlsManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationHlsManifest)(nil)).Elem()
}

func (o PackagingConfigurationHlsManifestArrayOutput) ToPackagingConfigurationHlsManifestArrayOutput() PackagingConfigurationHlsManifestArrayOutput {
	return o
}

func (o PackagingConfigurationHlsManifestArrayOutput) ToPackagingConfigurationHlsManifestArrayOutputWithContext(ctx context.Context) PackagingConfigurationHlsManifestArrayOutput {
	return o
}

func (o PackagingConfigurationHlsManifestArrayOutput) Index(i pulumi.IntInput) PackagingConfigurationHlsManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PackagingConfigurationHlsManifest {
		return vs[0].([]PackagingConfigurationHlsManifest)[vs[1].(int)]
	}).(PackagingConfigurationHlsManifestOutput)
}

// An HTTP Live Streaming (HLS) packaging configuration.
type PackagingConfigurationHlsPackage struct {
	Encryption *PackagingConfigurationHlsEncryption `pulumi:"encryption"`
	// A list of HLS manifest configurations.
	HlsManifests           []PackagingConfigurationHlsManifest `pulumi:"hlsManifests"`
	SegmentDurationSeconds *int                                `pulumi:"segmentDurationSeconds"`
	// When enabled, audio streams will be placed in rendition groups in the output.
	UseAudioRenditionGroup *bool `pulumi:"useAudioRenditionGroup"`
}

// PackagingConfigurationHlsPackageInput is an input type that accepts PackagingConfigurationHlsPackageArgs and PackagingConfigurationHlsPackageOutput values.
// You can construct a concrete instance of `PackagingConfigurationHlsPackageInput` via:
//
//          PackagingConfigurationHlsPackageArgs{...}
type PackagingConfigurationHlsPackageInput interface {
	pulumi.Input

	ToPackagingConfigurationHlsPackageOutput() PackagingConfigurationHlsPackageOutput
	ToPackagingConfigurationHlsPackageOutputWithContext(context.Context) PackagingConfigurationHlsPackageOutput
}

// An HTTP Live Streaming (HLS) packaging configuration.
type PackagingConfigurationHlsPackageArgs struct {
	Encryption PackagingConfigurationHlsEncryptionPtrInput `pulumi:"encryption"`
	// A list of HLS manifest configurations.
	HlsManifests           PackagingConfigurationHlsManifestArrayInput `pulumi:"hlsManifests"`
	SegmentDurationSeconds pulumi.IntPtrInput                          `pulumi:"segmentDurationSeconds"`
	// When enabled, audio streams will be placed in rendition groups in the output.
	UseAudioRenditionGroup pulumi.BoolPtrInput `pulumi:"useAudioRenditionGroup"`
}

func (PackagingConfigurationHlsPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationHlsPackage)(nil)).Elem()
}

func (i PackagingConfigurationHlsPackageArgs) ToPackagingConfigurationHlsPackageOutput() PackagingConfigurationHlsPackageOutput {
	return i.ToPackagingConfigurationHlsPackageOutputWithContext(context.Background())
}

func (i PackagingConfigurationHlsPackageArgs) ToPackagingConfigurationHlsPackageOutputWithContext(ctx context.Context) PackagingConfigurationHlsPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsPackageOutput)
}

func (i PackagingConfigurationHlsPackageArgs) ToPackagingConfigurationHlsPackagePtrOutput() PackagingConfigurationHlsPackagePtrOutput {
	return i.ToPackagingConfigurationHlsPackagePtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationHlsPackageArgs) ToPackagingConfigurationHlsPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsPackageOutput).ToPackagingConfigurationHlsPackagePtrOutputWithContext(ctx)
}

// PackagingConfigurationHlsPackagePtrInput is an input type that accepts PackagingConfigurationHlsPackageArgs, PackagingConfigurationHlsPackagePtr and PackagingConfigurationHlsPackagePtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationHlsPackagePtrInput` via:
//
//          PackagingConfigurationHlsPackageArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationHlsPackagePtrInput interface {
	pulumi.Input

	ToPackagingConfigurationHlsPackagePtrOutput() PackagingConfigurationHlsPackagePtrOutput
	ToPackagingConfigurationHlsPackagePtrOutputWithContext(context.Context) PackagingConfigurationHlsPackagePtrOutput
}

type packagingConfigurationHlsPackagePtrType PackagingConfigurationHlsPackageArgs

func PackagingConfigurationHlsPackagePtr(v *PackagingConfigurationHlsPackageArgs) PackagingConfigurationHlsPackagePtrInput {
	return (*packagingConfigurationHlsPackagePtrType)(v)
}

func (*packagingConfigurationHlsPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationHlsPackage)(nil)).Elem()
}

func (i *packagingConfigurationHlsPackagePtrType) ToPackagingConfigurationHlsPackagePtrOutput() PackagingConfigurationHlsPackagePtrOutput {
	return i.ToPackagingConfigurationHlsPackagePtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationHlsPackagePtrType) ToPackagingConfigurationHlsPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationHlsPackagePtrOutput)
}

// An HTTP Live Streaming (HLS) packaging configuration.
type PackagingConfigurationHlsPackageOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationHlsPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationHlsPackage)(nil)).Elem()
}

func (o PackagingConfigurationHlsPackageOutput) ToPackagingConfigurationHlsPackageOutput() PackagingConfigurationHlsPackageOutput {
	return o
}

func (o PackagingConfigurationHlsPackageOutput) ToPackagingConfigurationHlsPackageOutputWithContext(ctx context.Context) PackagingConfigurationHlsPackageOutput {
	return o
}

func (o PackagingConfigurationHlsPackageOutput) ToPackagingConfigurationHlsPackagePtrOutput() PackagingConfigurationHlsPackagePtrOutput {
	return o.ToPackagingConfigurationHlsPackagePtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationHlsPackageOutput) ToPackagingConfigurationHlsPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationHlsPackage) *PackagingConfigurationHlsPackage {
		return &v
	}).(PackagingConfigurationHlsPackagePtrOutput)
}

func (o PackagingConfigurationHlsPackageOutput) Encryption() PackagingConfigurationHlsEncryptionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsPackage) *PackagingConfigurationHlsEncryption { return v.Encryption }).(PackagingConfigurationHlsEncryptionPtrOutput)
}

// A list of HLS manifest configurations.
func (o PackagingConfigurationHlsPackageOutput) HlsManifests() PackagingConfigurationHlsManifestArrayOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsPackage) []PackagingConfigurationHlsManifest { return v.HlsManifests }).(PackagingConfigurationHlsManifestArrayOutput)
}

func (o PackagingConfigurationHlsPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

// When enabled, audio streams will be placed in rendition groups in the output.
func (o PackagingConfigurationHlsPackageOutput) UseAudioRenditionGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationHlsPackage) *bool { return v.UseAudioRenditionGroup }).(pulumi.BoolPtrOutput)
}

type PackagingConfigurationHlsPackagePtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationHlsPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationHlsPackage)(nil)).Elem()
}

func (o PackagingConfigurationHlsPackagePtrOutput) ToPackagingConfigurationHlsPackagePtrOutput() PackagingConfigurationHlsPackagePtrOutput {
	return o
}

func (o PackagingConfigurationHlsPackagePtrOutput) ToPackagingConfigurationHlsPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationHlsPackagePtrOutput {
	return o
}

func (o PackagingConfigurationHlsPackagePtrOutput) Elem() PackagingConfigurationHlsPackageOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsPackage) PackagingConfigurationHlsPackage {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationHlsPackage
		return ret
	}).(PackagingConfigurationHlsPackageOutput)
}

func (o PackagingConfigurationHlsPackagePtrOutput) Encryption() PackagingConfigurationHlsEncryptionPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsPackage) *PackagingConfigurationHlsEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(PackagingConfigurationHlsEncryptionPtrOutput)
}

// A list of HLS manifest configurations.
func (o PackagingConfigurationHlsPackagePtrOutput) HlsManifests() PackagingConfigurationHlsManifestArrayOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsPackage) []PackagingConfigurationHlsManifest {
		if v == nil {
			return nil
		}
		return v.HlsManifests
	}).(PackagingConfigurationHlsManifestArrayOutput)
}

func (o PackagingConfigurationHlsPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

// When enabled, audio streams will be placed in rendition groups in the output.
func (o PackagingConfigurationHlsPackagePtrOutput) UseAudioRenditionGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationHlsPackage) *bool {
		if v == nil {
			return nil
		}
		return v.UseAudioRenditionGroup
	}).(pulumi.BoolPtrOutput)
}

// A CMAF encryption configuration.
type PackagingConfigurationMssEncryption struct {
	SpekeKeyProvider PackagingConfigurationSpekeKeyProvider `pulumi:"spekeKeyProvider"`
}

// PackagingConfigurationMssEncryptionInput is an input type that accepts PackagingConfigurationMssEncryptionArgs and PackagingConfigurationMssEncryptionOutput values.
// You can construct a concrete instance of `PackagingConfigurationMssEncryptionInput` via:
//
//          PackagingConfigurationMssEncryptionArgs{...}
type PackagingConfigurationMssEncryptionInput interface {
	pulumi.Input

	ToPackagingConfigurationMssEncryptionOutput() PackagingConfigurationMssEncryptionOutput
	ToPackagingConfigurationMssEncryptionOutputWithContext(context.Context) PackagingConfigurationMssEncryptionOutput
}

// A CMAF encryption configuration.
type PackagingConfigurationMssEncryptionArgs struct {
	SpekeKeyProvider PackagingConfigurationSpekeKeyProviderInput `pulumi:"spekeKeyProvider"`
}

func (PackagingConfigurationMssEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationMssEncryption)(nil)).Elem()
}

func (i PackagingConfigurationMssEncryptionArgs) ToPackagingConfigurationMssEncryptionOutput() PackagingConfigurationMssEncryptionOutput {
	return i.ToPackagingConfigurationMssEncryptionOutputWithContext(context.Background())
}

func (i PackagingConfigurationMssEncryptionArgs) ToPackagingConfigurationMssEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationMssEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssEncryptionOutput)
}

func (i PackagingConfigurationMssEncryptionArgs) ToPackagingConfigurationMssEncryptionPtrOutput() PackagingConfigurationMssEncryptionPtrOutput {
	return i.ToPackagingConfigurationMssEncryptionPtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationMssEncryptionArgs) ToPackagingConfigurationMssEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationMssEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssEncryptionOutput).ToPackagingConfigurationMssEncryptionPtrOutputWithContext(ctx)
}

// PackagingConfigurationMssEncryptionPtrInput is an input type that accepts PackagingConfigurationMssEncryptionArgs, PackagingConfigurationMssEncryptionPtr and PackagingConfigurationMssEncryptionPtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationMssEncryptionPtrInput` via:
//
//          PackagingConfigurationMssEncryptionArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationMssEncryptionPtrInput interface {
	pulumi.Input

	ToPackagingConfigurationMssEncryptionPtrOutput() PackagingConfigurationMssEncryptionPtrOutput
	ToPackagingConfigurationMssEncryptionPtrOutputWithContext(context.Context) PackagingConfigurationMssEncryptionPtrOutput
}

type packagingConfigurationMssEncryptionPtrType PackagingConfigurationMssEncryptionArgs

func PackagingConfigurationMssEncryptionPtr(v *PackagingConfigurationMssEncryptionArgs) PackagingConfigurationMssEncryptionPtrInput {
	return (*packagingConfigurationMssEncryptionPtrType)(v)
}

func (*packagingConfigurationMssEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationMssEncryption)(nil)).Elem()
}

func (i *packagingConfigurationMssEncryptionPtrType) ToPackagingConfigurationMssEncryptionPtrOutput() PackagingConfigurationMssEncryptionPtrOutput {
	return i.ToPackagingConfigurationMssEncryptionPtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationMssEncryptionPtrType) ToPackagingConfigurationMssEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationMssEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssEncryptionPtrOutput)
}

// A CMAF encryption configuration.
type PackagingConfigurationMssEncryptionOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationMssEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationMssEncryption)(nil)).Elem()
}

func (o PackagingConfigurationMssEncryptionOutput) ToPackagingConfigurationMssEncryptionOutput() PackagingConfigurationMssEncryptionOutput {
	return o
}

func (o PackagingConfigurationMssEncryptionOutput) ToPackagingConfigurationMssEncryptionOutputWithContext(ctx context.Context) PackagingConfigurationMssEncryptionOutput {
	return o
}

func (o PackagingConfigurationMssEncryptionOutput) ToPackagingConfigurationMssEncryptionPtrOutput() PackagingConfigurationMssEncryptionPtrOutput {
	return o.ToPackagingConfigurationMssEncryptionPtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationMssEncryptionOutput) ToPackagingConfigurationMssEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationMssEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationMssEncryption) *PackagingConfigurationMssEncryption {
		return &v
	}).(PackagingConfigurationMssEncryptionPtrOutput)
}

func (o PackagingConfigurationMssEncryptionOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderOutput {
	return o.ApplyT(func(v PackagingConfigurationMssEncryption) PackagingConfigurationSpekeKeyProvider {
		return v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderOutput)
}

type PackagingConfigurationMssEncryptionPtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationMssEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationMssEncryption)(nil)).Elem()
}

func (o PackagingConfigurationMssEncryptionPtrOutput) ToPackagingConfigurationMssEncryptionPtrOutput() PackagingConfigurationMssEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationMssEncryptionPtrOutput) ToPackagingConfigurationMssEncryptionPtrOutputWithContext(ctx context.Context) PackagingConfigurationMssEncryptionPtrOutput {
	return o
}

func (o PackagingConfigurationMssEncryptionPtrOutput) Elem() PackagingConfigurationMssEncryptionOutput {
	return o.ApplyT(func(v *PackagingConfigurationMssEncryption) PackagingConfigurationMssEncryption {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationMssEncryption
		return ret
	}).(PackagingConfigurationMssEncryptionOutput)
}

func (o PackagingConfigurationMssEncryptionPtrOutput) SpekeKeyProvider() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationMssEncryption) *PackagingConfigurationSpekeKeyProvider {
		if v == nil {
			return nil
		}
		return &v.SpekeKeyProvider
	}).(PackagingConfigurationSpekeKeyProviderPtrOutput)
}

// A Microsoft Smooth Streaming (MSS) manifest configuration.
type PackagingConfigurationMssManifest struct {
	ManifestName    *string                                `pulumi:"manifestName"`
	StreamSelection *PackagingConfigurationStreamSelection `pulumi:"streamSelection"`
}

// PackagingConfigurationMssManifestInput is an input type that accepts PackagingConfigurationMssManifestArgs and PackagingConfigurationMssManifestOutput values.
// You can construct a concrete instance of `PackagingConfigurationMssManifestInput` via:
//
//          PackagingConfigurationMssManifestArgs{...}
type PackagingConfigurationMssManifestInput interface {
	pulumi.Input

	ToPackagingConfigurationMssManifestOutput() PackagingConfigurationMssManifestOutput
	ToPackagingConfigurationMssManifestOutputWithContext(context.Context) PackagingConfigurationMssManifestOutput
}

// A Microsoft Smooth Streaming (MSS) manifest configuration.
type PackagingConfigurationMssManifestArgs struct {
	ManifestName    pulumi.StringPtrInput                         `pulumi:"manifestName"`
	StreamSelection PackagingConfigurationStreamSelectionPtrInput `pulumi:"streamSelection"`
}

func (PackagingConfigurationMssManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationMssManifest)(nil)).Elem()
}

func (i PackagingConfigurationMssManifestArgs) ToPackagingConfigurationMssManifestOutput() PackagingConfigurationMssManifestOutput {
	return i.ToPackagingConfigurationMssManifestOutputWithContext(context.Background())
}

func (i PackagingConfigurationMssManifestArgs) ToPackagingConfigurationMssManifestOutputWithContext(ctx context.Context) PackagingConfigurationMssManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssManifestOutput)
}

// PackagingConfigurationMssManifestArrayInput is an input type that accepts PackagingConfigurationMssManifestArray and PackagingConfigurationMssManifestArrayOutput values.
// You can construct a concrete instance of `PackagingConfigurationMssManifestArrayInput` via:
//
//          PackagingConfigurationMssManifestArray{ PackagingConfigurationMssManifestArgs{...} }
type PackagingConfigurationMssManifestArrayInput interface {
	pulumi.Input

	ToPackagingConfigurationMssManifestArrayOutput() PackagingConfigurationMssManifestArrayOutput
	ToPackagingConfigurationMssManifestArrayOutputWithContext(context.Context) PackagingConfigurationMssManifestArrayOutput
}

type PackagingConfigurationMssManifestArray []PackagingConfigurationMssManifestInput

func (PackagingConfigurationMssManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationMssManifest)(nil)).Elem()
}

func (i PackagingConfigurationMssManifestArray) ToPackagingConfigurationMssManifestArrayOutput() PackagingConfigurationMssManifestArrayOutput {
	return i.ToPackagingConfigurationMssManifestArrayOutputWithContext(context.Background())
}

func (i PackagingConfigurationMssManifestArray) ToPackagingConfigurationMssManifestArrayOutputWithContext(ctx context.Context) PackagingConfigurationMssManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssManifestArrayOutput)
}

// A Microsoft Smooth Streaming (MSS) manifest configuration.
type PackagingConfigurationMssManifestOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationMssManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationMssManifest)(nil)).Elem()
}

func (o PackagingConfigurationMssManifestOutput) ToPackagingConfigurationMssManifestOutput() PackagingConfigurationMssManifestOutput {
	return o
}

func (o PackagingConfigurationMssManifestOutput) ToPackagingConfigurationMssManifestOutputWithContext(ctx context.Context) PackagingConfigurationMssManifestOutput {
	return o
}

func (o PackagingConfigurationMssManifestOutput) ManifestName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationMssManifest) *string { return v.ManifestName }).(pulumi.StringPtrOutput)
}

func (o PackagingConfigurationMssManifestOutput) StreamSelection() PackagingConfigurationStreamSelectionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationMssManifest) *PackagingConfigurationStreamSelection {
		return v.StreamSelection
	}).(PackagingConfigurationStreamSelectionPtrOutput)
}

type PackagingConfigurationMssManifestArrayOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationMssManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationMssManifest)(nil)).Elem()
}

func (o PackagingConfigurationMssManifestArrayOutput) ToPackagingConfigurationMssManifestArrayOutput() PackagingConfigurationMssManifestArrayOutput {
	return o
}

func (o PackagingConfigurationMssManifestArrayOutput) ToPackagingConfigurationMssManifestArrayOutputWithContext(ctx context.Context) PackagingConfigurationMssManifestArrayOutput {
	return o
}

func (o PackagingConfigurationMssManifestArrayOutput) Index(i pulumi.IntInput) PackagingConfigurationMssManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PackagingConfigurationMssManifest {
		return vs[0].([]PackagingConfigurationMssManifest)[vs[1].(int)]
	}).(PackagingConfigurationMssManifestOutput)
}

// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
type PackagingConfigurationMssPackage struct {
	Encryption *PackagingConfigurationMssEncryption `pulumi:"encryption"`
	// A list of MSS manifest configurations.
	MssManifests           []PackagingConfigurationMssManifest `pulumi:"mssManifests"`
	SegmentDurationSeconds *int                                `pulumi:"segmentDurationSeconds"`
}

// PackagingConfigurationMssPackageInput is an input type that accepts PackagingConfigurationMssPackageArgs and PackagingConfigurationMssPackageOutput values.
// You can construct a concrete instance of `PackagingConfigurationMssPackageInput` via:
//
//          PackagingConfigurationMssPackageArgs{...}
type PackagingConfigurationMssPackageInput interface {
	pulumi.Input

	ToPackagingConfigurationMssPackageOutput() PackagingConfigurationMssPackageOutput
	ToPackagingConfigurationMssPackageOutputWithContext(context.Context) PackagingConfigurationMssPackageOutput
}

// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
type PackagingConfigurationMssPackageArgs struct {
	Encryption PackagingConfigurationMssEncryptionPtrInput `pulumi:"encryption"`
	// A list of MSS manifest configurations.
	MssManifests           PackagingConfigurationMssManifestArrayInput `pulumi:"mssManifests"`
	SegmentDurationSeconds pulumi.IntPtrInput                          `pulumi:"segmentDurationSeconds"`
}

func (PackagingConfigurationMssPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationMssPackage)(nil)).Elem()
}

func (i PackagingConfigurationMssPackageArgs) ToPackagingConfigurationMssPackageOutput() PackagingConfigurationMssPackageOutput {
	return i.ToPackagingConfigurationMssPackageOutputWithContext(context.Background())
}

func (i PackagingConfigurationMssPackageArgs) ToPackagingConfigurationMssPackageOutputWithContext(ctx context.Context) PackagingConfigurationMssPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssPackageOutput)
}

func (i PackagingConfigurationMssPackageArgs) ToPackagingConfigurationMssPackagePtrOutput() PackagingConfigurationMssPackagePtrOutput {
	return i.ToPackagingConfigurationMssPackagePtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationMssPackageArgs) ToPackagingConfigurationMssPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationMssPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssPackageOutput).ToPackagingConfigurationMssPackagePtrOutputWithContext(ctx)
}

// PackagingConfigurationMssPackagePtrInput is an input type that accepts PackagingConfigurationMssPackageArgs, PackagingConfigurationMssPackagePtr and PackagingConfigurationMssPackagePtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationMssPackagePtrInput` via:
//
//          PackagingConfigurationMssPackageArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationMssPackagePtrInput interface {
	pulumi.Input

	ToPackagingConfigurationMssPackagePtrOutput() PackagingConfigurationMssPackagePtrOutput
	ToPackagingConfigurationMssPackagePtrOutputWithContext(context.Context) PackagingConfigurationMssPackagePtrOutput
}

type packagingConfigurationMssPackagePtrType PackagingConfigurationMssPackageArgs

func PackagingConfigurationMssPackagePtr(v *PackagingConfigurationMssPackageArgs) PackagingConfigurationMssPackagePtrInput {
	return (*packagingConfigurationMssPackagePtrType)(v)
}

func (*packagingConfigurationMssPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationMssPackage)(nil)).Elem()
}

func (i *packagingConfigurationMssPackagePtrType) ToPackagingConfigurationMssPackagePtrOutput() PackagingConfigurationMssPackagePtrOutput {
	return i.ToPackagingConfigurationMssPackagePtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationMssPackagePtrType) ToPackagingConfigurationMssPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationMssPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationMssPackagePtrOutput)
}

// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
type PackagingConfigurationMssPackageOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationMssPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationMssPackage)(nil)).Elem()
}

func (o PackagingConfigurationMssPackageOutput) ToPackagingConfigurationMssPackageOutput() PackagingConfigurationMssPackageOutput {
	return o
}

func (o PackagingConfigurationMssPackageOutput) ToPackagingConfigurationMssPackageOutputWithContext(ctx context.Context) PackagingConfigurationMssPackageOutput {
	return o
}

func (o PackagingConfigurationMssPackageOutput) ToPackagingConfigurationMssPackagePtrOutput() PackagingConfigurationMssPackagePtrOutput {
	return o.ToPackagingConfigurationMssPackagePtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationMssPackageOutput) ToPackagingConfigurationMssPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationMssPackagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationMssPackage) *PackagingConfigurationMssPackage {
		return &v
	}).(PackagingConfigurationMssPackagePtrOutput)
}

func (o PackagingConfigurationMssPackageOutput) Encryption() PackagingConfigurationMssEncryptionPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationMssPackage) *PackagingConfigurationMssEncryption { return v.Encryption }).(PackagingConfigurationMssEncryptionPtrOutput)
}

// A list of MSS manifest configurations.
func (o PackagingConfigurationMssPackageOutput) MssManifests() PackagingConfigurationMssManifestArrayOutput {
	return o.ApplyT(func(v PackagingConfigurationMssPackage) []PackagingConfigurationMssManifest { return v.MssManifests }).(PackagingConfigurationMssManifestArrayOutput)
}

func (o PackagingConfigurationMssPackageOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationMssPackage) *int { return v.SegmentDurationSeconds }).(pulumi.IntPtrOutput)
}

type PackagingConfigurationMssPackagePtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationMssPackagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationMssPackage)(nil)).Elem()
}

func (o PackagingConfigurationMssPackagePtrOutput) ToPackagingConfigurationMssPackagePtrOutput() PackagingConfigurationMssPackagePtrOutput {
	return o
}

func (o PackagingConfigurationMssPackagePtrOutput) ToPackagingConfigurationMssPackagePtrOutputWithContext(ctx context.Context) PackagingConfigurationMssPackagePtrOutput {
	return o
}

func (o PackagingConfigurationMssPackagePtrOutput) Elem() PackagingConfigurationMssPackageOutput {
	return o.ApplyT(func(v *PackagingConfigurationMssPackage) PackagingConfigurationMssPackage {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationMssPackage
		return ret
	}).(PackagingConfigurationMssPackageOutput)
}

func (o PackagingConfigurationMssPackagePtrOutput) Encryption() PackagingConfigurationMssEncryptionPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationMssPackage) *PackagingConfigurationMssEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(PackagingConfigurationMssEncryptionPtrOutput)
}

// A list of MSS manifest configurations.
func (o PackagingConfigurationMssPackagePtrOutput) MssManifests() PackagingConfigurationMssManifestArrayOutput {
	return o.ApplyT(func(v *PackagingConfigurationMssPackage) []PackagingConfigurationMssManifest {
		if v == nil {
			return nil
		}
		return v.MssManifests
	}).(PackagingConfigurationMssManifestArrayOutput)
}

func (o PackagingConfigurationMssPackagePtrOutput) SegmentDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationMssPackage) *int {
		if v == nil {
			return nil
		}
		return v.SegmentDurationSeconds
	}).(pulumi.IntPtrOutput)
}

// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
type PackagingConfigurationSpekeKeyProvider struct {
	RoleArn string `pulumi:"roleArn"`
	// The system IDs to include in key requests.
	SystemIds []string `pulumi:"systemIds"`
	// The URL of the external key provider service.
	Url string `pulumi:"url"`
}

// PackagingConfigurationSpekeKeyProviderInput is an input type that accepts PackagingConfigurationSpekeKeyProviderArgs and PackagingConfigurationSpekeKeyProviderOutput values.
// You can construct a concrete instance of `PackagingConfigurationSpekeKeyProviderInput` via:
//
//          PackagingConfigurationSpekeKeyProviderArgs{...}
type PackagingConfigurationSpekeKeyProviderInput interface {
	pulumi.Input

	ToPackagingConfigurationSpekeKeyProviderOutput() PackagingConfigurationSpekeKeyProviderOutput
	ToPackagingConfigurationSpekeKeyProviderOutputWithContext(context.Context) PackagingConfigurationSpekeKeyProviderOutput
}

// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
type PackagingConfigurationSpekeKeyProviderArgs struct {
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The system IDs to include in key requests.
	SystemIds pulumi.StringArrayInput `pulumi:"systemIds"`
	// The URL of the external key provider service.
	Url pulumi.StringInput `pulumi:"url"`
}

func (PackagingConfigurationSpekeKeyProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationSpekeKeyProvider)(nil)).Elem()
}

func (i PackagingConfigurationSpekeKeyProviderArgs) ToPackagingConfigurationSpekeKeyProviderOutput() PackagingConfigurationSpekeKeyProviderOutput {
	return i.ToPackagingConfigurationSpekeKeyProviderOutputWithContext(context.Background())
}

func (i PackagingConfigurationSpekeKeyProviderArgs) ToPackagingConfigurationSpekeKeyProviderOutputWithContext(ctx context.Context) PackagingConfigurationSpekeKeyProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationSpekeKeyProviderOutput)
}

func (i PackagingConfigurationSpekeKeyProviderArgs) ToPackagingConfigurationSpekeKeyProviderPtrOutput() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return i.ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationSpekeKeyProviderArgs) ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(ctx context.Context) PackagingConfigurationSpekeKeyProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationSpekeKeyProviderOutput).ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(ctx)
}

// PackagingConfigurationSpekeKeyProviderPtrInput is an input type that accepts PackagingConfigurationSpekeKeyProviderArgs, PackagingConfigurationSpekeKeyProviderPtr and PackagingConfigurationSpekeKeyProviderPtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationSpekeKeyProviderPtrInput` via:
//
//          PackagingConfigurationSpekeKeyProviderArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationSpekeKeyProviderPtrInput interface {
	pulumi.Input

	ToPackagingConfigurationSpekeKeyProviderPtrOutput() PackagingConfigurationSpekeKeyProviderPtrOutput
	ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(context.Context) PackagingConfigurationSpekeKeyProviderPtrOutput
}

type packagingConfigurationSpekeKeyProviderPtrType PackagingConfigurationSpekeKeyProviderArgs

func PackagingConfigurationSpekeKeyProviderPtr(v *PackagingConfigurationSpekeKeyProviderArgs) PackagingConfigurationSpekeKeyProviderPtrInput {
	return (*packagingConfigurationSpekeKeyProviderPtrType)(v)
}

func (*packagingConfigurationSpekeKeyProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationSpekeKeyProvider)(nil)).Elem()
}

func (i *packagingConfigurationSpekeKeyProviderPtrType) ToPackagingConfigurationSpekeKeyProviderPtrOutput() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return i.ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationSpekeKeyProviderPtrType) ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(ctx context.Context) PackagingConfigurationSpekeKeyProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationSpekeKeyProviderPtrOutput)
}

// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
type PackagingConfigurationSpekeKeyProviderOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationSpekeKeyProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationSpekeKeyProvider)(nil)).Elem()
}

func (o PackagingConfigurationSpekeKeyProviderOutput) ToPackagingConfigurationSpekeKeyProviderOutput() PackagingConfigurationSpekeKeyProviderOutput {
	return o
}

func (o PackagingConfigurationSpekeKeyProviderOutput) ToPackagingConfigurationSpekeKeyProviderOutputWithContext(ctx context.Context) PackagingConfigurationSpekeKeyProviderOutput {
	return o
}

func (o PackagingConfigurationSpekeKeyProviderOutput) ToPackagingConfigurationSpekeKeyProviderPtrOutput() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o.ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationSpekeKeyProviderOutput) ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(ctx context.Context) PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationSpekeKeyProvider) *PackagingConfigurationSpekeKeyProvider {
		return &v
	}).(PackagingConfigurationSpekeKeyProviderPtrOutput)
}

func (o PackagingConfigurationSpekeKeyProviderOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingConfigurationSpekeKeyProvider) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The system IDs to include in key requests.
func (o PackagingConfigurationSpekeKeyProviderOutput) SystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PackagingConfigurationSpekeKeyProvider) []string { return v.SystemIds }).(pulumi.StringArrayOutput)
}

// The URL of the external key provider service.
func (o PackagingConfigurationSpekeKeyProviderOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingConfigurationSpekeKeyProvider) string { return v.Url }).(pulumi.StringOutput)
}

type PackagingConfigurationSpekeKeyProviderPtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationSpekeKeyProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationSpekeKeyProvider)(nil)).Elem()
}

func (o PackagingConfigurationSpekeKeyProviderPtrOutput) ToPackagingConfigurationSpekeKeyProviderPtrOutput() PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o
}

func (o PackagingConfigurationSpekeKeyProviderPtrOutput) ToPackagingConfigurationSpekeKeyProviderPtrOutputWithContext(ctx context.Context) PackagingConfigurationSpekeKeyProviderPtrOutput {
	return o
}

func (o PackagingConfigurationSpekeKeyProviderPtrOutput) Elem() PackagingConfigurationSpekeKeyProviderOutput {
	return o.ApplyT(func(v *PackagingConfigurationSpekeKeyProvider) PackagingConfigurationSpekeKeyProvider {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationSpekeKeyProvider
		return ret
	}).(PackagingConfigurationSpekeKeyProviderOutput)
}

func (o PackagingConfigurationSpekeKeyProviderPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationSpekeKeyProvider) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The system IDs to include in key requests.
func (o PackagingConfigurationSpekeKeyProviderPtrOutput) SystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PackagingConfigurationSpekeKeyProvider) []string {
		if v == nil {
			return nil
		}
		return v.SystemIds
	}).(pulumi.StringArrayOutput)
}

// The URL of the external key provider service.
func (o PackagingConfigurationSpekeKeyProviderPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationSpekeKeyProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// A StreamSelection configuration.
type PackagingConfigurationStreamSelection struct {
	// The maximum video bitrate (bps) to include in output.
	MaxVideoBitsPerSecond *int `pulumi:"maxVideoBitsPerSecond"`
	// The minimum video bitrate (bps) to include in output.
	MinVideoBitsPerSecond *int `pulumi:"minVideoBitsPerSecond"`
	// A directive that determines the order of streams in the output.
	StreamOrder *string `pulumi:"streamOrder"`
}

// PackagingConfigurationStreamSelectionInput is an input type that accepts PackagingConfigurationStreamSelectionArgs and PackagingConfigurationStreamSelectionOutput values.
// You can construct a concrete instance of `PackagingConfigurationStreamSelectionInput` via:
//
//          PackagingConfigurationStreamSelectionArgs{...}
type PackagingConfigurationStreamSelectionInput interface {
	pulumi.Input

	ToPackagingConfigurationStreamSelectionOutput() PackagingConfigurationStreamSelectionOutput
	ToPackagingConfigurationStreamSelectionOutputWithContext(context.Context) PackagingConfigurationStreamSelectionOutput
}

// A StreamSelection configuration.
type PackagingConfigurationStreamSelectionArgs struct {
	// The maximum video bitrate (bps) to include in output.
	MaxVideoBitsPerSecond pulumi.IntPtrInput `pulumi:"maxVideoBitsPerSecond"`
	// The minimum video bitrate (bps) to include in output.
	MinVideoBitsPerSecond pulumi.IntPtrInput `pulumi:"minVideoBitsPerSecond"`
	// A directive that determines the order of streams in the output.
	StreamOrder pulumi.StringPtrInput `pulumi:"streamOrder"`
}

func (PackagingConfigurationStreamSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationStreamSelection)(nil)).Elem()
}

func (i PackagingConfigurationStreamSelectionArgs) ToPackagingConfigurationStreamSelectionOutput() PackagingConfigurationStreamSelectionOutput {
	return i.ToPackagingConfigurationStreamSelectionOutputWithContext(context.Background())
}

func (i PackagingConfigurationStreamSelectionArgs) ToPackagingConfigurationStreamSelectionOutputWithContext(ctx context.Context) PackagingConfigurationStreamSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationStreamSelectionOutput)
}

func (i PackagingConfigurationStreamSelectionArgs) ToPackagingConfigurationStreamSelectionPtrOutput() PackagingConfigurationStreamSelectionPtrOutput {
	return i.ToPackagingConfigurationStreamSelectionPtrOutputWithContext(context.Background())
}

func (i PackagingConfigurationStreamSelectionArgs) ToPackagingConfigurationStreamSelectionPtrOutputWithContext(ctx context.Context) PackagingConfigurationStreamSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationStreamSelectionOutput).ToPackagingConfigurationStreamSelectionPtrOutputWithContext(ctx)
}

// PackagingConfigurationStreamSelectionPtrInput is an input type that accepts PackagingConfigurationStreamSelectionArgs, PackagingConfigurationStreamSelectionPtr and PackagingConfigurationStreamSelectionPtrOutput values.
// You can construct a concrete instance of `PackagingConfigurationStreamSelectionPtrInput` via:
//
//          PackagingConfigurationStreamSelectionArgs{...}
//
//  or:
//
//          nil
type PackagingConfigurationStreamSelectionPtrInput interface {
	pulumi.Input

	ToPackagingConfigurationStreamSelectionPtrOutput() PackagingConfigurationStreamSelectionPtrOutput
	ToPackagingConfigurationStreamSelectionPtrOutputWithContext(context.Context) PackagingConfigurationStreamSelectionPtrOutput
}

type packagingConfigurationStreamSelectionPtrType PackagingConfigurationStreamSelectionArgs

func PackagingConfigurationStreamSelectionPtr(v *PackagingConfigurationStreamSelectionArgs) PackagingConfigurationStreamSelectionPtrInput {
	return (*packagingConfigurationStreamSelectionPtrType)(v)
}

func (*packagingConfigurationStreamSelectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationStreamSelection)(nil)).Elem()
}

func (i *packagingConfigurationStreamSelectionPtrType) ToPackagingConfigurationStreamSelectionPtrOutput() PackagingConfigurationStreamSelectionPtrOutput {
	return i.ToPackagingConfigurationStreamSelectionPtrOutputWithContext(context.Background())
}

func (i *packagingConfigurationStreamSelectionPtrType) ToPackagingConfigurationStreamSelectionPtrOutputWithContext(ctx context.Context) PackagingConfigurationStreamSelectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationStreamSelectionPtrOutput)
}

// A StreamSelection configuration.
type PackagingConfigurationStreamSelectionOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationStreamSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationStreamSelection)(nil)).Elem()
}

func (o PackagingConfigurationStreamSelectionOutput) ToPackagingConfigurationStreamSelectionOutput() PackagingConfigurationStreamSelectionOutput {
	return o
}

func (o PackagingConfigurationStreamSelectionOutput) ToPackagingConfigurationStreamSelectionOutputWithContext(ctx context.Context) PackagingConfigurationStreamSelectionOutput {
	return o
}

func (o PackagingConfigurationStreamSelectionOutput) ToPackagingConfigurationStreamSelectionPtrOutput() PackagingConfigurationStreamSelectionPtrOutput {
	return o.ToPackagingConfigurationStreamSelectionPtrOutputWithContext(context.Background())
}

func (o PackagingConfigurationStreamSelectionOutput) ToPackagingConfigurationStreamSelectionPtrOutputWithContext(ctx context.Context) PackagingConfigurationStreamSelectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingConfigurationStreamSelection) *PackagingConfigurationStreamSelection {
		return &v
	}).(PackagingConfigurationStreamSelectionPtrOutput)
}

// The maximum video bitrate (bps) to include in output.
func (o PackagingConfigurationStreamSelectionOutput) MaxVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationStreamSelection) *int { return v.MaxVideoBitsPerSecond }).(pulumi.IntPtrOutput)
}

// The minimum video bitrate (bps) to include in output.
func (o PackagingConfigurationStreamSelectionOutput) MinVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationStreamSelection) *int { return v.MinVideoBitsPerSecond }).(pulumi.IntPtrOutput)
}

// A directive that determines the order of streams in the output.
func (o PackagingConfigurationStreamSelectionOutput) StreamOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingConfigurationStreamSelection) *string { return v.StreamOrder }).(pulumi.StringPtrOutput)
}

type PackagingConfigurationStreamSelectionPtrOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationStreamSelectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingConfigurationStreamSelection)(nil)).Elem()
}

func (o PackagingConfigurationStreamSelectionPtrOutput) ToPackagingConfigurationStreamSelectionPtrOutput() PackagingConfigurationStreamSelectionPtrOutput {
	return o
}

func (o PackagingConfigurationStreamSelectionPtrOutput) ToPackagingConfigurationStreamSelectionPtrOutputWithContext(ctx context.Context) PackagingConfigurationStreamSelectionPtrOutput {
	return o
}

func (o PackagingConfigurationStreamSelectionPtrOutput) Elem() PackagingConfigurationStreamSelectionOutput {
	return o.ApplyT(func(v *PackagingConfigurationStreamSelection) PackagingConfigurationStreamSelection {
		if v != nil {
			return *v
		}
		var ret PackagingConfigurationStreamSelection
		return ret
	}).(PackagingConfigurationStreamSelectionOutput)
}

// The maximum video bitrate (bps) to include in output.
func (o PackagingConfigurationStreamSelectionPtrOutput) MaxVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationStreamSelection) *int {
		if v == nil {
			return nil
		}
		return v.MaxVideoBitsPerSecond
	}).(pulumi.IntPtrOutput)
}

// The minimum video bitrate (bps) to include in output.
func (o PackagingConfigurationStreamSelectionPtrOutput) MinVideoBitsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationStreamSelection) *int {
		if v == nil {
			return nil
		}
		return v.MinVideoBitsPerSecond
	}).(pulumi.IntPtrOutput)
}

// A directive that determines the order of streams in the output.
func (o PackagingConfigurationStreamSelectionPtrOutput) StreamOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingConfigurationStreamSelection) *string {
		if v == nil {
			return nil
		}
		return v.StreamOrder
	}).(pulumi.StringPtrOutput)
}

type PackagingConfigurationTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PackagingConfigurationTagInput is an input type that accepts PackagingConfigurationTagArgs and PackagingConfigurationTagOutput values.
// You can construct a concrete instance of `PackagingConfigurationTagInput` via:
//
//          PackagingConfigurationTagArgs{...}
type PackagingConfigurationTagInput interface {
	pulumi.Input

	ToPackagingConfigurationTagOutput() PackagingConfigurationTagOutput
	ToPackagingConfigurationTagOutputWithContext(context.Context) PackagingConfigurationTagOutput
}

type PackagingConfigurationTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PackagingConfigurationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationTag)(nil)).Elem()
}

func (i PackagingConfigurationTagArgs) ToPackagingConfigurationTagOutput() PackagingConfigurationTagOutput {
	return i.ToPackagingConfigurationTagOutputWithContext(context.Background())
}

func (i PackagingConfigurationTagArgs) ToPackagingConfigurationTagOutputWithContext(ctx context.Context) PackagingConfigurationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationTagOutput)
}

// PackagingConfigurationTagArrayInput is an input type that accepts PackagingConfigurationTagArray and PackagingConfigurationTagArrayOutput values.
// You can construct a concrete instance of `PackagingConfigurationTagArrayInput` via:
//
//          PackagingConfigurationTagArray{ PackagingConfigurationTagArgs{...} }
type PackagingConfigurationTagArrayInput interface {
	pulumi.Input

	ToPackagingConfigurationTagArrayOutput() PackagingConfigurationTagArrayOutput
	ToPackagingConfigurationTagArrayOutputWithContext(context.Context) PackagingConfigurationTagArrayOutput
}

type PackagingConfigurationTagArray []PackagingConfigurationTagInput

func (PackagingConfigurationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationTag)(nil)).Elem()
}

func (i PackagingConfigurationTagArray) ToPackagingConfigurationTagArrayOutput() PackagingConfigurationTagArrayOutput {
	return i.ToPackagingConfigurationTagArrayOutputWithContext(context.Background())
}

func (i PackagingConfigurationTagArray) ToPackagingConfigurationTagArrayOutputWithContext(ctx context.Context) PackagingConfigurationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationTagArrayOutput)
}

type PackagingConfigurationTagOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfigurationTag)(nil)).Elem()
}

func (o PackagingConfigurationTagOutput) ToPackagingConfigurationTagOutput() PackagingConfigurationTagOutput {
	return o
}

func (o PackagingConfigurationTagOutput) ToPackagingConfigurationTagOutputWithContext(ctx context.Context) PackagingConfigurationTagOutput {
	return o
}

func (o PackagingConfigurationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingConfigurationTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PackagingConfigurationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingConfigurationTag) string { return v.Value }).(pulumi.StringOutput)
}

type PackagingConfigurationTagArrayOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingConfigurationTag)(nil)).Elem()
}

func (o PackagingConfigurationTagArrayOutput) ToPackagingConfigurationTagArrayOutput() PackagingConfigurationTagArrayOutput {
	return o
}

func (o PackagingConfigurationTagArrayOutput) ToPackagingConfigurationTagArrayOutputWithContext(ctx context.Context) PackagingConfigurationTagArrayOutput {
	return o
}

func (o PackagingConfigurationTagArrayOutput) Index(i pulumi.IntInput) PackagingConfigurationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PackagingConfigurationTag {
		return vs[0].([]PackagingConfigurationTag)[vs[1].(int)]
	}).(PackagingConfigurationTagOutput)
}

type PackagingGroupAuthorization struct {
	// The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
	CdnIdentifierSecret string `pulumi:"cdnIdentifierSecret"`
	// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
	SecretsRoleArn string `pulumi:"secretsRoleArn"`
}

// PackagingGroupAuthorizationInput is an input type that accepts PackagingGroupAuthorizationArgs and PackagingGroupAuthorizationOutput values.
// You can construct a concrete instance of `PackagingGroupAuthorizationInput` via:
//
//          PackagingGroupAuthorizationArgs{...}
type PackagingGroupAuthorizationInput interface {
	pulumi.Input

	ToPackagingGroupAuthorizationOutput() PackagingGroupAuthorizationOutput
	ToPackagingGroupAuthorizationOutputWithContext(context.Context) PackagingGroupAuthorizationOutput
}

type PackagingGroupAuthorizationArgs struct {
	// The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
	CdnIdentifierSecret pulumi.StringInput `pulumi:"cdnIdentifierSecret"`
	// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
	SecretsRoleArn pulumi.StringInput `pulumi:"secretsRoleArn"`
}

func (PackagingGroupAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroupAuthorization)(nil)).Elem()
}

func (i PackagingGroupAuthorizationArgs) ToPackagingGroupAuthorizationOutput() PackagingGroupAuthorizationOutput {
	return i.ToPackagingGroupAuthorizationOutputWithContext(context.Background())
}

func (i PackagingGroupAuthorizationArgs) ToPackagingGroupAuthorizationOutputWithContext(ctx context.Context) PackagingGroupAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupAuthorizationOutput)
}

func (i PackagingGroupAuthorizationArgs) ToPackagingGroupAuthorizationPtrOutput() PackagingGroupAuthorizationPtrOutput {
	return i.ToPackagingGroupAuthorizationPtrOutputWithContext(context.Background())
}

func (i PackagingGroupAuthorizationArgs) ToPackagingGroupAuthorizationPtrOutputWithContext(ctx context.Context) PackagingGroupAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupAuthorizationOutput).ToPackagingGroupAuthorizationPtrOutputWithContext(ctx)
}

// PackagingGroupAuthorizationPtrInput is an input type that accepts PackagingGroupAuthorizationArgs, PackagingGroupAuthorizationPtr and PackagingGroupAuthorizationPtrOutput values.
// You can construct a concrete instance of `PackagingGroupAuthorizationPtrInput` via:
//
//          PackagingGroupAuthorizationArgs{...}
//
//  or:
//
//          nil
type PackagingGroupAuthorizationPtrInput interface {
	pulumi.Input

	ToPackagingGroupAuthorizationPtrOutput() PackagingGroupAuthorizationPtrOutput
	ToPackagingGroupAuthorizationPtrOutputWithContext(context.Context) PackagingGroupAuthorizationPtrOutput
}

type packagingGroupAuthorizationPtrType PackagingGroupAuthorizationArgs

func PackagingGroupAuthorizationPtr(v *PackagingGroupAuthorizationArgs) PackagingGroupAuthorizationPtrInput {
	return (*packagingGroupAuthorizationPtrType)(v)
}

func (*packagingGroupAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingGroupAuthorization)(nil)).Elem()
}

func (i *packagingGroupAuthorizationPtrType) ToPackagingGroupAuthorizationPtrOutput() PackagingGroupAuthorizationPtrOutput {
	return i.ToPackagingGroupAuthorizationPtrOutputWithContext(context.Background())
}

func (i *packagingGroupAuthorizationPtrType) ToPackagingGroupAuthorizationPtrOutputWithContext(ctx context.Context) PackagingGroupAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupAuthorizationPtrOutput)
}

type PackagingGroupAuthorizationOutput struct{ *pulumi.OutputState }

func (PackagingGroupAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroupAuthorization)(nil)).Elem()
}

func (o PackagingGroupAuthorizationOutput) ToPackagingGroupAuthorizationOutput() PackagingGroupAuthorizationOutput {
	return o
}

func (o PackagingGroupAuthorizationOutput) ToPackagingGroupAuthorizationOutputWithContext(ctx context.Context) PackagingGroupAuthorizationOutput {
	return o
}

func (o PackagingGroupAuthorizationOutput) ToPackagingGroupAuthorizationPtrOutput() PackagingGroupAuthorizationPtrOutput {
	return o.ToPackagingGroupAuthorizationPtrOutputWithContext(context.Background())
}

func (o PackagingGroupAuthorizationOutput) ToPackagingGroupAuthorizationPtrOutputWithContext(ctx context.Context) PackagingGroupAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingGroupAuthorization) *PackagingGroupAuthorization {
		return &v
	}).(PackagingGroupAuthorizationPtrOutput)
}

// The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
func (o PackagingGroupAuthorizationOutput) CdnIdentifierSecret() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingGroupAuthorization) string { return v.CdnIdentifierSecret }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
func (o PackagingGroupAuthorizationOutput) SecretsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingGroupAuthorization) string { return v.SecretsRoleArn }).(pulumi.StringOutput)
}

type PackagingGroupAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (PackagingGroupAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingGroupAuthorization)(nil)).Elem()
}

func (o PackagingGroupAuthorizationPtrOutput) ToPackagingGroupAuthorizationPtrOutput() PackagingGroupAuthorizationPtrOutput {
	return o
}

func (o PackagingGroupAuthorizationPtrOutput) ToPackagingGroupAuthorizationPtrOutputWithContext(ctx context.Context) PackagingGroupAuthorizationPtrOutput {
	return o
}

func (o PackagingGroupAuthorizationPtrOutput) Elem() PackagingGroupAuthorizationOutput {
	return o.ApplyT(func(v *PackagingGroupAuthorization) PackagingGroupAuthorization {
		if v != nil {
			return *v
		}
		var ret PackagingGroupAuthorization
		return ret
	}).(PackagingGroupAuthorizationOutput)
}

// The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.
func (o PackagingGroupAuthorizationPtrOutput) CdnIdentifierSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingGroupAuthorization) *string {
		if v == nil {
			return nil
		}
		return &v.CdnIdentifierSecret
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
func (o PackagingGroupAuthorizationPtrOutput) SecretsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingGroupAuthorization) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsRoleArn
	}).(pulumi.StringPtrOutput)
}

type PackagingGroupLogConfiguration struct {
	// Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.
	LogGroupName *string `pulumi:"logGroupName"`
}

// PackagingGroupLogConfigurationInput is an input type that accepts PackagingGroupLogConfigurationArgs and PackagingGroupLogConfigurationOutput values.
// You can construct a concrete instance of `PackagingGroupLogConfigurationInput` via:
//
//          PackagingGroupLogConfigurationArgs{...}
type PackagingGroupLogConfigurationInput interface {
	pulumi.Input

	ToPackagingGroupLogConfigurationOutput() PackagingGroupLogConfigurationOutput
	ToPackagingGroupLogConfigurationOutputWithContext(context.Context) PackagingGroupLogConfigurationOutput
}

type PackagingGroupLogConfigurationArgs struct {
	// Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
}

func (PackagingGroupLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroupLogConfiguration)(nil)).Elem()
}

func (i PackagingGroupLogConfigurationArgs) ToPackagingGroupLogConfigurationOutput() PackagingGroupLogConfigurationOutput {
	return i.ToPackagingGroupLogConfigurationOutputWithContext(context.Background())
}

func (i PackagingGroupLogConfigurationArgs) ToPackagingGroupLogConfigurationOutputWithContext(ctx context.Context) PackagingGroupLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupLogConfigurationOutput)
}

func (i PackagingGroupLogConfigurationArgs) ToPackagingGroupLogConfigurationPtrOutput() PackagingGroupLogConfigurationPtrOutput {
	return i.ToPackagingGroupLogConfigurationPtrOutputWithContext(context.Background())
}

func (i PackagingGroupLogConfigurationArgs) ToPackagingGroupLogConfigurationPtrOutputWithContext(ctx context.Context) PackagingGroupLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupLogConfigurationOutput).ToPackagingGroupLogConfigurationPtrOutputWithContext(ctx)
}

// PackagingGroupLogConfigurationPtrInput is an input type that accepts PackagingGroupLogConfigurationArgs, PackagingGroupLogConfigurationPtr and PackagingGroupLogConfigurationPtrOutput values.
// You can construct a concrete instance of `PackagingGroupLogConfigurationPtrInput` via:
//
//          PackagingGroupLogConfigurationArgs{...}
//
//  or:
//
//          nil
type PackagingGroupLogConfigurationPtrInput interface {
	pulumi.Input

	ToPackagingGroupLogConfigurationPtrOutput() PackagingGroupLogConfigurationPtrOutput
	ToPackagingGroupLogConfigurationPtrOutputWithContext(context.Context) PackagingGroupLogConfigurationPtrOutput
}

type packagingGroupLogConfigurationPtrType PackagingGroupLogConfigurationArgs

func PackagingGroupLogConfigurationPtr(v *PackagingGroupLogConfigurationArgs) PackagingGroupLogConfigurationPtrInput {
	return (*packagingGroupLogConfigurationPtrType)(v)
}

func (*packagingGroupLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingGroupLogConfiguration)(nil)).Elem()
}

func (i *packagingGroupLogConfigurationPtrType) ToPackagingGroupLogConfigurationPtrOutput() PackagingGroupLogConfigurationPtrOutput {
	return i.ToPackagingGroupLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *packagingGroupLogConfigurationPtrType) ToPackagingGroupLogConfigurationPtrOutputWithContext(ctx context.Context) PackagingGroupLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupLogConfigurationPtrOutput)
}

type PackagingGroupLogConfigurationOutput struct{ *pulumi.OutputState }

func (PackagingGroupLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroupLogConfiguration)(nil)).Elem()
}

func (o PackagingGroupLogConfigurationOutput) ToPackagingGroupLogConfigurationOutput() PackagingGroupLogConfigurationOutput {
	return o
}

func (o PackagingGroupLogConfigurationOutput) ToPackagingGroupLogConfigurationOutputWithContext(ctx context.Context) PackagingGroupLogConfigurationOutput {
	return o
}

func (o PackagingGroupLogConfigurationOutput) ToPackagingGroupLogConfigurationPtrOutput() PackagingGroupLogConfigurationPtrOutput {
	return o.ToPackagingGroupLogConfigurationPtrOutputWithContext(context.Background())
}

func (o PackagingGroupLogConfigurationOutput) ToPackagingGroupLogConfigurationPtrOutputWithContext(ctx context.Context) PackagingGroupLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackagingGroupLogConfiguration) *PackagingGroupLogConfiguration {
		return &v
	}).(PackagingGroupLogConfigurationPtrOutput)
}

// Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.
func (o PackagingGroupLogConfigurationOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PackagingGroupLogConfiguration) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

type PackagingGroupLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PackagingGroupLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackagingGroupLogConfiguration)(nil)).Elem()
}

func (o PackagingGroupLogConfigurationPtrOutput) ToPackagingGroupLogConfigurationPtrOutput() PackagingGroupLogConfigurationPtrOutput {
	return o
}

func (o PackagingGroupLogConfigurationPtrOutput) ToPackagingGroupLogConfigurationPtrOutputWithContext(ctx context.Context) PackagingGroupLogConfigurationPtrOutput {
	return o
}

func (o PackagingGroupLogConfigurationPtrOutput) Elem() PackagingGroupLogConfigurationOutput {
	return o.ApplyT(func(v *PackagingGroupLogConfiguration) PackagingGroupLogConfiguration {
		if v != nil {
			return *v
		}
		var ret PackagingGroupLogConfiguration
		return ret
	}).(PackagingGroupLogConfigurationOutput)
}

// Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.
func (o PackagingGroupLogConfigurationPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackagingGroupLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

type PackagingGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PackagingGroupTagInput is an input type that accepts PackagingGroupTagArgs and PackagingGroupTagOutput values.
// You can construct a concrete instance of `PackagingGroupTagInput` via:
//
//          PackagingGroupTagArgs{...}
type PackagingGroupTagInput interface {
	pulumi.Input

	ToPackagingGroupTagOutput() PackagingGroupTagOutput
	ToPackagingGroupTagOutputWithContext(context.Context) PackagingGroupTagOutput
}

type PackagingGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PackagingGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroupTag)(nil)).Elem()
}

func (i PackagingGroupTagArgs) ToPackagingGroupTagOutput() PackagingGroupTagOutput {
	return i.ToPackagingGroupTagOutputWithContext(context.Background())
}

func (i PackagingGroupTagArgs) ToPackagingGroupTagOutputWithContext(ctx context.Context) PackagingGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupTagOutput)
}

// PackagingGroupTagArrayInput is an input type that accepts PackagingGroupTagArray and PackagingGroupTagArrayOutput values.
// You can construct a concrete instance of `PackagingGroupTagArrayInput` via:
//
//          PackagingGroupTagArray{ PackagingGroupTagArgs{...} }
type PackagingGroupTagArrayInput interface {
	pulumi.Input

	ToPackagingGroupTagArrayOutput() PackagingGroupTagArrayOutput
	ToPackagingGroupTagArrayOutputWithContext(context.Context) PackagingGroupTagArrayOutput
}

type PackagingGroupTagArray []PackagingGroupTagInput

func (PackagingGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingGroupTag)(nil)).Elem()
}

func (i PackagingGroupTagArray) ToPackagingGroupTagArrayOutput() PackagingGroupTagArrayOutput {
	return i.ToPackagingGroupTagArrayOutputWithContext(context.Background())
}

func (i PackagingGroupTagArray) ToPackagingGroupTagArrayOutputWithContext(ctx context.Context) PackagingGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingGroupTagArrayOutput)
}

type PackagingGroupTagOutput struct{ *pulumi.OutputState }

func (PackagingGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingGroupTag)(nil)).Elem()
}

func (o PackagingGroupTagOutput) ToPackagingGroupTagOutput() PackagingGroupTagOutput {
	return o
}

func (o PackagingGroupTagOutput) ToPackagingGroupTagOutputWithContext(ctx context.Context) PackagingGroupTagOutput {
	return o
}

func (o PackagingGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PackagingGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PackagingGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type PackagingGroupTagArrayOutput struct{ *pulumi.OutputState }

func (PackagingGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PackagingGroupTag)(nil)).Elem()
}

func (o PackagingGroupTagArrayOutput) ToPackagingGroupTagArrayOutput() PackagingGroupTagArrayOutput {
	return o
}

func (o PackagingGroupTagArrayOutput) ToPackagingGroupTagArrayOutputWithContext(ctx context.Context) PackagingGroupTagArrayOutput {
	return o
}

func (o PackagingGroupTagArrayOutput) Index(i pulumi.IntInput) PackagingGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PackagingGroupTag {
		return vs[0].([]PackagingGroupTag)[vs[1].(int)]
	}).(PackagingGroupTagOutput)
}

func init() {
	pulumi.RegisterOutputType(AssetEgressEndpointOutput{})
	pulumi.RegisterOutputType(AssetEgressEndpointArrayOutput{})
	pulumi.RegisterOutputType(AssetTagOutput{})
	pulumi.RegisterOutputType(AssetTagArrayOutput{})
	pulumi.RegisterOutputType(ChannelHlsIngestOutput{})
	pulumi.RegisterOutputType(ChannelHlsIngestPtrOutput{})
	pulumi.RegisterOutputType(ChannelIngestEndpointOutput{})
	pulumi.RegisterOutputType(ChannelIngestEndpointArrayOutput{})
	pulumi.RegisterOutputType(ChannelLogConfigurationOutput{})
	pulumi.RegisterOutputType(ChannelLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ChannelTagOutput{})
	pulumi.RegisterOutputType(ChannelTagArrayOutput{})
	pulumi.RegisterOutputType(OriginEndpointAuthorizationOutput{})
	pulumi.RegisterOutputType(OriginEndpointAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointCmafEncryptionOutput{})
	pulumi.RegisterOutputType(OriginEndpointCmafEncryptionPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointCmafPackageOutput{})
	pulumi.RegisterOutputType(OriginEndpointCmafPackagePtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointDashEncryptionOutput{})
	pulumi.RegisterOutputType(OriginEndpointDashEncryptionPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointDashPackageOutput{})
	pulumi.RegisterOutputType(OriginEndpointDashPackagePtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointHlsEncryptionOutput{})
	pulumi.RegisterOutputType(OriginEndpointHlsEncryptionPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointHlsManifestOutput{})
	pulumi.RegisterOutputType(OriginEndpointHlsManifestArrayOutput{})
	pulumi.RegisterOutputType(OriginEndpointHlsPackageOutput{})
	pulumi.RegisterOutputType(OriginEndpointHlsPackagePtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointMssEncryptionOutput{})
	pulumi.RegisterOutputType(OriginEndpointMssEncryptionPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointMssPackageOutput{})
	pulumi.RegisterOutputType(OriginEndpointMssPackagePtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointSpekeKeyProviderOutput{})
	pulumi.RegisterOutputType(OriginEndpointSpekeKeyProviderPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointStreamSelectionOutput{})
	pulumi.RegisterOutputType(OriginEndpointStreamSelectionPtrOutput{})
	pulumi.RegisterOutputType(OriginEndpointTagOutput{})
	pulumi.RegisterOutputType(OriginEndpointTagArrayOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationCmafEncryptionOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationCmafEncryptionPtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationCmafPackageOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationCmafPackagePtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationDashEncryptionOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationDashEncryptionPtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationDashManifestOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationDashManifestArrayOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationDashPackageOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationDashPackagePtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationHlsEncryptionOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationHlsEncryptionPtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationHlsManifestOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationHlsManifestArrayOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationHlsPackageOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationHlsPackagePtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationMssEncryptionOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationMssEncryptionPtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationMssManifestOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationMssManifestArrayOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationMssPackageOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationMssPackagePtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationSpekeKeyProviderOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationSpekeKeyProviderPtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationStreamSelectionOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationStreamSelectionPtrOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationTagOutput{})
	pulumi.RegisterOutputType(PackagingConfigurationTagArrayOutput{})
	pulumi.RegisterOutputType(PackagingGroupAuthorizationOutput{})
	pulumi.RegisterOutputType(PackagingGroupAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(PackagingGroupLogConfigurationOutput{})
	pulumi.RegisterOutputType(PackagingGroupLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PackagingGroupTagOutput{})
	pulumi.RegisterOutputType(PackagingGroupTagArrayOutput{})
}
