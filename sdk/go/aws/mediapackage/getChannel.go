// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaPackage::Channel
func LookupChannel(ctx *pulumi.Context, args *LookupChannelArgs, opts ...pulumi.InvokeOption) (*LookupChannelResult, error) {
	var rv LookupChannelResult
	err := ctx.Invoke("aws-native:mediapackage:getChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupChannelArgs struct {
	// The ID of the Channel.
	Id string `pulumi:"id"`
}

type LookupChannelResult struct {
	// The Amazon Resource Name (ARN) assigned to the Channel.
	Arn *string `pulumi:"arn"`
	// A short text description of the Channel.
	Description *string `pulumi:"description"`
	// The configuration parameters for egress access logging.
	EgressAccessLogs *ChannelLogConfiguration `pulumi:"egressAccessLogs"`
	// A short text description of the Channel.
	HlsIngest *ChannelHlsIngest `pulumi:"hlsIngest"`
	// The configuration parameters for egress access logging.
	IngressAccessLogs *ChannelLogConfiguration `pulumi:"ingressAccessLogs"`
}

func LookupChannelOutput(ctx *pulumi.Context, args LookupChannelOutputArgs, opts ...pulumi.InvokeOption) LookupChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupChannelResult, error) {
			args := v.(LookupChannelArgs)
			r, err := LookupChannel(ctx, &args, opts...)
			return *r, err
		}).(LookupChannelResultOutput)
}

type LookupChannelOutputArgs struct {
	// The ID of the Channel.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupChannelArgs)(nil)).Elem()
}

type LookupChannelResultOutput struct{ *pulumi.OutputState }

func (LookupChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupChannelResult)(nil)).Elem()
}

func (o LookupChannelResultOutput) ToLookupChannelResultOutput() LookupChannelResultOutput {
	return o
}

func (o LookupChannelResultOutput) ToLookupChannelResultOutputWithContext(ctx context.Context) LookupChannelResultOutput {
	return o
}

// The Amazon Resource Name (ARN) assigned to the Channel.
func (o LookupChannelResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// A short text description of the Channel.
func (o LookupChannelResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The configuration parameters for egress access logging.
func (o LookupChannelResultOutput) EgressAccessLogs() ChannelLogConfigurationPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *ChannelLogConfiguration { return v.EgressAccessLogs }).(ChannelLogConfigurationPtrOutput)
}

// A short text description of the Channel.
func (o LookupChannelResultOutput) HlsIngest() ChannelHlsIngestPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *ChannelHlsIngest { return v.HlsIngest }).(ChannelHlsIngestPtrOutput)
}

// The configuration parameters for egress access logging.
func (o LookupChannelResultOutput) IngressAccessLogs() ChannelLogConfigurationPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *ChannelLogConfiguration { return v.IngressAccessLogs }).(ChannelLogConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupChannelResultOutput{})
}
