// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaPackage::PackagingConfiguration
type PackagingConfiguration struct {
	pulumi.CustomResourceState

	// The ARN of the PackagingConfiguration.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A CMAF packaging configuration.
	CmafPackage PackagingConfigurationCmafPackagePtrOutput `pulumi:"cmafPackage"`
	// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
	DashPackage PackagingConfigurationDashPackagePtrOutput `pulumi:"dashPackage"`
	// An HTTP Live Streaming (HLS) packaging configuration.
	HlsPackage PackagingConfigurationHlsPackagePtrOutput `pulumi:"hlsPackage"`
	// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
	MssPackage PackagingConfigurationMssPackagePtrOutput `pulumi:"mssPackage"`
	// The ID of a PackagingGroup.
	PackagingGroupId pulumi.StringOutput `pulumi:"packagingGroupId"`
	// A collection of tags associated with a resource
	Tags PackagingConfigurationTagArrayOutput `pulumi:"tags"`
}

// NewPackagingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewPackagingConfiguration(ctx *pulumi.Context,
	name string, args *PackagingConfigurationArgs, opts ...pulumi.ResourceOption) (*PackagingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PackagingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'PackagingGroupId'")
	}
	var resource PackagingConfiguration
	err := ctx.RegisterResource("aws-native:mediapackage:PackagingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPackagingConfiguration gets an existing PackagingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPackagingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PackagingConfigurationState, opts ...pulumi.ResourceOption) (*PackagingConfiguration, error) {
	var resource PackagingConfiguration
	err := ctx.ReadResource("aws-native:mediapackage:PackagingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PackagingConfiguration resources.
type packagingConfigurationState struct {
}

type PackagingConfigurationState struct {
}

func (PackagingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*packagingConfigurationState)(nil)).Elem()
}

type packagingConfigurationArgs struct {
	// A CMAF packaging configuration.
	CmafPackage *PackagingConfigurationCmafPackage `pulumi:"cmafPackage"`
	// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
	DashPackage *PackagingConfigurationDashPackage `pulumi:"dashPackage"`
	// An HTTP Live Streaming (HLS) packaging configuration.
	HlsPackage *PackagingConfigurationHlsPackage `pulumi:"hlsPackage"`
	// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
	MssPackage *PackagingConfigurationMssPackage `pulumi:"mssPackage"`
	// The ID of a PackagingGroup.
	PackagingGroupId string `pulumi:"packagingGroupId"`
	// A collection of tags associated with a resource
	Tags []PackagingConfigurationTag `pulumi:"tags"`
}

// The set of arguments for constructing a PackagingConfiguration resource.
type PackagingConfigurationArgs struct {
	// A CMAF packaging configuration.
	CmafPackage PackagingConfigurationCmafPackagePtrInput
	// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
	DashPackage PackagingConfigurationDashPackagePtrInput
	// An HTTP Live Streaming (HLS) packaging configuration.
	HlsPackage PackagingConfigurationHlsPackagePtrInput
	// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
	MssPackage PackagingConfigurationMssPackagePtrInput
	// The ID of a PackagingGroup.
	PackagingGroupId pulumi.StringInput
	// A collection of tags associated with a resource
	Tags PackagingConfigurationTagArrayInput
}

func (PackagingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packagingConfigurationArgs)(nil)).Elem()
}

type PackagingConfigurationInput interface {
	pulumi.Input

	ToPackagingConfigurationOutput() PackagingConfigurationOutput
	ToPackagingConfigurationOutputWithContext(ctx context.Context) PackagingConfigurationOutput
}

func (*PackagingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfiguration)(nil))
}

func (i *PackagingConfiguration) ToPackagingConfigurationOutput() PackagingConfigurationOutput {
	return i.ToPackagingConfigurationOutputWithContext(context.Background())
}

func (i *PackagingConfiguration) ToPackagingConfigurationOutputWithContext(ctx context.Context) PackagingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackagingConfigurationOutput)
}

type PackagingConfigurationOutput struct{ *pulumi.OutputState }

func (PackagingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackagingConfiguration)(nil))
}

func (o PackagingConfigurationOutput) ToPackagingConfigurationOutput() PackagingConfigurationOutput {
	return o
}

func (o PackagingConfigurationOutput) ToPackagingConfigurationOutputWithContext(ctx context.Context) PackagingConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PackagingConfigurationOutput{})
}
