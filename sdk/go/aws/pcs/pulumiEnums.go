// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pcs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The default value is `STANDARD`. A value of `STANDARD` means that Slurm accounting is enabled.
type ClusterAccountingMode string

const (
	ClusterAccountingModeStandard = ClusterAccountingMode("STANDARD")
	ClusterAccountingModeNone     = ClusterAccountingMode("NONE")
)

// Indicates the type of endpoint running at the specific IP address.
type ClusterEndpointType string

const (
	ClusterEndpointTypeSlurmctld = ClusterEndpointType("SLURMCTLD")
	ClusterEndpointTypeSlurmdbd  = ClusterEndpointType("SLURMDBD")
)

type ClusterEndpointTypeOutput struct{ *pulumi.OutputState }

func (ClusterEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpointType)(nil)).Elem()
}

func (o ClusterEndpointTypeOutput) ToClusterEndpointTypeOutput() ClusterEndpointTypeOutput {
	return o
}

func (o ClusterEndpointTypeOutput) ToClusterEndpointTypeOutputWithContext(ctx context.Context) ClusterEndpointTypeOutput {
	return o
}

func (o ClusterEndpointTypeOutput) ToClusterEndpointTypePtrOutput() ClusterEndpointTypePtrOutput {
	return o.ToClusterEndpointTypePtrOutputWithContext(context.Background())
}

func (o ClusterEndpointTypeOutput) ToClusterEndpointTypePtrOutputWithContext(ctx context.Context) ClusterEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEndpointType) *ClusterEndpointType {
		return &v
	}).(ClusterEndpointTypePtrOutput)
}

func (o ClusterEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpointType)(nil)).Elem()
}

func (o ClusterEndpointTypePtrOutput) ToClusterEndpointTypePtrOutput() ClusterEndpointTypePtrOutput {
	return o
}

func (o ClusterEndpointTypePtrOutput) ToClusterEndpointTypePtrOutputWithContext(ctx context.Context) ClusterEndpointTypePtrOutput {
	return o
}

func (o ClusterEndpointTypePtrOutput) Elem() ClusterEndpointTypeOutput {
	return o.ApplyT(func(v *ClusterEndpointType) ClusterEndpointType {
		if v != nil {
			return *v
		}
		var ret ClusterEndpointType
		return ret
	}).(ClusterEndpointTypeOutput)
}

func (o ClusterEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The IP of the cluster (IPV4 or IPV6)
type ClusterNetworkingPropertiesNetworkType string

const (
	ClusterNetworkingPropertiesNetworkTypeIpv4 = ClusterNetworkingPropertiesNetworkType("IPV4")
	ClusterNetworkingPropertiesNetworkTypeIpv6 = ClusterNetworkingPropertiesNetworkType("IPV6")
)

func (ClusterNetworkingPropertiesNetworkType) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkingPropertiesNetworkType)(nil)).Elem()
}

func (e ClusterNetworkingPropertiesNetworkType) ToClusterNetworkingPropertiesNetworkTypeOutput() ClusterNetworkingPropertiesNetworkTypeOutput {
	return pulumi.ToOutput(e).(ClusterNetworkingPropertiesNetworkTypeOutput)
}

func (e ClusterNetworkingPropertiesNetworkType) ToClusterNetworkingPropertiesNetworkTypeOutputWithContext(ctx context.Context) ClusterNetworkingPropertiesNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterNetworkingPropertiesNetworkTypeOutput)
}

func (e ClusterNetworkingPropertiesNetworkType) ToClusterNetworkingPropertiesNetworkTypePtrOutput() ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return e.ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(context.Background())
}

func (e ClusterNetworkingPropertiesNetworkType) ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(ctx context.Context) ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return ClusterNetworkingPropertiesNetworkType(e).ToClusterNetworkingPropertiesNetworkTypeOutputWithContext(ctx).ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(ctx)
}

func (e ClusterNetworkingPropertiesNetworkType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterNetworkingPropertiesNetworkType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterNetworkingPropertiesNetworkType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterNetworkingPropertiesNetworkType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterNetworkingPropertiesNetworkTypeOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingPropertiesNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkingPropertiesNetworkType)(nil)).Elem()
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToClusterNetworkingPropertiesNetworkTypeOutput() ClusterNetworkingPropertiesNetworkTypeOutput {
	return o
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToClusterNetworkingPropertiesNetworkTypeOutputWithContext(ctx context.Context) ClusterNetworkingPropertiesNetworkTypeOutput {
	return o
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToClusterNetworkingPropertiesNetworkTypePtrOutput() ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return o.ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(context.Background())
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(ctx context.Context) ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworkingPropertiesNetworkType) *ClusterNetworkingPropertiesNetworkType {
		return &v
	}).(ClusterNetworkingPropertiesNetworkTypePtrOutput)
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterNetworkingPropertiesNetworkType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkingPropertiesNetworkTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterNetworkingPropertiesNetworkType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworkingPropertiesNetworkTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingPropertiesNetworkTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkingPropertiesNetworkType)(nil)).Elem()
}

func (o ClusterNetworkingPropertiesNetworkTypePtrOutput) ToClusterNetworkingPropertiesNetworkTypePtrOutput() ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return o
}

func (o ClusterNetworkingPropertiesNetworkTypePtrOutput) ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(ctx context.Context) ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return o
}

func (o ClusterNetworkingPropertiesNetworkTypePtrOutput) Elem() ClusterNetworkingPropertiesNetworkTypeOutput {
	return o.ApplyT(func(v *ClusterNetworkingPropertiesNetworkType) ClusterNetworkingPropertiesNetworkType {
		if v != nil {
			return *v
		}
		var ret ClusterNetworkingPropertiesNetworkType
		return ret
	}).(ClusterNetworkingPropertiesNetworkTypeOutput)
}

func (o ClusterNetworkingPropertiesNetworkTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkingPropertiesNetworkTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterNetworkingPropertiesNetworkType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterNetworkingPropertiesNetworkTypeInput is an input type that accepts values of the ClusterNetworkingPropertiesNetworkType enum
// A concrete instance of `ClusterNetworkingPropertiesNetworkTypeInput` can be one of the following:
//
//	ClusterNetworkingPropertiesNetworkTypeIpv4
//	ClusterNetworkingPropertiesNetworkTypeIpv6
type ClusterNetworkingPropertiesNetworkTypeInput interface {
	pulumi.Input

	ToClusterNetworkingPropertiesNetworkTypeOutput() ClusterNetworkingPropertiesNetworkTypeOutput
	ToClusterNetworkingPropertiesNetworkTypeOutputWithContext(context.Context) ClusterNetworkingPropertiesNetworkTypeOutput
}

var clusterNetworkingPropertiesNetworkTypePtrType = reflect.TypeOf((**ClusterNetworkingPropertiesNetworkType)(nil)).Elem()

type ClusterNetworkingPropertiesNetworkTypePtrInput interface {
	pulumi.Input

	ToClusterNetworkingPropertiesNetworkTypePtrOutput() ClusterNetworkingPropertiesNetworkTypePtrOutput
	ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(context.Context) ClusterNetworkingPropertiesNetworkTypePtrOutput
}

type clusterNetworkingPropertiesNetworkTypePtr string

func ClusterNetworkingPropertiesNetworkTypePtr(v string) ClusterNetworkingPropertiesNetworkTypePtrInput {
	return (*clusterNetworkingPropertiesNetworkTypePtr)(&v)
}

func (*clusterNetworkingPropertiesNetworkTypePtr) ElementType() reflect.Type {
	return clusterNetworkingPropertiesNetworkTypePtrType
}

func (in *clusterNetworkingPropertiesNetworkTypePtr) ToClusterNetworkingPropertiesNetworkTypePtrOutput() ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return pulumi.ToOutput(in).(ClusterNetworkingPropertiesNetworkTypePtrOutput)
}

func (in *clusterNetworkingPropertiesNetworkTypePtr) ToClusterNetworkingPropertiesNetworkTypePtrOutputWithContext(ctx context.Context) ClusterNetworkingPropertiesNetworkTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterNetworkingPropertiesNetworkTypePtrOutput)
}

// The software AWS PCS uses to manage cluster scaling and job scheduling.
type ClusterSchedulerPropertiesType string

const (
	ClusterSchedulerPropertiesTypeSlurm = ClusterSchedulerPropertiesType("SLURM")
)

func (ClusterSchedulerPropertiesType) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSchedulerPropertiesType)(nil)).Elem()
}

func (e ClusterSchedulerPropertiesType) ToClusterSchedulerPropertiesTypeOutput() ClusterSchedulerPropertiesTypeOutput {
	return pulumi.ToOutput(e).(ClusterSchedulerPropertiesTypeOutput)
}

func (e ClusterSchedulerPropertiesType) ToClusterSchedulerPropertiesTypeOutputWithContext(ctx context.Context) ClusterSchedulerPropertiesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterSchedulerPropertiesTypeOutput)
}

func (e ClusterSchedulerPropertiesType) ToClusterSchedulerPropertiesTypePtrOutput() ClusterSchedulerPropertiesTypePtrOutput {
	return e.ToClusterSchedulerPropertiesTypePtrOutputWithContext(context.Background())
}

func (e ClusterSchedulerPropertiesType) ToClusterSchedulerPropertiesTypePtrOutputWithContext(ctx context.Context) ClusterSchedulerPropertiesTypePtrOutput {
	return ClusterSchedulerPropertiesType(e).ToClusterSchedulerPropertiesTypeOutputWithContext(ctx).ToClusterSchedulerPropertiesTypePtrOutputWithContext(ctx)
}

func (e ClusterSchedulerPropertiesType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterSchedulerPropertiesType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterSchedulerPropertiesType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterSchedulerPropertiesType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterSchedulerPropertiesTypeOutput struct{ *pulumi.OutputState }

func (ClusterSchedulerPropertiesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSchedulerPropertiesType)(nil)).Elem()
}

func (o ClusterSchedulerPropertiesTypeOutput) ToClusterSchedulerPropertiesTypeOutput() ClusterSchedulerPropertiesTypeOutput {
	return o
}

func (o ClusterSchedulerPropertiesTypeOutput) ToClusterSchedulerPropertiesTypeOutputWithContext(ctx context.Context) ClusterSchedulerPropertiesTypeOutput {
	return o
}

func (o ClusterSchedulerPropertiesTypeOutput) ToClusterSchedulerPropertiesTypePtrOutput() ClusterSchedulerPropertiesTypePtrOutput {
	return o.ToClusterSchedulerPropertiesTypePtrOutputWithContext(context.Background())
}

func (o ClusterSchedulerPropertiesTypeOutput) ToClusterSchedulerPropertiesTypePtrOutputWithContext(ctx context.Context) ClusterSchedulerPropertiesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSchedulerPropertiesType) *ClusterSchedulerPropertiesType {
		return &v
	}).(ClusterSchedulerPropertiesTypePtrOutput)
}

func (o ClusterSchedulerPropertiesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterSchedulerPropertiesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterSchedulerPropertiesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterSchedulerPropertiesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterSchedulerPropertiesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterSchedulerPropertiesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterSchedulerPropertiesTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterSchedulerPropertiesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSchedulerPropertiesType)(nil)).Elem()
}

func (o ClusterSchedulerPropertiesTypePtrOutput) ToClusterSchedulerPropertiesTypePtrOutput() ClusterSchedulerPropertiesTypePtrOutput {
	return o
}

func (o ClusterSchedulerPropertiesTypePtrOutput) ToClusterSchedulerPropertiesTypePtrOutputWithContext(ctx context.Context) ClusterSchedulerPropertiesTypePtrOutput {
	return o
}

func (o ClusterSchedulerPropertiesTypePtrOutput) Elem() ClusterSchedulerPropertiesTypeOutput {
	return o.ApplyT(func(v *ClusterSchedulerPropertiesType) ClusterSchedulerPropertiesType {
		if v != nil {
			return *v
		}
		var ret ClusterSchedulerPropertiesType
		return ret
	}).(ClusterSchedulerPropertiesTypeOutput)
}

func (o ClusterSchedulerPropertiesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterSchedulerPropertiesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterSchedulerPropertiesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterSchedulerPropertiesTypeInput is an input type that accepts values of the ClusterSchedulerPropertiesType enum
// A concrete instance of `ClusterSchedulerPropertiesTypeInput` can be one of the following:
//
//	ClusterSchedulerPropertiesTypeSlurm
type ClusterSchedulerPropertiesTypeInput interface {
	pulumi.Input

	ToClusterSchedulerPropertiesTypeOutput() ClusterSchedulerPropertiesTypeOutput
	ToClusterSchedulerPropertiesTypeOutputWithContext(context.Context) ClusterSchedulerPropertiesTypeOutput
}

var clusterSchedulerPropertiesTypePtrType = reflect.TypeOf((**ClusterSchedulerPropertiesType)(nil)).Elem()

type ClusterSchedulerPropertiesTypePtrInput interface {
	pulumi.Input

	ToClusterSchedulerPropertiesTypePtrOutput() ClusterSchedulerPropertiesTypePtrOutput
	ToClusterSchedulerPropertiesTypePtrOutputWithContext(context.Context) ClusterSchedulerPropertiesTypePtrOutput
}

type clusterSchedulerPropertiesTypePtr string

func ClusterSchedulerPropertiesTypePtr(v string) ClusterSchedulerPropertiesTypePtrInput {
	return (*clusterSchedulerPropertiesTypePtr)(&v)
}

func (*clusterSchedulerPropertiesTypePtr) ElementType() reflect.Type {
	return clusterSchedulerPropertiesTypePtrType
}

func (in *clusterSchedulerPropertiesTypePtr) ToClusterSchedulerPropertiesTypePtrOutput() ClusterSchedulerPropertiesTypePtrOutput {
	return pulumi.ToOutput(in).(ClusterSchedulerPropertiesTypePtrOutput)
}

func (in *clusterSchedulerPropertiesTypePtr) ToClusterSchedulerPropertiesTypePtrOutputWithContext(ctx context.Context) ClusterSchedulerPropertiesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterSchedulerPropertiesTypePtrOutput)
}

// The size of the cluster.
type ClusterSize string

const (
	ClusterSizeSmall  = ClusterSize("SMALL")
	ClusterSizeMedium = ClusterSize("MEDIUM")
	ClusterSizeLarge  = ClusterSize("LARGE")
)

func (ClusterSize) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSize)(nil)).Elem()
}

func (e ClusterSize) ToClusterSizeOutput() ClusterSizeOutput {
	return pulumi.ToOutput(e).(ClusterSizeOutput)
}

func (e ClusterSize) ToClusterSizeOutputWithContext(ctx context.Context) ClusterSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterSizeOutput)
}

func (e ClusterSize) ToClusterSizePtrOutput() ClusterSizePtrOutput {
	return e.ToClusterSizePtrOutputWithContext(context.Background())
}

func (e ClusterSize) ToClusterSizePtrOutputWithContext(ctx context.Context) ClusterSizePtrOutput {
	return ClusterSize(e).ToClusterSizeOutputWithContext(ctx).ToClusterSizePtrOutputWithContext(ctx)
}

func (e ClusterSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterSizeOutput struct{ *pulumi.OutputState }

func (ClusterSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSize)(nil)).Elem()
}

func (o ClusterSizeOutput) ToClusterSizeOutput() ClusterSizeOutput {
	return o
}

func (o ClusterSizeOutput) ToClusterSizeOutputWithContext(ctx context.Context) ClusterSizeOutput {
	return o
}

func (o ClusterSizeOutput) ToClusterSizePtrOutput() ClusterSizePtrOutput {
	return o.ToClusterSizePtrOutputWithContext(context.Background())
}

func (o ClusterSizeOutput) ToClusterSizePtrOutputWithContext(ctx context.Context) ClusterSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSize) *ClusterSize {
		return &v
	}).(ClusterSizePtrOutput)
}

func (o ClusterSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterSizePtrOutput struct{ *pulumi.OutputState }

func (ClusterSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSize)(nil)).Elem()
}

func (o ClusterSizePtrOutput) ToClusterSizePtrOutput() ClusterSizePtrOutput {
	return o
}

func (o ClusterSizePtrOutput) ToClusterSizePtrOutputWithContext(ctx context.Context) ClusterSizePtrOutput {
	return o
}

func (o ClusterSizePtrOutput) Elem() ClusterSizeOutput {
	return o.ApplyT(func(v *ClusterSize) ClusterSize {
		if v != nil {
			return *v
		}
		var ret ClusterSize
		return ret
	}).(ClusterSizeOutput)
}

func (o ClusterSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterSizeInput is an input type that accepts values of the ClusterSize enum
// A concrete instance of `ClusterSizeInput` can be one of the following:
//
//	ClusterSizeSmall
//	ClusterSizeMedium
//	ClusterSizeLarge
type ClusterSizeInput interface {
	pulumi.Input

	ToClusterSizeOutput() ClusterSizeOutput
	ToClusterSizeOutputWithContext(context.Context) ClusterSizeOutput
}

var clusterSizePtrType = reflect.TypeOf((**ClusterSize)(nil)).Elem()

type ClusterSizePtrInput interface {
	pulumi.Input

	ToClusterSizePtrOutput() ClusterSizePtrOutput
	ToClusterSizePtrOutputWithContext(context.Context) ClusterSizePtrOutput
}

type clusterSizePtr string

func ClusterSizePtr(v string) ClusterSizePtrInput {
	return (*clusterSizePtr)(&v)
}

func (*clusterSizePtr) ElementType() reflect.Type {
	return clusterSizePtrType
}

func (in *clusterSizePtr) ToClusterSizePtrOutput() ClusterSizePtrOutput {
	return pulumi.ToOutput(in).(ClusterSizePtrOutput)
}

func (in *clusterSizePtr) ToClusterSizePtrOutputWithContext(ctx context.Context) ClusterSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterSizePtrOutput)
}

// The provisioning status of the cluster. The provisioning status doesn't indicate the overall health of the cluster.
type ClusterStatus string

const (
	ClusterStatusCreating     = ClusterStatus("CREATING")
	ClusterStatusActive       = ClusterStatus("ACTIVE")
	ClusterStatusUpdating     = ClusterStatus("UPDATING")
	ClusterStatusDeleting     = ClusterStatus("DELETING")
	ClusterStatusCreateFailed = ClusterStatus("CREATE_FAILED")
	ClusterStatusDeleteFailed = ClusterStatus("DELETE_FAILED")
	ClusterStatusUpdateFailed = ClusterStatus("UPDATE_FAILED")
)

type ClusterStatusOutput struct{ *pulumi.OutputState }

func (ClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatus)(nil)).Elem()
}

func (o ClusterStatusOutput) ToClusterStatusOutput() ClusterStatusOutput {
	return o
}

func (o ClusterStatusOutput) ToClusterStatusOutputWithContext(ctx context.Context) ClusterStatusOutput {
	return o
}

func (o ClusterStatusOutput) ToClusterStatusPtrOutput() ClusterStatusPtrOutput {
	return o.ToClusterStatusPtrOutputWithContext(context.Background())
}

func (o ClusterStatusOutput) ToClusterStatusPtrOutputWithContext(ctx context.Context) ClusterStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStatus) *ClusterStatus {
		return &v
	}).(ClusterStatusPtrOutput)
}

func (o ClusterStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStatus)(nil)).Elem()
}

func (o ClusterStatusPtrOutput) ToClusterStatusPtrOutput() ClusterStatusPtrOutput {
	return o
}

func (o ClusterStatusPtrOutput) ToClusterStatusPtrOutputWithContext(ctx context.Context) ClusterStatusPtrOutput {
	return o
}

func (o ClusterStatusPtrOutput) Elem() ClusterStatusOutput {
	return o.ApplyT(func(v *ClusterStatus) ClusterStatus {
		if v != nil {
			return *v
		}
		var ret ClusterStatus
		return ret
	}).(ClusterStatusOutput)
}

func (o ClusterStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Specifies how EC2 instances are purchased on your behalf. AWS PCS supports On-Demand and Spot instances. For more information, see Instance purchasing options in the Amazon Elastic Compute Cloud User Guide. If you don't provide this option, it defaults to On-Demand.
type ComputeNodeGroupPurchaseOption string

const (
	ComputeNodeGroupPurchaseOptionOndemand = ComputeNodeGroupPurchaseOption("ONDEMAND")
	ComputeNodeGroupPurchaseOptionSpot     = ComputeNodeGroupPurchaseOption("SPOT")
)

func (ComputeNodeGroupPurchaseOption) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeGroupPurchaseOption)(nil)).Elem()
}

func (e ComputeNodeGroupPurchaseOption) ToComputeNodeGroupPurchaseOptionOutput() ComputeNodeGroupPurchaseOptionOutput {
	return pulumi.ToOutput(e).(ComputeNodeGroupPurchaseOptionOutput)
}

func (e ComputeNodeGroupPurchaseOption) ToComputeNodeGroupPurchaseOptionOutputWithContext(ctx context.Context) ComputeNodeGroupPurchaseOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeNodeGroupPurchaseOptionOutput)
}

func (e ComputeNodeGroupPurchaseOption) ToComputeNodeGroupPurchaseOptionPtrOutput() ComputeNodeGroupPurchaseOptionPtrOutput {
	return e.ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(context.Background())
}

func (e ComputeNodeGroupPurchaseOption) ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(ctx context.Context) ComputeNodeGroupPurchaseOptionPtrOutput {
	return ComputeNodeGroupPurchaseOption(e).ToComputeNodeGroupPurchaseOptionOutputWithContext(ctx).ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(ctx)
}

func (e ComputeNodeGroupPurchaseOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeNodeGroupPurchaseOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeNodeGroupPurchaseOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeNodeGroupPurchaseOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeNodeGroupPurchaseOptionOutput struct{ *pulumi.OutputState }

func (ComputeNodeGroupPurchaseOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeGroupPurchaseOption)(nil)).Elem()
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToComputeNodeGroupPurchaseOptionOutput() ComputeNodeGroupPurchaseOptionOutput {
	return o
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToComputeNodeGroupPurchaseOptionOutputWithContext(ctx context.Context) ComputeNodeGroupPurchaseOptionOutput {
	return o
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToComputeNodeGroupPurchaseOptionPtrOutput() ComputeNodeGroupPurchaseOptionPtrOutput {
	return o.ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(ctx context.Context) ComputeNodeGroupPurchaseOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeNodeGroupPurchaseOption) *ComputeNodeGroupPurchaseOption {
		return &v
	}).(ComputeNodeGroupPurchaseOptionPtrOutput)
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeNodeGroupPurchaseOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupPurchaseOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeNodeGroupPurchaseOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeNodeGroupPurchaseOptionPtrOutput struct{ *pulumi.OutputState }

func (ComputeNodeGroupPurchaseOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNodeGroupPurchaseOption)(nil)).Elem()
}

func (o ComputeNodeGroupPurchaseOptionPtrOutput) ToComputeNodeGroupPurchaseOptionPtrOutput() ComputeNodeGroupPurchaseOptionPtrOutput {
	return o
}

func (o ComputeNodeGroupPurchaseOptionPtrOutput) ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(ctx context.Context) ComputeNodeGroupPurchaseOptionPtrOutput {
	return o
}

func (o ComputeNodeGroupPurchaseOptionPtrOutput) Elem() ComputeNodeGroupPurchaseOptionOutput {
	return o.ApplyT(func(v *ComputeNodeGroupPurchaseOption) ComputeNodeGroupPurchaseOption {
		if v != nil {
			return *v
		}
		var ret ComputeNodeGroupPurchaseOption
		return ret
	}).(ComputeNodeGroupPurchaseOptionOutput)
}

func (o ComputeNodeGroupPurchaseOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupPurchaseOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeNodeGroupPurchaseOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeNodeGroupPurchaseOptionInput is an input type that accepts values of the ComputeNodeGroupPurchaseOption enum
// A concrete instance of `ComputeNodeGroupPurchaseOptionInput` can be one of the following:
//
//	ComputeNodeGroupPurchaseOptionOndemand
//	ComputeNodeGroupPurchaseOptionSpot
type ComputeNodeGroupPurchaseOptionInput interface {
	pulumi.Input

	ToComputeNodeGroupPurchaseOptionOutput() ComputeNodeGroupPurchaseOptionOutput
	ToComputeNodeGroupPurchaseOptionOutputWithContext(context.Context) ComputeNodeGroupPurchaseOptionOutput
}

var computeNodeGroupPurchaseOptionPtrType = reflect.TypeOf((**ComputeNodeGroupPurchaseOption)(nil)).Elem()

type ComputeNodeGroupPurchaseOptionPtrInput interface {
	pulumi.Input

	ToComputeNodeGroupPurchaseOptionPtrOutput() ComputeNodeGroupPurchaseOptionPtrOutput
	ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(context.Context) ComputeNodeGroupPurchaseOptionPtrOutput
}

type computeNodeGroupPurchaseOptionPtr string

func ComputeNodeGroupPurchaseOptionPtr(v string) ComputeNodeGroupPurchaseOptionPtrInput {
	return (*computeNodeGroupPurchaseOptionPtr)(&v)
}

func (*computeNodeGroupPurchaseOptionPtr) ElementType() reflect.Type {
	return computeNodeGroupPurchaseOptionPtrType
}

func (in *computeNodeGroupPurchaseOptionPtr) ToComputeNodeGroupPurchaseOptionPtrOutput() ComputeNodeGroupPurchaseOptionPtrOutput {
	return pulumi.ToOutput(in).(ComputeNodeGroupPurchaseOptionPtrOutput)
}

func (in *computeNodeGroupPurchaseOptionPtr) ToComputeNodeGroupPurchaseOptionPtrOutputWithContext(ctx context.Context) ComputeNodeGroupPurchaseOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeNodeGroupPurchaseOptionPtrOutput)
}

// The Amazon EC2 allocation strategy AWS PCS uses to provision EC2 instances. AWS PCS supports lowest price, capacity optimized, and price capacity optimized. If you don't provide this option, it defaults to price capacity optimized.
type ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy string

const (
	ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyLowestPrice            = ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy("lowest-price")
	ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyCapacityOptimized      = ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy("capacity-optimized")
	ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPriceCapacityOptimized = ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy("price-capacity-optimized")
)

func (ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy)(nil)).Elem()
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput {
	return pulumi.ToOutput(e).(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput)
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutputWithContext(ctx context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput)
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return e.ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(context.Background())
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(ctx context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy(e).ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutputWithContext(ctx).ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(ctx)
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput struct{ *pulumi.OutputState }

func (ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy)(nil)).Elem()
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput {
	return o
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutputWithContext(ctx context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput {
	return o
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return o.ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(ctx context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) *ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy {
		return &v
	}).(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput)
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput struct{ *pulumi.OutputState }

func (ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy)(nil)).Elem()
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return o
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(ctx context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return o
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput) Elem() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput {
	return o.ApplyT(func(v *ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy {
		if v != nil {
			return *v
		}
		var ret ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy
		return ret
	}).(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput)
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyInput is an input type that accepts values of the ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy enum
// A concrete instance of `ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyInput` can be one of the following:
//
//	ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyLowestPrice
//	ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyCapacityOptimized
//	ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPriceCapacityOptimized
type ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyInput interface {
	pulumi.Input

	ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput
	ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutputWithContext(context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput
}

var computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrType = reflect.TypeOf((**ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy)(nil)).Elem()

type ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrInput interface {
	pulumi.Input

	ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput
	ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput
}

type computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtr string

func ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtr(v string) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrInput {
	return (*computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtr)(&v)
}

func (*computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtr) ElementType() reflect.Type {
	return computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrType
}

func (in *computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtr) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput() ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return pulumi.ToOutput(in).(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput)
}

func (in *computeNodeGroupSpotOptionsPropertiesAllocationStrategyPtr) ToComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutputWithContext(ctx context.Context) ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput)
}

// The provisioning status of the compute node group. The provisioning status doesn't indicate the overall health of the compute node group.
type ComputeNodeGroupStatus string

const (
	ComputeNodeGroupStatusCreating     = ComputeNodeGroupStatus("CREATING")
	ComputeNodeGroupStatusActive       = ComputeNodeGroupStatus("ACTIVE")
	ComputeNodeGroupStatusUpdating     = ComputeNodeGroupStatus("UPDATING")
	ComputeNodeGroupStatusDeleting     = ComputeNodeGroupStatus("DELETING")
	ComputeNodeGroupStatusCreateFailed = ComputeNodeGroupStatus("CREATE_FAILED")
	ComputeNodeGroupStatusDeleteFailed = ComputeNodeGroupStatus("DELETE_FAILED")
	ComputeNodeGroupStatusUpdateFailed = ComputeNodeGroupStatus("UPDATE_FAILED")
)

type ComputeNodeGroupStatusOutput struct{ *pulumi.OutputState }

func (ComputeNodeGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeGroupStatus)(nil)).Elem()
}

func (o ComputeNodeGroupStatusOutput) ToComputeNodeGroupStatusOutput() ComputeNodeGroupStatusOutput {
	return o
}

func (o ComputeNodeGroupStatusOutput) ToComputeNodeGroupStatusOutputWithContext(ctx context.Context) ComputeNodeGroupStatusOutput {
	return o
}

func (o ComputeNodeGroupStatusOutput) ToComputeNodeGroupStatusPtrOutput() ComputeNodeGroupStatusPtrOutput {
	return o.ToComputeNodeGroupStatusPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupStatusOutput) ToComputeNodeGroupStatusPtrOutputWithContext(ctx context.Context) ComputeNodeGroupStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeNodeGroupStatus) *ComputeNodeGroupStatus {
		return &v
	}).(ComputeNodeGroupStatusPtrOutput)
}

func (o ComputeNodeGroupStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeNodeGroupStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeNodeGroupStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeNodeGroupStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeNodeGroupStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeNodeGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (ComputeNodeGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNodeGroupStatus)(nil)).Elem()
}

func (o ComputeNodeGroupStatusPtrOutput) ToComputeNodeGroupStatusPtrOutput() ComputeNodeGroupStatusPtrOutput {
	return o
}

func (o ComputeNodeGroupStatusPtrOutput) ToComputeNodeGroupStatusPtrOutputWithContext(ctx context.Context) ComputeNodeGroupStatusPtrOutput {
	return o
}

func (o ComputeNodeGroupStatusPtrOutput) Elem() ComputeNodeGroupStatusOutput {
	return o.ApplyT(func(v *ComputeNodeGroupStatus) ComputeNodeGroupStatus {
		if v != nil {
			return *v
		}
		var ret ComputeNodeGroupStatus
		return ret
	}).(ComputeNodeGroupStatusOutput)
}

func (o ComputeNodeGroupStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeNodeGroupStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeNodeGroupStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The provisioning status of the queue. The provisioning status doesn't indicate the overall health of the queue.
type QueueStatus string

const (
	QueueStatusCreating     = QueueStatus("CREATING")
	QueueStatusActive       = QueueStatus("ACTIVE")
	QueueStatusUpdating     = QueueStatus("UPDATING")
	QueueStatusDeleting     = QueueStatus("DELETING")
	QueueStatusCreateFailed = QueueStatus("CREATE_FAILED")
	QueueStatusDeleteFailed = QueueStatus("DELETE_FAILED")
	QueueStatusUpdateFailed = QueueStatus("UPDATE_FAILED")
)

type QueueStatusOutput struct{ *pulumi.OutputState }

func (QueueStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueStatus)(nil)).Elem()
}

func (o QueueStatusOutput) ToQueueStatusOutput() QueueStatusOutput {
	return o
}

func (o QueueStatusOutput) ToQueueStatusOutputWithContext(ctx context.Context) QueueStatusOutput {
	return o
}

func (o QueueStatusOutput) ToQueueStatusPtrOutput() QueueStatusPtrOutput {
	return o.ToQueueStatusPtrOutputWithContext(context.Background())
}

func (o QueueStatusOutput) ToQueueStatusPtrOutputWithContext(ctx context.Context) QueueStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueStatus) *QueueStatus {
		return &v
	}).(QueueStatusPtrOutput)
}

func (o QueueStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QueueStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueueStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QueueStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueueStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueueStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QueueStatusPtrOutput struct{ *pulumi.OutputState }

func (QueueStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueStatus)(nil)).Elem()
}

func (o QueueStatusPtrOutput) ToQueueStatusPtrOutput() QueueStatusPtrOutput {
	return o
}

func (o QueueStatusPtrOutput) ToQueueStatusPtrOutputWithContext(ctx context.Context) QueueStatusPtrOutput {
	return o
}

func (o QueueStatusPtrOutput) Elem() QueueStatusOutput {
	return o.ApplyT(func(v *QueueStatus) QueueStatus {
		if v != nil {
			return *v
		}
		var ret QueueStatus
		return ret
	}).(QueueStatusOutput)
}

func (o QueueStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueueStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QueueStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingPropertiesNetworkTypeInput)(nil)).Elem(), ClusterNetworkingPropertiesNetworkType("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingPropertiesNetworkTypePtrInput)(nil)).Elem(), ClusterNetworkingPropertiesNetworkType("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSchedulerPropertiesTypeInput)(nil)).Elem(), ClusterSchedulerPropertiesType("SLURM"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSchedulerPropertiesTypePtrInput)(nil)).Elem(), ClusterSchedulerPropertiesType("SLURM"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSizeInput)(nil)).Elem(), ClusterSize("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSizePtrInput)(nil)).Elem(), ClusterSize("SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNodeGroupPurchaseOptionInput)(nil)).Elem(), ComputeNodeGroupPurchaseOption("ONDEMAND"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNodeGroupPurchaseOptionPtrInput)(nil)).Elem(), ComputeNodeGroupPurchaseOption("ONDEMAND"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyInput)(nil)).Elem(), ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy("lowest-price"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrInput)(nil)).Elem(), ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy("lowest-price"))
	pulumi.RegisterOutputType(ClusterEndpointTypeOutput{})
	pulumi.RegisterOutputType(ClusterEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingPropertiesNetworkTypeOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingPropertiesNetworkTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterSchedulerPropertiesTypeOutput{})
	pulumi.RegisterOutputType(ClusterSchedulerPropertiesTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterSizeOutput{})
	pulumi.RegisterOutputType(ClusterSizePtrOutput{})
	pulumi.RegisterOutputType(ClusterStatusOutput{})
	pulumi.RegisterOutputType(ClusterStatusPtrOutput{})
	pulumi.RegisterOutputType(ComputeNodeGroupPurchaseOptionOutput{})
	pulumi.RegisterOutputType(ComputeNodeGroupPurchaseOptionPtrOutput{})
	pulumi.RegisterOutputType(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyOutput{})
	pulumi.RegisterOutputType(ComputeNodeGroupSpotOptionsPropertiesAllocationStrategyPtrOutput{})
	pulumi.RegisterOutputType(ComputeNodeGroupStatusOutput{})
	pulumi.RegisterOutputType(ComputeNodeGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(QueueStatusOutput{})
	pulumi.RegisterOutputType(QueueStatusPtrOutput{})
}
