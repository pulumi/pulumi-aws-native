// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pcs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::PCS::Queue resource creates an AWS PCS queue.
func LookupQueue(ctx *pulumi.Context, args *LookupQueueArgs, opts ...pulumi.InvokeOption) (*LookupQueueResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueueResult
	err := ctx.Invoke("aws-native:pcs:getQueue", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupQueueArgs struct {
	// The unique Amazon Resource Name (ARN) of the queue.
	Arn string `pulumi:"arn"`
}

type LookupQueueResult struct {
	// The unique Amazon Resource Name (ARN) of the queue.
	Arn *string `pulumi:"arn"`
	// The list of compute node group configurations associated with the queue. Queues assign jobs to associated compute node groups.
	ComputeNodeGroupConfigurations []QueueComputeNodeGroupConfiguration `pulumi:"computeNodeGroupConfigurations"`
	// The list of errors that occurred during queue provisioning.
	ErrorInfo []QueueErrorInfo `pulumi:"errorInfo"`
	// The generated unique ID of the queue.
	Id *string `pulumi:"id"`
	// The Slurm configuration for the queue.
	SlurmConfiguration *SlurmConfigurationProperties `pulumi:"slurmConfiguration"`
	// The provisioning status of the queue. The provisioning status doesn't indicate the overall health of the queue.
	Status *QueueStatus `pulumi:"status"`
	// 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
	Tags map[string]string `pulumi:"tags"`
}

func LookupQueueOutput(ctx *pulumi.Context, args LookupQueueOutputArgs, opts ...pulumi.InvokeOption) LookupQueueResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupQueueResultOutput, error) {
			args := v.(LookupQueueArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:pcs:getQueue", args, LookupQueueResultOutput{}, options).(LookupQueueResultOutput), nil
		}).(LookupQueueResultOutput)
}

type LookupQueueOutputArgs struct {
	// The unique Amazon Resource Name (ARN) of the queue.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupQueueOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueArgs)(nil)).Elem()
}

type LookupQueueResultOutput struct{ *pulumi.OutputState }

func (LookupQueueResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueResult)(nil)).Elem()
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutput() LookupQueueResultOutput {
	return o
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutputWithContext(ctx context.Context) LookupQueueResultOutput {
	return o
}

// The unique Amazon Resource Name (ARN) of the queue.
func (o LookupQueueResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The list of compute node group configurations associated with the queue. Queues assign jobs to associated compute node groups.
func (o LookupQueueResultOutput) ComputeNodeGroupConfigurations() QueueComputeNodeGroupConfigurationArrayOutput {
	return o.ApplyT(func(v LookupQueueResult) []QueueComputeNodeGroupConfiguration {
		return v.ComputeNodeGroupConfigurations
	}).(QueueComputeNodeGroupConfigurationArrayOutput)
}

// The list of errors that occurred during queue provisioning.
func (o LookupQueueResultOutput) ErrorInfo() QueueErrorInfoArrayOutput {
	return o.ApplyT(func(v LookupQueueResult) []QueueErrorInfo { return v.ErrorInfo }).(QueueErrorInfoArrayOutput)
}

// The generated unique ID of the queue.
func (o LookupQueueResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Slurm configuration for the queue.
func (o LookupQueueResultOutput) SlurmConfiguration() SlurmConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *SlurmConfigurationProperties { return v.SlurmConfiguration }).(SlurmConfigurationPropertiesPtrOutput)
}

// The provisioning status of the queue. The provisioning status doesn't indicate the overall health of the queue.
func (o LookupQueueResultOutput) Status() QueueStatusPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *QueueStatus { return v.Status }).(QueueStatusPtrOutput)
}

// 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
func (o LookupQueueResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupQueueResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueResultOutput{})
}
