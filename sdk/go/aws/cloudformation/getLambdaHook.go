// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This is a CloudFormation resource for the first-party AWS::Hooks::LambdaHook.
func LookupLambdaHook(ctx *pulumi.Context, args *LookupLambdaHookArgs, opts ...pulumi.InvokeOption) (*LookupLambdaHookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLambdaHookResult
	err := ctx.Invoke("aws-native:cloudformation:getLambdaHook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLambdaHookArgs struct {
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn string `pulumi:"hookArn"`
}

type LookupLambdaHookResult struct {
	// The execution role ARN assumed by Hooks to invoke Lambda.
	ExecutionRole *string `pulumi:"executionRole"`
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode *LambdaHookFailureMode `pulumi:"failureMode"`
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn *string `pulumi:"hookArn"`
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus *LambdaHookHookStatus `pulumi:"hookStatus"`
	// Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
	LambdaFunction *string `pulumi:"lambdaFunction"`
	// Filters to allow hooks to target specific stack attributes
	StackFilters *StackFiltersProperties `pulumi:"stackFilters"`
	// Attribute to specify which targets should invoke the hook
	TargetFilters interface{} `pulumi:"targetFilters"`
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations []LambdaHookTargetOperation `pulumi:"targetOperations"`
}

func LookupLambdaHookOutput(ctx *pulumi.Context, args LookupLambdaHookOutputArgs, opts ...pulumi.InvokeOption) LookupLambdaHookResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLambdaHookResultOutput, error) {
			args := v.(LookupLambdaHookArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:cloudformation:getLambdaHook", args, LookupLambdaHookResultOutput{}, options).(LookupLambdaHookResultOutput), nil
		}).(LookupLambdaHookResultOutput)
}

type LookupLambdaHookOutputArgs struct {
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn pulumi.StringInput `pulumi:"hookArn"`
}

func (LookupLambdaHookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLambdaHookArgs)(nil)).Elem()
}

type LookupLambdaHookResultOutput struct{ *pulumi.OutputState }

func (LookupLambdaHookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLambdaHookResult)(nil)).Elem()
}

func (o LookupLambdaHookResultOutput) ToLookupLambdaHookResultOutput() LookupLambdaHookResultOutput {
	return o
}

func (o LookupLambdaHookResultOutput) ToLookupLambdaHookResultOutputWithContext(ctx context.Context) LookupLambdaHookResultOutput {
	return o
}

// The execution role ARN assumed by Hooks to invoke Lambda.
func (o LookupLambdaHookResultOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) *string { return v.ExecutionRole }).(pulumi.StringPtrOutput)
}

// Attribute to specify CloudFormation behavior on hook failure.
func (o LookupLambdaHookResultOutput) FailureMode() LambdaHookFailureModePtrOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) *LambdaHookFailureMode { return v.FailureMode }).(LambdaHookFailureModePtrOutput)
}

// The Amazon Resource Name (ARN) of the activated hook
func (o LookupLambdaHookResultOutput) HookArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) *string { return v.HookArn }).(pulumi.StringPtrOutput)
}

// Attribute to specify which stacks this hook applies to or should get invoked for
func (o LookupLambdaHookResultOutput) HookStatus() LambdaHookHookStatusPtrOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) *LambdaHookHookStatus { return v.HookStatus }).(LambdaHookHookStatusPtrOutput)
}

// Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
func (o LookupLambdaHookResultOutput) LambdaFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) *string { return v.LambdaFunction }).(pulumi.StringPtrOutput)
}

// Filters to allow hooks to target specific stack attributes
func (o LookupLambdaHookResultOutput) StackFilters() StackFiltersPropertiesPtrOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) *StackFiltersProperties { return v.StackFilters }).(StackFiltersPropertiesPtrOutput)
}

// Attribute to specify which targets should invoke the hook
func (o LookupLambdaHookResultOutput) TargetFilters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) interface{} { return v.TargetFilters }).(pulumi.AnyOutput)
}

// Which operations should this Hook run against? Resource changes, stacks or change sets.
func (o LookupLambdaHookResultOutput) TargetOperations() LambdaHookTargetOperationArrayOutput {
	return o.ApplyT(func(v LookupLambdaHookResult) []LambdaHookTargetOperation { return v.TargetOperations }).(LambdaHookTargetOperationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLambdaHookResultOutput{})
}
