// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This is a CloudFormation resource for activating the first-party AWS::Hooks::GuardHook.
type GuardHook struct {
	pulumi.CustomResourceState

	// The typename alias for the hook.
	Alias pulumi.StringOutput `pulumi:"alias"`
	// The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
	ExecutionRole pulumi.StringOutput `pulumi:"executionRole"`
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode GuardHookFailureModeOutput `pulumi:"failureMode"`
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn pulumi.StringOutput `pulumi:"hookArn"`
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus GuardHookHookStatusOutput `pulumi:"hookStatus"`
	// S3 Bucket where the guard validate report will be uploaded to
	LogBucket    pulumi.StringPtrOutput     `pulumi:"logBucket"`
	Options      OptionsPropertiesPtrOutput `pulumi:"options"`
	RuleLocation GuardHookS3LocationOutput  `pulumi:"ruleLocation"`
	// Filters to allow hooks to target specific stack attributes
	StackFilters StackFiltersPropertiesPtrOutput `pulumi:"stackFilters"`
	// Attribute to specify which targets should invoke the hook
	TargetFilters pulumi.AnyOutput `pulumi:"targetFilters"`
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations GuardHookTargetOperationArrayOutput `pulumi:"targetOperations"`
}

// NewGuardHook registers a new resource with the given unique name, arguments, and options.
func NewGuardHook(ctx *pulumi.Context,
	name string, args *GuardHookArgs, opts ...pulumi.ResourceOption) (*GuardHook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Alias == nil {
		return nil, errors.New("invalid value for required argument 'Alias'")
	}
	if args.ExecutionRole == nil {
		return nil, errors.New("invalid value for required argument 'ExecutionRole'")
	}
	if args.FailureMode == nil {
		return nil, errors.New("invalid value for required argument 'FailureMode'")
	}
	if args.HookStatus == nil {
		return nil, errors.New("invalid value for required argument 'HookStatus'")
	}
	if args.RuleLocation == nil {
		return nil, errors.New("invalid value for required argument 'RuleLocation'")
	}
	if args.TargetOperations == nil {
		return nil, errors.New("invalid value for required argument 'TargetOperations'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"alias",
		"executionRole",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GuardHook
	err := ctx.RegisterResource("aws-native:cloudformation:GuardHook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGuardHook gets an existing GuardHook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGuardHook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GuardHookState, opts ...pulumi.ResourceOption) (*GuardHook, error) {
	var resource GuardHook
	err := ctx.ReadResource("aws-native:cloudformation:GuardHook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GuardHook resources.
type guardHookState struct {
}

type GuardHookState struct {
}

func (GuardHookState) ElementType() reflect.Type {
	return reflect.TypeOf((*guardHookState)(nil)).Elem()
}

type guardHookArgs struct {
	// The typename alias for the hook.
	Alias string `pulumi:"alias"`
	// The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
	ExecutionRole string `pulumi:"executionRole"`
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode GuardHookFailureMode `pulumi:"failureMode"`
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus GuardHookHookStatus `pulumi:"hookStatus"`
	// S3 Bucket where the guard validate report will be uploaded to
	LogBucket    *string             `pulumi:"logBucket"`
	Options      *OptionsProperties  `pulumi:"options"`
	RuleLocation GuardHookS3Location `pulumi:"ruleLocation"`
	// Filters to allow hooks to target specific stack attributes
	StackFilters *StackFiltersProperties `pulumi:"stackFilters"`
	// Attribute to specify which targets should invoke the hook
	TargetFilters interface{} `pulumi:"targetFilters"`
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations []GuardHookTargetOperation `pulumi:"targetOperations"`
}

// The set of arguments for constructing a GuardHook resource.
type GuardHookArgs struct {
	// The typename alias for the hook.
	Alias pulumi.StringInput
	// The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
	ExecutionRole pulumi.StringInput
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode GuardHookFailureModeInput
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus GuardHookHookStatusInput
	// S3 Bucket where the guard validate report will be uploaded to
	LogBucket    pulumi.StringPtrInput
	Options      OptionsPropertiesPtrInput
	RuleLocation GuardHookS3LocationInput
	// Filters to allow hooks to target specific stack attributes
	StackFilters StackFiltersPropertiesPtrInput
	// Attribute to specify which targets should invoke the hook
	TargetFilters pulumi.Input
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations GuardHookTargetOperationArrayInput
}

func (GuardHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*guardHookArgs)(nil)).Elem()
}

type GuardHookInput interface {
	pulumi.Input

	ToGuardHookOutput() GuardHookOutput
	ToGuardHookOutputWithContext(ctx context.Context) GuardHookOutput
}

func (*GuardHook) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardHook)(nil)).Elem()
}

func (i *GuardHook) ToGuardHookOutput() GuardHookOutput {
	return i.ToGuardHookOutputWithContext(context.Background())
}

func (i *GuardHook) ToGuardHookOutputWithContext(ctx context.Context) GuardHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardHookOutput)
}

type GuardHookOutput struct{ *pulumi.OutputState }

func (GuardHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardHook)(nil)).Elem()
}

func (o GuardHookOutput) ToGuardHookOutput() GuardHookOutput {
	return o
}

func (o GuardHookOutput) ToGuardHookOutputWithContext(ctx context.Context) GuardHookOutput {
	return o
}

// The typename alias for the hook.
func (o GuardHookOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v *GuardHook) pulumi.StringOutput { return v.Alias }).(pulumi.StringOutput)
}

// The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
func (o GuardHookOutput) ExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v *GuardHook) pulumi.StringOutput { return v.ExecutionRole }).(pulumi.StringOutput)
}

// Attribute to specify CloudFormation behavior on hook failure.
func (o GuardHookOutput) FailureMode() GuardHookFailureModeOutput {
	return o.ApplyT(func(v *GuardHook) GuardHookFailureModeOutput { return v.FailureMode }).(GuardHookFailureModeOutput)
}

// The Amazon Resource Name (ARN) of the activated hook
func (o GuardHookOutput) HookArn() pulumi.StringOutput {
	return o.ApplyT(func(v *GuardHook) pulumi.StringOutput { return v.HookArn }).(pulumi.StringOutput)
}

// Attribute to specify which stacks this hook applies to or should get invoked for
func (o GuardHookOutput) HookStatus() GuardHookHookStatusOutput {
	return o.ApplyT(func(v *GuardHook) GuardHookHookStatusOutput { return v.HookStatus }).(GuardHookHookStatusOutput)
}

// S3 Bucket where the guard validate report will be uploaded to
func (o GuardHookOutput) LogBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardHook) pulumi.StringPtrOutput { return v.LogBucket }).(pulumi.StringPtrOutput)
}

func (o GuardHookOutput) Options() OptionsPropertiesPtrOutput {
	return o.ApplyT(func(v *GuardHook) OptionsPropertiesPtrOutput { return v.Options }).(OptionsPropertiesPtrOutput)
}

func (o GuardHookOutput) RuleLocation() GuardHookS3LocationOutput {
	return o.ApplyT(func(v *GuardHook) GuardHookS3LocationOutput { return v.RuleLocation }).(GuardHookS3LocationOutput)
}

// Filters to allow hooks to target specific stack attributes
func (o GuardHookOutput) StackFilters() StackFiltersPropertiesPtrOutput {
	return o.ApplyT(func(v *GuardHook) StackFiltersPropertiesPtrOutput { return v.StackFilters }).(StackFiltersPropertiesPtrOutput)
}

// Attribute to specify which targets should invoke the hook
func (o GuardHookOutput) TargetFilters() pulumi.AnyOutput {
	return o.ApplyT(func(v *GuardHook) pulumi.AnyOutput { return v.TargetFilters }).(pulumi.AnyOutput)
}

// Which operations should this Hook run against? Resource changes, stacks or change sets.
func (o GuardHookOutput) TargetOperations() GuardHookTargetOperationArrayOutput {
	return o.ApplyT(func(v *GuardHook) GuardHookTargetOperationArrayOutput { return v.TargetOperations }).(GuardHookTargetOperationArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GuardHookInput)(nil)).Elem(), &GuardHook{})
	pulumi.RegisterOutputType(GuardHookOutput{})
}
