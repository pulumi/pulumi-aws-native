// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// StackSet as a resource provides one-click experience for provisioning a StackSet and StackInstances
type StackSet struct {
	pulumi.CustomResourceState

	// The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
	AdministrationRoleARN pulumi.StringPtrOutput `pulumi:"administrationRoleARN"`
	// Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
	AutoDeployment StackSetAutoDeploymentPtrOutput `pulumi:"autoDeployment"`
	// Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
	CallAs StackSetCallAsPtrOutput `pulumi:"callAs"`
	// In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
	Capabilities StackSetCapabilityArrayOutput `pulumi:"capabilities"`
	// A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
	ExecutionRoleName    pulumi.StringPtrOutput                `pulumi:"executionRoleName"`
	OperationPreferences StackSetOperationPreferencesPtrOutput `pulumi:"operationPreferences"`
	// The input parameters for the stack set template.
	Parameters StackSetParameterArrayOutput `pulumi:"parameters"`
	// Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
	PermissionModel StackSetPermissionModelOutput `pulumi:"permissionModel"`
	// A group of stack instances with parameters in some specific accounts and regions.
	StackInstancesGroup StackSetStackInstancesArrayOutput `pulumi:"stackInstancesGroup"`
	// The ID of the stack set that you're creating.
	StackSetId pulumi.StringOutput `pulumi:"stackSetId"`
	// The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
	StackSetName pulumi.StringOutput `pulumi:"stackSetName"`
	// The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
	Tags StackSetTagArrayOutput `pulumi:"tags"`
	// The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
	TemplateBody pulumi.StringPtrOutput `pulumi:"templateBody"`
	// Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.
	TemplateURL pulumi.StringPtrOutput `pulumi:"templateURL"`
}

// NewStackSet registers a new resource with the given unique name, arguments, and options.
func NewStackSet(ctx *pulumi.Context,
	name string, args *StackSetArgs, opts ...pulumi.ResourceOption) (*StackSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PermissionModel == nil {
		return nil, errors.New("invalid value for required argument 'PermissionModel'")
	}
	if args.StackSetName == nil {
		return nil, errors.New("invalid value for required argument 'StackSetName'")
	}
	var resource StackSet
	err := ctx.RegisterResource("aws-native:cloudformation:StackSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackSet gets an existing StackSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackSetState, opts ...pulumi.ResourceOption) (*StackSet, error) {
	var resource StackSet
	err := ctx.ReadResource("aws-native:cloudformation:StackSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackSet resources.
type stackSetState struct {
}

type StackSetState struct {
}

func (StackSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetState)(nil)).Elem()
}

type stackSetArgs struct {
	// The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
	AdministrationRoleARN *string `pulumi:"administrationRoleARN"`
	// Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
	AutoDeployment *StackSetAutoDeployment `pulumi:"autoDeployment"`
	// Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
	CallAs *StackSetCallAs `pulumi:"callAs"`
	// In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
	Capabilities []StackSetCapability `pulumi:"capabilities"`
	// A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
	Description *string `pulumi:"description"`
	// The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
	ExecutionRoleName    *string                       `pulumi:"executionRoleName"`
	OperationPreferences *StackSetOperationPreferences `pulumi:"operationPreferences"`
	// The input parameters for the stack set template.
	Parameters []StackSetParameter `pulumi:"parameters"`
	// Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
	PermissionModel StackSetPermissionModel `pulumi:"permissionModel"`
	// A group of stack instances with parameters in some specific accounts and regions.
	StackInstancesGroup []StackSetStackInstances `pulumi:"stackInstancesGroup"`
	// The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
	StackSetName string `pulumi:"stackSetName"`
	// The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
	Tags []StackSetTag `pulumi:"tags"`
	// The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
	TemplateBody *string `pulumi:"templateBody"`
	// Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.
	TemplateURL *string `pulumi:"templateURL"`
}

// The set of arguments for constructing a StackSet resource.
type StackSetArgs struct {
	// The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
	AdministrationRoleARN pulumi.StringPtrInput
	// Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
	AutoDeployment StackSetAutoDeploymentPtrInput
	// Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
	CallAs StackSetCallAsPtrInput
	// In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
	Capabilities StackSetCapabilityArrayInput
	// A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
	Description pulumi.StringPtrInput
	// The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
	ExecutionRoleName    pulumi.StringPtrInput
	OperationPreferences StackSetOperationPreferencesPtrInput
	// The input parameters for the stack set template.
	Parameters StackSetParameterArrayInput
	// Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
	PermissionModel StackSetPermissionModelInput
	// A group of stack instances with parameters in some specific accounts and regions.
	StackInstancesGroup StackSetStackInstancesArrayInput
	// The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
	StackSetName pulumi.StringInput
	// The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
	Tags StackSetTagArrayInput
	// The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
	TemplateBody pulumi.StringPtrInput
	// Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.
	TemplateURL pulumi.StringPtrInput
}

func (StackSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetArgs)(nil)).Elem()
}

type StackSetInput interface {
	pulumi.Input

	ToStackSetOutput() StackSetOutput
	ToStackSetOutputWithContext(ctx context.Context) StackSetOutput
}

func (*StackSet) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSet)(nil))
}

func (i *StackSet) ToStackSetOutput() StackSetOutput {
	return i.ToStackSetOutputWithContext(context.Background())
}

func (i *StackSet) ToStackSetOutputWithContext(ctx context.Context) StackSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOutput)
}

type StackSetOutput struct{ *pulumi.OutputState }

func (StackSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSet)(nil))
}

func (o StackSetOutput) ToStackSetOutput() StackSetOutput {
	return o
}

func (o StackSetOutput) ToStackSetOutputWithContext(ctx context.Context) StackSetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(StackSetOutput{})
}
