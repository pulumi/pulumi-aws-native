// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This is a CloudFormation resource for activating the first-party AWS::Hooks::GuardHook.
func LookupGuardHook(ctx *pulumi.Context, args *LookupGuardHookArgs, opts ...pulumi.InvokeOption) (*LookupGuardHookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGuardHookResult
	err := ctx.Invoke("aws-native:cloudformation:getGuardHook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGuardHookArgs struct {
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn string `pulumi:"hookArn"`
}

type LookupGuardHookResult struct {
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode *GuardHookFailureMode `pulumi:"failureMode"`
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn *string `pulumi:"hookArn"`
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus *GuardHookHookStatus `pulumi:"hookStatus"`
	// S3 Bucket where the guard validate report will be uploaded to
	LogBucket    *string              `pulumi:"logBucket"`
	Options      *OptionsProperties   `pulumi:"options"`
	RuleLocation *GuardHookS3Location `pulumi:"ruleLocation"`
	// Filters to allow hooks to target specific stack attributes
	StackFilters *StackFiltersProperties `pulumi:"stackFilters"`
	// Attribute to specify which targets should invoke the hook
	TargetFilters interface{} `pulumi:"targetFilters"`
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations []GuardHookTargetOperation `pulumi:"targetOperations"`
}

func LookupGuardHookOutput(ctx *pulumi.Context, args LookupGuardHookOutputArgs, opts ...pulumi.InvokeOption) LookupGuardHookResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGuardHookResultOutput, error) {
			args := v.(LookupGuardHookArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGuardHookResult
			secret, err := ctx.InvokePackageRaw("aws-native:cloudformation:getGuardHook", args, &rv, "", opts...)
			if err != nil {
				return LookupGuardHookResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGuardHookResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGuardHookResultOutput), nil
			}
			return output, nil
		}).(LookupGuardHookResultOutput)
}

type LookupGuardHookOutputArgs struct {
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn pulumi.StringInput `pulumi:"hookArn"`
}

func (LookupGuardHookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGuardHookArgs)(nil)).Elem()
}

type LookupGuardHookResultOutput struct{ *pulumi.OutputState }

func (LookupGuardHookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGuardHookResult)(nil)).Elem()
}

func (o LookupGuardHookResultOutput) ToLookupGuardHookResultOutput() LookupGuardHookResultOutput {
	return o
}

func (o LookupGuardHookResultOutput) ToLookupGuardHookResultOutputWithContext(ctx context.Context) LookupGuardHookResultOutput {
	return o
}

// Attribute to specify CloudFormation behavior on hook failure.
func (o LookupGuardHookResultOutput) FailureMode() GuardHookFailureModePtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *GuardHookFailureMode { return v.FailureMode }).(GuardHookFailureModePtrOutput)
}

// The Amazon Resource Name (ARN) of the activated hook
func (o LookupGuardHookResultOutput) HookArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *string { return v.HookArn }).(pulumi.StringPtrOutput)
}

// Attribute to specify which stacks this hook applies to or should get invoked for
func (o LookupGuardHookResultOutput) HookStatus() GuardHookHookStatusPtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *GuardHookHookStatus { return v.HookStatus }).(GuardHookHookStatusPtrOutput)
}

// S3 Bucket where the guard validate report will be uploaded to
func (o LookupGuardHookResultOutput) LogBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *string { return v.LogBucket }).(pulumi.StringPtrOutput)
}

func (o LookupGuardHookResultOutput) Options() OptionsPropertiesPtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *OptionsProperties { return v.Options }).(OptionsPropertiesPtrOutput)
}

func (o LookupGuardHookResultOutput) RuleLocation() GuardHookS3LocationPtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *GuardHookS3Location { return v.RuleLocation }).(GuardHookS3LocationPtrOutput)
}

// Filters to allow hooks to target specific stack attributes
func (o LookupGuardHookResultOutput) StackFilters() StackFiltersPropertiesPtrOutput {
	return o.ApplyT(func(v LookupGuardHookResult) *StackFiltersProperties { return v.StackFilters }).(StackFiltersPropertiesPtrOutput)
}

// Attribute to specify which targets should invoke the hook
func (o LookupGuardHookResultOutput) TargetFilters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupGuardHookResult) interface{} { return v.TargetFilters }).(pulumi.AnyOutput)
}

// Which operations should this Hook run against? Resource changes, stacks or change sets.
func (o LookupGuardHookResultOutput) TargetOperations() GuardHookTargetOperationArrayOutput {
	return o.ApplyT(func(v LookupGuardHookResult) []GuardHookTargetOperation { return v.TargetOperations }).(GuardHookTargetOperationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGuardHookResultOutput{})
}
