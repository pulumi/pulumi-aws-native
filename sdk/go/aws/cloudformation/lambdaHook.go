// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This is a CloudFormation resource for the first-party AWS::Hooks::LambdaHook.
type LambdaHook struct {
	pulumi.CustomResourceState

	// The typename alias for the hook.
	Alias pulumi.StringOutput `pulumi:"alias"`
	// The execution role ARN assumed by Hooks to invoke Lambda.
	ExecutionRole pulumi.StringOutput `pulumi:"executionRole"`
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode LambdaHookFailureModeOutput `pulumi:"failureMode"`
	// The Amazon Resource Name (ARN) of the activated hook
	HookArn pulumi.StringOutput `pulumi:"hookArn"`
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus LambdaHookHookStatusOutput `pulumi:"hookStatus"`
	// Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
	LambdaFunction pulumi.StringOutput `pulumi:"lambdaFunction"`
	// Filters to allow hooks to target specific stack attributes
	StackFilters StackFiltersPropertiesPtrOutput `pulumi:"stackFilters"`
	// Attribute to specify which targets should invoke the hook
	TargetFilters pulumi.AnyOutput `pulumi:"targetFilters"`
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations LambdaHookTargetOperationArrayOutput `pulumi:"targetOperations"`
}

// NewLambdaHook registers a new resource with the given unique name, arguments, and options.
func NewLambdaHook(ctx *pulumi.Context,
	name string, args *LambdaHookArgs, opts ...pulumi.ResourceOption) (*LambdaHook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Alias == nil {
		return nil, errors.New("invalid value for required argument 'Alias'")
	}
	if args.ExecutionRole == nil {
		return nil, errors.New("invalid value for required argument 'ExecutionRole'")
	}
	if args.FailureMode == nil {
		return nil, errors.New("invalid value for required argument 'FailureMode'")
	}
	if args.HookStatus == nil {
		return nil, errors.New("invalid value for required argument 'HookStatus'")
	}
	if args.LambdaFunction == nil {
		return nil, errors.New("invalid value for required argument 'LambdaFunction'")
	}
	if args.TargetOperations == nil {
		return nil, errors.New("invalid value for required argument 'TargetOperations'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"alias",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LambdaHook
	err := ctx.RegisterResource("aws-native:cloudformation:LambdaHook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLambdaHook gets an existing LambdaHook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLambdaHook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LambdaHookState, opts ...pulumi.ResourceOption) (*LambdaHook, error) {
	var resource LambdaHook
	err := ctx.ReadResource("aws-native:cloudformation:LambdaHook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LambdaHook resources.
type lambdaHookState struct {
}

type LambdaHookState struct {
}

func (LambdaHookState) ElementType() reflect.Type {
	return reflect.TypeOf((*lambdaHookState)(nil)).Elem()
}

type lambdaHookArgs struct {
	// The typename alias for the hook.
	Alias string `pulumi:"alias"`
	// The execution role ARN assumed by Hooks to invoke Lambda.
	ExecutionRole string `pulumi:"executionRole"`
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode LambdaHookFailureMode `pulumi:"failureMode"`
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus LambdaHookHookStatus `pulumi:"hookStatus"`
	// Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
	LambdaFunction string `pulumi:"lambdaFunction"`
	// Filters to allow hooks to target specific stack attributes
	StackFilters *StackFiltersProperties `pulumi:"stackFilters"`
	// Attribute to specify which targets should invoke the hook
	TargetFilters interface{} `pulumi:"targetFilters"`
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations []LambdaHookTargetOperation `pulumi:"targetOperations"`
}

// The set of arguments for constructing a LambdaHook resource.
type LambdaHookArgs struct {
	// The typename alias for the hook.
	Alias pulumi.StringInput
	// The execution role ARN assumed by Hooks to invoke Lambda.
	ExecutionRole pulumi.StringInput
	// Attribute to specify CloudFormation behavior on hook failure.
	FailureMode LambdaHookFailureModeInput
	// Attribute to specify which stacks this hook applies to or should get invoked for
	HookStatus LambdaHookHookStatusInput
	// Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
	LambdaFunction pulumi.StringInput
	// Filters to allow hooks to target specific stack attributes
	StackFilters StackFiltersPropertiesPtrInput
	// Attribute to specify which targets should invoke the hook
	TargetFilters pulumi.Input
	// Which operations should this Hook run against? Resource changes, stacks or change sets.
	TargetOperations LambdaHookTargetOperationArrayInput
}

func (LambdaHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lambdaHookArgs)(nil)).Elem()
}

type LambdaHookInput interface {
	pulumi.Input

	ToLambdaHookOutput() LambdaHookOutput
	ToLambdaHookOutputWithContext(ctx context.Context) LambdaHookOutput
}

func (*LambdaHook) ElementType() reflect.Type {
	return reflect.TypeOf((**LambdaHook)(nil)).Elem()
}

func (i *LambdaHook) ToLambdaHookOutput() LambdaHookOutput {
	return i.ToLambdaHookOutputWithContext(context.Background())
}

func (i *LambdaHook) ToLambdaHookOutputWithContext(ctx context.Context) LambdaHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LambdaHookOutput)
}

type LambdaHookOutput struct{ *pulumi.OutputState }

func (LambdaHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LambdaHook)(nil)).Elem()
}

func (o LambdaHookOutput) ToLambdaHookOutput() LambdaHookOutput {
	return o
}

func (o LambdaHookOutput) ToLambdaHookOutputWithContext(ctx context.Context) LambdaHookOutput {
	return o
}

// The typename alias for the hook.
func (o LambdaHookOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v *LambdaHook) pulumi.StringOutput { return v.Alias }).(pulumi.StringOutput)
}

// The execution role ARN assumed by Hooks to invoke Lambda.
func (o LambdaHookOutput) ExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v *LambdaHook) pulumi.StringOutput { return v.ExecutionRole }).(pulumi.StringOutput)
}

// Attribute to specify CloudFormation behavior on hook failure.
func (o LambdaHookOutput) FailureMode() LambdaHookFailureModeOutput {
	return o.ApplyT(func(v *LambdaHook) LambdaHookFailureModeOutput { return v.FailureMode }).(LambdaHookFailureModeOutput)
}

// The Amazon Resource Name (ARN) of the activated hook
func (o LambdaHookOutput) HookArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LambdaHook) pulumi.StringOutput { return v.HookArn }).(pulumi.StringOutput)
}

// Attribute to specify which stacks this hook applies to or should get invoked for
func (o LambdaHookOutput) HookStatus() LambdaHookHookStatusOutput {
	return o.ApplyT(func(v *LambdaHook) LambdaHookHookStatusOutput { return v.HookStatus }).(LambdaHookHookStatusOutput)
}

// Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
func (o LambdaHookOutput) LambdaFunction() pulumi.StringOutput {
	return o.ApplyT(func(v *LambdaHook) pulumi.StringOutput { return v.LambdaFunction }).(pulumi.StringOutput)
}

// Filters to allow hooks to target specific stack attributes
func (o LambdaHookOutput) StackFilters() StackFiltersPropertiesPtrOutput {
	return o.ApplyT(func(v *LambdaHook) StackFiltersPropertiesPtrOutput { return v.StackFilters }).(StackFiltersPropertiesPtrOutput)
}

// Attribute to specify which targets should invoke the hook
func (o LambdaHookOutput) TargetFilters() pulumi.AnyOutput {
	return o.ApplyT(func(v *LambdaHook) pulumi.AnyOutput { return v.TargetFilters }).(pulumi.AnyOutput)
}

// Which operations should this Hook run against? Resource changes, stacks or change sets.
func (o LambdaHookOutput) TargetOperations() LambdaHookTargetOperationArrayOutput {
	return o.ApplyT(func(v *LambdaHook) LambdaHookTargetOperationArrayOutput { return v.TargetOperations }).(LambdaHookTargetOperationArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LambdaHookInput)(nil)).Elem(), &LambdaHook{})
	pulumi.RegisterOutputType(LambdaHookOutput{})
}
