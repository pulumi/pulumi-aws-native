// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceVersionLoggingConfig struct {
	// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName *string `pulumi:"logGroupName"`
	// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
	LogRoleArn *string `pulumi:"logRoleArn"`
}

// ResourceVersionLoggingConfigInput is an input type that accepts ResourceVersionLoggingConfigArgs and ResourceVersionLoggingConfigOutput values.
// You can construct a concrete instance of `ResourceVersionLoggingConfigInput` via:
//
//          ResourceVersionLoggingConfigArgs{...}
type ResourceVersionLoggingConfigInput interface {
	pulumi.Input

	ToResourceVersionLoggingConfigOutput() ResourceVersionLoggingConfigOutput
	ToResourceVersionLoggingConfigOutputWithContext(context.Context) ResourceVersionLoggingConfigOutput
}

type ResourceVersionLoggingConfigArgs struct {
	// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
	LogRoleArn pulumi.StringPtrInput `pulumi:"logRoleArn"`
}

func (ResourceVersionLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceVersionLoggingConfig)(nil)).Elem()
}

func (i ResourceVersionLoggingConfigArgs) ToResourceVersionLoggingConfigOutput() ResourceVersionLoggingConfigOutput {
	return i.ToResourceVersionLoggingConfigOutputWithContext(context.Background())
}

func (i ResourceVersionLoggingConfigArgs) ToResourceVersionLoggingConfigOutputWithContext(ctx context.Context) ResourceVersionLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceVersionLoggingConfigOutput)
}

func (i ResourceVersionLoggingConfigArgs) ToResourceVersionLoggingConfigPtrOutput() ResourceVersionLoggingConfigPtrOutput {
	return i.ToResourceVersionLoggingConfigPtrOutputWithContext(context.Background())
}

func (i ResourceVersionLoggingConfigArgs) ToResourceVersionLoggingConfigPtrOutputWithContext(ctx context.Context) ResourceVersionLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceVersionLoggingConfigOutput).ToResourceVersionLoggingConfigPtrOutputWithContext(ctx)
}

// ResourceVersionLoggingConfigPtrInput is an input type that accepts ResourceVersionLoggingConfigArgs, ResourceVersionLoggingConfigPtr and ResourceVersionLoggingConfigPtrOutput values.
// You can construct a concrete instance of `ResourceVersionLoggingConfigPtrInput` via:
//
//          ResourceVersionLoggingConfigArgs{...}
//
//  or:
//
//          nil
type ResourceVersionLoggingConfigPtrInput interface {
	pulumi.Input

	ToResourceVersionLoggingConfigPtrOutput() ResourceVersionLoggingConfigPtrOutput
	ToResourceVersionLoggingConfigPtrOutputWithContext(context.Context) ResourceVersionLoggingConfigPtrOutput
}

type resourceVersionLoggingConfigPtrType ResourceVersionLoggingConfigArgs

func ResourceVersionLoggingConfigPtr(v *ResourceVersionLoggingConfigArgs) ResourceVersionLoggingConfigPtrInput {
	return (*resourceVersionLoggingConfigPtrType)(v)
}

func (*resourceVersionLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceVersionLoggingConfig)(nil)).Elem()
}

func (i *resourceVersionLoggingConfigPtrType) ToResourceVersionLoggingConfigPtrOutput() ResourceVersionLoggingConfigPtrOutput {
	return i.ToResourceVersionLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *resourceVersionLoggingConfigPtrType) ToResourceVersionLoggingConfigPtrOutputWithContext(ctx context.Context) ResourceVersionLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceVersionLoggingConfigPtrOutput)
}

type ResourceVersionLoggingConfigOutput struct{ *pulumi.OutputState }

func (ResourceVersionLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceVersionLoggingConfig)(nil)).Elem()
}

func (o ResourceVersionLoggingConfigOutput) ToResourceVersionLoggingConfigOutput() ResourceVersionLoggingConfigOutput {
	return o
}

func (o ResourceVersionLoggingConfigOutput) ToResourceVersionLoggingConfigOutputWithContext(ctx context.Context) ResourceVersionLoggingConfigOutput {
	return o
}

func (o ResourceVersionLoggingConfigOutput) ToResourceVersionLoggingConfigPtrOutput() ResourceVersionLoggingConfigPtrOutput {
	return o.ToResourceVersionLoggingConfigPtrOutputWithContext(context.Background())
}

func (o ResourceVersionLoggingConfigOutput) ToResourceVersionLoggingConfigPtrOutputWithContext(ctx context.Context) ResourceVersionLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceVersionLoggingConfig) *ResourceVersionLoggingConfig {
		return &v
	}).(ResourceVersionLoggingConfigPtrOutput)
}

// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
func (o ResourceVersionLoggingConfigOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceVersionLoggingConfig) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
func (o ResourceVersionLoggingConfigOutput) LogRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceVersionLoggingConfig) *string { return v.LogRoleArn }).(pulumi.StringPtrOutput)
}

type ResourceVersionLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (ResourceVersionLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceVersionLoggingConfig)(nil)).Elem()
}

func (o ResourceVersionLoggingConfigPtrOutput) ToResourceVersionLoggingConfigPtrOutput() ResourceVersionLoggingConfigPtrOutput {
	return o
}

func (o ResourceVersionLoggingConfigPtrOutput) ToResourceVersionLoggingConfigPtrOutputWithContext(ctx context.Context) ResourceVersionLoggingConfigPtrOutput {
	return o
}

func (o ResourceVersionLoggingConfigPtrOutput) Elem() ResourceVersionLoggingConfigOutput {
	return o.ApplyT(func(v *ResourceVersionLoggingConfig) ResourceVersionLoggingConfig {
		if v != nil {
			return *v
		}
		var ret ResourceVersionLoggingConfig
		return ret
	}).(ResourceVersionLoggingConfigOutput)
}

// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
func (o ResourceVersionLoggingConfigPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceVersionLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
func (o ResourceVersionLoggingConfigPtrOutput) LogRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceVersionLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogRoleArn
	}).(pulumi.StringPtrOutput)
}

type StackSetAutoDeployment struct {
	// If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
	Enabled *bool `pulumi:"enabled"`
	// If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True.
	RetainStacksOnAccountRemoval *bool `pulumi:"retainStacksOnAccountRemoval"`
}

// StackSetAutoDeploymentInput is an input type that accepts StackSetAutoDeploymentArgs and StackSetAutoDeploymentOutput values.
// You can construct a concrete instance of `StackSetAutoDeploymentInput` via:
//
//          StackSetAutoDeploymentArgs{...}
type StackSetAutoDeploymentInput interface {
	pulumi.Input

	ToStackSetAutoDeploymentOutput() StackSetAutoDeploymentOutput
	ToStackSetAutoDeploymentOutputWithContext(context.Context) StackSetAutoDeploymentOutput
}

type StackSetAutoDeploymentArgs struct {
	// If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True.
	RetainStacksOnAccountRemoval pulumi.BoolPtrInput `pulumi:"retainStacksOnAccountRemoval"`
}

func (StackSetAutoDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetAutoDeployment)(nil)).Elem()
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentOutput() StackSetAutoDeploymentOutput {
	return i.ToStackSetAutoDeploymentOutputWithContext(context.Background())
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentOutputWithContext(ctx context.Context) StackSetAutoDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetAutoDeploymentOutput)
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return i.ToStackSetAutoDeploymentPtrOutputWithContext(context.Background())
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetAutoDeploymentOutput).ToStackSetAutoDeploymentPtrOutputWithContext(ctx)
}

// StackSetAutoDeploymentPtrInput is an input type that accepts StackSetAutoDeploymentArgs, StackSetAutoDeploymentPtr and StackSetAutoDeploymentPtrOutput values.
// You can construct a concrete instance of `StackSetAutoDeploymentPtrInput` via:
//
//          StackSetAutoDeploymentArgs{...}
//
//  or:
//
//          nil
type StackSetAutoDeploymentPtrInput interface {
	pulumi.Input

	ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput
	ToStackSetAutoDeploymentPtrOutputWithContext(context.Context) StackSetAutoDeploymentPtrOutput
}

type stackSetAutoDeploymentPtrType StackSetAutoDeploymentArgs

func StackSetAutoDeploymentPtr(v *StackSetAutoDeploymentArgs) StackSetAutoDeploymentPtrInput {
	return (*stackSetAutoDeploymentPtrType)(v)
}

func (*stackSetAutoDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetAutoDeployment)(nil)).Elem()
}

func (i *stackSetAutoDeploymentPtrType) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return i.ToStackSetAutoDeploymentPtrOutputWithContext(context.Background())
}

func (i *stackSetAutoDeploymentPtrType) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetAutoDeploymentPtrOutput)
}

type StackSetAutoDeploymentOutput struct{ *pulumi.OutputState }

func (StackSetAutoDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetAutoDeployment)(nil)).Elem()
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentOutput() StackSetAutoDeploymentOutput {
	return o
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentOutputWithContext(ctx context.Context) StackSetAutoDeploymentOutput {
	return o
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return o.ToStackSetAutoDeploymentPtrOutputWithContext(context.Background())
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackSetAutoDeployment) *StackSetAutoDeployment {
		return &v
	}).(StackSetAutoDeploymentPtrOutput)
}

// If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
func (o StackSetAutoDeploymentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StackSetAutoDeployment) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True.
func (o StackSetAutoDeploymentOutput) RetainStacksOnAccountRemoval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StackSetAutoDeployment) *bool { return v.RetainStacksOnAccountRemoval }).(pulumi.BoolPtrOutput)
}

type StackSetAutoDeploymentPtrOutput struct{ *pulumi.OutputState }

func (StackSetAutoDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetAutoDeployment)(nil)).Elem()
}

func (o StackSetAutoDeploymentPtrOutput) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return o
}

func (o StackSetAutoDeploymentPtrOutput) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return o
}

func (o StackSetAutoDeploymentPtrOutput) Elem() StackSetAutoDeploymentOutput {
	return o.ApplyT(func(v *StackSetAutoDeployment) StackSetAutoDeployment {
		if v != nil {
			return *v
		}
		var ret StackSetAutoDeployment
		return ret
	}).(StackSetAutoDeploymentOutput)
}

// If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
func (o StackSetAutoDeploymentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackSetAutoDeployment) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True.
func (o StackSetAutoDeploymentPtrOutput) RetainStacksOnAccountRemoval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackSetAutoDeployment) *bool {
		if v == nil {
			return nil
		}
		return v.RetainStacksOnAccountRemoval
	}).(pulumi.BoolPtrOutput)
}

//  The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
type StackSetDeploymentTargets struct {
	// AWS accounts that you want to create stack instances in the specified Region(s) for.
	Accounts []string `pulumi:"accounts"`
	// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
	OrganizationalUnitIds []string `pulumi:"organizationalUnitIds"`
}

// StackSetDeploymentTargetsInput is an input type that accepts StackSetDeploymentTargetsArgs and StackSetDeploymentTargetsOutput values.
// You can construct a concrete instance of `StackSetDeploymentTargetsInput` via:
//
//          StackSetDeploymentTargetsArgs{...}
type StackSetDeploymentTargetsInput interface {
	pulumi.Input

	ToStackSetDeploymentTargetsOutput() StackSetDeploymentTargetsOutput
	ToStackSetDeploymentTargetsOutputWithContext(context.Context) StackSetDeploymentTargetsOutput
}

//  The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
type StackSetDeploymentTargetsArgs struct {
	// AWS accounts that you want to create stack instances in the specified Region(s) for.
	Accounts pulumi.StringArrayInput `pulumi:"accounts"`
	// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
	OrganizationalUnitIds pulumi.StringArrayInput `pulumi:"organizationalUnitIds"`
}

func (StackSetDeploymentTargetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetDeploymentTargets)(nil)).Elem()
}

func (i StackSetDeploymentTargetsArgs) ToStackSetDeploymentTargetsOutput() StackSetDeploymentTargetsOutput {
	return i.ToStackSetDeploymentTargetsOutputWithContext(context.Background())
}

func (i StackSetDeploymentTargetsArgs) ToStackSetDeploymentTargetsOutputWithContext(ctx context.Context) StackSetDeploymentTargetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetDeploymentTargetsOutput)
}

//  The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.
type StackSetDeploymentTargetsOutput struct{ *pulumi.OutputState }

func (StackSetDeploymentTargetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetDeploymentTargets)(nil)).Elem()
}

func (o StackSetDeploymentTargetsOutput) ToStackSetDeploymentTargetsOutput() StackSetDeploymentTargetsOutput {
	return o
}

func (o StackSetDeploymentTargetsOutput) ToStackSetDeploymentTargetsOutputWithContext(ctx context.Context) StackSetDeploymentTargetsOutput {
	return o
}

// AWS accounts that you want to create stack instances in the specified Region(s) for.
func (o StackSetDeploymentTargetsOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetDeploymentTargets) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
func (o StackSetDeploymentTargetsOutput) OrganizationalUnitIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetDeploymentTargets) []string { return v.OrganizationalUnitIds }).(pulumi.StringArrayOutput)
}

// The user-specified preferences for how AWS CloudFormation performs a stack set operation.
type StackSetOperationPreferences struct {
	FailureToleranceCount      *int                           `pulumi:"failureToleranceCount"`
	FailureTolerancePercentage *int                           `pulumi:"failureTolerancePercentage"`
	MaxConcurrentCount         *int                           `pulumi:"maxConcurrentCount"`
	MaxConcurrentPercentage    *int                           `pulumi:"maxConcurrentPercentage"`
	RegionConcurrencyType      *StackSetRegionConcurrencyType `pulumi:"regionConcurrencyType"`
	RegionOrder                []string                       `pulumi:"regionOrder"`
}

// StackSetOperationPreferencesInput is an input type that accepts StackSetOperationPreferencesArgs and StackSetOperationPreferencesOutput values.
// You can construct a concrete instance of `StackSetOperationPreferencesInput` via:
//
//          StackSetOperationPreferencesArgs{...}
type StackSetOperationPreferencesInput interface {
	pulumi.Input

	ToStackSetOperationPreferencesOutput() StackSetOperationPreferencesOutput
	ToStackSetOperationPreferencesOutputWithContext(context.Context) StackSetOperationPreferencesOutput
}

// The user-specified preferences for how AWS CloudFormation performs a stack set operation.
type StackSetOperationPreferencesArgs struct {
	FailureToleranceCount      pulumi.IntPtrInput                    `pulumi:"failureToleranceCount"`
	FailureTolerancePercentage pulumi.IntPtrInput                    `pulumi:"failureTolerancePercentage"`
	MaxConcurrentCount         pulumi.IntPtrInput                    `pulumi:"maxConcurrentCount"`
	MaxConcurrentPercentage    pulumi.IntPtrInput                    `pulumi:"maxConcurrentPercentage"`
	RegionConcurrencyType      StackSetRegionConcurrencyTypePtrInput `pulumi:"regionConcurrencyType"`
	RegionOrder                pulumi.StringArrayInput               `pulumi:"regionOrder"`
}

func (StackSetOperationPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetOperationPreferences)(nil)).Elem()
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesOutput() StackSetOperationPreferencesOutput {
	return i.ToStackSetOperationPreferencesOutputWithContext(context.Background())
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesOutputWithContext(ctx context.Context) StackSetOperationPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOperationPreferencesOutput)
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return i.ToStackSetOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOperationPreferencesOutput).ToStackSetOperationPreferencesPtrOutputWithContext(ctx)
}

// StackSetOperationPreferencesPtrInput is an input type that accepts StackSetOperationPreferencesArgs, StackSetOperationPreferencesPtr and StackSetOperationPreferencesPtrOutput values.
// You can construct a concrete instance of `StackSetOperationPreferencesPtrInput` via:
//
//          StackSetOperationPreferencesArgs{...}
//
//  or:
//
//          nil
type StackSetOperationPreferencesPtrInput interface {
	pulumi.Input

	ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput
	ToStackSetOperationPreferencesPtrOutputWithContext(context.Context) StackSetOperationPreferencesPtrOutput
}

type stackSetOperationPreferencesPtrType StackSetOperationPreferencesArgs

func StackSetOperationPreferencesPtr(v *StackSetOperationPreferencesArgs) StackSetOperationPreferencesPtrInput {
	return (*stackSetOperationPreferencesPtrType)(v)
}

func (*stackSetOperationPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetOperationPreferences)(nil)).Elem()
}

func (i *stackSetOperationPreferencesPtrType) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return i.ToStackSetOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i *stackSetOperationPreferencesPtrType) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOperationPreferencesPtrOutput)
}

// The user-specified preferences for how AWS CloudFormation performs a stack set operation.
type StackSetOperationPreferencesOutput struct{ *pulumi.OutputState }

func (StackSetOperationPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetOperationPreferences)(nil)).Elem()
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesOutput() StackSetOperationPreferencesOutput {
	return o
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesOutputWithContext(ctx context.Context) StackSetOperationPreferencesOutput {
	return o
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return o.ToStackSetOperationPreferencesPtrOutputWithContext(context.Background())
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackSetOperationPreferences) *StackSetOperationPreferences {
		return &v
	}).(StackSetOperationPreferencesPtrOutput)
}

func (o StackSetOperationPreferencesOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.FailureToleranceCount }).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.FailureTolerancePercentage }).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.MaxConcurrentCount }).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.MaxConcurrentPercentage }).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesOutput) RegionConcurrencyType() StackSetRegionConcurrencyTypePtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *StackSetRegionConcurrencyType { return v.RegionConcurrencyType }).(StackSetRegionConcurrencyTypePtrOutput)
}

func (o StackSetOperationPreferencesOutput) RegionOrder() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) []string { return v.RegionOrder }).(pulumi.StringArrayOutput)
}

type StackSetOperationPreferencesPtrOutput struct{ *pulumi.OutputState }

func (StackSetOperationPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetOperationPreferences)(nil)).Elem()
}

func (o StackSetOperationPreferencesPtrOutput) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return o
}

func (o StackSetOperationPreferencesPtrOutput) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return o
}

func (o StackSetOperationPreferencesPtrOutput) Elem() StackSetOperationPreferencesOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) StackSetOperationPreferences {
		if v != nil {
			return *v
		}
		var ret StackSetOperationPreferences
		return ret
	}).(StackSetOperationPreferencesOutput)
}

func (o StackSetOperationPreferencesPtrOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureToleranceCount
	}).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesPtrOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureTolerancePercentage
	}).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesPtrOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentCount
	}).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesPtrOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentPercentage
	}).(pulumi.IntPtrOutput)
}

func (o StackSetOperationPreferencesPtrOutput) RegionConcurrencyType() StackSetRegionConcurrencyTypePtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *StackSetRegionConcurrencyType {
		if v == nil {
			return nil
		}
		return v.RegionConcurrencyType
	}).(StackSetRegionConcurrencyTypePtrOutput)
}

func (o StackSetOperationPreferencesPtrOutput) RegionOrder() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) []string {
		if v == nil {
			return nil
		}
		return v.RegionOrder
	}).(pulumi.StringArrayOutput)
}

type StackSetParameter struct {
	// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
	ParameterKey string `pulumi:"parameterKey"`
	// The input value associated with the parameter.
	ParameterValue string `pulumi:"parameterValue"`
}

// StackSetParameterInput is an input type that accepts StackSetParameterArgs and StackSetParameterOutput values.
// You can construct a concrete instance of `StackSetParameterInput` via:
//
//          StackSetParameterArgs{...}
type StackSetParameterInput interface {
	pulumi.Input

	ToStackSetParameterOutput() StackSetParameterOutput
	ToStackSetParameterOutputWithContext(context.Context) StackSetParameterOutput
}

type StackSetParameterArgs struct {
	// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The input value associated with the parameter.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (StackSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetParameter)(nil)).Elem()
}

func (i StackSetParameterArgs) ToStackSetParameterOutput() StackSetParameterOutput {
	return i.ToStackSetParameterOutputWithContext(context.Background())
}

func (i StackSetParameterArgs) ToStackSetParameterOutputWithContext(ctx context.Context) StackSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetParameterOutput)
}

// StackSetParameterArrayInput is an input type that accepts StackSetParameterArray and StackSetParameterArrayOutput values.
// You can construct a concrete instance of `StackSetParameterArrayInput` via:
//
//          StackSetParameterArray{ StackSetParameterArgs{...} }
type StackSetParameterArrayInput interface {
	pulumi.Input

	ToStackSetParameterArrayOutput() StackSetParameterArrayOutput
	ToStackSetParameterArrayOutputWithContext(context.Context) StackSetParameterArrayOutput
}

type StackSetParameterArray []StackSetParameterInput

func (StackSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackSetParameter)(nil)).Elem()
}

func (i StackSetParameterArray) ToStackSetParameterArrayOutput() StackSetParameterArrayOutput {
	return i.ToStackSetParameterArrayOutputWithContext(context.Background())
}

func (i StackSetParameterArray) ToStackSetParameterArrayOutputWithContext(ctx context.Context) StackSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetParameterArrayOutput)
}

type StackSetParameterOutput struct{ *pulumi.OutputState }

func (StackSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetParameter)(nil)).Elem()
}

func (o StackSetParameterOutput) ToStackSetParameterOutput() StackSetParameterOutput {
	return o
}

func (o StackSetParameterOutput) ToStackSetParameterOutputWithContext(ctx context.Context) StackSetParameterOutput {
	return o
}

// The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
func (o StackSetParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v StackSetParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The input value associated with the parameter.
func (o StackSetParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v StackSetParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type StackSetParameterArrayOutput struct{ *pulumi.OutputState }

func (StackSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackSetParameter)(nil)).Elem()
}

func (o StackSetParameterArrayOutput) ToStackSetParameterArrayOutput() StackSetParameterArrayOutput {
	return o
}

func (o StackSetParameterArrayOutput) ToStackSetParameterArrayOutputWithContext(ctx context.Context) StackSetParameterArrayOutput {
	return o
}

func (o StackSetParameterArrayOutput) Index(i pulumi.IntInput) StackSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackSetParameter {
		return vs[0].([]StackSetParameter)[vs[1].(int)]
	}).(StackSetParameterOutput)
}

// Stack instances in some specific accounts and Regions.
type StackSetStackInstances struct {
	DeploymentTargets StackSetDeploymentTargets `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides []StackSetParameter `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions []string `pulumi:"regions"`
}

// StackSetStackInstancesInput is an input type that accepts StackSetStackInstancesArgs and StackSetStackInstancesOutput values.
// You can construct a concrete instance of `StackSetStackInstancesInput` via:
//
//          StackSetStackInstancesArgs{...}
type StackSetStackInstancesInput interface {
	pulumi.Input

	ToStackSetStackInstancesOutput() StackSetStackInstancesOutput
	ToStackSetStackInstancesOutputWithContext(context.Context) StackSetStackInstancesOutput
}

// Stack instances in some specific accounts and Regions.
type StackSetStackInstancesArgs struct {
	DeploymentTargets StackSetDeploymentTargetsInput `pulumi:"deploymentTargets"`
	// A list of stack set parameters whose values you want to override in the selected stack instances.
	ParameterOverrides StackSetParameterArrayInput `pulumi:"parameterOverrides"`
	// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (StackSetStackInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetStackInstances)(nil)).Elem()
}

func (i StackSetStackInstancesArgs) ToStackSetStackInstancesOutput() StackSetStackInstancesOutput {
	return i.ToStackSetStackInstancesOutputWithContext(context.Background())
}

func (i StackSetStackInstancesArgs) ToStackSetStackInstancesOutputWithContext(ctx context.Context) StackSetStackInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetStackInstancesOutput)
}

// StackSetStackInstancesArrayInput is an input type that accepts StackSetStackInstancesArray and StackSetStackInstancesArrayOutput values.
// You can construct a concrete instance of `StackSetStackInstancesArrayInput` via:
//
//          StackSetStackInstancesArray{ StackSetStackInstancesArgs{...} }
type StackSetStackInstancesArrayInput interface {
	pulumi.Input

	ToStackSetStackInstancesArrayOutput() StackSetStackInstancesArrayOutput
	ToStackSetStackInstancesArrayOutputWithContext(context.Context) StackSetStackInstancesArrayOutput
}

type StackSetStackInstancesArray []StackSetStackInstancesInput

func (StackSetStackInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackSetStackInstances)(nil)).Elem()
}

func (i StackSetStackInstancesArray) ToStackSetStackInstancesArrayOutput() StackSetStackInstancesArrayOutput {
	return i.ToStackSetStackInstancesArrayOutputWithContext(context.Background())
}

func (i StackSetStackInstancesArray) ToStackSetStackInstancesArrayOutputWithContext(ctx context.Context) StackSetStackInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetStackInstancesArrayOutput)
}

// Stack instances in some specific accounts and Regions.
type StackSetStackInstancesOutput struct{ *pulumi.OutputState }

func (StackSetStackInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetStackInstances)(nil)).Elem()
}

func (o StackSetStackInstancesOutput) ToStackSetStackInstancesOutput() StackSetStackInstancesOutput {
	return o
}

func (o StackSetStackInstancesOutput) ToStackSetStackInstancesOutputWithContext(ctx context.Context) StackSetStackInstancesOutput {
	return o
}

func (o StackSetStackInstancesOutput) DeploymentTargets() StackSetDeploymentTargetsOutput {
	return o.ApplyT(func(v StackSetStackInstances) StackSetDeploymentTargets { return v.DeploymentTargets }).(StackSetDeploymentTargetsOutput)
}

// A list of stack set parameters whose values you want to override in the selected stack instances.
func (o StackSetStackInstancesOutput) ParameterOverrides() StackSetParameterArrayOutput {
	return o.ApplyT(func(v StackSetStackInstances) []StackSetParameter { return v.ParameterOverrides }).(StackSetParameterArrayOutput)
}

// The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
func (o StackSetStackInstancesOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetStackInstances) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type StackSetStackInstancesArrayOutput struct{ *pulumi.OutputState }

func (StackSetStackInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackSetStackInstances)(nil)).Elem()
}

func (o StackSetStackInstancesArrayOutput) ToStackSetStackInstancesArrayOutput() StackSetStackInstancesArrayOutput {
	return o
}

func (o StackSetStackInstancesArrayOutput) ToStackSetStackInstancesArrayOutputWithContext(ctx context.Context) StackSetStackInstancesArrayOutput {
	return o
}

func (o StackSetStackInstancesArrayOutput) Index(i pulumi.IntInput) StackSetStackInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackSetStackInstances {
		return vs[0].([]StackSetStackInstances)[vs[1].(int)]
	}).(StackSetStackInstancesOutput)
}

// Tag type enables you to specify a key-value pair that can be used to store information about an AWS CloudFormation StackSet.
type StackSetTag struct {
	// A string used to identify this tag. You can specify a maximum of 127 characters for a tag key.
	Key string `pulumi:"key"`
	// A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
	Value string `pulumi:"value"`
}

// StackSetTagInput is an input type that accepts StackSetTagArgs and StackSetTagOutput values.
// You can construct a concrete instance of `StackSetTagInput` via:
//
//          StackSetTagArgs{...}
type StackSetTagInput interface {
	pulumi.Input

	ToStackSetTagOutput() StackSetTagOutput
	ToStackSetTagOutputWithContext(context.Context) StackSetTagOutput
}

// Tag type enables you to specify a key-value pair that can be used to store information about an AWS CloudFormation StackSet.
type StackSetTagArgs struct {
	// A string used to identify this tag. You can specify a maximum of 127 characters for a tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (StackSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetTag)(nil)).Elem()
}

func (i StackSetTagArgs) ToStackSetTagOutput() StackSetTagOutput {
	return i.ToStackSetTagOutputWithContext(context.Background())
}

func (i StackSetTagArgs) ToStackSetTagOutputWithContext(ctx context.Context) StackSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetTagOutput)
}

// StackSetTagArrayInput is an input type that accepts StackSetTagArray and StackSetTagArrayOutput values.
// You can construct a concrete instance of `StackSetTagArrayInput` via:
//
//          StackSetTagArray{ StackSetTagArgs{...} }
type StackSetTagArrayInput interface {
	pulumi.Input

	ToStackSetTagArrayOutput() StackSetTagArrayOutput
	ToStackSetTagArrayOutputWithContext(context.Context) StackSetTagArrayOutput
}

type StackSetTagArray []StackSetTagInput

func (StackSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackSetTag)(nil)).Elem()
}

func (i StackSetTagArray) ToStackSetTagArrayOutput() StackSetTagArrayOutput {
	return i.ToStackSetTagArrayOutputWithContext(context.Background())
}

func (i StackSetTagArray) ToStackSetTagArrayOutputWithContext(ctx context.Context) StackSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetTagArrayOutput)
}

// Tag type enables you to specify a key-value pair that can be used to store information about an AWS CloudFormation StackSet.
type StackSetTagOutput struct{ *pulumi.OutputState }

func (StackSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetTag)(nil)).Elem()
}

func (o StackSetTagOutput) ToStackSetTagOutput() StackSetTagOutput {
	return o
}

func (o StackSetTagOutput) ToStackSetTagOutputWithContext(ctx context.Context) StackSetTagOutput {
	return o
}

// A string used to identify this tag. You can specify a maximum of 127 characters for a tag key.
func (o StackSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StackSetTag) string { return v.Key }).(pulumi.StringOutput)
}

// A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
func (o StackSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StackSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type StackSetTagArrayOutput struct{ *pulumi.OutputState }

func (StackSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackSetTag)(nil)).Elem()
}

func (o StackSetTagArrayOutput) ToStackSetTagArrayOutput() StackSetTagArrayOutput {
	return o
}

func (o StackSetTagArrayOutput) ToStackSetTagArrayOutputWithContext(ctx context.Context) StackSetTagArrayOutput {
	return o
}

func (o StackSetTagArrayOutput) Index(i pulumi.IntInput) StackSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackSetTag {
		return vs[0].([]StackSetTag)[vs[1].(int)]
	}).(StackSetTagOutput)
}

type TypeActivationLoggingConfig struct {
	// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName *string `pulumi:"logGroupName"`
	// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
	LogRoleArn *string `pulumi:"logRoleArn"`
}

// TypeActivationLoggingConfigInput is an input type that accepts TypeActivationLoggingConfigArgs and TypeActivationLoggingConfigOutput values.
// You can construct a concrete instance of `TypeActivationLoggingConfigInput` via:
//
//          TypeActivationLoggingConfigArgs{...}
type TypeActivationLoggingConfigInput interface {
	pulumi.Input

	ToTypeActivationLoggingConfigOutput() TypeActivationLoggingConfigOutput
	ToTypeActivationLoggingConfigOutputWithContext(context.Context) TypeActivationLoggingConfigOutput
}

type TypeActivationLoggingConfigArgs struct {
	// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
	LogRoleArn pulumi.StringPtrInput `pulumi:"logRoleArn"`
}

func (TypeActivationLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeActivationLoggingConfig)(nil)).Elem()
}

func (i TypeActivationLoggingConfigArgs) ToTypeActivationLoggingConfigOutput() TypeActivationLoggingConfigOutput {
	return i.ToTypeActivationLoggingConfigOutputWithContext(context.Background())
}

func (i TypeActivationLoggingConfigArgs) ToTypeActivationLoggingConfigOutputWithContext(ctx context.Context) TypeActivationLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeActivationLoggingConfigOutput)
}

func (i TypeActivationLoggingConfigArgs) ToTypeActivationLoggingConfigPtrOutput() TypeActivationLoggingConfigPtrOutput {
	return i.ToTypeActivationLoggingConfigPtrOutputWithContext(context.Background())
}

func (i TypeActivationLoggingConfigArgs) ToTypeActivationLoggingConfigPtrOutputWithContext(ctx context.Context) TypeActivationLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeActivationLoggingConfigOutput).ToTypeActivationLoggingConfigPtrOutputWithContext(ctx)
}

// TypeActivationLoggingConfigPtrInput is an input type that accepts TypeActivationLoggingConfigArgs, TypeActivationLoggingConfigPtr and TypeActivationLoggingConfigPtrOutput values.
// You can construct a concrete instance of `TypeActivationLoggingConfigPtrInput` via:
//
//          TypeActivationLoggingConfigArgs{...}
//
//  or:
//
//          nil
type TypeActivationLoggingConfigPtrInput interface {
	pulumi.Input

	ToTypeActivationLoggingConfigPtrOutput() TypeActivationLoggingConfigPtrOutput
	ToTypeActivationLoggingConfigPtrOutputWithContext(context.Context) TypeActivationLoggingConfigPtrOutput
}

type typeActivationLoggingConfigPtrType TypeActivationLoggingConfigArgs

func TypeActivationLoggingConfigPtr(v *TypeActivationLoggingConfigArgs) TypeActivationLoggingConfigPtrInput {
	return (*typeActivationLoggingConfigPtrType)(v)
}

func (*typeActivationLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeActivationLoggingConfig)(nil)).Elem()
}

func (i *typeActivationLoggingConfigPtrType) ToTypeActivationLoggingConfigPtrOutput() TypeActivationLoggingConfigPtrOutput {
	return i.ToTypeActivationLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *typeActivationLoggingConfigPtrType) ToTypeActivationLoggingConfigPtrOutputWithContext(ctx context.Context) TypeActivationLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeActivationLoggingConfigPtrOutput)
}

type TypeActivationLoggingConfigOutput struct{ *pulumi.OutputState }

func (TypeActivationLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeActivationLoggingConfig)(nil)).Elem()
}

func (o TypeActivationLoggingConfigOutput) ToTypeActivationLoggingConfigOutput() TypeActivationLoggingConfigOutput {
	return o
}

func (o TypeActivationLoggingConfigOutput) ToTypeActivationLoggingConfigOutputWithContext(ctx context.Context) TypeActivationLoggingConfigOutput {
	return o
}

func (o TypeActivationLoggingConfigOutput) ToTypeActivationLoggingConfigPtrOutput() TypeActivationLoggingConfigPtrOutput {
	return o.ToTypeActivationLoggingConfigPtrOutputWithContext(context.Background())
}

func (o TypeActivationLoggingConfigOutput) ToTypeActivationLoggingConfigPtrOutputWithContext(ctx context.Context) TypeActivationLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TypeActivationLoggingConfig) *TypeActivationLoggingConfig {
		return &v
	}).(TypeActivationLoggingConfigPtrOutput)
}

// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
func (o TypeActivationLoggingConfigOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeActivationLoggingConfig) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
func (o TypeActivationLoggingConfigOutput) LogRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeActivationLoggingConfig) *string { return v.LogRoleArn }).(pulumi.StringPtrOutput)
}

type TypeActivationLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (TypeActivationLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeActivationLoggingConfig)(nil)).Elem()
}

func (o TypeActivationLoggingConfigPtrOutput) ToTypeActivationLoggingConfigPtrOutput() TypeActivationLoggingConfigPtrOutput {
	return o
}

func (o TypeActivationLoggingConfigPtrOutput) ToTypeActivationLoggingConfigPtrOutputWithContext(ctx context.Context) TypeActivationLoggingConfigPtrOutput {
	return o
}

func (o TypeActivationLoggingConfigPtrOutput) Elem() TypeActivationLoggingConfigOutput {
	return o.ApplyT(func(v *TypeActivationLoggingConfig) TypeActivationLoggingConfig {
		if v != nil {
			return *v
		}
		var ret TypeActivationLoggingConfig
		return ret
	}).(TypeActivationLoggingConfigOutput)
}

// The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
func (o TypeActivationLoggingConfigPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeActivationLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
func (o TypeActivationLoggingConfigPtrOutput) LogRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeActivationLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogRoleArn
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ResourceVersionLoggingConfigOutput{})
	pulumi.RegisterOutputType(ResourceVersionLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(StackSetAutoDeploymentOutput{})
	pulumi.RegisterOutputType(StackSetAutoDeploymentPtrOutput{})
	pulumi.RegisterOutputType(StackSetDeploymentTargetsOutput{})
	pulumi.RegisterOutputType(StackSetOperationPreferencesOutput{})
	pulumi.RegisterOutputType(StackSetOperationPreferencesPtrOutput{})
	pulumi.RegisterOutputType(StackSetParameterOutput{})
	pulumi.RegisterOutputType(StackSetParameterArrayOutput{})
	pulumi.RegisterOutputType(StackSetStackInstancesOutput{})
	pulumi.RegisterOutputType(StackSetStackInstancesArrayOutput{})
	pulumi.RegisterOutputType(StackSetTagOutput{})
	pulumi.RegisterOutputType(StackSetTagArrayOutput{})
	pulumi.RegisterOutputType(TypeActivationLoggingConfigOutput{})
	pulumi.RegisterOutputType(TypeActivationLoggingConfigPtrOutput{})
}
