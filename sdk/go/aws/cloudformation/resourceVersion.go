// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html
type ResourceVersion struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-executionrolearn
	ExecutionRoleArn pulumi.StringPtrOutput `pulumi:"executionRoleArn"`
	IsDefaultVersion pulumi.BoolOutput      `pulumi:"isDefaultVersion"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-loggingconfig
	LoggingConfig    ResourceVersionLoggingConfigPtrOutput `pulumi:"loggingConfig"`
	ProvisioningType pulumi.StringOutput                   `pulumi:"provisioningType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-schemahandlerpackage
	SchemaHandlerPackage pulumi.StringOutput `pulumi:"schemaHandlerPackage"`
	TypeArn              pulumi.StringOutput `pulumi:"typeArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-typename
	TypeName   pulumi.StringOutput `pulumi:"typeName"`
	VersionId  pulumi.StringOutput `pulumi:"versionId"`
	Visibility pulumi.StringOutput `pulumi:"visibility"`
}

// NewResourceVersion registers a new resource with the given unique name, arguments, and options.
func NewResourceVersion(ctx *pulumi.Context,
	name string, args *ResourceVersionArgs, opts ...pulumi.ResourceOption) (*ResourceVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SchemaHandlerPackage == nil {
		return nil, errors.New("invalid value for required argument 'SchemaHandlerPackage'")
	}
	if args.TypeName == nil {
		return nil, errors.New("invalid value for required argument 'TypeName'")
	}
	var resource ResourceVersion
	err := ctx.RegisterResource("aws-native:CloudFormation:ResourceVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceVersion gets an existing ResourceVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceVersionState, opts ...pulumi.ResourceOption) (*ResourceVersion, error) {
	var resource ResourceVersion
	err := ctx.ReadResource("aws-native:CloudFormation:ResourceVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceVersion resources.
type resourceVersionState struct {
}

type ResourceVersionState struct {
}

func (ResourceVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceVersionState)(nil)).Elem()
}

type resourceVersionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-executionrolearn
	ExecutionRoleArn *string `pulumi:"executionRoleArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-loggingconfig
	LoggingConfig *ResourceVersionLoggingConfig `pulumi:"loggingConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-schemahandlerpackage
	SchemaHandlerPackage string `pulumi:"schemaHandlerPackage"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-typename
	TypeName string `pulumi:"typeName"`
}

// The set of arguments for constructing a ResourceVersion resource.
type ResourceVersionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-executionrolearn
	ExecutionRoleArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-loggingconfig
	LoggingConfig ResourceVersionLoggingConfigPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-schemahandlerpackage
	SchemaHandlerPackage pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-typename
	TypeName pulumi.StringInput
}

func (ResourceVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceVersionArgs)(nil)).Elem()
}

type ResourceVersionInput interface {
	pulumi.Input

	ToResourceVersionOutput() ResourceVersionOutput
	ToResourceVersionOutputWithContext(ctx context.Context) ResourceVersionOutput
}

func (*ResourceVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceVersion)(nil))
}

func (i *ResourceVersion) ToResourceVersionOutput() ResourceVersionOutput {
	return i.ToResourceVersionOutputWithContext(context.Background())
}

func (i *ResourceVersion) ToResourceVersionOutputWithContext(ctx context.Context) ResourceVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceVersionOutput)
}

type ResourceVersionOutput struct{ *pulumi.OutputState }

func (ResourceVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceVersion)(nil))
}

func (o ResourceVersionOutput) ToResourceVersionOutput() ResourceVersionOutput {
	return o
}

func (o ResourceVersionOutput) ToResourceVersionOutputWithContext(ctx context.Context) ResourceVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ResourceVersionOutput{})
}
