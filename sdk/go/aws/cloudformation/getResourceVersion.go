// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A resource that has been registered in the CloudFormation Registry.
func LookupResourceVersion(ctx *pulumi.Context, args *LookupResourceVersionArgs, opts ...pulumi.InvokeOption) (*LookupResourceVersionResult, error) {
	var rv LookupResourceVersionResult
	err := ctx.Invoke("aws-native:cloudformation:getResourceVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupResourceVersionArgs struct {
	// The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
	Arn string `pulumi:"arn"`
}

type LookupResourceVersionResult struct {
	// The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
	Arn *string `pulumi:"arn"`
	// Indicates if this type version is the current default version
	IsDefaultVersion *bool `pulumi:"isDefaultVersion"`
	// The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
	ProvisioningType *ResourceVersionProvisioningType `pulumi:"provisioningType"`
	// The Amazon Resource Name (ARN) of the type without the versionID.
	TypeArn *string `pulumi:"typeArn"`
	// The ID of the version of the type represented by this resource instance.
	VersionId *string `pulumi:"versionId"`
	// The scope at which the type is visible and usable in CloudFormation operations.
	//
	// Valid values include:
	//
	// PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
	//
	// PUBLIC: The type is publically visible and usable within any Amazon account.
	Visibility *ResourceVersionVisibility `pulumi:"visibility"`
}

func LookupResourceVersionOutput(ctx *pulumi.Context, args LookupResourceVersionOutputArgs, opts ...pulumi.InvokeOption) LookupResourceVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourceVersionResult, error) {
			args := v.(LookupResourceVersionArgs)
			r, err := LookupResourceVersion(ctx, &args, opts...)
			var s LookupResourceVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResourceVersionResultOutput)
}

type LookupResourceVersionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupResourceVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceVersionArgs)(nil)).Elem()
}

type LookupResourceVersionResultOutput struct{ *pulumi.OutputState }

func (LookupResourceVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceVersionResult)(nil)).Elem()
}

func (o LookupResourceVersionResultOutput) ToLookupResourceVersionResultOutput() LookupResourceVersionResultOutput {
	return o
}

func (o LookupResourceVersionResultOutput) ToLookupResourceVersionResultOutputWithContext(ctx context.Context) LookupResourceVersionResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
func (o LookupResourceVersionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceVersionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Indicates if this type version is the current default version
func (o LookupResourceVersionResultOutput) IsDefaultVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupResourceVersionResult) *bool { return v.IsDefaultVersion }).(pulumi.BoolPtrOutput)
}

// The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
func (o LookupResourceVersionResultOutput) ProvisioningType() ResourceVersionProvisioningTypePtrOutput {
	return o.ApplyT(func(v LookupResourceVersionResult) *ResourceVersionProvisioningType { return v.ProvisioningType }).(ResourceVersionProvisioningTypePtrOutput)
}

// The Amazon Resource Name (ARN) of the type without the versionID.
func (o LookupResourceVersionResultOutput) TypeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceVersionResult) *string { return v.TypeArn }).(pulumi.StringPtrOutput)
}

// The ID of the version of the type represented by this resource instance.
func (o LookupResourceVersionResultOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceVersionResult) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

// The scope at which the type is visible and usable in CloudFormation operations.
//
// Valid values include:
//
// PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
//
// PUBLIC: The type is publically visible and usable within any Amazon account.
func (o LookupResourceVersionResultOutput) Visibility() ResourceVersionVisibilityPtrOutput {
	return o.ApplyT(func(v LookupResourceVersionResult) *ResourceVersionVisibility { return v.Visibility }).(ResourceVersionVisibilityPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceVersionResultOutput{})
}
