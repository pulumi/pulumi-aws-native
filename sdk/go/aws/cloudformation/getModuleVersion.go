// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A module that has been registered in the CloudFormation registry.
func LookupModuleVersion(ctx *pulumi.Context, args *LookupModuleVersionArgs, opts ...pulumi.InvokeOption) (*LookupModuleVersionResult, error) {
	var rv LookupModuleVersionResult
	err := ctx.Invoke("aws-native:cloudformation:getModuleVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupModuleVersionArgs struct {
	// The Amazon Resource Name (ARN) of the module.
	Arn string `pulumi:"arn"`
}

type LookupModuleVersionResult struct {
	// The Amazon Resource Name (ARN) of the module.
	Arn *string `pulumi:"arn"`
	// The description of the registered module.
	Description *string `pulumi:"description"`
	// The URL of a page providing detailed documentation for this module.
	DocumentationUrl *string `pulumi:"documentationUrl"`
	// Indicator of whether this module version is the current default version
	IsDefaultVersion *bool `pulumi:"isDefaultVersion"`
	// The schema defining input parameters to and resources generated by the module.
	Schema *string `pulumi:"schema"`
	// The time that the specified module version was registered.
	TimeCreated *string `pulumi:"timeCreated"`
	// The version ID of the module represented by this module instance.
	VersionId *string `pulumi:"versionId"`
	// The scope at which the type is visible and usable in CloudFormation operations.
	//
	// The only allowed value at present is:
	//
	// PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
	Visibility *ModuleVersionVisibility `pulumi:"visibility"`
}

func LookupModuleVersionOutput(ctx *pulumi.Context, args LookupModuleVersionOutputArgs, opts ...pulumi.InvokeOption) LookupModuleVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupModuleVersionResult, error) {
			args := v.(LookupModuleVersionArgs)
			r, err := LookupModuleVersion(ctx, &args, opts...)
			var s LookupModuleVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupModuleVersionResultOutput)
}

type LookupModuleVersionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the module.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupModuleVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupModuleVersionArgs)(nil)).Elem()
}

type LookupModuleVersionResultOutput struct{ *pulumi.OutputState }

func (LookupModuleVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupModuleVersionResult)(nil)).Elem()
}

func (o LookupModuleVersionResultOutput) ToLookupModuleVersionResultOutput() LookupModuleVersionResultOutput {
	return o
}

func (o LookupModuleVersionResultOutput) ToLookupModuleVersionResultOutputWithContext(ctx context.Context) LookupModuleVersionResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the module.
func (o LookupModuleVersionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The description of the registered module.
func (o LookupModuleVersionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The URL of a page providing detailed documentation for this module.
func (o LookupModuleVersionResultOutput) DocumentationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *string { return v.DocumentationUrl }).(pulumi.StringPtrOutput)
}

// Indicator of whether this module version is the current default version
func (o LookupModuleVersionResultOutput) IsDefaultVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *bool { return v.IsDefaultVersion }).(pulumi.BoolPtrOutput)
}

// The schema defining input parameters to and resources generated by the module.
func (o LookupModuleVersionResultOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

// The time that the specified module version was registered.
func (o LookupModuleVersionResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The version ID of the module represented by this module instance.
func (o LookupModuleVersionResultOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

// The scope at which the type is visible and usable in CloudFormation operations.
//
// The only allowed value at present is:
//
// PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
func (o LookupModuleVersionResultOutput) Visibility() ModuleVersionVisibilityPtrOutput {
	return o.ApplyT(func(v LookupModuleVersionResult) *ModuleVersionVisibility { return v.Visibility }).(ModuleVersionVisibilityPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupModuleVersionResultOutput{})
}
