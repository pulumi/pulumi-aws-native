// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type associated with the filter.
type RegistryScanningConfigurationFilterType string

const (
	RegistryScanningConfigurationFilterTypeWildcard = RegistryScanningConfigurationFilterType("WILDCARD")
)

func (RegistryScanningConfigurationFilterType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryScanningConfigurationFilterType)(nil)).Elem()
}

func (e RegistryScanningConfigurationFilterType) ToRegistryScanningConfigurationFilterTypeOutput() RegistryScanningConfigurationFilterTypeOutput {
	return pulumi.ToOutput(e).(RegistryScanningConfigurationFilterTypeOutput)
}

func (e RegistryScanningConfigurationFilterType) ToRegistryScanningConfigurationFilterTypeOutputWithContext(ctx context.Context) RegistryScanningConfigurationFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistryScanningConfigurationFilterTypeOutput)
}

func (e RegistryScanningConfigurationFilterType) ToRegistryScanningConfigurationFilterTypePtrOutput() RegistryScanningConfigurationFilterTypePtrOutput {
	return e.ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(context.Background())
}

func (e RegistryScanningConfigurationFilterType) ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationFilterTypePtrOutput {
	return RegistryScanningConfigurationFilterType(e).ToRegistryScanningConfigurationFilterTypeOutputWithContext(ctx).ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(ctx)
}

func (e RegistryScanningConfigurationFilterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryScanningConfigurationFilterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryScanningConfigurationFilterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistryScanningConfigurationFilterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistryScanningConfigurationFilterTypeOutput struct{ *pulumi.OutputState }

func (RegistryScanningConfigurationFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryScanningConfigurationFilterType)(nil)).Elem()
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToRegistryScanningConfigurationFilterTypeOutput() RegistryScanningConfigurationFilterTypeOutput {
	return o
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToRegistryScanningConfigurationFilterTypeOutputWithContext(ctx context.Context) RegistryScanningConfigurationFilterTypeOutput {
	return o
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToRegistryScanningConfigurationFilterTypePtrOutput() RegistryScanningConfigurationFilterTypePtrOutput {
	return o.ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationFilterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryScanningConfigurationFilterType) *RegistryScanningConfigurationFilterType {
		return &v
	}).(RegistryScanningConfigurationFilterTypePtrOutput)
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryScanningConfigurationFilterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationFilterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryScanningConfigurationFilterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistryScanningConfigurationFilterTypePtrOutput struct{ *pulumi.OutputState }

func (RegistryScanningConfigurationFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryScanningConfigurationFilterType)(nil)).Elem()
}

func (o RegistryScanningConfigurationFilterTypePtrOutput) ToRegistryScanningConfigurationFilterTypePtrOutput() RegistryScanningConfigurationFilterTypePtrOutput {
	return o
}

func (o RegistryScanningConfigurationFilterTypePtrOutput) ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationFilterTypePtrOutput {
	return o
}

func (o RegistryScanningConfigurationFilterTypePtrOutput) Elem() RegistryScanningConfigurationFilterTypeOutput {
	return o.ApplyT(func(v *RegistryScanningConfigurationFilterType) RegistryScanningConfigurationFilterType {
		if v != nil {
			return *v
		}
		var ret RegistryScanningConfigurationFilterType
		return ret
	}).(RegistryScanningConfigurationFilterTypeOutput)
}

func (o RegistryScanningConfigurationFilterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationFilterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistryScanningConfigurationFilterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistryScanningConfigurationFilterTypeInput is an input type that accepts values of the RegistryScanningConfigurationFilterType enum
// A concrete instance of `RegistryScanningConfigurationFilterTypeInput` can be one of the following:
//
//	RegistryScanningConfigurationFilterTypeWildcard
type RegistryScanningConfigurationFilterTypeInput interface {
	pulumi.Input

	ToRegistryScanningConfigurationFilterTypeOutput() RegistryScanningConfigurationFilterTypeOutput
	ToRegistryScanningConfigurationFilterTypeOutputWithContext(context.Context) RegistryScanningConfigurationFilterTypeOutput
}

var registryScanningConfigurationFilterTypePtrType = reflect.TypeOf((**RegistryScanningConfigurationFilterType)(nil)).Elem()

type RegistryScanningConfigurationFilterTypePtrInput interface {
	pulumi.Input

	ToRegistryScanningConfigurationFilterTypePtrOutput() RegistryScanningConfigurationFilterTypePtrOutput
	ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(context.Context) RegistryScanningConfigurationFilterTypePtrOutput
}

type registryScanningConfigurationFilterTypePtr string

func RegistryScanningConfigurationFilterTypePtr(v string) RegistryScanningConfigurationFilterTypePtrInput {
	return (*registryScanningConfigurationFilterTypePtr)(&v)
}

func (*registryScanningConfigurationFilterTypePtr) ElementType() reflect.Type {
	return registryScanningConfigurationFilterTypePtrType
}

func (in *registryScanningConfigurationFilterTypePtr) ToRegistryScanningConfigurationFilterTypePtrOutput() RegistryScanningConfigurationFilterTypePtrOutput {
	return pulumi.ToOutput(in).(RegistryScanningConfigurationFilterTypePtrOutput)
}

func (in *registryScanningConfigurationFilterTypePtr) ToRegistryScanningConfigurationFilterTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistryScanningConfigurationFilterTypePtrOutput)
}

// The frequency that scans are performed.
type RegistryScanningConfigurationScanFrequency string

const (
	RegistryScanningConfigurationScanFrequencyScanOnPush     = RegistryScanningConfigurationScanFrequency("SCAN_ON_PUSH")
	RegistryScanningConfigurationScanFrequencyContinuousScan = RegistryScanningConfigurationScanFrequency("CONTINUOUS_SCAN")
)

func (RegistryScanningConfigurationScanFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryScanningConfigurationScanFrequency)(nil)).Elem()
}

func (e RegistryScanningConfigurationScanFrequency) ToRegistryScanningConfigurationScanFrequencyOutput() RegistryScanningConfigurationScanFrequencyOutput {
	return pulumi.ToOutput(e).(RegistryScanningConfigurationScanFrequencyOutput)
}

func (e RegistryScanningConfigurationScanFrequency) ToRegistryScanningConfigurationScanFrequencyOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistryScanningConfigurationScanFrequencyOutput)
}

func (e RegistryScanningConfigurationScanFrequency) ToRegistryScanningConfigurationScanFrequencyPtrOutput() RegistryScanningConfigurationScanFrequencyPtrOutput {
	return e.ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(context.Background())
}

func (e RegistryScanningConfigurationScanFrequency) ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanFrequencyPtrOutput {
	return RegistryScanningConfigurationScanFrequency(e).ToRegistryScanningConfigurationScanFrequencyOutputWithContext(ctx).ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(ctx)
}

func (e RegistryScanningConfigurationScanFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryScanningConfigurationScanFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryScanningConfigurationScanFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistryScanningConfigurationScanFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistryScanningConfigurationScanFrequencyOutput struct{ *pulumi.OutputState }

func (RegistryScanningConfigurationScanFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryScanningConfigurationScanFrequency)(nil)).Elem()
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToRegistryScanningConfigurationScanFrequencyOutput() RegistryScanningConfigurationScanFrequencyOutput {
	return o
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToRegistryScanningConfigurationScanFrequencyOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanFrequencyOutput {
	return o
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToRegistryScanningConfigurationScanFrequencyPtrOutput() RegistryScanningConfigurationScanFrequencyPtrOutput {
	return o.ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryScanningConfigurationScanFrequency) *RegistryScanningConfigurationScanFrequency {
		return &v
	}).(RegistryScanningConfigurationScanFrequencyPtrOutput)
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryScanningConfigurationScanFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryScanningConfigurationScanFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistryScanningConfigurationScanFrequencyPtrOutput struct{ *pulumi.OutputState }

func (RegistryScanningConfigurationScanFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryScanningConfigurationScanFrequency)(nil)).Elem()
}

func (o RegistryScanningConfigurationScanFrequencyPtrOutput) ToRegistryScanningConfigurationScanFrequencyPtrOutput() RegistryScanningConfigurationScanFrequencyPtrOutput {
	return o
}

func (o RegistryScanningConfigurationScanFrequencyPtrOutput) ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanFrequencyPtrOutput {
	return o
}

func (o RegistryScanningConfigurationScanFrequencyPtrOutput) Elem() RegistryScanningConfigurationScanFrequencyOutput {
	return o.ApplyT(func(v *RegistryScanningConfigurationScanFrequency) RegistryScanningConfigurationScanFrequency {
		if v != nil {
			return *v
		}
		var ret RegistryScanningConfigurationScanFrequency
		return ret
	}).(RegistryScanningConfigurationScanFrequencyOutput)
}

func (o RegistryScanningConfigurationScanFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistryScanningConfigurationScanFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistryScanningConfigurationScanFrequencyInput is an input type that accepts values of the RegistryScanningConfigurationScanFrequency enum
// A concrete instance of `RegistryScanningConfigurationScanFrequencyInput` can be one of the following:
//
//	RegistryScanningConfigurationScanFrequencyScanOnPush
//	RegistryScanningConfigurationScanFrequencyContinuousScan
type RegistryScanningConfigurationScanFrequencyInput interface {
	pulumi.Input

	ToRegistryScanningConfigurationScanFrequencyOutput() RegistryScanningConfigurationScanFrequencyOutput
	ToRegistryScanningConfigurationScanFrequencyOutputWithContext(context.Context) RegistryScanningConfigurationScanFrequencyOutput
}

var registryScanningConfigurationScanFrequencyPtrType = reflect.TypeOf((**RegistryScanningConfigurationScanFrequency)(nil)).Elem()

type RegistryScanningConfigurationScanFrequencyPtrInput interface {
	pulumi.Input

	ToRegistryScanningConfigurationScanFrequencyPtrOutput() RegistryScanningConfigurationScanFrequencyPtrOutput
	ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(context.Context) RegistryScanningConfigurationScanFrequencyPtrOutput
}

type registryScanningConfigurationScanFrequencyPtr string

func RegistryScanningConfigurationScanFrequencyPtr(v string) RegistryScanningConfigurationScanFrequencyPtrInput {
	return (*registryScanningConfigurationScanFrequencyPtr)(&v)
}

func (*registryScanningConfigurationScanFrequencyPtr) ElementType() reflect.Type {
	return registryScanningConfigurationScanFrequencyPtrType
}

func (in *registryScanningConfigurationScanFrequencyPtr) ToRegistryScanningConfigurationScanFrequencyPtrOutput() RegistryScanningConfigurationScanFrequencyPtrOutput {
	return pulumi.ToOutput(in).(RegistryScanningConfigurationScanFrequencyPtrOutput)
}

func (in *registryScanningConfigurationScanFrequencyPtr) ToRegistryScanningConfigurationScanFrequencyPtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistryScanningConfigurationScanFrequencyPtrOutput)
}

// The type of scanning configured for the registry.
type RegistryScanningConfigurationScanType string

const (
	RegistryScanningConfigurationScanTypeBasic    = RegistryScanningConfigurationScanType("BASIC")
	RegistryScanningConfigurationScanTypeEnhanced = RegistryScanningConfigurationScanType("ENHANCED")
)

func (RegistryScanningConfigurationScanType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryScanningConfigurationScanType)(nil)).Elem()
}

func (e RegistryScanningConfigurationScanType) ToRegistryScanningConfigurationScanTypeOutput() RegistryScanningConfigurationScanTypeOutput {
	return pulumi.ToOutput(e).(RegistryScanningConfigurationScanTypeOutput)
}

func (e RegistryScanningConfigurationScanType) ToRegistryScanningConfigurationScanTypeOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistryScanningConfigurationScanTypeOutput)
}

func (e RegistryScanningConfigurationScanType) ToRegistryScanningConfigurationScanTypePtrOutput() RegistryScanningConfigurationScanTypePtrOutput {
	return e.ToRegistryScanningConfigurationScanTypePtrOutputWithContext(context.Background())
}

func (e RegistryScanningConfigurationScanType) ToRegistryScanningConfigurationScanTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanTypePtrOutput {
	return RegistryScanningConfigurationScanType(e).ToRegistryScanningConfigurationScanTypeOutputWithContext(ctx).ToRegistryScanningConfigurationScanTypePtrOutputWithContext(ctx)
}

func (e RegistryScanningConfigurationScanType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryScanningConfigurationScanType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryScanningConfigurationScanType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistryScanningConfigurationScanType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistryScanningConfigurationScanTypeOutput struct{ *pulumi.OutputState }

func (RegistryScanningConfigurationScanTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryScanningConfigurationScanType)(nil)).Elem()
}

func (o RegistryScanningConfigurationScanTypeOutput) ToRegistryScanningConfigurationScanTypeOutput() RegistryScanningConfigurationScanTypeOutput {
	return o
}

func (o RegistryScanningConfigurationScanTypeOutput) ToRegistryScanningConfigurationScanTypeOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanTypeOutput {
	return o
}

func (o RegistryScanningConfigurationScanTypeOutput) ToRegistryScanningConfigurationScanTypePtrOutput() RegistryScanningConfigurationScanTypePtrOutput {
	return o.ToRegistryScanningConfigurationScanTypePtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanTypeOutput) ToRegistryScanningConfigurationScanTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryScanningConfigurationScanType) *RegistryScanningConfigurationScanType {
		return &v
	}).(RegistryScanningConfigurationScanTypePtrOutput)
}

func (o RegistryScanningConfigurationScanTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryScanningConfigurationScanType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistryScanningConfigurationScanTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryScanningConfigurationScanType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistryScanningConfigurationScanTypePtrOutput struct{ *pulumi.OutputState }

func (RegistryScanningConfigurationScanTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryScanningConfigurationScanType)(nil)).Elem()
}

func (o RegistryScanningConfigurationScanTypePtrOutput) ToRegistryScanningConfigurationScanTypePtrOutput() RegistryScanningConfigurationScanTypePtrOutput {
	return o
}

func (o RegistryScanningConfigurationScanTypePtrOutput) ToRegistryScanningConfigurationScanTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanTypePtrOutput {
	return o
}

func (o RegistryScanningConfigurationScanTypePtrOutput) Elem() RegistryScanningConfigurationScanTypeOutput {
	return o.ApplyT(func(v *RegistryScanningConfigurationScanType) RegistryScanningConfigurationScanType {
		if v != nil {
			return *v
		}
		var ret RegistryScanningConfigurationScanType
		return ret
	}).(RegistryScanningConfigurationScanTypeOutput)
}

func (o RegistryScanningConfigurationScanTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryScanningConfigurationScanTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistryScanningConfigurationScanType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistryScanningConfigurationScanTypeInput is an input type that accepts values of the RegistryScanningConfigurationScanType enum
// A concrete instance of `RegistryScanningConfigurationScanTypeInput` can be one of the following:
//
//	RegistryScanningConfigurationScanTypeBasic
//	RegistryScanningConfigurationScanTypeEnhanced
type RegistryScanningConfigurationScanTypeInput interface {
	pulumi.Input

	ToRegistryScanningConfigurationScanTypeOutput() RegistryScanningConfigurationScanTypeOutput
	ToRegistryScanningConfigurationScanTypeOutputWithContext(context.Context) RegistryScanningConfigurationScanTypeOutput
}

var registryScanningConfigurationScanTypePtrType = reflect.TypeOf((**RegistryScanningConfigurationScanType)(nil)).Elem()

type RegistryScanningConfigurationScanTypePtrInput interface {
	pulumi.Input

	ToRegistryScanningConfigurationScanTypePtrOutput() RegistryScanningConfigurationScanTypePtrOutput
	ToRegistryScanningConfigurationScanTypePtrOutputWithContext(context.Context) RegistryScanningConfigurationScanTypePtrOutput
}

type registryScanningConfigurationScanTypePtr string

func RegistryScanningConfigurationScanTypePtr(v string) RegistryScanningConfigurationScanTypePtrInput {
	return (*registryScanningConfigurationScanTypePtr)(&v)
}

func (*registryScanningConfigurationScanTypePtr) ElementType() reflect.Type {
	return registryScanningConfigurationScanTypePtrType
}

func (in *registryScanningConfigurationScanTypePtr) ToRegistryScanningConfigurationScanTypePtrOutput() RegistryScanningConfigurationScanTypePtrOutput {
	return pulumi.ToOutput(in).(RegistryScanningConfigurationScanTypePtrOutput)
}

func (in *registryScanningConfigurationScanTypePtr) ToRegistryScanningConfigurationScanTypePtrOutputWithContext(ctx context.Context) RegistryScanningConfigurationScanTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistryScanningConfigurationScanTypePtrOutput)
}

// Type of repository filter
type ReplicationConfigurationFilterType string

const (
	ReplicationConfigurationFilterTypePrefixMatch = ReplicationConfigurationFilterType("PREFIX_MATCH")
)

func (ReplicationConfigurationFilterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationFilterType)(nil)).Elem()
}

func (e ReplicationConfigurationFilterType) ToReplicationConfigurationFilterTypeOutput() ReplicationConfigurationFilterTypeOutput {
	return pulumi.ToOutput(e).(ReplicationConfigurationFilterTypeOutput)
}

func (e ReplicationConfigurationFilterType) ToReplicationConfigurationFilterTypeOutputWithContext(ctx context.Context) ReplicationConfigurationFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReplicationConfigurationFilterTypeOutput)
}

func (e ReplicationConfigurationFilterType) ToReplicationConfigurationFilterTypePtrOutput() ReplicationConfigurationFilterTypePtrOutput {
	return e.ToReplicationConfigurationFilterTypePtrOutputWithContext(context.Background())
}

func (e ReplicationConfigurationFilterType) ToReplicationConfigurationFilterTypePtrOutputWithContext(ctx context.Context) ReplicationConfigurationFilterTypePtrOutput {
	return ReplicationConfigurationFilterType(e).ToReplicationConfigurationFilterTypeOutputWithContext(ctx).ToReplicationConfigurationFilterTypePtrOutputWithContext(ctx)
}

func (e ReplicationConfigurationFilterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationConfigurationFilterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationConfigurationFilterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReplicationConfigurationFilterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReplicationConfigurationFilterTypeOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationFilterType)(nil)).Elem()
}

func (o ReplicationConfigurationFilterTypeOutput) ToReplicationConfigurationFilterTypeOutput() ReplicationConfigurationFilterTypeOutput {
	return o
}

func (o ReplicationConfigurationFilterTypeOutput) ToReplicationConfigurationFilterTypeOutputWithContext(ctx context.Context) ReplicationConfigurationFilterTypeOutput {
	return o
}

func (o ReplicationConfigurationFilterTypeOutput) ToReplicationConfigurationFilterTypePtrOutput() ReplicationConfigurationFilterTypePtrOutput {
	return o.ToReplicationConfigurationFilterTypePtrOutputWithContext(context.Background())
}

func (o ReplicationConfigurationFilterTypeOutput) ToReplicationConfigurationFilterTypePtrOutputWithContext(ctx context.Context) ReplicationConfigurationFilterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationConfigurationFilterType) *ReplicationConfigurationFilterType {
		return &v
	}).(ReplicationConfigurationFilterTypePtrOutput)
}

func (o ReplicationConfigurationFilterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReplicationConfigurationFilterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationConfigurationFilterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReplicationConfigurationFilterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationConfigurationFilterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationConfigurationFilterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReplicationConfigurationFilterTypePtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigurationFilterType)(nil)).Elem()
}

func (o ReplicationConfigurationFilterTypePtrOutput) ToReplicationConfigurationFilterTypePtrOutput() ReplicationConfigurationFilterTypePtrOutput {
	return o
}

func (o ReplicationConfigurationFilterTypePtrOutput) ToReplicationConfigurationFilterTypePtrOutputWithContext(ctx context.Context) ReplicationConfigurationFilterTypePtrOutput {
	return o
}

func (o ReplicationConfigurationFilterTypePtrOutput) Elem() ReplicationConfigurationFilterTypeOutput {
	return o.ApplyT(func(v *ReplicationConfigurationFilterType) ReplicationConfigurationFilterType {
		if v != nil {
			return *v
		}
		var ret ReplicationConfigurationFilterType
		return ret
	}).(ReplicationConfigurationFilterTypeOutput)
}

func (o ReplicationConfigurationFilterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationConfigurationFilterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReplicationConfigurationFilterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReplicationConfigurationFilterTypeInput is an input type that accepts values of the ReplicationConfigurationFilterType enum
// A concrete instance of `ReplicationConfigurationFilterTypeInput` can be one of the following:
//
//	ReplicationConfigurationFilterTypePrefixMatch
type ReplicationConfigurationFilterTypeInput interface {
	pulumi.Input

	ToReplicationConfigurationFilterTypeOutput() ReplicationConfigurationFilterTypeOutput
	ToReplicationConfigurationFilterTypeOutputWithContext(context.Context) ReplicationConfigurationFilterTypeOutput
}

var replicationConfigurationFilterTypePtrType = reflect.TypeOf((**ReplicationConfigurationFilterType)(nil)).Elem()

type ReplicationConfigurationFilterTypePtrInput interface {
	pulumi.Input

	ToReplicationConfigurationFilterTypePtrOutput() ReplicationConfigurationFilterTypePtrOutput
	ToReplicationConfigurationFilterTypePtrOutputWithContext(context.Context) ReplicationConfigurationFilterTypePtrOutput
}

type replicationConfigurationFilterTypePtr string

func ReplicationConfigurationFilterTypePtr(v string) ReplicationConfigurationFilterTypePtrInput {
	return (*replicationConfigurationFilterTypePtr)(&v)
}

func (*replicationConfigurationFilterTypePtr) ElementType() reflect.Type {
	return replicationConfigurationFilterTypePtrType
}

func (in *replicationConfigurationFilterTypePtr) ToReplicationConfigurationFilterTypePtrOutput() ReplicationConfigurationFilterTypePtrOutput {
	return pulumi.ToOutput(in).(ReplicationConfigurationFilterTypePtrOutput)
}

func (in *replicationConfigurationFilterTypePtr) ToReplicationConfigurationFilterTypePtrOutputWithContext(ctx context.Context) ReplicationConfigurationFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReplicationConfigurationFilterTypePtrOutput)
}

// Enumerable Strings representing the repository creation scenarios that the template will apply towards.
type RepositoryCreationTemplateAppliedForItem string

const (
	RepositoryCreationTemplateAppliedForItemReplication      = RepositoryCreationTemplateAppliedForItem("REPLICATION")
	RepositoryCreationTemplateAppliedForItemPullThroughCache = RepositoryCreationTemplateAppliedForItem("PULL_THROUGH_CACHE")
)

func (RepositoryCreationTemplateAppliedForItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCreationTemplateAppliedForItem)(nil)).Elem()
}

func (e RepositoryCreationTemplateAppliedForItem) ToRepositoryCreationTemplateAppliedForItemOutput() RepositoryCreationTemplateAppliedForItemOutput {
	return pulumi.ToOutput(e).(RepositoryCreationTemplateAppliedForItemOutput)
}

func (e RepositoryCreationTemplateAppliedForItem) ToRepositoryCreationTemplateAppliedForItemOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryCreationTemplateAppliedForItemOutput)
}

func (e RepositoryCreationTemplateAppliedForItem) ToRepositoryCreationTemplateAppliedForItemPtrOutput() RepositoryCreationTemplateAppliedForItemPtrOutput {
	return e.ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(context.Background())
}

func (e RepositoryCreationTemplateAppliedForItem) ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemPtrOutput {
	return RepositoryCreationTemplateAppliedForItem(e).ToRepositoryCreationTemplateAppliedForItemOutputWithContext(ctx).ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(ctx)
}

func (e RepositoryCreationTemplateAppliedForItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryCreationTemplateAppliedForItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryCreationTemplateAppliedForItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryCreationTemplateAppliedForItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryCreationTemplateAppliedForItemOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateAppliedForItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCreationTemplateAppliedForItem)(nil)).Elem()
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToRepositoryCreationTemplateAppliedForItemOutput() RepositoryCreationTemplateAppliedForItemOutput {
	return o
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToRepositoryCreationTemplateAppliedForItemOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemOutput {
	return o
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToRepositoryCreationTemplateAppliedForItemPtrOutput() RepositoryCreationTemplateAppliedForItemPtrOutput {
	return o.ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryCreationTemplateAppliedForItem) *RepositoryCreationTemplateAppliedForItem {
		return &v
	}).(RepositoryCreationTemplateAppliedForItemPtrOutput)
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryCreationTemplateAppliedForItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateAppliedForItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryCreationTemplateAppliedForItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryCreationTemplateAppliedForItemPtrOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateAppliedForItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplateAppliedForItem)(nil)).Elem()
}

func (o RepositoryCreationTemplateAppliedForItemPtrOutput) ToRepositoryCreationTemplateAppliedForItemPtrOutput() RepositoryCreationTemplateAppliedForItemPtrOutput {
	return o
}

func (o RepositoryCreationTemplateAppliedForItemPtrOutput) ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemPtrOutput {
	return o
}

func (o RepositoryCreationTemplateAppliedForItemPtrOutput) Elem() RepositoryCreationTemplateAppliedForItemOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplateAppliedForItem) RepositoryCreationTemplateAppliedForItem {
		if v != nil {
			return *v
		}
		var ret RepositoryCreationTemplateAppliedForItem
		return ret
	}).(RepositoryCreationTemplateAppliedForItemOutput)
}

func (o RepositoryCreationTemplateAppliedForItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateAppliedForItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryCreationTemplateAppliedForItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryCreationTemplateAppliedForItemInput is an input type that accepts values of the RepositoryCreationTemplateAppliedForItem enum
// A concrete instance of `RepositoryCreationTemplateAppliedForItemInput` can be one of the following:
//
//	RepositoryCreationTemplateAppliedForItemReplication
//	RepositoryCreationTemplateAppliedForItemPullThroughCache
type RepositoryCreationTemplateAppliedForItemInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateAppliedForItemOutput() RepositoryCreationTemplateAppliedForItemOutput
	ToRepositoryCreationTemplateAppliedForItemOutputWithContext(context.Context) RepositoryCreationTemplateAppliedForItemOutput
}

var repositoryCreationTemplateAppliedForItemPtrType = reflect.TypeOf((**RepositoryCreationTemplateAppliedForItem)(nil)).Elem()

type RepositoryCreationTemplateAppliedForItemPtrInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateAppliedForItemPtrOutput() RepositoryCreationTemplateAppliedForItemPtrOutput
	ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(context.Context) RepositoryCreationTemplateAppliedForItemPtrOutput
}

type repositoryCreationTemplateAppliedForItemPtr string

func RepositoryCreationTemplateAppliedForItemPtr(v string) RepositoryCreationTemplateAppliedForItemPtrInput {
	return (*repositoryCreationTemplateAppliedForItemPtr)(&v)
}

func (*repositoryCreationTemplateAppliedForItemPtr) ElementType() reflect.Type {
	return repositoryCreationTemplateAppliedForItemPtrType
}

func (in *repositoryCreationTemplateAppliedForItemPtr) ToRepositoryCreationTemplateAppliedForItemPtrOutput() RepositoryCreationTemplateAppliedForItemPtrOutput {
	return pulumi.ToOutput(in).(RepositoryCreationTemplateAppliedForItemPtrOutput)
}

func (in *repositoryCreationTemplateAppliedForItemPtr) ToRepositoryCreationTemplateAppliedForItemPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryCreationTemplateAppliedForItemPtrOutput)
}

// RepositoryCreationTemplateAppliedForItemArrayInput is an input type that accepts RepositoryCreationTemplateAppliedForItemArray and RepositoryCreationTemplateAppliedForItemArrayOutput values.
// You can construct a concrete instance of `RepositoryCreationTemplateAppliedForItemArrayInput` via:
//
//	RepositoryCreationTemplateAppliedForItemArray{ RepositoryCreationTemplateAppliedForItemArgs{...} }
type RepositoryCreationTemplateAppliedForItemArrayInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateAppliedForItemArrayOutput() RepositoryCreationTemplateAppliedForItemArrayOutput
	ToRepositoryCreationTemplateAppliedForItemArrayOutputWithContext(context.Context) RepositoryCreationTemplateAppliedForItemArrayOutput
}

type RepositoryCreationTemplateAppliedForItemArray []RepositoryCreationTemplateAppliedForItem

func (RepositoryCreationTemplateAppliedForItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryCreationTemplateAppliedForItem)(nil)).Elem()
}

func (i RepositoryCreationTemplateAppliedForItemArray) ToRepositoryCreationTemplateAppliedForItemArrayOutput() RepositoryCreationTemplateAppliedForItemArrayOutput {
	return i.ToRepositoryCreationTemplateAppliedForItemArrayOutputWithContext(context.Background())
}

func (i RepositoryCreationTemplateAppliedForItemArray) ToRepositoryCreationTemplateAppliedForItemArrayOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCreationTemplateAppliedForItemArrayOutput)
}

type RepositoryCreationTemplateAppliedForItemArrayOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateAppliedForItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryCreationTemplateAppliedForItem)(nil)).Elem()
}

func (o RepositoryCreationTemplateAppliedForItemArrayOutput) ToRepositoryCreationTemplateAppliedForItemArrayOutput() RepositoryCreationTemplateAppliedForItemArrayOutput {
	return o
}

func (o RepositoryCreationTemplateAppliedForItemArrayOutput) ToRepositoryCreationTemplateAppliedForItemArrayOutputWithContext(ctx context.Context) RepositoryCreationTemplateAppliedForItemArrayOutput {
	return o
}

func (o RepositoryCreationTemplateAppliedForItemArrayOutput) Index(i pulumi.IntInput) RepositoryCreationTemplateAppliedForItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryCreationTemplateAppliedForItem {
		return vs[0].([]RepositoryCreationTemplateAppliedForItem)[vs[1].(int)]
	}).(RepositoryCreationTemplateAppliedForItemOutput)
}

// The encryption type to use.
type RepositoryCreationTemplateEncryptionType string

const (
	RepositoryCreationTemplateEncryptionTypeAes256  = RepositoryCreationTemplateEncryptionType("AES256")
	RepositoryCreationTemplateEncryptionTypeKms     = RepositoryCreationTemplateEncryptionType("KMS")
	RepositoryCreationTemplateEncryptionTypeKmsDsse = RepositoryCreationTemplateEncryptionType("KMS_DSSE")
)

func (RepositoryCreationTemplateEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCreationTemplateEncryptionType)(nil)).Elem()
}

func (e RepositoryCreationTemplateEncryptionType) ToRepositoryCreationTemplateEncryptionTypeOutput() RepositoryCreationTemplateEncryptionTypeOutput {
	return pulumi.ToOutput(e).(RepositoryCreationTemplateEncryptionTypeOutput)
}

func (e RepositoryCreationTemplateEncryptionType) ToRepositoryCreationTemplateEncryptionTypeOutputWithContext(ctx context.Context) RepositoryCreationTemplateEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryCreationTemplateEncryptionTypeOutput)
}

func (e RepositoryCreationTemplateEncryptionType) ToRepositoryCreationTemplateEncryptionTypePtrOutput() RepositoryCreationTemplateEncryptionTypePtrOutput {
	return e.ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(context.Background())
}

func (e RepositoryCreationTemplateEncryptionType) ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateEncryptionTypePtrOutput {
	return RepositoryCreationTemplateEncryptionType(e).ToRepositoryCreationTemplateEncryptionTypeOutputWithContext(ctx).ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(ctx)
}

func (e RepositoryCreationTemplateEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryCreationTemplateEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryCreationTemplateEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryCreationTemplateEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryCreationTemplateEncryptionTypeOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCreationTemplateEncryptionType)(nil)).Elem()
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToRepositoryCreationTemplateEncryptionTypeOutput() RepositoryCreationTemplateEncryptionTypeOutput {
	return o
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToRepositoryCreationTemplateEncryptionTypeOutputWithContext(ctx context.Context) RepositoryCreationTemplateEncryptionTypeOutput {
	return o
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToRepositoryCreationTemplateEncryptionTypePtrOutput() RepositoryCreationTemplateEncryptionTypePtrOutput {
	return o.ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryCreationTemplateEncryptionType) *RepositoryCreationTemplateEncryptionType {
		return &v
	}).(RepositoryCreationTemplateEncryptionTypePtrOutput)
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryCreationTemplateEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryCreationTemplateEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryCreationTemplateEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplateEncryptionType)(nil)).Elem()
}

func (o RepositoryCreationTemplateEncryptionTypePtrOutput) ToRepositoryCreationTemplateEncryptionTypePtrOutput() RepositoryCreationTemplateEncryptionTypePtrOutput {
	return o
}

func (o RepositoryCreationTemplateEncryptionTypePtrOutput) ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateEncryptionTypePtrOutput {
	return o
}

func (o RepositoryCreationTemplateEncryptionTypePtrOutput) Elem() RepositoryCreationTemplateEncryptionTypeOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplateEncryptionType) RepositoryCreationTemplateEncryptionType {
		if v != nil {
			return *v
		}
		var ret RepositoryCreationTemplateEncryptionType
		return ret
	}).(RepositoryCreationTemplateEncryptionTypeOutput)
}

func (o RepositoryCreationTemplateEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryCreationTemplateEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryCreationTemplateEncryptionTypeInput is an input type that accepts values of the RepositoryCreationTemplateEncryptionType enum
// A concrete instance of `RepositoryCreationTemplateEncryptionTypeInput` can be one of the following:
//
//	RepositoryCreationTemplateEncryptionTypeAes256
//	RepositoryCreationTemplateEncryptionTypeKms
//	RepositoryCreationTemplateEncryptionTypeKmsDsse
type RepositoryCreationTemplateEncryptionTypeInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateEncryptionTypeOutput() RepositoryCreationTemplateEncryptionTypeOutput
	ToRepositoryCreationTemplateEncryptionTypeOutputWithContext(context.Context) RepositoryCreationTemplateEncryptionTypeOutput
}

var repositoryCreationTemplateEncryptionTypePtrType = reflect.TypeOf((**RepositoryCreationTemplateEncryptionType)(nil)).Elem()

type RepositoryCreationTemplateEncryptionTypePtrInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateEncryptionTypePtrOutput() RepositoryCreationTemplateEncryptionTypePtrOutput
	ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(context.Context) RepositoryCreationTemplateEncryptionTypePtrOutput
}

type repositoryCreationTemplateEncryptionTypePtr string

func RepositoryCreationTemplateEncryptionTypePtr(v string) RepositoryCreationTemplateEncryptionTypePtrInput {
	return (*repositoryCreationTemplateEncryptionTypePtr)(&v)
}

func (*repositoryCreationTemplateEncryptionTypePtr) ElementType() reflect.Type {
	return repositoryCreationTemplateEncryptionTypePtrType
}

func (in *repositoryCreationTemplateEncryptionTypePtr) ToRepositoryCreationTemplateEncryptionTypePtrOutput() RepositoryCreationTemplateEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(RepositoryCreationTemplateEncryptionTypePtrOutput)
}

func (in *repositoryCreationTemplateEncryptionTypePtr) ToRepositoryCreationTemplateEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryCreationTemplateEncryptionTypePtrOutput)
}

// The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
type RepositoryCreationTemplateImageTagMutability string

const (
	RepositoryCreationTemplateImageTagMutabilityMutable   = RepositoryCreationTemplateImageTagMutability("MUTABLE")
	RepositoryCreationTemplateImageTagMutabilityImmutable = RepositoryCreationTemplateImageTagMutability("IMMUTABLE")
)

func (RepositoryCreationTemplateImageTagMutability) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCreationTemplateImageTagMutability)(nil)).Elem()
}

func (e RepositoryCreationTemplateImageTagMutability) ToRepositoryCreationTemplateImageTagMutabilityOutput() RepositoryCreationTemplateImageTagMutabilityOutput {
	return pulumi.ToOutput(e).(RepositoryCreationTemplateImageTagMutabilityOutput)
}

func (e RepositoryCreationTemplateImageTagMutability) ToRepositoryCreationTemplateImageTagMutabilityOutputWithContext(ctx context.Context) RepositoryCreationTemplateImageTagMutabilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryCreationTemplateImageTagMutabilityOutput)
}

func (e RepositoryCreationTemplateImageTagMutability) ToRepositoryCreationTemplateImageTagMutabilityPtrOutput() RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return e.ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(context.Background())
}

func (e RepositoryCreationTemplateImageTagMutability) ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return RepositoryCreationTemplateImageTagMutability(e).ToRepositoryCreationTemplateImageTagMutabilityOutputWithContext(ctx).ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(ctx)
}

func (e RepositoryCreationTemplateImageTagMutability) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryCreationTemplateImageTagMutability) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryCreationTemplateImageTagMutability) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryCreationTemplateImageTagMutability) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryCreationTemplateImageTagMutabilityOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateImageTagMutabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCreationTemplateImageTagMutability)(nil)).Elem()
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToRepositoryCreationTemplateImageTagMutabilityOutput() RepositoryCreationTemplateImageTagMutabilityOutput {
	return o
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToRepositoryCreationTemplateImageTagMutabilityOutputWithContext(ctx context.Context) RepositoryCreationTemplateImageTagMutabilityOutput {
	return o
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToRepositoryCreationTemplateImageTagMutabilityPtrOutput() RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return o.ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryCreationTemplateImageTagMutability) *RepositoryCreationTemplateImageTagMutability {
		return &v
	}).(RepositoryCreationTemplateImageTagMutabilityPtrOutput)
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryCreationTemplateImageTagMutability) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateImageTagMutabilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryCreationTemplateImageTagMutability) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryCreationTemplateImageTagMutabilityPtrOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateImageTagMutabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplateImageTagMutability)(nil)).Elem()
}

func (o RepositoryCreationTemplateImageTagMutabilityPtrOutput) ToRepositoryCreationTemplateImageTagMutabilityPtrOutput() RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return o
}

func (o RepositoryCreationTemplateImageTagMutabilityPtrOutput) ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return o
}

func (o RepositoryCreationTemplateImageTagMutabilityPtrOutput) Elem() RepositoryCreationTemplateImageTagMutabilityOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplateImageTagMutability) RepositoryCreationTemplateImageTagMutability {
		if v != nil {
			return *v
		}
		var ret RepositoryCreationTemplateImageTagMutability
		return ret
	}).(RepositoryCreationTemplateImageTagMutabilityOutput)
}

func (o RepositoryCreationTemplateImageTagMutabilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryCreationTemplateImageTagMutabilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryCreationTemplateImageTagMutability) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryCreationTemplateImageTagMutabilityInput is an input type that accepts values of the RepositoryCreationTemplateImageTagMutability enum
// A concrete instance of `RepositoryCreationTemplateImageTagMutabilityInput` can be one of the following:
//
//	RepositoryCreationTemplateImageTagMutabilityMutable
//	RepositoryCreationTemplateImageTagMutabilityImmutable
type RepositoryCreationTemplateImageTagMutabilityInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateImageTagMutabilityOutput() RepositoryCreationTemplateImageTagMutabilityOutput
	ToRepositoryCreationTemplateImageTagMutabilityOutputWithContext(context.Context) RepositoryCreationTemplateImageTagMutabilityOutput
}

var repositoryCreationTemplateImageTagMutabilityPtrType = reflect.TypeOf((**RepositoryCreationTemplateImageTagMutability)(nil)).Elem()

type RepositoryCreationTemplateImageTagMutabilityPtrInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateImageTagMutabilityPtrOutput() RepositoryCreationTemplateImageTagMutabilityPtrOutput
	ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(context.Context) RepositoryCreationTemplateImageTagMutabilityPtrOutput
}

type repositoryCreationTemplateImageTagMutabilityPtr string

func RepositoryCreationTemplateImageTagMutabilityPtr(v string) RepositoryCreationTemplateImageTagMutabilityPtrInput {
	return (*repositoryCreationTemplateImageTagMutabilityPtr)(&v)
}

func (*repositoryCreationTemplateImageTagMutabilityPtr) ElementType() reflect.Type {
	return repositoryCreationTemplateImageTagMutabilityPtrType
}

func (in *repositoryCreationTemplateImageTagMutabilityPtr) ToRepositoryCreationTemplateImageTagMutabilityPtrOutput() RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return pulumi.ToOutput(in).(RepositoryCreationTemplateImageTagMutabilityPtrOutput)
}

func (in *repositoryCreationTemplateImageTagMutabilityPtr) ToRepositoryCreationTemplateImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryCreationTemplateImageTagMutabilityPtrOutput)
}

// The encryption type to use.
type RepositoryEncryptionType string

const (
	RepositoryEncryptionTypeAes256  = RepositoryEncryptionType("AES256")
	RepositoryEncryptionTypeKms     = RepositoryEncryptionType("KMS")
	RepositoryEncryptionTypeKmsDsse = RepositoryEncryptionType("KMS_DSSE")
)

func (RepositoryEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryEncryptionType)(nil)).Elem()
}

func (e RepositoryEncryptionType) ToRepositoryEncryptionTypeOutput() RepositoryEncryptionTypeOutput {
	return pulumi.ToOutput(e).(RepositoryEncryptionTypeOutput)
}

func (e RepositoryEncryptionType) ToRepositoryEncryptionTypeOutputWithContext(ctx context.Context) RepositoryEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryEncryptionTypeOutput)
}

func (e RepositoryEncryptionType) ToRepositoryEncryptionTypePtrOutput() RepositoryEncryptionTypePtrOutput {
	return e.ToRepositoryEncryptionTypePtrOutputWithContext(context.Background())
}

func (e RepositoryEncryptionType) ToRepositoryEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryEncryptionTypePtrOutput {
	return RepositoryEncryptionType(e).ToRepositoryEncryptionTypeOutputWithContext(ctx).ToRepositoryEncryptionTypePtrOutputWithContext(ctx)
}

func (e RepositoryEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryEncryptionTypeOutput struct{ *pulumi.OutputState }

func (RepositoryEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryEncryptionType)(nil)).Elem()
}

func (o RepositoryEncryptionTypeOutput) ToRepositoryEncryptionTypeOutput() RepositoryEncryptionTypeOutput {
	return o
}

func (o RepositoryEncryptionTypeOutput) ToRepositoryEncryptionTypeOutputWithContext(ctx context.Context) RepositoryEncryptionTypeOutput {
	return o
}

func (o RepositoryEncryptionTypeOutput) ToRepositoryEncryptionTypePtrOutput() RepositoryEncryptionTypePtrOutput {
	return o.ToRepositoryEncryptionTypePtrOutputWithContext(context.Background())
}

func (o RepositoryEncryptionTypeOutput) ToRepositoryEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryEncryptionType) *RepositoryEncryptionType {
		return &v
	}).(RepositoryEncryptionTypePtrOutput)
}

func (o RepositoryEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (RepositoryEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryEncryptionType)(nil)).Elem()
}

func (o RepositoryEncryptionTypePtrOutput) ToRepositoryEncryptionTypePtrOutput() RepositoryEncryptionTypePtrOutput {
	return o
}

func (o RepositoryEncryptionTypePtrOutput) ToRepositoryEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryEncryptionTypePtrOutput {
	return o
}

func (o RepositoryEncryptionTypePtrOutput) Elem() RepositoryEncryptionTypeOutput {
	return o.ApplyT(func(v *RepositoryEncryptionType) RepositoryEncryptionType {
		if v != nil {
			return *v
		}
		var ret RepositoryEncryptionType
		return ret
	}).(RepositoryEncryptionTypeOutput)
}

func (o RepositoryEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryEncryptionTypeInput is an input type that accepts values of the RepositoryEncryptionType enum
// A concrete instance of `RepositoryEncryptionTypeInput` can be one of the following:
//
//	RepositoryEncryptionTypeAes256
//	RepositoryEncryptionTypeKms
//	RepositoryEncryptionTypeKmsDsse
type RepositoryEncryptionTypeInput interface {
	pulumi.Input

	ToRepositoryEncryptionTypeOutput() RepositoryEncryptionTypeOutput
	ToRepositoryEncryptionTypeOutputWithContext(context.Context) RepositoryEncryptionTypeOutput
}

var repositoryEncryptionTypePtrType = reflect.TypeOf((**RepositoryEncryptionType)(nil)).Elem()

type RepositoryEncryptionTypePtrInput interface {
	pulumi.Input

	ToRepositoryEncryptionTypePtrOutput() RepositoryEncryptionTypePtrOutput
	ToRepositoryEncryptionTypePtrOutputWithContext(context.Context) RepositoryEncryptionTypePtrOutput
}

type repositoryEncryptionTypePtr string

func RepositoryEncryptionTypePtr(v string) RepositoryEncryptionTypePtrInput {
	return (*repositoryEncryptionTypePtr)(&v)
}

func (*repositoryEncryptionTypePtr) ElementType() reflect.Type {
	return repositoryEncryptionTypePtrType
}

func (in *repositoryEncryptionTypePtr) ToRepositoryEncryptionTypePtrOutput() RepositoryEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(RepositoryEncryptionTypePtrOutput)
}

func (in *repositoryEncryptionTypePtr) ToRepositoryEncryptionTypePtrOutputWithContext(ctx context.Context) RepositoryEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryEncryptionTypePtrOutput)
}

// The tag mutability setting for the repository. If this parameter is omitted, the default setting of “MUTABLE“ will be used which will allow image tags to be overwritten. If “IMMUTABLE“ is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
type RepositoryImageTagMutability string

const (
	RepositoryImageTagMutabilityMutable   = RepositoryImageTagMutability("MUTABLE")
	RepositoryImageTagMutabilityImmutable = RepositoryImageTagMutability("IMMUTABLE")
)

func (RepositoryImageTagMutability) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryImageTagMutability)(nil)).Elem()
}

func (e RepositoryImageTagMutability) ToRepositoryImageTagMutabilityOutput() RepositoryImageTagMutabilityOutput {
	return pulumi.ToOutput(e).(RepositoryImageTagMutabilityOutput)
}

func (e RepositoryImageTagMutability) ToRepositoryImageTagMutabilityOutputWithContext(ctx context.Context) RepositoryImageTagMutabilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryImageTagMutabilityOutput)
}

func (e RepositoryImageTagMutability) ToRepositoryImageTagMutabilityPtrOutput() RepositoryImageTagMutabilityPtrOutput {
	return e.ToRepositoryImageTagMutabilityPtrOutputWithContext(context.Background())
}

func (e RepositoryImageTagMutability) ToRepositoryImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryImageTagMutabilityPtrOutput {
	return RepositoryImageTagMutability(e).ToRepositoryImageTagMutabilityOutputWithContext(ctx).ToRepositoryImageTagMutabilityPtrOutputWithContext(ctx)
}

func (e RepositoryImageTagMutability) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryImageTagMutability) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryImageTagMutability) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryImageTagMutability) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryImageTagMutabilityOutput struct{ *pulumi.OutputState }

func (RepositoryImageTagMutabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryImageTagMutability)(nil)).Elem()
}

func (o RepositoryImageTagMutabilityOutput) ToRepositoryImageTagMutabilityOutput() RepositoryImageTagMutabilityOutput {
	return o
}

func (o RepositoryImageTagMutabilityOutput) ToRepositoryImageTagMutabilityOutputWithContext(ctx context.Context) RepositoryImageTagMutabilityOutput {
	return o
}

func (o RepositoryImageTagMutabilityOutput) ToRepositoryImageTagMutabilityPtrOutput() RepositoryImageTagMutabilityPtrOutput {
	return o.ToRepositoryImageTagMutabilityPtrOutputWithContext(context.Background())
}

func (o RepositoryImageTagMutabilityOutput) ToRepositoryImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryImageTagMutabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryImageTagMutability) *RepositoryImageTagMutability {
		return &v
	}).(RepositoryImageTagMutabilityPtrOutput)
}

func (o RepositoryImageTagMutabilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryImageTagMutabilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryImageTagMutability) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryImageTagMutabilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryImageTagMutabilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryImageTagMutability) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryImageTagMutabilityPtrOutput struct{ *pulumi.OutputState }

func (RepositoryImageTagMutabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryImageTagMutability)(nil)).Elem()
}

func (o RepositoryImageTagMutabilityPtrOutput) ToRepositoryImageTagMutabilityPtrOutput() RepositoryImageTagMutabilityPtrOutput {
	return o
}

func (o RepositoryImageTagMutabilityPtrOutput) ToRepositoryImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryImageTagMutabilityPtrOutput {
	return o
}

func (o RepositoryImageTagMutabilityPtrOutput) Elem() RepositoryImageTagMutabilityOutput {
	return o.ApplyT(func(v *RepositoryImageTagMutability) RepositoryImageTagMutability {
		if v != nil {
			return *v
		}
		var ret RepositoryImageTagMutability
		return ret
	}).(RepositoryImageTagMutabilityOutput)
}

func (o RepositoryImageTagMutabilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryImageTagMutabilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryImageTagMutability) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryImageTagMutabilityInput is an input type that accepts values of the RepositoryImageTagMutability enum
// A concrete instance of `RepositoryImageTagMutabilityInput` can be one of the following:
//
//	RepositoryImageTagMutabilityMutable
//	RepositoryImageTagMutabilityImmutable
type RepositoryImageTagMutabilityInput interface {
	pulumi.Input

	ToRepositoryImageTagMutabilityOutput() RepositoryImageTagMutabilityOutput
	ToRepositoryImageTagMutabilityOutputWithContext(context.Context) RepositoryImageTagMutabilityOutput
}

var repositoryImageTagMutabilityPtrType = reflect.TypeOf((**RepositoryImageTagMutability)(nil)).Elem()

type RepositoryImageTagMutabilityPtrInput interface {
	pulumi.Input

	ToRepositoryImageTagMutabilityPtrOutput() RepositoryImageTagMutabilityPtrOutput
	ToRepositoryImageTagMutabilityPtrOutputWithContext(context.Context) RepositoryImageTagMutabilityPtrOutput
}

type repositoryImageTagMutabilityPtr string

func RepositoryImageTagMutabilityPtr(v string) RepositoryImageTagMutabilityPtrInput {
	return (*repositoryImageTagMutabilityPtr)(&v)
}

func (*repositoryImageTagMutabilityPtr) ElementType() reflect.Type {
	return repositoryImageTagMutabilityPtrType
}

func (in *repositoryImageTagMutabilityPtr) ToRepositoryImageTagMutabilityPtrOutput() RepositoryImageTagMutabilityPtrOutput {
	return pulumi.ToOutput(in).(RepositoryImageTagMutabilityPtrOutput)
}

func (in *repositoryImageTagMutabilityPtr) ToRepositoryImageTagMutabilityPtrOutputWithContext(ctx context.Context) RepositoryImageTagMutabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryImageTagMutabilityPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryScanningConfigurationFilterTypeInput)(nil)).Elem(), RegistryScanningConfigurationFilterType("WILDCARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryScanningConfigurationFilterTypePtrInput)(nil)).Elem(), RegistryScanningConfigurationFilterType("WILDCARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryScanningConfigurationScanFrequencyInput)(nil)).Elem(), RegistryScanningConfigurationScanFrequency("SCAN_ON_PUSH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryScanningConfigurationScanFrequencyPtrInput)(nil)).Elem(), RegistryScanningConfigurationScanFrequency("SCAN_ON_PUSH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryScanningConfigurationScanTypeInput)(nil)).Elem(), RegistryScanningConfigurationScanType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryScanningConfigurationScanTypePtrInput)(nil)).Elem(), RegistryScanningConfigurationScanType("BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationFilterTypeInput)(nil)).Elem(), ReplicationConfigurationFilterType("PREFIX_MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationFilterTypePtrInput)(nil)).Elem(), ReplicationConfigurationFilterType("PREFIX_MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateAppliedForItemInput)(nil)).Elem(), RepositoryCreationTemplateAppliedForItem("REPLICATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateAppliedForItemPtrInput)(nil)).Elem(), RepositoryCreationTemplateAppliedForItem("REPLICATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateAppliedForItemArrayInput)(nil)).Elem(), RepositoryCreationTemplateAppliedForItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateEncryptionTypeInput)(nil)).Elem(), RepositoryCreationTemplateEncryptionType("AES256"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateEncryptionTypePtrInput)(nil)).Elem(), RepositoryCreationTemplateEncryptionType("AES256"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateImageTagMutabilityInput)(nil)).Elem(), RepositoryCreationTemplateImageTagMutability("MUTABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateImageTagMutabilityPtrInput)(nil)).Elem(), RepositoryCreationTemplateImageTagMutability("MUTABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryEncryptionTypeInput)(nil)).Elem(), RepositoryEncryptionType("AES256"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryEncryptionTypePtrInput)(nil)).Elem(), RepositoryEncryptionType("AES256"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryImageTagMutabilityInput)(nil)).Elem(), RepositoryImageTagMutability("MUTABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryImageTagMutabilityPtrInput)(nil)).Elem(), RepositoryImageTagMutability("MUTABLE"))
	pulumi.RegisterOutputType(RegistryScanningConfigurationFilterTypeOutput{})
	pulumi.RegisterOutputType(RegistryScanningConfigurationFilterTypePtrOutput{})
	pulumi.RegisterOutputType(RegistryScanningConfigurationScanFrequencyOutput{})
	pulumi.RegisterOutputType(RegistryScanningConfigurationScanFrequencyPtrOutput{})
	pulumi.RegisterOutputType(RegistryScanningConfigurationScanTypeOutput{})
	pulumi.RegisterOutputType(RegistryScanningConfigurationScanTypePtrOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationFilterTypeOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationFilterTypePtrOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateAppliedForItemOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateAppliedForItemPtrOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateAppliedForItemArrayOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateEncryptionTypeOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateImageTagMutabilityOutput{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateImageTagMutabilityPtrOutput{})
	pulumi.RegisterOutputType(RepositoryEncryptionTypeOutput{})
	pulumi.RegisterOutputType(RepositoryEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(RepositoryImageTagMutabilityOutput{})
	pulumi.RegisterOutputType(RepositoryImageTagMutabilityPtrOutput{})
}
