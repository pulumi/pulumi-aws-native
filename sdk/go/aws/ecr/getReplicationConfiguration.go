// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::ECR::ReplicationConfiguration“ resource creates or updates the replication configuration for a private registry. The first time a replication configuration is applied to a private registry, a service-linked IAM role is created in your account for the replication process. For more information, see [Using Service-Linked Roles for Amazon ECR](https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html) in the *Amazon Elastic Container Registry User Guide*.
//
//	When configuring cross-account replication, the destination account must grant the source account permission to replicate. This permission is controlled using a private registry permissions policy. For more information, see ``AWS::ECR::RegistryPolicy``.
func LookupReplicationConfiguration(ctx *pulumi.Context, args *LookupReplicationConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupReplicationConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReplicationConfigurationResult
	err := ctx.Invoke("aws-native:ecr:getReplicationConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupReplicationConfigurationArgs struct {
	// The account ID of the destination registry.
	RegistryId string `pulumi:"registryId"`
}

type LookupReplicationConfigurationResult struct {
	// The account ID of the destination registry.
	RegistryId *string `pulumi:"registryId"`
	// The replication configuration for a registry.
	ReplicationConfiguration *ReplicationConfigurationType `pulumi:"replicationConfiguration"`
}

func LookupReplicationConfigurationOutput(ctx *pulumi.Context, args LookupReplicationConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupReplicationConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupReplicationConfigurationResultOutput, error) {
			args := v.(LookupReplicationConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ecr:getReplicationConfiguration", args, LookupReplicationConfigurationResultOutput{}, options).(LookupReplicationConfigurationResultOutput), nil
		}).(LookupReplicationConfigurationResultOutput)
}

type LookupReplicationConfigurationOutputArgs struct {
	// The account ID of the destination registry.
	RegistryId pulumi.StringInput `pulumi:"registryId"`
}

func (LookupReplicationConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationConfigurationArgs)(nil)).Elem()
}

type LookupReplicationConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupReplicationConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationConfigurationResult)(nil)).Elem()
}

func (o LookupReplicationConfigurationResultOutput) ToLookupReplicationConfigurationResultOutput() LookupReplicationConfigurationResultOutput {
	return o
}

func (o LookupReplicationConfigurationResultOutput) ToLookupReplicationConfigurationResultOutputWithContext(ctx context.Context) LookupReplicationConfigurationResultOutput {
	return o
}

// The account ID of the destination registry.
func (o LookupReplicationConfigurationResultOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReplicationConfigurationResult) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

// The replication configuration for a registry.
func (o LookupReplicationConfigurationResultOutput) ReplicationConfiguration() ReplicationConfigurationTypePtrOutput {
	return o.ApplyT(func(v LookupReplicationConfigurationResult) *ReplicationConfigurationType {
		return v.ReplicationConfiguration
	}).(ReplicationConfigurationTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReplicationConfigurationResultOutput{})
}
