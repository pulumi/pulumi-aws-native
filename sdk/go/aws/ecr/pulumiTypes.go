// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type RepositoryLifecyclePolicy struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
	LifecyclePolicyText *string `pulumi:"lifecyclePolicyText"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
	RegistryId *string `pulumi:"registryId"`
}

// RepositoryLifecyclePolicyInput is an input type that accepts RepositoryLifecyclePolicyArgs and RepositoryLifecyclePolicyOutput values.
// You can construct a concrete instance of `RepositoryLifecyclePolicyInput` via:
//
//          RepositoryLifecyclePolicyArgs{...}
type RepositoryLifecyclePolicyInput interface {
	pulumi.Input

	ToRepositoryLifecyclePolicyOutput() RepositoryLifecyclePolicyOutput
	ToRepositoryLifecyclePolicyOutputWithContext(context.Context) RepositoryLifecyclePolicyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type RepositoryLifecyclePolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
	LifecyclePolicyText pulumi.StringPtrInput `pulumi:"lifecyclePolicyText"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
	RegistryId pulumi.StringPtrInput `pulumi:"registryId"`
}

func (RepositoryLifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryLifecyclePolicy)(nil)).Elem()
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyOutput() RepositoryLifecyclePolicyOutput {
	return i.ToRepositoryLifecyclePolicyOutputWithContext(context.Background())
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryLifecyclePolicyOutput)
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return i.ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryLifecyclePolicyOutput).ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx)
}

// RepositoryLifecyclePolicyPtrInput is an input type that accepts RepositoryLifecyclePolicyArgs, RepositoryLifecyclePolicyPtr and RepositoryLifecyclePolicyPtrOutput values.
// You can construct a concrete instance of `RepositoryLifecyclePolicyPtrInput` via:
//
//          RepositoryLifecyclePolicyArgs{...}
//
//  or:
//
//          nil
type RepositoryLifecyclePolicyPtrInput interface {
	pulumi.Input

	ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput
	ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Context) RepositoryLifecyclePolicyPtrOutput
}

type repositoryLifecyclePolicyPtrType RepositoryLifecyclePolicyArgs

func RepositoryLifecyclePolicyPtr(v *RepositoryLifecyclePolicyArgs) RepositoryLifecyclePolicyPtrInput {
	return (*repositoryLifecyclePolicyPtrType)(v)
}

func (*repositoryLifecyclePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryLifecyclePolicy)(nil)).Elem()
}

func (i *repositoryLifecyclePolicyPtrType) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return i.ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (i *repositoryLifecyclePolicyPtrType) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryLifecyclePolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type RepositoryLifecyclePolicyOutput struct{ *pulumi.OutputState }

func (RepositoryLifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryLifecyclePolicy)(nil)).Elem()
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyOutput() RepositoryLifecyclePolicyOutput {
	return o
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyOutput {
	return o
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return o.ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryLifecyclePolicy) *RepositoryLifecyclePolicy {
		return &v
	}).(RepositoryLifecyclePolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
func (o RepositoryLifecyclePolicyOutput) LifecyclePolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryLifecyclePolicy) *string { return v.LifecyclePolicyText }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
func (o RepositoryLifecyclePolicyOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryLifecyclePolicy) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

type RepositoryLifecyclePolicyPtrOutput struct{ *pulumi.OutputState }

func (RepositoryLifecyclePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryLifecyclePolicy)(nil)).Elem()
}

func (o RepositoryLifecyclePolicyPtrOutput) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return o
}

func (o RepositoryLifecyclePolicyPtrOutput) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return o
}

func (o RepositoryLifecyclePolicyPtrOutput) Elem() RepositoryLifecyclePolicyOutput {
	return o.ApplyT(func(v *RepositoryLifecyclePolicy) RepositoryLifecyclePolicy {
		if v != nil {
			return *v
		}
		var ret RepositoryLifecyclePolicy
		return ret
	}).(RepositoryLifecyclePolicyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
func (o RepositoryLifecyclePolicyPtrOutput) LifecyclePolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryLifecyclePolicy) *string {
		if v == nil {
			return nil
		}
		return v.LifecyclePolicyText
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
func (o RepositoryLifecyclePolicyPtrOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryLifecyclePolicy) *string {
		if v == nil {
			return nil
		}
		return v.RegistryId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RepositoryLifecyclePolicyOutput{})
	pulumi.RegisterOutputType(RepositoryLifecyclePolicyPtrOutput{})
}
