// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The details of the repository creation template associated with the request.
type RepositoryCreationTemplate struct {
	pulumi.CustomResourceState

	// A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION
	AppliedFor RepositoryCreationTemplateAppliedForItemArrayOutput `pulumi:"appliedFor"`
	// The date and time, in JavaScript date format, when the repository creation template was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template.
	CustomRoleArn pulumi.StringPtrOutput `pulumi:"customRoleArn"`
	// The description associated with the repository creation template.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The encryption configuration associated with the repository creation template.
	EncryptionConfiguration RepositoryCreationTemplateEncryptionConfigurationPtrOutput `pulumi:"encryptionConfiguration"`
	// The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
	ImageTagMutability RepositoryCreationTemplateImageTagMutabilityPtrOutput `pulumi:"imageTagMutability"`
	// The lifecycle policy to use for repositories created using the template.
	LifecyclePolicy pulumi.StringPtrOutput `pulumi:"lifecyclePolicy"`
	// The repository namespace prefix associated with the repository creation template.
	Prefix pulumi.StringOutput `pulumi:"prefix"`
	// The repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions.
	RepositoryPolicy pulumi.StringPtrOutput `pulumi:"repositoryPolicy"`
	// The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
	ResourceTags RepositoryCreationTemplateTagArrayOutput `pulumi:"resourceTags"`
	// The date and time, in JavaScript date format, when the repository creation template was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewRepositoryCreationTemplate registers a new resource with the given unique name, arguments, and options.
func NewRepositoryCreationTemplate(ctx *pulumi.Context,
	name string, args *RepositoryCreationTemplateArgs, opts ...pulumi.ResourceOption) (*RepositoryCreationTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppliedFor == nil {
		return nil, errors.New("invalid value for required argument 'AppliedFor'")
	}
	if args.Prefix == nil {
		return nil, errors.New("invalid value for required argument 'Prefix'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"prefix",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RepositoryCreationTemplate
	err := ctx.RegisterResource("aws-native:ecr:RepositoryCreationTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRepositoryCreationTemplate gets an existing RepositoryCreationTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRepositoryCreationTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RepositoryCreationTemplateState, opts ...pulumi.ResourceOption) (*RepositoryCreationTemplate, error) {
	var resource RepositoryCreationTemplate
	err := ctx.ReadResource("aws-native:ecr:RepositoryCreationTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RepositoryCreationTemplate resources.
type repositoryCreationTemplateState struct {
}

type RepositoryCreationTemplateState struct {
}

func (RepositoryCreationTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryCreationTemplateState)(nil)).Elem()
}

type repositoryCreationTemplateArgs struct {
	// A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION
	AppliedFor []RepositoryCreationTemplateAppliedForItem `pulumi:"appliedFor"`
	// The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template.
	CustomRoleArn *string `pulumi:"customRoleArn"`
	// The description associated with the repository creation template.
	Description *string `pulumi:"description"`
	// The encryption configuration associated with the repository creation template.
	EncryptionConfiguration *RepositoryCreationTemplateEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
	ImageTagMutability *RepositoryCreationTemplateImageTagMutability `pulumi:"imageTagMutability"`
	// The lifecycle policy to use for repositories created using the template.
	LifecyclePolicy *string `pulumi:"lifecyclePolicy"`
	// The repository namespace prefix associated with the repository creation template.
	Prefix string `pulumi:"prefix"`
	// The repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions.
	RepositoryPolicy *string `pulumi:"repositoryPolicy"`
	// The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
	ResourceTags []RepositoryCreationTemplateTag `pulumi:"resourceTags"`
}

// The set of arguments for constructing a RepositoryCreationTemplate resource.
type RepositoryCreationTemplateArgs struct {
	// A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION
	AppliedFor RepositoryCreationTemplateAppliedForItemArrayInput
	// The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template.
	CustomRoleArn pulumi.StringPtrInput
	// The description associated with the repository creation template.
	Description pulumi.StringPtrInput
	// The encryption configuration associated with the repository creation template.
	EncryptionConfiguration RepositoryCreationTemplateEncryptionConfigurationPtrInput
	// The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
	ImageTagMutability RepositoryCreationTemplateImageTagMutabilityPtrInput
	// The lifecycle policy to use for repositories created using the template.
	LifecyclePolicy pulumi.StringPtrInput
	// The repository namespace prefix associated with the repository creation template.
	Prefix pulumi.StringInput
	// The repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions.
	RepositoryPolicy pulumi.StringPtrInput
	// The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
	ResourceTags RepositoryCreationTemplateTagArrayInput
}

func (RepositoryCreationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryCreationTemplateArgs)(nil)).Elem()
}

type RepositoryCreationTemplateInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateOutput() RepositoryCreationTemplateOutput
	ToRepositoryCreationTemplateOutputWithContext(ctx context.Context) RepositoryCreationTemplateOutput
}

func (*RepositoryCreationTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplate)(nil)).Elem()
}

func (i *RepositoryCreationTemplate) ToRepositoryCreationTemplateOutput() RepositoryCreationTemplateOutput {
	return i.ToRepositoryCreationTemplateOutputWithContext(context.Background())
}

func (i *RepositoryCreationTemplate) ToRepositoryCreationTemplateOutputWithContext(ctx context.Context) RepositoryCreationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCreationTemplateOutput)
}

type RepositoryCreationTemplateOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplate)(nil)).Elem()
}

func (o RepositoryCreationTemplateOutput) ToRepositoryCreationTemplateOutput() RepositoryCreationTemplateOutput {
	return o
}

func (o RepositoryCreationTemplateOutput) ToRepositoryCreationTemplateOutputWithContext(ctx context.Context) RepositoryCreationTemplateOutput {
	return o
}

// A list of enumerable Strings representing the repository creation scenarios that this template will apply towards. The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION
func (o RepositoryCreationTemplateOutput) AppliedFor() RepositoryCreationTemplateAppliedForItemArrayOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateAppliedForItemArrayOutput {
		return v.AppliedFor
	}).(RepositoryCreationTemplateAppliedForItemArrayOutput)
}

// The date and time, in JavaScript date format, when the repository creation template was created.
func (o RepositoryCreationTemplateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ARN of the role to be assumed by Amazon ECR. Amazon ECR will assume your supplied role when the customRoleArn is specified. When this field isn't specified, Amazon ECR will use the service-linked role for the repository creation template.
func (o RepositoryCreationTemplateOutput) CustomRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.CustomRoleArn }).(pulumi.StringPtrOutput)
}

// The description associated with the repository creation template.
func (o RepositoryCreationTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The encryption configuration associated with the repository creation template.
func (o RepositoryCreationTemplateOutput) EncryptionConfiguration() RepositoryCreationTemplateEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateEncryptionConfigurationPtrOutput {
		return v.EncryptionConfiguration
	}).(RepositoryCreationTemplateEncryptionConfigurationPtrOutput)
}

// The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
func (o RepositoryCreationTemplateOutput) ImageTagMutability() RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateImageTagMutabilityPtrOutput {
		return v.ImageTagMutability
	}).(RepositoryCreationTemplateImageTagMutabilityPtrOutput)
}

// The lifecycle policy to use for repositories created using the template.
func (o RepositoryCreationTemplateOutput) LifecyclePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.LifecyclePolicy }).(pulumi.StringPtrOutput)
}

// The repository namespace prefix associated with the repository creation template.
func (o RepositoryCreationTemplateOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringOutput { return v.Prefix }).(pulumi.StringOutput)
}

// The repository policy to apply to repositories created using the template. A repository policy is a permissions policy associated with a repository to control access permissions.
func (o RepositoryCreationTemplateOutput) RepositoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.RepositoryPolicy }).(pulumi.StringPtrOutput)
}

// The metadata to apply to the repository to help you categorize and organize. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
func (o RepositoryCreationTemplateOutput) ResourceTags() RepositoryCreationTemplateTagArrayOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateTagArrayOutput { return v.ResourceTags }).(RepositoryCreationTemplateTagArrayOutput)
}

// The date and time, in JavaScript date format, when the repository creation template was last updated.
func (o RepositoryCreationTemplateOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateInput)(nil)).Elem(), &RepositoryCreationTemplate{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateOutput{})
}
