// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::ECR::RepositoryCreationTemplate is used to create repository with configuration from a pre-defined template.
type RepositoryCreationTemplate struct {
	pulumi.CustomResourceState

	// A list of enumerable Strings representing the repository creation scenarios that the template will apply towards.
	AppliedFor RepositoryCreationTemplateAppliedForItemArrayOutput `pulumi:"appliedFor"`
	// Create timestamp of the template.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the template.
	Description             pulumi.StringPtrOutput                                     `pulumi:"description"`
	EncryptionConfiguration RepositoryCreationTemplateEncryptionConfigurationPtrOutput `pulumi:"encryptionConfiguration"`
	// The image tag mutability setting for the repository.
	ImageTagMutability RepositoryCreationTemplateImageTagMutabilityPtrOutput `pulumi:"imageTagMutability"`
	// The JSON lifecycle policy text to apply to the repository. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
	LifecyclePolicy pulumi.StringPtrOutput `pulumi:"lifecyclePolicy"`
	// The prefix use to match the repository name and apply the template.
	Prefix pulumi.StringOutput `pulumi:"prefix"`
	// The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
	RepositoryPolicy pulumi.StringPtrOutput `pulumi:"repositoryPolicy"`
	// An array of key-value pairs to apply to this resource.
	ResourceTags RepositoryCreationTemplateTagArrayOutput `pulumi:"resourceTags"`
	// Update timestamp of the template.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewRepositoryCreationTemplate registers a new resource with the given unique name, arguments, and options.
func NewRepositoryCreationTemplate(ctx *pulumi.Context,
	name string, args *RepositoryCreationTemplateArgs, opts ...pulumi.ResourceOption) (*RepositoryCreationTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppliedFor == nil {
		return nil, errors.New("invalid value for required argument 'AppliedFor'")
	}
	if args.Prefix == nil {
		return nil, errors.New("invalid value for required argument 'Prefix'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"prefix",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RepositoryCreationTemplate
	err := ctx.RegisterResource("aws-native:ecr:RepositoryCreationTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRepositoryCreationTemplate gets an existing RepositoryCreationTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRepositoryCreationTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RepositoryCreationTemplateState, opts ...pulumi.ResourceOption) (*RepositoryCreationTemplate, error) {
	var resource RepositoryCreationTemplate
	err := ctx.ReadResource("aws-native:ecr:RepositoryCreationTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RepositoryCreationTemplate resources.
type repositoryCreationTemplateState struct {
}

type RepositoryCreationTemplateState struct {
}

func (RepositoryCreationTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryCreationTemplateState)(nil)).Elem()
}

type repositoryCreationTemplateArgs struct {
	// A list of enumerable Strings representing the repository creation scenarios that the template will apply towards.
	AppliedFor []RepositoryCreationTemplateAppliedForItem `pulumi:"appliedFor"`
	// The description of the template.
	Description             *string                                            `pulumi:"description"`
	EncryptionConfiguration *RepositoryCreationTemplateEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The image tag mutability setting for the repository.
	ImageTagMutability *RepositoryCreationTemplateImageTagMutability `pulumi:"imageTagMutability"`
	// The JSON lifecycle policy text to apply to the repository. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
	LifecyclePolicy *string `pulumi:"lifecyclePolicy"`
	// The prefix use to match the repository name and apply the template.
	Prefix string `pulumi:"prefix"`
	// The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
	RepositoryPolicy *string `pulumi:"repositoryPolicy"`
	// An array of key-value pairs to apply to this resource.
	ResourceTags []RepositoryCreationTemplateTag `pulumi:"resourceTags"`
}

// The set of arguments for constructing a RepositoryCreationTemplate resource.
type RepositoryCreationTemplateArgs struct {
	// A list of enumerable Strings representing the repository creation scenarios that the template will apply towards.
	AppliedFor RepositoryCreationTemplateAppliedForItemArrayInput
	// The description of the template.
	Description             pulumi.StringPtrInput
	EncryptionConfiguration RepositoryCreationTemplateEncryptionConfigurationPtrInput
	// The image tag mutability setting for the repository.
	ImageTagMutability RepositoryCreationTemplateImageTagMutabilityPtrInput
	// The JSON lifecycle policy text to apply to the repository. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
	LifecyclePolicy pulumi.StringPtrInput
	// The prefix use to match the repository name and apply the template.
	Prefix pulumi.StringInput
	// The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
	RepositoryPolicy pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	ResourceTags RepositoryCreationTemplateTagArrayInput
}

func (RepositoryCreationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryCreationTemplateArgs)(nil)).Elem()
}

type RepositoryCreationTemplateInput interface {
	pulumi.Input

	ToRepositoryCreationTemplateOutput() RepositoryCreationTemplateOutput
	ToRepositoryCreationTemplateOutputWithContext(ctx context.Context) RepositoryCreationTemplateOutput
}

func (*RepositoryCreationTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplate)(nil)).Elem()
}

func (i *RepositoryCreationTemplate) ToRepositoryCreationTemplateOutput() RepositoryCreationTemplateOutput {
	return i.ToRepositoryCreationTemplateOutputWithContext(context.Background())
}

func (i *RepositoryCreationTemplate) ToRepositoryCreationTemplateOutputWithContext(ctx context.Context) RepositoryCreationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCreationTemplateOutput)
}

type RepositoryCreationTemplateOutput struct{ *pulumi.OutputState }

func (RepositoryCreationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCreationTemplate)(nil)).Elem()
}

func (o RepositoryCreationTemplateOutput) ToRepositoryCreationTemplateOutput() RepositoryCreationTemplateOutput {
	return o
}

func (o RepositoryCreationTemplateOutput) ToRepositoryCreationTemplateOutputWithContext(ctx context.Context) RepositoryCreationTemplateOutput {
	return o
}

// A list of enumerable Strings representing the repository creation scenarios that the template will apply towards.
func (o RepositoryCreationTemplateOutput) AppliedFor() RepositoryCreationTemplateAppliedForItemArrayOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateAppliedForItemArrayOutput {
		return v.AppliedFor
	}).(RepositoryCreationTemplateAppliedForItemArrayOutput)
}

// Create timestamp of the template.
func (o RepositoryCreationTemplateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the template.
func (o RepositoryCreationTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryCreationTemplateOutput) EncryptionConfiguration() RepositoryCreationTemplateEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateEncryptionConfigurationPtrOutput {
		return v.EncryptionConfiguration
	}).(RepositoryCreationTemplateEncryptionConfigurationPtrOutput)
}

// The image tag mutability setting for the repository.
func (o RepositoryCreationTemplateOutput) ImageTagMutability() RepositoryCreationTemplateImageTagMutabilityPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateImageTagMutabilityPtrOutput {
		return v.ImageTagMutability
	}).(RepositoryCreationTemplateImageTagMutabilityPtrOutput)
}

// The JSON lifecycle policy text to apply to the repository. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
func (o RepositoryCreationTemplateOutput) LifecyclePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.LifecyclePolicy }).(pulumi.StringPtrOutput)
}

// The prefix use to match the repository name and apply the template.
func (o RepositoryCreationTemplateOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringOutput { return v.Prefix }).(pulumi.StringOutput)
}

// The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
func (o RepositoryCreationTemplateOutput) RepositoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringPtrOutput { return v.RepositoryPolicy }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o RepositoryCreationTemplateOutput) ResourceTags() RepositoryCreationTemplateTagArrayOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) RepositoryCreationTemplateTagArrayOutput { return v.ResourceTags }).(RepositoryCreationTemplateTagArrayOutput)
}

// Update timestamp of the template.
func (o RepositoryCreationTemplateOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryCreationTemplate) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCreationTemplateInput)(nil)).Elem(), &RepositoryCreationTemplate{})
	pulumi.RegisterOutputType(RepositoryCreationTemplateOutput{})
}
