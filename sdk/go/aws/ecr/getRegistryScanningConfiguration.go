// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::ECR::RegistryScanningConfiguration controls the scanning configuration for an Amazon Elastic Container Registry (Amazon Private ECR). For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html
func LookupRegistryScanningConfiguration(ctx *pulumi.Context, args *LookupRegistryScanningConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupRegistryScanningConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegistryScanningConfigurationResult
	err := ctx.Invoke("aws-native:ecr:getRegistryScanningConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRegistryScanningConfigurationArgs struct {
	RegistryId string `pulumi:"registryId"`
}

type LookupRegistryScanningConfigurationResult struct {
	RegistryId *string                                     `pulumi:"registryId"`
	Rules      []RegistryScanningConfigurationScanningRule `pulumi:"rules"`
	ScanType   *RegistryScanningConfigurationScanType      `pulumi:"scanType"`
}

func LookupRegistryScanningConfigurationOutput(ctx *pulumi.Context, args LookupRegistryScanningConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryScanningConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegistryScanningConfigurationResultOutput, error) {
			args := v.(LookupRegistryScanningConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ecr:getRegistryScanningConfiguration", args, LookupRegistryScanningConfigurationResultOutput{}, options).(LookupRegistryScanningConfigurationResultOutput), nil
		}).(LookupRegistryScanningConfigurationResultOutput)
}

type LookupRegistryScanningConfigurationOutputArgs struct {
	RegistryId pulumi.StringInput `pulumi:"registryId"`
}

func (LookupRegistryScanningConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryScanningConfigurationArgs)(nil)).Elem()
}

type LookupRegistryScanningConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryScanningConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryScanningConfigurationResult)(nil)).Elem()
}

func (o LookupRegistryScanningConfigurationResultOutput) ToLookupRegistryScanningConfigurationResultOutput() LookupRegistryScanningConfigurationResultOutput {
	return o
}

func (o LookupRegistryScanningConfigurationResultOutput) ToLookupRegistryScanningConfigurationResultOutputWithContext(ctx context.Context) LookupRegistryScanningConfigurationResultOutput {
	return o
}

func (o LookupRegistryScanningConfigurationResultOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryScanningConfigurationResult) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryScanningConfigurationResultOutput) Rules() RegistryScanningConfigurationScanningRuleArrayOutput {
	return o.ApplyT(func(v LookupRegistryScanningConfigurationResult) []RegistryScanningConfigurationScanningRule {
		return v.Rules
	}).(RegistryScanningConfigurationScanningRuleArrayOutput)
}

func (o LookupRegistryScanningConfigurationResultOutput) ScanType() RegistryScanningConfigurationScanTypePtrOutput {
	return o.ApplyT(func(v LookupRegistryScanningConfigurationResult) *RegistryScanningConfigurationScanType {
		return v.ScanType
	}).(RegistryScanningConfigurationScanTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryScanningConfigurationResultOutput{})
}
