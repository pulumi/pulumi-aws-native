// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalogappregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Schema for AWS::ServiceCatalogAppRegistry::Application
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationResult
	err := ctx.Invoke("aws-native:servicecatalogappregistry:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationArgs struct {
	// The identifier of the application.
	Id string `pulumi:"id"`
}

type LookupApplicationResult struct {
	// The name of the application.
	ApplicationName *string `pulumi:"applicationName"`
	// The key of the AWS application tag, which is awsApplication. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value.
	ApplicationTagKey *string `pulumi:"applicationTagKey"`
	// The value of the AWS application tag, which is the identifier of an associated resource. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value.
	ApplicationTagValue *string `pulumi:"applicationTagValue"`
	// The Amazon resource name (ARN) that specifies the application across services.
	Arn *string `pulumi:"arn"`
	// The description of the application.
	Description *string `pulumi:"description"`
	// The identifier of the application.
	Id *string `pulumi:"id"`
	// The name of the application.
	Name *string `pulumi:"name"`
	// Key-value pairs you can use to associate with the application.
	Tags map[string]string `pulumi:"tags"`
}

func LookupApplicationOutput(ctx *pulumi.Context, args LookupApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationResultOutput, error) {
			args := v.(LookupApplicationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupApplicationResult
			secret, err := ctx.InvokePackageRaw("aws-native:servicecatalogappregistry:getApplication", args, &rv, "", opts...)
			if err != nil {
				return LookupApplicationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupApplicationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupApplicationResultOutput), nil
			}
			return output, nil
		}).(LookupApplicationResultOutput)
}

type LookupApplicationOutputArgs struct {
	// The identifier of the application.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationArgs)(nil)).Elem()
}

type LookupApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationResult)(nil)).Elem()
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutput() LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutputWithContext(ctx context.Context) LookupApplicationResultOutput {
	return o
}

// The name of the application.
func (o LookupApplicationResultOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// The key of the AWS application tag, which is awsApplication. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value.
func (o LookupApplicationResultOutput) ApplicationTagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.ApplicationTagKey }).(pulumi.StringPtrOutput)
}

// The value of the AWS application tag, which is the identifier of an associated resource. Applications created before 11/13/2023 or applications without the AWS application tag resource group return no value.
func (o LookupApplicationResultOutput) ApplicationTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.ApplicationTagValue }).(pulumi.StringPtrOutput)
}

// The Amazon resource name (ARN) that specifies the application across services.
func (o LookupApplicationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The description of the application.
func (o LookupApplicationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier of the application.
func (o LookupApplicationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the application.
func (o LookupApplicationResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Key-value pairs you can use to associate with the application.
func (o LookupApplicationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApplicationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationResultOutput{})
}
