// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalogappregistry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Schema for AWS::ServiceCatalogAppRegistry::AttributeGroup.
type AttributeGroup struct {
	pulumi.CustomResourceState

	// The Amazon resource name (ARN) that specifies the attribute group across services.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A nested object in a JSON or YAML template that supports arbitrary definitions. Represents the attributes in an attribute group that describes an application and its components.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ServiceCatalogAppRegistry::AttributeGroup` for more information about the expected schema for this property.
	Attributes pulumi.AnyOutput `pulumi:"attributes"`
	// The globally unique attribute group identifier of the attribute group.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The description of the attribute group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the attribute group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Key-value pairs you can use to associate with the attribute group.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAttributeGroup registers a new resource with the given unique name, arguments, and options.
func NewAttributeGroup(ctx *pulumi.Context,
	name string, args *AttributeGroupArgs, opts ...pulumi.ResourceOption) (*AttributeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Attributes == nil {
		return nil, errors.New("invalid value for required argument 'Attributes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AttributeGroup
	err := ctx.RegisterResource("aws-native:servicecatalogappregistry:AttributeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAttributeGroup gets an existing AttributeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttributeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AttributeGroupState, opts ...pulumi.ResourceOption) (*AttributeGroup, error) {
	var resource AttributeGroup
	err := ctx.ReadResource("aws-native:servicecatalogappregistry:AttributeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AttributeGroup resources.
type attributeGroupState struct {
}

type AttributeGroupState struct {
}

func (AttributeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeGroupState)(nil)).Elem()
}

type attributeGroupArgs struct {
	// A nested object in a JSON or YAML template that supports arbitrary definitions. Represents the attributes in an attribute group that describes an application and its components.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ServiceCatalogAppRegistry::AttributeGroup` for more information about the expected schema for this property.
	Attributes interface{} `pulumi:"attributes"`
	// The description of the attribute group.
	Description *string `pulumi:"description"`
	// The name of the attribute group.
	Name *string `pulumi:"name"`
	// Key-value pairs you can use to associate with the attribute group.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AttributeGroup resource.
type AttributeGroupArgs struct {
	// A nested object in a JSON or YAML template that supports arbitrary definitions. Represents the attributes in an attribute group that describes an application and its components.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ServiceCatalogAppRegistry::AttributeGroup` for more information about the expected schema for this property.
	Attributes pulumi.Input
	// The description of the attribute group.
	Description pulumi.StringPtrInput
	// The name of the attribute group.
	Name pulumi.StringPtrInput
	// Key-value pairs you can use to associate with the attribute group.
	Tags pulumi.StringMapInput
}

func (AttributeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeGroupArgs)(nil)).Elem()
}

type AttributeGroupInput interface {
	pulumi.Input

	ToAttributeGroupOutput() AttributeGroupOutput
	ToAttributeGroupOutputWithContext(ctx context.Context) AttributeGroupOutput
}

func (*AttributeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeGroup)(nil)).Elem()
}

func (i *AttributeGroup) ToAttributeGroupOutput() AttributeGroupOutput {
	return i.ToAttributeGroupOutputWithContext(context.Background())
}

func (i *AttributeGroup) ToAttributeGroupOutputWithContext(ctx context.Context) AttributeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeGroupOutput)
}

type AttributeGroupOutput struct{ *pulumi.OutputState }

func (AttributeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeGroup)(nil)).Elem()
}

func (o AttributeGroupOutput) ToAttributeGroupOutput() AttributeGroupOutput {
	return o
}

func (o AttributeGroupOutput) ToAttributeGroupOutputWithContext(ctx context.Context) AttributeGroupOutput {
	return o
}

// The Amazon resource name (ARN) that specifies the attribute group across services.
func (o AttributeGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AttributeGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A nested object in a JSON or YAML template that supports arbitrary definitions. Represents the attributes in an attribute group that describes an application and its components.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ServiceCatalogAppRegistry::AttributeGroup` for more information about the expected schema for this property.
func (o AttributeGroupOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v *AttributeGroup) pulumi.AnyOutput { return v.Attributes }).(pulumi.AnyOutput)
}

// The globally unique attribute group identifier of the attribute group.
func (o AttributeGroupOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *AttributeGroup) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The description of the attribute group.
func (o AttributeGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttributeGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the attribute group.
func (o AttributeGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AttributeGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Key-value pairs you can use to associate with the attribute group.
func (o AttributeGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AttributeGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeGroupInput)(nil)).Elem(), &AttributeGroup{})
	pulumi.RegisterOutputType(AttributeGroupOutput{})
}
