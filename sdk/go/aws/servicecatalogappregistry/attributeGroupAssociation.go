// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalogappregistry

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html
type AttributeGroupAssociation struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-application
	Application    pulumi.StringOutput `pulumi:"application"`
	ApplicationArn pulumi.StringOutput `pulumi:"applicationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-attributegroup
	AttributeGroup    pulumi.StringOutput `pulumi:"attributeGroup"`
	AttributeGroupArn pulumi.StringOutput `pulumi:"attributeGroupArn"`
	Id                pulumi.StringOutput `pulumi:"id"`
}

// NewAttributeGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewAttributeGroupAssociation(ctx *pulumi.Context,
	name string, args *AttributeGroupAssociationArgs, opts ...pulumi.ResourceOption) (*AttributeGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Application == nil {
		return nil, errors.New("invalid value for required argument 'Application'")
	}
	if args.AttributeGroup == nil {
		return nil, errors.New("invalid value for required argument 'AttributeGroup'")
	}
	var resource AttributeGroupAssociation
	err := ctx.RegisterResource("aws-native:ServiceCatalogAppRegistry:AttributeGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAttributeGroupAssociation gets an existing AttributeGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttributeGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AttributeGroupAssociationState, opts ...pulumi.ResourceOption) (*AttributeGroupAssociation, error) {
	var resource AttributeGroupAssociation
	err := ctx.ReadResource("aws-native:ServiceCatalogAppRegistry:AttributeGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AttributeGroupAssociation resources.
type attributeGroupAssociationState struct {
}

type AttributeGroupAssociationState struct {
}

func (AttributeGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeGroupAssociationState)(nil)).Elem()
}

type attributeGroupAssociationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-application
	Application string `pulumi:"application"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-attributegroup
	AttributeGroup string `pulumi:"attributeGroup"`
}

// The set of arguments for constructing a AttributeGroupAssociation resource.
type AttributeGroupAssociationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-application
	Application pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-attributegroup
	AttributeGroup pulumi.StringInput
}

func (AttributeGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeGroupAssociationArgs)(nil)).Elem()
}

type AttributeGroupAssociationInput interface {
	pulumi.Input

	ToAttributeGroupAssociationOutput() AttributeGroupAssociationOutput
	ToAttributeGroupAssociationOutputWithContext(ctx context.Context) AttributeGroupAssociationOutput
}

func (*AttributeGroupAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeGroupAssociation)(nil))
}

func (i *AttributeGroupAssociation) ToAttributeGroupAssociationOutput() AttributeGroupAssociationOutput {
	return i.ToAttributeGroupAssociationOutputWithContext(context.Background())
}

func (i *AttributeGroupAssociation) ToAttributeGroupAssociationOutputWithContext(ctx context.Context) AttributeGroupAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeGroupAssociationOutput)
}

type AttributeGroupAssociationOutput struct{ *pulumi.OutputState }

func (AttributeGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeGroupAssociation)(nil))
}

func (o AttributeGroupAssociationOutput) ToAttributeGroupAssociationOutput() AttributeGroupAssociationOutput {
	return o
}

func (o AttributeGroupAssociationOutput) ToAttributeGroupAssociationOutputWithContext(ctx context.Context) AttributeGroupAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AttributeGroupAssociationOutput{})
}
