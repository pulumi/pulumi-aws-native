// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a gateway task definition.
func LookupTaskDefinition(ctx *pulumi.Context, args *LookupTaskDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupTaskDefinitionResult, error) {
	var rv LookupTaskDefinitionResult
	err := ctx.Invoke("aws-native:iotwireless:getTaskDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTaskDefinitionArgs struct {
	// The ID of the new wireless gateway task definition
	Id string `pulumi:"id"`
}

type LookupTaskDefinitionResult struct {
	// TaskDefinition arn. Returned after successful create.
	Arn *string `pulumi:"arn"`
	// Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask.
	AutoCreateTasks *bool `pulumi:"autoCreateTasks"`
	// The ID of the new wireless gateway task definition
	Id *string `pulumi:"id"`
	// The list of task definitions.
	LoRaWANUpdateGatewayTaskEntry *TaskDefinitionLoRaWANUpdateGatewayTaskEntry `pulumi:"loRaWANUpdateGatewayTaskEntry"`
	// The name of the new resource.
	Name *string `pulumi:"name"`
	// A list of key-value pairs that contain metadata for the destination.
	Tags []TaskDefinitionTag `pulumi:"tags"`
	// A filter to list only the wireless gateway task definitions that use this task definition type
	TaskDefinitionType *TaskDefinitionType `pulumi:"taskDefinitionType"`
	// Information about the gateways to update.
	Update *TaskDefinitionUpdateWirelessGatewayTaskCreate `pulumi:"update"`
}

func LookupTaskDefinitionOutput(ctx *pulumi.Context, args LookupTaskDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupTaskDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTaskDefinitionResult, error) {
			args := v.(LookupTaskDefinitionArgs)
			r, err := LookupTaskDefinition(ctx, &args, opts...)
			var s LookupTaskDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTaskDefinitionResultOutput)
}

type LookupTaskDefinitionOutputArgs struct {
	// The ID of the new wireless gateway task definition
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTaskDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTaskDefinitionArgs)(nil)).Elem()
}

type LookupTaskDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupTaskDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTaskDefinitionResult)(nil)).Elem()
}

func (o LookupTaskDefinitionResultOutput) ToLookupTaskDefinitionResultOutput() LookupTaskDefinitionResultOutput {
	return o
}

func (o LookupTaskDefinitionResultOutput) ToLookupTaskDefinitionResultOutputWithContext(ctx context.Context) LookupTaskDefinitionResultOutput {
	return o
}

// TaskDefinition arn. Returned after successful create.
func (o LookupTaskDefinitionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask.
func (o LookupTaskDefinitionResultOutput) AutoCreateTasks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *bool { return v.AutoCreateTasks }).(pulumi.BoolPtrOutput)
}

// The ID of the new wireless gateway task definition
func (o LookupTaskDefinitionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of task definitions.
func (o LookupTaskDefinitionResultOutput) LoRaWANUpdateGatewayTaskEntry() TaskDefinitionLoRaWANUpdateGatewayTaskEntryPtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *TaskDefinitionLoRaWANUpdateGatewayTaskEntry {
		return v.LoRaWANUpdateGatewayTaskEntry
	}).(TaskDefinitionLoRaWANUpdateGatewayTaskEntryPtrOutput)
}

// The name of the new resource.
func (o LookupTaskDefinitionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of key-value pairs that contain metadata for the destination.
func (o LookupTaskDefinitionResultOutput) Tags() TaskDefinitionTagArrayOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) []TaskDefinitionTag { return v.Tags }).(TaskDefinitionTagArrayOutput)
}

// A filter to list only the wireless gateway task definitions that use this task definition type
func (o LookupTaskDefinitionResultOutput) TaskDefinitionType() TaskDefinitionTypePtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *TaskDefinitionType { return v.TaskDefinitionType }).(TaskDefinitionTypePtrOutput)
}

// Information about the gateways to update.
func (o LookupTaskDefinitionResultOutput) Update() TaskDefinitionUpdateWirelessGatewayTaskCreatePtrOutput {
	return o.ApplyT(func(v LookupTaskDefinitionResult) *TaskDefinitionUpdateWirelessGatewayTaskCreate { return v.Update }).(TaskDefinitionUpdateWirelessGatewayTaskCreatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTaskDefinitionResultOutput{})
}
