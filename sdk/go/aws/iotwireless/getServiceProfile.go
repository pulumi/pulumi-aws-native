// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
func LookupServiceProfile(ctx *pulumi.Context, args *LookupServiceProfileArgs, opts ...pulumi.InvokeOption) (*LookupServiceProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceProfileResult
	err := ctx.Invoke("aws-native:iotwireless:getServiceProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceProfileArgs struct {
	// Service profile Id. Returned after successful create.
	Id string `pulumi:"id"`
}

type LookupServiceProfileResult struct {
	// Service profile Arn. Returned after successful create.
	Arn *string `pulumi:"arn"`
	// Service profile Id. Returned after successful create.
	Id *string `pulumi:"id"`
	// A list of key-value pairs that contain metadata for the service profile.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupServiceProfileOutput(ctx *pulumi.Context, args LookupServiceProfileOutputArgs, opts ...pulumi.InvokeOption) LookupServiceProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceProfileResultOutput, error) {
			args := v.(LookupServiceProfileArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupServiceProfileResult
			secret, err := ctx.InvokePackageRaw("aws-native:iotwireless:getServiceProfile", args, &rv, "", opts...)
			if err != nil {
				return LookupServiceProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupServiceProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupServiceProfileResultOutput), nil
			}
			return output, nil
		}).(LookupServiceProfileResultOutput)
}

type LookupServiceProfileOutputArgs struct {
	// Service profile Id. Returned after successful create.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupServiceProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceProfileArgs)(nil)).Elem()
}

type LookupServiceProfileResultOutput struct{ *pulumi.OutputState }

func (LookupServiceProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceProfileResult)(nil)).Elem()
}

func (o LookupServiceProfileResultOutput) ToLookupServiceProfileResultOutput() LookupServiceProfileResultOutput {
	return o
}

func (o LookupServiceProfileResultOutput) ToLookupServiceProfileResultOutputWithContext(ctx context.Context) LookupServiceProfileResultOutput {
	return o
}

// Service profile Arn. Returned after successful create.
func (o LookupServiceProfileResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceProfileResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Service profile Id. Returned after successful create.
func (o LookupServiceProfileResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceProfileResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of key-value pairs that contain metadata for the service profile.
func (o LookupServiceProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupServiceProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceProfileResultOutput{})
}
