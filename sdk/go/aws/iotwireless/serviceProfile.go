// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html
type ServiceProfile struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	Id  pulumi.StringOutput `pulumi:"id"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-lorawan
	LoRaWAN                       ServiceProfileLoRaWANServiceProfilePtrOutput `pulumi:"loRaWAN"`
	LoRaWANChannelMask            pulumi.StringOutput                          `pulumi:"loRaWANChannelMask"`
	LoRaWANDevStatusReqFreq       pulumi.IntOutput                             `pulumi:"loRaWANDevStatusReqFreq"`
	LoRaWANDlBucketSize           pulumi.IntOutput                             `pulumi:"loRaWANDlBucketSize"`
	LoRaWANDlRate                 pulumi.IntOutput                             `pulumi:"loRaWANDlRate"`
	LoRaWANDlRatePolicy           pulumi.StringOutput                          `pulumi:"loRaWANDlRatePolicy"`
	LoRaWANDrMax                  pulumi.IntOutput                             `pulumi:"loRaWANDrMax"`
	LoRaWANDrMin                  pulumi.IntOutput                             `pulumi:"loRaWANDrMin"`
	LoRaWANHrAllowed              pulumi.BoolOutput                            `pulumi:"loRaWANHrAllowed"`
	LoRaWANMinGwDiversity         pulumi.IntOutput                             `pulumi:"loRaWANMinGwDiversity"`
	LoRaWANNwkGeoLoc              pulumi.BoolOutput                            `pulumi:"loRaWANNwkGeoLoc"`
	LoRaWANPrAllowed              pulumi.BoolOutput                            `pulumi:"loRaWANPrAllowed"`
	LoRaWANRaAllowed              pulumi.BoolOutput                            `pulumi:"loRaWANRaAllowed"`
	LoRaWANReportDevStatusBattery pulumi.BoolOutput                            `pulumi:"loRaWANReportDevStatusBattery"`
	LoRaWANReportDevStatusMargin  pulumi.BoolOutput                            `pulumi:"loRaWANReportDevStatusMargin"`
	LoRaWANTargetPer              pulumi.IntOutput                             `pulumi:"loRaWANTargetPer"`
	LoRaWANUlBucketSize           pulumi.IntOutput                             `pulumi:"loRaWANUlBucketSize"`
	LoRaWANUlRate                 pulumi.IntOutput                             `pulumi:"loRaWANUlRate"`
	LoRaWANUlRatePolicy           pulumi.StringOutput                          `pulumi:"loRaWANUlRatePolicy"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewServiceProfile registers a new resource with the given unique name, arguments, and options.
func NewServiceProfile(ctx *pulumi.Context,
	name string, args *ServiceProfileArgs, opts ...pulumi.ResourceOption) (*ServiceProfile, error) {
	if args == nil {
		args = &ServiceProfileArgs{}
	}

	var resource ServiceProfile
	err := ctx.RegisterResource("aws-native:IoTWireless:ServiceProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceProfile gets an existing ServiceProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceProfileState, opts ...pulumi.ResourceOption) (*ServiceProfile, error) {
	var resource ServiceProfile
	err := ctx.ReadResource("aws-native:IoTWireless:ServiceProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceProfile resources.
type serviceProfileState struct {
}

type ServiceProfileState struct {
}

func (ServiceProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceProfileState)(nil)).Elem()
}

type serviceProfileArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-lorawan
	LoRaWAN *ServiceProfileLoRaWANServiceProfile `pulumi:"loRaWAN"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceProfile resource.
type ServiceProfileArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-lorawan
	LoRaWAN ServiceProfileLoRaWANServiceProfilePtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-name
	Name pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-tags
	Tags aws.TagArrayInput
}

func (ServiceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceProfileArgs)(nil)).Elem()
}

type ServiceProfileInput interface {
	pulumi.Input

	ToServiceProfileOutput() ServiceProfileOutput
	ToServiceProfileOutputWithContext(ctx context.Context) ServiceProfileOutput
}

func (*ServiceProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProfile)(nil))
}

func (i *ServiceProfile) ToServiceProfileOutput() ServiceProfileOutput {
	return i.ToServiceProfileOutputWithContext(context.Background())
}

func (i *ServiceProfile) ToServiceProfileOutputWithContext(ctx context.Context) ServiceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProfileOutput)
}

type ServiceProfileOutput struct{ *pulumi.OutputState }

func (ServiceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProfile)(nil))
}

func (o ServiceProfileOutput) ToServiceProfileOutput() ServiceProfileOutput {
	return o
}

func (o ServiceProfileOutput) ToServiceProfileOutputWithContext(ctx context.Context) ServiceProfileOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceProfileOutput{})
}
