// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Wireless Device Import Tasks
//
// Deprecated: WirelessDeviceImportTask is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type WirelessDeviceImportTask struct {
	pulumi.CustomResourceState

	// Arn for Wireless Device Import Task, Returned upon successful start.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// CreationDate for import task
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// Destination Name for import task
	DestinationName pulumi.StringOutput `pulumi:"destinationName"`
	// Failed Imported Devices Count
	FailedImportedDevicesCount pulumi.IntOutput `pulumi:"failedImportedDevicesCount"`
	// Initialized Imported Devices Count
	InitializedImportedDevicesCount pulumi.IntOutput `pulumi:"initializedImportedDevicesCount"`
	// Onboarded Imported Devices Count
	OnboardedImportedDevicesCount pulumi.IntOutput `pulumi:"onboardedImportedDevicesCount"`
	// Pending Imported Devices Count
	PendingImportedDevicesCount pulumi.IntOutput `pulumi:"pendingImportedDevicesCount"`
	// sidewalk contain file for created device and role
	Sidewalk SidewalkPropertiesOutput `pulumi:"sidewalk"`
	// Status for import task
	Status WirelessDeviceImportTaskStatusOutput `pulumi:"status"`
	// StatusReason for import task
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewWirelessDeviceImportTask registers a new resource with the given unique name, arguments, and options.
func NewWirelessDeviceImportTask(ctx *pulumi.Context,
	name string, args *WirelessDeviceImportTaskArgs, opts ...pulumi.ResourceOption) (*WirelessDeviceImportTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationName == nil {
		return nil, errors.New("invalid value for required argument 'DestinationName'")
	}
	if args.Sidewalk == nil {
		return nil, errors.New("invalid value for required argument 'Sidewalk'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WirelessDeviceImportTask
	err := ctx.RegisterResource("aws-native:iotwireless:WirelessDeviceImportTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessDeviceImportTask gets an existing WirelessDeviceImportTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessDeviceImportTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessDeviceImportTaskState, opts ...pulumi.ResourceOption) (*WirelessDeviceImportTask, error) {
	var resource WirelessDeviceImportTask
	err := ctx.ReadResource("aws-native:iotwireless:WirelessDeviceImportTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessDeviceImportTask resources.
type wirelessDeviceImportTaskState struct {
}

type WirelessDeviceImportTaskState struct {
}

func (WirelessDeviceImportTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessDeviceImportTaskState)(nil)).Elem()
}

type wirelessDeviceImportTaskArgs struct {
	// Destination Name for import task
	DestinationName string `pulumi:"destinationName"`
	// sidewalk contain file for created device and role
	Sidewalk SidewalkProperties `pulumi:"sidewalk"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a WirelessDeviceImportTask resource.
type WirelessDeviceImportTaskArgs struct {
	// Destination Name for import task
	DestinationName pulumi.StringInput
	// sidewalk contain file for created device and role
	Sidewalk SidewalkPropertiesInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (WirelessDeviceImportTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessDeviceImportTaskArgs)(nil)).Elem()
}

type WirelessDeviceImportTaskInput interface {
	pulumi.Input

	ToWirelessDeviceImportTaskOutput() WirelessDeviceImportTaskOutput
	ToWirelessDeviceImportTaskOutputWithContext(ctx context.Context) WirelessDeviceImportTaskOutput
}

func (*WirelessDeviceImportTask) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessDeviceImportTask)(nil)).Elem()
}

func (i *WirelessDeviceImportTask) ToWirelessDeviceImportTaskOutput() WirelessDeviceImportTaskOutput {
	return i.ToWirelessDeviceImportTaskOutputWithContext(context.Background())
}

func (i *WirelessDeviceImportTask) ToWirelessDeviceImportTaskOutputWithContext(ctx context.Context) WirelessDeviceImportTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessDeviceImportTaskOutput)
}

type WirelessDeviceImportTaskOutput struct{ *pulumi.OutputState }

func (WirelessDeviceImportTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessDeviceImportTask)(nil)).Elem()
}

func (o WirelessDeviceImportTaskOutput) ToWirelessDeviceImportTaskOutput() WirelessDeviceImportTaskOutput {
	return o
}

func (o WirelessDeviceImportTaskOutput) ToWirelessDeviceImportTaskOutputWithContext(ctx context.Context) WirelessDeviceImportTaskOutput {
	return o
}

// Arn for Wireless Device Import Task, Returned upon successful start.
func (o WirelessDeviceImportTaskOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// CreationDate for import task
func (o WirelessDeviceImportTaskOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.StringOutput { return v.CreationDate }).(pulumi.StringOutput)
}

// Destination Name for import task
func (o WirelessDeviceImportTaskOutput) DestinationName() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.StringOutput { return v.DestinationName }).(pulumi.StringOutput)
}

// Failed Imported Devices Count
func (o WirelessDeviceImportTaskOutput) FailedImportedDevicesCount() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.IntOutput { return v.FailedImportedDevicesCount }).(pulumi.IntOutput)
}

// Initialized Imported Devices Count
func (o WirelessDeviceImportTaskOutput) InitializedImportedDevicesCount() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.IntOutput { return v.InitializedImportedDevicesCount }).(pulumi.IntOutput)
}

// Onboarded Imported Devices Count
func (o WirelessDeviceImportTaskOutput) OnboardedImportedDevicesCount() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.IntOutput { return v.OnboardedImportedDevicesCount }).(pulumi.IntOutput)
}

// Pending Imported Devices Count
func (o WirelessDeviceImportTaskOutput) PendingImportedDevicesCount() pulumi.IntOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.IntOutput { return v.PendingImportedDevicesCount }).(pulumi.IntOutput)
}

// sidewalk contain file for created device and role
func (o WirelessDeviceImportTaskOutput) Sidewalk() SidewalkPropertiesOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) SidewalkPropertiesOutput { return v.Sidewalk }).(SidewalkPropertiesOutput)
}

// Status for import task
func (o WirelessDeviceImportTaskOutput) Status() WirelessDeviceImportTaskStatusOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) WirelessDeviceImportTaskStatusOutput { return v.Status }).(WirelessDeviceImportTaskStatusOutput)
}

// StatusReason for import task
func (o WirelessDeviceImportTaskOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) pulumi.StringOutput { return v.StatusReason }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o WirelessDeviceImportTaskOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *WirelessDeviceImportTask) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WirelessDeviceImportTaskInput)(nil)).Elem(), &WirelessDeviceImportTask{})
	pulumi.RegisterOutputType(WirelessDeviceImportTaskOutput{})
}
