// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Must be RuleName
type DestinationExpressionType string

const (
	DestinationExpressionTypeRuleName  = DestinationExpressionType("RuleName")
	DestinationExpressionTypeMqttTopic = DestinationExpressionType("MqttTopic")
)

func (DestinationExpressionType) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationExpressionType)(nil)).Elem()
}

func (e DestinationExpressionType) ToDestinationExpressionTypeOutput() DestinationExpressionTypeOutput {
	return pulumi.ToOutput(e).(DestinationExpressionTypeOutput)
}

func (e DestinationExpressionType) ToDestinationExpressionTypeOutputWithContext(ctx context.Context) DestinationExpressionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DestinationExpressionTypeOutput)
}

func (e DestinationExpressionType) ToDestinationExpressionTypePtrOutput() DestinationExpressionTypePtrOutput {
	return e.ToDestinationExpressionTypePtrOutputWithContext(context.Background())
}

func (e DestinationExpressionType) ToDestinationExpressionTypePtrOutputWithContext(ctx context.Context) DestinationExpressionTypePtrOutput {
	return DestinationExpressionType(e).ToDestinationExpressionTypeOutputWithContext(ctx).ToDestinationExpressionTypePtrOutputWithContext(ctx)
}

func (e DestinationExpressionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DestinationExpressionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DestinationExpressionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DestinationExpressionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DestinationExpressionTypeOutput struct{ *pulumi.OutputState }

func (DestinationExpressionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationExpressionType)(nil)).Elem()
}

func (o DestinationExpressionTypeOutput) ToDestinationExpressionTypeOutput() DestinationExpressionTypeOutput {
	return o
}

func (o DestinationExpressionTypeOutput) ToDestinationExpressionTypeOutputWithContext(ctx context.Context) DestinationExpressionTypeOutput {
	return o
}

func (o DestinationExpressionTypeOutput) ToDestinationExpressionTypePtrOutput() DestinationExpressionTypePtrOutput {
	return o.ToDestinationExpressionTypePtrOutputWithContext(context.Background())
}

func (o DestinationExpressionTypeOutput) ToDestinationExpressionTypePtrOutputWithContext(ctx context.Context) DestinationExpressionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DestinationExpressionType) *DestinationExpressionType {
		return &v
	}).(DestinationExpressionTypePtrOutput)
}

func (o DestinationExpressionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DestinationExpressionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DestinationExpressionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DestinationExpressionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DestinationExpressionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DestinationExpressionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DestinationExpressionTypePtrOutput struct{ *pulumi.OutputState }

func (DestinationExpressionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationExpressionType)(nil)).Elem()
}

func (o DestinationExpressionTypePtrOutput) ToDestinationExpressionTypePtrOutput() DestinationExpressionTypePtrOutput {
	return o
}

func (o DestinationExpressionTypePtrOutput) ToDestinationExpressionTypePtrOutputWithContext(ctx context.Context) DestinationExpressionTypePtrOutput {
	return o
}

func (o DestinationExpressionTypePtrOutput) Elem() DestinationExpressionTypeOutput {
	return o.ApplyT(func(v *DestinationExpressionType) DestinationExpressionType {
		if v != nil {
			return *v
		}
		var ret DestinationExpressionType
		return ret
	}).(DestinationExpressionTypeOutput)
}

func (o DestinationExpressionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DestinationExpressionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DestinationExpressionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DestinationExpressionTypeInput is an input type that accepts DestinationExpressionTypeArgs and DestinationExpressionTypeOutput values.
// You can construct a concrete instance of `DestinationExpressionTypeInput` via:
//
//          DestinationExpressionTypeArgs{...}
type DestinationExpressionTypeInput interface {
	pulumi.Input

	ToDestinationExpressionTypeOutput() DestinationExpressionTypeOutput
	ToDestinationExpressionTypeOutputWithContext(context.Context) DestinationExpressionTypeOutput
}

var destinationExpressionTypePtrType = reflect.TypeOf((**DestinationExpressionType)(nil)).Elem()

type DestinationExpressionTypePtrInput interface {
	pulumi.Input

	ToDestinationExpressionTypePtrOutput() DestinationExpressionTypePtrOutput
	ToDestinationExpressionTypePtrOutputWithContext(context.Context) DestinationExpressionTypePtrOutput
}

type destinationExpressionTypePtr string

func DestinationExpressionTypePtr(v string) DestinationExpressionTypePtrInput {
	return (*destinationExpressionTypePtr)(&v)
}

func (*destinationExpressionTypePtr) ElementType() reflect.Type {
	return destinationExpressionTypePtrType
}

func (in *destinationExpressionTypePtr) ToDestinationExpressionTypePtrOutput() DestinationExpressionTypePtrOutput {
	return pulumi.ToOutput(in).(DestinationExpressionTypePtrOutput)
}

func (in *destinationExpressionTypePtr) ToDestinationExpressionTypePtrOutputWithContext(ctx context.Context) DestinationExpressionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DestinationExpressionTypePtrOutput)
}

// A filter to list only the wireless gateway task definitions that use this task definition type
type TaskDefinitionTaskDefinitionType string

const (
	TaskDefinitionTaskDefinitionTypeUpdate = TaskDefinitionTaskDefinitionType("UPDATE")
)

func (TaskDefinitionTaskDefinitionType) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionTaskDefinitionType)(nil)).Elem()
}

func (e TaskDefinitionTaskDefinitionType) ToTaskDefinitionTaskDefinitionTypeOutput() TaskDefinitionTaskDefinitionTypeOutput {
	return pulumi.ToOutput(e).(TaskDefinitionTaskDefinitionTypeOutput)
}

func (e TaskDefinitionTaskDefinitionType) ToTaskDefinitionTaskDefinitionTypeOutputWithContext(ctx context.Context) TaskDefinitionTaskDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskDefinitionTaskDefinitionTypeOutput)
}

func (e TaskDefinitionTaskDefinitionType) ToTaskDefinitionTaskDefinitionTypePtrOutput() TaskDefinitionTaskDefinitionTypePtrOutput {
	return e.ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(context.Background())
}

func (e TaskDefinitionTaskDefinitionType) ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(ctx context.Context) TaskDefinitionTaskDefinitionTypePtrOutput {
	return TaskDefinitionTaskDefinitionType(e).ToTaskDefinitionTaskDefinitionTypeOutputWithContext(ctx).ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(ctx)
}

func (e TaskDefinitionTaskDefinitionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskDefinitionTaskDefinitionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskDefinitionTaskDefinitionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskDefinitionTaskDefinitionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskDefinitionTaskDefinitionTypeOutput struct{ *pulumi.OutputState }

func (TaskDefinitionTaskDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionTaskDefinitionType)(nil)).Elem()
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToTaskDefinitionTaskDefinitionTypeOutput() TaskDefinitionTaskDefinitionTypeOutput {
	return o
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToTaskDefinitionTaskDefinitionTypeOutputWithContext(ctx context.Context) TaskDefinitionTaskDefinitionTypeOutput {
	return o
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToTaskDefinitionTaskDefinitionTypePtrOutput() TaskDefinitionTaskDefinitionTypePtrOutput {
	return o.ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(context.Background())
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(ctx context.Context) TaskDefinitionTaskDefinitionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionTaskDefinitionType) *TaskDefinitionTaskDefinitionType {
		return &v
	}).(TaskDefinitionTaskDefinitionTypePtrOutput)
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskDefinitionTaskDefinitionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionTaskDefinitionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskDefinitionTaskDefinitionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskDefinitionTaskDefinitionTypePtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionTaskDefinitionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionTaskDefinitionType)(nil)).Elem()
}

func (o TaskDefinitionTaskDefinitionTypePtrOutput) ToTaskDefinitionTaskDefinitionTypePtrOutput() TaskDefinitionTaskDefinitionTypePtrOutput {
	return o
}

func (o TaskDefinitionTaskDefinitionTypePtrOutput) ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(ctx context.Context) TaskDefinitionTaskDefinitionTypePtrOutput {
	return o
}

func (o TaskDefinitionTaskDefinitionTypePtrOutput) Elem() TaskDefinitionTaskDefinitionTypeOutput {
	return o.ApplyT(func(v *TaskDefinitionTaskDefinitionType) TaskDefinitionTaskDefinitionType {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionTaskDefinitionType
		return ret
	}).(TaskDefinitionTaskDefinitionTypeOutput)
}

func (o TaskDefinitionTaskDefinitionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionTaskDefinitionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskDefinitionTaskDefinitionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskDefinitionTaskDefinitionTypeInput is an input type that accepts TaskDefinitionTaskDefinitionTypeArgs and TaskDefinitionTaskDefinitionTypeOutput values.
// You can construct a concrete instance of `TaskDefinitionTaskDefinitionTypeInput` via:
//
//          TaskDefinitionTaskDefinitionTypeArgs{...}
type TaskDefinitionTaskDefinitionTypeInput interface {
	pulumi.Input

	ToTaskDefinitionTaskDefinitionTypeOutput() TaskDefinitionTaskDefinitionTypeOutput
	ToTaskDefinitionTaskDefinitionTypeOutputWithContext(context.Context) TaskDefinitionTaskDefinitionTypeOutput
}

var taskDefinitionTaskDefinitionTypePtrType = reflect.TypeOf((**TaskDefinitionTaskDefinitionType)(nil)).Elem()

type TaskDefinitionTaskDefinitionTypePtrInput interface {
	pulumi.Input

	ToTaskDefinitionTaskDefinitionTypePtrOutput() TaskDefinitionTaskDefinitionTypePtrOutput
	ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(context.Context) TaskDefinitionTaskDefinitionTypePtrOutput
}

type taskDefinitionTaskDefinitionTypePtr string

func TaskDefinitionTaskDefinitionTypePtr(v string) TaskDefinitionTaskDefinitionTypePtrInput {
	return (*taskDefinitionTaskDefinitionTypePtr)(&v)
}

func (*taskDefinitionTaskDefinitionTypePtr) ElementType() reflect.Type {
	return taskDefinitionTaskDefinitionTypePtrType
}

func (in *taskDefinitionTaskDefinitionTypePtr) ToTaskDefinitionTaskDefinitionTypePtrOutput() TaskDefinitionTaskDefinitionTypePtrOutput {
	return pulumi.ToOutput(in).(TaskDefinitionTaskDefinitionTypePtrOutput)
}

func (in *taskDefinitionTaskDefinitionTypePtr) ToTaskDefinitionTaskDefinitionTypePtrOutputWithContext(ctx context.Context) TaskDefinitionTaskDefinitionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskDefinitionTaskDefinitionTypePtrOutput)
}

// Wireless device type, currently only Sidewalk and LoRa
type WirelessDeviceType string

const (
	WirelessDeviceTypeSidewalk = WirelessDeviceType("Sidewalk")
	WirelessDeviceTypeLoRaWAN  = WirelessDeviceType("LoRaWAN")
)

func (WirelessDeviceType) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessDeviceType)(nil)).Elem()
}

func (e WirelessDeviceType) ToWirelessDeviceTypeOutput() WirelessDeviceTypeOutput {
	return pulumi.ToOutput(e).(WirelessDeviceTypeOutput)
}

func (e WirelessDeviceType) ToWirelessDeviceTypeOutputWithContext(ctx context.Context) WirelessDeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WirelessDeviceTypeOutput)
}

func (e WirelessDeviceType) ToWirelessDeviceTypePtrOutput() WirelessDeviceTypePtrOutput {
	return e.ToWirelessDeviceTypePtrOutputWithContext(context.Background())
}

func (e WirelessDeviceType) ToWirelessDeviceTypePtrOutputWithContext(ctx context.Context) WirelessDeviceTypePtrOutput {
	return WirelessDeviceType(e).ToWirelessDeviceTypeOutputWithContext(ctx).ToWirelessDeviceTypePtrOutputWithContext(ctx)
}

func (e WirelessDeviceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WirelessDeviceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WirelessDeviceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WirelessDeviceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WirelessDeviceTypeOutput struct{ *pulumi.OutputState }

func (WirelessDeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessDeviceType)(nil)).Elem()
}

func (o WirelessDeviceTypeOutput) ToWirelessDeviceTypeOutput() WirelessDeviceTypeOutput {
	return o
}

func (o WirelessDeviceTypeOutput) ToWirelessDeviceTypeOutputWithContext(ctx context.Context) WirelessDeviceTypeOutput {
	return o
}

func (o WirelessDeviceTypeOutput) ToWirelessDeviceTypePtrOutput() WirelessDeviceTypePtrOutput {
	return o.ToWirelessDeviceTypePtrOutputWithContext(context.Background())
}

func (o WirelessDeviceTypeOutput) ToWirelessDeviceTypePtrOutputWithContext(ctx context.Context) WirelessDeviceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WirelessDeviceType) *WirelessDeviceType {
		return &v
	}).(WirelessDeviceTypePtrOutput)
}

func (o WirelessDeviceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WirelessDeviceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WirelessDeviceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WirelessDeviceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WirelessDeviceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WirelessDeviceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WirelessDeviceTypePtrOutput struct{ *pulumi.OutputState }

func (WirelessDeviceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WirelessDeviceType)(nil)).Elem()
}

func (o WirelessDeviceTypePtrOutput) ToWirelessDeviceTypePtrOutput() WirelessDeviceTypePtrOutput {
	return o
}

func (o WirelessDeviceTypePtrOutput) ToWirelessDeviceTypePtrOutputWithContext(ctx context.Context) WirelessDeviceTypePtrOutput {
	return o
}

func (o WirelessDeviceTypePtrOutput) Elem() WirelessDeviceTypeOutput {
	return o.ApplyT(func(v *WirelessDeviceType) WirelessDeviceType {
		if v != nil {
			return *v
		}
		var ret WirelessDeviceType
		return ret
	}).(WirelessDeviceTypeOutput)
}

func (o WirelessDeviceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WirelessDeviceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WirelessDeviceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WirelessDeviceTypeInput is an input type that accepts WirelessDeviceTypeArgs and WirelessDeviceTypeOutput values.
// You can construct a concrete instance of `WirelessDeviceTypeInput` via:
//
//          WirelessDeviceTypeArgs{...}
type WirelessDeviceTypeInput interface {
	pulumi.Input

	ToWirelessDeviceTypeOutput() WirelessDeviceTypeOutput
	ToWirelessDeviceTypeOutputWithContext(context.Context) WirelessDeviceTypeOutput
}

var wirelessDeviceTypePtrType = reflect.TypeOf((**WirelessDeviceType)(nil)).Elem()

type WirelessDeviceTypePtrInput interface {
	pulumi.Input

	ToWirelessDeviceTypePtrOutput() WirelessDeviceTypePtrOutput
	ToWirelessDeviceTypePtrOutputWithContext(context.Context) WirelessDeviceTypePtrOutput
}

type wirelessDeviceTypePtr string

func WirelessDeviceTypePtr(v string) WirelessDeviceTypePtrInput {
	return (*wirelessDeviceTypePtr)(&v)
}

func (*wirelessDeviceTypePtr) ElementType() reflect.Type {
	return wirelessDeviceTypePtrType
}

func (in *wirelessDeviceTypePtr) ToWirelessDeviceTypePtrOutput() WirelessDeviceTypePtrOutput {
	return pulumi.ToOutput(in).(WirelessDeviceTypePtrOutput)
}

func (in *wirelessDeviceTypePtr) ToWirelessDeviceTypePtrOutputWithContext(ctx context.Context) WirelessDeviceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WirelessDeviceTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DestinationExpressionTypeOutput{})
	pulumi.RegisterOutputType(DestinationExpressionTypePtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionTaskDefinitionTypeOutput{})
	pulumi.RegisterOutputType(TaskDefinitionTaskDefinitionTypePtrOutput{})
	pulumi.RegisterOutputType(WirelessDeviceTypeOutput{})
	pulumi.RegisterOutputType(WirelessDeviceTypePtrOutput{})
}
