// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html
type WirelessDevice struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-destinationname
	DestinationName pulumi.StringOutput `pulumi:"destinationName"`
	Id              pulumi.StringOutput `pulumi:"id"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lastuplinkreceivedat
	LastUplinkReceivedAt pulumi.StringPtrOutput `pulumi:"lastUplinkReceivedAt"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lorawan
	LoRaWAN WirelessDeviceLoRaWANDevicePtrOutput `pulumi:"loRaWAN"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-thingarn
	ThingArn  pulumi.StringPtrOutput `pulumi:"thingArn"`
	ThingName pulumi.StringOutput    `pulumi:"thingName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWirelessDevice registers a new resource with the given unique name, arguments, and options.
func NewWirelessDevice(ctx *pulumi.Context,
	name string, args *WirelessDeviceArgs, opts ...pulumi.ResourceOption) (*WirelessDevice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationName == nil {
		return nil, errors.New("invalid value for required argument 'DestinationName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource WirelessDevice
	err := ctx.RegisterResource("aws-native:iotwireless:WirelessDevice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWirelessDevice gets an existing WirelessDevice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWirelessDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WirelessDeviceState, opts ...pulumi.ResourceOption) (*WirelessDevice, error) {
	var resource WirelessDevice
	err := ctx.ReadResource("aws-native:iotwireless:WirelessDevice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WirelessDevice resources.
type wirelessDeviceState struct {
}

type WirelessDeviceState struct {
}

func (WirelessDeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessDeviceState)(nil)).Elem()
}

type wirelessDeviceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-destinationname
	DestinationName string `pulumi:"destinationName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lastuplinkreceivedat
	LastUplinkReceivedAt *string `pulumi:"lastUplinkReceivedAt"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lorawan
	LoRaWAN *WirelessDeviceLoRaWANDevice `pulumi:"loRaWAN"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-tags
	Tags []aws.Tag `pulumi:"tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-thingarn
	ThingArn *string `pulumi:"thingArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a WirelessDevice resource.
type WirelessDeviceArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-description
	Description pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-destinationname
	DestinationName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lastuplinkreceivedat
	LastUplinkReceivedAt pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lorawan
	LoRaWAN WirelessDeviceLoRaWANDevicePtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-name
	Name pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-tags
	Tags aws.TagArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-thingarn
	ThingArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-type
	Type pulumi.StringInput
}

func (WirelessDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wirelessDeviceArgs)(nil)).Elem()
}

type WirelessDeviceInput interface {
	pulumi.Input

	ToWirelessDeviceOutput() WirelessDeviceOutput
	ToWirelessDeviceOutputWithContext(ctx context.Context) WirelessDeviceOutput
}

func (*WirelessDevice) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessDevice)(nil))
}

func (i *WirelessDevice) ToWirelessDeviceOutput() WirelessDeviceOutput {
	return i.ToWirelessDeviceOutputWithContext(context.Background())
}

func (i *WirelessDevice) ToWirelessDeviceOutputWithContext(ctx context.Context) WirelessDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WirelessDeviceOutput)
}

type WirelessDeviceOutput struct{ *pulumi.OutputState }

func (WirelessDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WirelessDevice)(nil))
}

func (o WirelessDeviceOutput) ToWirelessDeviceOutput() WirelessDeviceOutput {
	return o
}

func (o WirelessDeviceOutput) ToWirelessDeviceOutputWithContext(ctx context.Context) WirelessDeviceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WirelessDeviceOutput{})
}
