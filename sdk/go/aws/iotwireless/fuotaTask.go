// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotwireless

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create and manage FUOTA tasks.
//
// Deprecated: FuotaTask is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type FuotaTask struct {
	pulumi.CustomResourceState

	// FUOTA task arn. Returned after successful create.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Multicast group to associate. Only for update request.
	AssociateMulticastGroup pulumi.StringPtrOutput `pulumi:"associateMulticastGroup"`
	// Wireless device to associate. Only for update request.
	AssociateWirelessDevice pulumi.StringPtrOutput `pulumi:"associateWirelessDevice"`
	// FUOTA task description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Multicast group to disassociate. Only for update request.
	DisassociateMulticastGroup pulumi.StringPtrOutput `pulumi:"disassociateMulticastGroup"`
	// Wireless device to disassociate. Only for update request.
	DisassociateWirelessDevice pulumi.StringPtrOutput `pulumi:"disassociateWirelessDevice"`
	// FUOTA task firmware update image binary S3 link
	FirmwareUpdateImage pulumi.StringOutput `pulumi:"firmwareUpdateImage"`
	// FUOTA task firmware IAM role for reading S3
	FirmwareUpdateRole pulumi.StringOutput `pulumi:"firmwareUpdateRole"`
	// FUOTA task status. Returned after successful read.
	FuotaTaskStatus pulumi.StringOutput `pulumi:"fuotaTaskStatus"`
	// FUOTA task LoRaWAN
	LoRaWAN FuotaTaskLoRaWANOutput `pulumi:"loRaWAN"`
	// Name of FUOTA task
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// A list of key-value pairs that contain metadata for the FUOTA task.
	Tags FuotaTaskTagArrayOutput `pulumi:"tags"`
}

// NewFuotaTask registers a new resource with the given unique name, arguments, and options.
func NewFuotaTask(ctx *pulumi.Context,
	name string, args *FuotaTaskArgs, opts ...pulumi.ResourceOption) (*FuotaTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirmwareUpdateImage == nil {
		return nil, errors.New("invalid value for required argument 'FirmwareUpdateImage'")
	}
	if args.FirmwareUpdateRole == nil {
		return nil, errors.New("invalid value for required argument 'FirmwareUpdateRole'")
	}
	if args.LoRaWAN == nil {
		return nil, errors.New("invalid value for required argument 'LoRaWAN'")
	}
	var resource FuotaTask
	err := ctx.RegisterResource("aws-native:iotwireless:FuotaTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFuotaTask gets an existing FuotaTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFuotaTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FuotaTaskState, opts ...pulumi.ResourceOption) (*FuotaTask, error) {
	var resource FuotaTask
	err := ctx.ReadResource("aws-native:iotwireless:FuotaTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FuotaTask resources.
type fuotaTaskState struct {
}

type FuotaTaskState struct {
}

func (FuotaTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*fuotaTaskState)(nil)).Elem()
}

type fuotaTaskArgs struct {
	// Multicast group to associate. Only for update request.
	AssociateMulticastGroup *string `pulumi:"associateMulticastGroup"`
	// Wireless device to associate. Only for update request.
	AssociateWirelessDevice *string `pulumi:"associateWirelessDevice"`
	// FUOTA task description
	Description *string `pulumi:"description"`
	// Multicast group to disassociate. Only for update request.
	DisassociateMulticastGroup *string `pulumi:"disassociateMulticastGroup"`
	// Wireless device to disassociate. Only for update request.
	DisassociateWirelessDevice *string `pulumi:"disassociateWirelessDevice"`
	// FUOTA task firmware update image binary S3 link
	FirmwareUpdateImage string `pulumi:"firmwareUpdateImage"`
	// FUOTA task firmware IAM role for reading S3
	FirmwareUpdateRole string `pulumi:"firmwareUpdateRole"`
	// FUOTA task LoRaWAN
	LoRaWAN FuotaTaskLoRaWAN `pulumi:"loRaWAN"`
	// Name of FUOTA task
	Name *string `pulumi:"name"`
	// A list of key-value pairs that contain metadata for the FUOTA task.
	Tags []FuotaTaskTag `pulumi:"tags"`
}

// The set of arguments for constructing a FuotaTask resource.
type FuotaTaskArgs struct {
	// Multicast group to associate. Only for update request.
	AssociateMulticastGroup pulumi.StringPtrInput
	// Wireless device to associate. Only for update request.
	AssociateWirelessDevice pulumi.StringPtrInput
	// FUOTA task description
	Description pulumi.StringPtrInput
	// Multicast group to disassociate. Only for update request.
	DisassociateMulticastGroup pulumi.StringPtrInput
	// Wireless device to disassociate. Only for update request.
	DisassociateWirelessDevice pulumi.StringPtrInput
	// FUOTA task firmware update image binary S3 link
	FirmwareUpdateImage pulumi.StringInput
	// FUOTA task firmware IAM role for reading S3
	FirmwareUpdateRole pulumi.StringInput
	// FUOTA task LoRaWAN
	LoRaWAN FuotaTaskLoRaWANInput
	// Name of FUOTA task
	Name pulumi.StringPtrInput
	// A list of key-value pairs that contain metadata for the FUOTA task.
	Tags FuotaTaskTagArrayInput
}

func (FuotaTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fuotaTaskArgs)(nil)).Elem()
}

type FuotaTaskInput interface {
	pulumi.Input

	ToFuotaTaskOutput() FuotaTaskOutput
	ToFuotaTaskOutputWithContext(ctx context.Context) FuotaTaskOutput
}

func (*FuotaTask) ElementType() reflect.Type {
	return reflect.TypeOf((*FuotaTask)(nil))
}

func (i *FuotaTask) ToFuotaTaskOutput() FuotaTaskOutput {
	return i.ToFuotaTaskOutputWithContext(context.Background())
}

func (i *FuotaTask) ToFuotaTaskOutputWithContext(ctx context.Context) FuotaTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FuotaTaskOutput)
}

type FuotaTaskOutput struct{ *pulumi.OutputState }

func (FuotaTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FuotaTask)(nil))
}

func (o FuotaTaskOutput) ToFuotaTaskOutput() FuotaTaskOutput {
	return o
}

func (o FuotaTaskOutput) ToFuotaTaskOutputWithContext(ctx context.Context) FuotaTaskOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FuotaTaskInput)(nil)).Elem(), &FuotaTask{})
	pulumi.RegisterOutputType(FuotaTaskOutput{})
}
