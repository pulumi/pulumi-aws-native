// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connectcampaignsv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ConnectCampaignsV2::Campaign Resource Type
func LookupCampaign(ctx *pulumi.Context, args *LookupCampaignArgs, opts ...pulumi.InvokeOption) (*LookupCampaignResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCampaignResult
	err := ctx.Invoke("aws-native:connectcampaignsv2:getCampaign", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCampaignArgs struct {
	// Amazon Connect Campaign Arn
	Arn string `pulumi:"arn"`
}

type LookupCampaignResult struct {
	// Amazon Connect Campaign Arn
	Arn *string `pulumi:"arn"`
	// Contains channel subtype configuration for an outbound campaign.
	ChannelSubtypeConfig *CampaignChannelSubtypeConfig `pulumi:"channelSubtypeConfig"`
	// Communication limits configuration for an outbound campaign.
	CommunicationLimitsOverride *CampaignCommunicationLimitsConfig `pulumi:"communicationLimitsOverride"`
	// Contains communication time configuration for an outbound campaign.
	CommunicationTimeConfig *CampaignCommunicationTimeConfig `pulumi:"communicationTimeConfig"`
	// The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
	ConnectCampaignFlowArn *string `pulumi:"connectCampaignFlowArn"`
	// The name of the outbound campaign.
	Name *string `pulumi:"name"`
	// Contains the schedule configuration.
	Schedule *CampaignSchedule `pulumi:"schedule"`
	// Contains source configuration.
	Source *CampaignSource `pulumi:"source"`
	// One or more tags.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCampaignOutput(ctx *pulumi.Context, args LookupCampaignOutputArgs, opts ...pulumi.InvokeOption) LookupCampaignResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCampaignResultOutput, error) {
			args := v.(LookupCampaignArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCampaignResult
			secret, err := ctx.InvokePackageRaw("aws-native:connectcampaignsv2:getCampaign", args, &rv, "", opts...)
			if err != nil {
				return LookupCampaignResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCampaignResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCampaignResultOutput), nil
			}
			return output, nil
		}).(LookupCampaignResultOutput)
}

type LookupCampaignOutputArgs struct {
	// Amazon Connect Campaign Arn
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupCampaignOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCampaignArgs)(nil)).Elem()
}

type LookupCampaignResultOutput struct{ *pulumi.OutputState }

func (LookupCampaignResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCampaignResult)(nil)).Elem()
}

func (o LookupCampaignResultOutput) ToLookupCampaignResultOutput() LookupCampaignResultOutput {
	return o
}

func (o LookupCampaignResultOutput) ToLookupCampaignResultOutputWithContext(ctx context.Context) LookupCampaignResultOutput {
	return o
}

// Amazon Connect Campaign Arn
func (o LookupCampaignResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Contains channel subtype configuration for an outbound campaign.
func (o LookupCampaignResultOutput) ChannelSubtypeConfig() CampaignChannelSubtypeConfigPtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *CampaignChannelSubtypeConfig { return v.ChannelSubtypeConfig }).(CampaignChannelSubtypeConfigPtrOutput)
}

// Communication limits configuration for an outbound campaign.
func (o LookupCampaignResultOutput) CommunicationLimitsOverride() CampaignCommunicationLimitsConfigPtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *CampaignCommunicationLimitsConfig { return v.CommunicationLimitsOverride }).(CampaignCommunicationLimitsConfigPtrOutput)
}

// Contains communication time configuration for an outbound campaign.
func (o LookupCampaignResultOutput) CommunicationTimeConfig() CampaignCommunicationTimeConfigPtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *CampaignCommunicationTimeConfig { return v.CommunicationTimeConfig }).(CampaignCommunicationTimeConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
func (o LookupCampaignResultOutput) ConnectCampaignFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *string { return v.ConnectCampaignFlowArn }).(pulumi.StringPtrOutput)
}

// The name of the outbound campaign.
func (o LookupCampaignResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Contains the schedule configuration.
func (o LookupCampaignResultOutput) Schedule() CampaignSchedulePtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *CampaignSchedule { return v.Schedule }).(CampaignSchedulePtrOutput)
}

// Contains source configuration.
func (o LookupCampaignResultOutput) Source() CampaignSourcePtrOutput {
	return o.ApplyT(func(v LookupCampaignResult) *CampaignSource { return v.Source }).(CampaignSourcePtrOutput)
}

// One or more tags.
func (o LookupCampaignResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCampaignResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCampaignResultOutput{})
}
