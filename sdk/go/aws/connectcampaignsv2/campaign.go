// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connectcampaignsv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ConnectCampaignsV2::Campaign Resource Type
type Campaign struct {
	pulumi.CustomResourceState

	// Amazon Connect Campaign Arn
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Contains channel subtype configuration for an outbound campaign.
	ChannelSubtypeConfig CampaignChannelSubtypeConfigOutput `pulumi:"channelSubtypeConfig"`
	// Communication limits configuration for an outbound campaign.
	CommunicationLimitsOverride CampaignCommunicationLimitsConfigPtrOutput `pulumi:"communicationLimitsOverride"`
	// Contains communication time configuration for an outbound campaign.
	CommunicationTimeConfig CampaignCommunicationTimeConfigPtrOutput `pulumi:"communicationTimeConfig"`
	// The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
	ConnectCampaignFlowArn pulumi.StringPtrOutput `pulumi:"connectCampaignFlowArn"`
	// The identifier of the Amazon Connect instance. You can find the `instanceId` in the ARN of the instance.
	ConnectInstanceId pulumi.StringOutput `pulumi:"connectInstanceId"`
	// The name of the outbound campaign.
	Name pulumi.StringOutput `pulumi:"name"`
	// Contains the schedule configuration.
	Schedule CampaignSchedulePtrOutput `pulumi:"schedule"`
	// Contains source configuration.
	Source CampaignSourcePtrOutput `pulumi:"source"`
	// One or more tags.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewCampaign registers a new resource with the given unique name, arguments, and options.
func NewCampaign(ctx *pulumi.Context,
	name string, args *CampaignArgs, opts ...pulumi.ResourceOption) (*Campaign, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChannelSubtypeConfig == nil {
		return nil, errors.New("invalid value for required argument 'ChannelSubtypeConfig'")
	}
	if args.ConnectInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectInstanceId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"connectInstanceId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Campaign
	err := ctx.RegisterResource("aws-native:connectcampaignsv2:Campaign", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCampaign gets an existing Campaign resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCampaign(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CampaignState, opts ...pulumi.ResourceOption) (*Campaign, error) {
	var resource Campaign
	err := ctx.ReadResource("aws-native:connectcampaignsv2:Campaign", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Campaign resources.
type campaignState struct {
}

type CampaignState struct {
}

func (CampaignState) ElementType() reflect.Type {
	return reflect.TypeOf((*campaignState)(nil)).Elem()
}

type campaignArgs struct {
	// Contains channel subtype configuration for an outbound campaign.
	ChannelSubtypeConfig CampaignChannelSubtypeConfig `pulumi:"channelSubtypeConfig"`
	// Communication limits configuration for an outbound campaign.
	CommunicationLimitsOverride *CampaignCommunicationLimitsConfig `pulumi:"communicationLimitsOverride"`
	// Contains communication time configuration for an outbound campaign.
	CommunicationTimeConfig *CampaignCommunicationTimeConfig `pulumi:"communicationTimeConfig"`
	// The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
	ConnectCampaignFlowArn *string `pulumi:"connectCampaignFlowArn"`
	// The identifier of the Amazon Connect instance. You can find the `instanceId` in the ARN of the instance.
	ConnectInstanceId string `pulumi:"connectInstanceId"`
	// The name of the outbound campaign.
	Name *string `pulumi:"name"`
	// Contains the schedule configuration.
	Schedule *CampaignSchedule `pulumi:"schedule"`
	// Contains source configuration.
	Source *CampaignSource `pulumi:"source"`
	// One or more tags.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Campaign resource.
type CampaignArgs struct {
	// Contains channel subtype configuration for an outbound campaign.
	ChannelSubtypeConfig CampaignChannelSubtypeConfigInput
	// Communication limits configuration for an outbound campaign.
	CommunicationLimitsOverride CampaignCommunicationLimitsConfigPtrInput
	// Contains communication time configuration for an outbound campaign.
	CommunicationTimeConfig CampaignCommunicationTimeConfigPtrInput
	// The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
	ConnectCampaignFlowArn pulumi.StringPtrInput
	// The identifier of the Amazon Connect instance. You can find the `instanceId` in the ARN of the instance.
	ConnectInstanceId pulumi.StringInput
	// The name of the outbound campaign.
	Name pulumi.StringPtrInput
	// Contains the schedule configuration.
	Schedule CampaignSchedulePtrInput
	// Contains source configuration.
	Source CampaignSourcePtrInput
	// One or more tags.
	Tags aws.TagArrayInput
}

func (CampaignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*campaignArgs)(nil)).Elem()
}

type CampaignInput interface {
	pulumi.Input

	ToCampaignOutput() CampaignOutput
	ToCampaignOutputWithContext(ctx context.Context) CampaignOutput
}

func (*Campaign) ElementType() reflect.Type {
	return reflect.TypeOf((**Campaign)(nil)).Elem()
}

func (i *Campaign) ToCampaignOutput() CampaignOutput {
	return i.ToCampaignOutputWithContext(context.Background())
}

func (i *Campaign) ToCampaignOutputWithContext(ctx context.Context) CampaignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CampaignOutput)
}

type CampaignOutput struct{ *pulumi.OutputState }

func (CampaignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Campaign)(nil)).Elem()
}

func (o CampaignOutput) ToCampaignOutput() CampaignOutput {
	return o
}

func (o CampaignOutput) ToCampaignOutputWithContext(ctx context.Context) CampaignOutput {
	return o
}

// Amazon Connect Campaign Arn
func (o CampaignOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Campaign) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Contains channel subtype configuration for an outbound campaign.
func (o CampaignOutput) ChannelSubtypeConfig() CampaignChannelSubtypeConfigOutput {
	return o.ApplyT(func(v *Campaign) CampaignChannelSubtypeConfigOutput { return v.ChannelSubtypeConfig }).(CampaignChannelSubtypeConfigOutput)
}

// Communication limits configuration for an outbound campaign.
func (o CampaignOutput) CommunicationLimitsOverride() CampaignCommunicationLimitsConfigPtrOutput {
	return o.ApplyT(func(v *Campaign) CampaignCommunicationLimitsConfigPtrOutput { return v.CommunicationLimitsOverride }).(CampaignCommunicationLimitsConfigPtrOutput)
}

// Contains communication time configuration for an outbound campaign.
func (o CampaignOutput) CommunicationTimeConfig() CampaignCommunicationTimeConfigPtrOutput {
	return o.ApplyT(func(v *Campaign) CampaignCommunicationTimeConfigPtrOutput { return v.CommunicationTimeConfig }).(CampaignCommunicationTimeConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon Connect campaign flow associated with the outbound campaign.
func (o CampaignOutput) ConnectCampaignFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Campaign) pulumi.StringPtrOutput { return v.ConnectCampaignFlowArn }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon Connect instance. You can find the `instanceId` in the ARN of the instance.
func (o CampaignOutput) ConnectInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Campaign) pulumi.StringOutput { return v.ConnectInstanceId }).(pulumi.StringOutput)
}

// The name of the outbound campaign.
func (o CampaignOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Campaign) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Contains the schedule configuration.
func (o CampaignOutput) Schedule() CampaignSchedulePtrOutput {
	return o.ApplyT(func(v *Campaign) CampaignSchedulePtrOutput { return v.Schedule }).(CampaignSchedulePtrOutput)
}

// Contains source configuration.
func (o CampaignOutput) Source() CampaignSourcePtrOutput {
	return o.ApplyT(func(v *Campaign) CampaignSourcePtrOutput { return v.Source }).(CampaignSourcePtrOutput)
}

// One or more tags.
func (o CampaignOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Campaign) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CampaignInput)(nil)).Elem(), &Campaign{})
	pulumi.RegisterOutputType(CampaignOutput{})
}
