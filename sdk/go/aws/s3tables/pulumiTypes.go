// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3tables

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Specifies encryption settings for the table bucket
type TableBucketEncryptionConfiguration struct {
	// ARN of the KMS key to use for encryption
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Server-side encryption algorithm
	SseAlgorithm *TableBucketEncryptionConfigurationSseAlgorithm `pulumi:"sseAlgorithm"`
}

// TableBucketEncryptionConfigurationInput is an input type that accepts TableBucketEncryptionConfigurationArgs and TableBucketEncryptionConfigurationOutput values.
// You can construct a concrete instance of `TableBucketEncryptionConfigurationInput` via:
//
//	TableBucketEncryptionConfigurationArgs{...}
type TableBucketEncryptionConfigurationInput interface {
	pulumi.Input

	ToTableBucketEncryptionConfigurationOutput() TableBucketEncryptionConfigurationOutput
	ToTableBucketEncryptionConfigurationOutputWithContext(context.Context) TableBucketEncryptionConfigurationOutput
}

// Specifies encryption settings for the table bucket
type TableBucketEncryptionConfigurationArgs struct {
	// ARN of the KMS key to use for encryption
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// Server-side encryption algorithm
	SseAlgorithm TableBucketEncryptionConfigurationSseAlgorithmPtrInput `pulumi:"sseAlgorithm"`
}

func (TableBucketEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBucketEncryptionConfiguration)(nil)).Elem()
}

func (i TableBucketEncryptionConfigurationArgs) ToTableBucketEncryptionConfigurationOutput() TableBucketEncryptionConfigurationOutput {
	return i.ToTableBucketEncryptionConfigurationOutputWithContext(context.Background())
}

func (i TableBucketEncryptionConfigurationArgs) ToTableBucketEncryptionConfigurationOutputWithContext(ctx context.Context) TableBucketEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketEncryptionConfigurationOutput)
}

func (i TableBucketEncryptionConfigurationArgs) ToTableBucketEncryptionConfigurationPtrOutput() TableBucketEncryptionConfigurationPtrOutput {
	return i.ToTableBucketEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i TableBucketEncryptionConfigurationArgs) ToTableBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) TableBucketEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketEncryptionConfigurationOutput).ToTableBucketEncryptionConfigurationPtrOutputWithContext(ctx)
}

// TableBucketEncryptionConfigurationPtrInput is an input type that accepts TableBucketEncryptionConfigurationArgs, TableBucketEncryptionConfigurationPtr and TableBucketEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `TableBucketEncryptionConfigurationPtrInput` via:
//
//	        TableBucketEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type TableBucketEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToTableBucketEncryptionConfigurationPtrOutput() TableBucketEncryptionConfigurationPtrOutput
	ToTableBucketEncryptionConfigurationPtrOutputWithContext(context.Context) TableBucketEncryptionConfigurationPtrOutput
}

type tableBucketEncryptionConfigurationPtrType TableBucketEncryptionConfigurationArgs

func TableBucketEncryptionConfigurationPtr(v *TableBucketEncryptionConfigurationArgs) TableBucketEncryptionConfigurationPtrInput {
	return (*tableBucketEncryptionConfigurationPtrType)(v)
}

func (*tableBucketEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketEncryptionConfiguration)(nil)).Elem()
}

func (i *tableBucketEncryptionConfigurationPtrType) ToTableBucketEncryptionConfigurationPtrOutput() TableBucketEncryptionConfigurationPtrOutput {
	return i.ToTableBucketEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *tableBucketEncryptionConfigurationPtrType) ToTableBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) TableBucketEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketEncryptionConfigurationPtrOutput)
}

// Specifies encryption settings for the table bucket
type TableBucketEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (TableBucketEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBucketEncryptionConfiguration)(nil)).Elem()
}

func (o TableBucketEncryptionConfigurationOutput) ToTableBucketEncryptionConfigurationOutput() TableBucketEncryptionConfigurationOutput {
	return o
}

func (o TableBucketEncryptionConfigurationOutput) ToTableBucketEncryptionConfigurationOutputWithContext(ctx context.Context) TableBucketEncryptionConfigurationOutput {
	return o
}

func (o TableBucketEncryptionConfigurationOutput) ToTableBucketEncryptionConfigurationPtrOutput() TableBucketEncryptionConfigurationPtrOutput {
	return o.ToTableBucketEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o TableBucketEncryptionConfigurationOutput) ToTableBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) TableBucketEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableBucketEncryptionConfiguration) *TableBucketEncryptionConfiguration {
		return &v
	}).(TableBucketEncryptionConfigurationPtrOutput)
}

// ARN of the KMS key to use for encryption
func (o TableBucketEncryptionConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableBucketEncryptionConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm
func (o TableBucketEncryptionConfigurationOutput) SseAlgorithm() TableBucketEncryptionConfigurationSseAlgorithmPtrOutput {
	return o.ApplyT(func(v TableBucketEncryptionConfiguration) *TableBucketEncryptionConfigurationSseAlgorithm {
		return v.SseAlgorithm
	}).(TableBucketEncryptionConfigurationSseAlgorithmPtrOutput)
}

type TableBucketEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TableBucketEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketEncryptionConfiguration)(nil)).Elem()
}

func (o TableBucketEncryptionConfigurationPtrOutput) ToTableBucketEncryptionConfigurationPtrOutput() TableBucketEncryptionConfigurationPtrOutput {
	return o
}

func (o TableBucketEncryptionConfigurationPtrOutput) ToTableBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) TableBucketEncryptionConfigurationPtrOutput {
	return o
}

func (o TableBucketEncryptionConfigurationPtrOutput) Elem() TableBucketEncryptionConfigurationOutput {
	return o.ApplyT(func(v *TableBucketEncryptionConfiguration) TableBucketEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret TableBucketEncryptionConfiguration
		return ret
	}).(TableBucketEncryptionConfigurationOutput)
}

// ARN of the KMS key to use for encryption
func (o TableBucketEncryptionConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableBucketEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm
func (o TableBucketEncryptionConfigurationPtrOutput) SseAlgorithm() TableBucketEncryptionConfigurationSseAlgorithmPtrOutput {
	return o.ApplyT(func(v *TableBucketEncryptionConfiguration) *TableBucketEncryptionConfigurationSseAlgorithm {
		if v == nil {
			return nil
		}
		return v.SseAlgorithm
	}).(TableBucketEncryptionConfigurationSseAlgorithmPtrOutput)
}

// A policy document containing permissions to add to the specified table bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.
type TableBucketPolicyResourcePolicy struct {
}

// TableBucketPolicyResourcePolicyInput is an input type that accepts TableBucketPolicyResourcePolicyArgs and TableBucketPolicyResourcePolicyOutput values.
// You can construct a concrete instance of `TableBucketPolicyResourcePolicyInput` via:
//
//	TableBucketPolicyResourcePolicyArgs{...}
type TableBucketPolicyResourcePolicyInput interface {
	pulumi.Input

	ToTableBucketPolicyResourcePolicyOutput() TableBucketPolicyResourcePolicyOutput
	ToTableBucketPolicyResourcePolicyOutputWithContext(context.Context) TableBucketPolicyResourcePolicyOutput
}

// A policy document containing permissions to add to the specified table bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.
type TableBucketPolicyResourcePolicyArgs struct {
}

func (TableBucketPolicyResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBucketPolicyResourcePolicy)(nil)).Elem()
}

func (i TableBucketPolicyResourcePolicyArgs) ToTableBucketPolicyResourcePolicyOutput() TableBucketPolicyResourcePolicyOutput {
	return i.ToTableBucketPolicyResourcePolicyOutputWithContext(context.Background())
}

func (i TableBucketPolicyResourcePolicyArgs) ToTableBucketPolicyResourcePolicyOutputWithContext(ctx context.Context) TableBucketPolicyResourcePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketPolicyResourcePolicyOutput)
}

// A policy document containing permissions to add to the specified table bucket. In IAM, you must provide policy documents in JSON format. However, in CloudFormation you can provide the policy in JSON or YAML format because CloudFormation converts YAML to JSON before submitting it to IAM.
type TableBucketPolicyResourcePolicyOutput struct{ *pulumi.OutputState }

func (TableBucketPolicyResourcePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBucketPolicyResourcePolicy)(nil)).Elem()
}

func (o TableBucketPolicyResourcePolicyOutput) ToTableBucketPolicyResourcePolicyOutput() TableBucketPolicyResourcePolicyOutput {
	return o
}

func (o TableBucketPolicyResourcePolicyOutput) ToTableBucketPolicyResourcePolicyOutputWithContext(ctx context.Context) TableBucketPolicyResourcePolicyOutput {
	return o
}

type TableBucketPolicyResourcePolicyPtrOutput struct{ *pulumi.OutputState }

func (TableBucketPolicyResourcePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketPolicyResourcePolicy)(nil)).Elem()
}

func (o TableBucketPolicyResourcePolicyPtrOutput) ToTableBucketPolicyResourcePolicyPtrOutput() TableBucketPolicyResourcePolicyPtrOutput {
	return o
}

func (o TableBucketPolicyResourcePolicyPtrOutput) ToTableBucketPolicyResourcePolicyPtrOutputWithContext(ctx context.Context) TableBucketPolicyResourcePolicyPtrOutput {
	return o
}

func (o TableBucketPolicyResourcePolicyPtrOutput) Elem() TableBucketPolicyResourcePolicyOutput {
	return o.ApplyT(func(v *TableBucketPolicyResourcePolicy) TableBucketPolicyResourcePolicy {
		if v != nil {
			return *v
		}
		var ret TableBucketPolicyResourcePolicy
		return ret
	}).(TableBucketPolicyResourcePolicyOutput)
}

// Settings governing the Unreferenced File Removal maintenance action. Unreferenced file removal identifies and deletes all objects that are not referenced by any table snapshots.
type TableBucketUnreferencedFileRemoval struct {
	// S3 permanently deletes noncurrent objects after the number of days specified by the NoncurrentDays property.
	NoncurrentDays *int `pulumi:"noncurrentDays"`
	// Indicates whether the Unreferenced File Removal maintenance action is enabled.
	Status *TableBucketUnreferencedFileRemovalStatus `pulumi:"status"`
	// For any object not referenced by your table and older than the UnreferencedDays property, S3 creates a delete marker and marks the object version as noncurrent.
	UnreferencedDays *int `pulumi:"unreferencedDays"`
}

// TableBucketUnreferencedFileRemovalInput is an input type that accepts TableBucketUnreferencedFileRemovalArgs and TableBucketUnreferencedFileRemovalOutput values.
// You can construct a concrete instance of `TableBucketUnreferencedFileRemovalInput` via:
//
//	TableBucketUnreferencedFileRemovalArgs{...}
type TableBucketUnreferencedFileRemovalInput interface {
	pulumi.Input

	ToTableBucketUnreferencedFileRemovalOutput() TableBucketUnreferencedFileRemovalOutput
	ToTableBucketUnreferencedFileRemovalOutputWithContext(context.Context) TableBucketUnreferencedFileRemovalOutput
}

// Settings governing the Unreferenced File Removal maintenance action. Unreferenced file removal identifies and deletes all objects that are not referenced by any table snapshots.
type TableBucketUnreferencedFileRemovalArgs struct {
	// S3 permanently deletes noncurrent objects after the number of days specified by the NoncurrentDays property.
	NoncurrentDays pulumi.IntPtrInput `pulumi:"noncurrentDays"`
	// Indicates whether the Unreferenced File Removal maintenance action is enabled.
	Status TableBucketUnreferencedFileRemovalStatusPtrInput `pulumi:"status"`
	// For any object not referenced by your table and older than the UnreferencedDays property, S3 creates a delete marker and marks the object version as noncurrent.
	UnreferencedDays pulumi.IntPtrInput `pulumi:"unreferencedDays"`
}

func (TableBucketUnreferencedFileRemovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBucketUnreferencedFileRemoval)(nil)).Elem()
}

func (i TableBucketUnreferencedFileRemovalArgs) ToTableBucketUnreferencedFileRemovalOutput() TableBucketUnreferencedFileRemovalOutput {
	return i.ToTableBucketUnreferencedFileRemovalOutputWithContext(context.Background())
}

func (i TableBucketUnreferencedFileRemovalArgs) ToTableBucketUnreferencedFileRemovalOutputWithContext(ctx context.Context) TableBucketUnreferencedFileRemovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketUnreferencedFileRemovalOutput)
}

func (i TableBucketUnreferencedFileRemovalArgs) ToTableBucketUnreferencedFileRemovalPtrOutput() TableBucketUnreferencedFileRemovalPtrOutput {
	return i.ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(context.Background())
}

func (i TableBucketUnreferencedFileRemovalArgs) ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(ctx context.Context) TableBucketUnreferencedFileRemovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketUnreferencedFileRemovalOutput).ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(ctx)
}

// TableBucketUnreferencedFileRemovalPtrInput is an input type that accepts TableBucketUnreferencedFileRemovalArgs, TableBucketUnreferencedFileRemovalPtr and TableBucketUnreferencedFileRemovalPtrOutput values.
// You can construct a concrete instance of `TableBucketUnreferencedFileRemovalPtrInput` via:
//
//	        TableBucketUnreferencedFileRemovalArgs{...}
//
//	or:
//
//	        nil
type TableBucketUnreferencedFileRemovalPtrInput interface {
	pulumi.Input

	ToTableBucketUnreferencedFileRemovalPtrOutput() TableBucketUnreferencedFileRemovalPtrOutput
	ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(context.Context) TableBucketUnreferencedFileRemovalPtrOutput
}

type tableBucketUnreferencedFileRemovalPtrType TableBucketUnreferencedFileRemovalArgs

func TableBucketUnreferencedFileRemovalPtr(v *TableBucketUnreferencedFileRemovalArgs) TableBucketUnreferencedFileRemovalPtrInput {
	return (*tableBucketUnreferencedFileRemovalPtrType)(v)
}

func (*tableBucketUnreferencedFileRemovalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketUnreferencedFileRemoval)(nil)).Elem()
}

func (i *tableBucketUnreferencedFileRemovalPtrType) ToTableBucketUnreferencedFileRemovalPtrOutput() TableBucketUnreferencedFileRemovalPtrOutput {
	return i.ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(context.Background())
}

func (i *tableBucketUnreferencedFileRemovalPtrType) ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(ctx context.Context) TableBucketUnreferencedFileRemovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketUnreferencedFileRemovalPtrOutput)
}

// Settings governing the Unreferenced File Removal maintenance action. Unreferenced file removal identifies and deletes all objects that are not referenced by any table snapshots.
type TableBucketUnreferencedFileRemovalOutput struct{ *pulumi.OutputState }

func (TableBucketUnreferencedFileRemovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBucketUnreferencedFileRemoval)(nil)).Elem()
}

func (o TableBucketUnreferencedFileRemovalOutput) ToTableBucketUnreferencedFileRemovalOutput() TableBucketUnreferencedFileRemovalOutput {
	return o
}

func (o TableBucketUnreferencedFileRemovalOutput) ToTableBucketUnreferencedFileRemovalOutputWithContext(ctx context.Context) TableBucketUnreferencedFileRemovalOutput {
	return o
}

func (o TableBucketUnreferencedFileRemovalOutput) ToTableBucketUnreferencedFileRemovalPtrOutput() TableBucketUnreferencedFileRemovalPtrOutput {
	return o.ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(context.Background())
}

func (o TableBucketUnreferencedFileRemovalOutput) ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(ctx context.Context) TableBucketUnreferencedFileRemovalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableBucketUnreferencedFileRemoval) *TableBucketUnreferencedFileRemoval {
		return &v
	}).(TableBucketUnreferencedFileRemovalPtrOutput)
}

// S3 permanently deletes noncurrent objects after the number of days specified by the NoncurrentDays property.
func (o TableBucketUnreferencedFileRemovalOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableBucketUnreferencedFileRemoval) *int { return v.NoncurrentDays }).(pulumi.IntPtrOutput)
}

// Indicates whether the Unreferenced File Removal maintenance action is enabled.
func (o TableBucketUnreferencedFileRemovalOutput) Status() TableBucketUnreferencedFileRemovalStatusPtrOutput {
	return o.ApplyT(func(v TableBucketUnreferencedFileRemoval) *TableBucketUnreferencedFileRemovalStatus { return v.Status }).(TableBucketUnreferencedFileRemovalStatusPtrOutput)
}

// For any object not referenced by your table and older than the UnreferencedDays property, S3 creates a delete marker and marks the object version as noncurrent.
func (o TableBucketUnreferencedFileRemovalOutput) UnreferencedDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableBucketUnreferencedFileRemoval) *int { return v.UnreferencedDays }).(pulumi.IntPtrOutput)
}

type TableBucketUnreferencedFileRemovalPtrOutput struct{ *pulumi.OutputState }

func (TableBucketUnreferencedFileRemovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketUnreferencedFileRemoval)(nil)).Elem()
}

func (o TableBucketUnreferencedFileRemovalPtrOutput) ToTableBucketUnreferencedFileRemovalPtrOutput() TableBucketUnreferencedFileRemovalPtrOutput {
	return o
}

func (o TableBucketUnreferencedFileRemovalPtrOutput) ToTableBucketUnreferencedFileRemovalPtrOutputWithContext(ctx context.Context) TableBucketUnreferencedFileRemovalPtrOutput {
	return o
}

func (o TableBucketUnreferencedFileRemovalPtrOutput) Elem() TableBucketUnreferencedFileRemovalOutput {
	return o.ApplyT(func(v *TableBucketUnreferencedFileRemoval) TableBucketUnreferencedFileRemoval {
		if v != nil {
			return *v
		}
		var ret TableBucketUnreferencedFileRemoval
		return ret
	}).(TableBucketUnreferencedFileRemovalOutput)
}

// S3 permanently deletes noncurrent objects after the number of days specified by the NoncurrentDays property.
func (o TableBucketUnreferencedFileRemovalPtrOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableBucketUnreferencedFileRemoval) *int {
		if v == nil {
			return nil
		}
		return v.NoncurrentDays
	}).(pulumi.IntPtrOutput)
}

// Indicates whether the Unreferenced File Removal maintenance action is enabled.
func (o TableBucketUnreferencedFileRemovalPtrOutput) Status() TableBucketUnreferencedFileRemovalStatusPtrOutput {
	return o.ApplyT(func(v *TableBucketUnreferencedFileRemoval) *TableBucketUnreferencedFileRemovalStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TableBucketUnreferencedFileRemovalStatusPtrOutput)
}

// For any object not referenced by your table and older than the UnreferencedDays property, S3 creates a delete marker and marks the object version as noncurrent.
func (o TableBucketUnreferencedFileRemovalPtrOutput) UnreferencedDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableBucketUnreferencedFileRemoval) *int {
		if v == nil {
			return nil
		}
		return v.UnreferencedDays
	}).(pulumi.IntPtrOutput)
}

// Settings governing the Compaction maintenance action. Contains details about the compaction settings for an Iceberg table.
type TableCompaction struct {
	// Indicates whether the Compaction maintenance action is enabled.
	Status *TableCompactionStatus `pulumi:"status"`
	// The target file size for the table in MB.
	TargetFileSizeMb *int `pulumi:"targetFileSizeMb"`
}

// TableCompactionInput is an input type that accepts TableCompactionArgs and TableCompactionOutput values.
// You can construct a concrete instance of `TableCompactionInput` via:
//
//	TableCompactionArgs{...}
type TableCompactionInput interface {
	pulumi.Input

	ToTableCompactionOutput() TableCompactionOutput
	ToTableCompactionOutputWithContext(context.Context) TableCompactionOutput
}

// Settings governing the Compaction maintenance action. Contains details about the compaction settings for an Iceberg table.
type TableCompactionArgs struct {
	// Indicates whether the Compaction maintenance action is enabled.
	Status TableCompactionStatusPtrInput `pulumi:"status"`
	// The target file size for the table in MB.
	TargetFileSizeMb pulumi.IntPtrInput `pulumi:"targetFileSizeMb"`
}

func (TableCompactionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableCompaction)(nil)).Elem()
}

func (i TableCompactionArgs) ToTableCompactionOutput() TableCompactionOutput {
	return i.ToTableCompactionOutputWithContext(context.Background())
}

func (i TableCompactionArgs) ToTableCompactionOutputWithContext(ctx context.Context) TableCompactionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableCompactionOutput)
}

func (i TableCompactionArgs) ToTableCompactionPtrOutput() TableCompactionPtrOutput {
	return i.ToTableCompactionPtrOutputWithContext(context.Background())
}

func (i TableCompactionArgs) ToTableCompactionPtrOutputWithContext(ctx context.Context) TableCompactionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableCompactionOutput).ToTableCompactionPtrOutputWithContext(ctx)
}

// TableCompactionPtrInput is an input type that accepts TableCompactionArgs, TableCompactionPtr and TableCompactionPtrOutput values.
// You can construct a concrete instance of `TableCompactionPtrInput` via:
//
//	        TableCompactionArgs{...}
//
//	or:
//
//	        nil
type TableCompactionPtrInput interface {
	pulumi.Input

	ToTableCompactionPtrOutput() TableCompactionPtrOutput
	ToTableCompactionPtrOutputWithContext(context.Context) TableCompactionPtrOutput
}

type tableCompactionPtrType TableCompactionArgs

func TableCompactionPtr(v *TableCompactionArgs) TableCompactionPtrInput {
	return (*tableCompactionPtrType)(v)
}

func (*tableCompactionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableCompaction)(nil)).Elem()
}

func (i *tableCompactionPtrType) ToTableCompactionPtrOutput() TableCompactionPtrOutput {
	return i.ToTableCompactionPtrOutputWithContext(context.Background())
}

func (i *tableCompactionPtrType) ToTableCompactionPtrOutputWithContext(ctx context.Context) TableCompactionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableCompactionPtrOutput)
}

// Settings governing the Compaction maintenance action. Contains details about the compaction settings for an Iceberg table.
type TableCompactionOutput struct{ *pulumi.OutputState }

func (TableCompactionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableCompaction)(nil)).Elem()
}

func (o TableCompactionOutput) ToTableCompactionOutput() TableCompactionOutput {
	return o
}

func (o TableCompactionOutput) ToTableCompactionOutputWithContext(ctx context.Context) TableCompactionOutput {
	return o
}

func (o TableCompactionOutput) ToTableCompactionPtrOutput() TableCompactionPtrOutput {
	return o.ToTableCompactionPtrOutputWithContext(context.Background())
}

func (o TableCompactionOutput) ToTableCompactionPtrOutputWithContext(ctx context.Context) TableCompactionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableCompaction) *TableCompaction {
		return &v
	}).(TableCompactionPtrOutput)
}

// Indicates whether the Compaction maintenance action is enabled.
func (o TableCompactionOutput) Status() TableCompactionStatusPtrOutput {
	return o.ApplyT(func(v TableCompaction) *TableCompactionStatus { return v.Status }).(TableCompactionStatusPtrOutput)
}

// The target file size for the table in MB.
func (o TableCompactionOutput) TargetFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableCompaction) *int { return v.TargetFileSizeMb }).(pulumi.IntPtrOutput)
}

type TableCompactionPtrOutput struct{ *pulumi.OutputState }

func (TableCompactionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableCompaction)(nil)).Elem()
}

func (o TableCompactionPtrOutput) ToTableCompactionPtrOutput() TableCompactionPtrOutput {
	return o
}

func (o TableCompactionPtrOutput) ToTableCompactionPtrOutputWithContext(ctx context.Context) TableCompactionPtrOutput {
	return o
}

func (o TableCompactionPtrOutput) Elem() TableCompactionOutput {
	return o.ApplyT(func(v *TableCompaction) TableCompaction {
		if v != nil {
			return *v
		}
		var ret TableCompaction
		return ret
	}).(TableCompactionOutput)
}

// Indicates whether the Compaction maintenance action is enabled.
func (o TableCompactionPtrOutput) Status() TableCompactionStatusPtrOutput {
	return o.ApplyT(func(v *TableCompaction) *TableCompactionStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TableCompactionStatusPtrOutput)
}

// The target file size for the table in MB.
func (o TableCompactionPtrOutput) TargetFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableCompaction) *int {
		if v == nil {
			return nil
		}
		return v.TargetFileSizeMb
	}).(pulumi.IntPtrOutput)
}

// Contains details about the metadata for an Iceberg table.
type TableIcebergMetadata struct {
	IcebergSchema TableIcebergSchema `pulumi:"icebergSchema"`
}

// TableIcebergMetadataInput is an input type that accepts TableIcebergMetadataArgs and TableIcebergMetadataOutput values.
// You can construct a concrete instance of `TableIcebergMetadataInput` via:
//
//	TableIcebergMetadataArgs{...}
type TableIcebergMetadataInput interface {
	pulumi.Input

	ToTableIcebergMetadataOutput() TableIcebergMetadataOutput
	ToTableIcebergMetadataOutputWithContext(context.Context) TableIcebergMetadataOutput
}

// Contains details about the metadata for an Iceberg table.
type TableIcebergMetadataArgs struct {
	IcebergSchema TableIcebergSchemaInput `pulumi:"icebergSchema"`
}

func (TableIcebergMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIcebergMetadata)(nil)).Elem()
}

func (i TableIcebergMetadataArgs) ToTableIcebergMetadataOutput() TableIcebergMetadataOutput {
	return i.ToTableIcebergMetadataOutputWithContext(context.Background())
}

func (i TableIcebergMetadataArgs) ToTableIcebergMetadataOutputWithContext(ctx context.Context) TableIcebergMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIcebergMetadataOutput)
}

func (i TableIcebergMetadataArgs) ToTableIcebergMetadataPtrOutput() TableIcebergMetadataPtrOutput {
	return i.ToTableIcebergMetadataPtrOutputWithContext(context.Background())
}

func (i TableIcebergMetadataArgs) ToTableIcebergMetadataPtrOutputWithContext(ctx context.Context) TableIcebergMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIcebergMetadataOutput).ToTableIcebergMetadataPtrOutputWithContext(ctx)
}

// TableIcebergMetadataPtrInput is an input type that accepts TableIcebergMetadataArgs, TableIcebergMetadataPtr and TableIcebergMetadataPtrOutput values.
// You can construct a concrete instance of `TableIcebergMetadataPtrInput` via:
//
//	        TableIcebergMetadataArgs{...}
//
//	or:
//
//	        nil
type TableIcebergMetadataPtrInput interface {
	pulumi.Input

	ToTableIcebergMetadataPtrOutput() TableIcebergMetadataPtrOutput
	ToTableIcebergMetadataPtrOutputWithContext(context.Context) TableIcebergMetadataPtrOutput
}

type tableIcebergMetadataPtrType TableIcebergMetadataArgs

func TableIcebergMetadataPtr(v *TableIcebergMetadataArgs) TableIcebergMetadataPtrInput {
	return (*tableIcebergMetadataPtrType)(v)
}

func (*tableIcebergMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIcebergMetadata)(nil)).Elem()
}

func (i *tableIcebergMetadataPtrType) ToTableIcebergMetadataPtrOutput() TableIcebergMetadataPtrOutput {
	return i.ToTableIcebergMetadataPtrOutputWithContext(context.Background())
}

func (i *tableIcebergMetadataPtrType) ToTableIcebergMetadataPtrOutputWithContext(ctx context.Context) TableIcebergMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIcebergMetadataPtrOutput)
}

// Contains details about the metadata for an Iceberg table.
type TableIcebergMetadataOutput struct{ *pulumi.OutputState }

func (TableIcebergMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIcebergMetadata)(nil)).Elem()
}

func (o TableIcebergMetadataOutput) ToTableIcebergMetadataOutput() TableIcebergMetadataOutput {
	return o
}

func (o TableIcebergMetadataOutput) ToTableIcebergMetadataOutputWithContext(ctx context.Context) TableIcebergMetadataOutput {
	return o
}

func (o TableIcebergMetadataOutput) ToTableIcebergMetadataPtrOutput() TableIcebergMetadataPtrOutput {
	return o.ToTableIcebergMetadataPtrOutputWithContext(context.Background())
}

func (o TableIcebergMetadataOutput) ToTableIcebergMetadataPtrOutputWithContext(ctx context.Context) TableIcebergMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableIcebergMetadata) *TableIcebergMetadata {
		return &v
	}).(TableIcebergMetadataPtrOutput)
}

func (o TableIcebergMetadataOutput) IcebergSchema() TableIcebergSchemaOutput {
	return o.ApplyT(func(v TableIcebergMetadata) TableIcebergSchema { return v.IcebergSchema }).(TableIcebergSchemaOutput)
}

type TableIcebergMetadataPtrOutput struct{ *pulumi.OutputState }

func (TableIcebergMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIcebergMetadata)(nil)).Elem()
}

func (o TableIcebergMetadataPtrOutput) ToTableIcebergMetadataPtrOutput() TableIcebergMetadataPtrOutput {
	return o
}

func (o TableIcebergMetadataPtrOutput) ToTableIcebergMetadataPtrOutputWithContext(ctx context.Context) TableIcebergMetadataPtrOutput {
	return o
}

func (o TableIcebergMetadataPtrOutput) Elem() TableIcebergMetadataOutput {
	return o.ApplyT(func(v *TableIcebergMetadata) TableIcebergMetadata {
		if v != nil {
			return *v
		}
		var ret TableIcebergMetadata
		return ret
	}).(TableIcebergMetadataOutput)
}

func (o TableIcebergMetadataPtrOutput) IcebergSchema() TableIcebergSchemaPtrOutput {
	return o.ApplyT(func(v *TableIcebergMetadata) *TableIcebergSchema {
		if v == nil {
			return nil
		}
		return &v.IcebergSchema
	}).(TableIcebergSchemaPtrOutput)
}

// Contains details about the schema for an Iceberg table
type TableIcebergSchema struct {
	SchemaFieldList []TableSchemaField `pulumi:"schemaFieldList"`
}

// TableIcebergSchemaInput is an input type that accepts TableIcebergSchemaArgs and TableIcebergSchemaOutput values.
// You can construct a concrete instance of `TableIcebergSchemaInput` via:
//
//	TableIcebergSchemaArgs{...}
type TableIcebergSchemaInput interface {
	pulumi.Input

	ToTableIcebergSchemaOutput() TableIcebergSchemaOutput
	ToTableIcebergSchemaOutputWithContext(context.Context) TableIcebergSchemaOutput
}

// Contains details about the schema for an Iceberg table
type TableIcebergSchemaArgs struct {
	SchemaFieldList TableSchemaFieldArrayInput `pulumi:"schemaFieldList"`
}

func (TableIcebergSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIcebergSchema)(nil)).Elem()
}

func (i TableIcebergSchemaArgs) ToTableIcebergSchemaOutput() TableIcebergSchemaOutput {
	return i.ToTableIcebergSchemaOutputWithContext(context.Background())
}

func (i TableIcebergSchemaArgs) ToTableIcebergSchemaOutputWithContext(ctx context.Context) TableIcebergSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIcebergSchemaOutput)
}

func (i TableIcebergSchemaArgs) ToTableIcebergSchemaPtrOutput() TableIcebergSchemaPtrOutput {
	return i.ToTableIcebergSchemaPtrOutputWithContext(context.Background())
}

func (i TableIcebergSchemaArgs) ToTableIcebergSchemaPtrOutputWithContext(ctx context.Context) TableIcebergSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIcebergSchemaOutput).ToTableIcebergSchemaPtrOutputWithContext(ctx)
}

// TableIcebergSchemaPtrInput is an input type that accepts TableIcebergSchemaArgs, TableIcebergSchemaPtr and TableIcebergSchemaPtrOutput values.
// You can construct a concrete instance of `TableIcebergSchemaPtrInput` via:
//
//	        TableIcebergSchemaArgs{...}
//
//	or:
//
//	        nil
type TableIcebergSchemaPtrInput interface {
	pulumi.Input

	ToTableIcebergSchemaPtrOutput() TableIcebergSchemaPtrOutput
	ToTableIcebergSchemaPtrOutputWithContext(context.Context) TableIcebergSchemaPtrOutput
}

type tableIcebergSchemaPtrType TableIcebergSchemaArgs

func TableIcebergSchemaPtr(v *TableIcebergSchemaArgs) TableIcebergSchemaPtrInput {
	return (*tableIcebergSchemaPtrType)(v)
}

func (*tableIcebergSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIcebergSchema)(nil)).Elem()
}

func (i *tableIcebergSchemaPtrType) ToTableIcebergSchemaPtrOutput() TableIcebergSchemaPtrOutput {
	return i.ToTableIcebergSchemaPtrOutputWithContext(context.Background())
}

func (i *tableIcebergSchemaPtrType) ToTableIcebergSchemaPtrOutputWithContext(ctx context.Context) TableIcebergSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIcebergSchemaPtrOutput)
}

// Contains details about the schema for an Iceberg table
type TableIcebergSchemaOutput struct{ *pulumi.OutputState }

func (TableIcebergSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIcebergSchema)(nil)).Elem()
}

func (o TableIcebergSchemaOutput) ToTableIcebergSchemaOutput() TableIcebergSchemaOutput {
	return o
}

func (o TableIcebergSchemaOutput) ToTableIcebergSchemaOutputWithContext(ctx context.Context) TableIcebergSchemaOutput {
	return o
}

func (o TableIcebergSchemaOutput) ToTableIcebergSchemaPtrOutput() TableIcebergSchemaPtrOutput {
	return o.ToTableIcebergSchemaPtrOutputWithContext(context.Background())
}

func (o TableIcebergSchemaOutput) ToTableIcebergSchemaPtrOutputWithContext(ctx context.Context) TableIcebergSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableIcebergSchema) *TableIcebergSchema {
		return &v
	}).(TableIcebergSchemaPtrOutput)
}

func (o TableIcebergSchemaOutput) SchemaFieldList() TableSchemaFieldArrayOutput {
	return o.ApplyT(func(v TableIcebergSchema) []TableSchemaField { return v.SchemaFieldList }).(TableSchemaFieldArrayOutput)
}

type TableIcebergSchemaPtrOutput struct{ *pulumi.OutputState }

func (TableIcebergSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIcebergSchema)(nil)).Elem()
}

func (o TableIcebergSchemaPtrOutput) ToTableIcebergSchemaPtrOutput() TableIcebergSchemaPtrOutput {
	return o
}

func (o TableIcebergSchemaPtrOutput) ToTableIcebergSchemaPtrOutputWithContext(ctx context.Context) TableIcebergSchemaPtrOutput {
	return o
}

func (o TableIcebergSchemaPtrOutput) Elem() TableIcebergSchemaOutput {
	return o.ApplyT(func(v *TableIcebergSchema) TableIcebergSchema {
		if v != nil {
			return *v
		}
		var ret TableIcebergSchema
		return ret
	}).(TableIcebergSchemaOutput)
}

func (o TableIcebergSchemaPtrOutput) SchemaFieldList() TableSchemaFieldArrayOutput {
	return o.ApplyT(func(v *TableIcebergSchema) []TableSchemaField {
		if v == nil {
			return nil
		}
		return v.SchemaFieldList
	}).(TableSchemaFieldArrayOutput)
}

// Contains details about the schema for an Iceberg table
type TableSchemaField struct {
	// The name of the field
	Name string `pulumi:"name"`
	// A Boolean value that specifies whether values are required for each row in this field
	Required *bool `pulumi:"required"`
	// The field type
	Type string `pulumi:"type"`
}

// TableSchemaFieldInput is an input type that accepts TableSchemaFieldArgs and TableSchemaFieldOutput values.
// You can construct a concrete instance of `TableSchemaFieldInput` via:
//
//	TableSchemaFieldArgs{...}
type TableSchemaFieldInput interface {
	pulumi.Input

	ToTableSchemaFieldOutput() TableSchemaFieldOutput
	ToTableSchemaFieldOutputWithContext(context.Context) TableSchemaFieldOutput
}

// Contains details about the schema for an Iceberg table
type TableSchemaFieldArgs struct {
	// The name of the field
	Name pulumi.StringInput `pulumi:"name"`
	// A Boolean value that specifies whether values are required for each row in this field
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The field type
	Type pulumi.StringInput `pulumi:"type"`
}

func (TableSchemaFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableSchemaField)(nil)).Elem()
}

func (i TableSchemaFieldArgs) ToTableSchemaFieldOutput() TableSchemaFieldOutput {
	return i.ToTableSchemaFieldOutputWithContext(context.Background())
}

func (i TableSchemaFieldArgs) ToTableSchemaFieldOutputWithContext(ctx context.Context) TableSchemaFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSchemaFieldOutput)
}

// TableSchemaFieldArrayInput is an input type that accepts TableSchemaFieldArray and TableSchemaFieldArrayOutput values.
// You can construct a concrete instance of `TableSchemaFieldArrayInput` via:
//
//	TableSchemaFieldArray{ TableSchemaFieldArgs{...} }
type TableSchemaFieldArrayInput interface {
	pulumi.Input

	ToTableSchemaFieldArrayOutput() TableSchemaFieldArrayOutput
	ToTableSchemaFieldArrayOutputWithContext(context.Context) TableSchemaFieldArrayOutput
}

type TableSchemaFieldArray []TableSchemaFieldInput

func (TableSchemaFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableSchemaField)(nil)).Elem()
}

func (i TableSchemaFieldArray) ToTableSchemaFieldArrayOutput() TableSchemaFieldArrayOutput {
	return i.ToTableSchemaFieldArrayOutputWithContext(context.Background())
}

func (i TableSchemaFieldArray) ToTableSchemaFieldArrayOutputWithContext(ctx context.Context) TableSchemaFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSchemaFieldArrayOutput)
}

// Contains details about the schema for an Iceberg table
type TableSchemaFieldOutput struct{ *pulumi.OutputState }

func (TableSchemaFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableSchemaField)(nil)).Elem()
}

func (o TableSchemaFieldOutput) ToTableSchemaFieldOutput() TableSchemaFieldOutput {
	return o
}

func (o TableSchemaFieldOutput) ToTableSchemaFieldOutputWithContext(ctx context.Context) TableSchemaFieldOutput {
	return o
}

// The name of the field
func (o TableSchemaFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TableSchemaField) string { return v.Name }).(pulumi.StringOutput)
}

// A Boolean value that specifies whether values are required for each row in this field
func (o TableSchemaFieldOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TableSchemaField) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The field type
func (o TableSchemaFieldOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TableSchemaField) string { return v.Type }).(pulumi.StringOutput)
}

type TableSchemaFieldArrayOutput struct{ *pulumi.OutputState }

func (TableSchemaFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableSchemaField)(nil)).Elem()
}

func (o TableSchemaFieldArrayOutput) ToTableSchemaFieldArrayOutput() TableSchemaFieldArrayOutput {
	return o
}

func (o TableSchemaFieldArrayOutput) ToTableSchemaFieldArrayOutputWithContext(ctx context.Context) TableSchemaFieldArrayOutput {
	return o
}

func (o TableSchemaFieldArrayOutput) Index(i pulumi.IntInput) TableSchemaFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableSchemaField {
		return vs[0].([]TableSchemaField)[vs[1].(int)]
	}).(TableSchemaFieldOutput)
}

// Contains details about the snapshot management settings for an Iceberg table. A snapshot is expired when it exceeds MinSnapshotsToKeep and MaxSnapshotAgeHours.
type TableSnapshotManagement struct {
	// The maximum age of a snapshot before it can be expired.
	MaxSnapshotAgeHours *int `pulumi:"maxSnapshotAgeHours"`
	// The minimum number of snapshots to keep.
	MinSnapshotsToKeep *int `pulumi:"minSnapshotsToKeep"`
	// Indicates whether the SnapshotManagement maintenance action is enabled.
	Status *TableSnapshotManagementStatus `pulumi:"status"`
}

// TableSnapshotManagementInput is an input type that accepts TableSnapshotManagementArgs and TableSnapshotManagementOutput values.
// You can construct a concrete instance of `TableSnapshotManagementInput` via:
//
//	TableSnapshotManagementArgs{...}
type TableSnapshotManagementInput interface {
	pulumi.Input

	ToTableSnapshotManagementOutput() TableSnapshotManagementOutput
	ToTableSnapshotManagementOutputWithContext(context.Context) TableSnapshotManagementOutput
}

// Contains details about the snapshot management settings for an Iceberg table. A snapshot is expired when it exceeds MinSnapshotsToKeep and MaxSnapshotAgeHours.
type TableSnapshotManagementArgs struct {
	// The maximum age of a snapshot before it can be expired.
	MaxSnapshotAgeHours pulumi.IntPtrInput `pulumi:"maxSnapshotAgeHours"`
	// The minimum number of snapshots to keep.
	MinSnapshotsToKeep pulumi.IntPtrInput `pulumi:"minSnapshotsToKeep"`
	// Indicates whether the SnapshotManagement maintenance action is enabled.
	Status TableSnapshotManagementStatusPtrInput `pulumi:"status"`
}

func (TableSnapshotManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableSnapshotManagement)(nil)).Elem()
}

func (i TableSnapshotManagementArgs) ToTableSnapshotManagementOutput() TableSnapshotManagementOutput {
	return i.ToTableSnapshotManagementOutputWithContext(context.Background())
}

func (i TableSnapshotManagementArgs) ToTableSnapshotManagementOutputWithContext(ctx context.Context) TableSnapshotManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSnapshotManagementOutput)
}

func (i TableSnapshotManagementArgs) ToTableSnapshotManagementPtrOutput() TableSnapshotManagementPtrOutput {
	return i.ToTableSnapshotManagementPtrOutputWithContext(context.Background())
}

func (i TableSnapshotManagementArgs) ToTableSnapshotManagementPtrOutputWithContext(ctx context.Context) TableSnapshotManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSnapshotManagementOutput).ToTableSnapshotManagementPtrOutputWithContext(ctx)
}

// TableSnapshotManagementPtrInput is an input type that accepts TableSnapshotManagementArgs, TableSnapshotManagementPtr and TableSnapshotManagementPtrOutput values.
// You can construct a concrete instance of `TableSnapshotManagementPtrInput` via:
//
//	        TableSnapshotManagementArgs{...}
//
//	or:
//
//	        nil
type TableSnapshotManagementPtrInput interface {
	pulumi.Input

	ToTableSnapshotManagementPtrOutput() TableSnapshotManagementPtrOutput
	ToTableSnapshotManagementPtrOutputWithContext(context.Context) TableSnapshotManagementPtrOutput
}

type tableSnapshotManagementPtrType TableSnapshotManagementArgs

func TableSnapshotManagementPtr(v *TableSnapshotManagementArgs) TableSnapshotManagementPtrInput {
	return (*tableSnapshotManagementPtrType)(v)
}

func (*tableSnapshotManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableSnapshotManagement)(nil)).Elem()
}

func (i *tableSnapshotManagementPtrType) ToTableSnapshotManagementPtrOutput() TableSnapshotManagementPtrOutput {
	return i.ToTableSnapshotManagementPtrOutputWithContext(context.Background())
}

func (i *tableSnapshotManagementPtrType) ToTableSnapshotManagementPtrOutputWithContext(ctx context.Context) TableSnapshotManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSnapshotManagementPtrOutput)
}

// Contains details about the snapshot management settings for an Iceberg table. A snapshot is expired when it exceeds MinSnapshotsToKeep and MaxSnapshotAgeHours.
type TableSnapshotManagementOutput struct{ *pulumi.OutputState }

func (TableSnapshotManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableSnapshotManagement)(nil)).Elem()
}

func (o TableSnapshotManagementOutput) ToTableSnapshotManagementOutput() TableSnapshotManagementOutput {
	return o
}

func (o TableSnapshotManagementOutput) ToTableSnapshotManagementOutputWithContext(ctx context.Context) TableSnapshotManagementOutput {
	return o
}

func (o TableSnapshotManagementOutput) ToTableSnapshotManagementPtrOutput() TableSnapshotManagementPtrOutput {
	return o.ToTableSnapshotManagementPtrOutputWithContext(context.Background())
}

func (o TableSnapshotManagementOutput) ToTableSnapshotManagementPtrOutputWithContext(ctx context.Context) TableSnapshotManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableSnapshotManagement) *TableSnapshotManagement {
		return &v
	}).(TableSnapshotManagementPtrOutput)
}

// The maximum age of a snapshot before it can be expired.
func (o TableSnapshotManagementOutput) MaxSnapshotAgeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableSnapshotManagement) *int { return v.MaxSnapshotAgeHours }).(pulumi.IntPtrOutput)
}

// The minimum number of snapshots to keep.
func (o TableSnapshotManagementOutput) MinSnapshotsToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableSnapshotManagement) *int { return v.MinSnapshotsToKeep }).(pulumi.IntPtrOutput)
}

// Indicates whether the SnapshotManagement maintenance action is enabled.
func (o TableSnapshotManagementOutput) Status() TableSnapshotManagementStatusPtrOutput {
	return o.ApplyT(func(v TableSnapshotManagement) *TableSnapshotManagementStatus { return v.Status }).(TableSnapshotManagementStatusPtrOutput)
}

type TableSnapshotManagementPtrOutput struct{ *pulumi.OutputState }

func (TableSnapshotManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableSnapshotManagement)(nil)).Elem()
}

func (o TableSnapshotManagementPtrOutput) ToTableSnapshotManagementPtrOutput() TableSnapshotManagementPtrOutput {
	return o
}

func (o TableSnapshotManagementPtrOutput) ToTableSnapshotManagementPtrOutputWithContext(ctx context.Context) TableSnapshotManagementPtrOutput {
	return o
}

func (o TableSnapshotManagementPtrOutput) Elem() TableSnapshotManagementOutput {
	return o.ApplyT(func(v *TableSnapshotManagement) TableSnapshotManagement {
		if v != nil {
			return *v
		}
		var ret TableSnapshotManagement
		return ret
	}).(TableSnapshotManagementOutput)
}

// The maximum age of a snapshot before it can be expired.
func (o TableSnapshotManagementPtrOutput) MaxSnapshotAgeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableSnapshotManagement) *int {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotAgeHours
	}).(pulumi.IntPtrOutput)
}

// The minimum number of snapshots to keep.
func (o TableSnapshotManagementPtrOutput) MinSnapshotsToKeep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableSnapshotManagement) *int {
		if v == nil {
			return nil
		}
		return v.MinSnapshotsToKeep
	}).(pulumi.IntPtrOutput)
}

// Indicates whether the SnapshotManagement maintenance action is enabled.
func (o TableSnapshotManagementPtrOutput) Status() TableSnapshotManagementStatusPtrOutput {
	return o.ApplyT(func(v *TableSnapshotManagement) *TableSnapshotManagementStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TableSnapshotManagementStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketEncryptionConfigurationInput)(nil)).Elem(), TableBucketEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketEncryptionConfigurationPtrInput)(nil)).Elem(), TableBucketEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketPolicyResourcePolicyInput)(nil)).Elem(), TableBucketPolicyResourcePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketUnreferencedFileRemovalInput)(nil)).Elem(), TableBucketUnreferencedFileRemovalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketUnreferencedFileRemovalPtrInput)(nil)).Elem(), TableBucketUnreferencedFileRemovalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableCompactionInput)(nil)).Elem(), TableCompactionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableCompactionPtrInput)(nil)).Elem(), TableCompactionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIcebergMetadataInput)(nil)).Elem(), TableIcebergMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIcebergMetadataPtrInput)(nil)).Elem(), TableIcebergMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIcebergSchemaInput)(nil)).Elem(), TableIcebergSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIcebergSchemaPtrInput)(nil)).Elem(), TableIcebergSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableSchemaFieldInput)(nil)).Elem(), TableSchemaFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableSchemaFieldArrayInput)(nil)).Elem(), TableSchemaFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableSnapshotManagementInput)(nil)).Elem(), TableSnapshotManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableSnapshotManagementPtrInput)(nil)).Elem(), TableSnapshotManagementArgs{})
	pulumi.RegisterOutputType(TableBucketEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(TableBucketEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TableBucketPolicyResourcePolicyOutput{})
	pulumi.RegisterOutputType(TableBucketPolicyResourcePolicyPtrOutput{})
	pulumi.RegisterOutputType(TableBucketUnreferencedFileRemovalOutput{})
	pulumi.RegisterOutputType(TableBucketUnreferencedFileRemovalPtrOutput{})
	pulumi.RegisterOutputType(TableCompactionOutput{})
	pulumi.RegisterOutputType(TableCompactionPtrOutput{})
	pulumi.RegisterOutputType(TableIcebergMetadataOutput{})
	pulumi.RegisterOutputType(TableIcebergMetadataPtrOutput{})
	pulumi.RegisterOutputType(TableIcebergSchemaOutput{})
	pulumi.RegisterOutputType(TableIcebergSchemaPtrOutput{})
	pulumi.RegisterOutputType(TableSchemaFieldOutput{})
	pulumi.RegisterOutputType(TableSchemaFieldArrayOutput{})
	pulumi.RegisterOutputType(TableSnapshotManagementOutput{})
	pulumi.RegisterOutputType(TableSnapshotManagementPtrOutput{})
}
