// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3tables

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::S3Tables::Table
func LookupTable(ctx *pulumi.Context, args *LookupTableArgs, opts ...pulumi.InvokeOption) (*LookupTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTableResult
	err := ctx.Invoke("aws-native:s3tables:getTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTableArgs struct {
	// The Amazon Resource Name (ARN) of the table.
	TableArn string `pulumi:"tableArn"`
}

type LookupTableResult struct {
	// Contains details about the compaction settings for an Iceberg table.
	Compaction *TableCompaction `pulumi:"compaction"`
	// The name of the namespace.
	Namespace *string `pulumi:"namespace"`
	// Contains details about the Iceberg snapshot management settings for the table.
	SnapshotManagement *TableSnapshotManagement `pulumi:"snapshotManagement"`
	// The Amazon Resource Name (ARN) of the table.
	TableArn *string `pulumi:"tableArn"`
	// The name for the table.
	TableName *string `pulumi:"tableName"`
	// The version token of the table.
	VersionToken *string `pulumi:"versionToken"`
	// The warehouse location of the table.
	WarehouseLocation *string `pulumi:"warehouseLocation"`
}

func LookupTableOutput(ctx *pulumi.Context, args LookupTableOutputArgs, opts ...pulumi.InvokeOption) LookupTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTableResultOutput, error) {
			args := v.(LookupTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:s3tables:getTable", args, LookupTableResultOutput{}, options).(LookupTableResultOutput), nil
		}).(LookupTableResultOutput)
}

type LookupTableOutputArgs struct {
	// The Amazon Resource Name (ARN) of the table.
	TableArn pulumi.StringInput `pulumi:"tableArn"`
}

func (LookupTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableArgs)(nil)).Elem()
}

type LookupTableResultOutput struct{ *pulumi.OutputState }

func (LookupTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableResult)(nil)).Elem()
}

func (o LookupTableResultOutput) ToLookupTableResultOutput() LookupTableResultOutput {
	return o
}

func (o LookupTableResultOutput) ToLookupTableResultOutputWithContext(ctx context.Context) LookupTableResultOutput {
	return o
}

// Contains details about the compaction settings for an Iceberg table.
func (o LookupTableResultOutput) Compaction() TableCompactionPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *TableCompaction { return v.Compaction }).(TableCompactionPtrOutput)
}

// The name of the namespace.
func (o LookupTableResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Contains details about the Iceberg snapshot management settings for the table.
func (o LookupTableResultOutput) SnapshotManagement() TableSnapshotManagementPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *TableSnapshotManagement { return v.SnapshotManagement }).(TableSnapshotManagementPtrOutput)
}

// The Amazon Resource Name (ARN) of the table.
func (o LookupTableResultOutput) TableArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *string { return v.TableArn }).(pulumi.StringPtrOutput)
}

// The name for the table.
func (o LookupTableResultOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

// The version token of the table.
func (o LookupTableResultOutput) VersionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *string { return v.VersionToken }).(pulumi.StringPtrOutput)
}

// The warehouse location of the table.
func (o LookupTableResultOutput) WarehouseLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTableResult) *string { return v.WarehouseLocation }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTableResultOutput{})
}
