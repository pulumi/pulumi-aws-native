// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3tables

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::S3Tables::TablePolicy
func LookupTablePolicy(ctx *pulumi.Context, args *LookupTablePolicyArgs, opts ...pulumi.InvokeOption) (*LookupTablePolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTablePolicyResult
	err := ctx.Invoke("aws-native:s3tables:getTablePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTablePolicyArgs struct {
	TableArn string `pulumi:"tableArn"`
}

type LookupTablePolicyResult struct {
	Namespace      *string                    `pulumi:"namespace"`
	ResourcePolicy *TablePolicyResourcePolicy `pulumi:"resourcePolicy"`
	TableBucketArn *string                    `pulumi:"tableBucketArn"`
	TableName      *string                    `pulumi:"tableName"`
}

func LookupTablePolicyOutput(ctx *pulumi.Context, args LookupTablePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTablePolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTablePolicyResultOutput, error) {
			args := v.(LookupTablePolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:s3tables:getTablePolicy", args, LookupTablePolicyResultOutput{}, options).(LookupTablePolicyResultOutput), nil
		}).(LookupTablePolicyResultOutput)
}

type LookupTablePolicyOutputArgs struct {
	TableArn pulumi.StringInput `pulumi:"tableArn"`
}

func (LookupTablePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTablePolicyArgs)(nil)).Elem()
}

type LookupTablePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTablePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTablePolicyResult)(nil)).Elem()
}

func (o LookupTablePolicyResultOutput) ToLookupTablePolicyResultOutput() LookupTablePolicyResultOutput {
	return o
}

func (o LookupTablePolicyResultOutput) ToLookupTablePolicyResultOutputWithContext(ctx context.Context) LookupTablePolicyResultOutput {
	return o
}

func (o LookupTablePolicyResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTablePolicyResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o LookupTablePolicyResultOutput) ResourcePolicy() TablePolicyResourcePolicyPtrOutput {
	return o.ApplyT(func(v LookupTablePolicyResult) *TablePolicyResourcePolicy { return v.ResourcePolicy }).(TablePolicyResourcePolicyPtrOutput)
}

func (o LookupTablePolicyResultOutput) TableBucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTablePolicyResult) *string { return v.TableBucketArn }).(pulumi.StringPtrOutput)
}

func (o LookupTablePolicyResultOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTablePolicyResult) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTablePolicyResultOutput{})
}
