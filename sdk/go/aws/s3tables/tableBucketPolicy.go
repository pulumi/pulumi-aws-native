// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3tables

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Applies an IAM resource policy to a table bucket.
type TableBucketPolicy struct {
	pulumi.CustomResourceState

	ResourcePolicy TableBucketPolicyResourcePolicyOutput `pulumi:"resourcePolicy"`
	TableBucketArn pulumi.StringOutput                   `pulumi:"tableBucketArn"`
}

// NewTableBucketPolicy registers a new resource with the given unique name, arguments, and options.
func NewTableBucketPolicy(ctx *pulumi.Context,
	name string, args *TableBucketPolicyArgs, opts ...pulumi.ResourceOption) (*TableBucketPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourcePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ResourcePolicy'")
	}
	if args.TableBucketArn == nil {
		return nil, errors.New("invalid value for required argument 'TableBucketArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"tableBucketArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TableBucketPolicy
	err := ctx.RegisterResource("aws-native:s3tables:TableBucketPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTableBucketPolicy gets an existing TableBucketPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTableBucketPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableBucketPolicyState, opts ...pulumi.ResourceOption) (*TableBucketPolicy, error) {
	var resource TableBucketPolicy
	err := ctx.ReadResource("aws-native:s3tables:TableBucketPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TableBucketPolicy resources.
type tableBucketPolicyState struct {
}

type TableBucketPolicyState struct {
}

func (TableBucketPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableBucketPolicyState)(nil)).Elem()
}

type tableBucketPolicyArgs struct {
	ResourcePolicy TableBucketPolicyResourcePolicy `pulumi:"resourcePolicy"`
	TableBucketArn string                          `pulumi:"tableBucketArn"`
}

// The set of arguments for constructing a TableBucketPolicy resource.
type TableBucketPolicyArgs struct {
	ResourcePolicy TableBucketPolicyResourcePolicyInput
	TableBucketArn pulumi.StringInput
}

func (TableBucketPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableBucketPolicyArgs)(nil)).Elem()
}

type TableBucketPolicyInput interface {
	pulumi.Input

	ToTableBucketPolicyOutput() TableBucketPolicyOutput
	ToTableBucketPolicyOutputWithContext(ctx context.Context) TableBucketPolicyOutput
}

func (*TableBucketPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketPolicy)(nil)).Elem()
}

func (i *TableBucketPolicy) ToTableBucketPolicyOutput() TableBucketPolicyOutput {
	return i.ToTableBucketPolicyOutputWithContext(context.Background())
}

func (i *TableBucketPolicy) ToTableBucketPolicyOutputWithContext(ctx context.Context) TableBucketPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketPolicyOutput)
}

type TableBucketPolicyOutput struct{ *pulumi.OutputState }

func (TableBucketPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucketPolicy)(nil)).Elem()
}

func (o TableBucketPolicyOutput) ToTableBucketPolicyOutput() TableBucketPolicyOutput {
	return o
}

func (o TableBucketPolicyOutput) ToTableBucketPolicyOutputWithContext(ctx context.Context) TableBucketPolicyOutput {
	return o
}

func (o TableBucketPolicyOutput) ResourcePolicy() TableBucketPolicyResourcePolicyOutput {
	return o.ApplyT(func(v *TableBucketPolicy) TableBucketPolicyResourcePolicyOutput { return v.ResourcePolicy }).(TableBucketPolicyResourcePolicyOutput)
}

func (o TableBucketPolicyOutput) TableBucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TableBucketPolicy) pulumi.StringOutput { return v.TableBucketArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketPolicyInput)(nil)).Elem(), &TableBucketPolicy{})
	pulumi.RegisterOutputType(TableBucketPolicyOutput{})
}
