// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package omics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Omics::AnnotationStore Resource Type
func LookupAnnotationStore(ctx *pulumi.Context, args *LookupAnnotationStoreArgs, opts ...pulumi.InvokeOption) (*LookupAnnotationStoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAnnotationStoreResult
	err := ctx.Invoke("aws-native:omics:getAnnotationStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAnnotationStoreArgs struct {
	// The name of the Annotation Store.
	Name string `pulumi:"name"`
}

type LookupAnnotationStoreResult struct {
	// When the store was created.
	CreationTime *string `pulumi:"creationTime"`
	// A description for the store.
	Description *string `pulumi:"description"`
	// The store's ID.
	Id *string `pulumi:"id"`
	// The store's status.
	Status *AnnotationStoreStoreStatus `pulumi:"status"`
	// The store's status message.
	StatusMessage *string `pulumi:"statusMessage"`
	// The store's ARN.
	StoreArn *string `pulumi:"storeArn"`
	// The store's size in bytes.
	StoreSizeBytes *float64 `pulumi:"storeSizeBytes"`
	// When the store was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

func LookupAnnotationStoreOutput(ctx *pulumi.Context, args LookupAnnotationStoreOutputArgs, opts ...pulumi.InvokeOption) LookupAnnotationStoreResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAnnotationStoreResultOutput, error) {
			args := v.(LookupAnnotationStoreArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:omics:getAnnotationStore", args, LookupAnnotationStoreResultOutput{}, options).(LookupAnnotationStoreResultOutput), nil
		}).(LookupAnnotationStoreResultOutput)
}

type LookupAnnotationStoreOutputArgs struct {
	// The name of the Annotation Store.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAnnotationStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAnnotationStoreArgs)(nil)).Elem()
}

type LookupAnnotationStoreResultOutput struct{ *pulumi.OutputState }

func (LookupAnnotationStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAnnotationStoreResult)(nil)).Elem()
}

func (o LookupAnnotationStoreResultOutput) ToLookupAnnotationStoreResultOutput() LookupAnnotationStoreResultOutput {
	return o
}

func (o LookupAnnotationStoreResultOutput) ToLookupAnnotationStoreResultOutputWithContext(ctx context.Context) LookupAnnotationStoreResultOutput {
	return o
}

// When the store was created.
func (o LookupAnnotationStoreResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// A description for the store.
func (o LookupAnnotationStoreResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The store's ID.
func (o LookupAnnotationStoreResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The store's status.
func (o LookupAnnotationStoreResultOutput) Status() AnnotationStoreStoreStatusPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *AnnotationStoreStoreStatus { return v.Status }).(AnnotationStoreStoreStatusPtrOutput)
}

// The store's status message.
func (o LookupAnnotationStoreResultOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

// The store's ARN.
func (o LookupAnnotationStoreResultOutput) StoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *string { return v.StoreArn }).(pulumi.StringPtrOutput)
}

// The store's size in bytes.
func (o LookupAnnotationStoreResultOutput) StoreSizeBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *float64 { return v.StoreSizeBytes }).(pulumi.Float64PtrOutput)
}

// When the store was updated.
func (o LookupAnnotationStoreResultOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnnotationStoreResult) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAnnotationStoreResultOutput{})
}
