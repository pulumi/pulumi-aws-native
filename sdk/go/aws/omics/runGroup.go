// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package omics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Omics::RunGroup Resource Type
type RunGroup struct {
	pulumi.CustomResourceState

	Arn          pulumi.StringOutput     `pulumi:"arn"`
	CreationTime pulumi.StringOutput     `pulumi:"creationTime"`
	MaxCpus      pulumi.Float64PtrOutput `pulumi:"maxCpus"`
	MaxDuration  pulumi.Float64PtrOutput `pulumi:"maxDuration"`
	MaxRuns      pulumi.Float64PtrOutput `pulumi:"maxRuns"`
	Name         pulumi.StringPtrOutput  `pulumi:"name"`
	Tags         RunGroupTagMapPtrOutput `pulumi:"tags"`
}

// NewRunGroup registers a new resource with the given unique name, arguments, and options.
func NewRunGroup(ctx *pulumi.Context,
	name string, args *RunGroupArgs, opts ...pulumi.ResourceOption) (*RunGroup, error) {
	if args == nil {
		args = &RunGroupArgs{}
	}

	var resource RunGroup
	err := ctx.RegisterResource("aws-native:omics:RunGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRunGroup gets an existing RunGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRunGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RunGroupState, opts ...pulumi.ResourceOption) (*RunGroup, error) {
	var resource RunGroup
	err := ctx.ReadResource("aws-native:omics:RunGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RunGroup resources.
type runGroupState struct {
}

type RunGroupState struct {
}

func (RunGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*runGroupState)(nil)).Elem()
}

type runGroupArgs struct {
	MaxCpus     *float64        `pulumi:"maxCpus"`
	MaxDuration *float64        `pulumi:"maxDuration"`
	MaxRuns     *float64        `pulumi:"maxRuns"`
	Name        *string         `pulumi:"name"`
	Tags        *RunGroupTagMap `pulumi:"tags"`
}

// The set of arguments for constructing a RunGroup resource.
type RunGroupArgs struct {
	MaxCpus     pulumi.Float64PtrInput
	MaxDuration pulumi.Float64PtrInput
	MaxRuns     pulumi.Float64PtrInput
	Name        pulumi.StringPtrInput
	Tags        RunGroupTagMapPtrInput
}

func (RunGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runGroupArgs)(nil)).Elem()
}

type RunGroupInput interface {
	pulumi.Input

	ToRunGroupOutput() RunGroupOutput
	ToRunGroupOutputWithContext(ctx context.Context) RunGroupOutput
}

func (*RunGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**RunGroup)(nil)).Elem()
}

func (i *RunGroup) ToRunGroupOutput() RunGroupOutput {
	return i.ToRunGroupOutputWithContext(context.Background())
}

func (i *RunGroup) ToRunGroupOutputWithContext(ctx context.Context) RunGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunGroupOutput)
}

type RunGroupOutput struct{ *pulumi.OutputState }

func (RunGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RunGroup)(nil)).Elem()
}

func (o RunGroupOutput) ToRunGroupOutput() RunGroupOutput {
	return o
}

func (o RunGroupOutput) ToRunGroupOutputWithContext(ctx context.Context) RunGroupOutput {
	return o
}

func (o RunGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RunGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o RunGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RunGroup) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

func (o RunGroupOutput) MaxCpus() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RunGroup) pulumi.Float64PtrOutput { return v.MaxCpus }).(pulumi.Float64PtrOutput)
}

func (o RunGroupOutput) MaxDuration() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RunGroup) pulumi.Float64PtrOutput { return v.MaxDuration }).(pulumi.Float64PtrOutput)
}

func (o RunGroupOutput) MaxRuns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RunGroup) pulumi.Float64PtrOutput { return v.MaxRuns }).(pulumi.Float64PtrOutput)
}

func (o RunGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunGroup) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RunGroupOutput) Tags() RunGroupTagMapPtrOutput {
	return o.ApplyT(func(v *RunGroup) RunGroupTagMapPtrOutput { return v.Tags }).(RunGroupTagMapPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RunGroupInput)(nil)).Elem(), &RunGroup{})
	pulumi.RegisterOutputType(RunGroupOutput{})
}
