// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package omics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Omics::WorkflowVersion Resource Type.
func LookupWorkflowVersion(ctx *pulumi.Context, args *LookupWorkflowVersionArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkflowVersionResult
	err := ctx.Invoke("aws-native:omics:getWorkflowVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkflowVersionArgs struct {
	// ARN of the workflow version.
	Arn string `pulumi:"arn"`
}

type LookupWorkflowVersionResult struct {
	// ARN of the workflow version.
	Arn *string `pulumi:"arn"`
	// The creation time of the workflow version.
	CreationTime *string `pulumi:"creationTime"`
	// The description of the workflow version.
	Description *string `pulumi:"description"`
	// The status of the workflow version.
	Status          *WorkflowVersionWorkflowStatus `pulumi:"status"`
	StorageCapacity *float64                       `pulumi:"storageCapacity"`
	StorageType     *WorkflowVersionStorageType    `pulumi:"storageType"`
	Tags            map[string]string              `pulumi:"tags"`
	// The type of the workflow version.
	Type *WorkflowVersionWorkflowType `pulumi:"type"`
	Uuid *string                      `pulumi:"uuid"`
}

func LookupWorkflowVersionOutput(ctx *pulumi.Context, args LookupWorkflowVersionOutputArgs, opts ...pulumi.InvokeOption) LookupWorkflowVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkflowVersionResultOutput, error) {
			args := v.(LookupWorkflowVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:omics:getWorkflowVersion", args, LookupWorkflowVersionResultOutput{}, options).(LookupWorkflowVersionResultOutput), nil
		}).(LookupWorkflowVersionResultOutput)
}

type LookupWorkflowVersionOutputArgs struct {
	// ARN of the workflow version.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupWorkflowVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowVersionArgs)(nil)).Elem()
}

type LookupWorkflowVersionResultOutput struct{ *pulumi.OutputState }

func (LookupWorkflowVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowVersionResult)(nil)).Elem()
}

func (o LookupWorkflowVersionResultOutput) ToLookupWorkflowVersionResultOutput() LookupWorkflowVersionResultOutput {
	return o
}

func (o LookupWorkflowVersionResultOutput) ToLookupWorkflowVersionResultOutputWithContext(ctx context.Context) LookupWorkflowVersionResultOutput {
	return o
}

// ARN of the workflow version.
func (o LookupWorkflowVersionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The creation time of the workflow version.
func (o LookupWorkflowVersionResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The description of the workflow version.
func (o LookupWorkflowVersionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The status of the workflow version.
func (o LookupWorkflowVersionResultOutput) Status() WorkflowVersionWorkflowStatusPtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *WorkflowVersionWorkflowStatus { return v.Status }).(WorkflowVersionWorkflowStatusPtrOutput)
}

func (o LookupWorkflowVersionResultOutput) StorageCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *float64 { return v.StorageCapacity }).(pulumi.Float64PtrOutput)
}

func (o LookupWorkflowVersionResultOutput) StorageType() WorkflowVersionStorageTypePtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *WorkflowVersionStorageType { return v.StorageType }).(WorkflowVersionStorageTypePtrOutput)
}

func (o LookupWorkflowVersionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the workflow version.
func (o LookupWorkflowVersionResultOutput) Type() WorkflowVersionWorkflowTypePtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *WorkflowVersionWorkflowType { return v.Type }).(WorkflowVersionWorkflowTypePtrOutput)
}

func (o LookupWorkflowVersionResultOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkflowVersionResult) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkflowVersionResultOutput{})
}
