// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package omics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnnotationStoreAnnotationType string

const (
	AnnotationStoreAnnotationTypeGeneric                   = AnnotationStoreAnnotationType("GENERIC")
	AnnotationStoreAnnotationTypeChrPos                    = AnnotationStoreAnnotationType("CHR_POS")
	AnnotationStoreAnnotationTypeChrPosRefAlt              = AnnotationStoreAnnotationType("CHR_POS_REF_ALT")
	AnnotationStoreAnnotationTypeChrStartEndOneBase        = AnnotationStoreAnnotationType("CHR_START_END_ONE_BASE")
	AnnotationStoreAnnotationTypeChrStartEndRefAltOneBase  = AnnotationStoreAnnotationType("CHR_START_END_REF_ALT_ONE_BASE")
	AnnotationStoreAnnotationTypeChrStartEndZeroBase       = AnnotationStoreAnnotationType("CHR_START_END_ZERO_BASE")
	AnnotationStoreAnnotationTypeChrStartEndRefAltZeroBase = AnnotationStoreAnnotationType("CHR_START_END_REF_ALT_ZERO_BASE")
)

func (AnnotationStoreAnnotationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreAnnotationType)(nil)).Elem()
}

func (e AnnotationStoreAnnotationType) ToAnnotationStoreAnnotationTypeOutput() AnnotationStoreAnnotationTypeOutput {
	return pulumi.ToOutput(e).(AnnotationStoreAnnotationTypeOutput)
}

func (e AnnotationStoreAnnotationType) ToAnnotationStoreAnnotationTypeOutputWithContext(ctx context.Context) AnnotationStoreAnnotationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnnotationStoreAnnotationTypeOutput)
}

func (e AnnotationStoreAnnotationType) ToAnnotationStoreAnnotationTypePtrOutput() AnnotationStoreAnnotationTypePtrOutput {
	return e.ToAnnotationStoreAnnotationTypePtrOutputWithContext(context.Background())
}

func (e AnnotationStoreAnnotationType) ToAnnotationStoreAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationStoreAnnotationTypePtrOutput {
	return AnnotationStoreAnnotationType(e).ToAnnotationStoreAnnotationTypeOutputWithContext(ctx).ToAnnotationStoreAnnotationTypePtrOutputWithContext(ctx)
}

func (e AnnotationStoreAnnotationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreAnnotationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreAnnotationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnnotationStoreAnnotationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnnotationStoreAnnotationTypeOutput struct{ *pulumi.OutputState }

func (AnnotationStoreAnnotationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreAnnotationType)(nil)).Elem()
}

func (o AnnotationStoreAnnotationTypeOutput) ToAnnotationStoreAnnotationTypeOutput() AnnotationStoreAnnotationTypeOutput {
	return o
}

func (o AnnotationStoreAnnotationTypeOutput) ToAnnotationStoreAnnotationTypeOutputWithContext(ctx context.Context) AnnotationStoreAnnotationTypeOutput {
	return o
}

func (o AnnotationStoreAnnotationTypeOutput) ToAnnotationStoreAnnotationTypePtrOutput() AnnotationStoreAnnotationTypePtrOutput {
	return o.ToAnnotationStoreAnnotationTypePtrOutputWithContext(context.Background())
}

func (o AnnotationStoreAnnotationTypeOutput) ToAnnotationStoreAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationStoreAnnotationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnnotationStoreAnnotationType) *AnnotationStoreAnnotationType {
		return &v
	}).(AnnotationStoreAnnotationTypePtrOutput)
}

func (o AnnotationStoreAnnotationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnnotationStoreAnnotationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreAnnotationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnnotationStoreAnnotationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreAnnotationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreAnnotationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnnotationStoreAnnotationTypePtrOutput struct{ *pulumi.OutputState }

func (AnnotationStoreAnnotationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationStoreAnnotationType)(nil)).Elem()
}

func (o AnnotationStoreAnnotationTypePtrOutput) ToAnnotationStoreAnnotationTypePtrOutput() AnnotationStoreAnnotationTypePtrOutput {
	return o
}

func (o AnnotationStoreAnnotationTypePtrOutput) ToAnnotationStoreAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationStoreAnnotationTypePtrOutput {
	return o
}

func (o AnnotationStoreAnnotationTypePtrOutput) Elem() AnnotationStoreAnnotationTypeOutput {
	return o.ApplyT(func(v *AnnotationStoreAnnotationType) AnnotationStoreAnnotationType {
		if v != nil {
			return *v
		}
		var ret AnnotationStoreAnnotationType
		return ret
	}).(AnnotationStoreAnnotationTypeOutput)
}

func (o AnnotationStoreAnnotationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreAnnotationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnnotationStoreAnnotationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnnotationStoreAnnotationTypeInput is an input type that accepts values of the AnnotationStoreAnnotationType enum
// A concrete instance of `AnnotationStoreAnnotationTypeInput` can be one of the following:
//
//	AnnotationStoreAnnotationTypeGeneric
//	AnnotationStoreAnnotationTypeChrPos
//	AnnotationStoreAnnotationTypeChrPosRefAlt
//	AnnotationStoreAnnotationTypeChrStartEndOneBase
//	AnnotationStoreAnnotationTypeChrStartEndRefAltOneBase
//	AnnotationStoreAnnotationTypeChrStartEndZeroBase
//	AnnotationStoreAnnotationTypeChrStartEndRefAltZeroBase
type AnnotationStoreAnnotationTypeInput interface {
	pulumi.Input

	ToAnnotationStoreAnnotationTypeOutput() AnnotationStoreAnnotationTypeOutput
	ToAnnotationStoreAnnotationTypeOutputWithContext(context.Context) AnnotationStoreAnnotationTypeOutput
}

var annotationStoreAnnotationTypePtrType = reflect.TypeOf((**AnnotationStoreAnnotationType)(nil)).Elem()

type AnnotationStoreAnnotationTypePtrInput interface {
	pulumi.Input

	ToAnnotationStoreAnnotationTypePtrOutput() AnnotationStoreAnnotationTypePtrOutput
	ToAnnotationStoreAnnotationTypePtrOutputWithContext(context.Context) AnnotationStoreAnnotationTypePtrOutput
}

type annotationStoreAnnotationTypePtr string

func AnnotationStoreAnnotationTypePtr(v string) AnnotationStoreAnnotationTypePtrInput {
	return (*annotationStoreAnnotationTypePtr)(&v)
}

func (*annotationStoreAnnotationTypePtr) ElementType() reflect.Type {
	return annotationStoreAnnotationTypePtrType
}

func (in *annotationStoreAnnotationTypePtr) ToAnnotationStoreAnnotationTypePtrOutput() AnnotationStoreAnnotationTypePtrOutput {
	return pulumi.ToOutput(in).(AnnotationStoreAnnotationTypePtrOutput)
}

func (in *annotationStoreAnnotationTypePtr) ToAnnotationStoreAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationStoreAnnotationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnnotationStoreAnnotationTypePtrOutput)
}

type AnnotationStoreEncryptionType string

const (
	AnnotationStoreEncryptionTypeKms = AnnotationStoreEncryptionType("KMS")
)

func (AnnotationStoreEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreEncryptionType)(nil)).Elem()
}

func (e AnnotationStoreEncryptionType) ToAnnotationStoreEncryptionTypeOutput() AnnotationStoreEncryptionTypeOutput {
	return pulumi.ToOutput(e).(AnnotationStoreEncryptionTypeOutput)
}

func (e AnnotationStoreEncryptionType) ToAnnotationStoreEncryptionTypeOutputWithContext(ctx context.Context) AnnotationStoreEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnnotationStoreEncryptionTypeOutput)
}

func (e AnnotationStoreEncryptionType) ToAnnotationStoreEncryptionTypePtrOutput() AnnotationStoreEncryptionTypePtrOutput {
	return e.ToAnnotationStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (e AnnotationStoreEncryptionType) ToAnnotationStoreEncryptionTypePtrOutputWithContext(ctx context.Context) AnnotationStoreEncryptionTypePtrOutput {
	return AnnotationStoreEncryptionType(e).ToAnnotationStoreEncryptionTypeOutputWithContext(ctx).ToAnnotationStoreEncryptionTypePtrOutputWithContext(ctx)
}

func (e AnnotationStoreEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnnotationStoreEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnnotationStoreEncryptionTypeOutput struct{ *pulumi.OutputState }

func (AnnotationStoreEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreEncryptionType)(nil)).Elem()
}

func (o AnnotationStoreEncryptionTypeOutput) ToAnnotationStoreEncryptionTypeOutput() AnnotationStoreEncryptionTypeOutput {
	return o
}

func (o AnnotationStoreEncryptionTypeOutput) ToAnnotationStoreEncryptionTypeOutputWithContext(ctx context.Context) AnnotationStoreEncryptionTypeOutput {
	return o
}

func (o AnnotationStoreEncryptionTypeOutput) ToAnnotationStoreEncryptionTypePtrOutput() AnnotationStoreEncryptionTypePtrOutput {
	return o.ToAnnotationStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (o AnnotationStoreEncryptionTypeOutput) ToAnnotationStoreEncryptionTypePtrOutputWithContext(ctx context.Context) AnnotationStoreEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnnotationStoreEncryptionType) *AnnotationStoreEncryptionType {
		return &v
	}).(AnnotationStoreEncryptionTypePtrOutput)
}

func (o AnnotationStoreEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnnotationStoreEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnnotationStoreEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnnotationStoreEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (AnnotationStoreEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationStoreEncryptionType)(nil)).Elem()
}

func (o AnnotationStoreEncryptionTypePtrOutput) ToAnnotationStoreEncryptionTypePtrOutput() AnnotationStoreEncryptionTypePtrOutput {
	return o
}

func (o AnnotationStoreEncryptionTypePtrOutput) ToAnnotationStoreEncryptionTypePtrOutputWithContext(ctx context.Context) AnnotationStoreEncryptionTypePtrOutput {
	return o
}

func (o AnnotationStoreEncryptionTypePtrOutput) Elem() AnnotationStoreEncryptionTypeOutput {
	return o.ApplyT(func(v *AnnotationStoreEncryptionType) AnnotationStoreEncryptionType {
		if v != nil {
			return *v
		}
		var ret AnnotationStoreEncryptionType
		return ret
	}).(AnnotationStoreEncryptionTypeOutput)
}

func (o AnnotationStoreEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnnotationStoreEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnnotationStoreEncryptionTypeInput is an input type that accepts values of the AnnotationStoreEncryptionType enum
// A concrete instance of `AnnotationStoreEncryptionTypeInput` can be one of the following:
//
//	AnnotationStoreEncryptionTypeKms
type AnnotationStoreEncryptionTypeInput interface {
	pulumi.Input

	ToAnnotationStoreEncryptionTypeOutput() AnnotationStoreEncryptionTypeOutput
	ToAnnotationStoreEncryptionTypeOutputWithContext(context.Context) AnnotationStoreEncryptionTypeOutput
}

var annotationStoreEncryptionTypePtrType = reflect.TypeOf((**AnnotationStoreEncryptionType)(nil)).Elem()

type AnnotationStoreEncryptionTypePtrInput interface {
	pulumi.Input

	ToAnnotationStoreEncryptionTypePtrOutput() AnnotationStoreEncryptionTypePtrOutput
	ToAnnotationStoreEncryptionTypePtrOutputWithContext(context.Context) AnnotationStoreEncryptionTypePtrOutput
}

type annotationStoreEncryptionTypePtr string

func AnnotationStoreEncryptionTypePtr(v string) AnnotationStoreEncryptionTypePtrInput {
	return (*annotationStoreEncryptionTypePtr)(&v)
}

func (*annotationStoreEncryptionTypePtr) ElementType() reflect.Type {
	return annotationStoreEncryptionTypePtrType
}

func (in *annotationStoreEncryptionTypePtr) ToAnnotationStoreEncryptionTypePtrOutput() AnnotationStoreEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(AnnotationStoreEncryptionTypePtrOutput)
}

func (in *annotationStoreEncryptionTypePtr) ToAnnotationStoreEncryptionTypePtrOutputWithContext(ctx context.Context) AnnotationStoreEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnnotationStoreEncryptionTypePtrOutput)
}

type AnnotationStoreSchemaValueType string

const (
	AnnotationStoreSchemaValueTypeLong    = AnnotationStoreSchemaValueType("LONG")
	AnnotationStoreSchemaValueTypeInt     = AnnotationStoreSchemaValueType("INT")
	AnnotationStoreSchemaValueTypeString  = AnnotationStoreSchemaValueType("STRING")
	AnnotationStoreSchemaValueTypeFloat   = AnnotationStoreSchemaValueType("FLOAT")
	AnnotationStoreSchemaValueTypeDouble  = AnnotationStoreSchemaValueType("DOUBLE")
	AnnotationStoreSchemaValueTypeBoolean = AnnotationStoreSchemaValueType("BOOLEAN")
)

func (AnnotationStoreSchemaValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreSchemaValueType)(nil)).Elem()
}

func (e AnnotationStoreSchemaValueType) ToAnnotationStoreSchemaValueTypeOutput() AnnotationStoreSchemaValueTypeOutput {
	return pulumi.ToOutput(e).(AnnotationStoreSchemaValueTypeOutput)
}

func (e AnnotationStoreSchemaValueType) ToAnnotationStoreSchemaValueTypeOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnnotationStoreSchemaValueTypeOutput)
}

func (e AnnotationStoreSchemaValueType) ToAnnotationStoreSchemaValueTypePtrOutput() AnnotationStoreSchemaValueTypePtrOutput {
	return e.ToAnnotationStoreSchemaValueTypePtrOutputWithContext(context.Background())
}

func (e AnnotationStoreSchemaValueType) ToAnnotationStoreSchemaValueTypePtrOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypePtrOutput {
	return AnnotationStoreSchemaValueType(e).ToAnnotationStoreSchemaValueTypeOutputWithContext(ctx).ToAnnotationStoreSchemaValueTypePtrOutputWithContext(ctx)
}

func (e AnnotationStoreSchemaValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreSchemaValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreSchemaValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnnotationStoreSchemaValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnnotationStoreSchemaValueTypeOutput struct{ *pulumi.OutputState }

func (AnnotationStoreSchemaValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreSchemaValueType)(nil)).Elem()
}

func (o AnnotationStoreSchemaValueTypeOutput) ToAnnotationStoreSchemaValueTypeOutput() AnnotationStoreSchemaValueTypeOutput {
	return o
}

func (o AnnotationStoreSchemaValueTypeOutput) ToAnnotationStoreSchemaValueTypeOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypeOutput {
	return o
}

func (o AnnotationStoreSchemaValueTypeOutput) ToAnnotationStoreSchemaValueTypePtrOutput() AnnotationStoreSchemaValueTypePtrOutput {
	return o.ToAnnotationStoreSchemaValueTypePtrOutputWithContext(context.Background())
}

func (o AnnotationStoreSchemaValueTypeOutput) ToAnnotationStoreSchemaValueTypePtrOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnnotationStoreSchemaValueType) *AnnotationStoreSchemaValueType {
		return &v
	}).(AnnotationStoreSchemaValueTypePtrOutput)
}

func (o AnnotationStoreSchemaValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnnotationStoreSchemaValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreSchemaValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnnotationStoreSchemaValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreSchemaValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreSchemaValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnnotationStoreSchemaValueTypePtrOutput struct{ *pulumi.OutputState }

func (AnnotationStoreSchemaValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationStoreSchemaValueType)(nil)).Elem()
}

func (o AnnotationStoreSchemaValueTypePtrOutput) ToAnnotationStoreSchemaValueTypePtrOutput() AnnotationStoreSchemaValueTypePtrOutput {
	return o
}

func (o AnnotationStoreSchemaValueTypePtrOutput) ToAnnotationStoreSchemaValueTypePtrOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypePtrOutput {
	return o
}

func (o AnnotationStoreSchemaValueTypePtrOutput) Elem() AnnotationStoreSchemaValueTypeOutput {
	return o.ApplyT(func(v *AnnotationStoreSchemaValueType) AnnotationStoreSchemaValueType {
		if v != nil {
			return *v
		}
		var ret AnnotationStoreSchemaValueType
		return ret
	}).(AnnotationStoreSchemaValueTypeOutput)
}

func (o AnnotationStoreSchemaValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreSchemaValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnnotationStoreSchemaValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnnotationStoreSchemaValueTypeInput is an input type that accepts values of the AnnotationStoreSchemaValueType enum
// A concrete instance of `AnnotationStoreSchemaValueTypeInput` can be one of the following:
//
//	AnnotationStoreSchemaValueTypeLong
//	AnnotationStoreSchemaValueTypeInt
//	AnnotationStoreSchemaValueTypeString
//	AnnotationStoreSchemaValueTypeFloat
//	AnnotationStoreSchemaValueTypeDouble
//	AnnotationStoreSchemaValueTypeBoolean
type AnnotationStoreSchemaValueTypeInput interface {
	pulumi.Input

	ToAnnotationStoreSchemaValueTypeOutput() AnnotationStoreSchemaValueTypeOutput
	ToAnnotationStoreSchemaValueTypeOutputWithContext(context.Context) AnnotationStoreSchemaValueTypeOutput
}

var annotationStoreSchemaValueTypePtrType = reflect.TypeOf((**AnnotationStoreSchemaValueType)(nil)).Elem()

type AnnotationStoreSchemaValueTypePtrInput interface {
	pulumi.Input

	ToAnnotationStoreSchemaValueTypePtrOutput() AnnotationStoreSchemaValueTypePtrOutput
	ToAnnotationStoreSchemaValueTypePtrOutputWithContext(context.Context) AnnotationStoreSchemaValueTypePtrOutput
}

type annotationStoreSchemaValueTypePtr string

func AnnotationStoreSchemaValueTypePtr(v string) AnnotationStoreSchemaValueTypePtrInput {
	return (*annotationStoreSchemaValueTypePtr)(&v)
}

func (*annotationStoreSchemaValueTypePtr) ElementType() reflect.Type {
	return annotationStoreSchemaValueTypePtrType
}

func (in *annotationStoreSchemaValueTypePtr) ToAnnotationStoreSchemaValueTypePtrOutput() AnnotationStoreSchemaValueTypePtrOutput {
	return pulumi.ToOutput(in).(AnnotationStoreSchemaValueTypePtrOutput)
}

func (in *annotationStoreSchemaValueTypePtr) ToAnnotationStoreSchemaValueTypePtrOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnnotationStoreSchemaValueTypePtrOutput)
}

// AnnotationStoreSchemaValueTypeMapInput is an input type that accepts AnnotationStoreSchemaValueTypeMap and AnnotationStoreSchemaValueTypeMapOutput values.
// You can construct a concrete instance of `AnnotationStoreSchemaValueTypeMapInput` via:
//
//	AnnotationStoreSchemaValueTypeMap{ "key": AnnotationStoreSchemaValueTypeArgs{...} }
type AnnotationStoreSchemaValueTypeMapInput interface {
	pulumi.Input

	ToAnnotationStoreSchemaValueTypeMapOutput() AnnotationStoreSchemaValueTypeMapOutput
	ToAnnotationStoreSchemaValueTypeMapOutputWithContext(context.Context) AnnotationStoreSchemaValueTypeMapOutput
}

type AnnotationStoreSchemaValueTypeMap map[string]AnnotationStoreSchemaValueType

func (AnnotationStoreSchemaValueTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AnnotationStoreSchemaValueType)(nil)).Elem()
}

func (i AnnotationStoreSchemaValueTypeMap) ToAnnotationStoreSchemaValueTypeMapOutput() AnnotationStoreSchemaValueTypeMapOutput {
	return i.ToAnnotationStoreSchemaValueTypeMapOutputWithContext(context.Background())
}

func (i AnnotationStoreSchemaValueTypeMap) ToAnnotationStoreSchemaValueTypeMapOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnotationStoreSchemaValueTypeMapOutput)
}

type AnnotationStoreSchemaValueTypeMapOutput struct{ *pulumi.OutputState }

func (AnnotationStoreSchemaValueTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AnnotationStoreSchemaValueType)(nil)).Elem()
}

func (o AnnotationStoreSchemaValueTypeMapOutput) ToAnnotationStoreSchemaValueTypeMapOutput() AnnotationStoreSchemaValueTypeMapOutput {
	return o
}

func (o AnnotationStoreSchemaValueTypeMapOutput) ToAnnotationStoreSchemaValueTypeMapOutputWithContext(ctx context.Context) AnnotationStoreSchemaValueTypeMapOutput {
	return o
}

func (o AnnotationStoreSchemaValueTypeMapOutput) MapIndex(k pulumi.StringInput) AnnotationStoreSchemaValueTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AnnotationStoreSchemaValueType {
		return vs[0].(map[string]AnnotationStoreSchemaValueType)[vs[1].(string)]
	}).(AnnotationStoreSchemaValueTypeOutput)
}

type AnnotationStoreStoreFormat string

const (
	AnnotationStoreStoreFormatGff = AnnotationStoreStoreFormat("GFF")
	AnnotationStoreStoreFormatTsv = AnnotationStoreStoreFormat("TSV")
	AnnotationStoreStoreFormatVcf = AnnotationStoreStoreFormat("VCF")
)

func (AnnotationStoreStoreFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreStoreFormat)(nil)).Elem()
}

func (e AnnotationStoreStoreFormat) ToAnnotationStoreStoreFormatOutput() AnnotationStoreStoreFormatOutput {
	return pulumi.ToOutput(e).(AnnotationStoreStoreFormatOutput)
}

func (e AnnotationStoreStoreFormat) ToAnnotationStoreStoreFormatOutputWithContext(ctx context.Context) AnnotationStoreStoreFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnnotationStoreStoreFormatOutput)
}

func (e AnnotationStoreStoreFormat) ToAnnotationStoreStoreFormatPtrOutput() AnnotationStoreStoreFormatPtrOutput {
	return e.ToAnnotationStoreStoreFormatPtrOutputWithContext(context.Background())
}

func (e AnnotationStoreStoreFormat) ToAnnotationStoreStoreFormatPtrOutputWithContext(ctx context.Context) AnnotationStoreStoreFormatPtrOutput {
	return AnnotationStoreStoreFormat(e).ToAnnotationStoreStoreFormatOutputWithContext(ctx).ToAnnotationStoreStoreFormatPtrOutputWithContext(ctx)
}

func (e AnnotationStoreStoreFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreStoreFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationStoreStoreFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnnotationStoreStoreFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnnotationStoreStoreFormatOutput struct{ *pulumi.OutputState }

func (AnnotationStoreStoreFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreStoreFormat)(nil)).Elem()
}

func (o AnnotationStoreStoreFormatOutput) ToAnnotationStoreStoreFormatOutput() AnnotationStoreStoreFormatOutput {
	return o
}

func (o AnnotationStoreStoreFormatOutput) ToAnnotationStoreStoreFormatOutputWithContext(ctx context.Context) AnnotationStoreStoreFormatOutput {
	return o
}

func (o AnnotationStoreStoreFormatOutput) ToAnnotationStoreStoreFormatPtrOutput() AnnotationStoreStoreFormatPtrOutput {
	return o.ToAnnotationStoreStoreFormatPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreFormatOutput) ToAnnotationStoreStoreFormatPtrOutputWithContext(ctx context.Context) AnnotationStoreStoreFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnnotationStoreStoreFormat) *AnnotationStoreStoreFormat {
		return &v
	}).(AnnotationStoreStoreFormatPtrOutput)
}

func (o AnnotationStoreStoreFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreStoreFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnnotationStoreStoreFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreStoreFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnnotationStoreStoreFormatPtrOutput struct{ *pulumi.OutputState }

func (AnnotationStoreStoreFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationStoreStoreFormat)(nil)).Elem()
}

func (o AnnotationStoreStoreFormatPtrOutput) ToAnnotationStoreStoreFormatPtrOutput() AnnotationStoreStoreFormatPtrOutput {
	return o
}

func (o AnnotationStoreStoreFormatPtrOutput) ToAnnotationStoreStoreFormatPtrOutputWithContext(ctx context.Context) AnnotationStoreStoreFormatPtrOutput {
	return o
}

func (o AnnotationStoreStoreFormatPtrOutput) Elem() AnnotationStoreStoreFormatOutput {
	return o.ApplyT(func(v *AnnotationStoreStoreFormat) AnnotationStoreStoreFormat {
		if v != nil {
			return *v
		}
		var ret AnnotationStoreStoreFormat
		return ret
	}).(AnnotationStoreStoreFormatOutput)
}

func (o AnnotationStoreStoreFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnnotationStoreStoreFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnnotationStoreStoreFormatInput is an input type that accepts values of the AnnotationStoreStoreFormat enum
// A concrete instance of `AnnotationStoreStoreFormatInput` can be one of the following:
//
//	AnnotationStoreStoreFormatGff
//	AnnotationStoreStoreFormatTsv
//	AnnotationStoreStoreFormatVcf
type AnnotationStoreStoreFormatInput interface {
	pulumi.Input

	ToAnnotationStoreStoreFormatOutput() AnnotationStoreStoreFormatOutput
	ToAnnotationStoreStoreFormatOutputWithContext(context.Context) AnnotationStoreStoreFormatOutput
}

var annotationStoreStoreFormatPtrType = reflect.TypeOf((**AnnotationStoreStoreFormat)(nil)).Elem()

type AnnotationStoreStoreFormatPtrInput interface {
	pulumi.Input

	ToAnnotationStoreStoreFormatPtrOutput() AnnotationStoreStoreFormatPtrOutput
	ToAnnotationStoreStoreFormatPtrOutputWithContext(context.Context) AnnotationStoreStoreFormatPtrOutput
}

type annotationStoreStoreFormatPtr string

func AnnotationStoreStoreFormatPtr(v string) AnnotationStoreStoreFormatPtrInput {
	return (*annotationStoreStoreFormatPtr)(&v)
}

func (*annotationStoreStoreFormatPtr) ElementType() reflect.Type {
	return annotationStoreStoreFormatPtrType
}

func (in *annotationStoreStoreFormatPtr) ToAnnotationStoreStoreFormatPtrOutput() AnnotationStoreStoreFormatPtrOutput {
	return pulumi.ToOutput(in).(AnnotationStoreStoreFormatPtrOutput)
}

func (in *annotationStoreStoreFormatPtr) ToAnnotationStoreStoreFormatPtrOutputWithContext(ctx context.Context) AnnotationStoreStoreFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnnotationStoreStoreFormatPtrOutput)
}

type AnnotationStoreStoreStatus string

const (
	AnnotationStoreStoreStatusCreating = AnnotationStoreStoreStatus("CREATING")
	AnnotationStoreStoreStatusUpdating = AnnotationStoreStoreStatus("UPDATING")
	AnnotationStoreStoreStatusDeleting = AnnotationStoreStoreStatus("DELETING")
	AnnotationStoreStoreStatusActive   = AnnotationStoreStoreStatus("ACTIVE")
	AnnotationStoreStoreStatusFailed   = AnnotationStoreStoreStatus("FAILED")
)

type AnnotationStoreStoreStatusOutput struct{ *pulumi.OutputState }

func (AnnotationStoreStoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationStoreStoreStatus)(nil)).Elem()
}

func (o AnnotationStoreStoreStatusOutput) ToAnnotationStoreStoreStatusOutput() AnnotationStoreStoreStatusOutput {
	return o
}

func (o AnnotationStoreStoreStatusOutput) ToAnnotationStoreStoreStatusOutputWithContext(ctx context.Context) AnnotationStoreStoreStatusOutput {
	return o
}

func (o AnnotationStoreStoreStatusOutput) ToAnnotationStoreStoreStatusPtrOutput() AnnotationStoreStoreStatusPtrOutput {
	return o.ToAnnotationStoreStoreStatusPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreStatusOutput) ToAnnotationStoreStoreStatusPtrOutputWithContext(ctx context.Context) AnnotationStoreStoreStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnnotationStoreStoreStatus) *AnnotationStoreStoreStatus {
		return &v
	}).(AnnotationStoreStoreStatusPtrOutput)
}

func (o AnnotationStoreStoreStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreStoreStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnnotationStoreStoreStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationStoreStoreStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnnotationStoreStoreStatusPtrOutput struct{ *pulumi.OutputState }

func (AnnotationStoreStoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationStoreStoreStatus)(nil)).Elem()
}

func (o AnnotationStoreStoreStatusPtrOutput) ToAnnotationStoreStoreStatusPtrOutput() AnnotationStoreStoreStatusPtrOutput {
	return o
}

func (o AnnotationStoreStoreStatusPtrOutput) ToAnnotationStoreStoreStatusPtrOutputWithContext(ctx context.Context) AnnotationStoreStoreStatusPtrOutput {
	return o
}

func (o AnnotationStoreStoreStatusPtrOutput) Elem() AnnotationStoreStoreStatusOutput {
	return o.ApplyT(func(v *AnnotationStoreStoreStatus) AnnotationStoreStoreStatus {
		if v != nil {
			return *v
		}
		var ret AnnotationStoreStoreStatus
		return ret
	}).(AnnotationStoreStoreStatusOutput)
}

func (o AnnotationStoreStoreStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationStoreStoreStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnnotationStoreStoreStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReferenceStoreEncryptionType string

const (
	ReferenceStoreEncryptionTypeKms = ReferenceStoreEncryptionType("KMS")
)

func (ReferenceStoreEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceStoreEncryptionType)(nil)).Elem()
}

func (e ReferenceStoreEncryptionType) ToReferenceStoreEncryptionTypeOutput() ReferenceStoreEncryptionTypeOutput {
	return pulumi.ToOutput(e).(ReferenceStoreEncryptionTypeOutput)
}

func (e ReferenceStoreEncryptionType) ToReferenceStoreEncryptionTypeOutputWithContext(ctx context.Context) ReferenceStoreEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReferenceStoreEncryptionTypeOutput)
}

func (e ReferenceStoreEncryptionType) ToReferenceStoreEncryptionTypePtrOutput() ReferenceStoreEncryptionTypePtrOutput {
	return e.ToReferenceStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (e ReferenceStoreEncryptionType) ToReferenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) ReferenceStoreEncryptionTypePtrOutput {
	return ReferenceStoreEncryptionType(e).ToReferenceStoreEncryptionTypeOutputWithContext(ctx).ToReferenceStoreEncryptionTypePtrOutputWithContext(ctx)
}

func (e ReferenceStoreEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReferenceStoreEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReferenceStoreEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReferenceStoreEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReferenceStoreEncryptionTypeOutput struct{ *pulumi.OutputState }

func (ReferenceStoreEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceStoreEncryptionType)(nil)).Elem()
}

func (o ReferenceStoreEncryptionTypeOutput) ToReferenceStoreEncryptionTypeOutput() ReferenceStoreEncryptionTypeOutput {
	return o
}

func (o ReferenceStoreEncryptionTypeOutput) ToReferenceStoreEncryptionTypeOutputWithContext(ctx context.Context) ReferenceStoreEncryptionTypeOutput {
	return o
}

func (o ReferenceStoreEncryptionTypeOutput) ToReferenceStoreEncryptionTypePtrOutput() ReferenceStoreEncryptionTypePtrOutput {
	return o.ToReferenceStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (o ReferenceStoreEncryptionTypeOutput) ToReferenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) ReferenceStoreEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReferenceStoreEncryptionType) *ReferenceStoreEncryptionType {
		return &v
	}).(ReferenceStoreEncryptionTypePtrOutput)
}

func (o ReferenceStoreEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReferenceStoreEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReferenceStoreEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReferenceStoreEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReferenceStoreEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReferenceStoreEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReferenceStoreEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (ReferenceStoreEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceStoreEncryptionType)(nil)).Elem()
}

func (o ReferenceStoreEncryptionTypePtrOutput) ToReferenceStoreEncryptionTypePtrOutput() ReferenceStoreEncryptionTypePtrOutput {
	return o
}

func (o ReferenceStoreEncryptionTypePtrOutput) ToReferenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) ReferenceStoreEncryptionTypePtrOutput {
	return o
}

func (o ReferenceStoreEncryptionTypePtrOutput) Elem() ReferenceStoreEncryptionTypeOutput {
	return o.ApplyT(func(v *ReferenceStoreEncryptionType) ReferenceStoreEncryptionType {
		if v != nil {
			return *v
		}
		var ret ReferenceStoreEncryptionType
		return ret
	}).(ReferenceStoreEncryptionTypeOutput)
}

func (o ReferenceStoreEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReferenceStoreEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReferenceStoreEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReferenceStoreEncryptionTypeInput is an input type that accepts values of the ReferenceStoreEncryptionType enum
// A concrete instance of `ReferenceStoreEncryptionTypeInput` can be one of the following:
//
//	ReferenceStoreEncryptionTypeKms
type ReferenceStoreEncryptionTypeInput interface {
	pulumi.Input

	ToReferenceStoreEncryptionTypeOutput() ReferenceStoreEncryptionTypeOutput
	ToReferenceStoreEncryptionTypeOutputWithContext(context.Context) ReferenceStoreEncryptionTypeOutput
}

var referenceStoreEncryptionTypePtrType = reflect.TypeOf((**ReferenceStoreEncryptionType)(nil)).Elem()

type ReferenceStoreEncryptionTypePtrInput interface {
	pulumi.Input

	ToReferenceStoreEncryptionTypePtrOutput() ReferenceStoreEncryptionTypePtrOutput
	ToReferenceStoreEncryptionTypePtrOutputWithContext(context.Context) ReferenceStoreEncryptionTypePtrOutput
}

type referenceStoreEncryptionTypePtr string

func ReferenceStoreEncryptionTypePtr(v string) ReferenceStoreEncryptionTypePtrInput {
	return (*referenceStoreEncryptionTypePtr)(&v)
}

func (*referenceStoreEncryptionTypePtr) ElementType() reflect.Type {
	return referenceStoreEncryptionTypePtrType
}

func (in *referenceStoreEncryptionTypePtr) ToReferenceStoreEncryptionTypePtrOutput() ReferenceStoreEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(ReferenceStoreEncryptionTypePtrOutput)
}

func (in *referenceStoreEncryptionTypePtr) ToReferenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) ReferenceStoreEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReferenceStoreEncryptionTypePtrOutput)
}

type SequenceStoreEncryptionType string

const (
	SequenceStoreEncryptionTypeKms = SequenceStoreEncryptionType("KMS")
)

func (SequenceStoreEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*SequenceStoreEncryptionType)(nil)).Elem()
}

func (e SequenceStoreEncryptionType) ToSequenceStoreEncryptionTypeOutput() SequenceStoreEncryptionTypeOutput {
	return pulumi.ToOutput(e).(SequenceStoreEncryptionTypeOutput)
}

func (e SequenceStoreEncryptionType) ToSequenceStoreEncryptionTypeOutputWithContext(ctx context.Context) SequenceStoreEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SequenceStoreEncryptionTypeOutput)
}

func (e SequenceStoreEncryptionType) ToSequenceStoreEncryptionTypePtrOutput() SequenceStoreEncryptionTypePtrOutput {
	return e.ToSequenceStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (e SequenceStoreEncryptionType) ToSequenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) SequenceStoreEncryptionTypePtrOutput {
	return SequenceStoreEncryptionType(e).ToSequenceStoreEncryptionTypeOutputWithContext(ctx).ToSequenceStoreEncryptionTypePtrOutputWithContext(ctx)
}

func (e SequenceStoreEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SequenceStoreEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SequenceStoreEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SequenceStoreEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SequenceStoreEncryptionTypeOutput struct{ *pulumi.OutputState }

func (SequenceStoreEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SequenceStoreEncryptionType)(nil)).Elem()
}

func (o SequenceStoreEncryptionTypeOutput) ToSequenceStoreEncryptionTypeOutput() SequenceStoreEncryptionTypeOutput {
	return o
}

func (o SequenceStoreEncryptionTypeOutput) ToSequenceStoreEncryptionTypeOutputWithContext(ctx context.Context) SequenceStoreEncryptionTypeOutput {
	return o
}

func (o SequenceStoreEncryptionTypeOutput) ToSequenceStoreEncryptionTypePtrOutput() SequenceStoreEncryptionTypePtrOutput {
	return o.ToSequenceStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (o SequenceStoreEncryptionTypeOutput) ToSequenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) SequenceStoreEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SequenceStoreEncryptionType) *SequenceStoreEncryptionType {
		return &v
	}).(SequenceStoreEncryptionTypePtrOutput)
}

func (o SequenceStoreEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SequenceStoreEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SequenceStoreEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SequenceStoreEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SequenceStoreEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SequenceStoreEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SequenceStoreEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (SequenceStoreEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SequenceStoreEncryptionType)(nil)).Elem()
}

func (o SequenceStoreEncryptionTypePtrOutput) ToSequenceStoreEncryptionTypePtrOutput() SequenceStoreEncryptionTypePtrOutput {
	return o
}

func (o SequenceStoreEncryptionTypePtrOutput) ToSequenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) SequenceStoreEncryptionTypePtrOutput {
	return o
}

func (o SequenceStoreEncryptionTypePtrOutput) Elem() SequenceStoreEncryptionTypeOutput {
	return o.ApplyT(func(v *SequenceStoreEncryptionType) SequenceStoreEncryptionType {
		if v != nil {
			return *v
		}
		var ret SequenceStoreEncryptionType
		return ret
	}).(SequenceStoreEncryptionTypeOutput)
}

func (o SequenceStoreEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SequenceStoreEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SequenceStoreEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SequenceStoreEncryptionTypeInput is an input type that accepts values of the SequenceStoreEncryptionType enum
// A concrete instance of `SequenceStoreEncryptionTypeInput` can be one of the following:
//
//	SequenceStoreEncryptionTypeKms
type SequenceStoreEncryptionTypeInput interface {
	pulumi.Input

	ToSequenceStoreEncryptionTypeOutput() SequenceStoreEncryptionTypeOutput
	ToSequenceStoreEncryptionTypeOutputWithContext(context.Context) SequenceStoreEncryptionTypeOutput
}

var sequenceStoreEncryptionTypePtrType = reflect.TypeOf((**SequenceStoreEncryptionType)(nil)).Elem()

type SequenceStoreEncryptionTypePtrInput interface {
	pulumi.Input

	ToSequenceStoreEncryptionTypePtrOutput() SequenceStoreEncryptionTypePtrOutput
	ToSequenceStoreEncryptionTypePtrOutputWithContext(context.Context) SequenceStoreEncryptionTypePtrOutput
}

type sequenceStoreEncryptionTypePtr string

func SequenceStoreEncryptionTypePtr(v string) SequenceStoreEncryptionTypePtrInput {
	return (*sequenceStoreEncryptionTypePtr)(&v)
}

func (*sequenceStoreEncryptionTypePtr) ElementType() reflect.Type {
	return sequenceStoreEncryptionTypePtrType
}

func (in *sequenceStoreEncryptionTypePtr) ToSequenceStoreEncryptionTypePtrOutput() SequenceStoreEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(SequenceStoreEncryptionTypePtrOutput)
}

func (in *sequenceStoreEncryptionTypePtr) ToSequenceStoreEncryptionTypePtrOutputWithContext(ctx context.Context) SequenceStoreEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SequenceStoreEncryptionTypePtrOutput)
}

type VariantStoreEncryptionType string

const (
	VariantStoreEncryptionTypeKms = VariantStoreEncryptionType("KMS")
)

func (VariantStoreEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*VariantStoreEncryptionType)(nil)).Elem()
}

func (e VariantStoreEncryptionType) ToVariantStoreEncryptionTypeOutput() VariantStoreEncryptionTypeOutput {
	return pulumi.ToOutput(e).(VariantStoreEncryptionTypeOutput)
}

func (e VariantStoreEncryptionType) ToVariantStoreEncryptionTypeOutputWithContext(ctx context.Context) VariantStoreEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VariantStoreEncryptionTypeOutput)
}

func (e VariantStoreEncryptionType) ToVariantStoreEncryptionTypePtrOutput() VariantStoreEncryptionTypePtrOutput {
	return e.ToVariantStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (e VariantStoreEncryptionType) ToVariantStoreEncryptionTypePtrOutputWithContext(ctx context.Context) VariantStoreEncryptionTypePtrOutput {
	return VariantStoreEncryptionType(e).ToVariantStoreEncryptionTypeOutputWithContext(ctx).ToVariantStoreEncryptionTypePtrOutputWithContext(ctx)
}

func (e VariantStoreEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VariantStoreEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VariantStoreEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VariantStoreEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VariantStoreEncryptionTypeOutput struct{ *pulumi.OutputState }

func (VariantStoreEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariantStoreEncryptionType)(nil)).Elem()
}

func (o VariantStoreEncryptionTypeOutput) ToVariantStoreEncryptionTypeOutput() VariantStoreEncryptionTypeOutput {
	return o
}

func (o VariantStoreEncryptionTypeOutput) ToVariantStoreEncryptionTypeOutputWithContext(ctx context.Context) VariantStoreEncryptionTypeOutput {
	return o
}

func (o VariantStoreEncryptionTypeOutput) ToVariantStoreEncryptionTypePtrOutput() VariantStoreEncryptionTypePtrOutput {
	return o.ToVariantStoreEncryptionTypePtrOutputWithContext(context.Background())
}

func (o VariantStoreEncryptionTypeOutput) ToVariantStoreEncryptionTypePtrOutputWithContext(ctx context.Context) VariantStoreEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariantStoreEncryptionType) *VariantStoreEncryptionType {
		return &v
	}).(VariantStoreEncryptionTypePtrOutput)
}

func (o VariantStoreEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VariantStoreEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VariantStoreEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VariantStoreEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VariantStoreEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VariantStoreEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VariantStoreEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (VariantStoreEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariantStoreEncryptionType)(nil)).Elem()
}

func (o VariantStoreEncryptionTypePtrOutput) ToVariantStoreEncryptionTypePtrOutput() VariantStoreEncryptionTypePtrOutput {
	return o
}

func (o VariantStoreEncryptionTypePtrOutput) ToVariantStoreEncryptionTypePtrOutputWithContext(ctx context.Context) VariantStoreEncryptionTypePtrOutput {
	return o
}

func (o VariantStoreEncryptionTypePtrOutput) Elem() VariantStoreEncryptionTypeOutput {
	return o.ApplyT(func(v *VariantStoreEncryptionType) VariantStoreEncryptionType {
		if v != nil {
			return *v
		}
		var ret VariantStoreEncryptionType
		return ret
	}).(VariantStoreEncryptionTypeOutput)
}

func (o VariantStoreEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VariantStoreEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VariantStoreEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VariantStoreEncryptionTypeInput is an input type that accepts values of the VariantStoreEncryptionType enum
// A concrete instance of `VariantStoreEncryptionTypeInput` can be one of the following:
//
//	VariantStoreEncryptionTypeKms
type VariantStoreEncryptionTypeInput interface {
	pulumi.Input

	ToVariantStoreEncryptionTypeOutput() VariantStoreEncryptionTypeOutput
	ToVariantStoreEncryptionTypeOutputWithContext(context.Context) VariantStoreEncryptionTypeOutput
}

var variantStoreEncryptionTypePtrType = reflect.TypeOf((**VariantStoreEncryptionType)(nil)).Elem()

type VariantStoreEncryptionTypePtrInput interface {
	pulumi.Input

	ToVariantStoreEncryptionTypePtrOutput() VariantStoreEncryptionTypePtrOutput
	ToVariantStoreEncryptionTypePtrOutputWithContext(context.Context) VariantStoreEncryptionTypePtrOutput
}

type variantStoreEncryptionTypePtr string

func VariantStoreEncryptionTypePtr(v string) VariantStoreEncryptionTypePtrInput {
	return (*variantStoreEncryptionTypePtr)(&v)
}

func (*variantStoreEncryptionTypePtr) ElementType() reflect.Type {
	return variantStoreEncryptionTypePtrType
}

func (in *variantStoreEncryptionTypePtr) ToVariantStoreEncryptionTypePtrOutput() VariantStoreEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(VariantStoreEncryptionTypePtrOutput)
}

func (in *variantStoreEncryptionTypePtr) ToVariantStoreEncryptionTypePtrOutputWithContext(ctx context.Context) VariantStoreEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VariantStoreEncryptionTypePtrOutput)
}

type VariantStoreStoreStatus string

const (
	VariantStoreStoreStatusCreating = VariantStoreStoreStatus("CREATING")
	VariantStoreStoreStatusUpdating = VariantStoreStoreStatus("UPDATING")
	VariantStoreStoreStatusDeleting = VariantStoreStoreStatus("DELETING")
	VariantStoreStoreStatusActive   = VariantStoreStoreStatus("ACTIVE")
	VariantStoreStoreStatusFailed   = VariantStoreStoreStatus("FAILED")
)

type VariantStoreStoreStatusOutput struct{ *pulumi.OutputState }

func (VariantStoreStoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariantStoreStoreStatus)(nil)).Elem()
}

func (o VariantStoreStoreStatusOutput) ToVariantStoreStoreStatusOutput() VariantStoreStoreStatusOutput {
	return o
}

func (o VariantStoreStoreStatusOutput) ToVariantStoreStoreStatusOutputWithContext(ctx context.Context) VariantStoreStoreStatusOutput {
	return o
}

func (o VariantStoreStoreStatusOutput) ToVariantStoreStoreStatusPtrOutput() VariantStoreStoreStatusPtrOutput {
	return o.ToVariantStoreStoreStatusPtrOutputWithContext(context.Background())
}

func (o VariantStoreStoreStatusOutput) ToVariantStoreStoreStatusPtrOutputWithContext(ctx context.Context) VariantStoreStoreStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariantStoreStoreStatus) *VariantStoreStoreStatus {
		return &v
	}).(VariantStoreStoreStatusPtrOutput)
}

func (o VariantStoreStoreStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VariantStoreStoreStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VariantStoreStoreStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VariantStoreStoreStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VariantStoreStoreStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VariantStoreStoreStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VariantStoreStoreStatusPtrOutput struct{ *pulumi.OutputState }

func (VariantStoreStoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariantStoreStoreStatus)(nil)).Elem()
}

func (o VariantStoreStoreStatusPtrOutput) ToVariantStoreStoreStatusPtrOutput() VariantStoreStoreStatusPtrOutput {
	return o
}

func (o VariantStoreStoreStatusPtrOutput) ToVariantStoreStoreStatusPtrOutputWithContext(ctx context.Context) VariantStoreStoreStatusPtrOutput {
	return o
}

func (o VariantStoreStoreStatusPtrOutput) Elem() VariantStoreStoreStatusOutput {
	return o.ApplyT(func(v *VariantStoreStoreStatus) VariantStoreStoreStatus {
		if v != nil {
			return *v
		}
		var ret VariantStoreStoreStatus
		return ret
	}).(VariantStoreStoreStatusOutput)
}

func (o VariantStoreStoreStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VariantStoreStoreStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VariantStoreStoreStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowAccelerators string

const (
	WorkflowAcceleratorsGpu = WorkflowAccelerators("GPU")
)

func (WorkflowAccelerators) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccelerators)(nil)).Elem()
}

func (e WorkflowAccelerators) ToWorkflowAcceleratorsOutput() WorkflowAcceleratorsOutput {
	return pulumi.ToOutput(e).(WorkflowAcceleratorsOutput)
}

func (e WorkflowAccelerators) ToWorkflowAcceleratorsOutputWithContext(ctx context.Context) WorkflowAcceleratorsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkflowAcceleratorsOutput)
}

func (e WorkflowAccelerators) ToWorkflowAcceleratorsPtrOutput() WorkflowAcceleratorsPtrOutput {
	return e.ToWorkflowAcceleratorsPtrOutputWithContext(context.Background())
}

func (e WorkflowAccelerators) ToWorkflowAcceleratorsPtrOutputWithContext(ctx context.Context) WorkflowAcceleratorsPtrOutput {
	return WorkflowAccelerators(e).ToWorkflowAcceleratorsOutputWithContext(ctx).ToWorkflowAcceleratorsPtrOutputWithContext(ctx)
}

func (e WorkflowAccelerators) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowAccelerators) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowAccelerators) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkflowAccelerators) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkflowAcceleratorsOutput struct{ *pulumi.OutputState }

func (WorkflowAcceleratorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccelerators)(nil)).Elem()
}

func (o WorkflowAcceleratorsOutput) ToWorkflowAcceleratorsOutput() WorkflowAcceleratorsOutput {
	return o
}

func (o WorkflowAcceleratorsOutput) ToWorkflowAcceleratorsOutputWithContext(ctx context.Context) WorkflowAcceleratorsOutput {
	return o
}

func (o WorkflowAcceleratorsOutput) ToWorkflowAcceleratorsPtrOutput() WorkflowAcceleratorsPtrOutput {
	return o.ToWorkflowAcceleratorsPtrOutputWithContext(context.Background())
}

func (o WorkflowAcceleratorsOutput) ToWorkflowAcceleratorsPtrOutputWithContext(ctx context.Context) WorkflowAcceleratorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccelerators) *WorkflowAccelerators {
		return &v
	}).(WorkflowAcceleratorsPtrOutput)
}

func (o WorkflowAcceleratorsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowAcceleratorsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowAccelerators) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowAcceleratorsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowAcceleratorsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowAccelerators) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowAcceleratorsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAcceleratorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccelerators)(nil)).Elem()
}

func (o WorkflowAcceleratorsPtrOutput) ToWorkflowAcceleratorsPtrOutput() WorkflowAcceleratorsPtrOutput {
	return o
}

func (o WorkflowAcceleratorsPtrOutput) ToWorkflowAcceleratorsPtrOutputWithContext(ctx context.Context) WorkflowAcceleratorsPtrOutput {
	return o
}

func (o WorkflowAcceleratorsPtrOutput) Elem() WorkflowAcceleratorsOutput {
	return o.ApplyT(func(v *WorkflowAccelerators) WorkflowAccelerators {
		if v != nil {
			return *v
		}
		var ret WorkflowAccelerators
		return ret
	}).(WorkflowAcceleratorsOutput)
}

func (o WorkflowAcceleratorsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowAcceleratorsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowAccelerators) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkflowAcceleratorsInput is an input type that accepts values of the WorkflowAccelerators enum
// A concrete instance of `WorkflowAcceleratorsInput` can be one of the following:
//
//	WorkflowAcceleratorsGpu
type WorkflowAcceleratorsInput interface {
	pulumi.Input

	ToWorkflowAcceleratorsOutput() WorkflowAcceleratorsOutput
	ToWorkflowAcceleratorsOutputWithContext(context.Context) WorkflowAcceleratorsOutput
}

var workflowAcceleratorsPtrType = reflect.TypeOf((**WorkflowAccelerators)(nil)).Elem()

type WorkflowAcceleratorsPtrInput interface {
	pulumi.Input

	ToWorkflowAcceleratorsPtrOutput() WorkflowAcceleratorsPtrOutput
	ToWorkflowAcceleratorsPtrOutputWithContext(context.Context) WorkflowAcceleratorsPtrOutput
}

type workflowAcceleratorsPtr string

func WorkflowAcceleratorsPtr(v string) WorkflowAcceleratorsPtrInput {
	return (*workflowAcceleratorsPtr)(&v)
}

func (*workflowAcceleratorsPtr) ElementType() reflect.Type {
	return workflowAcceleratorsPtrType
}

func (in *workflowAcceleratorsPtr) ToWorkflowAcceleratorsPtrOutput() WorkflowAcceleratorsPtrOutput {
	return pulumi.ToOutput(in).(WorkflowAcceleratorsPtrOutput)
}

func (in *workflowAcceleratorsPtr) ToWorkflowAcceleratorsPtrOutputWithContext(ctx context.Context) WorkflowAcceleratorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkflowAcceleratorsPtrOutput)
}

type WorkflowEngine string

const (
	WorkflowEngineWdl      = WorkflowEngine("WDL")
	WorkflowEngineNextflow = WorkflowEngine("NEXTFLOW")
	WorkflowEngineCwl      = WorkflowEngine("CWL")
)

func (WorkflowEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEngine)(nil)).Elem()
}

func (e WorkflowEngine) ToWorkflowEngineOutput() WorkflowEngineOutput {
	return pulumi.ToOutput(e).(WorkflowEngineOutput)
}

func (e WorkflowEngine) ToWorkflowEngineOutputWithContext(ctx context.Context) WorkflowEngineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkflowEngineOutput)
}

func (e WorkflowEngine) ToWorkflowEnginePtrOutput() WorkflowEnginePtrOutput {
	return e.ToWorkflowEnginePtrOutputWithContext(context.Background())
}

func (e WorkflowEngine) ToWorkflowEnginePtrOutputWithContext(ctx context.Context) WorkflowEnginePtrOutput {
	return WorkflowEngine(e).ToWorkflowEngineOutputWithContext(ctx).ToWorkflowEnginePtrOutputWithContext(ctx)
}

func (e WorkflowEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkflowEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkflowEngineOutput struct{ *pulumi.OutputState }

func (WorkflowEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEngine)(nil)).Elem()
}

func (o WorkflowEngineOutput) ToWorkflowEngineOutput() WorkflowEngineOutput {
	return o
}

func (o WorkflowEngineOutput) ToWorkflowEngineOutputWithContext(ctx context.Context) WorkflowEngineOutput {
	return o
}

func (o WorkflowEngineOutput) ToWorkflowEnginePtrOutput() WorkflowEnginePtrOutput {
	return o.ToWorkflowEnginePtrOutputWithContext(context.Background())
}

func (o WorkflowEngineOutput) ToWorkflowEnginePtrOutputWithContext(ctx context.Context) WorkflowEnginePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowEngine) *WorkflowEngine {
		return &v
	}).(WorkflowEnginePtrOutput)
}

func (o WorkflowEngineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowEngineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowEngine) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowEngineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowEngineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowEngine) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowEnginePtrOutput struct{ *pulumi.OutputState }

func (WorkflowEnginePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowEngine)(nil)).Elem()
}

func (o WorkflowEnginePtrOutput) ToWorkflowEnginePtrOutput() WorkflowEnginePtrOutput {
	return o
}

func (o WorkflowEnginePtrOutput) ToWorkflowEnginePtrOutputWithContext(ctx context.Context) WorkflowEnginePtrOutput {
	return o
}

func (o WorkflowEnginePtrOutput) Elem() WorkflowEngineOutput {
	return o.ApplyT(func(v *WorkflowEngine) WorkflowEngine {
		if v != nil {
			return *v
		}
		var ret WorkflowEngine
		return ret
	}).(WorkflowEngineOutput)
}

func (o WorkflowEnginePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowEnginePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowEngine) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkflowEngineInput is an input type that accepts values of the WorkflowEngine enum
// A concrete instance of `WorkflowEngineInput` can be one of the following:
//
//	WorkflowEngineWdl
//	WorkflowEngineNextflow
//	WorkflowEngineCwl
type WorkflowEngineInput interface {
	pulumi.Input

	ToWorkflowEngineOutput() WorkflowEngineOutput
	ToWorkflowEngineOutputWithContext(context.Context) WorkflowEngineOutput
}

var workflowEnginePtrType = reflect.TypeOf((**WorkflowEngine)(nil)).Elem()

type WorkflowEnginePtrInput interface {
	pulumi.Input

	ToWorkflowEnginePtrOutput() WorkflowEnginePtrOutput
	ToWorkflowEnginePtrOutputWithContext(context.Context) WorkflowEnginePtrOutput
}

type workflowEnginePtr string

func WorkflowEnginePtr(v string) WorkflowEnginePtrInput {
	return (*workflowEnginePtr)(&v)
}

func (*workflowEnginePtr) ElementType() reflect.Type {
	return workflowEnginePtrType
}

func (in *workflowEnginePtr) ToWorkflowEnginePtrOutput() WorkflowEnginePtrOutput {
	return pulumi.ToOutput(in).(WorkflowEnginePtrOutput)
}

func (in *workflowEnginePtr) ToWorkflowEnginePtrOutputWithContext(ctx context.Context) WorkflowEnginePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkflowEnginePtrOutput)
}

type WorkflowStatus string

const (
	WorkflowStatusCreating = WorkflowStatus("CREATING")
	WorkflowStatusActive   = WorkflowStatus("ACTIVE")
	WorkflowStatusUpdating = WorkflowStatus("UPDATING")
	WorkflowStatusDeleted  = WorkflowStatus("DELETED")
	WorkflowStatusFailed   = WorkflowStatus("FAILED")
)

type WorkflowStatusOutput struct{ *pulumi.OutputState }

func (WorkflowStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStatus)(nil)).Elem()
}

func (o WorkflowStatusOutput) ToWorkflowStatusOutput() WorkflowStatusOutput {
	return o
}

func (o WorkflowStatusOutput) ToWorkflowStatusOutputWithContext(ctx context.Context) WorkflowStatusOutput {
	return o
}

func (o WorkflowStatusOutput) ToWorkflowStatusPtrOutput() WorkflowStatusPtrOutput {
	return o.ToWorkflowStatusPtrOutputWithContext(context.Background())
}

func (o WorkflowStatusOutput) ToWorkflowStatusPtrOutputWithContext(ctx context.Context) WorkflowStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStatus) *WorkflowStatus {
		return &v
	}).(WorkflowStatusPtrOutput)
}

func (o WorkflowStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowStatusPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStatus)(nil)).Elem()
}

func (o WorkflowStatusPtrOutput) ToWorkflowStatusPtrOutput() WorkflowStatusPtrOutput {
	return o
}

func (o WorkflowStatusPtrOutput) ToWorkflowStatusPtrOutputWithContext(ctx context.Context) WorkflowStatusPtrOutput {
	return o
}

func (o WorkflowStatusPtrOutput) Elem() WorkflowStatusOutput {
	return o.ApplyT(func(v *WorkflowStatus) WorkflowStatus {
		if v != nil {
			return *v
		}
		var ret WorkflowStatus
		return ret
	}).(WorkflowStatusOutput)
}

func (o WorkflowStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowType string

const (
	WorkflowTypePrivate = WorkflowType("PRIVATE")
)

type WorkflowTypeOutput struct{ *pulumi.OutputState }

func (WorkflowTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowType)(nil)).Elem()
}

func (o WorkflowTypeOutput) ToWorkflowTypeOutput() WorkflowTypeOutput {
	return o
}

func (o WorkflowTypeOutput) ToWorkflowTypeOutputWithContext(ctx context.Context) WorkflowTypeOutput {
	return o
}

func (o WorkflowTypeOutput) ToWorkflowTypePtrOutput() WorkflowTypePtrOutput {
	return o.ToWorkflowTypePtrOutputWithContext(context.Background())
}

func (o WorkflowTypeOutput) ToWorkflowTypePtrOutputWithContext(ctx context.Context) WorkflowTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowType) *WorkflowType {
		return &v
	}).(WorkflowTypePtrOutput)
}

func (o WorkflowTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowTypePtrOutput struct{ *pulumi.OutputState }

func (WorkflowTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowType)(nil)).Elem()
}

func (o WorkflowTypePtrOutput) ToWorkflowTypePtrOutput() WorkflowTypePtrOutput {
	return o
}

func (o WorkflowTypePtrOutput) ToWorkflowTypePtrOutputWithContext(ctx context.Context) WorkflowTypePtrOutput {
	return o
}

func (o WorkflowTypePtrOutput) Elem() WorkflowTypeOutput {
	return o.ApplyT(func(v *WorkflowType) WorkflowType {
		if v != nil {
			return *v
		}
		var ret WorkflowType
		return ret
	}).(WorkflowTypeOutput)
}

func (o WorkflowTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreAnnotationTypeInput)(nil)).Elem(), AnnotationStoreAnnotationType("GENERIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreAnnotationTypePtrInput)(nil)).Elem(), AnnotationStoreAnnotationType("GENERIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreEncryptionTypeInput)(nil)).Elem(), AnnotationStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreEncryptionTypePtrInput)(nil)).Elem(), AnnotationStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreSchemaValueTypeInput)(nil)).Elem(), AnnotationStoreSchemaValueType("LONG"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreSchemaValueTypePtrInput)(nil)).Elem(), AnnotationStoreSchemaValueType("LONG"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreSchemaValueTypeMapInput)(nil)).Elem(), AnnotationStoreSchemaValueTypeMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreStoreFormatInput)(nil)).Elem(), AnnotationStoreStoreFormat("GFF"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationStoreStoreFormatPtrInput)(nil)).Elem(), AnnotationStoreStoreFormat("GFF"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReferenceStoreEncryptionTypeInput)(nil)).Elem(), ReferenceStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReferenceStoreEncryptionTypePtrInput)(nil)).Elem(), ReferenceStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SequenceStoreEncryptionTypeInput)(nil)).Elem(), SequenceStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SequenceStoreEncryptionTypePtrInput)(nil)).Elem(), SequenceStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*VariantStoreEncryptionTypeInput)(nil)).Elem(), VariantStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*VariantStoreEncryptionTypePtrInput)(nil)).Elem(), VariantStoreEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAcceleratorsInput)(nil)).Elem(), WorkflowAccelerators("GPU"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAcceleratorsPtrInput)(nil)).Elem(), WorkflowAccelerators("GPU"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEngineInput)(nil)).Elem(), WorkflowEngine("WDL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnginePtrInput)(nil)).Elem(), WorkflowEngine("WDL"))
	pulumi.RegisterOutputType(AnnotationStoreAnnotationTypeOutput{})
	pulumi.RegisterOutputType(AnnotationStoreAnnotationTypePtrOutput{})
	pulumi.RegisterOutputType(AnnotationStoreEncryptionTypeOutput{})
	pulumi.RegisterOutputType(AnnotationStoreEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(AnnotationStoreSchemaValueTypeOutput{})
	pulumi.RegisterOutputType(AnnotationStoreSchemaValueTypePtrOutput{})
	pulumi.RegisterOutputType(AnnotationStoreSchemaValueTypeMapOutput{})
	pulumi.RegisterOutputType(AnnotationStoreStoreFormatOutput{})
	pulumi.RegisterOutputType(AnnotationStoreStoreFormatPtrOutput{})
	pulumi.RegisterOutputType(AnnotationStoreStoreStatusOutput{})
	pulumi.RegisterOutputType(AnnotationStoreStoreStatusPtrOutput{})
	pulumi.RegisterOutputType(ReferenceStoreEncryptionTypeOutput{})
	pulumi.RegisterOutputType(ReferenceStoreEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(SequenceStoreEncryptionTypeOutput{})
	pulumi.RegisterOutputType(SequenceStoreEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(VariantStoreEncryptionTypeOutput{})
	pulumi.RegisterOutputType(VariantStoreEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(VariantStoreStoreStatusOutput{})
	pulumi.RegisterOutputType(VariantStoreStoreStatusPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAcceleratorsOutput{})
	pulumi.RegisterOutputType(WorkflowAcceleratorsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowEngineOutput{})
	pulumi.RegisterOutputType(WorkflowEnginePtrOutput{})
	pulumi.RegisterOutputType(WorkflowStatusOutput{})
	pulumi.RegisterOutputType(WorkflowStatusPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTypeOutput{})
	pulumi.RegisterOutputType(WorkflowTypePtrOutput{})
}
