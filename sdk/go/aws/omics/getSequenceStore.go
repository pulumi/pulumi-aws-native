// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package omics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Omics::SequenceStore Resource Type
func LookupSequenceStore(ctx *pulumi.Context, args *LookupSequenceStoreArgs, opts ...pulumi.InvokeOption) (*LookupSequenceStoreResult, error) {
	var rv LookupSequenceStoreResult
	err := ctx.Invoke("aws-native:omics:getSequenceStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSequenceStoreArgs struct {
	SequenceStoreId string `pulumi:"sequenceStoreId"`
}

type LookupSequenceStoreResult struct {
	// The store's ARN.
	Arn *string `pulumi:"arn"`
	// When the store was created.
	CreationTime    *string `pulumi:"creationTime"`
	SequenceStoreId *string `pulumi:"sequenceStoreId"`
}

func LookupSequenceStoreOutput(ctx *pulumi.Context, args LookupSequenceStoreOutputArgs, opts ...pulumi.InvokeOption) LookupSequenceStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSequenceStoreResult, error) {
			args := v.(LookupSequenceStoreArgs)
			r, err := LookupSequenceStore(ctx, &args, opts...)
			var s LookupSequenceStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSequenceStoreResultOutput)
}

type LookupSequenceStoreOutputArgs struct {
	SequenceStoreId pulumi.StringInput `pulumi:"sequenceStoreId"`
}

func (LookupSequenceStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSequenceStoreArgs)(nil)).Elem()
}

type LookupSequenceStoreResultOutput struct{ *pulumi.OutputState }

func (LookupSequenceStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSequenceStoreResult)(nil)).Elem()
}

func (o LookupSequenceStoreResultOutput) ToLookupSequenceStoreResultOutput() LookupSequenceStoreResultOutput {
	return o
}

func (o LookupSequenceStoreResultOutput) ToLookupSequenceStoreResultOutputWithContext(ctx context.Context) LookupSequenceStoreResultOutput {
	return o
}

// The store's ARN.
func (o LookupSequenceStoreResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSequenceStoreResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// When the store was created.
func (o LookupSequenceStoreResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSequenceStoreResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

func (o LookupSequenceStoreResultOutput) SequenceStoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSequenceStoreResult) *string { return v.SequenceStoreId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSequenceStoreResultOutput{})
}
