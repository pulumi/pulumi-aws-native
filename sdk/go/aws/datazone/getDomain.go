// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A domain is an organizing entity for connecting together assets, users, and their projects
func LookupDomain(ctx *pulumi.Context, args *LookupDomainArgs, opts ...pulumi.InvokeOption) (*LookupDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainResult
	err := ctx.Invoke("aws-native:datazone:getDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainArgs struct {
	// The id of the Amazon DataZone domain.
	Id string `pulumi:"id"`
}

type LookupDomainResult struct {
	// The ARN of the Amazon DataZone domain.
	Arn *string `pulumi:"arn"`
	// The timestamp of when the Amazon DataZone domain was last updated.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the Amazon DataZone domain.
	Description *string `pulumi:"description"`
	// The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
	DomainExecutionRole *string `pulumi:"domainExecutionRole"`
	// The id of the Amazon DataZone domain.
	Id *string `pulumi:"id"`
	// The timestamp of when the Amazon DataZone domain was last updated.
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The identifier of the AWS account that manages the domain.
	ManagedAccountId *string `pulumi:"managedAccountId"`
	// The name of the Amazon DataZone domain.
	Name *string `pulumi:"name"`
	// The URL of the data portal for this Amazon DataZone domain.
	PortalUrl *string `pulumi:"portalUrl"`
	// The single-sign on configuration of the Amazon DataZone domain.
	SingleSignOn *DomainSingleSignOn `pulumi:"singleSignOn"`
	// The status of the Amazon DataZone domain.
	Status *DomainStatus `pulumi:"status"`
	// The tags specified for the Amazon DataZone domain.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDomainOutput(ctx *pulumi.Context, args LookupDomainOutputArgs, opts ...pulumi.InvokeOption) LookupDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainResult, error) {
			args := v.(LookupDomainArgs)
			r, err := LookupDomain(ctx, &args, opts...)
			var s LookupDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainResultOutput)
}

type LookupDomainOutputArgs struct {
	// The id of the Amazon DataZone domain.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainArgs)(nil)).Elem()
}

type LookupDomainResultOutput struct{ *pulumi.OutputState }

func (LookupDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainResult)(nil)).Elem()
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutput() LookupDomainResultOutput {
	return o
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutputWithContext(ctx context.Context) LookupDomainResultOutput {
	return o
}

// The ARN of the Amazon DataZone domain.
func (o LookupDomainResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The timestamp of when the Amazon DataZone domain was last updated.
func (o LookupDomainResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The description of the Amazon DataZone domain.
func (o LookupDomainResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
func (o LookupDomainResultOutput) DomainExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.DomainExecutionRole }).(pulumi.StringPtrOutput)
}

// The id of the Amazon DataZone domain.
func (o LookupDomainResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timestamp of when the Amazon DataZone domain was last updated.
func (o LookupDomainResultOutput) LastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.LastUpdatedAt }).(pulumi.StringPtrOutput)
}

// The identifier of the AWS account that manages the domain.
func (o LookupDomainResultOutput) ManagedAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.ManagedAccountId }).(pulumi.StringPtrOutput)
}

// The name of the Amazon DataZone domain.
func (o LookupDomainResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The URL of the data portal for this Amazon DataZone domain.
func (o LookupDomainResultOutput) PortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.PortalUrl }).(pulumi.StringPtrOutput)
}

// The single-sign on configuration of the Amazon DataZone domain.
func (o LookupDomainResultOutput) SingleSignOn() DomainSingleSignOnPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainSingleSignOn { return v.SingleSignOn }).(DomainSingleSignOnPtrOutput)
}

// The status of the Amazon DataZone domain.
func (o LookupDomainResultOutput) Status() DomainStatusPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainStatus { return v.Status }).(DomainStatusPtrOutput)
}

// The tags specified for the Amazon DataZone domain.
func (o LookupDomainResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDomainResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainResultOutput{})
}
