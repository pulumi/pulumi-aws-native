// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies whether the data source is enabled.
type DataSourceEnableSetting string

const (
	DataSourceEnableSettingEnabled  = DataSourceEnableSetting("ENABLED")
	DataSourceEnableSettingDisabled = DataSourceEnableSetting("DISABLED")
)

func (DataSourceEnableSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceEnableSetting)(nil)).Elem()
}

func (e DataSourceEnableSetting) ToDataSourceEnableSettingOutput() DataSourceEnableSettingOutput {
	return pulumi.ToOutput(e).(DataSourceEnableSettingOutput)
}

func (e DataSourceEnableSetting) ToDataSourceEnableSettingOutputWithContext(ctx context.Context) DataSourceEnableSettingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceEnableSettingOutput)
}

func (e DataSourceEnableSetting) ToDataSourceEnableSettingPtrOutput() DataSourceEnableSettingPtrOutput {
	return e.ToDataSourceEnableSettingPtrOutputWithContext(context.Background())
}

func (e DataSourceEnableSetting) ToDataSourceEnableSettingPtrOutputWithContext(ctx context.Context) DataSourceEnableSettingPtrOutput {
	return DataSourceEnableSetting(e).ToDataSourceEnableSettingOutputWithContext(ctx).ToDataSourceEnableSettingPtrOutputWithContext(ctx)
}

func (e DataSourceEnableSetting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceEnableSetting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceEnableSetting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceEnableSetting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceEnableSettingOutput struct{ *pulumi.OutputState }

func (DataSourceEnableSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceEnableSetting)(nil)).Elem()
}

func (o DataSourceEnableSettingOutput) ToDataSourceEnableSettingOutput() DataSourceEnableSettingOutput {
	return o
}

func (o DataSourceEnableSettingOutput) ToDataSourceEnableSettingOutputWithContext(ctx context.Context) DataSourceEnableSettingOutput {
	return o
}

func (o DataSourceEnableSettingOutput) ToDataSourceEnableSettingPtrOutput() DataSourceEnableSettingPtrOutput {
	return o.ToDataSourceEnableSettingPtrOutputWithContext(context.Background())
}

func (o DataSourceEnableSettingOutput) ToDataSourceEnableSettingPtrOutputWithContext(ctx context.Context) DataSourceEnableSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceEnableSetting) *DataSourceEnableSetting {
		return &v
	}).(DataSourceEnableSettingPtrOutput)
}

func (o DataSourceEnableSettingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceEnableSettingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceEnableSetting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceEnableSettingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceEnableSettingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceEnableSetting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceEnableSettingPtrOutput struct{ *pulumi.OutputState }

func (DataSourceEnableSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceEnableSetting)(nil)).Elem()
}

func (o DataSourceEnableSettingPtrOutput) ToDataSourceEnableSettingPtrOutput() DataSourceEnableSettingPtrOutput {
	return o
}

func (o DataSourceEnableSettingPtrOutput) ToDataSourceEnableSettingPtrOutputWithContext(ctx context.Context) DataSourceEnableSettingPtrOutput {
	return o
}

func (o DataSourceEnableSettingPtrOutput) Elem() DataSourceEnableSettingOutput {
	return o.ApplyT(func(v *DataSourceEnableSetting) DataSourceEnableSetting {
		if v != nil {
			return *v
		}
		var ret DataSourceEnableSetting
		return ret
	}).(DataSourceEnableSettingOutput)
}

func (o DataSourceEnableSettingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceEnableSettingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceEnableSetting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceEnableSettingInput is an input type that accepts values of the DataSourceEnableSetting enum
// A concrete instance of `DataSourceEnableSettingInput` can be one of the following:
//
//	DataSourceEnableSettingEnabled
//	DataSourceEnableSettingDisabled
type DataSourceEnableSettingInput interface {
	pulumi.Input

	ToDataSourceEnableSettingOutput() DataSourceEnableSettingOutput
	ToDataSourceEnableSettingOutputWithContext(context.Context) DataSourceEnableSettingOutput
}

var dataSourceEnableSettingPtrType = reflect.TypeOf((**DataSourceEnableSetting)(nil)).Elem()

type DataSourceEnableSettingPtrInput interface {
	pulumi.Input

	ToDataSourceEnableSettingPtrOutput() DataSourceEnableSettingPtrOutput
	ToDataSourceEnableSettingPtrOutputWithContext(context.Context) DataSourceEnableSettingPtrOutput
}

type dataSourceEnableSettingPtr string

func DataSourceEnableSettingPtr(v string) DataSourceEnableSettingPtrInput {
	return (*dataSourceEnableSettingPtr)(&v)
}

func (*dataSourceEnableSettingPtr) ElementType() reflect.Type {
	return dataSourceEnableSettingPtrType
}

func (in *dataSourceEnableSettingPtr) ToDataSourceEnableSettingPtrOutput() DataSourceEnableSettingPtrOutput {
	return pulumi.ToOutput(in).(DataSourceEnableSettingPtrOutput)
}

func (in *dataSourceEnableSettingPtr) ToDataSourceEnableSettingPtrOutputWithContext(ctx context.Context) DataSourceEnableSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceEnableSettingPtrOutput)
}

// The search filter expression type.
type DataSourceFilterExpressionType string

const (
	DataSourceFilterExpressionTypeInclude = DataSourceFilterExpressionType("INCLUDE")
	DataSourceFilterExpressionTypeExclude = DataSourceFilterExpressionType("EXCLUDE")
)

func (DataSourceFilterExpressionType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFilterExpressionType)(nil)).Elem()
}

func (e DataSourceFilterExpressionType) ToDataSourceFilterExpressionTypeOutput() DataSourceFilterExpressionTypeOutput {
	return pulumi.ToOutput(e).(DataSourceFilterExpressionTypeOutput)
}

func (e DataSourceFilterExpressionType) ToDataSourceFilterExpressionTypeOutputWithContext(ctx context.Context) DataSourceFilterExpressionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceFilterExpressionTypeOutput)
}

func (e DataSourceFilterExpressionType) ToDataSourceFilterExpressionTypePtrOutput() DataSourceFilterExpressionTypePtrOutput {
	return e.ToDataSourceFilterExpressionTypePtrOutputWithContext(context.Background())
}

func (e DataSourceFilterExpressionType) ToDataSourceFilterExpressionTypePtrOutputWithContext(ctx context.Context) DataSourceFilterExpressionTypePtrOutput {
	return DataSourceFilterExpressionType(e).ToDataSourceFilterExpressionTypeOutputWithContext(ctx).ToDataSourceFilterExpressionTypePtrOutputWithContext(ctx)
}

func (e DataSourceFilterExpressionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceFilterExpressionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceFilterExpressionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceFilterExpressionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceFilterExpressionTypeOutput struct{ *pulumi.OutputState }

func (DataSourceFilterExpressionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFilterExpressionType)(nil)).Elem()
}

func (o DataSourceFilterExpressionTypeOutput) ToDataSourceFilterExpressionTypeOutput() DataSourceFilterExpressionTypeOutput {
	return o
}

func (o DataSourceFilterExpressionTypeOutput) ToDataSourceFilterExpressionTypeOutputWithContext(ctx context.Context) DataSourceFilterExpressionTypeOutput {
	return o
}

func (o DataSourceFilterExpressionTypeOutput) ToDataSourceFilterExpressionTypePtrOutput() DataSourceFilterExpressionTypePtrOutput {
	return o.ToDataSourceFilterExpressionTypePtrOutputWithContext(context.Background())
}

func (o DataSourceFilterExpressionTypeOutput) ToDataSourceFilterExpressionTypePtrOutputWithContext(ctx context.Context) DataSourceFilterExpressionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceFilterExpressionType) *DataSourceFilterExpressionType {
		return &v
	}).(DataSourceFilterExpressionTypePtrOutput)
}

func (o DataSourceFilterExpressionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceFilterExpressionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceFilterExpressionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceFilterExpressionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceFilterExpressionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceFilterExpressionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceFilterExpressionTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceFilterExpressionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceFilterExpressionType)(nil)).Elem()
}

func (o DataSourceFilterExpressionTypePtrOutput) ToDataSourceFilterExpressionTypePtrOutput() DataSourceFilterExpressionTypePtrOutput {
	return o
}

func (o DataSourceFilterExpressionTypePtrOutput) ToDataSourceFilterExpressionTypePtrOutputWithContext(ctx context.Context) DataSourceFilterExpressionTypePtrOutput {
	return o
}

func (o DataSourceFilterExpressionTypePtrOutput) Elem() DataSourceFilterExpressionTypeOutput {
	return o.ApplyT(func(v *DataSourceFilterExpressionType) DataSourceFilterExpressionType {
		if v != nil {
			return *v
		}
		var ret DataSourceFilterExpressionType
		return ret
	}).(DataSourceFilterExpressionTypeOutput)
}

func (o DataSourceFilterExpressionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceFilterExpressionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceFilterExpressionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceFilterExpressionTypeInput is an input type that accepts values of the DataSourceFilterExpressionType enum
// A concrete instance of `DataSourceFilterExpressionTypeInput` can be one of the following:
//
//	DataSourceFilterExpressionTypeInclude
//	DataSourceFilterExpressionTypeExclude
type DataSourceFilterExpressionTypeInput interface {
	pulumi.Input

	ToDataSourceFilterExpressionTypeOutput() DataSourceFilterExpressionTypeOutput
	ToDataSourceFilterExpressionTypeOutputWithContext(context.Context) DataSourceFilterExpressionTypeOutput
}

var dataSourceFilterExpressionTypePtrType = reflect.TypeOf((**DataSourceFilterExpressionType)(nil)).Elem()

type DataSourceFilterExpressionTypePtrInput interface {
	pulumi.Input

	ToDataSourceFilterExpressionTypePtrOutput() DataSourceFilterExpressionTypePtrOutput
	ToDataSourceFilterExpressionTypePtrOutputWithContext(context.Context) DataSourceFilterExpressionTypePtrOutput
}

type dataSourceFilterExpressionTypePtr string

func DataSourceFilterExpressionTypePtr(v string) DataSourceFilterExpressionTypePtrInput {
	return (*dataSourceFilterExpressionTypePtr)(&v)
}

func (*dataSourceFilterExpressionTypePtr) ElementType() reflect.Type {
	return dataSourceFilterExpressionTypePtrType
}

func (in *dataSourceFilterExpressionTypePtr) ToDataSourceFilterExpressionTypePtrOutput() DataSourceFilterExpressionTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceFilterExpressionTypePtrOutput)
}

func (in *dataSourceFilterExpressionTypePtr) ToDataSourceFilterExpressionTypePtrOutputWithContext(ctx context.Context) DataSourceFilterExpressionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceFilterExpressionTypePtrOutput)
}

// The status of the data source.
type DataSourceStatus string

const (
	DataSourceStatusCreating       = DataSourceStatus("CREATING")
	DataSourceStatusFailedCreation = DataSourceStatus("FAILED_CREATION")
	DataSourceStatusReady          = DataSourceStatus("READY")
	DataSourceStatusUpdating       = DataSourceStatus("UPDATING")
	DataSourceStatusFailedUpdate   = DataSourceStatus("FAILED_UPDATE")
	DataSourceStatusRunning        = DataSourceStatus("RUNNING")
	DataSourceStatusDeleting       = DataSourceStatus("DELETING")
	DataSourceStatusFailedDeletion = DataSourceStatus("FAILED_DELETION")
)

type DataSourceStatusOutput struct{ *pulumi.OutputState }

func (DataSourceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceStatus)(nil)).Elem()
}

func (o DataSourceStatusOutput) ToDataSourceStatusOutput() DataSourceStatusOutput {
	return o
}

func (o DataSourceStatusOutput) ToDataSourceStatusOutputWithContext(ctx context.Context) DataSourceStatusOutput {
	return o
}

func (o DataSourceStatusOutput) ToDataSourceStatusPtrOutput() DataSourceStatusPtrOutput {
	return o.ToDataSourceStatusPtrOutputWithContext(context.Background())
}

func (o DataSourceStatusOutput) ToDataSourceStatusPtrOutputWithContext(ctx context.Context) DataSourceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceStatus) *DataSourceStatus {
		return &v
	}).(DataSourceStatusPtrOutput)
}

func (o DataSourceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceStatusPtrOutput struct{ *pulumi.OutputState }

func (DataSourceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceStatus)(nil)).Elem()
}

func (o DataSourceStatusPtrOutput) ToDataSourceStatusPtrOutput() DataSourceStatusPtrOutput {
	return o
}

func (o DataSourceStatusPtrOutput) ToDataSourceStatusPtrOutputWithContext(ctx context.Context) DataSourceStatusPtrOutput {
	return o
}

func (o DataSourceStatusPtrOutput) Elem() DataSourceStatusOutput {
	return o.ApplyT(func(v *DataSourceStatus) DataSourceStatus {
		if v != nil {
			return *v
		}
		var ret DataSourceStatus
		return ret
	}).(DataSourceStatusOutput)
}

func (o DataSourceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of single sign-on in Amazon DataZone.
type DomainAuthType string

const (
	DomainAuthTypeIamIdc   = DomainAuthType("IAM_IDC")
	DomainAuthTypeDisabled = DomainAuthType("DISABLED")
)

func (DomainAuthType) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthType)(nil)).Elem()
}

func (e DomainAuthType) ToDomainAuthTypeOutput() DomainAuthTypeOutput {
	return pulumi.ToOutput(e).(DomainAuthTypeOutput)
}

func (e DomainAuthType) ToDomainAuthTypeOutputWithContext(ctx context.Context) DomainAuthTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DomainAuthTypeOutput)
}

func (e DomainAuthType) ToDomainAuthTypePtrOutput() DomainAuthTypePtrOutput {
	return e.ToDomainAuthTypePtrOutputWithContext(context.Background())
}

func (e DomainAuthType) ToDomainAuthTypePtrOutputWithContext(ctx context.Context) DomainAuthTypePtrOutput {
	return DomainAuthType(e).ToDomainAuthTypeOutputWithContext(ctx).ToDomainAuthTypePtrOutputWithContext(ctx)
}

func (e DomainAuthType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainAuthType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainAuthType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DomainAuthType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DomainAuthTypeOutput struct{ *pulumi.OutputState }

func (DomainAuthTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAuthType)(nil)).Elem()
}

func (o DomainAuthTypeOutput) ToDomainAuthTypeOutput() DomainAuthTypeOutput {
	return o
}

func (o DomainAuthTypeOutput) ToDomainAuthTypeOutputWithContext(ctx context.Context) DomainAuthTypeOutput {
	return o
}

func (o DomainAuthTypeOutput) ToDomainAuthTypePtrOutput() DomainAuthTypePtrOutput {
	return o.ToDomainAuthTypePtrOutputWithContext(context.Background())
}

func (o DomainAuthTypeOutput) ToDomainAuthTypePtrOutputWithContext(ctx context.Context) DomainAuthTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAuthType) *DomainAuthType {
		return &v
	}).(DomainAuthTypePtrOutput)
}

func (o DomainAuthTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainAuthTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainAuthType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainAuthTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainAuthTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainAuthType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainAuthTypePtrOutput struct{ *pulumi.OutputState }

func (DomainAuthTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAuthType)(nil)).Elem()
}

func (o DomainAuthTypePtrOutput) ToDomainAuthTypePtrOutput() DomainAuthTypePtrOutput {
	return o
}

func (o DomainAuthTypePtrOutput) ToDomainAuthTypePtrOutputWithContext(ctx context.Context) DomainAuthTypePtrOutput {
	return o
}

func (o DomainAuthTypePtrOutput) Elem() DomainAuthTypeOutput {
	return o.ApplyT(func(v *DomainAuthType) DomainAuthType {
		if v != nil {
			return *v
		}
		var ret DomainAuthType
		return ret
	}).(DomainAuthTypeOutput)
}

func (o DomainAuthTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainAuthTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainAuthType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DomainAuthTypeInput is an input type that accepts values of the DomainAuthType enum
// A concrete instance of `DomainAuthTypeInput` can be one of the following:
//
//	DomainAuthTypeIamIdc
//	DomainAuthTypeDisabled
type DomainAuthTypeInput interface {
	pulumi.Input

	ToDomainAuthTypeOutput() DomainAuthTypeOutput
	ToDomainAuthTypeOutputWithContext(context.Context) DomainAuthTypeOutput
}

var domainAuthTypePtrType = reflect.TypeOf((**DomainAuthType)(nil)).Elem()

type DomainAuthTypePtrInput interface {
	pulumi.Input

	ToDomainAuthTypePtrOutput() DomainAuthTypePtrOutput
	ToDomainAuthTypePtrOutputWithContext(context.Context) DomainAuthTypePtrOutput
}

type domainAuthTypePtr string

func DomainAuthTypePtr(v string) DomainAuthTypePtrInput {
	return (*domainAuthTypePtr)(&v)
}

func (*domainAuthTypePtr) ElementType() reflect.Type {
	return domainAuthTypePtrType
}

func (in *domainAuthTypePtr) ToDomainAuthTypePtrOutput() DomainAuthTypePtrOutput {
	return pulumi.ToOutput(in).(DomainAuthTypePtrOutput)
}

func (in *domainAuthTypePtr) ToDomainAuthTypePtrOutputWithContext(ctx context.Context) DomainAuthTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DomainAuthTypePtrOutput)
}

// The status of the Amazon DataZone domain.
type DomainStatus string

const (
	DomainStatusCreating       = DomainStatus("CREATING")
	DomainStatusAvailable      = DomainStatus("AVAILABLE")
	DomainStatusCreationFailed = DomainStatus("CREATION_FAILED")
	DomainStatusDeleting       = DomainStatus("DELETING")
	DomainStatusDeleted        = DomainStatus("DELETED")
	DomainStatusDeletionFailed = DomainStatus("DELETION_FAILED")
)

type DomainStatusOutput struct{ *pulumi.OutputState }

func (DomainStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainStatus)(nil)).Elem()
}

func (o DomainStatusOutput) ToDomainStatusOutput() DomainStatusOutput {
	return o
}

func (o DomainStatusOutput) ToDomainStatusOutputWithContext(ctx context.Context) DomainStatusOutput {
	return o
}

func (o DomainStatusOutput) ToDomainStatusPtrOutput() DomainStatusPtrOutput {
	return o.ToDomainStatusPtrOutputWithContext(context.Background())
}

func (o DomainStatusOutput) ToDomainStatusPtrOutputWithContext(ctx context.Context) DomainStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainStatus) *DomainStatus {
		return &v
	}).(DomainStatusPtrOutput)
}

func (o DomainStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainStatusPtrOutput struct{ *pulumi.OutputState }

func (DomainStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainStatus)(nil)).Elem()
}

func (o DomainStatusPtrOutput) ToDomainStatusPtrOutput() DomainStatusPtrOutput {
	return o
}

func (o DomainStatusPtrOutput) ToDomainStatusPtrOutputWithContext(ctx context.Context) DomainStatusPtrOutput {
	return o
}

func (o DomainStatusPtrOutput) Elem() DomainStatusOutput {
	return o.ApplyT(func(v *DomainStatus) DomainStatus {
		if v != nil {
			return *v
		}
		var ret DomainStatus
		return ret
	}).(DomainStatusOutput)
}

func (o DomainStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The single sign-on user assignment in Amazon DataZone.
type DomainUserAssignment string

const (
	DomainUserAssignmentAutomatic = DomainUserAssignment("AUTOMATIC")
	DomainUserAssignmentManual    = DomainUserAssignment("MANUAL")
)

func (DomainUserAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainUserAssignment)(nil)).Elem()
}

func (e DomainUserAssignment) ToDomainUserAssignmentOutput() DomainUserAssignmentOutput {
	return pulumi.ToOutput(e).(DomainUserAssignmentOutput)
}

func (e DomainUserAssignment) ToDomainUserAssignmentOutputWithContext(ctx context.Context) DomainUserAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DomainUserAssignmentOutput)
}

func (e DomainUserAssignment) ToDomainUserAssignmentPtrOutput() DomainUserAssignmentPtrOutput {
	return e.ToDomainUserAssignmentPtrOutputWithContext(context.Background())
}

func (e DomainUserAssignment) ToDomainUserAssignmentPtrOutputWithContext(ctx context.Context) DomainUserAssignmentPtrOutput {
	return DomainUserAssignment(e).ToDomainUserAssignmentOutputWithContext(ctx).ToDomainUserAssignmentPtrOutputWithContext(ctx)
}

func (e DomainUserAssignment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainUserAssignment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainUserAssignment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DomainUserAssignment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DomainUserAssignmentOutput struct{ *pulumi.OutputState }

func (DomainUserAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainUserAssignment)(nil)).Elem()
}

func (o DomainUserAssignmentOutput) ToDomainUserAssignmentOutput() DomainUserAssignmentOutput {
	return o
}

func (o DomainUserAssignmentOutput) ToDomainUserAssignmentOutputWithContext(ctx context.Context) DomainUserAssignmentOutput {
	return o
}

func (o DomainUserAssignmentOutput) ToDomainUserAssignmentPtrOutput() DomainUserAssignmentPtrOutput {
	return o.ToDomainUserAssignmentPtrOutputWithContext(context.Background())
}

func (o DomainUserAssignmentOutput) ToDomainUserAssignmentPtrOutputWithContext(ctx context.Context) DomainUserAssignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainUserAssignment) *DomainUserAssignment {
		return &v
	}).(DomainUserAssignmentPtrOutput)
}

func (o DomainUserAssignmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainUserAssignmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainUserAssignment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainUserAssignmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainUserAssignmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainUserAssignment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainUserAssignmentPtrOutput struct{ *pulumi.OutputState }

func (DomainUserAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainUserAssignment)(nil)).Elem()
}

func (o DomainUserAssignmentPtrOutput) ToDomainUserAssignmentPtrOutput() DomainUserAssignmentPtrOutput {
	return o
}

func (o DomainUserAssignmentPtrOutput) ToDomainUserAssignmentPtrOutputWithContext(ctx context.Context) DomainUserAssignmentPtrOutput {
	return o
}

func (o DomainUserAssignmentPtrOutput) Elem() DomainUserAssignmentOutput {
	return o.ApplyT(func(v *DomainUserAssignment) DomainUserAssignment {
		if v != nil {
			return *v
		}
		var ret DomainUserAssignment
		return ret
	}).(DomainUserAssignmentOutput)
}

func (o DomainUserAssignmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainUserAssignmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainUserAssignment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DomainUserAssignmentInput is an input type that accepts values of the DomainUserAssignment enum
// A concrete instance of `DomainUserAssignmentInput` can be one of the following:
//
//	DomainUserAssignmentAutomatic
//	DomainUserAssignmentManual
type DomainUserAssignmentInput interface {
	pulumi.Input

	ToDomainUserAssignmentOutput() DomainUserAssignmentOutput
	ToDomainUserAssignmentOutputWithContext(context.Context) DomainUserAssignmentOutput
}

var domainUserAssignmentPtrType = reflect.TypeOf((**DomainUserAssignment)(nil)).Elem()

type DomainUserAssignmentPtrInput interface {
	pulumi.Input

	ToDomainUserAssignmentPtrOutput() DomainUserAssignmentPtrOutput
	ToDomainUserAssignmentPtrOutputWithContext(context.Context) DomainUserAssignmentPtrOutput
}

type domainUserAssignmentPtr string

func DomainUserAssignmentPtr(v string) DomainUserAssignmentPtrInput {
	return (*domainUserAssignmentPtr)(&v)
}

func (*domainUserAssignmentPtr) ElementType() reflect.Type {
	return domainUserAssignmentPtrType
}

func (in *domainUserAssignmentPtr) ToDomainUserAssignmentPtrOutput() DomainUserAssignmentPtrOutput {
	return pulumi.ToOutput(in).(DomainUserAssignmentPtrOutput)
}

func (in *domainUserAssignmentPtr) ToDomainUserAssignmentPtrOutputWithContext(ctx context.Context) DomainUserAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DomainUserAssignmentPtrOutput)
}

// The status of the Amazon DataZone environment.
type EnvironmentStatus string

const (
	EnvironmentStatusActive           = EnvironmentStatus("ACTIVE")
	EnvironmentStatusCreating         = EnvironmentStatus("CREATING")
	EnvironmentStatusUpdating         = EnvironmentStatus("UPDATING")
	EnvironmentStatusDeleting         = EnvironmentStatus("DELETING")
	EnvironmentStatusCreateFailed     = EnvironmentStatus("CREATE_FAILED")
	EnvironmentStatusUpdateFailed     = EnvironmentStatus("UPDATE_FAILED")
	EnvironmentStatusDeleteFailed     = EnvironmentStatus("DELETE_FAILED")
	EnvironmentStatusValidationFailed = EnvironmentStatus("VALIDATION_FAILED")
	EnvironmentStatusSuspended        = EnvironmentStatus("SUSPENDED")
	EnvironmentStatusDisabled         = EnvironmentStatus("DISABLED")
	EnvironmentStatusExpired          = EnvironmentStatus("EXPIRED")
	EnvironmentStatusDeleted          = EnvironmentStatus("DELETED")
	EnvironmentStatusInaccessible     = EnvironmentStatus("INACCESSIBLE")
)

type EnvironmentStatusOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStatus)(nil)).Elem()
}

func (o EnvironmentStatusOutput) ToEnvironmentStatusOutput() EnvironmentStatusOutput {
	return o
}

func (o EnvironmentStatusOutput) ToEnvironmentStatusOutputWithContext(ctx context.Context) EnvironmentStatusOutput {
	return o
}

func (o EnvironmentStatusOutput) ToEnvironmentStatusPtrOutput() EnvironmentStatusPtrOutput {
	return o.ToEnvironmentStatusPtrOutputWithContext(context.Background())
}

func (o EnvironmentStatusOutput) ToEnvironmentStatusPtrOutputWithContext(ctx context.Context) EnvironmentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentStatus) *EnvironmentStatus {
		return &v
	}).(EnvironmentStatusPtrOutput)
}

func (o EnvironmentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentStatusPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStatus)(nil)).Elem()
}

func (o EnvironmentStatusPtrOutput) ToEnvironmentStatusPtrOutput() EnvironmentStatusPtrOutput {
	return o
}

func (o EnvironmentStatusPtrOutput) ToEnvironmentStatusPtrOutputWithContext(ctx context.Context) EnvironmentStatusPtrOutput {
	return o
}

func (o EnvironmentStatusPtrOutput) Elem() EnvironmentStatusOutput {
	return o.ApplyT(func(v *EnvironmentStatus) EnvironmentStatus {
		if v != nil {
			return *v
		}
		var ret EnvironmentStatus
		return ret
	}).(EnvironmentStatusOutput)
}

func (o EnvironmentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceEnableSettingInput)(nil)).Elem(), DataSourceEnableSetting("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceEnableSettingPtrInput)(nil)).Elem(), DataSourceEnableSetting("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFilterExpressionTypeInput)(nil)).Elem(), DataSourceFilterExpressionType("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFilterExpressionTypePtrInput)(nil)).Elem(), DataSourceFilterExpressionType("INCLUDE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthTypeInput)(nil)).Elem(), DomainAuthType("IAM_IDC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAuthTypePtrInput)(nil)).Elem(), DomainAuthType("IAM_IDC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainUserAssignmentInput)(nil)).Elem(), DomainUserAssignment("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainUserAssignmentPtrInput)(nil)).Elem(), DomainUserAssignment("AUTOMATIC"))
	pulumi.RegisterOutputType(DataSourceEnableSettingOutput{})
	pulumi.RegisterOutputType(DataSourceEnableSettingPtrOutput{})
	pulumi.RegisterOutputType(DataSourceFilterExpressionTypeOutput{})
	pulumi.RegisterOutputType(DataSourceFilterExpressionTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceStatusOutput{})
	pulumi.RegisterOutputType(DataSourceStatusPtrOutput{})
	pulumi.RegisterOutputType(DomainAuthTypeOutput{})
	pulumi.RegisterOutputType(DomainAuthTypePtrOutput{})
	pulumi.RegisterOutputType(DomainStatusOutput{})
	pulumi.RegisterOutputType(DomainStatusPtrOutput{})
	pulumi.RegisterOutputType(DomainUserAssignmentOutput{})
	pulumi.RegisterOutputType(DomainUserAssignmentPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusOutput{})
	pulumi.RegisterOutputType(EnvironmentStatusPtrOutput{})
}
