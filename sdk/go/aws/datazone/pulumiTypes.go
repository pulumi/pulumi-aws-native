// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// Specifies the configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
type DataSourceConfigurationInput0Properties struct {
	GlueRunConfiguration *DataSourceGlueRunConfigurationInput `pulumi:"glueRunConfiguration"`
}

// Specifies the configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
type DataSourceConfigurationInput1Properties struct {
	RedshiftRunConfiguration *DataSourceRedshiftRunConfigurationInput `pulumi:"redshiftRunConfiguration"`
}

// The search filter expression.
type DataSourceFilterExpression struct {
	Expression string                         `pulumi:"expression"`
	Type       DataSourceFilterExpressionType `pulumi:"type"`
}

// The details of a metadata form.
type DataSourceFormInput struct {
	// The content of the metadata form.
	Content *string `pulumi:"content"`
	// The name of the metadata form.
	FormName string `pulumi:"formName"`
	// The ID of the metadata form type.
	TypeIdentifier *string `pulumi:"typeIdentifier"`
	// The revision of the metadata form type.
	TypeRevision *string `pulumi:"typeRevision"`
}

// DataSourceFormInputInput is an input type that accepts DataSourceFormInputArgs and DataSourceFormInputOutput values.
// You can construct a concrete instance of `DataSourceFormInputInput` via:
//
//	DataSourceFormInputArgs{...}
type DataSourceFormInputInput interface {
	pulumi.Input

	ToDataSourceFormInputOutput() DataSourceFormInputOutput
	ToDataSourceFormInputOutputWithContext(context.Context) DataSourceFormInputOutput
}

// The details of a metadata form.
type DataSourceFormInputArgs struct {
	// The content of the metadata form.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The name of the metadata form.
	FormName pulumi.StringInput `pulumi:"formName"`
	// The ID of the metadata form type.
	TypeIdentifier pulumi.StringPtrInput `pulumi:"typeIdentifier"`
	// The revision of the metadata form type.
	TypeRevision pulumi.StringPtrInput `pulumi:"typeRevision"`
}

func (DataSourceFormInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFormInput)(nil)).Elem()
}

func (i DataSourceFormInputArgs) ToDataSourceFormInputOutput() DataSourceFormInputOutput {
	return i.ToDataSourceFormInputOutputWithContext(context.Background())
}

func (i DataSourceFormInputArgs) ToDataSourceFormInputOutputWithContext(ctx context.Context) DataSourceFormInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFormInputOutput)
}

func (i DataSourceFormInputArgs) ToOutput(ctx context.Context) pulumix.Output[DataSourceFormInput] {
	return pulumix.Output[DataSourceFormInput]{
		OutputState: i.ToDataSourceFormInputOutputWithContext(ctx).OutputState,
	}
}

// DataSourceFormInputArrayInput is an input type that accepts DataSourceFormInputArray and DataSourceFormInputArrayOutput values.
// You can construct a concrete instance of `DataSourceFormInputArrayInput` via:
//
//	DataSourceFormInputArray{ DataSourceFormInputArgs{...} }
type DataSourceFormInputArrayInput interface {
	pulumi.Input

	ToDataSourceFormInputArrayOutput() DataSourceFormInputArrayOutput
	ToDataSourceFormInputArrayOutputWithContext(context.Context) DataSourceFormInputArrayOutput
}

type DataSourceFormInputArray []DataSourceFormInputInput

func (DataSourceFormInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceFormInput)(nil)).Elem()
}

func (i DataSourceFormInputArray) ToDataSourceFormInputArrayOutput() DataSourceFormInputArrayOutput {
	return i.ToDataSourceFormInputArrayOutputWithContext(context.Background())
}

func (i DataSourceFormInputArray) ToDataSourceFormInputArrayOutputWithContext(ctx context.Context) DataSourceFormInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFormInputArrayOutput)
}

func (i DataSourceFormInputArray) ToOutput(ctx context.Context) pulumix.Output[[]DataSourceFormInput] {
	return pulumix.Output[[]DataSourceFormInput]{
		OutputState: i.ToDataSourceFormInputArrayOutputWithContext(ctx).OutputState,
	}
}

// The details of a metadata form.
type DataSourceFormInputOutput struct{ *pulumi.OutputState }

func (DataSourceFormInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFormInput)(nil)).Elem()
}

func (o DataSourceFormInputOutput) ToDataSourceFormInputOutput() DataSourceFormInputOutput {
	return o
}

func (o DataSourceFormInputOutput) ToDataSourceFormInputOutputWithContext(ctx context.Context) DataSourceFormInputOutput {
	return o
}

func (o DataSourceFormInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceFormInput] {
	return pulumix.Output[DataSourceFormInput]{
		OutputState: o.OutputState,
	}
}

// The content of the metadata form.
func (o DataSourceFormInputOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceFormInput) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The name of the metadata form.
func (o DataSourceFormInputOutput) FormName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceFormInput) string { return v.FormName }).(pulumi.StringOutput)
}

// The ID of the metadata form type.
func (o DataSourceFormInputOutput) TypeIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceFormInput) *string { return v.TypeIdentifier }).(pulumi.StringPtrOutput)
}

// The revision of the metadata form type.
func (o DataSourceFormInputOutput) TypeRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceFormInput) *string { return v.TypeRevision }).(pulumi.StringPtrOutput)
}

type DataSourceFormInputArrayOutput struct{ *pulumi.OutputState }

func (DataSourceFormInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceFormInput)(nil)).Elem()
}

func (o DataSourceFormInputArrayOutput) ToDataSourceFormInputArrayOutput() DataSourceFormInputArrayOutput {
	return o
}

func (o DataSourceFormInputArrayOutput) ToDataSourceFormInputArrayOutputWithContext(ctx context.Context) DataSourceFormInputArrayOutput {
	return o
}

func (o DataSourceFormInputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataSourceFormInput] {
	return pulumix.Output[[]DataSourceFormInput]{
		OutputState: o.OutputState,
	}
}

func (o DataSourceFormInputArrayOutput) Index(i pulumi.IntInput) DataSourceFormInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceFormInput {
		return vs[0].([]DataSourceFormInput)[vs[1].(int)]
	}).(DataSourceFormInputOutput)
}

type DataSourceGlueRunConfigurationInput struct {
	// The data access role included in the configuration details of the AWS Glue data source.
	DataAccessRole *string `pulumi:"dataAccessRole"`
	// The relational filter configurations included in the configuration details of the AWS Glue data source.
	RelationalFilterConfigurations []DataSourceRelationalFilterConfiguration `pulumi:"relationalFilterConfigurations"`
}

// The recommendation to be updated as part of the UpdateDataSource action.
type DataSourceRecommendationConfiguration struct {
	// Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.
	EnableBusinessNameGeneration *bool `pulumi:"enableBusinessNameGeneration"`
}

// DataSourceRecommendationConfigurationInput is an input type that accepts DataSourceRecommendationConfigurationArgs and DataSourceRecommendationConfigurationOutput values.
// You can construct a concrete instance of `DataSourceRecommendationConfigurationInput` via:
//
//	DataSourceRecommendationConfigurationArgs{...}
type DataSourceRecommendationConfigurationInput interface {
	pulumi.Input

	ToDataSourceRecommendationConfigurationOutput() DataSourceRecommendationConfigurationOutput
	ToDataSourceRecommendationConfigurationOutputWithContext(context.Context) DataSourceRecommendationConfigurationOutput
}

// The recommendation to be updated as part of the UpdateDataSource action.
type DataSourceRecommendationConfigurationArgs struct {
	// Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.
	EnableBusinessNameGeneration pulumi.BoolPtrInput `pulumi:"enableBusinessNameGeneration"`
}

func (DataSourceRecommendationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRecommendationConfiguration)(nil)).Elem()
}

func (i DataSourceRecommendationConfigurationArgs) ToDataSourceRecommendationConfigurationOutput() DataSourceRecommendationConfigurationOutput {
	return i.ToDataSourceRecommendationConfigurationOutputWithContext(context.Background())
}

func (i DataSourceRecommendationConfigurationArgs) ToDataSourceRecommendationConfigurationOutputWithContext(ctx context.Context) DataSourceRecommendationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRecommendationConfigurationOutput)
}

func (i DataSourceRecommendationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DataSourceRecommendationConfiguration] {
	return pulumix.Output[DataSourceRecommendationConfiguration]{
		OutputState: i.ToDataSourceRecommendationConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DataSourceRecommendationConfigurationArgs) ToDataSourceRecommendationConfigurationPtrOutput() DataSourceRecommendationConfigurationPtrOutput {
	return i.ToDataSourceRecommendationConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceRecommendationConfigurationArgs) ToDataSourceRecommendationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceRecommendationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRecommendationConfigurationOutput).ToDataSourceRecommendationConfigurationPtrOutputWithContext(ctx)
}

// DataSourceRecommendationConfigurationPtrInput is an input type that accepts DataSourceRecommendationConfigurationArgs, DataSourceRecommendationConfigurationPtr and DataSourceRecommendationConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceRecommendationConfigurationPtrInput` via:
//
//	        DataSourceRecommendationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceRecommendationConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceRecommendationConfigurationPtrOutput() DataSourceRecommendationConfigurationPtrOutput
	ToDataSourceRecommendationConfigurationPtrOutputWithContext(context.Context) DataSourceRecommendationConfigurationPtrOutput
}

type dataSourceRecommendationConfigurationPtrType DataSourceRecommendationConfigurationArgs

func DataSourceRecommendationConfigurationPtr(v *DataSourceRecommendationConfigurationArgs) DataSourceRecommendationConfigurationPtrInput {
	return (*dataSourceRecommendationConfigurationPtrType)(v)
}

func (*dataSourceRecommendationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRecommendationConfiguration)(nil)).Elem()
}

func (i *dataSourceRecommendationConfigurationPtrType) ToDataSourceRecommendationConfigurationPtrOutput() DataSourceRecommendationConfigurationPtrOutput {
	return i.ToDataSourceRecommendationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceRecommendationConfigurationPtrType) ToDataSourceRecommendationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceRecommendationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRecommendationConfigurationPtrOutput)
}

func (i *dataSourceRecommendationConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataSourceRecommendationConfiguration] {
	return pulumix.Output[*DataSourceRecommendationConfiguration]{
		OutputState: i.ToDataSourceRecommendationConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// The recommendation to be updated as part of the UpdateDataSource action.
type DataSourceRecommendationConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceRecommendationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRecommendationConfiguration)(nil)).Elem()
}

func (o DataSourceRecommendationConfigurationOutput) ToDataSourceRecommendationConfigurationOutput() DataSourceRecommendationConfigurationOutput {
	return o
}

func (o DataSourceRecommendationConfigurationOutput) ToDataSourceRecommendationConfigurationOutputWithContext(ctx context.Context) DataSourceRecommendationConfigurationOutput {
	return o
}

func (o DataSourceRecommendationConfigurationOutput) ToDataSourceRecommendationConfigurationPtrOutput() DataSourceRecommendationConfigurationPtrOutput {
	return o.ToDataSourceRecommendationConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceRecommendationConfigurationOutput) ToDataSourceRecommendationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceRecommendationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRecommendationConfiguration) *DataSourceRecommendationConfiguration {
		return &v
	}).(DataSourceRecommendationConfigurationPtrOutput)
}

func (o DataSourceRecommendationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceRecommendationConfiguration] {
	return pulumix.Output[DataSourceRecommendationConfiguration]{
		OutputState: o.OutputState,
	}
}

// Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.
func (o DataSourceRecommendationConfigurationOutput) EnableBusinessNameGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceRecommendationConfiguration) *bool { return v.EnableBusinessNameGeneration }).(pulumi.BoolPtrOutput)
}

type DataSourceRecommendationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRecommendationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRecommendationConfiguration)(nil)).Elem()
}

func (o DataSourceRecommendationConfigurationPtrOutput) ToDataSourceRecommendationConfigurationPtrOutput() DataSourceRecommendationConfigurationPtrOutput {
	return o
}

func (o DataSourceRecommendationConfigurationPtrOutput) ToDataSourceRecommendationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceRecommendationConfigurationPtrOutput {
	return o
}

func (o DataSourceRecommendationConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataSourceRecommendationConfiguration] {
	return pulumix.Output[*DataSourceRecommendationConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DataSourceRecommendationConfigurationPtrOutput) Elem() DataSourceRecommendationConfigurationOutput {
	return o.ApplyT(func(v *DataSourceRecommendationConfiguration) DataSourceRecommendationConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceRecommendationConfiguration
		return ret
	}).(DataSourceRecommendationConfigurationOutput)
}

// Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.
func (o DataSourceRecommendationConfigurationPtrOutput) EnableBusinessNameGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceRecommendationConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBusinessNameGeneration
	}).(pulumi.BoolPtrOutput)
}

// The name of an Amazon Redshift cluster.
type DataSourceRedshiftClusterStorage struct {
	// The name of an Amazon Redshift cluster.
	ClusterName string `pulumi:"clusterName"`
}

// The ARN of a secret manager for an Amazon Redshift cluster.
type DataSourceRedshiftCredentialConfiguration struct {
	// The ARN of a secret manager for an Amazon Redshift cluster.
	SecretManagerArn string `pulumi:"secretManagerArn"`
}

// The configuration details of the Amazon Redshift data source.
type DataSourceRedshiftRunConfigurationInput struct {
	// The data access role included in the configuration details of the Amazon Redshift data source.
	DataAccessRole *string `pulumi:"dataAccessRole"`
	// The details of the credentials required to access an Amazon Redshift cluster.
	RedshiftCredentialConfiguration DataSourceRedshiftCredentialConfiguration `pulumi:"redshiftCredentialConfiguration"`
	// The details of the Amazon Redshift storage as part of the configuration of an Amazon Redshift data source run.
	RedshiftStorage                interface{}                               `pulumi:"redshiftStorage"`
	RelationalFilterConfigurations []DataSourceRelationalFilterConfiguration `pulumi:"relationalFilterConfigurations"`
}

// The details of the Amazon Redshift Serverless workgroup storage.
type DataSourceRedshiftServerlessStorage struct {
	// The name of the Amazon Redshift Serverless workgroup.
	WorkgroupName string `pulumi:"workgroupName"`
}

// The details of the Amazon Redshift cluster source.
type DataSourceRedshiftStorage0Properties struct {
	RedshiftClusterSource DataSourceRedshiftClusterStorage `pulumi:"redshiftClusterSource"`
}

// The details of the Amazon Redshift Serverless workgroup source.
type DataSourceRedshiftStorage1Properties struct {
	RedshiftServerlessSource DataSourceRedshiftServerlessStorage `pulumi:"redshiftServerlessSource"`
}

// The relational filter configuration for the data source.
type DataSourceRelationalFilterConfiguration struct {
	// The database name specified in the relational filter configuration for the data source.
	DatabaseName string `pulumi:"databaseName"`
	// The filter expressions specified in the relational filter configuration for the data source.
	FilterExpressions []DataSourceFilterExpression `pulumi:"filterExpressions"`
	// The schema name specified in the relational filter configuration for the data source.
	SchemaName *string `pulumi:"schemaName"`
}

// The schedule of the data source runs.
type DataSourceScheduleConfiguration struct {
	// The schedule of the data source runs.
	Schedule *string `pulumi:"schedule"`
	// The timezone of the data source run.
	Timezone *string `pulumi:"timezone"`
}

// DataSourceScheduleConfigurationInput is an input type that accepts DataSourceScheduleConfigurationArgs and DataSourceScheduleConfigurationOutput values.
// You can construct a concrete instance of `DataSourceScheduleConfigurationInput` via:
//
//	DataSourceScheduleConfigurationArgs{...}
type DataSourceScheduleConfigurationInput interface {
	pulumi.Input

	ToDataSourceScheduleConfigurationOutput() DataSourceScheduleConfigurationOutput
	ToDataSourceScheduleConfigurationOutputWithContext(context.Context) DataSourceScheduleConfigurationOutput
}

// The schedule of the data source runs.
type DataSourceScheduleConfigurationArgs struct {
	// The schedule of the data source runs.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// The timezone of the data source run.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (DataSourceScheduleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceScheduleConfiguration)(nil)).Elem()
}

func (i DataSourceScheduleConfigurationArgs) ToDataSourceScheduleConfigurationOutput() DataSourceScheduleConfigurationOutput {
	return i.ToDataSourceScheduleConfigurationOutputWithContext(context.Background())
}

func (i DataSourceScheduleConfigurationArgs) ToDataSourceScheduleConfigurationOutputWithContext(ctx context.Context) DataSourceScheduleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceScheduleConfigurationOutput)
}

func (i DataSourceScheduleConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DataSourceScheduleConfiguration] {
	return pulumix.Output[DataSourceScheduleConfiguration]{
		OutputState: i.ToDataSourceScheduleConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DataSourceScheduleConfigurationArgs) ToDataSourceScheduleConfigurationPtrOutput() DataSourceScheduleConfigurationPtrOutput {
	return i.ToDataSourceScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceScheduleConfigurationArgs) ToDataSourceScheduleConfigurationPtrOutputWithContext(ctx context.Context) DataSourceScheduleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceScheduleConfigurationOutput).ToDataSourceScheduleConfigurationPtrOutputWithContext(ctx)
}

// DataSourceScheduleConfigurationPtrInput is an input type that accepts DataSourceScheduleConfigurationArgs, DataSourceScheduleConfigurationPtr and DataSourceScheduleConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceScheduleConfigurationPtrInput` via:
//
//	        DataSourceScheduleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceScheduleConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceScheduleConfigurationPtrOutput() DataSourceScheduleConfigurationPtrOutput
	ToDataSourceScheduleConfigurationPtrOutputWithContext(context.Context) DataSourceScheduleConfigurationPtrOutput
}

type dataSourceScheduleConfigurationPtrType DataSourceScheduleConfigurationArgs

func DataSourceScheduleConfigurationPtr(v *DataSourceScheduleConfigurationArgs) DataSourceScheduleConfigurationPtrInput {
	return (*dataSourceScheduleConfigurationPtrType)(v)
}

func (*dataSourceScheduleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceScheduleConfiguration)(nil)).Elem()
}

func (i *dataSourceScheduleConfigurationPtrType) ToDataSourceScheduleConfigurationPtrOutput() DataSourceScheduleConfigurationPtrOutput {
	return i.ToDataSourceScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceScheduleConfigurationPtrType) ToDataSourceScheduleConfigurationPtrOutputWithContext(ctx context.Context) DataSourceScheduleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceScheduleConfigurationPtrOutput)
}

func (i *dataSourceScheduleConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataSourceScheduleConfiguration] {
	return pulumix.Output[*DataSourceScheduleConfiguration]{
		OutputState: i.ToDataSourceScheduleConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// The schedule of the data source runs.
type DataSourceScheduleConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceScheduleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceScheduleConfiguration)(nil)).Elem()
}

func (o DataSourceScheduleConfigurationOutput) ToDataSourceScheduleConfigurationOutput() DataSourceScheduleConfigurationOutput {
	return o
}

func (o DataSourceScheduleConfigurationOutput) ToDataSourceScheduleConfigurationOutputWithContext(ctx context.Context) DataSourceScheduleConfigurationOutput {
	return o
}

func (o DataSourceScheduleConfigurationOutput) ToDataSourceScheduleConfigurationPtrOutput() DataSourceScheduleConfigurationPtrOutput {
	return o.ToDataSourceScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceScheduleConfigurationOutput) ToDataSourceScheduleConfigurationPtrOutputWithContext(ctx context.Context) DataSourceScheduleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceScheduleConfiguration) *DataSourceScheduleConfiguration {
		return &v
	}).(DataSourceScheduleConfigurationPtrOutput)
}

func (o DataSourceScheduleConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceScheduleConfiguration] {
	return pulumix.Output[DataSourceScheduleConfiguration]{
		OutputState: o.OutputState,
	}
}

// The schedule of the data source runs.
func (o DataSourceScheduleConfigurationOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceScheduleConfiguration) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// The timezone of the data source run.
func (o DataSourceScheduleConfigurationOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceScheduleConfiguration) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type DataSourceScheduleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceScheduleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceScheduleConfiguration)(nil)).Elem()
}

func (o DataSourceScheduleConfigurationPtrOutput) ToDataSourceScheduleConfigurationPtrOutput() DataSourceScheduleConfigurationPtrOutput {
	return o
}

func (o DataSourceScheduleConfigurationPtrOutput) ToDataSourceScheduleConfigurationPtrOutputWithContext(ctx context.Context) DataSourceScheduleConfigurationPtrOutput {
	return o
}

func (o DataSourceScheduleConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataSourceScheduleConfiguration] {
	return pulumix.Output[*DataSourceScheduleConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DataSourceScheduleConfigurationPtrOutput) Elem() DataSourceScheduleConfigurationOutput {
	return o.ApplyT(func(v *DataSourceScheduleConfiguration) DataSourceScheduleConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceScheduleConfiguration
		return ret
	}).(DataSourceScheduleConfigurationOutput)
}

// The schedule of the data source runs.
func (o DataSourceScheduleConfigurationPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceScheduleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// The timezone of the data source run.
func (o DataSourceScheduleConfigurationPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceScheduleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

// The single-sign on configuration of the Amazon DataZone domain.
type DomainSingleSignOn struct {
	Type           *DomainAuthType       `pulumi:"type"`
	UserAssignment *DomainUserAssignment `pulumi:"userAssignment"`
}

// DomainSingleSignOnInput is an input type that accepts DomainSingleSignOnArgs and DomainSingleSignOnOutput values.
// You can construct a concrete instance of `DomainSingleSignOnInput` via:
//
//	DomainSingleSignOnArgs{...}
type DomainSingleSignOnInput interface {
	pulumi.Input

	ToDomainSingleSignOnOutput() DomainSingleSignOnOutput
	ToDomainSingleSignOnOutputWithContext(context.Context) DomainSingleSignOnOutput
}

// The single-sign on configuration of the Amazon DataZone domain.
type DomainSingleSignOnArgs struct {
	Type           DomainAuthTypePtrInput       `pulumi:"type"`
	UserAssignment DomainUserAssignmentPtrInput `pulumi:"userAssignment"`
}

func (DomainSingleSignOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSingleSignOn)(nil)).Elem()
}

func (i DomainSingleSignOnArgs) ToDomainSingleSignOnOutput() DomainSingleSignOnOutput {
	return i.ToDomainSingleSignOnOutputWithContext(context.Background())
}

func (i DomainSingleSignOnArgs) ToDomainSingleSignOnOutputWithContext(ctx context.Context) DomainSingleSignOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSingleSignOnOutput)
}

func (i DomainSingleSignOnArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSingleSignOn] {
	return pulumix.Output[DomainSingleSignOn]{
		OutputState: i.ToDomainSingleSignOnOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSingleSignOnArgs) ToDomainSingleSignOnPtrOutput() DomainSingleSignOnPtrOutput {
	return i.ToDomainSingleSignOnPtrOutputWithContext(context.Background())
}

func (i DomainSingleSignOnArgs) ToDomainSingleSignOnPtrOutputWithContext(ctx context.Context) DomainSingleSignOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSingleSignOnOutput).ToDomainSingleSignOnPtrOutputWithContext(ctx)
}

// DomainSingleSignOnPtrInput is an input type that accepts DomainSingleSignOnArgs, DomainSingleSignOnPtr and DomainSingleSignOnPtrOutput values.
// You can construct a concrete instance of `DomainSingleSignOnPtrInput` via:
//
//	        DomainSingleSignOnArgs{...}
//
//	or:
//
//	        nil
type DomainSingleSignOnPtrInput interface {
	pulumi.Input

	ToDomainSingleSignOnPtrOutput() DomainSingleSignOnPtrOutput
	ToDomainSingleSignOnPtrOutputWithContext(context.Context) DomainSingleSignOnPtrOutput
}

type domainSingleSignOnPtrType DomainSingleSignOnArgs

func DomainSingleSignOnPtr(v *DomainSingleSignOnArgs) DomainSingleSignOnPtrInput {
	return (*domainSingleSignOnPtrType)(v)
}

func (*domainSingleSignOnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSingleSignOn)(nil)).Elem()
}

func (i *domainSingleSignOnPtrType) ToDomainSingleSignOnPtrOutput() DomainSingleSignOnPtrOutput {
	return i.ToDomainSingleSignOnPtrOutputWithContext(context.Background())
}

func (i *domainSingleSignOnPtrType) ToDomainSingleSignOnPtrOutputWithContext(ctx context.Context) DomainSingleSignOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSingleSignOnPtrOutput)
}

func (i *domainSingleSignOnPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSingleSignOn] {
	return pulumix.Output[*DomainSingleSignOn]{
		OutputState: i.ToDomainSingleSignOnPtrOutputWithContext(ctx).OutputState,
	}
}

// The single-sign on configuration of the Amazon DataZone domain.
type DomainSingleSignOnOutput struct{ *pulumi.OutputState }

func (DomainSingleSignOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSingleSignOn)(nil)).Elem()
}

func (o DomainSingleSignOnOutput) ToDomainSingleSignOnOutput() DomainSingleSignOnOutput {
	return o
}

func (o DomainSingleSignOnOutput) ToDomainSingleSignOnOutputWithContext(ctx context.Context) DomainSingleSignOnOutput {
	return o
}

func (o DomainSingleSignOnOutput) ToDomainSingleSignOnPtrOutput() DomainSingleSignOnPtrOutput {
	return o.ToDomainSingleSignOnPtrOutputWithContext(context.Background())
}

func (o DomainSingleSignOnOutput) ToDomainSingleSignOnPtrOutputWithContext(ctx context.Context) DomainSingleSignOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSingleSignOn) *DomainSingleSignOn {
		return &v
	}).(DomainSingleSignOnPtrOutput)
}

func (o DomainSingleSignOnOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSingleSignOn] {
	return pulumix.Output[DomainSingleSignOn]{
		OutputState: o.OutputState,
	}
}

func (o DomainSingleSignOnOutput) Type() DomainAuthTypePtrOutput {
	return o.ApplyT(func(v DomainSingleSignOn) *DomainAuthType { return v.Type }).(DomainAuthTypePtrOutput)
}

func (o DomainSingleSignOnOutput) UserAssignment() DomainUserAssignmentPtrOutput {
	return o.ApplyT(func(v DomainSingleSignOn) *DomainUserAssignment { return v.UserAssignment }).(DomainUserAssignmentPtrOutput)
}

type DomainSingleSignOnPtrOutput struct{ *pulumi.OutputState }

func (DomainSingleSignOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSingleSignOn)(nil)).Elem()
}

func (o DomainSingleSignOnPtrOutput) ToDomainSingleSignOnPtrOutput() DomainSingleSignOnPtrOutput {
	return o
}

func (o DomainSingleSignOnPtrOutput) ToDomainSingleSignOnPtrOutputWithContext(ctx context.Context) DomainSingleSignOnPtrOutput {
	return o
}

func (o DomainSingleSignOnPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSingleSignOn] {
	return pulumix.Output[*DomainSingleSignOn]{
		OutputState: o.OutputState,
	}
}

func (o DomainSingleSignOnPtrOutput) Elem() DomainSingleSignOnOutput {
	return o.ApplyT(func(v *DomainSingleSignOn) DomainSingleSignOn {
		if v != nil {
			return *v
		}
		var ret DomainSingleSignOn
		return ret
	}).(DomainSingleSignOnOutput)
}

func (o DomainSingleSignOnPtrOutput) Type() DomainAuthTypePtrOutput {
	return o.ApplyT(func(v *DomainSingleSignOn) *DomainAuthType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DomainAuthTypePtrOutput)
}

func (o DomainSingleSignOnPtrOutput) UserAssignment() DomainUserAssignmentPtrOutput {
	return o.ApplyT(func(v *DomainSingleSignOn) *DomainUserAssignment {
		if v == nil {
			return nil
		}
		return v.UserAssignment
	}).(DomainUserAssignmentPtrOutput)
}

// A key-value pair to associate with the domain.
type DomainTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// DomainTagInput is an input type that accepts DomainTagArgs and DomainTagOutput values.
// You can construct a concrete instance of `DomainTagInput` via:
//
//	DomainTagArgs{...}
type DomainTagInput interface {
	pulumi.Input

	ToDomainTagOutput() DomainTagOutput
	ToDomainTagOutputWithContext(context.Context) DomainTagOutput
}

// A key-value pair to associate with the domain.
type DomainTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DomainTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (i DomainTagArgs) ToDomainTagOutput() DomainTagOutput {
	return i.ToDomainTagOutputWithContext(context.Background())
}

func (i DomainTagArgs) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagOutput)
}

func (i DomainTagArgs) ToOutput(ctx context.Context) pulumix.Output[DomainTag] {
	return pulumix.Output[DomainTag]{
		OutputState: i.ToDomainTagOutputWithContext(ctx).OutputState,
	}
}

// DomainTagArrayInput is an input type that accepts DomainTagArray and DomainTagArrayOutput values.
// You can construct a concrete instance of `DomainTagArrayInput` via:
//
//	DomainTagArray{ DomainTagArgs{...} }
type DomainTagArrayInput interface {
	pulumi.Input

	ToDomainTagArrayOutput() DomainTagArrayOutput
	ToDomainTagArrayOutputWithContext(context.Context) DomainTagArrayOutput
}

type DomainTagArray []DomainTagInput

func (DomainTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (i DomainTagArray) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return i.ToDomainTagArrayOutputWithContext(context.Background())
}

func (i DomainTagArray) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagArrayOutput)
}

func (i DomainTagArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainTag] {
	return pulumix.Output[[]DomainTag]{
		OutputState: i.ToDomainTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with the domain.
type DomainTagOutput struct{ *pulumi.OutputState }

func (DomainTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (o DomainTagOutput) ToDomainTagOutput() DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToOutput(ctx context.Context) pulumix.Output[DomainTag] {
	return pulumix.Output[DomainTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag.
func (o DomainTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o DomainTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Value }).(pulumi.StringOutput)
}

type DomainTagArrayOutput struct{ *pulumi.OutputState }

func (DomainTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainTag] {
	return pulumix.Output[[]DomainTag]{
		OutputState: o.OutputState,
	}
}

func (o DomainTagArrayOutput) Index(i pulumi.IntInput) DomainTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainTag {
		return vs[0].([]DomainTag)[vs[1].(int)]
	}).(DomainTagOutput)
}

type EnvironmentBlueprintConfigurationParameter struct {
}

// EnvironmentBlueprintConfigurationParameterInput is an input type that accepts EnvironmentBlueprintConfigurationParameterArgs and EnvironmentBlueprintConfigurationParameterOutput values.
// You can construct a concrete instance of `EnvironmentBlueprintConfigurationParameterInput` via:
//
//	EnvironmentBlueprintConfigurationParameterArgs{...}
type EnvironmentBlueprintConfigurationParameterInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationParameterOutput() EnvironmentBlueprintConfigurationParameterOutput
	ToEnvironmentBlueprintConfigurationParameterOutputWithContext(context.Context) EnvironmentBlueprintConfigurationParameterOutput
}

type EnvironmentBlueprintConfigurationParameterArgs struct {
}

func (EnvironmentBlueprintConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBlueprintConfigurationParameter)(nil)).Elem()
}

func (i EnvironmentBlueprintConfigurationParameterArgs) ToEnvironmentBlueprintConfigurationParameterOutput() EnvironmentBlueprintConfigurationParameterOutput {
	return i.ToEnvironmentBlueprintConfigurationParameterOutputWithContext(context.Background())
}

func (i EnvironmentBlueprintConfigurationParameterArgs) ToEnvironmentBlueprintConfigurationParameterOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationParameterOutput)
}

func (i EnvironmentBlueprintConfigurationParameterArgs) ToOutput(ctx context.Context) pulumix.Output[EnvironmentBlueprintConfigurationParameter] {
	return pulumix.Output[EnvironmentBlueprintConfigurationParameter]{
		OutputState: i.ToEnvironmentBlueprintConfigurationParameterOutputWithContext(ctx).OutputState,
	}
}

func (i EnvironmentBlueprintConfigurationParameterArgs) ToEnvironmentBlueprintConfigurationParameterPtrOutput() EnvironmentBlueprintConfigurationParameterPtrOutput {
	return i.ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(context.Background())
}

func (i EnvironmentBlueprintConfigurationParameterArgs) ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationParameterOutput).ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(ctx)
}

// EnvironmentBlueprintConfigurationParameterPtrInput is an input type that accepts EnvironmentBlueprintConfigurationParameterArgs, EnvironmentBlueprintConfigurationParameterPtr and EnvironmentBlueprintConfigurationParameterPtrOutput values.
// You can construct a concrete instance of `EnvironmentBlueprintConfigurationParameterPtrInput` via:
//
//	        EnvironmentBlueprintConfigurationParameterArgs{...}
//
//	or:
//
//	        nil
type EnvironmentBlueprintConfigurationParameterPtrInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationParameterPtrOutput() EnvironmentBlueprintConfigurationParameterPtrOutput
	ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(context.Context) EnvironmentBlueprintConfigurationParameterPtrOutput
}

type environmentBlueprintConfigurationParameterPtrType EnvironmentBlueprintConfigurationParameterArgs

func EnvironmentBlueprintConfigurationParameterPtr(v *EnvironmentBlueprintConfigurationParameterArgs) EnvironmentBlueprintConfigurationParameterPtrInput {
	return (*environmentBlueprintConfigurationParameterPtrType)(v)
}

func (*environmentBlueprintConfigurationParameterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentBlueprintConfigurationParameter)(nil)).Elem()
}

func (i *environmentBlueprintConfigurationParameterPtrType) ToEnvironmentBlueprintConfigurationParameterPtrOutput() EnvironmentBlueprintConfigurationParameterPtrOutput {
	return i.ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(context.Background())
}

func (i *environmentBlueprintConfigurationParameterPtrType) ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationParameterPtrOutput)
}

func (i *environmentBlueprintConfigurationParameterPtrType) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentBlueprintConfigurationParameter] {
	return pulumix.Output[*EnvironmentBlueprintConfigurationParameter]{
		OutputState: i.ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(ctx).OutputState,
	}
}

type EnvironmentBlueprintConfigurationParameterOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBlueprintConfigurationParameter)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationParameterOutput) ToEnvironmentBlueprintConfigurationParameterOutput() EnvironmentBlueprintConfigurationParameterOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationParameterOutput) ToEnvironmentBlueprintConfigurationParameterOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationParameterOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationParameterOutput) ToEnvironmentBlueprintConfigurationParameterPtrOutput() EnvironmentBlueprintConfigurationParameterPtrOutput {
	return o.ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(context.Background())
}

func (o EnvironmentBlueprintConfigurationParameterOutput) ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationParameterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentBlueprintConfigurationParameter) *EnvironmentBlueprintConfigurationParameter {
		return &v
	}).(EnvironmentBlueprintConfigurationParameterPtrOutput)
}

func (o EnvironmentBlueprintConfigurationParameterOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentBlueprintConfigurationParameter] {
	return pulumix.Output[EnvironmentBlueprintConfigurationParameter]{
		OutputState: o.OutputState,
	}
}

type EnvironmentBlueprintConfigurationParameterPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationParameterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentBlueprintConfigurationParameter)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationParameterPtrOutput) ToEnvironmentBlueprintConfigurationParameterPtrOutput() EnvironmentBlueprintConfigurationParameterPtrOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationParameterPtrOutput) ToEnvironmentBlueprintConfigurationParameterPtrOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationParameterPtrOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationParameterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentBlueprintConfigurationParameter] {
	return pulumix.Output[*EnvironmentBlueprintConfigurationParameter]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentBlueprintConfigurationParameterPtrOutput) Elem() EnvironmentBlueprintConfigurationParameterOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfigurationParameter) EnvironmentBlueprintConfigurationParameter {
		if v != nil {
			return *v
		}
		var ret EnvironmentBlueprintConfigurationParameter
		return ret
	}).(EnvironmentBlueprintConfigurationParameterOutput)
}

type EnvironmentBlueprintConfigurationRegionalParameter struct {
	Parameters *EnvironmentBlueprintConfigurationParameter `pulumi:"parameters"`
	Region     *string                                     `pulumi:"region"`
}

// EnvironmentBlueprintConfigurationRegionalParameterInput is an input type that accepts EnvironmentBlueprintConfigurationRegionalParameterArgs and EnvironmentBlueprintConfigurationRegionalParameterOutput values.
// You can construct a concrete instance of `EnvironmentBlueprintConfigurationRegionalParameterInput` via:
//
//	EnvironmentBlueprintConfigurationRegionalParameterArgs{...}
type EnvironmentBlueprintConfigurationRegionalParameterInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationRegionalParameterOutput() EnvironmentBlueprintConfigurationRegionalParameterOutput
	ToEnvironmentBlueprintConfigurationRegionalParameterOutputWithContext(context.Context) EnvironmentBlueprintConfigurationRegionalParameterOutput
}

type EnvironmentBlueprintConfigurationRegionalParameterArgs struct {
	Parameters EnvironmentBlueprintConfigurationParameterPtrInput `pulumi:"parameters"`
	Region     pulumi.StringPtrInput                              `pulumi:"region"`
}

func (EnvironmentBlueprintConfigurationRegionalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBlueprintConfigurationRegionalParameter)(nil)).Elem()
}

func (i EnvironmentBlueprintConfigurationRegionalParameterArgs) ToEnvironmentBlueprintConfigurationRegionalParameterOutput() EnvironmentBlueprintConfigurationRegionalParameterOutput {
	return i.ToEnvironmentBlueprintConfigurationRegionalParameterOutputWithContext(context.Background())
}

func (i EnvironmentBlueprintConfigurationRegionalParameterArgs) ToEnvironmentBlueprintConfigurationRegionalParameterOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationRegionalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationRegionalParameterOutput)
}

func (i EnvironmentBlueprintConfigurationRegionalParameterArgs) ToOutput(ctx context.Context) pulumix.Output[EnvironmentBlueprintConfigurationRegionalParameter] {
	return pulumix.Output[EnvironmentBlueprintConfigurationRegionalParameter]{
		OutputState: i.ToEnvironmentBlueprintConfigurationRegionalParameterOutputWithContext(ctx).OutputState,
	}
}

// EnvironmentBlueprintConfigurationRegionalParameterArrayInput is an input type that accepts EnvironmentBlueprintConfigurationRegionalParameterArray and EnvironmentBlueprintConfigurationRegionalParameterArrayOutput values.
// You can construct a concrete instance of `EnvironmentBlueprintConfigurationRegionalParameterArrayInput` via:
//
//	EnvironmentBlueprintConfigurationRegionalParameterArray{ EnvironmentBlueprintConfigurationRegionalParameterArgs{...} }
type EnvironmentBlueprintConfigurationRegionalParameterArrayInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutput() EnvironmentBlueprintConfigurationRegionalParameterArrayOutput
	ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutputWithContext(context.Context) EnvironmentBlueprintConfigurationRegionalParameterArrayOutput
}

type EnvironmentBlueprintConfigurationRegionalParameterArray []EnvironmentBlueprintConfigurationRegionalParameterInput

func (EnvironmentBlueprintConfigurationRegionalParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentBlueprintConfigurationRegionalParameter)(nil)).Elem()
}

func (i EnvironmentBlueprintConfigurationRegionalParameterArray) ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutput() EnvironmentBlueprintConfigurationRegionalParameterArrayOutput {
	return i.ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutputWithContext(context.Background())
}

func (i EnvironmentBlueprintConfigurationRegionalParameterArray) ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationRegionalParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationRegionalParameterArrayOutput)
}

func (i EnvironmentBlueprintConfigurationRegionalParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentBlueprintConfigurationRegionalParameter] {
	return pulumix.Output[[]EnvironmentBlueprintConfigurationRegionalParameter]{
		OutputState: i.ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type EnvironmentBlueprintConfigurationRegionalParameterOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationRegionalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBlueprintConfigurationRegionalParameter)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationRegionalParameterOutput) ToEnvironmentBlueprintConfigurationRegionalParameterOutput() EnvironmentBlueprintConfigurationRegionalParameterOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationRegionalParameterOutput) ToEnvironmentBlueprintConfigurationRegionalParameterOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationRegionalParameterOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationRegionalParameterOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentBlueprintConfigurationRegionalParameter] {
	return pulumix.Output[EnvironmentBlueprintConfigurationRegionalParameter]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentBlueprintConfigurationRegionalParameterOutput) Parameters() EnvironmentBlueprintConfigurationParameterPtrOutput {
	return o.ApplyT(func(v EnvironmentBlueprintConfigurationRegionalParameter) *EnvironmentBlueprintConfigurationParameter {
		return v.Parameters
	}).(EnvironmentBlueprintConfigurationParameterPtrOutput)
}

func (o EnvironmentBlueprintConfigurationRegionalParameterOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentBlueprintConfigurationRegionalParameter) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type EnvironmentBlueprintConfigurationRegionalParameterArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationRegionalParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentBlueprintConfigurationRegionalParameter)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationRegionalParameterArrayOutput) ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutput() EnvironmentBlueprintConfigurationRegionalParameterArrayOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationRegionalParameterArrayOutput) ToEnvironmentBlueprintConfigurationRegionalParameterArrayOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationRegionalParameterArrayOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationRegionalParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentBlueprintConfigurationRegionalParameter] {
	return pulumix.Output[[]EnvironmentBlueprintConfigurationRegionalParameter]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentBlueprintConfigurationRegionalParameterArrayOutput) Index(i pulumi.IntInput) EnvironmentBlueprintConfigurationRegionalParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentBlueprintConfigurationRegionalParameter {
		return vs[0].([]EnvironmentBlueprintConfigurationRegionalParameter)[vs[1].(int)]
	}).(EnvironmentBlueprintConfigurationRegionalParameterOutput)
}

// The parameter details of an environment.
type EnvironmentParameter struct {
	// The name of an environment parameter.
	Name *string `pulumi:"name"`
	// The value of an environment parameter.
	Value *string `pulumi:"value"`
}

// EnvironmentParameterInput is an input type that accepts EnvironmentParameterArgs and EnvironmentParameterOutput values.
// You can construct a concrete instance of `EnvironmentParameterInput` via:
//
//	EnvironmentParameterArgs{...}
type EnvironmentParameterInput interface {
	pulumi.Input

	ToEnvironmentParameterOutput() EnvironmentParameterOutput
	ToEnvironmentParameterOutputWithContext(context.Context) EnvironmentParameterOutput
}

// The parameter details of an environment.
type EnvironmentParameterArgs struct {
	// The name of an environment parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of an environment parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentParameter)(nil)).Elem()
}

func (i EnvironmentParameterArgs) ToEnvironmentParameterOutput() EnvironmentParameterOutput {
	return i.ToEnvironmentParameterOutputWithContext(context.Background())
}

func (i EnvironmentParameterArgs) ToEnvironmentParameterOutputWithContext(ctx context.Context) EnvironmentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentParameterOutput)
}

func (i EnvironmentParameterArgs) ToOutput(ctx context.Context) pulumix.Output[EnvironmentParameter] {
	return pulumix.Output[EnvironmentParameter]{
		OutputState: i.ToEnvironmentParameterOutputWithContext(ctx).OutputState,
	}
}

// EnvironmentParameterArrayInput is an input type that accepts EnvironmentParameterArray and EnvironmentParameterArrayOutput values.
// You can construct a concrete instance of `EnvironmentParameterArrayInput` via:
//
//	EnvironmentParameterArray{ EnvironmentParameterArgs{...} }
type EnvironmentParameterArrayInput interface {
	pulumi.Input

	ToEnvironmentParameterArrayOutput() EnvironmentParameterArrayOutput
	ToEnvironmentParameterArrayOutputWithContext(context.Context) EnvironmentParameterArrayOutput
}

type EnvironmentParameterArray []EnvironmentParameterInput

func (EnvironmentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentParameter)(nil)).Elem()
}

func (i EnvironmentParameterArray) ToEnvironmentParameterArrayOutput() EnvironmentParameterArrayOutput {
	return i.ToEnvironmentParameterArrayOutputWithContext(context.Background())
}

func (i EnvironmentParameterArray) ToEnvironmentParameterArrayOutputWithContext(ctx context.Context) EnvironmentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentParameterArrayOutput)
}

func (i EnvironmentParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentParameter] {
	return pulumix.Output[[]EnvironmentParameter]{
		OutputState: i.ToEnvironmentParameterArrayOutputWithContext(ctx).OutputState,
	}
}

// The parameter details of an environment.
type EnvironmentParameterOutput struct{ *pulumi.OutputState }

func (EnvironmentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentParameter)(nil)).Elem()
}

func (o EnvironmentParameterOutput) ToEnvironmentParameterOutput() EnvironmentParameterOutput {
	return o
}

func (o EnvironmentParameterOutput) ToEnvironmentParameterOutputWithContext(ctx context.Context) EnvironmentParameterOutput {
	return o
}

func (o EnvironmentParameterOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentParameter] {
	return pulumix.Output[EnvironmentParameter]{
		OutputState: o.OutputState,
	}
}

// The name of an environment parameter.
func (o EnvironmentParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of an environment parameter.
func (o EnvironmentParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentParameterArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentParameter)(nil)).Elem()
}

func (o EnvironmentParameterArrayOutput) ToEnvironmentParameterArrayOutput() EnvironmentParameterArrayOutput {
	return o
}

func (o EnvironmentParameterArrayOutput) ToEnvironmentParameterArrayOutputWithContext(ctx context.Context) EnvironmentParameterArrayOutput {
	return o
}

func (o EnvironmentParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentParameter] {
	return pulumix.Output[[]EnvironmentParameter]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentParameterArrayOutput) Index(i pulumi.IntInput) EnvironmentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentParameter {
		return vs[0].([]EnvironmentParameter)[vs[1].(int)]
	}).(EnvironmentParameterOutput)
}

// The parameter details of an environment profile.
type EnvironmentProfileEnvironmentParameter struct {
	// The name of an environment profile parameter.
	Name *string `pulumi:"name"`
	// The value of an environment profile parameter.
	Value *string `pulumi:"value"`
}

// EnvironmentProfileEnvironmentParameterInput is an input type that accepts EnvironmentProfileEnvironmentParameterArgs and EnvironmentProfileEnvironmentParameterOutput values.
// You can construct a concrete instance of `EnvironmentProfileEnvironmentParameterInput` via:
//
//	EnvironmentProfileEnvironmentParameterArgs{...}
type EnvironmentProfileEnvironmentParameterInput interface {
	pulumi.Input

	ToEnvironmentProfileEnvironmentParameterOutput() EnvironmentProfileEnvironmentParameterOutput
	ToEnvironmentProfileEnvironmentParameterOutputWithContext(context.Context) EnvironmentProfileEnvironmentParameterOutput
}

// The parameter details of an environment profile.
type EnvironmentProfileEnvironmentParameterArgs struct {
	// The name of an environment profile parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of an environment profile parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentProfileEnvironmentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentProfileEnvironmentParameter)(nil)).Elem()
}

func (i EnvironmentProfileEnvironmentParameterArgs) ToEnvironmentProfileEnvironmentParameterOutput() EnvironmentProfileEnvironmentParameterOutput {
	return i.ToEnvironmentProfileEnvironmentParameterOutputWithContext(context.Background())
}

func (i EnvironmentProfileEnvironmentParameterArgs) ToEnvironmentProfileEnvironmentParameterOutputWithContext(ctx context.Context) EnvironmentProfileEnvironmentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentProfileEnvironmentParameterOutput)
}

func (i EnvironmentProfileEnvironmentParameterArgs) ToOutput(ctx context.Context) pulumix.Output[EnvironmentProfileEnvironmentParameter] {
	return pulumix.Output[EnvironmentProfileEnvironmentParameter]{
		OutputState: i.ToEnvironmentProfileEnvironmentParameterOutputWithContext(ctx).OutputState,
	}
}

// EnvironmentProfileEnvironmentParameterArrayInput is an input type that accepts EnvironmentProfileEnvironmentParameterArray and EnvironmentProfileEnvironmentParameterArrayOutput values.
// You can construct a concrete instance of `EnvironmentProfileEnvironmentParameterArrayInput` via:
//
//	EnvironmentProfileEnvironmentParameterArray{ EnvironmentProfileEnvironmentParameterArgs{...} }
type EnvironmentProfileEnvironmentParameterArrayInput interface {
	pulumi.Input

	ToEnvironmentProfileEnvironmentParameterArrayOutput() EnvironmentProfileEnvironmentParameterArrayOutput
	ToEnvironmentProfileEnvironmentParameterArrayOutputWithContext(context.Context) EnvironmentProfileEnvironmentParameterArrayOutput
}

type EnvironmentProfileEnvironmentParameterArray []EnvironmentProfileEnvironmentParameterInput

func (EnvironmentProfileEnvironmentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentProfileEnvironmentParameter)(nil)).Elem()
}

func (i EnvironmentProfileEnvironmentParameterArray) ToEnvironmentProfileEnvironmentParameterArrayOutput() EnvironmentProfileEnvironmentParameterArrayOutput {
	return i.ToEnvironmentProfileEnvironmentParameterArrayOutputWithContext(context.Background())
}

func (i EnvironmentProfileEnvironmentParameterArray) ToEnvironmentProfileEnvironmentParameterArrayOutputWithContext(ctx context.Context) EnvironmentProfileEnvironmentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentProfileEnvironmentParameterArrayOutput)
}

func (i EnvironmentProfileEnvironmentParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentProfileEnvironmentParameter] {
	return pulumix.Output[[]EnvironmentProfileEnvironmentParameter]{
		OutputState: i.ToEnvironmentProfileEnvironmentParameterArrayOutputWithContext(ctx).OutputState,
	}
}

// The parameter details of an environment profile.
type EnvironmentProfileEnvironmentParameterOutput struct{ *pulumi.OutputState }

func (EnvironmentProfileEnvironmentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentProfileEnvironmentParameter)(nil)).Elem()
}

func (o EnvironmentProfileEnvironmentParameterOutput) ToEnvironmentProfileEnvironmentParameterOutput() EnvironmentProfileEnvironmentParameterOutput {
	return o
}

func (o EnvironmentProfileEnvironmentParameterOutput) ToEnvironmentProfileEnvironmentParameterOutputWithContext(ctx context.Context) EnvironmentProfileEnvironmentParameterOutput {
	return o
}

func (o EnvironmentProfileEnvironmentParameterOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentProfileEnvironmentParameter] {
	return pulumix.Output[EnvironmentProfileEnvironmentParameter]{
		OutputState: o.OutputState,
	}
}

// The name of an environment profile parameter.
func (o EnvironmentProfileEnvironmentParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentProfileEnvironmentParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of an environment profile parameter.
func (o EnvironmentProfileEnvironmentParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentProfileEnvironmentParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentProfileEnvironmentParameterArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentProfileEnvironmentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentProfileEnvironmentParameter)(nil)).Elem()
}

func (o EnvironmentProfileEnvironmentParameterArrayOutput) ToEnvironmentProfileEnvironmentParameterArrayOutput() EnvironmentProfileEnvironmentParameterArrayOutput {
	return o
}

func (o EnvironmentProfileEnvironmentParameterArrayOutput) ToEnvironmentProfileEnvironmentParameterArrayOutputWithContext(ctx context.Context) EnvironmentProfileEnvironmentParameterArrayOutput {
	return o
}

func (o EnvironmentProfileEnvironmentParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentProfileEnvironmentParameter] {
	return pulumix.Output[[]EnvironmentProfileEnvironmentParameter]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentProfileEnvironmentParameterArrayOutput) Index(i pulumi.IntInput) EnvironmentProfileEnvironmentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentProfileEnvironmentParameter {
		return vs[0].([]EnvironmentProfileEnvironmentParameter)[vs[1].(int)]
	}).(EnvironmentProfileEnvironmentParameterOutput)
}

// The details of the subscription target configuration.
type SubscriptionTargetForm struct {
	// The content of the subscription target configuration.
	Content string `pulumi:"content"`
	// The form name included in the subscription target configuration.
	FormName string `pulumi:"formName"`
}

// SubscriptionTargetFormInput is an input type that accepts SubscriptionTargetFormArgs and SubscriptionTargetFormOutput values.
// You can construct a concrete instance of `SubscriptionTargetFormInput` via:
//
//	SubscriptionTargetFormArgs{...}
type SubscriptionTargetFormInput interface {
	pulumi.Input

	ToSubscriptionTargetFormOutput() SubscriptionTargetFormOutput
	ToSubscriptionTargetFormOutputWithContext(context.Context) SubscriptionTargetFormOutput
}

// The details of the subscription target configuration.
type SubscriptionTargetFormArgs struct {
	// The content of the subscription target configuration.
	Content pulumi.StringInput `pulumi:"content"`
	// The form name included in the subscription target configuration.
	FormName pulumi.StringInput `pulumi:"formName"`
}

func (SubscriptionTargetFormArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionTargetForm)(nil)).Elem()
}

func (i SubscriptionTargetFormArgs) ToSubscriptionTargetFormOutput() SubscriptionTargetFormOutput {
	return i.ToSubscriptionTargetFormOutputWithContext(context.Background())
}

func (i SubscriptionTargetFormArgs) ToSubscriptionTargetFormOutputWithContext(ctx context.Context) SubscriptionTargetFormOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionTargetFormOutput)
}

func (i SubscriptionTargetFormArgs) ToOutput(ctx context.Context) pulumix.Output[SubscriptionTargetForm] {
	return pulumix.Output[SubscriptionTargetForm]{
		OutputState: i.ToSubscriptionTargetFormOutputWithContext(ctx).OutputState,
	}
}

// SubscriptionTargetFormArrayInput is an input type that accepts SubscriptionTargetFormArray and SubscriptionTargetFormArrayOutput values.
// You can construct a concrete instance of `SubscriptionTargetFormArrayInput` via:
//
//	SubscriptionTargetFormArray{ SubscriptionTargetFormArgs{...} }
type SubscriptionTargetFormArrayInput interface {
	pulumi.Input

	ToSubscriptionTargetFormArrayOutput() SubscriptionTargetFormArrayOutput
	ToSubscriptionTargetFormArrayOutputWithContext(context.Context) SubscriptionTargetFormArrayOutput
}

type SubscriptionTargetFormArray []SubscriptionTargetFormInput

func (SubscriptionTargetFormArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionTargetForm)(nil)).Elem()
}

func (i SubscriptionTargetFormArray) ToSubscriptionTargetFormArrayOutput() SubscriptionTargetFormArrayOutput {
	return i.ToSubscriptionTargetFormArrayOutputWithContext(context.Background())
}

func (i SubscriptionTargetFormArray) ToSubscriptionTargetFormArrayOutputWithContext(ctx context.Context) SubscriptionTargetFormArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionTargetFormArrayOutput)
}

func (i SubscriptionTargetFormArray) ToOutput(ctx context.Context) pulumix.Output[[]SubscriptionTargetForm] {
	return pulumix.Output[[]SubscriptionTargetForm]{
		OutputState: i.ToSubscriptionTargetFormArrayOutputWithContext(ctx).OutputState,
	}
}

// The details of the subscription target configuration.
type SubscriptionTargetFormOutput struct{ *pulumi.OutputState }

func (SubscriptionTargetFormOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionTargetForm)(nil)).Elem()
}

func (o SubscriptionTargetFormOutput) ToSubscriptionTargetFormOutput() SubscriptionTargetFormOutput {
	return o
}

func (o SubscriptionTargetFormOutput) ToSubscriptionTargetFormOutputWithContext(ctx context.Context) SubscriptionTargetFormOutput {
	return o
}

func (o SubscriptionTargetFormOutput) ToOutput(ctx context.Context) pulumix.Output[SubscriptionTargetForm] {
	return pulumix.Output[SubscriptionTargetForm]{
		OutputState: o.OutputState,
	}
}

// The content of the subscription target configuration.
func (o SubscriptionTargetFormOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionTargetForm) string { return v.Content }).(pulumi.StringOutput)
}

// The form name included in the subscription target configuration.
func (o SubscriptionTargetFormOutput) FormName() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionTargetForm) string { return v.FormName }).(pulumi.StringOutput)
}

type SubscriptionTargetFormArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionTargetFormArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionTargetForm)(nil)).Elem()
}

func (o SubscriptionTargetFormArrayOutput) ToSubscriptionTargetFormArrayOutput() SubscriptionTargetFormArrayOutput {
	return o
}

func (o SubscriptionTargetFormArrayOutput) ToSubscriptionTargetFormArrayOutputWithContext(ctx context.Context) SubscriptionTargetFormArrayOutput {
	return o
}

func (o SubscriptionTargetFormArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SubscriptionTargetForm] {
	return pulumix.Output[[]SubscriptionTargetForm]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionTargetFormArrayOutput) Index(i pulumi.IntInput) SubscriptionTargetFormOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionTargetForm {
		return vs[0].([]SubscriptionTargetForm)[vs[1].(int)]
	}).(SubscriptionTargetFormOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFormInputInput)(nil)).Elem(), DataSourceFormInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFormInputArrayInput)(nil)).Elem(), DataSourceFormInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRecommendationConfigurationInput)(nil)).Elem(), DataSourceRecommendationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRecommendationConfigurationPtrInput)(nil)).Elem(), DataSourceRecommendationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceScheduleConfigurationInput)(nil)).Elem(), DataSourceScheduleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceScheduleConfigurationPtrInput)(nil)).Elem(), DataSourceScheduleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSingleSignOnInput)(nil)).Elem(), DomainSingleSignOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSingleSignOnPtrInput)(nil)).Elem(), DomainSingleSignOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTagInput)(nil)).Elem(), DomainTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTagArrayInput)(nil)).Elem(), DomainTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationParameterInput)(nil)).Elem(), EnvironmentBlueprintConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationParameterPtrInput)(nil)).Elem(), EnvironmentBlueprintConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationRegionalParameterInput)(nil)).Elem(), EnvironmentBlueprintConfigurationRegionalParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationRegionalParameterArrayInput)(nil)).Elem(), EnvironmentBlueprintConfigurationRegionalParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentParameterInput)(nil)).Elem(), EnvironmentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentParameterArrayInput)(nil)).Elem(), EnvironmentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentProfileEnvironmentParameterInput)(nil)).Elem(), EnvironmentProfileEnvironmentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentProfileEnvironmentParameterArrayInput)(nil)).Elem(), EnvironmentProfileEnvironmentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionTargetFormInput)(nil)).Elem(), SubscriptionTargetFormArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionTargetFormArrayInput)(nil)).Elem(), SubscriptionTargetFormArray{})
	pulumi.RegisterOutputType(DataSourceFormInputOutput{})
	pulumi.RegisterOutputType(DataSourceFormInputArrayOutput{})
	pulumi.RegisterOutputType(DataSourceRecommendationConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceRecommendationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceScheduleConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceScheduleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DomainSingleSignOnOutput{})
	pulumi.RegisterOutputType(DomainSingleSignOnPtrOutput{})
	pulumi.RegisterOutputType(DomainTagOutput{})
	pulumi.RegisterOutputType(DomainTagArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationParameterOutput{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationParameterPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationRegionalParameterOutput{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationRegionalParameterArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentParameterOutput{})
	pulumi.RegisterOutputType(EnvironmentParameterArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentProfileEnvironmentParameterOutput{})
	pulumi.RegisterOutputType(EnvironmentProfileEnvironmentParameterArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionTargetFormOutput{})
	pulumi.RegisterOutputType(SubscriptionTargetFormArrayOutput{})
}
