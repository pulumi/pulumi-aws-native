// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Subscription targets enables one to access the data to which you have subscribed in your projects.
func LookupSubscriptionTarget(ctx *pulumi.Context, args *LookupSubscriptionTargetArgs, opts ...pulumi.InvokeOption) (*LookupSubscriptionTargetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubscriptionTargetResult
	err := ctx.Invoke("aws-native:datazone:getSubscriptionTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSubscriptionTargetArgs struct {
	// The ID of the Amazon DataZone domain in which subscription target is created.
	DomainId string `pulumi:"domainId"`
	// The ID of the environment in which subscription target is created.
	EnvironmentId string `pulumi:"environmentId"`
	// The ID of the subscription target.
	Id string `pulumi:"id"`
}

type LookupSubscriptionTargetResult struct {
	// The asset types that can be included in the subscription target.
	ApplicableAssetTypes []string `pulumi:"applicableAssetTypes"`
	// The authorized principals of the subscription target.
	AuthorizedPrincipals []string `pulumi:"authorizedPrincipals"`
	// The timestamp of when the subscription target was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The Amazon DataZone user who created the subscription target.
	CreatedBy *string `pulumi:"createdBy"`
	// The ID of the Amazon DataZone domain in which subscription target is created.
	DomainId *string `pulumi:"domainId"`
	// The ID of the environment in which subscription target is created.
	EnvironmentId *string `pulumi:"environmentId"`
	// The ID of the subscription target.
	Id *string `pulumi:"id"`
	// The manage access role that is used to create the subscription target.
	ManageAccessRole *string `pulumi:"manageAccessRole"`
	// The name of the subscription target.
	Name *string `pulumi:"name"`
	// The identifier of the project specified in the subscription target.
	ProjectId *string `pulumi:"projectId"`
	// The provider of the subscription target.
	Provider *string `pulumi:"provider"`
	// The configuration of the subscription target.
	SubscriptionTargetConfig []SubscriptionTargetForm `pulumi:"subscriptionTargetConfig"`
	// The timestamp of when the subscription target was updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The Amazon DataZone user who updated the subscription target.
	UpdatedBy *string `pulumi:"updatedBy"`
}

func LookupSubscriptionTargetOutput(ctx *pulumi.Context, args LookupSubscriptionTargetOutputArgs, opts ...pulumi.InvokeOption) LookupSubscriptionTargetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscriptionTargetResult, error) {
			args := v.(LookupSubscriptionTargetArgs)
			r, err := LookupSubscriptionTarget(ctx, &args, opts...)
			var s LookupSubscriptionTargetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscriptionTargetResultOutput)
}

type LookupSubscriptionTargetOutputArgs struct {
	// The ID of the Amazon DataZone domain in which subscription target is created.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// The ID of the environment in which subscription target is created.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// The ID of the subscription target.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSubscriptionTargetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionTargetArgs)(nil)).Elem()
}

type LookupSubscriptionTargetResultOutput struct{ *pulumi.OutputState }

func (LookupSubscriptionTargetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionTargetResult)(nil)).Elem()
}

func (o LookupSubscriptionTargetResultOutput) ToLookupSubscriptionTargetResultOutput() LookupSubscriptionTargetResultOutput {
	return o
}

func (o LookupSubscriptionTargetResultOutput) ToLookupSubscriptionTargetResultOutputWithContext(ctx context.Context) LookupSubscriptionTargetResultOutput {
	return o
}

// The asset types that can be included in the subscription target.
func (o LookupSubscriptionTargetResultOutput) ApplicableAssetTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) []string { return v.ApplicableAssetTypes }).(pulumi.StringArrayOutput)
}

// The authorized principals of the subscription target.
func (o LookupSubscriptionTargetResultOutput) AuthorizedPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) []string { return v.AuthorizedPrincipals }).(pulumi.StringArrayOutput)
}

// The timestamp of when the subscription target was created.
func (o LookupSubscriptionTargetResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The Amazon DataZone user who created the subscription target.
func (o LookupSubscriptionTargetResultOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The ID of the Amazon DataZone domain in which subscription target is created.
func (o LookupSubscriptionTargetResultOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// The ID of the environment in which subscription target is created.
func (o LookupSubscriptionTargetResultOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The ID of the subscription target.
func (o LookupSubscriptionTargetResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The manage access role that is used to create the subscription target.
func (o LookupSubscriptionTargetResultOutput) ManageAccessRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.ManageAccessRole }).(pulumi.StringPtrOutput)
}

// The name of the subscription target.
func (o LookupSubscriptionTargetResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The identifier of the project specified in the subscription target.
func (o LookupSubscriptionTargetResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The provider of the subscription target.
func (o LookupSubscriptionTargetResultOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// The configuration of the subscription target.
func (o LookupSubscriptionTargetResultOutput) SubscriptionTargetConfig() SubscriptionTargetFormArrayOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) []SubscriptionTargetForm { return v.SubscriptionTargetConfig }).(SubscriptionTargetFormArrayOutput)
}

// The timestamp of when the subscription target was updated.
func (o LookupSubscriptionTargetResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The Amazon DataZone user who updated the subscription target.
func (o LookupSubscriptionTargetResultOutput) UpdatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscriptionTargetResult) *string { return v.UpdatedBy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscriptionTargetResultOutput{})
}
