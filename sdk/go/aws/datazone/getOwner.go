// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A owner can set up authorization permissions on their resources.
func LookupOwner(ctx *pulumi.Context, args *LookupOwnerArgs, opts ...pulumi.InvokeOption) (*LookupOwnerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOwnerResult
	err := ctx.Invoke("aws-native:datazone:getOwner", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOwnerArgs struct {
	// The ID of the domain in which you want to add the entity owner.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The ID of the entity to which you want to add an owner.
	EntityIdentifier string `pulumi:"entityIdentifier"`
	// The type of an entity.
	EntityType      OwnerEntityType `pulumi:"entityType"`
	OwnerIdentifier string          `pulumi:"ownerIdentifier"`
	OwnerType       OwnerType       `pulumi:"ownerType"`
}

type LookupOwnerResult struct {
	OwnerIdentifier *string    `pulumi:"ownerIdentifier"`
	OwnerType       *OwnerType `pulumi:"ownerType"`
}

func LookupOwnerOutput(ctx *pulumi.Context, args LookupOwnerOutputArgs, opts ...pulumi.InvokeOption) LookupOwnerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOwnerResultOutput, error) {
			args := v.(LookupOwnerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:datazone:getOwner", args, LookupOwnerResultOutput{}, options).(LookupOwnerResultOutput), nil
		}).(LookupOwnerResultOutput)
}

type LookupOwnerOutputArgs struct {
	// The ID of the domain in which you want to add the entity owner.
	DomainIdentifier pulumi.StringInput `pulumi:"domainIdentifier"`
	// The ID of the entity to which you want to add an owner.
	EntityIdentifier pulumi.StringInput `pulumi:"entityIdentifier"`
	// The type of an entity.
	EntityType      OwnerEntityTypeInput `pulumi:"entityType"`
	OwnerIdentifier pulumi.StringInput   `pulumi:"ownerIdentifier"`
	OwnerType       OwnerTypeInput       `pulumi:"ownerType"`
}

func (LookupOwnerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOwnerArgs)(nil)).Elem()
}

type LookupOwnerResultOutput struct{ *pulumi.OutputState }

func (LookupOwnerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOwnerResult)(nil)).Elem()
}

func (o LookupOwnerResultOutput) ToLookupOwnerResultOutput() LookupOwnerResultOutput {
	return o
}

func (o LookupOwnerResultOutput) ToLookupOwnerResultOutputWithContext(ctx context.Context) LookupOwnerResultOutput {
	return o
}

func (o LookupOwnerResultOutput) OwnerIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOwnerResult) *string { return v.OwnerIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupOwnerResultOutput) OwnerType() OwnerTypePtrOutput {
	return o.ApplyT(func(v LookupOwnerResult) *OwnerType { return v.OwnerType }).(OwnerTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOwnerResultOutput{})
}
