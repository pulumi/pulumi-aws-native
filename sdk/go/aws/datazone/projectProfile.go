// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::DataZone::ProjectProfile Resource Type
type ProjectProfile struct {
	pulumi.CustomResourceState

	AllowedDesignations  ProjectProfileDesignationConfigurationArrayOutput `pulumi:"allowedDesignations"`
	AwsId                pulumi.StringOutput                               `pulumi:"awsId"`
	ChangeLog            pulumi.StringPtrOutput                            `pulumi:"changeLog"`
	CreatedAt            pulumi.StringOutput                               `pulumi:"createdAt"`
	CreatedBy            pulumi.StringOutput                               `pulumi:"createdBy"`
	Description          pulumi.StringPtrOutput                            `pulumi:"description"`
	DomainId             pulumi.StringOutput                               `pulumi:"domainId"`
	DomainIdentifier     pulumi.StringPtrOutput                            `pulumi:"domainIdentifier"`
	DomainUnitId         pulumi.StringOutput                               `pulumi:"domainUnitId"`
	DomainUnitIdentifier pulumi.StringPtrOutput                            `pulumi:"domainUnitIdentifier"`
	Identifier           pulumi.StringOutput                               `pulumi:"identifier"`
	LastUpdatedAt        pulumi.StringOutput                               `pulumi:"lastUpdatedAt"`
	Name                 pulumi.StringOutput                               `pulumi:"name"`
	ProjectScopes        ProjectProfileProjectScopeArrayOutput             `pulumi:"projectScopes"`
	Status               ProjectProfileStatusPtrOutput                     `pulumi:"status"`
}

// NewProjectProfile registers a new resource with the given unique name, arguments, and options.
func NewProjectProfile(ctx *pulumi.Context,
	name string, args *ProjectProfileArgs, opts ...pulumi.ResourceOption) (*ProjectProfile, error) {
	if args == nil {
		args = &ProjectProfileArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProjectProfile
	err := ctx.RegisterResource("aws-native:datazone:ProjectProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectProfile gets an existing ProjectProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectProfileState, opts ...pulumi.ResourceOption) (*ProjectProfile, error) {
	var resource ProjectProfile
	err := ctx.ReadResource("aws-native:datazone:ProjectProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectProfile resources.
type projectProfileState struct {
}

type ProjectProfileState struct {
}

func (ProjectProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectProfileState)(nil)).Elem()
}

type projectProfileArgs struct {
	AllowedDesignations  []ProjectProfileDesignationConfiguration `pulumi:"allowedDesignations"`
	ChangeLog            *string                                  `pulumi:"changeLog"`
	Description          *string                                  `pulumi:"description"`
	DomainIdentifier     *string                                  `pulumi:"domainIdentifier"`
	DomainUnitIdentifier *string                                  `pulumi:"domainUnitIdentifier"`
	Name                 *string                                  `pulumi:"name"`
	ProjectScopes        []ProjectProfileProjectScope             `pulumi:"projectScopes"`
	Status               *ProjectProfileStatus                    `pulumi:"status"`
}

// The set of arguments for constructing a ProjectProfile resource.
type ProjectProfileArgs struct {
	AllowedDesignations  ProjectProfileDesignationConfigurationArrayInput
	ChangeLog            pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DomainIdentifier     pulumi.StringPtrInput
	DomainUnitIdentifier pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	ProjectScopes        ProjectProfileProjectScopeArrayInput
	Status               ProjectProfileStatusPtrInput
}

func (ProjectProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectProfileArgs)(nil)).Elem()
}

type ProjectProfileInput interface {
	pulumi.Input

	ToProjectProfileOutput() ProjectProfileOutput
	ToProjectProfileOutputWithContext(ctx context.Context) ProjectProfileOutput
}

func (*ProjectProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProfile)(nil)).Elem()
}

func (i *ProjectProfile) ToProjectProfileOutput() ProjectProfileOutput {
	return i.ToProjectProfileOutputWithContext(context.Background())
}

func (i *ProjectProfile) ToProjectProfileOutputWithContext(ctx context.Context) ProjectProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectProfileOutput)
}

type ProjectProfileOutput struct{ *pulumi.OutputState }

func (ProjectProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProfile)(nil)).Elem()
}

func (o ProjectProfileOutput) ToProjectProfileOutput() ProjectProfileOutput {
	return o
}

func (o ProjectProfileOutput) ToProjectProfileOutputWithContext(ctx context.Context) ProjectProfileOutput {
	return o
}

func (o ProjectProfileOutput) AllowedDesignations() ProjectProfileDesignationConfigurationArrayOutput {
	return o.ApplyT(func(v *ProjectProfile) ProjectProfileDesignationConfigurationArrayOutput {
		return v.AllowedDesignations
	}).(ProjectProfileDesignationConfigurationArrayOutput)
}

func (o ProjectProfileOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) ChangeLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringPtrOutput { return v.ChangeLog }).(pulumi.StringPtrOutput)
}

func (o ProjectProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProjectProfileOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) DomainIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringPtrOutput { return v.DomainIdentifier }).(pulumi.StringPtrOutput)
}

func (o ProjectProfileOutput) DomainUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.DomainUnitId }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) DomainUnitIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringPtrOutput { return v.DomainUnitIdentifier }).(pulumi.StringPtrOutput)
}

func (o ProjectProfileOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProjectProfileOutput) ProjectScopes() ProjectProfileProjectScopeArrayOutput {
	return o.ApplyT(func(v *ProjectProfile) ProjectProfileProjectScopeArrayOutput { return v.ProjectScopes }).(ProjectProfileProjectScopeArrayOutput)
}

func (o ProjectProfileOutput) Status() ProjectProfileStatusPtrOutput {
	return o.ApplyT(func(v *ProjectProfile) ProjectProfileStatusPtrOutput { return v.Status }).(ProjectProfileStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectProfileInput)(nil)).Elem(), &ProjectProfile{})
	pulumi.RegisterOutputType(ProjectProfileOutput{})
}
