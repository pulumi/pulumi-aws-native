// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create and manage form types in Amazon Datazone
type FormType struct {
	pulumi.CustomResourceState

	// The timestamp of when this Amazon DataZone metadata form type was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The user who created this Amazon DataZone metadata form type.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The description of this Amazon DataZone metadata form type.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainIdentifier pulumi.StringOutput `pulumi:"domainIdentifier"`
	// The ID of this Amazon DataZone metadata form type.
	FormTypeIdentifier pulumi.StringOutput `pulumi:"formTypeIdentifier"`
	// The model of this Amazon DataZone metadata form type.
	Model FormTypeModelOutput `pulumi:"model"`
	// The name of this Amazon DataZone metadata form type.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project that owns this Amazon DataZone metadata form type.
	OwningProjectId pulumi.StringOutput `pulumi:"owningProjectId"`
	// The ID of the Amazon DataZone project that owns this metadata form type.
	OwningProjectIdentifier pulumi.StringOutput `pulumi:"owningProjectIdentifier"`
	// The revision of this Amazon DataZone metadata form type.
	Revision pulumi.StringOutput `pulumi:"revision"`
	// The status of this Amazon DataZone metadata form type.
	Status FormTypeStatusPtrOutput `pulumi:"status"`
}

// NewFormType registers a new resource with the given unique name, arguments, and options.
func NewFormType(ctx *pulumi.Context,
	name string, args *FormTypeArgs, opts ...pulumi.ResourceOption) (*FormType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DomainIdentifier'")
	}
	if args.Model == nil {
		return nil, errors.New("invalid value for required argument 'Model'")
	}
	if args.OwningProjectIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'OwningProjectIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainIdentifier",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FormType
	err := ctx.RegisterResource("aws-native:datazone:FormType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFormType gets an existing FormType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFormType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FormTypeState, opts ...pulumi.ResourceOption) (*FormType, error) {
	var resource FormType
	err := ctx.ReadResource("aws-native:datazone:FormType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FormType resources.
type formTypeState struct {
}

type FormTypeState struct {
}

func (FormTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*formTypeState)(nil)).Elem()
}

type formTypeArgs struct {
	// The description of this Amazon DataZone metadata form type.
	Description *string `pulumi:"description"`
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The model of this Amazon DataZone metadata form type.
	Model FormTypeModel `pulumi:"model"`
	// The name of this Amazon DataZone metadata form type.
	Name *string `pulumi:"name"`
	// The ID of the Amazon DataZone project that owns this metadata form type.
	OwningProjectIdentifier string `pulumi:"owningProjectIdentifier"`
	// The status of this Amazon DataZone metadata form type.
	Status *FormTypeStatus `pulumi:"status"`
}

// The set of arguments for constructing a FormType resource.
type FormTypeArgs struct {
	// The description of this Amazon DataZone metadata form type.
	Description pulumi.StringPtrInput
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainIdentifier pulumi.StringInput
	// The model of this Amazon DataZone metadata form type.
	Model FormTypeModelInput
	// The name of this Amazon DataZone metadata form type.
	Name pulumi.StringPtrInput
	// The ID of the Amazon DataZone project that owns this metadata form type.
	OwningProjectIdentifier pulumi.StringInput
	// The status of this Amazon DataZone metadata form type.
	Status FormTypeStatusPtrInput
}

func (FormTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*formTypeArgs)(nil)).Elem()
}

type FormTypeInput interface {
	pulumi.Input

	ToFormTypeOutput() FormTypeOutput
	ToFormTypeOutputWithContext(ctx context.Context) FormTypeOutput
}

func (*FormType) ElementType() reflect.Type {
	return reflect.TypeOf((**FormType)(nil)).Elem()
}

func (i *FormType) ToFormTypeOutput() FormTypeOutput {
	return i.ToFormTypeOutputWithContext(context.Background())
}

func (i *FormType) ToFormTypeOutputWithContext(ctx context.Context) FormTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FormTypeOutput)
}

type FormTypeOutput struct{ *pulumi.OutputState }

func (FormTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormType)(nil)).Elem()
}

func (o FormTypeOutput) ToFormTypeOutput() FormTypeOutput {
	return o
}

func (o FormTypeOutput) ToFormTypeOutputWithContext(ctx context.Context) FormTypeOutput {
	return o
}

// The timestamp of when this Amazon DataZone metadata form type was created.
func (o FormTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The user who created this Amazon DataZone metadata form type.
func (o FormTypeOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of this Amazon DataZone metadata form type.
func (o FormTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the Amazon DataZone domain in which this metadata form type is created.
func (o FormTypeOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// The ID of the Amazon DataZone domain in which this metadata form type is created.
func (o FormTypeOutput) DomainIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.DomainIdentifier }).(pulumi.StringOutput)
}

// The ID of this Amazon DataZone metadata form type.
func (o FormTypeOutput) FormTypeIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.FormTypeIdentifier }).(pulumi.StringOutput)
}

// The model of this Amazon DataZone metadata form type.
func (o FormTypeOutput) Model() FormTypeModelOutput {
	return o.ApplyT(func(v *FormType) FormTypeModelOutput { return v.Model }).(FormTypeModelOutput)
}

// The name of this Amazon DataZone metadata form type.
func (o FormTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project that owns this Amazon DataZone metadata form type.
func (o FormTypeOutput) OwningProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.OwningProjectId }).(pulumi.StringOutput)
}

// The ID of the Amazon DataZone project that owns this metadata form type.
func (o FormTypeOutput) OwningProjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.OwningProjectIdentifier }).(pulumi.StringOutput)
}

// The revision of this Amazon DataZone metadata form type.
func (o FormTypeOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v *FormType) pulumi.StringOutput { return v.Revision }).(pulumi.StringOutput)
}

// The status of this Amazon DataZone metadata form type.
func (o FormTypeOutput) Status() FormTypeStatusPtrOutput {
	return o.ApplyT(func(v *FormType) FormTypeStatusPtrOutput { return v.Status }).(FormTypeStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FormTypeInput)(nil)).Elem(), &FormType{})
	pulumi.RegisterOutputType(FormTypeOutput{})
}
