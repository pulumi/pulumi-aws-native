// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// AWS Datazone Environment Profile is pre-configured set of resources and blueprints that provide reusable templates for creating environments.
type EnvironmentProfile struct {
	pulumi.CustomResourceState

	// The AWS account in which the Amazon DataZone environment is created.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// The AWS region in which this environment profile is created.
	AwsAccountRegion pulumi.StringOutput `pulumi:"awsAccountRegion"`
	// The timestamp of when this environment profile was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The Amazon DataZone user who created this environment profile.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The description of this Amazon DataZone environment profile.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the Amazon DataZone domain in which this environment profile is created.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// The ID of the Amazon DataZone domain in which this environment profile is created.
	DomainIdentifier pulumi.StringOutput `pulumi:"domainIdentifier"`
	// The ID of the blueprint with which this environment profile is created.
	EnvironmentBlueprintId pulumi.StringOutput `pulumi:"environmentBlueprintId"`
	// The ID of the blueprint with which this environment profile is created.
	EnvironmentBlueprintIdentifier pulumi.StringOutput `pulumi:"environmentBlueprintIdentifier"`
	// The name of this Amazon DataZone environment profile.
	Name pulumi.StringOutput `pulumi:"name"`
	// The identifier of the project in which to create the environment profile.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The identifier of the project in which to create the environment profile.
	ProjectIdentifier pulumi.StringOutput `pulumi:"projectIdentifier"`
	// The timestamp of when this environment profile was updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The user parameters of this Amazon DataZone environment profile.
	UserParameters EnvironmentProfileEnvironmentParameterArrayOutput `pulumi:"userParameters"`
}

// NewEnvironmentProfile registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentProfile(ctx *pulumi.Context,
	name string, args *EnvironmentProfileArgs, opts ...pulumi.ResourceOption) (*EnvironmentProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountId'")
	}
	if args.AwsAccountRegion == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountRegion'")
	}
	if args.DomainIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DomainIdentifier'")
	}
	if args.EnvironmentBlueprintIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentBlueprintIdentifier'")
	}
	if args.ProjectIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ProjectIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainIdentifier",
		"environmentBlueprintIdentifier",
		"projectIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentProfile
	err := ctx.RegisterResource("aws-native:datazone:EnvironmentProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentProfile gets an existing EnvironmentProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentProfileState, opts ...pulumi.ResourceOption) (*EnvironmentProfile, error) {
	var resource EnvironmentProfile
	err := ctx.ReadResource("aws-native:datazone:EnvironmentProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentProfile resources.
type environmentProfileState struct {
}

type EnvironmentProfileState struct {
}

func (EnvironmentProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentProfileState)(nil)).Elem()
}

type environmentProfileArgs struct {
	// The AWS account in which the Amazon DataZone environment is created.
	AwsAccountId string `pulumi:"awsAccountId"`
	// The AWS region in which this environment profile is created.
	AwsAccountRegion string `pulumi:"awsAccountRegion"`
	// The description of this Amazon DataZone environment profile.
	Description *string `pulumi:"description"`
	// The ID of the Amazon DataZone domain in which this environment profile is created.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The ID of the blueprint with which this environment profile is created.
	EnvironmentBlueprintIdentifier string `pulumi:"environmentBlueprintIdentifier"`
	// The name of this Amazon DataZone environment profile.
	Name *string `pulumi:"name"`
	// The identifier of the project in which to create the environment profile.
	ProjectIdentifier string `pulumi:"projectIdentifier"`
	// The user parameters of this Amazon DataZone environment profile.
	UserParameters []EnvironmentProfileEnvironmentParameter `pulumi:"userParameters"`
}

// The set of arguments for constructing a EnvironmentProfile resource.
type EnvironmentProfileArgs struct {
	// The AWS account in which the Amazon DataZone environment is created.
	AwsAccountId pulumi.StringInput
	// The AWS region in which this environment profile is created.
	AwsAccountRegion pulumi.StringInput
	// The description of this Amazon DataZone environment profile.
	Description pulumi.StringPtrInput
	// The ID of the Amazon DataZone domain in which this environment profile is created.
	DomainIdentifier pulumi.StringInput
	// The ID of the blueprint with which this environment profile is created.
	EnvironmentBlueprintIdentifier pulumi.StringInput
	// The name of this Amazon DataZone environment profile.
	Name pulumi.StringPtrInput
	// The identifier of the project in which to create the environment profile.
	ProjectIdentifier pulumi.StringInput
	// The user parameters of this Amazon DataZone environment profile.
	UserParameters EnvironmentProfileEnvironmentParameterArrayInput
}

func (EnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentProfileArgs)(nil)).Elem()
}

type EnvironmentProfileInput interface {
	pulumi.Input

	ToEnvironmentProfileOutput() EnvironmentProfileOutput
	ToEnvironmentProfileOutputWithContext(ctx context.Context) EnvironmentProfileOutput
}

func (*EnvironmentProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentProfile)(nil)).Elem()
}

func (i *EnvironmentProfile) ToEnvironmentProfileOutput() EnvironmentProfileOutput {
	return i.ToEnvironmentProfileOutputWithContext(context.Background())
}

func (i *EnvironmentProfile) ToEnvironmentProfileOutputWithContext(ctx context.Context) EnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentProfileOutput)
}

func (i *EnvironmentProfile) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentProfile] {
	return pulumix.Output[*EnvironmentProfile]{
		OutputState: i.ToEnvironmentProfileOutputWithContext(ctx).OutputState,
	}
}

type EnvironmentProfileOutput struct{ *pulumi.OutputState }

func (EnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentProfile)(nil)).Elem()
}

func (o EnvironmentProfileOutput) ToEnvironmentProfileOutput() EnvironmentProfileOutput {
	return o
}

func (o EnvironmentProfileOutput) ToEnvironmentProfileOutputWithContext(ctx context.Context) EnvironmentProfileOutput {
	return o
}

func (o EnvironmentProfileOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentProfile] {
	return pulumix.Output[*EnvironmentProfile]{
		OutputState: o.OutputState,
	}
}

// The AWS account in which the Amazon DataZone environment is created.
func (o EnvironmentProfileOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// The AWS region in which this environment profile is created.
func (o EnvironmentProfileOutput) AwsAccountRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.AwsAccountRegion }).(pulumi.StringOutput)
}

// The timestamp of when this environment profile was created.
func (o EnvironmentProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The Amazon DataZone user who created this environment profile.
func (o EnvironmentProfileOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of this Amazon DataZone environment profile.
func (o EnvironmentProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the Amazon DataZone domain in which this environment profile is created.
func (o EnvironmentProfileOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// The ID of the Amazon DataZone domain in which this environment profile is created.
func (o EnvironmentProfileOutput) DomainIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.DomainIdentifier }).(pulumi.StringOutput)
}

// The ID of the blueprint with which this environment profile is created.
func (o EnvironmentProfileOutput) EnvironmentBlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.EnvironmentBlueprintId }).(pulumi.StringOutput)
}

// The ID of the blueprint with which this environment profile is created.
func (o EnvironmentProfileOutput) EnvironmentBlueprintIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.EnvironmentBlueprintIdentifier }).(pulumi.StringOutput)
}

// The name of this Amazon DataZone environment profile.
func (o EnvironmentProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The identifier of the project in which to create the environment profile.
func (o EnvironmentProfileOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The identifier of the project in which to create the environment profile.
func (o EnvironmentProfileOutput) ProjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.ProjectIdentifier }).(pulumi.StringOutput)
}

// The timestamp of when this environment profile was updated.
func (o EnvironmentProfileOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The user parameters of this Amazon DataZone environment profile.
func (o EnvironmentProfileOutput) UserParameters() EnvironmentProfileEnvironmentParameterArrayOutput {
	return o.ApplyT(func(v *EnvironmentProfile) EnvironmentProfileEnvironmentParameterArrayOutput { return v.UserParameters }).(EnvironmentProfileEnvironmentParameterArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentProfileInput)(nil)).Elem(), &EnvironmentProfile{})
	pulumi.RegisterOutputType(EnvironmentProfileOutput{})
}
