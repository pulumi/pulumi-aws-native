// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::DataZone::ProjectMembership Resource Type
func LookupProjectMembership(ctx *pulumi.Context, args *LookupProjectMembershipArgs, opts ...pulumi.InvokeOption) (*LookupProjectMembershipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectMembershipResult
	err := ctx.Invoke("aws-native:datazone:getProjectMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProjectMembershipArgs struct {
	// The ID of the Amazon DataZone domain in which project membership is created.
	DomainIdentifier     string                                `pulumi:"domainIdentifier"`
	MemberIdentifier     string                                `pulumi:"memberIdentifier"`
	MemberIdentifierType ProjectMembershipMemberIdentifierType `pulumi:"memberIdentifierType"`
	// The ID of the project for which this project membership was created.
	ProjectIdentifier string `pulumi:"projectIdentifier"`
}

type LookupProjectMembershipResult struct {
	MemberIdentifier     *string                                `pulumi:"memberIdentifier"`
	MemberIdentifierType *ProjectMembershipMemberIdentifierType `pulumi:"memberIdentifierType"`
}

func LookupProjectMembershipOutput(ctx *pulumi.Context, args LookupProjectMembershipOutputArgs, opts ...pulumi.InvokeOption) LookupProjectMembershipResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProjectMembershipResultOutput, error) {
			args := v.(LookupProjectMembershipArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:datazone:getProjectMembership", args, LookupProjectMembershipResultOutput{}, options).(LookupProjectMembershipResultOutput), nil
		}).(LookupProjectMembershipResultOutput)
}

type LookupProjectMembershipOutputArgs struct {
	// The ID of the Amazon DataZone domain in which project membership is created.
	DomainIdentifier     pulumi.StringInput                         `pulumi:"domainIdentifier"`
	MemberIdentifier     pulumi.StringInput                         `pulumi:"memberIdentifier"`
	MemberIdentifierType ProjectMembershipMemberIdentifierTypeInput `pulumi:"memberIdentifierType"`
	// The ID of the project for which this project membership was created.
	ProjectIdentifier pulumi.StringInput `pulumi:"projectIdentifier"`
}

func (LookupProjectMembershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMembershipArgs)(nil)).Elem()
}

type LookupProjectMembershipResultOutput struct{ *pulumi.OutputState }

func (LookupProjectMembershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMembershipResult)(nil)).Elem()
}

func (o LookupProjectMembershipResultOutput) ToLookupProjectMembershipResultOutput() LookupProjectMembershipResultOutput {
	return o
}

func (o LookupProjectMembershipResultOutput) ToLookupProjectMembershipResultOutputWithContext(ctx context.Context) LookupProjectMembershipResultOutput {
	return o
}

func (o LookupProjectMembershipResultOutput) MemberIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectMembershipResult) *string { return v.MemberIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupProjectMembershipResultOutput) MemberIdentifierType() ProjectMembershipMemberIdentifierTypePtrOutput {
	return o.ApplyT(func(v LookupProjectMembershipResult) *ProjectMembershipMemberIdentifierType {
		return v.MemberIdentifierType
	}).(ProjectMembershipMemberIdentifierTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectMembershipResultOutput{})
}
