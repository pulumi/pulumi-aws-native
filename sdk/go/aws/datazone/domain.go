// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A domain is an organizing entity for connecting together assets, users, and their projects
type Domain struct {
	pulumi.CustomResourceState

	// The ARN of the Amazon DataZone domain.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The id of the Amazon DataZone domain.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The timestamp of when the Amazon DataZone domain was last updated.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the Amazon DataZone domain.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
	DomainExecutionRole pulumi.StringOutput `pulumi:"domainExecutionRole"`
	// The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
	KmsKeyIdentifier pulumi.StringPtrOutput `pulumi:"kmsKeyIdentifier"`
	// The timestamp of when the Amazon DataZone domain was last updated.
	LastUpdatedAt pulumi.StringOutput `pulumi:"lastUpdatedAt"`
	// The identifier of the AWS account that manages the domain.
	ManagedAccountId pulumi.StringOutput `pulumi:"managedAccountId"`
	// The name of the Amazon DataZone domain.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of the data portal for this Amazon DataZone domain.
	PortalUrl pulumi.StringOutput `pulumi:"portalUrl"`
	// The single-sign on configuration of the Amazon DataZone domain.
	SingleSignOn DomainSingleSignOnPtrOutput `pulumi:"singleSignOn"`
	// The status of the Amazon DataZone domain.
	Status DomainStatusOutput `pulumi:"status"`
	// The tags specified for the Amazon DataZone domain.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainExecutionRole == nil {
		return nil, errors.New("invalid value for required argument 'DomainExecutionRole'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"kmsKeyIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("aws-native:datazone:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws-native:datazone:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
}

type DomainState struct {
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// The description of the Amazon DataZone domain.
	Description *string `pulumi:"description"`
	// The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
	DomainExecutionRole string `pulumi:"domainExecutionRole"`
	// The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
	KmsKeyIdentifier *string `pulumi:"kmsKeyIdentifier"`
	// The name of the Amazon DataZone domain.
	Name *string `pulumi:"name"`
	// The single-sign on configuration of the Amazon DataZone domain.
	SingleSignOn *DomainSingleSignOn `pulumi:"singleSignOn"`
	// The tags specified for the Amazon DataZone domain.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// The description of the Amazon DataZone domain.
	Description pulumi.StringPtrInput
	// The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
	DomainExecutionRole pulumi.StringInput
	// The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
	KmsKeyIdentifier pulumi.StringPtrInput
	// The name of the Amazon DataZone domain.
	Name pulumi.StringPtrInput
	// The single-sign on configuration of the Amazon DataZone domain.
	SingleSignOn DomainSingleSignOnPtrInput
	// The tags specified for the Amazon DataZone domain.
	Tags aws.TagArrayInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainInput interface {
	pulumi.Input

	ToDomainOutput() DomainOutput
	ToDomainOutputWithContext(ctx context.Context) DomainOutput
}

func (*Domain) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (i *Domain) ToDomainOutput() DomainOutput {
	return i.ToDomainOutputWithContext(context.Background())
}

func (i *Domain) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOutput)
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

// The ARN of the Amazon DataZone domain.
func (o DomainOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The id of the Amazon DataZone domain.
func (o DomainOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The timestamp of when the Amazon DataZone domain was last updated.
func (o DomainOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the Amazon DataZone domain.
func (o DomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
func (o DomainOutput) DomainExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.DomainExecutionRole }).(pulumi.StringOutput)
}

// The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
func (o DomainOutput) KmsKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.KmsKeyIdentifier }).(pulumi.StringPtrOutput)
}

// The timestamp of when the Amazon DataZone domain was last updated.
func (o DomainOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The identifier of the AWS account that manages the domain.
func (o DomainOutput) ManagedAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.ManagedAccountId }).(pulumi.StringOutput)
}

// The name of the Amazon DataZone domain.
func (o DomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of the data portal for this Amazon DataZone domain.
func (o DomainOutput) PortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.PortalUrl }).(pulumi.StringOutput)
}

// The single-sign on configuration of the Amazon DataZone domain.
func (o DomainOutput) SingleSignOn() DomainSingleSignOnPtrOutput {
	return o.ApplyT(func(v *Domain) DomainSingleSignOnPtrOutput { return v.SingleSignOn }).(DomainSingleSignOnPtrOutput)
}

// The status of the Amazon DataZone domain.
func (o DomainOutput) Status() DomainStatusOutput {
	return o.ApplyT(func(v *Domain) DomainStatusOutput { return v.Status }).(DomainStatusOutput)
}

// The tags specified for the Amazon DataZone domain.
func (o DomainOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Domain) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainInput)(nil)).Elem(), &Domain{})
	pulumi.RegisterOutputType(DomainOutput{})
}
