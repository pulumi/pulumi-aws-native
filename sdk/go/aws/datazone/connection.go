// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Connections enables users to connect their DataZone resources (domains, projects, and environments) to external resources/services (data, compute, etc)
type Connection struct {
	pulumi.CustomResourceState

	// The location where the connection is created.
	AwsLocation ConnectionAwsLocationPtrOutput `pulumi:"awsLocation"`
	// The ID of the connection.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// The description of the connection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the domain in which the connection is created.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// The identifier of the domain in which the connection is created.
	DomainIdentifier pulumi.StringOutput `pulumi:"domainIdentifier"`
	// The ID of the domain unit in which the connection is created.
	DomainUnitId pulumi.StringOutput `pulumi:"domainUnitId"`
	// The ID of the environment in which the connection is created.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// The identifier of the environment in which the connection is created.
	EnvironmentIdentifier pulumi.StringPtrOutput `pulumi:"environmentIdentifier"`
	// The role of the user in the environment.
	EnvironmentUserRole pulumi.StringOutput `pulumi:"environmentUserRole"`
	// The name of the connection.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the connection is created.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The identifier of the project in which the connection should be created. If
	ProjectIdentifier pulumi.StringPtrOutput `pulumi:"projectIdentifier"`
	// Connection props.
	Props pulumi.AnyOutput `pulumi:"props"`
	// The type of the connection.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DomainIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainIdentifier",
		"environmentIdentifier",
		"name",
		"projectIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Connection
	err := ctx.RegisterResource("aws-native:datazone:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("aws-native:datazone:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
}

type ConnectionState struct {
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// The location where the connection is created.
	AwsLocation *ConnectionAwsLocation `pulumi:"awsLocation"`
	// The description of the connection.
	Description *string `pulumi:"description"`
	// The identifier of the domain in which the connection is created.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The identifier of the environment in which the connection is created.
	EnvironmentIdentifier *string `pulumi:"environmentIdentifier"`
	// The name of the connection.
	Name *string `pulumi:"name"`
	// The identifier of the project in which the connection should be created. If
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
	// Connection props.
	Props interface{} `pulumi:"props"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// The location where the connection is created.
	AwsLocation ConnectionAwsLocationPtrInput
	// The description of the connection.
	Description pulumi.StringPtrInput
	// The identifier of the domain in which the connection is created.
	DomainIdentifier pulumi.StringInput
	// The identifier of the environment in which the connection is created.
	EnvironmentIdentifier pulumi.StringPtrInput
	// The name of the connection.
	Name pulumi.StringPtrInput
	// The identifier of the project in which the connection should be created. If
	ProjectIdentifier pulumi.StringPtrInput
	// Connection props.
	Props pulumi.Input
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionInput interface {
	pulumi.Input

	ToConnectionOutput() ConnectionOutput
	ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput
}

func (*Connection) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (i *Connection) ToConnectionOutput() ConnectionOutput {
	return i.ToConnectionOutputWithContext(context.Background())
}

func (i *Connection) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOutput)
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

// The location where the connection is created.
func (o ConnectionOutput) AwsLocation() ConnectionAwsLocationPtrOutput {
	return o.ApplyT(func(v *Connection) ConnectionAwsLocationPtrOutput { return v.AwsLocation }).(ConnectionAwsLocationPtrOutput)
}

// The ID of the connection.
func (o ConnectionOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// The description of the connection.
func (o ConnectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the domain in which the connection is created.
func (o ConnectionOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// The identifier of the domain in which the connection is created.
func (o ConnectionOutput) DomainIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DomainIdentifier }).(pulumi.StringOutput)
}

// The ID of the domain unit in which the connection is created.
func (o ConnectionOutput) DomainUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DomainUnitId }).(pulumi.StringOutput)
}

// The ID of the environment in which the connection is created.
func (o ConnectionOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The identifier of the environment in which the connection is created.
func (o ConnectionOutput) EnvironmentIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringPtrOutput { return v.EnvironmentIdentifier }).(pulumi.StringPtrOutput)
}

// The role of the user in the environment.
func (o ConnectionOutput) EnvironmentUserRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.EnvironmentUserRole }).(pulumi.StringOutput)
}

// The name of the connection.
func (o ConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the connection is created.
func (o ConnectionOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The identifier of the project in which the connection should be created. If
func (o ConnectionOutput) ProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringPtrOutput { return v.ProjectIdentifier }).(pulumi.StringPtrOutput)
}

// Connection props.
func (o ConnectionOutput) Props() pulumi.AnyOutput {
	return o.ApplyT(func(v *Connection) pulumi.AnyOutput { return v.Props }).(pulumi.AnyOutput)
}

// The type of the connection.
func (o ConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionInput)(nil)).Elem(), &Connection{})
	pulumi.RegisterOutputType(ConnectionOutput{})
}
