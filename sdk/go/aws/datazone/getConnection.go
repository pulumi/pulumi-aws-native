// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Connections enables users to connect their DataZone resources (domains, projects, and environments) to external resources/services (data, compute, etc)
func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectionResult
	err := ctx.Invoke("aws-native:datazone:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectionArgs struct {
	// The ID of the connection.
	ConnectionId string `pulumi:"connectionId"`
	// The ID of the domain in which the connection is created.
	DomainId string `pulumi:"domainId"`
}

type LookupConnectionResult struct {
	// The ID of the connection.
	ConnectionId *string `pulumi:"connectionId"`
	// The description of the connection.
	Description *string `pulumi:"description"`
	// The ID of the domain in which the connection is created.
	DomainId *string `pulumi:"domainId"`
	// The ID of the domain unit in which the connection is created.
	DomainUnitId *string `pulumi:"domainUnitId"`
	// The ID of the environment in which the connection is created.
	EnvironmentId *string `pulumi:"environmentId"`
	// The role of the user in the environment.
	EnvironmentUserRole *string `pulumi:"environmentUserRole"`
	// The ID of the project in which the connection is created.
	ProjectId *string `pulumi:"projectId"`
	Type      *string `pulumi:"type"`
}

func LookupConnectionOutput(ctx *pulumi.Context, args LookupConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConnectionResultOutput, error) {
			args := v.(LookupConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:datazone:getConnection", args, LookupConnectionResultOutput{}, options).(LookupConnectionResultOutput), nil
		}).(LookupConnectionResultOutput)
}

type LookupConnectionOutputArgs struct {
	// The ID of the connection.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// The ID of the domain in which the connection is created.
	DomainId pulumi.StringInput `pulumi:"domainId"`
}

func (LookupConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionArgs)(nil)).Elem()
}

type LookupConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionResult)(nil)).Elem()
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutput() LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutputWithContext(ctx context.Context) LookupConnectionResultOutput {
	return o
}

// The ID of the connection.
func (o LookupConnectionResultOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

// The description of the connection.
func (o LookupConnectionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the domain in which the connection is created.
func (o LookupConnectionResultOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// The ID of the domain unit in which the connection is created.
func (o LookupConnectionResultOutput) DomainUnitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.DomainUnitId }).(pulumi.StringPtrOutput)
}

// The ID of the environment in which the connection is created.
func (o LookupConnectionResultOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The role of the user in the environment.
func (o LookupConnectionResultOutput) EnvironmentUserRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.EnvironmentUserRole }).(pulumi.StringPtrOutput)
}

// The ID of the project in which the connection is created.
func (o LookupConnectionResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupConnectionResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionResultOutput{})
}
