// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create and manage form types in Amazon Datazone
func LookupFormType(ctx *pulumi.Context, args *LookupFormTypeArgs, opts ...pulumi.InvokeOption) (*LookupFormTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFormTypeResult
	err := ctx.Invoke("aws-native:datazone:getFormType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFormTypeArgs struct {
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The ID of this Amazon DataZone metadata form type.
	FormTypeIdentifier string `pulumi:"formTypeIdentifier"`
}

type LookupFormTypeResult struct {
	// The timestamp of when this Amazon DataZone metadata form type was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The user who created this Amazon DataZone metadata form type.
	CreatedBy *string `pulumi:"createdBy"`
	// The description of this Amazon DataZone metadata form type.
	Description *string `pulumi:"description"`
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainId *string `pulumi:"domainId"`
	// The ID of this Amazon DataZone metadata form type.
	FormTypeIdentifier *string `pulumi:"formTypeIdentifier"`
	// The model of this Amazon DataZone metadata form type.
	Model *FormTypeModel `pulumi:"model"`
	// The ID of the project that owns this Amazon DataZone metadata form type.
	OwningProjectId *string `pulumi:"owningProjectId"`
	// The ID of the Amazon DataZone project that owns this metadata form type.
	OwningProjectIdentifier *string `pulumi:"owningProjectIdentifier"`
	// The revision of this Amazon DataZone metadata form type.
	Revision *string `pulumi:"revision"`
	// The status of this Amazon DataZone metadata form type.
	Status *FormTypeStatus `pulumi:"status"`
}

func LookupFormTypeOutput(ctx *pulumi.Context, args LookupFormTypeOutputArgs, opts ...pulumi.InvokeOption) LookupFormTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFormTypeResultOutput, error) {
			args := v.(LookupFormTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:datazone:getFormType", args, LookupFormTypeResultOutput{}, options).(LookupFormTypeResultOutput), nil
		}).(LookupFormTypeResultOutput)
}

type LookupFormTypeOutputArgs struct {
	// The ID of the Amazon DataZone domain in which this metadata form type is created.
	DomainIdentifier pulumi.StringInput `pulumi:"domainIdentifier"`
	// The ID of this Amazon DataZone metadata form type.
	FormTypeIdentifier pulumi.StringInput `pulumi:"formTypeIdentifier"`
}

func (LookupFormTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFormTypeArgs)(nil)).Elem()
}

type LookupFormTypeResultOutput struct{ *pulumi.OutputState }

func (LookupFormTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFormTypeResult)(nil)).Elem()
}

func (o LookupFormTypeResultOutput) ToLookupFormTypeResultOutput() LookupFormTypeResultOutput {
	return o
}

func (o LookupFormTypeResultOutput) ToLookupFormTypeResultOutputWithContext(ctx context.Context) LookupFormTypeResultOutput {
	return o
}

// The timestamp of when this Amazon DataZone metadata form type was created.
func (o LookupFormTypeResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The user who created this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The description of this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the Amazon DataZone domain in which this metadata form type is created.
func (o LookupFormTypeResultOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// The ID of this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) FormTypeIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.FormTypeIdentifier }).(pulumi.StringPtrOutput)
}

// The model of this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) Model() FormTypeModelPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *FormTypeModel { return v.Model }).(FormTypeModelPtrOutput)
}

// The ID of the project that owns this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) OwningProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.OwningProjectId }).(pulumi.StringPtrOutput)
}

// The ID of the Amazon DataZone project that owns this metadata form type.
func (o LookupFormTypeResultOutput) OwningProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.OwningProjectIdentifier }).(pulumi.StringPtrOutput)
}

// The revision of this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// The status of this Amazon DataZone metadata form type.
func (o LookupFormTypeResultOutput) Status() FormTypeStatusPtrOutput {
	return o.ApplyT(func(v LookupFormTypeResult) *FormTypeStatus { return v.Status }).(FormTypeStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFormTypeResultOutput{})
}
