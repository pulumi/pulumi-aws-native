// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::DataZone::Environment Resource Type
type Environment struct {
	pulumi.CustomResourceState

	// The AWS account in which the Amazon DataZone environment is created.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// The AWS region in which the Amazon DataZone environment is created.
	AwsAccountRegion pulumi.StringOutput `pulumi:"awsAccountRegion"`
	// The timestamp of when the environment was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The Amazon DataZone user who created the environment.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The description of the Amazon DataZone environment.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The identifier of the Amazon DataZone domain in which the environment is created.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// The identifier of the Amazon DataZone domain in which the environment would be created.
	DomainIdentifier pulumi.StringOutput `pulumi:"domainIdentifier"`
	// The ID of the blueprint with which the Amazon DataZone environment was created.
	EnvironmentBlueprintId pulumi.StringOutput `pulumi:"environmentBlueprintId"`
	// The ID of the environment profile with which the Amazon DataZone environment was created.
	EnvironmentProfileId pulumi.StringOutput `pulumi:"environmentProfileId"`
	// The ID of the environment profile with which the Amazon DataZone environment would be created.
	EnvironmentProfileIdentifier pulumi.StringOutput `pulumi:"environmentProfileIdentifier"`
	// The glossary terms that can be used in the Amazon DataZone environment.
	GlossaryTerms pulumi.StringArrayOutput `pulumi:"glossaryTerms"`
	// The name of the environment.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Amazon DataZone project in which the environment is created.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The ID of the Amazon DataZone project in which the environment would be created.
	ProjectIdentifier pulumi.StringOutput `pulumi:"projectIdentifier"`
	// The provider of the Amazon DataZone environment.
	Provider pulumi.StringOutput `pulumi:"provider"`
	// The status of the Amazon DataZone environment.
	Status EnvironmentStatusOutput `pulumi:"status"`
	// The timestamp of when the environment was updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The user parameters of the Amazon DataZone environment.
	UserParameters EnvironmentParameterArrayOutput `pulumi:"userParameters"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DomainIdentifier'")
	}
	if args.EnvironmentProfileIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentProfileIdentifier'")
	}
	if args.ProjectIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ProjectIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainIdentifier",
		"environmentProfileIdentifier",
		"projectIdentifier",
		"userParameters[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Environment
	err := ctx.RegisterResource("aws-native:datazone:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("aws-native:datazone:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
}

type EnvironmentState struct {
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// The description of the Amazon DataZone environment.
	Description *string `pulumi:"description"`
	// The identifier of the Amazon DataZone domain in which the environment would be created.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The ID of the environment profile with which the Amazon DataZone environment would be created.
	EnvironmentProfileIdentifier string `pulumi:"environmentProfileIdentifier"`
	// The glossary terms that can be used in the Amazon DataZone environment.
	GlossaryTerms []string `pulumi:"glossaryTerms"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// The ID of the Amazon DataZone project in which the environment would be created.
	ProjectIdentifier string `pulumi:"projectIdentifier"`
	// The user parameters of the Amazon DataZone environment.
	UserParameters []EnvironmentParameter `pulumi:"userParameters"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// The description of the Amazon DataZone environment.
	Description pulumi.StringPtrInput
	// The identifier of the Amazon DataZone domain in which the environment would be created.
	DomainIdentifier pulumi.StringInput
	// The ID of the environment profile with which the Amazon DataZone environment would be created.
	EnvironmentProfileIdentifier pulumi.StringInput
	// The glossary terms that can be used in the Amazon DataZone environment.
	GlossaryTerms pulumi.StringArrayInput
	// The name of the environment.
	Name pulumi.StringPtrInput
	// The ID of the Amazon DataZone project in which the environment would be created.
	ProjectIdentifier pulumi.StringInput
	// The user parameters of the Amazon DataZone environment.
	UserParameters EnvironmentParameterArrayInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

// The AWS account in which the Amazon DataZone environment is created.
func (o EnvironmentOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// The AWS region in which the Amazon DataZone environment is created.
func (o EnvironmentOutput) AwsAccountRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.AwsAccountRegion }).(pulumi.StringOutput)
}

// The timestamp of when the environment was created.
func (o EnvironmentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The Amazon DataZone user who created the environment.
func (o EnvironmentOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of the Amazon DataZone environment.
func (o EnvironmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon DataZone domain in which the environment is created.
func (o EnvironmentOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// The identifier of the Amazon DataZone domain in which the environment would be created.
func (o EnvironmentOutput) DomainIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.DomainIdentifier }).(pulumi.StringOutput)
}

// The ID of the blueprint with which the Amazon DataZone environment was created.
func (o EnvironmentOutput) EnvironmentBlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentBlueprintId }).(pulumi.StringOutput)
}

// The ID of the environment profile with which the Amazon DataZone environment was created.
func (o EnvironmentOutput) EnvironmentProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentProfileId }).(pulumi.StringOutput)
}

// The ID of the environment profile with which the Amazon DataZone environment would be created.
func (o EnvironmentOutput) EnvironmentProfileIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentProfileIdentifier }).(pulumi.StringOutput)
}

// The glossary terms that can be used in the Amazon DataZone environment.
func (o EnvironmentOutput) GlossaryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.GlossaryTerms }).(pulumi.StringArrayOutput)
}

// The name of the environment.
func (o EnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Amazon DataZone project in which the environment is created.
func (o EnvironmentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The ID of the Amazon DataZone project in which the environment would be created.
func (o EnvironmentOutput) ProjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ProjectIdentifier }).(pulumi.StringOutput)
}

// The provider of the Amazon DataZone environment.
func (o EnvironmentOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Provider }).(pulumi.StringOutput)
}

// The status of the Amazon DataZone environment.
func (o EnvironmentOutput) Status() EnvironmentStatusOutput {
	return o.ApplyT(func(v *Environment) EnvironmentStatusOutput { return v.Status }).(EnvironmentStatusOutput)
}

// The timestamp of when the environment was updated.
func (o EnvironmentOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The user parameters of the Amazon DataZone environment.
func (o EnvironmentOutput) UserParameters() EnvironmentParameterArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentParameterArrayOutput { return v.UserParameters }).(EnvironmentParameterArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
}
