// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppMesh::GatewayRoute
func LookupGatewayRoute(ctx *pulumi.Context, args *LookupGatewayRouteArgs, opts ...pulumi.InvokeOption) (*LookupGatewayRouteResult, error) {
	var rv LookupGatewayRouteResult
	err := ctx.Invoke("aws-native:appmesh:getGatewayRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayRouteArgs struct {
	Id string `pulumi:"id"`
}

type LookupGatewayRouteResult struct {
	Arn           *string           `pulumi:"arn"`
	Id            *string           `pulumi:"id"`
	ResourceOwner *string           `pulumi:"resourceOwner"`
	Spec          *GatewayRouteSpec `pulumi:"spec"`
	Tags          []GatewayRouteTag `pulumi:"tags"`
	Uid           *string           `pulumi:"uid"`
}

func LookupGatewayRouteOutput(ctx *pulumi.Context, args LookupGatewayRouteOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayRouteResult, error) {
			args := v.(LookupGatewayRouteArgs)
			r, err := LookupGatewayRoute(ctx, &args, opts...)
			return *r, err
		}).(LookupGatewayRouteResultOutput)
}

type LookupGatewayRouteOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupGatewayRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayRouteArgs)(nil)).Elem()
}

type LookupGatewayRouteResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayRouteResult)(nil)).Elem()
}

func (o LookupGatewayRouteResultOutput) ToLookupGatewayRouteResultOutput() LookupGatewayRouteResultOutput {
	return o
}

func (o LookupGatewayRouteResultOutput) ToLookupGatewayRouteResultOutputWithContext(ctx context.Context) LookupGatewayRouteResultOutput {
	return o
}

func (o LookupGatewayRouteResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupGatewayRouteResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupGatewayRouteResultOutput) ResourceOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) *string { return v.ResourceOwner }).(pulumi.StringPtrOutput)
}

func (o LookupGatewayRouteResultOutput) Spec() GatewayRouteSpecPtrOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) *GatewayRouteSpec { return v.Spec }).(GatewayRouteSpecPtrOutput)
}

func (o LookupGatewayRouteResultOutput) Tags() GatewayRouteTagArrayOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) []GatewayRouteTag { return v.Tags }).(GatewayRouteTagArrayOutput)
}

func (o LookupGatewayRouteResultOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayRouteResult) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayRouteResultOutput{})
}
