// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GatewayRouteGrpcGatewayRoute struct {
	Action GatewayRouteGrpcGatewayRouteAction `pulumi:"action"`
	Match  GatewayRouteGrpcGatewayRouteMatch  `pulumi:"match"`
}

// GatewayRouteGrpcGatewayRouteInput is an input type that accepts GatewayRouteGrpcGatewayRouteArgs and GatewayRouteGrpcGatewayRouteOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteInput` via:
//
//          GatewayRouteGrpcGatewayRouteArgs{...}
type GatewayRouteGrpcGatewayRouteInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteOutput() GatewayRouteGrpcGatewayRouteOutput
	ToGatewayRouteGrpcGatewayRouteOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteOutput
}

type GatewayRouteGrpcGatewayRouteArgs struct {
	Action GatewayRouteGrpcGatewayRouteActionInput `pulumi:"action"`
	Match  GatewayRouteGrpcGatewayRouteMatchInput  `pulumi:"match"`
}

func (GatewayRouteGrpcGatewayRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRoute)(nil)).Elem()
}

func (i GatewayRouteGrpcGatewayRouteArgs) ToGatewayRouteGrpcGatewayRouteOutput() GatewayRouteGrpcGatewayRouteOutput {
	return i.ToGatewayRouteGrpcGatewayRouteOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteArgs) ToGatewayRouteGrpcGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteOutput)
}

func (i GatewayRouteGrpcGatewayRouteArgs) ToGatewayRouteGrpcGatewayRoutePtrOutput() GatewayRouteGrpcGatewayRoutePtrOutput {
	return i.ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteArgs) ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteOutput).ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(ctx)
}

// GatewayRouteGrpcGatewayRoutePtrInput is an input type that accepts GatewayRouteGrpcGatewayRouteArgs, GatewayRouteGrpcGatewayRoutePtr and GatewayRouteGrpcGatewayRoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRoutePtrInput` via:
//
//          GatewayRouteGrpcGatewayRouteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteGrpcGatewayRoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRoutePtrOutput() GatewayRouteGrpcGatewayRoutePtrOutput
	ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(context.Context) GatewayRouteGrpcGatewayRoutePtrOutput
}

type gatewayRouteGrpcGatewayRoutePtrType GatewayRouteGrpcGatewayRouteArgs

func GatewayRouteGrpcGatewayRoutePtr(v *GatewayRouteGrpcGatewayRouteArgs) GatewayRouteGrpcGatewayRoutePtrInput {
	return (*gatewayRouteGrpcGatewayRoutePtrType)(v)
}

func (*gatewayRouteGrpcGatewayRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRoute)(nil)).Elem()
}

func (i *gatewayRouteGrpcGatewayRoutePtrType) ToGatewayRouteGrpcGatewayRoutePtrOutput() GatewayRouteGrpcGatewayRoutePtrOutput {
	return i.ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteGrpcGatewayRoutePtrType) ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRoutePtrOutput)
}

type GatewayRouteGrpcGatewayRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRoute)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteOutput) ToGatewayRouteGrpcGatewayRouteOutput() GatewayRouteGrpcGatewayRouteOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteOutput) ToGatewayRouteGrpcGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteOutput) ToGatewayRouteGrpcGatewayRoutePtrOutput() GatewayRouteGrpcGatewayRoutePtrOutput {
	return o.ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteGrpcGatewayRouteOutput) ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteGrpcGatewayRoute) *GatewayRouteGrpcGatewayRoute {
		return &v
	}).(GatewayRouteGrpcGatewayRoutePtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteOutput) Action() GatewayRouteGrpcGatewayRouteActionOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRoute) GatewayRouteGrpcGatewayRouteAction { return v.Action }).(GatewayRouteGrpcGatewayRouteActionOutput)
}

func (o GatewayRouteGrpcGatewayRouteOutput) Match() GatewayRouteGrpcGatewayRouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRoute) GatewayRouteGrpcGatewayRouteMatch { return v.Match }).(GatewayRouteGrpcGatewayRouteMatchOutput)
}

type GatewayRouteGrpcGatewayRoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRoute)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRoutePtrOutput) ToGatewayRouteGrpcGatewayRoutePtrOutput() GatewayRouteGrpcGatewayRoutePtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRoutePtrOutput) ToGatewayRouteGrpcGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRoutePtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRoutePtrOutput) Elem() GatewayRouteGrpcGatewayRouteOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRoute) GatewayRouteGrpcGatewayRoute {
		if v != nil {
			return *v
		}
		var ret GatewayRouteGrpcGatewayRoute
		return ret
	}).(GatewayRouteGrpcGatewayRouteOutput)
}

func (o GatewayRouteGrpcGatewayRoutePtrOutput) Action() GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRoute) *GatewayRouteGrpcGatewayRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteGrpcGatewayRouteActionPtrOutput)
}

func (o GatewayRouteGrpcGatewayRoutePtrOutput) Match() GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRoute) *GatewayRouteGrpcGatewayRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteGrpcGatewayRouteMatchPtrOutput)
}

type GatewayRouteGrpcGatewayRouteAction struct {
	Rewrite *GatewayRouteGrpcGatewayRouteRewrite `pulumi:"rewrite"`
	Target  GatewayRouteTarget                   `pulumi:"target"`
}

// GatewayRouteGrpcGatewayRouteActionInput is an input type that accepts GatewayRouteGrpcGatewayRouteActionArgs and GatewayRouteGrpcGatewayRouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteActionInput` via:
//
//          GatewayRouteGrpcGatewayRouteActionArgs{...}
type GatewayRouteGrpcGatewayRouteActionInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteActionOutput() GatewayRouteGrpcGatewayRouteActionOutput
	ToGatewayRouteGrpcGatewayRouteActionOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteActionOutput
}

type GatewayRouteGrpcGatewayRouteActionArgs struct {
	Rewrite GatewayRouteGrpcGatewayRouteRewritePtrInput `pulumi:"rewrite"`
	Target  GatewayRouteTargetInput                     `pulumi:"target"`
}

func (GatewayRouteGrpcGatewayRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteAction)(nil)).Elem()
}

func (i GatewayRouteGrpcGatewayRouteActionArgs) ToGatewayRouteGrpcGatewayRouteActionOutput() GatewayRouteGrpcGatewayRouteActionOutput {
	return i.ToGatewayRouteGrpcGatewayRouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteActionArgs) ToGatewayRouteGrpcGatewayRouteActionOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteActionOutput)
}

func (i GatewayRouteGrpcGatewayRouteActionArgs) ToGatewayRouteGrpcGatewayRouteActionPtrOutput() GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return i.ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteActionArgs) ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteActionOutput).ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteGrpcGatewayRouteActionPtrInput is an input type that accepts GatewayRouteGrpcGatewayRouteActionArgs, GatewayRouteGrpcGatewayRouteActionPtr and GatewayRouteGrpcGatewayRouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteActionPtrInput` via:
//
//          GatewayRouteGrpcGatewayRouteActionArgs{...}
//
//  or:
//
//          nil
type GatewayRouteGrpcGatewayRouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteActionPtrOutput() GatewayRouteGrpcGatewayRouteActionPtrOutput
	ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteActionPtrOutput
}

type gatewayRouteGrpcGatewayRouteActionPtrType GatewayRouteGrpcGatewayRouteActionArgs

func GatewayRouteGrpcGatewayRouteActionPtr(v *GatewayRouteGrpcGatewayRouteActionArgs) GatewayRouteGrpcGatewayRouteActionPtrInput {
	return (*gatewayRouteGrpcGatewayRouteActionPtrType)(v)
}

func (*gatewayRouteGrpcGatewayRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRouteAction)(nil)).Elem()
}

func (i *gatewayRouteGrpcGatewayRouteActionPtrType) ToGatewayRouteGrpcGatewayRouteActionPtrOutput() GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return i.ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteGrpcGatewayRouteActionPtrType) ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteActionPtrOutput)
}

type GatewayRouteGrpcGatewayRouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteAction)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteActionOutput) ToGatewayRouteGrpcGatewayRouteActionOutput() GatewayRouteGrpcGatewayRouteActionOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteActionOutput) ToGatewayRouteGrpcGatewayRouteActionOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteActionOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteActionOutput) ToGatewayRouteGrpcGatewayRouteActionPtrOutput() GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return o.ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteGrpcGatewayRouteActionOutput) ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteGrpcGatewayRouteAction) *GatewayRouteGrpcGatewayRouteAction {
		return &v
	}).(GatewayRouteGrpcGatewayRouteActionPtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteActionOutput) Rewrite() GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteAction) *GatewayRouteGrpcGatewayRouteRewrite { return v.Rewrite }).(GatewayRouteGrpcGatewayRouteRewritePtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteActionOutput) Target() GatewayRouteTargetOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteAction) GatewayRouteTarget { return v.Target }).(GatewayRouteTargetOutput)
}

type GatewayRouteGrpcGatewayRouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRouteAction)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteActionPtrOutput) ToGatewayRouteGrpcGatewayRouteActionPtrOutput() GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteActionPtrOutput) ToGatewayRouteGrpcGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteActionPtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteActionPtrOutput) Elem() GatewayRouteGrpcGatewayRouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteAction) GatewayRouteGrpcGatewayRouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteGrpcGatewayRouteAction
		return ret
	}).(GatewayRouteGrpcGatewayRouteActionOutput)
}

func (o GatewayRouteGrpcGatewayRouteActionPtrOutput) Rewrite() GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteAction) *GatewayRouteGrpcGatewayRouteRewrite {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(GatewayRouteGrpcGatewayRouteRewritePtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteActionPtrOutput) Target() GatewayRouteTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteAction) *GatewayRouteTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteTargetPtrOutput)
}

type GatewayRouteGrpcGatewayRouteMatch struct {
	Hostname    *GatewayRouteHostnameMatch             `pulumi:"hostname"`
	Metadata    []GatewayRouteGrpcGatewayRouteMetadata `pulumi:"metadata"`
	ServiceName *string                                `pulumi:"serviceName"`
}

// GatewayRouteGrpcGatewayRouteMatchInput is an input type that accepts GatewayRouteGrpcGatewayRouteMatchArgs and GatewayRouteGrpcGatewayRouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteMatchInput` via:
//
//          GatewayRouteGrpcGatewayRouteMatchArgs{...}
type GatewayRouteGrpcGatewayRouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteMatchOutput() GatewayRouteGrpcGatewayRouteMatchOutput
	ToGatewayRouteGrpcGatewayRouteMatchOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteMatchOutput
}

type GatewayRouteGrpcGatewayRouteMatchArgs struct {
	Hostname    GatewayRouteHostnameMatchPtrInput              `pulumi:"hostname"`
	Metadata    GatewayRouteGrpcGatewayRouteMetadataArrayInput `pulumi:"metadata"`
	ServiceName pulumi.StringPtrInput                          `pulumi:"serviceName"`
}

func (GatewayRouteGrpcGatewayRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMatch)(nil)).Elem()
}

func (i GatewayRouteGrpcGatewayRouteMatchArgs) ToGatewayRouteGrpcGatewayRouteMatchOutput() GatewayRouteGrpcGatewayRouteMatchOutput {
	return i.ToGatewayRouteGrpcGatewayRouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteMatchArgs) ToGatewayRouteGrpcGatewayRouteMatchOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteMatchOutput)
}

func (i GatewayRouteGrpcGatewayRouteMatchArgs) ToGatewayRouteGrpcGatewayRouteMatchPtrOutput() GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return i.ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteMatchArgs) ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteMatchOutput).ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteGrpcGatewayRouteMatchPtrInput is an input type that accepts GatewayRouteGrpcGatewayRouteMatchArgs, GatewayRouteGrpcGatewayRouteMatchPtr and GatewayRouteGrpcGatewayRouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteMatchPtrInput` via:
//
//          GatewayRouteGrpcGatewayRouteMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteGrpcGatewayRouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteMatchPtrOutput() GatewayRouteGrpcGatewayRouteMatchPtrOutput
	ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteMatchPtrOutput
}

type gatewayRouteGrpcGatewayRouteMatchPtrType GatewayRouteGrpcGatewayRouteMatchArgs

func GatewayRouteGrpcGatewayRouteMatchPtr(v *GatewayRouteGrpcGatewayRouteMatchArgs) GatewayRouteGrpcGatewayRouteMatchPtrInput {
	return (*gatewayRouteGrpcGatewayRouteMatchPtrType)(v)
}

func (*gatewayRouteGrpcGatewayRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRouteMatch)(nil)).Elem()
}

func (i *gatewayRouteGrpcGatewayRouteMatchPtrType) ToGatewayRouteGrpcGatewayRouteMatchPtrOutput() GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return i.ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteGrpcGatewayRouteMatchPtrType) ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteMatchPtrOutput)
}

type GatewayRouteGrpcGatewayRouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMatch)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) ToGatewayRouteGrpcGatewayRouteMatchOutput() GatewayRouteGrpcGatewayRouteMatchOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) ToGatewayRouteGrpcGatewayRouteMatchOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMatchOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) ToGatewayRouteGrpcGatewayRouteMatchPtrOutput() GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return o.ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteGrpcGatewayRouteMatch) *GatewayRouteGrpcGatewayRouteMatch {
		return &v
	}).(GatewayRouteGrpcGatewayRouteMatchPtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) Hostname() GatewayRouteHostnameMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteMatch) *GatewayRouteHostnameMatch { return v.Hostname }).(GatewayRouteHostnameMatchPtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) Metadata() GatewayRouteGrpcGatewayRouteMetadataArrayOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteMatch) []GatewayRouteGrpcGatewayRouteMetadata { return v.Metadata }).(GatewayRouteGrpcGatewayRouteMetadataArrayOutput)
}

func (o GatewayRouteGrpcGatewayRouteMatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteMatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type GatewayRouteGrpcGatewayRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRouteMatch)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteMatchPtrOutput) ToGatewayRouteGrpcGatewayRouteMatchPtrOutput() GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMatchPtrOutput) ToGatewayRouteGrpcGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMatchPtrOutput) Elem() GatewayRouteGrpcGatewayRouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteMatch) GatewayRouteGrpcGatewayRouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteGrpcGatewayRouteMatch
		return ret
	}).(GatewayRouteGrpcGatewayRouteMatchOutput)
}

func (o GatewayRouteGrpcGatewayRouteMatchPtrOutput) Hostname() GatewayRouteHostnameMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteMatch) *GatewayRouteHostnameMatch {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteHostnameMatchPtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteMatchPtrOutput) Metadata() GatewayRouteGrpcGatewayRouteMetadataArrayOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteMatch) []GatewayRouteGrpcGatewayRouteMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(GatewayRouteGrpcGatewayRouteMetadataArrayOutput)
}

func (o GatewayRouteGrpcGatewayRouteMatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteGrpcGatewayRouteMetadata struct {
	Invert *bool                      `pulumi:"invert"`
	Match  *GatewayRouteMetadataMatch `pulumi:"match"`
	Name   string                     `pulumi:"name"`
}

// GatewayRouteGrpcGatewayRouteMetadataInput is an input type that accepts GatewayRouteGrpcGatewayRouteMetadataArgs and GatewayRouteGrpcGatewayRouteMetadataOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteMetadataInput` via:
//
//          GatewayRouteGrpcGatewayRouteMetadataArgs{...}
type GatewayRouteGrpcGatewayRouteMetadataInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteMetadataOutput() GatewayRouteGrpcGatewayRouteMetadataOutput
	ToGatewayRouteGrpcGatewayRouteMetadataOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteMetadataOutput
}

type GatewayRouteGrpcGatewayRouteMetadataArgs struct {
	Invert pulumi.BoolPtrInput               `pulumi:"invert"`
	Match  GatewayRouteMetadataMatchPtrInput `pulumi:"match"`
	Name   pulumi.StringInput                `pulumi:"name"`
}

func (GatewayRouteGrpcGatewayRouteMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMetadata)(nil)).Elem()
}

func (i GatewayRouteGrpcGatewayRouteMetadataArgs) ToGatewayRouteGrpcGatewayRouteMetadataOutput() GatewayRouteGrpcGatewayRouteMetadataOutput {
	return i.ToGatewayRouteGrpcGatewayRouteMetadataOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteMetadataArgs) ToGatewayRouteGrpcGatewayRouteMetadataOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteMetadataOutput)
}

// GatewayRouteGrpcGatewayRouteMetadataArrayInput is an input type that accepts GatewayRouteGrpcGatewayRouteMetadataArray and GatewayRouteGrpcGatewayRouteMetadataArrayOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteMetadataArrayInput` via:
//
//          GatewayRouteGrpcGatewayRouteMetadataArray{ GatewayRouteGrpcGatewayRouteMetadataArgs{...} }
type GatewayRouteGrpcGatewayRouteMetadataArrayInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteMetadataArrayOutput() GatewayRouteGrpcGatewayRouteMetadataArrayOutput
	ToGatewayRouteGrpcGatewayRouteMetadataArrayOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteMetadataArrayOutput
}

type GatewayRouteGrpcGatewayRouteMetadataArray []GatewayRouteGrpcGatewayRouteMetadataInput

func (GatewayRouteGrpcGatewayRouteMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteGrpcGatewayRouteMetadata)(nil)).Elem()
}

func (i GatewayRouteGrpcGatewayRouteMetadataArray) ToGatewayRouteGrpcGatewayRouteMetadataArrayOutput() GatewayRouteGrpcGatewayRouteMetadataArrayOutput {
	return i.ToGatewayRouteGrpcGatewayRouteMetadataArrayOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteMetadataArray) ToGatewayRouteGrpcGatewayRouteMetadataArrayOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteMetadataArrayOutput)
}

type GatewayRouteGrpcGatewayRouteMetadataOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMetadata)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteMetadataOutput) ToGatewayRouteGrpcGatewayRouteMetadataOutput() GatewayRouteGrpcGatewayRouteMetadataOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMetadataOutput) ToGatewayRouteGrpcGatewayRouteMetadataOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMetadataOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMetadataOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteMetadata) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteMetadataOutput) Match() GatewayRouteMetadataMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteMetadata) *GatewayRouteMetadataMatch { return v.Match }).(GatewayRouteMetadataMatchPtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteMetadata) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteGrpcGatewayRouteMetadataArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteGrpcGatewayRouteMetadata)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteMetadataArrayOutput) ToGatewayRouteGrpcGatewayRouteMetadataArrayOutput() GatewayRouteGrpcGatewayRouteMetadataArrayOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMetadataArrayOutput) ToGatewayRouteGrpcGatewayRouteMetadataArrayOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteMetadataArrayOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteMetadataArrayOutput) Index(i pulumi.IntInput) GatewayRouteGrpcGatewayRouteMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteGrpcGatewayRouteMetadata {
		return vs[0].([]GatewayRouteGrpcGatewayRouteMetadata)[vs[1].(int)]
	}).(GatewayRouteGrpcGatewayRouteMetadataOutput)
}

type GatewayRouteGrpcGatewayRouteRewrite struct {
	Hostname *GatewayRouteHostnameRewrite `pulumi:"hostname"`
}

// GatewayRouteGrpcGatewayRouteRewriteInput is an input type that accepts GatewayRouteGrpcGatewayRouteRewriteArgs and GatewayRouteGrpcGatewayRouteRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteRewriteInput` via:
//
//          GatewayRouteGrpcGatewayRouteRewriteArgs{...}
type GatewayRouteGrpcGatewayRouteRewriteInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteRewriteOutput() GatewayRouteGrpcGatewayRouteRewriteOutput
	ToGatewayRouteGrpcGatewayRouteRewriteOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteRewriteOutput
}

type GatewayRouteGrpcGatewayRouteRewriteArgs struct {
	Hostname GatewayRouteHostnameRewritePtrInput `pulumi:"hostname"`
}

func (GatewayRouteGrpcGatewayRouteRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteRewrite)(nil)).Elem()
}

func (i GatewayRouteGrpcGatewayRouteRewriteArgs) ToGatewayRouteGrpcGatewayRouteRewriteOutput() GatewayRouteGrpcGatewayRouteRewriteOutput {
	return i.ToGatewayRouteGrpcGatewayRouteRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteRewriteArgs) ToGatewayRouteGrpcGatewayRouteRewriteOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteRewriteOutput)
}

func (i GatewayRouteGrpcGatewayRouteRewriteArgs) ToGatewayRouteGrpcGatewayRouteRewritePtrOutput() GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return i.ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteGrpcGatewayRouteRewriteArgs) ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteRewriteOutput).ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(ctx)
}

// GatewayRouteGrpcGatewayRouteRewritePtrInput is an input type that accepts GatewayRouteGrpcGatewayRouteRewriteArgs, GatewayRouteGrpcGatewayRouteRewritePtr and GatewayRouteGrpcGatewayRouteRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteGrpcGatewayRouteRewritePtrInput` via:
//
//          GatewayRouteGrpcGatewayRouteRewriteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteGrpcGatewayRouteRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteGrpcGatewayRouteRewritePtrOutput() GatewayRouteGrpcGatewayRouteRewritePtrOutput
	ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(context.Context) GatewayRouteGrpcGatewayRouteRewritePtrOutput
}

type gatewayRouteGrpcGatewayRouteRewritePtrType GatewayRouteGrpcGatewayRouteRewriteArgs

func GatewayRouteGrpcGatewayRouteRewritePtr(v *GatewayRouteGrpcGatewayRouteRewriteArgs) GatewayRouteGrpcGatewayRouteRewritePtrInput {
	return (*gatewayRouteGrpcGatewayRouteRewritePtrType)(v)
}

func (*gatewayRouteGrpcGatewayRouteRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRouteRewrite)(nil)).Elem()
}

func (i *gatewayRouteGrpcGatewayRouteRewritePtrType) ToGatewayRouteGrpcGatewayRouteRewritePtrOutput() GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return i.ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteGrpcGatewayRouteRewritePtrType) ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteGrpcGatewayRouteRewritePtrOutput)
}

type GatewayRouteGrpcGatewayRouteRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteGrpcGatewayRouteRewrite)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteRewriteOutput) ToGatewayRouteGrpcGatewayRouteRewriteOutput() GatewayRouteGrpcGatewayRouteRewriteOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteRewriteOutput) ToGatewayRouteGrpcGatewayRouteRewriteOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteRewriteOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteRewriteOutput) ToGatewayRouteGrpcGatewayRouteRewritePtrOutput() GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return o.ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteGrpcGatewayRouteRewriteOutput) ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteGrpcGatewayRouteRewrite) *GatewayRouteGrpcGatewayRouteRewrite {
		return &v
	}).(GatewayRouteGrpcGatewayRouteRewritePtrOutput)
}

func (o GatewayRouteGrpcGatewayRouteRewriteOutput) Hostname() GatewayRouteHostnameRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteGrpcGatewayRouteRewrite) *GatewayRouteHostnameRewrite { return v.Hostname }).(GatewayRouteHostnameRewritePtrOutput)
}

type GatewayRouteGrpcGatewayRouteRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteGrpcGatewayRouteRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteGrpcGatewayRouteRewrite)(nil)).Elem()
}

func (o GatewayRouteGrpcGatewayRouteRewritePtrOutput) ToGatewayRouteGrpcGatewayRouteRewritePtrOutput() GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteRewritePtrOutput) ToGatewayRouteGrpcGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteGrpcGatewayRouteRewritePtrOutput {
	return o
}

func (o GatewayRouteGrpcGatewayRouteRewritePtrOutput) Elem() GatewayRouteGrpcGatewayRouteRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteRewrite) GatewayRouteGrpcGatewayRouteRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteGrpcGatewayRouteRewrite
		return ret
	}).(GatewayRouteGrpcGatewayRouteRewriteOutput)
}

func (o GatewayRouteGrpcGatewayRouteRewritePtrOutput) Hostname() GatewayRouteHostnameRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteGrpcGatewayRouteRewrite) *GatewayRouteHostnameRewrite {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteHostnameRewritePtrOutput)
}

type GatewayRouteHostnameMatch struct {
	Exact  *string `pulumi:"exact"`
	Suffix *string `pulumi:"suffix"`
}

// GatewayRouteHostnameMatchInput is an input type that accepts GatewayRouteHostnameMatchArgs and GatewayRouteHostnameMatchOutput values.
// You can construct a concrete instance of `GatewayRouteHostnameMatchInput` via:
//
//          GatewayRouteHostnameMatchArgs{...}
type GatewayRouteHostnameMatchInput interface {
	pulumi.Input

	ToGatewayRouteHostnameMatchOutput() GatewayRouteHostnameMatchOutput
	ToGatewayRouteHostnameMatchOutputWithContext(context.Context) GatewayRouteHostnameMatchOutput
}

type GatewayRouteHostnameMatchArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (GatewayRouteHostnameMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHostnameMatch)(nil)).Elem()
}

func (i GatewayRouteHostnameMatchArgs) ToGatewayRouteHostnameMatchOutput() GatewayRouteHostnameMatchOutput {
	return i.ToGatewayRouteHostnameMatchOutputWithContext(context.Background())
}

func (i GatewayRouteHostnameMatchArgs) ToGatewayRouteHostnameMatchOutputWithContext(ctx context.Context) GatewayRouteHostnameMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHostnameMatchOutput)
}

func (i GatewayRouteHostnameMatchArgs) ToGatewayRouteHostnameMatchPtrOutput() GatewayRouteHostnameMatchPtrOutput {
	return i.ToGatewayRouteHostnameMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteHostnameMatchArgs) ToGatewayRouteHostnameMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHostnameMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHostnameMatchOutput).ToGatewayRouteHostnameMatchPtrOutputWithContext(ctx)
}

// GatewayRouteHostnameMatchPtrInput is an input type that accepts GatewayRouteHostnameMatchArgs, GatewayRouteHostnameMatchPtr and GatewayRouteHostnameMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteHostnameMatchPtrInput` via:
//
//          GatewayRouteHostnameMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHostnameMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteHostnameMatchPtrOutput() GatewayRouteHostnameMatchPtrOutput
	ToGatewayRouteHostnameMatchPtrOutputWithContext(context.Context) GatewayRouteHostnameMatchPtrOutput
}

type gatewayRouteHostnameMatchPtrType GatewayRouteHostnameMatchArgs

func GatewayRouteHostnameMatchPtr(v *GatewayRouteHostnameMatchArgs) GatewayRouteHostnameMatchPtrInput {
	return (*gatewayRouteHostnameMatchPtrType)(v)
}

func (*gatewayRouteHostnameMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHostnameMatch)(nil)).Elem()
}

func (i *gatewayRouteHostnameMatchPtrType) ToGatewayRouteHostnameMatchPtrOutput() GatewayRouteHostnameMatchPtrOutput {
	return i.ToGatewayRouteHostnameMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHostnameMatchPtrType) ToGatewayRouteHostnameMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHostnameMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHostnameMatchPtrOutput)
}

type GatewayRouteHostnameMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteHostnameMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHostnameMatch)(nil)).Elem()
}

func (o GatewayRouteHostnameMatchOutput) ToGatewayRouteHostnameMatchOutput() GatewayRouteHostnameMatchOutput {
	return o
}

func (o GatewayRouteHostnameMatchOutput) ToGatewayRouteHostnameMatchOutputWithContext(ctx context.Context) GatewayRouteHostnameMatchOutput {
	return o
}

func (o GatewayRouteHostnameMatchOutput) ToGatewayRouteHostnameMatchPtrOutput() GatewayRouteHostnameMatchPtrOutput {
	return o.ToGatewayRouteHostnameMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteHostnameMatchOutput) ToGatewayRouteHostnameMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHostnameMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHostnameMatch) *GatewayRouteHostnameMatch {
		return &v
	}).(GatewayRouteHostnameMatchPtrOutput)
}

func (o GatewayRouteHostnameMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHostnameMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHostnameMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHostnameMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteHostnameMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHostnameMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHostnameMatch)(nil)).Elem()
}

func (o GatewayRouteHostnameMatchPtrOutput) ToGatewayRouteHostnameMatchPtrOutput() GatewayRouteHostnameMatchPtrOutput {
	return o
}

func (o GatewayRouteHostnameMatchPtrOutput) ToGatewayRouteHostnameMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHostnameMatchPtrOutput {
	return o
}

func (o GatewayRouteHostnameMatchPtrOutput) Elem() GatewayRouteHostnameMatchOutput {
	return o.ApplyT(func(v *GatewayRouteHostnameMatch) GatewayRouteHostnameMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHostnameMatch
		return ret
	}).(GatewayRouteHostnameMatchOutput)
}

func (o GatewayRouteHostnameMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHostnameMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHostnameMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHostnameMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteHostnameRewrite struct {
	DefaultTargetHostname *string `pulumi:"defaultTargetHostname"`
}

// GatewayRouteHostnameRewriteInput is an input type that accepts GatewayRouteHostnameRewriteArgs and GatewayRouteHostnameRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteHostnameRewriteInput` via:
//
//          GatewayRouteHostnameRewriteArgs{...}
type GatewayRouteHostnameRewriteInput interface {
	pulumi.Input

	ToGatewayRouteHostnameRewriteOutput() GatewayRouteHostnameRewriteOutput
	ToGatewayRouteHostnameRewriteOutputWithContext(context.Context) GatewayRouteHostnameRewriteOutput
}

type GatewayRouteHostnameRewriteArgs struct {
	DefaultTargetHostname pulumi.StringPtrInput `pulumi:"defaultTargetHostname"`
}

func (GatewayRouteHostnameRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHostnameRewrite)(nil)).Elem()
}

func (i GatewayRouteHostnameRewriteArgs) ToGatewayRouteHostnameRewriteOutput() GatewayRouteHostnameRewriteOutput {
	return i.ToGatewayRouteHostnameRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteHostnameRewriteArgs) ToGatewayRouteHostnameRewriteOutputWithContext(ctx context.Context) GatewayRouteHostnameRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHostnameRewriteOutput)
}

func (i GatewayRouteHostnameRewriteArgs) ToGatewayRouteHostnameRewritePtrOutput() GatewayRouteHostnameRewritePtrOutput {
	return i.ToGatewayRouteHostnameRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteHostnameRewriteArgs) ToGatewayRouteHostnameRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHostnameRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHostnameRewriteOutput).ToGatewayRouteHostnameRewritePtrOutputWithContext(ctx)
}

// GatewayRouteHostnameRewritePtrInput is an input type that accepts GatewayRouteHostnameRewriteArgs, GatewayRouteHostnameRewritePtr and GatewayRouteHostnameRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteHostnameRewritePtrInput` via:
//
//          GatewayRouteHostnameRewriteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHostnameRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteHostnameRewritePtrOutput() GatewayRouteHostnameRewritePtrOutput
	ToGatewayRouteHostnameRewritePtrOutputWithContext(context.Context) GatewayRouteHostnameRewritePtrOutput
}

type gatewayRouteHostnameRewritePtrType GatewayRouteHostnameRewriteArgs

func GatewayRouteHostnameRewritePtr(v *GatewayRouteHostnameRewriteArgs) GatewayRouteHostnameRewritePtrInput {
	return (*gatewayRouteHostnameRewritePtrType)(v)
}

func (*gatewayRouteHostnameRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHostnameRewrite)(nil)).Elem()
}

func (i *gatewayRouteHostnameRewritePtrType) ToGatewayRouteHostnameRewritePtrOutput() GatewayRouteHostnameRewritePtrOutput {
	return i.ToGatewayRouteHostnameRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHostnameRewritePtrType) ToGatewayRouteHostnameRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHostnameRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHostnameRewritePtrOutput)
}

type GatewayRouteHostnameRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteHostnameRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHostnameRewrite)(nil)).Elem()
}

func (o GatewayRouteHostnameRewriteOutput) ToGatewayRouteHostnameRewriteOutput() GatewayRouteHostnameRewriteOutput {
	return o
}

func (o GatewayRouteHostnameRewriteOutput) ToGatewayRouteHostnameRewriteOutputWithContext(ctx context.Context) GatewayRouteHostnameRewriteOutput {
	return o
}

func (o GatewayRouteHostnameRewriteOutput) ToGatewayRouteHostnameRewritePtrOutput() GatewayRouteHostnameRewritePtrOutput {
	return o.ToGatewayRouteHostnameRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteHostnameRewriteOutput) ToGatewayRouteHostnameRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHostnameRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHostnameRewrite) *GatewayRouteHostnameRewrite {
		return &v
	}).(GatewayRouteHostnameRewritePtrOutput)
}

func (o GatewayRouteHostnameRewriteOutput) DefaultTargetHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHostnameRewrite) *string { return v.DefaultTargetHostname }).(pulumi.StringPtrOutput)
}

type GatewayRouteHostnameRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHostnameRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHostnameRewrite)(nil)).Elem()
}

func (o GatewayRouteHostnameRewritePtrOutput) ToGatewayRouteHostnameRewritePtrOutput() GatewayRouteHostnameRewritePtrOutput {
	return o
}

func (o GatewayRouteHostnameRewritePtrOutput) ToGatewayRouteHostnameRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHostnameRewritePtrOutput {
	return o
}

func (o GatewayRouteHostnameRewritePtrOutput) Elem() GatewayRouteHostnameRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteHostnameRewrite) GatewayRouteHostnameRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHostnameRewrite
		return ret
	}).(GatewayRouteHostnameRewriteOutput)
}

func (o GatewayRouteHostnameRewritePtrOutput) DefaultTargetHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHostnameRewrite) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTargetHostname
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRoute struct {
	Action GatewayRouteHttpGatewayRouteAction `pulumi:"action"`
	Match  GatewayRouteHttpGatewayRouteMatch  `pulumi:"match"`
}

// GatewayRouteHttpGatewayRouteInput is an input type that accepts GatewayRouteHttpGatewayRouteArgs and GatewayRouteHttpGatewayRouteOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteInput` via:
//
//          GatewayRouteHttpGatewayRouteArgs{...}
type GatewayRouteHttpGatewayRouteInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteOutput() GatewayRouteHttpGatewayRouteOutput
	ToGatewayRouteHttpGatewayRouteOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteOutput
}

type GatewayRouteHttpGatewayRouteArgs struct {
	Action GatewayRouteHttpGatewayRouteActionInput `pulumi:"action"`
	Match  GatewayRouteHttpGatewayRouteMatchInput  `pulumi:"match"`
}

func (GatewayRouteHttpGatewayRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRoute)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteArgs) ToGatewayRouteHttpGatewayRouteOutput() GatewayRouteHttpGatewayRouteOutput {
	return i.ToGatewayRouteHttpGatewayRouteOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteArgs) ToGatewayRouteHttpGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteOutput)
}

func (i GatewayRouteHttpGatewayRouteArgs) ToGatewayRouteHttpGatewayRoutePtrOutput() GatewayRouteHttpGatewayRoutePtrOutput {
	return i.ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteArgs) ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteOutput).ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRoutePtrInput is an input type that accepts GatewayRouteHttpGatewayRouteArgs, GatewayRouteHttpGatewayRoutePtr and GatewayRouteHttpGatewayRoutePtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRoutePtrInput` via:
//
//          GatewayRouteHttpGatewayRouteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRoutePtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRoutePtrOutput() GatewayRouteHttpGatewayRoutePtrOutput
	ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRoutePtrOutput
}

type gatewayRouteHttpGatewayRoutePtrType GatewayRouteHttpGatewayRouteArgs

func GatewayRouteHttpGatewayRoutePtr(v *GatewayRouteHttpGatewayRouteArgs) GatewayRouteHttpGatewayRoutePtrInput {
	return (*gatewayRouteHttpGatewayRoutePtrType)(v)
}

func (*gatewayRouteHttpGatewayRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRoute)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRoutePtrType) ToGatewayRouteHttpGatewayRoutePtrOutput() GatewayRouteHttpGatewayRoutePtrOutput {
	return i.ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRoutePtrType) ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePtrOutput)
}

type GatewayRouteHttpGatewayRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRoute)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteOutput) ToGatewayRouteHttpGatewayRouteOutput() GatewayRouteHttpGatewayRouteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteOutput) ToGatewayRouteHttpGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteOutput) ToGatewayRouteHttpGatewayRoutePtrOutput() GatewayRouteHttpGatewayRoutePtrOutput {
	return o.ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRouteOutput) ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRoute) *GatewayRouteHttpGatewayRoute {
		return &v
	}).(GatewayRouteHttpGatewayRoutePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteOutput) Action() GatewayRouteHttpGatewayRouteActionOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRoute) GatewayRouteHttpGatewayRouteAction { return v.Action }).(GatewayRouteHttpGatewayRouteActionOutput)
}

func (o GatewayRouteHttpGatewayRouteOutput) Match() GatewayRouteHttpGatewayRouteMatchOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRoute) GatewayRouteHttpGatewayRouteMatch { return v.Match }).(GatewayRouteHttpGatewayRouteMatchOutput)
}

type GatewayRouteHttpGatewayRoutePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRoute)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRoutePtrOutput) ToGatewayRouteHttpGatewayRoutePtrOutput() GatewayRouteHttpGatewayRoutePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePtrOutput) ToGatewayRouteHttpGatewayRoutePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePtrOutput) Elem() GatewayRouteHttpGatewayRouteOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoute) GatewayRouteHttpGatewayRoute {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRoute
		return ret
	}).(GatewayRouteHttpGatewayRouteOutput)
}

func (o GatewayRouteHttpGatewayRoutePtrOutput) Action() GatewayRouteHttpGatewayRouteActionPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoute) *GatewayRouteHttpGatewayRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(GatewayRouteHttpGatewayRouteActionPtrOutput)
}

func (o GatewayRouteHttpGatewayRoutePtrOutput) Match() GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoute) *GatewayRouteHttpGatewayRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(GatewayRouteHttpGatewayRouteMatchPtrOutput)
}

type GatewayRouteHttpGatewayRouteAction struct {
	Rewrite *GatewayRouteHttpGatewayRouteRewrite `pulumi:"rewrite"`
	Target  GatewayRouteTarget                   `pulumi:"target"`
}

// GatewayRouteHttpGatewayRouteActionInput is an input type that accepts GatewayRouteHttpGatewayRouteActionArgs and GatewayRouteHttpGatewayRouteActionOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteActionInput` via:
//
//          GatewayRouteHttpGatewayRouteActionArgs{...}
type GatewayRouteHttpGatewayRouteActionInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteActionOutput() GatewayRouteHttpGatewayRouteActionOutput
	ToGatewayRouteHttpGatewayRouteActionOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteActionOutput
}

type GatewayRouteHttpGatewayRouteActionArgs struct {
	Rewrite GatewayRouteHttpGatewayRouteRewritePtrInput `pulumi:"rewrite"`
	Target  GatewayRouteTargetInput                     `pulumi:"target"`
}

func (GatewayRouteHttpGatewayRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteAction)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteActionArgs) ToGatewayRouteHttpGatewayRouteActionOutput() GatewayRouteHttpGatewayRouteActionOutput {
	return i.ToGatewayRouteHttpGatewayRouteActionOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteActionArgs) ToGatewayRouteHttpGatewayRouteActionOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteActionOutput)
}

func (i GatewayRouteHttpGatewayRouteActionArgs) ToGatewayRouteHttpGatewayRouteActionPtrOutput() GatewayRouteHttpGatewayRouteActionPtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteActionArgs) ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteActionOutput).ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRouteActionPtrInput is an input type that accepts GatewayRouteHttpGatewayRouteActionArgs, GatewayRouteHttpGatewayRouteActionPtr and GatewayRouteHttpGatewayRouteActionPtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteActionPtrInput` via:
//
//          GatewayRouteHttpGatewayRouteActionArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRouteActionPtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteActionPtrOutput() GatewayRouteHttpGatewayRouteActionPtrOutput
	ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteActionPtrOutput
}

type gatewayRouteHttpGatewayRouteActionPtrType GatewayRouteHttpGatewayRouteActionArgs

func GatewayRouteHttpGatewayRouteActionPtr(v *GatewayRouteHttpGatewayRouteActionArgs) GatewayRouteHttpGatewayRouteActionPtrInput {
	return (*gatewayRouteHttpGatewayRouteActionPtrType)(v)
}

func (*gatewayRouteHttpGatewayRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteAction)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRouteActionPtrType) ToGatewayRouteHttpGatewayRouteActionPtrOutput() GatewayRouteHttpGatewayRouteActionPtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRouteActionPtrType) ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteActionPtrOutput)
}

type GatewayRouteHttpGatewayRouteActionOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteAction)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteActionOutput) ToGatewayRouteHttpGatewayRouteActionOutput() GatewayRouteHttpGatewayRouteActionOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteActionOutput) ToGatewayRouteHttpGatewayRouteActionOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteActionOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteActionOutput) ToGatewayRouteHttpGatewayRouteActionPtrOutput() GatewayRouteHttpGatewayRouteActionPtrOutput {
	return o.ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRouteActionOutput) ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRouteAction) *GatewayRouteHttpGatewayRouteAction {
		return &v
	}).(GatewayRouteHttpGatewayRouteActionPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteActionOutput) Rewrite() GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteAction) *GatewayRouteHttpGatewayRouteRewrite { return v.Rewrite }).(GatewayRouteHttpGatewayRouteRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteActionOutput) Target() GatewayRouteTargetOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteAction) GatewayRouteTarget { return v.Target }).(GatewayRouteTargetOutput)
}

type GatewayRouteHttpGatewayRouteActionPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteAction)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteActionPtrOutput) ToGatewayRouteHttpGatewayRouteActionPtrOutput() GatewayRouteHttpGatewayRouteActionPtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteActionPtrOutput) ToGatewayRouteHttpGatewayRouteActionPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteActionPtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteActionPtrOutput) Elem() GatewayRouteHttpGatewayRouteActionOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteAction) GatewayRouteHttpGatewayRouteAction {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRouteAction
		return ret
	}).(GatewayRouteHttpGatewayRouteActionOutput)
}

func (o GatewayRouteHttpGatewayRouteActionPtrOutput) Rewrite() GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteAction) *GatewayRouteHttpGatewayRouteRewrite {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(GatewayRouteHttpGatewayRouteRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteActionPtrOutput) Target() GatewayRouteTargetPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteAction) *GatewayRouteTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(GatewayRouteTargetPtrOutput)
}

type GatewayRouteHttpGatewayRouteHeader struct {
	Invert *bool                                    `pulumi:"invert"`
	Match  *GatewayRouteHttpGatewayRouteHeaderMatch `pulumi:"match"`
	Name   string                                   `pulumi:"name"`
}

// GatewayRouteHttpGatewayRouteHeaderInput is an input type that accepts GatewayRouteHttpGatewayRouteHeaderArgs and GatewayRouteHttpGatewayRouteHeaderOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteHeaderInput` via:
//
//          GatewayRouteHttpGatewayRouteHeaderArgs{...}
type GatewayRouteHttpGatewayRouteHeaderInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteHeaderOutput() GatewayRouteHttpGatewayRouteHeaderOutput
	ToGatewayRouteHttpGatewayRouteHeaderOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteHeaderOutput
}

type GatewayRouteHttpGatewayRouteHeaderArgs struct {
	Invert pulumi.BoolPtrInput                             `pulumi:"invert"`
	Match  GatewayRouteHttpGatewayRouteHeaderMatchPtrInput `pulumi:"match"`
	Name   pulumi.StringInput                              `pulumi:"name"`
}

func (GatewayRouteHttpGatewayRouteHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeader)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteHeaderArgs) ToGatewayRouteHttpGatewayRouteHeaderOutput() GatewayRouteHttpGatewayRouteHeaderOutput {
	return i.ToGatewayRouteHttpGatewayRouteHeaderOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteHeaderArgs) ToGatewayRouteHttpGatewayRouteHeaderOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteHeaderOutput)
}

// GatewayRouteHttpGatewayRouteHeaderArrayInput is an input type that accepts GatewayRouteHttpGatewayRouteHeaderArray and GatewayRouteHttpGatewayRouteHeaderArrayOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteHeaderArrayInput` via:
//
//          GatewayRouteHttpGatewayRouteHeaderArray{ GatewayRouteHttpGatewayRouteHeaderArgs{...} }
type GatewayRouteHttpGatewayRouteHeaderArrayInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteHeaderArrayOutput() GatewayRouteHttpGatewayRouteHeaderArrayOutput
	ToGatewayRouteHttpGatewayRouteHeaderArrayOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteHeaderArrayOutput
}

type GatewayRouteHttpGatewayRouteHeaderArray []GatewayRouteHttpGatewayRouteHeaderInput

func (GatewayRouteHttpGatewayRouteHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteHttpGatewayRouteHeader)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteHeaderArray) ToGatewayRouteHttpGatewayRouteHeaderArrayOutput() GatewayRouteHttpGatewayRouteHeaderArrayOutput {
	return i.ToGatewayRouteHttpGatewayRouteHeaderArrayOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteHeaderArray) ToGatewayRouteHttpGatewayRouteHeaderArrayOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteHeaderArrayOutput)
}

type GatewayRouteHttpGatewayRouteHeaderOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeader)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteHeaderOutput) ToGatewayRouteHttpGatewayRouteHeaderOutput() GatewayRouteHttpGatewayRouteHeaderOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderOutput) ToGatewayRouteHttpGatewayRouteHeaderOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderOutput) Match() GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeader) *GatewayRouteHttpGatewayRouteHeaderMatch { return v.Match }).(GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeader) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteHttpGatewayRouteHeaderArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteHttpGatewayRouteHeader)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteHeaderArrayOutput) ToGatewayRouteHttpGatewayRouteHeaderArrayOutput() GatewayRouteHttpGatewayRouteHeaderArrayOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderArrayOutput) ToGatewayRouteHttpGatewayRouteHeaderArrayOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderArrayOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderArrayOutput) Index(i pulumi.IntInput) GatewayRouteHttpGatewayRouteHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteHttpGatewayRouteHeader {
		return vs[0].([]GatewayRouteHttpGatewayRouteHeader)[vs[1].(int)]
	}).(GatewayRouteHttpGatewayRouteHeaderOutput)
}

type GatewayRouteHttpGatewayRouteHeaderMatch struct {
	Exact  *string                 `pulumi:"exact"`
	Prefix *string                 `pulumi:"prefix"`
	Range  *GatewayRouteRangeMatch `pulumi:"range"`
	Regex  *string                 `pulumi:"regex"`
	Suffix *string                 `pulumi:"suffix"`
}

// GatewayRouteHttpGatewayRouteHeaderMatchInput is an input type that accepts GatewayRouteHttpGatewayRouteHeaderMatchArgs and GatewayRouteHttpGatewayRouteHeaderMatchOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteHeaderMatchInput` via:
//
//          GatewayRouteHttpGatewayRouteHeaderMatchArgs{...}
type GatewayRouteHttpGatewayRouteHeaderMatchInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteHeaderMatchOutput() GatewayRouteHttpGatewayRouteHeaderMatchOutput
	ToGatewayRouteHttpGatewayRouteHeaderMatchOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteHeaderMatchOutput
}

type GatewayRouteHttpGatewayRouteHeaderMatchArgs struct {
	Exact  pulumi.StringPtrInput          `pulumi:"exact"`
	Prefix pulumi.StringPtrInput          `pulumi:"prefix"`
	Range  GatewayRouteRangeMatchPtrInput `pulumi:"range"`
	Regex  pulumi.StringPtrInput          `pulumi:"regex"`
	Suffix pulumi.StringPtrInput          `pulumi:"suffix"`
}

func (GatewayRouteHttpGatewayRouteHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeaderMatch)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteHeaderMatchArgs) ToGatewayRouteHttpGatewayRouteHeaderMatchOutput() GatewayRouteHttpGatewayRouteHeaderMatchOutput {
	return i.ToGatewayRouteHttpGatewayRouteHeaderMatchOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteHeaderMatchArgs) ToGatewayRouteHttpGatewayRouteHeaderMatchOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteHeaderMatchOutput)
}

func (i GatewayRouteHttpGatewayRouteHeaderMatchArgs) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutput() GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteHeaderMatchArgs) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteHeaderMatchOutput).ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRouteHeaderMatchPtrInput is an input type that accepts GatewayRouteHttpGatewayRouteHeaderMatchArgs, GatewayRouteHttpGatewayRouteHeaderMatchPtr and GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteHeaderMatchPtrInput` via:
//
//          GatewayRouteHttpGatewayRouteHeaderMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRouteHeaderMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutput() GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput
	ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput
}

type gatewayRouteHttpGatewayRouteHeaderMatchPtrType GatewayRouteHttpGatewayRouteHeaderMatchArgs

func GatewayRouteHttpGatewayRouteHeaderMatchPtr(v *GatewayRouteHttpGatewayRouteHeaderMatchArgs) GatewayRouteHttpGatewayRouteHeaderMatchPtrInput {
	return (*gatewayRouteHttpGatewayRouteHeaderMatchPtrType)(v)
}

func (*gatewayRouteHttpGatewayRouteHeaderMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteHeaderMatch)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRouteHeaderMatchPtrType) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutput() GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRouteHeaderMatchPtrType) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput)
}

type GatewayRouteHttpGatewayRouteHeaderMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeaderMatch)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) ToGatewayRouteHttpGatewayRouteHeaderMatchOutput() GatewayRouteHttpGatewayRouteHeaderMatchOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) ToGatewayRouteHttpGatewayRouteHeaderMatchOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderMatchOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutput() GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return o.ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRouteHeaderMatch) *GatewayRouteHttpGatewayRouteHeaderMatch {
		return &v
	}).(GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeaderMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeaderMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) Range() GatewayRouteRangeMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeaderMatch) *GatewayRouteRangeMatch { return v.Range }).(GatewayRouteRangeMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeaderMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteHeaderMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteHeaderMatch)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutput() GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) ToGatewayRouteHttpGatewayRouteHeaderMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) Elem() GatewayRouteHttpGatewayRouteHeaderMatchOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteHeaderMatch) GatewayRouteHttpGatewayRouteHeaderMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRouteHeaderMatch
		return ret
	}).(GatewayRouteHttpGatewayRouteHeaderMatchOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) Range() GatewayRouteRangeMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteHeaderMatch) *GatewayRouteRangeMatch {
		if v == nil {
			return nil
		}
		return v.Range
	}).(GatewayRouteRangeMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteHeaderMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRouteMatch struct {
	Headers         []GatewayRouteHttpGatewayRouteHeader `pulumi:"headers"`
	Hostname        *GatewayRouteHostnameMatch           `pulumi:"hostname"`
	Method          *string                              `pulumi:"method"`
	Path            *GatewayRouteHttpPathMatch           `pulumi:"path"`
	Prefix          *string                              `pulumi:"prefix"`
	QueryParameters []GatewayRouteQueryParameter         `pulumi:"queryParameters"`
}

// GatewayRouteHttpGatewayRouteMatchInput is an input type that accepts GatewayRouteHttpGatewayRouteMatchArgs and GatewayRouteHttpGatewayRouteMatchOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteMatchInput` via:
//
//          GatewayRouteHttpGatewayRouteMatchArgs{...}
type GatewayRouteHttpGatewayRouteMatchInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteMatchOutput() GatewayRouteHttpGatewayRouteMatchOutput
	ToGatewayRouteHttpGatewayRouteMatchOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteMatchOutput
}

type GatewayRouteHttpGatewayRouteMatchArgs struct {
	Headers         GatewayRouteHttpGatewayRouteHeaderArrayInput `pulumi:"headers"`
	Hostname        GatewayRouteHostnameMatchPtrInput            `pulumi:"hostname"`
	Method          pulumi.StringPtrInput                        `pulumi:"method"`
	Path            GatewayRouteHttpPathMatchPtrInput            `pulumi:"path"`
	Prefix          pulumi.StringPtrInput                        `pulumi:"prefix"`
	QueryParameters GatewayRouteQueryParameterArrayInput         `pulumi:"queryParameters"`
}

func (GatewayRouteHttpGatewayRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteMatch)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteMatchArgs) ToGatewayRouteHttpGatewayRouteMatchOutput() GatewayRouteHttpGatewayRouteMatchOutput {
	return i.ToGatewayRouteHttpGatewayRouteMatchOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteMatchArgs) ToGatewayRouteHttpGatewayRouteMatchOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteMatchOutput)
}

func (i GatewayRouteHttpGatewayRouteMatchArgs) ToGatewayRouteHttpGatewayRouteMatchPtrOutput() GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteMatchArgs) ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteMatchOutput).ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRouteMatchPtrInput is an input type that accepts GatewayRouteHttpGatewayRouteMatchArgs, GatewayRouteHttpGatewayRouteMatchPtr and GatewayRouteHttpGatewayRouteMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteMatchPtrInput` via:
//
//          GatewayRouteHttpGatewayRouteMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRouteMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteMatchPtrOutput() GatewayRouteHttpGatewayRouteMatchPtrOutput
	ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteMatchPtrOutput
}

type gatewayRouteHttpGatewayRouteMatchPtrType GatewayRouteHttpGatewayRouteMatchArgs

func GatewayRouteHttpGatewayRouteMatchPtr(v *GatewayRouteHttpGatewayRouteMatchArgs) GatewayRouteHttpGatewayRouteMatchPtrInput {
	return (*gatewayRouteHttpGatewayRouteMatchPtrType)(v)
}

func (*gatewayRouteHttpGatewayRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteMatch)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRouteMatchPtrType) ToGatewayRouteHttpGatewayRouteMatchPtrOutput() GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRouteMatchPtrType) ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteMatchPtrOutput)
}

type GatewayRouteHttpGatewayRouteMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteMatch)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) ToGatewayRouteHttpGatewayRouteMatchOutput() GatewayRouteHttpGatewayRouteMatchOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) ToGatewayRouteHttpGatewayRouteMatchOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteMatchOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) ToGatewayRouteHttpGatewayRouteMatchPtrOutput() GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return o.ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRouteMatch) *GatewayRouteHttpGatewayRouteMatch {
		return &v
	}).(GatewayRouteHttpGatewayRouteMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) Headers() GatewayRouteHttpGatewayRouteHeaderArrayOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteMatch) []GatewayRouteHttpGatewayRouteHeader { return v.Headers }).(GatewayRouteHttpGatewayRouteHeaderArrayOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) Hostname() GatewayRouteHostnameMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteMatch) *GatewayRouteHostnameMatch { return v.Hostname }).(GatewayRouteHostnameMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteMatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) Path() GatewayRouteHttpPathMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteMatch) *GatewayRouteHttpPathMatch { return v.Path }).(GatewayRouteHttpPathMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchOutput) QueryParameters() GatewayRouteQueryParameterArrayOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteMatch) []GatewayRouteQueryParameter { return v.QueryParameters }).(GatewayRouteQueryParameterArrayOutput)
}

type GatewayRouteHttpGatewayRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteMatch)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) ToGatewayRouteHttpGatewayRouteMatchPtrOutput() GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) ToGatewayRouteHttpGatewayRouteMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) Elem() GatewayRouteHttpGatewayRouteMatchOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) GatewayRouteHttpGatewayRouteMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRouteMatch
		return ret
	}).(GatewayRouteHttpGatewayRouteMatchOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) Headers() GatewayRouteHttpGatewayRouteHeaderArrayOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) []GatewayRouteHttpGatewayRouteHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(GatewayRouteHttpGatewayRouteHeaderArrayOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) Hostname() GatewayRouteHostnameMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) *GatewayRouteHostnameMatch {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteHostnameMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) Path() GatewayRouteHttpPathMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) *GatewayRouteHttpPathMatch {
		if v == nil {
			return nil
		}
		return v.Path
	}).(GatewayRouteHttpPathMatchPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRouteMatchPtrOutput) QueryParameters() GatewayRouteQueryParameterArrayOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteMatch) []GatewayRouteQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(GatewayRouteQueryParameterArrayOutput)
}

type GatewayRouteHttpGatewayRoutePathRewrite struct {
	Exact *string `pulumi:"exact"`
}

// GatewayRouteHttpGatewayRoutePathRewriteInput is an input type that accepts GatewayRouteHttpGatewayRoutePathRewriteArgs and GatewayRouteHttpGatewayRoutePathRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRoutePathRewriteInput` via:
//
//          GatewayRouteHttpGatewayRoutePathRewriteArgs{...}
type GatewayRouteHttpGatewayRoutePathRewriteInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRoutePathRewriteOutput() GatewayRouteHttpGatewayRoutePathRewriteOutput
	ToGatewayRouteHttpGatewayRoutePathRewriteOutputWithContext(context.Context) GatewayRouteHttpGatewayRoutePathRewriteOutput
}

type GatewayRouteHttpGatewayRoutePathRewriteArgs struct {
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (GatewayRouteHttpGatewayRoutePathRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRoutePathRewrite)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRoutePathRewriteArgs) ToGatewayRouteHttpGatewayRoutePathRewriteOutput() GatewayRouteHttpGatewayRoutePathRewriteOutput {
	return i.ToGatewayRouteHttpGatewayRoutePathRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRoutePathRewriteArgs) ToGatewayRouteHttpGatewayRoutePathRewriteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePathRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePathRewriteOutput)
}

func (i GatewayRouteHttpGatewayRoutePathRewriteArgs) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutput() GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return i.ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRoutePathRewriteArgs) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePathRewriteOutput).ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRoutePathRewritePtrInput is an input type that accepts GatewayRouteHttpGatewayRoutePathRewriteArgs, GatewayRouteHttpGatewayRoutePathRewritePtr and GatewayRouteHttpGatewayRoutePathRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRoutePathRewritePtrInput` via:
//
//          GatewayRouteHttpGatewayRoutePathRewriteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRoutePathRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRoutePathRewritePtrOutput() GatewayRouteHttpGatewayRoutePathRewritePtrOutput
	ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRoutePathRewritePtrOutput
}

type gatewayRouteHttpGatewayRoutePathRewritePtrType GatewayRouteHttpGatewayRoutePathRewriteArgs

func GatewayRouteHttpGatewayRoutePathRewritePtr(v *GatewayRouteHttpGatewayRoutePathRewriteArgs) GatewayRouteHttpGatewayRoutePathRewritePtrInput {
	return (*gatewayRouteHttpGatewayRoutePathRewritePtrType)(v)
}

func (*gatewayRouteHttpGatewayRoutePathRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRoutePathRewrite)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRoutePathRewritePtrType) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutput() GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return i.ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRoutePathRewritePtrType) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePathRewritePtrOutput)
}

type GatewayRouteHttpGatewayRoutePathRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRoutePathRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRoutePathRewrite)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRoutePathRewriteOutput) ToGatewayRouteHttpGatewayRoutePathRewriteOutput() GatewayRouteHttpGatewayRoutePathRewriteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePathRewriteOutput) ToGatewayRouteHttpGatewayRoutePathRewriteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePathRewriteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePathRewriteOutput) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutput() GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return o.ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRoutePathRewriteOutput) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRoutePathRewrite) *GatewayRouteHttpGatewayRoutePathRewrite {
		return &v
	}).(GatewayRouteHttpGatewayRoutePathRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRoutePathRewriteOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRoutePathRewrite) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRoutePathRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRoutePathRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRoutePathRewrite)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRoutePathRewritePtrOutput) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutput() GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePathRewritePtrOutput) ToGatewayRouteHttpGatewayRoutePathRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePathRewritePtrOutput) Elem() GatewayRouteHttpGatewayRoutePathRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoutePathRewrite) GatewayRouteHttpGatewayRoutePathRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRoutePathRewrite
		return ret
	}).(GatewayRouteHttpGatewayRoutePathRewriteOutput)
}

func (o GatewayRouteHttpGatewayRoutePathRewritePtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoutePathRewrite) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRoutePrefixRewrite struct {
	DefaultPrefix *string `pulumi:"defaultPrefix"`
	Value         *string `pulumi:"value"`
}

// GatewayRouteHttpGatewayRoutePrefixRewriteInput is an input type that accepts GatewayRouteHttpGatewayRoutePrefixRewriteArgs and GatewayRouteHttpGatewayRoutePrefixRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRoutePrefixRewriteInput` via:
//
//          GatewayRouteHttpGatewayRoutePrefixRewriteArgs{...}
type GatewayRouteHttpGatewayRoutePrefixRewriteInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRoutePrefixRewriteOutput() GatewayRouteHttpGatewayRoutePrefixRewriteOutput
	ToGatewayRouteHttpGatewayRoutePrefixRewriteOutputWithContext(context.Context) GatewayRouteHttpGatewayRoutePrefixRewriteOutput
}

type GatewayRouteHttpGatewayRoutePrefixRewriteArgs struct {
	DefaultPrefix pulumi.StringPtrInput `pulumi:"defaultPrefix"`
	Value         pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewayRouteHttpGatewayRoutePrefixRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRoutePrefixRewrite)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRoutePrefixRewriteArgs) ToGatewayRouteHttpGatewayRoutePrefixRewriteOutput() GatewayRouteHttpGatewayRoutePrefixRewriteOutput {
	return i.ToGatewayRouteHttpGatewayRoutePrefixRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRoutePrefixRewriteArgs) ToGatewayRouteHttpGatewayRoutePrefixRewriteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePrefixRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePrefixRewriteOutput)
}

func (i GatewayRouteHttpGatewayRoutePrefixRewriteArgs) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutput() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return i.ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRoutePrefixRewriteArgs) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePrefixRewriteOutput).ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRoutePrefixRewritePtrInput is an input type that accepts GatewayRouteHttpGatewayRoutePrefixRewriteArgs, GatewayRouteHttpGatewayRoutePrefixRewritePtr and GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRoutePrefixRewritePtrInput` via:
//
//          GatewayRouteHttpGatewayRoutePrefixRewriteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRoutePrefixRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutput() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput
	ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput
}

type gatewayRouteHttpGatewayRoutePrefixRewritePtrType GatewayRouteHttpGatewayRoutePrefixRewriteArgs

func GatewayRouteHttpGatewayRoutePrefixRewritePtr(v *GatewayRouteHttpGatewayRoutePrefixRewriteArgs) GatewayRouteHttpGatewayRoutePrefixRewritePtrInput {
	return (*gatewayRouteHttpGatewayRoutePrefixRewritePtrType)(v)
}

func (*gatewayRouteHttpGatewayRoutePrefixRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRoutePrefixRewrite)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRoutePrefixRewritePtrType) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutput() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return i.ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRoutePrefixRewritePtrType) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput)
}

type GatewayRouteHttpGatewayRoutePrefixRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRoutePrefixRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRoutePrefixRewrite)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRoutePrefixRewriteOutput) ToGatewayRouteHttpGatewayRoutePrefixRewriteOutput() GatewayRouteHttpGatewayRoutePrefixRewriteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePrefixRewriteOutput) ToGatewayRouteHttpGatewayRoutePrefixRewriteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePrefixRewriteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePrefixRewriteOutput) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutput() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return o.ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRoutePrefixRewriteOutput) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRoutePrefixRewrite) *GatewayRouteHttpGatewayRoutePrefixRewrite {
		return &v
	}).(GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRoutePrefixRewriteOutput) DefaultPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRoutePrefixRewrite) *string { return v.DefaultPrefix }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRoutePrefixRewriteOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRoutePrefixRewrite) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRoutePrefixRewrite)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutput() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput) ToGatewayRouteHttpGatewayRoutePrefixRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput) Elem() GatewayRouteHttpGatewayRoutePrefixRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoutePrefixRewrite) GatewayRouteHttpGatewayRoutePrefixRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRoutePrefixRewrite
		return ret
	}).(GatewayRouteHttpGatewayRoutePrefixRewriteOutput)
}

func (o GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput) DefaultPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoutePrefixRewrite) *string {
		if v == nil {
			return nil
		}
		return v.DefaultPrefix
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRoutePrefixRewrite) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpGatewayRouteRewrite struct {
	Hostname *GatewayRouteHostnameRewrite               `pulumi:"hostname"`
	Path     *GatewayRouteHttpGatewayRoutePathRewrite   `pulumi:"path"`
	Prefix   *GatewayRouteHttpGatewayRoutePrefixRewrite `pulumi:"prefix"`
}

// GatewayRouteHttpGatewayRouteRewriteInput is an input type that accepts GatewayRouteHttpGatewayRouteRewriteArgs and GatewayRouteHttpGatewayRouteRewriteOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteRewriteInput` via:
//
//          GatewayRouteHttpGatewayRouteRewriteArgs{...}
type GatewayRouteHttpGatewayRouteRewriteInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteRewriteOutput() GatewayRouteHttpGatewayRouteRewriteOutput
	ToGatewayRouteHttpGatewayRouteRewriteOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteRewriteOutput
}

type GatewayRouteHttpGatewayRouteRewriteArgs struct {
	Hostname GatewayRouteHostnameRewritePtrInput               `pulumi:"hostname"`
	Path     GatewayRouteHttpGatewayRoutePathRewritePtrInput   `pulumi:"path"`
	Prefix   GatewayRouteHttpGatewayRoutePrefixRewritePtrInput `pulumi:"prefix"`
}

func (GatewayRouteHttpGatewayRouteRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteRewrite)(nil)).Elem()
}

func (i GatewayRouteHttpGatewayRouteRewriteArgs) ToGatewayRouteHttpGatewayRouteRewriteOutput() GatewayRouteHttpGatewayRouteRewriteOutput {
	return i.ToGatewayRouteHttpGatewayRouteRewriteOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteRewriteArgs) ToGatewayRouteHttpGatewayRouteRewriteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteRewriteOutput)
}

func (i GatewayRouteHttpGatewayRouteRewriteArgs) ToGatewayRouteHttpGatewayRouteRewritePtrOutput() GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpGatewayRouteRewriteArgs) ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteRewriteOutput).ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(ctx)
}

// GatewayRouteHttpGatewayRouteRewritePtrInput is an input type that accepts GatewayRouteHttpGatewayRouteRewriteArgs, GatewayRouteHttpGatewayRouteRewritePtr and GatewayRouteHttpGatewayRouteRewritePtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpGatewayRouteRewritePtrInput` via:
//
//          GatewayRouteHttpGatewayRouteRewriteArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpGatewayRouteRewritePtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpGatewayRouteRewritePtrOutput() GatewayRouteHttpGatewayRouteRewritePtrOutput
	ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(context.Context) GatewayRouteHttpGatewayRouteRewritePtrOutput
}

type gatewayRouteHttpGatewayRouteRewritePtrType GatewayRouteHttpGatewayRouteRewriteArgs

func GatewayRouteHttpGatewayRouteRewritePtr(v *GatewayRouteHttpGatewayRouteRewriteArgs) GatewayRouteHttpGatewayRouteRewritePtrInput {
	return (*gatewayRouteHttpGatewayRouteRewritePtrType)(v)
}

func (*gatewayRouteHttpGatewayRouteRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteRewrite)(nil)).Elem()
}

func (i *gatewayRouteHttpGatewayRouteRewritePtrType) ToGatewayRouteHttpGatewayRouteRewritePtrOutput() GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return i.ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpGatewayRouteRewritePtrType) ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpGatewayRouteRewritePtrOutput)
}

type GatewayRouteHttpGatewayRouteRewriteOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpGatewayRouteRewrite)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) ToGatewayRouteHttpGatewayRouteRewriteOutput() GatewayRouteHttpGatewayRouteRewriteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) ToGatewayRouteHttpGatewayRouteRewriteOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteRewriteOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) ToGatewayRouteHttpGatewayRouteRewritePtrOutput() GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return o.ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHttpGatewayRouteRewrite {
		return &v
	}).(GatewayRouteHttpGatewayRouteRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) Hostname() GatewayRouteHostnameRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHostnameRewrite { return v.Hostname }).(GatewayRouteHostnameRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) Path() GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHttpGatewayRoutePathRewrite { return v.Path }).(GatewayRouteHttpGatewayRoutePathRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteRewriteOutput) Prefix() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHttpGatewayRoutePrefixRewrite {
		return v.Prefix
	}).(GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput)
}

type GatewayRouteHttpGatewayRouteRewritePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpGatewayRouteRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpGatewayRouteRewrite)(nil)).Elem()
}

func (o GatewayRouteHttpGatewayRouteRewritePtrOutput) ToGatewayRouteHttpGatewayRouteRewritePtrOutput() GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteRewritePtrOutput) ToGatewayRouteHttpGatewayRouteRewritePtrOutputWithContext(ctx context.Context) GatewayRouteHttpGatewayRouteRewritePtrOutput {
	return o
}

func (o GatewayRouteHttpGatewayRouteRewritePtrOutput) Elem() GatewayRouteHttpGatewayRouteRewriteOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteRewrite) GatewayRouteHttpGatewayRouteRewrite {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpGatewayRouteRewrite
		return ret
	}).(GatewayRouteHttpGatewayRouteRewriteOutput)
}

func (o GatewayRouteHttpGatewayRouteRewritePtrOutput) Hostname() GatewayRouteHostnameRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHostnameRewrite {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(GatewayRouteHostnameRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteRewritePtrOutput) Path() GatewayRouteHttpGatewayRoutePathRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHttpGatewayRoutePathRewrite {
		if v == nil {
			return nil
		}
		return v.Path
	}).(GatewayRouteHttpGatewayRoutePathRewritePtrOutput)
}

func (o GatewayRouteHttpGatewayRouteRewritePtrOutput) Prefix() GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpGatewayRouteRewrite) *GatewayRouteHttpGatewayRoutePrefixRewrite {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput)
}

type GatewayRouteHttpPathMatch struct {
	Exact *string `pulumi:"exact"`
	Regex *string `pulumi:"regex"`
}

// GatewayRouteHttpPathMatchInput is an input type that accepts GatewayRouteHttpPathMatchArgs and GatewayRouteHttpPathMatchOutput values.
// You can construct a concrete instance of `GatewayRouteHttpPathMatchInput` via:
//
//          GatewayRouteHttpPathMatchArgs{...}
type GatewayRouteHttpPathMatchInput interface {
	pulumi.Input

	ToGatewayRouteHttpPathMatchOutput() GatewayRouteHttpPathMatchOutput
	ToGatewayRouteHttpPathMatchOutputWithContext(context.Context) GatewayRouteHttpPathMatchOutput
}

type GatewayRouteHttpPathMatchArgs struct {
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (GatewayRouteHttpPathMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpPathMatch)(nil)).Elem()
}

func (i GatewayRouteHttpPathMatchArgs) ToGatewayRouteHttpPathMatchOutput() GatewayRouteHttpPathMatchOutput {
	return i.ToGatewayRouteHttpPathMatchOutputWithContext(context.Background())
}

func (i GatewayRouteHttpPathMatchArgs) ToGatewayRouteHttpPathMatchOutputWithContext(ctx context.Context) GatewayRouteHttpPathMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpPathMatchOutput)
}

func (i GatewayRouteHttpPathMatchArgs) ToGatewayRouteHttpPathMatchPtrOutput() GatewayRouteHttpPathMatchPtrOutput {
	return i.ToGatewayRouteHttpPathMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpPathMatchArgs) ToGatewayRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpPathMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpPathMatchOutput).ToGatewayRouteHttpPathMatchPtrOutputWithContext(ctx)
}

// GatewayRouteHttpPathMatchPtrInput is an input type that accepts GatewayRouteHttpPathMatchArgs, GatewayRouteHttpPathMatchPtr and GatewayRouteHttpPathMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpPathMatchPtrInput` via:
//
//          GatewayRouteHttpPathMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpPathMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpPathMatchPtrOutput() GatewayRouteHttpPathMatchPtrOutput
	ToGatewayRouteHttpPathMatchPtrOutputWithContext(context.Context) GatewayRouteHttpPathMatchPtrOutput
}

type gatewayRouteHttpPathMatchPtrType GatewayRouteHttpPathMatchArgs

func GatewayRouteHttpPathMatchPtr(v *GatewayRouteHttpPathMatchArgs) GatewayRouteHttpPathMatchPtrInput {
	return (*gatewayRouteHttpPathMatchPtrType)(v)
}

func (*gatewayRouteHttpPathMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpPathMatch)(nil)).Elem()
}

func (i *gatewayRouteHttpPathMatchPtrType) ToGatewayRouteHttpPathMatchPtrOutput() GatewayRouteHttpPathMatchPtrOutput {
	return i.ToGatewayRouteHttpPathMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpPathMatchPtrType) ToGatewayRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpPathMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpPathMatchPtrOutput)
}

type GatewayRouteHttpPathMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpPathMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpPathMatch)(nil)).Elem()
}

func (o GatewayRouteHttpPathMatchOutput) ToGatewayRouteHttpPathMatchOutput() GatewayRouteHttpPathMatchOutput {
	return o
}

func (o GatewayRouteHttpPathMatchOutput) ToGatewayRouteHttpPathMatchOutputWithContext(ctx context.Context) GatewayRouteHttpPathMatchOutput {
	return o
}

func (o GatewayRouteHttpPathMatchOutput) ToGatewayRouteHttpPathMatchPtrOutput() GatewayRouteHttpPathMatchPtrOutput {
	return o.ToGatewayRouteHttpPathMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpPathMatchOutput) ToGatewayRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpPathMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpPathMatch) *GatewayRouteHttpPathMatch {
		return &v
	}).(GatewayRouteHttpPathMatchPtrOutput)
}

func (o GatewayRouteHttpPathMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpPathMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpPathMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpPathMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpPathMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpPathMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpPathMatch)(nil)).Elem()
}

func (o GatewayRouteHttpPathMatchPtrOutput) ToGatewayRouteHttpPathMatchPtrOutput() GatewayRouteHttpPathMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpPathMatchPtrOutput) ToGatewayRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpPathMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpPathMatchPtrOutput) Elem() GatewayRouteHttpPathMatchOutput {
	return o.ApplyT(func(v *GatewayRouteHttpPathMatch) GatewayRouteHttpPathMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpPathMatch
		return ret
	}).(GatewayRouteHttpPathMatchOutput)
}

func (o GatewayRouteHttpPathMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpPathMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteHttpPathMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpPathMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpQueryParameterMatch struct {
	Exact *string `pulumi:"exact"`
}

// GatewayRouteHttpQueryParameterMatchInput is an input type that accepts GatewayRouteHttpQueryParameterMatchArgs and GatewayRouteHttpQueryParameterMatchOutput values.
// You can construct a concrete instance of `GatewayRouteHttpQueryParameterMatchInput` via:
//
//          GatewayRouteHttpQueryParameterMatchArgs{...}
type GatewayRouteHttpQueryParameterMatchInput interface {
	pulumi.Input

	ToGatewayRouteHttpQueryParameterMatchOutput() GatewayRouteHttpQueryParameterMatchOutput
	ToGatewayRouteHttpQueryParameterMatchOutputWithContext(context.Context) GatewayRouteHttpQueryParameterMatchOutput
}

type GatewayRouteHttpQueryParameterMatchArgs struct {
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (GatewayRouteHttpQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpQueryParameterMatch)(nil)).Elem()
}

func (i GatewayRouteHttpQueryParameterMatchArgs) ToGatewayRouteHttpQueryParameterMatchOutput() GatewayRouteHttpQueryParameterMatchOutput {
	return i.ToGatewayRouteHttpQueryParameterMatchOutputWithContext(context.Background())
}

func (i GatewayRouteHttpQueryParameterMatchArgs) ToGatewayRouteHttpQueryParameterMatchOutputWithContext(ctx context.Context) GatewayRouteHttpQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpQueryParameterMatchOutput)
}

func (i GatewayRouteHttpQueryParameterMatchArgs) ToGatewayRouteHttpQueryParameterMatchPtrOutput() GatewayRouteHttpQueryParameterMatchPtrOutput {
	return i.ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteHttpQueryParameterMatchArgs) ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpQueryParameterMatchOutput).ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(ctx)
}

// GatewayRouteHttpQueryParameterMatchPtrInput is an input type that accepts GatewayRouteHttpQueryParameterMatchArgs, GatewayRouteHttpQueryParameterMatchPtr and GatewayRouteHttpQueryParameterMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteHttpQueryParameterMatchPtrInput` via:
//
//          GatewayRouteHttpQueryParameterMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteHttpQueryParameterMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteHttpQueryParameterMatchPtrOutput() GatewayRouteHttpQueryParameterMatchPtrOutput
	ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(context.Context) GatewayRouteHttpQueryParameterMatchPtrOutput
}

type gatewayRouteHttpQueryParameterMatchPtrType GatewayRouteHttpQueryParameterMatchArgs

func GatewayRouteHttpQueryParameterMatchPtr(v *GatewayRouteHttpQueryParameterMatchArgs) GatewayRouteHttpQueryParameterMatchPtrInput {
	return (*gatewayRouteHttpQueryParameterMatchPtrType)(v)
}

func (*gatewayRouteHttpQueryParameterMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpQueryParameterMatch)(nil)).Elem()
}

func (i *gatewayRouteHttpQueryParameterMatchPtrType) ToGatewayRouteHttpQueryParameterMatchPtrOutput() GatewayRouteHttpQueryParameterMatchPtrOutput {
	return i.ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteHttpQueryParameterMatchPtrType) ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteHttpQueryParameterMatchPtrOutput)
}

type GatewayRouteHttpQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteHttpQueryParameterMatch)(nil)).Elem()
}

func (o GatewayRouteHttpQueryParameterMatchOutput) ToGatewayRouteHttpQueryParameterMatchOutput() GatewayRouteHttpQueryParameterMatchOutput {
	return o
}

func (o GatewayRouteHttpQueryParameterMatchOutput) ToGatewayRouteHttpQueryParameterMatchOutputWithContext(ctx context.Context) GatewayRouteHttpQueryParameterMatchOutput {
	return o
}

func (o GatewayRouteHttpQueryParameterMatchOutput) ToGatewayRouteHttpQueryParameterMatchPtrOutput() GatewayRouteHttpQueryParameterMatchPtrOutput {
	return o.ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteHttpQueryParameterMatchOutput) ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpQueryParameterMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteHttpQueryParameterMatch) *GatewayRouteHttpQueryParameterMatch {
		return &v
	}).(GatewayRouteHttpQueryParameterMatchPtrOutput)
}

func (o GatewayRouteHttpQueryParameterMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteHttpQueryParameterMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type GatewayRouteHttpQueryParameterMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteHttpQueryParameterMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteHttpQueryParameterMatch)(nil)).Elem()
}

func (o GatewayRouteHttpQueryParameterMatchPtrOutput) ToGatewayRouteHttpQueryParameterMatchPtrOutput() GatewayRouteHttpQueryParameterMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpQueryParameterMatchPtrOutput) ToGatewayRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) GatewayRouteHttpQueryParameterMatchPtrOutput {
	return o
}

func (o GatewayRouteHttpQueryParameterMatchPtrOutput) Elem() GatewayRouteHttpQueryParameterMatchOutput {
	return o.ApplyT(func(v *GatewayRouteHttpQueryParameterMatch) GatewayRouteHttpQueryParameterMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteHttpQueryParameterMatch
		return ret
	}).(GatewayRouteHttpQueryParameterMatchOutput)
}

func (o GatewayRouteHttpQueryParameterMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteHttpQueryParameterMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteMetadataMatch struct {
	Exact  *string                 `pulumi:"exact"`
	Prefix *string                 `pulumi:"prefix"`
	Range  *GatewayRouteRangeMatch `pulumi:"range"`
	Regex  *string                 `pulumi:"regex"`
	Suffix *string                 `pulumi:"suffix"`
}

// GatewayRouteMetadataMatchInput is an input type that accepts GatewayRouteMetadataMatchArgs and GatewayRouteMetadataMatchOutput values.
// You can construct a concrete instance of `GatewayRouteMetadataMatchInput` via:
//
//          GatewayRouteMetadataMatchArgs{...}
type GatewayRouteMetadataMatchInput interface {
	pulumi.Input

	ToGatewayRouteMetadataMatchOutput() GatewayRouteMetadataMatchOutput
	ToGatewayRouteMetadataMatchOutputWithContext(context.Context) GatewayRouteMetadataMatchOutput
}

type GatewayRouteMetadataMatchArgs struct {
	Exact  pulumi.StringPtrInput          `pulumi:"exact"`
	Prefix pulumi.StringPtrInput          `pulumi:"prefix"`
	Range  GatewayRouteRangeMatchPtrInput `pulumi:"range"`
	Regex  pulumi.StringPtrInput          `pulumi:"regex"`
	Suffix pulumi.StringPtrInput          `pulumi:"suffix"`
}

func (GatewayRouteMetadataMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteMetadataMatch)(nil)).Elem()
}

func (i GatewayRouteMetadataMatchArgs) ToGatewayRouteMetadataMatchOutput() GatewayRouteMetadataMatchOutput {
	return i.ToGatewayRouteMetadataMatchOutputWithContext(context.Background())
}

func (i GatewayRouteMetadataMatchArgs) ToGatewayRouteMetadataMatchOutputWithContext(ctx context.Context) GatewayRouteMetadataMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteMetadataMatchOutput)
}

func (i GatewayRouteMetadataMatchArgs) ToGatewayRouteMetadataMatchPtrOutput() GatewayRouteMetadataMatchPtrOutput {
	return i.ToGatewayRouteMetadataMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteMetadataMatchArgs) ToGatewayRouteMetadataMatchPtrOutputWithContext(ctx context.Context) GatewayRouteMetadataMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteMetadataMatchOutput).ToGatewayRouteMetadataMatchPtrOutputWithContext(ctx)
}

// GatewayRouteMetadataMatchPtrInput is an input type that accepts GatewayRouteMetadataMatchArgs, GatewayRouteMetadataMatchPtr and GatewayRouteMetadataMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteMetadataMatchPtrInput` via:
//
//          GatewayRouteMetadataMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteMetadataMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteMetadataMatchPtrOutput() GatewayRouteMetadataMatchPtrOutput
	ToGatewayRouteMetadataMatchPtrOutputWithContext(context.Context) GatewayRouteMetadataMatchPtrOutput
}

type gatewayRouteMetadataMatchPtrType GatewayRouteMetadataMatchArgs

func GatewayRouteMetadataMatchPtr(v *GatewayRouteMetadataMatchArgs) GatewayRouteMetadataMatchPtrInput {
	return (*gatewayRouteMetadataMatchPtrType)(v)
}

func (*gatewayRouteMetadataMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteMetadataMatch)(nil)).Elem()
}

func (i *gatewayRouteMetadataMatchPtrType) ToGatewayRouteMetadataMatchPtrOutput() GatewayRouteMetadataMatchPtrOutput {
	return i.ToGatewayRouteMetadataMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteMetadataMatchPtrType) ToGatewayRouteMetadataMatchPtrOutputWithContext(ctx context.Context) GatewayRouteMetadataMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteMetadataMatchPtrOutput)
}

type GatewayRouteMetadataMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteMetadataMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteMetadataMatch)(nil)).Elem()
}

func (o GatewayRouteMetadataMatchOutput) ToGatewayRouteMetadataMatchOutput() GatewayRouteMetadataMatchOutput {
	return o
}

func (o GatewayRouteMetadataMatchOutput) ToGatewayRouteMetadataMatchOutputWithContext(ctx context.Context) GatewayRouteMetadataMatchOutput {
	return o
}

func (o GatewayRouteMetadataMatchOutput) ToGatewayRouteMetadataMatchPtrOutput() GatewayRouteMetadataMatchPtrOutput {
	return o.ToGatewayRouteMetadataMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteMetadataMatchOutput) ToGatewayRouteMetadataMatchPtrOutputWithContext(ctx context.Context) GatewayRouteMetadataMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteMetadataMatch) *GatewayRouteMetadataMatch {
		return &v
	}).(GatewayRouteMetadataMatchPtrOutput)
}

func (o GatewayRouteMetadataMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteMetadataMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteMetadataMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteMetadataMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteMetadataMatchOutput) Range() GatewayRouteRangeMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteMetadataMatch) *GatewayRouteRangeMatch { return v.Range }).(GatewayRouteRangeMatchPtrOutput)
}

func (o GatewayRouteMetadataMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteMetadataMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

func (o GatewayRouteMetadataMatchOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRouteMetadataMatch) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type GatewayRouteMetadataMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteMetadataMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteMetadataMatch)(nil)).Elem()
}

func (o GatewayRouteMetadataMatchPtrOutput) ToGatewayRouteMetadataMatchPtrOutput() GatewayRouteMetadataMatchPtrOutput {
	return o
}

func (o GatewayRouteMetadataMatchPtrOutput) ToGatewayRouteMetadataMatchPtrOutputWithContext(ctx context.Context) GatewayRouteMetadataMatchPtrOutput {
	return o
}

func (o GatewayRouteMetadataMatchPtrOutput) Elem() GatewayRouteMetadataMatchOutput {
	return o.ApplyT(func(v *GatewayRouteMetadataMatch) GatewayRouteMetadataMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteMetadataMatch
		return ret
	}).(GatewayRouteMetadataMatchOutput)
}

func (o GatewayRouteMetadataMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteMetadataMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteMetadataMatchPtrOutput) Range() GatewayRouteRangeMatchPtrOutput {
	return o.ApplyT(func(v *GatewayRouteMetadataMatch) *GatewayRouteRangeMatch {
		if v == nil {
			return nil
		}
		return v.Range
	}).(GatewayRouteRangeMatchPtrOutput)
}

func (o GatewayRouteMetadataMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

func (o GatewayRouteMetadataMatchPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteMetadataMatch) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type GatewayRouteQueryParameter struct {
	Match *GatewayRouteHttpQueryParameterMatch `pulumi:"match"`
	Name  string                               `pulumi:"name"`
}

// GatewayRouteQueryParameterInput is an input type that accepts GatewayRouteQueryParameterArgs and GatewayRouteQueryParameterOutput values.
// You can construct a concrete instance of `GatewayRouteQueryParameterInput` via:
//
//          GatewayRouteQueryParameterArgs{...}
type GatewayRouteQueryParameterInput interface {
	pulumi.Input

	ToGatewayRouteQueryParameterOutput() GatewayRouteQueryParameterOutput
	ToGatewayRouteQueryParameterOutputWithContext(context.Context) GatewayRouteQueryParameterOutput
}

type GatewayRouteQueryParameterArgs struct {
	Match GatewayRouteHttpQueryParameterMatchPtrInput `pulumi:"match"`
	Name  pulumi.StringInput                          `pulumi:"name"`
}

func (GatewayRouteQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteQueryParameter)(nil)).Elem()
}

func (i GatewayRouteQueryParameterArgs) ToGatewayRouteQueryParameterOutput() GatewayRouteQueryParameterOutput {
	return i.ToGatewayRouteQueryParameterOutputWithContext(context.Background())
}

func (i GatewayRouteQueryParameterArgs) ToGatewayRouteQueryParameterOutputWithContext(ctx context.Context) GatewayRouteQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteQueryParameterOutput)
}

// GatewayRouteQueryParameterArrayInput is an input type that accepts GatewayRouteQueryParameterArray and GatewayRouteQueryParameterArrayOutput values.
// You can construct a concrete instance of `GatewayRouteQueryParameterArrayInput` via:
//
//          GatewayRouteQueryParameterArray{ GatewayRouteQueryParameterArgs{...} }
type GatewayRouteQueryParameterArrayInput interface {
	pulumi.Input

	ToGatewayRouteQueryParameterArrayOutput() GatewayRouteQueryParameterArrayOutput
	ToGatewayRouteQueryParameterArrayOutputWithContext(context.Context) GatewayRouteQueryParameterArrayOutput
}

type GatewayRouteQueryParameterArray []GatewayRouteQueryParameterInput

func (GatewayRouteQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteQueryParameter)(nil)).Elem()
}

func (i GatewayRouteQueryParameterArray) ToGatewayRouteQueryParameterArrayOutput() GatewayRouteQueryParameterArrayOutput {
	return i.ToGatewayRouteQueryParameterArrayOutputWithContext(context.Background())
}

func (i GatewayRouteQueryParameterArray) ToGatewayRouteQueryParameterArrayOutputWithContext(ctx context.Context) GatewayRouteQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteQueryParameterArrayOutput)
}

type GatewayRouteQueryParameterOutput struct{ *pulumi.OutputState }

func (GatewayRouteQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteQueryParameter)(nil)).Elem()
}

func (o GatewayRouteQueryParameterOutput) ToGatewayRouteQueryParameterOutput() GatewayRouteQueryParameterOutput {
	return o
}

func (o GatewayRouteQueryParameterOutput) ToGatewayRouteQueryParameterOutputWithContext(ctx context.Context) GatewayRouteQueryParameterOutput {
	return o
}

func (o GatewayRouteQueryParameterOutput) Match() GatewayRouteHttpQueryParameterMatchPtrOutput {
	return o.ApplyT(func(v GatewayRouteQueryParameter) *GatewayRouteHttpQueryParameterMatch { return v.Match }).(GatewayRouteHttpQueryParameterMatchPtrOutput)
}

func (o GatewayRouteQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type GatewayRouteQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteQueryParameter)(nil)).Elem()
}

func (o GatewayRouteQueryParameterArrayOutput) ToGatewayRouteQueryParameterArrayOutput() GatewayRouteQueryParameterArrayOutput {
	return o
}

func (o GatewayRouteQueryParameterArrayOutput) ToGatewayRouteQueryParameterArrayOutputWithContext(ctx context.Context) GatewayRouteQueryParameterArrayOutput {
	return o
}

func (o GatewayRouteQueryParameterArrayOutput) Index(i pulumi.IntInput) GatewayRouteQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteQueryParameter {
		return vs[0].([]GatewayRouteQueryParameter)[vs[1].(int)]
	}).(GatewayRouteQueryParameterOutput)
}

type GatewayRouteRangeMatch struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// GatewayRouteRangeMatchInput is an input type that accepts GatewayRouteRangeMatchArgs and GatewayRouteRangeMatchOutput values.
// You can construct a concrete instance of `GatewayRouteRangeMatchInput` via:
//
//          GatewayRouteRangeMatchArgs{...}
type GatewayRouteRangeMatchInput interface {
	pulumi.Input

	ToGatewayRouteRangeMatchOutput() GatewayRouteRangeMatchOutput
	ToGatewayRouteRangeMatchOutputWithContext(context.Context) GatewayRouteRangeMatchOutput
}

type GatewayRouteRangeMatchArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (GatewayRouteRangeMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteRangeMatch)(nil)).Elem()
}

func (i GatewayRouteRangeMatchArgs) ToGatewayRouteRangeMatchOutput() GatewayRouteRangeMatchOutput {
	return i.ToGatewayRouteRangeMatchOutputWithContext(context.Background())
}

func (i GatewayRouteRangeMatchArgs) ToGatewayRouteRangeMatchOutputWithContext(ctx context.Context) GatewayRouteRangeMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteRangeMatchOutput)
}

func (i GatewayRouteRangeMatchArgs) ToGatewayRouteRangeMatchPtrOutput() GatewayRouteRangeMatchPtrOutput {
	return i.ToGatewayRouteRangeMatchPtrOutputWithContext(context.Background())
}

func (i GatewayRouteRangeMatchArgs) ToGatewayRouteRangeMatchPtrOutputWithContext(ctx context.Context) GatewayRouteRangeMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteRangeMatchOutput).ToGatewayRouteRangeMatchPtrOutputWithContext(ctx)
}

// GatewayRouteRangeMatchPtrInput is an input type that accepts GatewayRouteRangeMatchArgs, GatewayRouteRangeMatchPtr and GatewayRouteRangeMatchPtrOutput values.
// You can construct a concrete instance of `GatewayRouteRangeMatchPtrInput` via:
//
//          GatewayRouteRangeMatchArgs{...}
//
//  or:
//
//          nil
type GatewayRouteRangeMatchPtrInput interface {
	pulumi.Input

	ToGatewayRouteRangeMatchPtrOutput() GatewayRouteRangeMatchPtrOutput
	ToGatewayRouteRangeMatchPtrOutputWithContext(context.Context) GatewayRouteRangeMatchPtrOutput
}

type gatewayRouteRangeMatchPtrType GatewayRouteRangeMatchArgs

func GatewayRouteRangeMatchPtr(v *GatewayRouteRangeMatchArgs) GatewayRouteRangeMatchPtrInput {
	return (*gatewayRouteRangeMatchPtrType)(v)
}

func (*gatewayRouteRangeMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteRangeMatch)(nil)).Elem()
}

func (i *gatewayRouteRangeMatchPtrType) ToGatewayRouteRangeMatchPtrOutput() GatewayRouteRangeMatchPtrOutput {
	return i.ToGatewayRouteRangeMatchPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteRangeMatchPtrType) ToGatewayRouteRangeMatchPtrOutputWithContext(ctx context.Context) GatewayRouteRangeMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteRangeMatchPtrOutput)
}

type GatewayRouteRangeMatchOutput struct{ *pulumi.OutputState }

func (GatewayRouteRangeMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteRangeMatch)(nil)).Elem()
}

func (o GatewayRouteRangeMatchOutput) ToGatewayRouteRangeMatchOutput() GatewayRouteRangeMatchOutput {
	return o
}

func (o GatewayRouteRangeMatchOutput) ToGatewayRouteRangeMatchOutputWithContext(ctx context.Context) GatewayRouteRangeMatchOutput {
	return o
}

func (o GatewayRouteRangeMatchOutput) ToGatewayRouteRangeMatchPtrOutput() GatewayRouteRangeMatchPtrOutput {
	return o.ToGatewayRouteRangeMatchPtrOutputWithContext(context.Background())
}

func (o GatewayRouteRangeMatchOutput) ToGatewayRouteRangeMatchPtrOutputWithContext(ctx context.Context) GatewayRouteRangeMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteRangeMatch) *GatewayRouteRangeMatch {
		return &v
	}).(GatewayRouteRangeMatchPtrOutput)
}

func (o GatewayRouteRangeMatchOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteRangeMatch) int { return v.End }).(pulumi.IntOutput)
}

func (o GatewayRouteRangeMatchOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteRangeMatch) int { return v.Start }).(pulumi.IntOutput)
}

type GatewayRouteRangeMatchPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteRangeMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteRangeMatch)(nil)).Elem()
}

func (o GatewayRouteRangeMatchPtrOutput) ToGatewayRouteRangeMatchPtrOutput() GatewayRouteRangeMatchPtrOutput {
	return o
}

func (o GatewayRouteRangeMatchPtrOutput) ToGatewayRouteRangeMatchPtrOutputWithContext(ctx context.Context) GatewayRouteRangeMatchPtrOutput {
	return o
}

func (o GatewayRouteRangeMatchPtrOutput) Elem() GatewayRouteRangeMatchOutput {
	return o.ApplyT(func(v *GatewayRouteRangeMatch) GatewayRouteRangeMatch {
		if v != nil {
			return *v
		}
		var ret GatewayRouteRangeMatch
		return ret
	}).(GatewayRouteRangeMatchOutput)
}

func (o GatewayRouteRangeMatchPtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteRangeMatch) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

func (o GatewayRouteRangeMatchPtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteRangeMatch) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type GatewayRouteSpec struct {
	GrpcRoute  *GatewayRouteGrpcGatewayRoute `pulumi:"grpcRoute"`
	Http2Route *GatewayRouteHttpGatewayRoute `pulumi:"http2Route"`
	HttpRoute  *GatewayRouteHttpGatewayRoute `pulumi:"httpRoute"`
	Priority   *int                          `pulumi:"priority"`
}

// GatewayRouteSpecInput is an input type that accepts GatewayRouteSpecArgs and GatewayRouteSpecOutput values.
// You can construct a concrete instance of `GatewayRouteSpecInput` via:
//
//          GatewayRouteSpecArgs{...}
type GatewayRouteSpecInput interface {
	pulumi.Input

	ToGatewayRouteSpecOutput() GatewayRouteSpecOutput
	ToGatewayRouteSpecOutputWithContext(context.Context) GatewayRouteSpecOutput
}

type GatewayRouteSpecArgs struct {
	GrpcRoute  GatewayRouteGrpcGatewayRoutePtrInput `pulumi:"grpcRoute"`
	Http2Route GatewayRouteHttpGatewayRoutePtrInput `pulumi:"http2Route"`
	HttpRoute  GatewayRouteHttpGatewayRoutePtrInput `pulumi:"httpRoute"`
	Priority   pulumi.IntPtrInput                   `pulumi:"priority"`
}

func (GatewayRouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpec)(nil)).Elem()
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecOutput() GatewayRouteSpecOutput {
	return i.ToGatewayRouteSpecOutputWithContext(context.Background())
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecOutputWithContext(ctx context.Context) GatewayRouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecOutput)
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return i.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (i GatewayRouteSpecArgs) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecOutput).ToGatewayRouteSpecPtrOutputWithContext(ctx)
}

// GatewayRouteSpecPtrInput is an input type that accepts GatewayRouteSpecArgs, GatewayRouteSpecPtr and GatewayRouteSpecPtrOutput values.
// You can construct a concrete instance of `GatewayRouteSpecPtrInput` via:
//
//          GatewayRouteSpecArgs{...}
//
//  or:
//
//          nil
type GatewayRouteSpecPtrInput interface {
	pulumi.Input

	ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput
	ToGatewayRouteSpecPtrOutputWithContext(context.Context) GatewayRouteSpecPtrOutput
}

type gatewayRouteSpecPtrType GatewayRouteSpecArgs

func GatewayRouteSpecPtr(v *GatewayRouteSpecArgs) GatewayRouteSpecPtrInput {
	return (*gatewayRouteSpecPtrType)(v)
}

func (*gatewayRouteSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpec)(nil)).Elem()
}

func (i *gatewayRouteSpecPtrType) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return i.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteSpecPtrType) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteSpecPtrOutput)
}

type GatewayRouteSpecOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteSpec)(nil)).Elem()
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecOutput() GatewayRouteSpecOutput {
	return o
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecOutputWithContext(ctx context.Context) GatewayRouteSpecOutput {
	return o
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return o.ToGatewayRouteSpecPtrOutputWithContext(context.Background())
}

func (o GatewayRouteSpecOutput) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteSpec) *GatewayRouteSpec {
		return &v
	}).(GatewayRouteSpecPtrOutput)
}

func (o GatewayRouteSpecOutput) GrpcRoute() GatewayRouteGrpcGatewayRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteGrpcGatewayRoute { return v.GrpcRoute }).(GatewayRouteGrpcGatewayRoutePtrOutput)
}

func (o GatewayRouteSpecOutput) Http2Route() GatewayRouteHttpGatewayRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteHttpGatewayRoute { return v.Http2Route }).(GatewayRouteHttpGatewayRoutePtrOutput)
}

func (o GatewayRouteSpecOutput) HttpRoute() GatewayRouteHttpGatewayRoutePtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *GatewayRouteHttpGatewayRoute { return v.HttpRoute }).(GatewayRouteHttpGatewayRoutePtrOutput)
}

func (o GatewayRouteSpecOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayRouteSpec) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type GatewayRouteSpecPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteSpec)(nil)).Elem()
}

func (o GatewayRouteSpecPtrOutput) ToGatewayRouteSpecPtrOutput() GatewayRouteSpecPtrOutput {
	return o
}

func (o GatewayRouteSpecPtrOutput) ToGatewayRouteSpecPtrOutputWithContext(ctx context.Context) GatewayRouteSpecPtrOutput {
	return o
}

func (o GatewayRouteSpecPtrOutput) Elem() GatewayRouteSpecOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) GatewayRouteSpec {
		if v != nil {
			return *v
		}
		var ret GatewayRouteSpec
		return ret
	}).(GatewayRouteSpecOutput)
}

func (o GatewayRouteSpecPtrOutput) GrpcRoute() GatewayRouteGrpcGatewayRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteGrpcGatewayRoute {
		if v == nil {
			return nil
		}
		return v.GrpcRoute
	}).(GatewayRouteGrpcGatewayRoutePtrOutput)
}

func (o GatewayRouteSpecPtrOutput) Http2Route() GatewayRouteHttpGatewayRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteHttpGatewayRoute {
		if v == nil {
			return nil
		}
		return v.Http2Route
	}).(GatewayRouteHttpGatewayRoutePtrOutput)
}

func (o GatewayRouteSpecPtrOutput) HttpRoute() GatewayRouteHttpGatewayRoutePtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *GatewayRouteHttpGatewayRoute {
		if v == nil {
			return nil
		}
		return v.HttpRoute
	}).(GatewayRouteHttpGatewayRoutePtrOutput)
}

func (o GatewayRouteSpecPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayRouteSpec) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

type GatewayRouteTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GatewayRouteTagInput is an input type that accepts GatewayRouteTagArgs and GatewayRouteTagOutput values.
// You can construct a concrete instance of `GatewayRouteTagInput` via:
//
//          GatewayRouteTagArgs{...}
type GatewayRouteTagInput interface {
	pulumi.Input

	ToGatewayRouteTagOutput() GatewayRouteTagOutput
	ToGatewayRouteTagOutputWithContext(context.Context) GatewayRouteTagOutput
}

type GatewayRouteTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GatewayRouteTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteTag)(nil)).Elem()
}

func (i GatewayRouteTagArgs) ToGatewayRouteTagOutput() GatewayRouteTagOutput {
	return i.ToGatewayRouteTagOutputWithContext(context.Background())
}

func (i GatewayRouteTagArgs) ToGatewayRouteTagOutputWithContext(ctx context.Context) GatewayRouteTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteTagOutput)
}

// GatewayRouteTagArrayInput is an input type that accepts GatewayRouteTagArray and GatewayRouteTagArrayOutput values.
// You can construct a concrete instance of `GatewayRouteTagArrayInput` via:
//
//          GatewayRouteTagArray{ GatewayRouteTagArgs{...} }
type GatewayRouteTagArrayInput interface {
	pulumi.Input

	ToGatewayRouteTagArrayOutput() GatewayRouteTagArrayOutput
	ToGatewayRouteTagArrayOutputWithContext(context.Context) GatewayRouteTagArrayOutput
}

type GatewayRouteTagArray []GatewayRouteTagInput

func (GatewayRouteTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteTag)(nil)).Elem()
}

func (i GatewayRouteTagArray) ToGatewayRouteTagArrayOutput() GatewayRouteTagArrayOutput {
	return i.ToGatewayRouteTagArrayOutputWithContext(context.Background())
}

func (i GatewayRouteTagArray) ToGatewayRouteTagArrayOutputWithContext(ctx context.Context) GatewayRouteTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteTagArrayOutput)
}

type GatewayRouteTagOutput struct{ *pulumi.OutputState }

func (GatewayRouteTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteTag)(nil)).Elem()
}

func (o GatewayRouteTagOutput) ToGatewayRouteTagOutput() GatewayRouteTagOutput {
	return o
}

func (o GatewayRouteTagOutput) ToGatewayRouteTagOutputWithContext(ctx context.Context) GatewayRouteTagOutput {
	return o
}

func (o GatewayRouteTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GatewayRouteTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteTag) string { return v.Value }).(pulumi.StringOutput)
}

type GatewayRouteTagArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteTag)(nil)).Elem()
}

func (o GatewayRouteTagArrayOutput) ToGatewayRouteTagArrayOutput() GatewayRouteTagArrayOutput {
	return o
}

func (o GatewayRouteTagArrayOutput) ToGatewayRouteTagArrayOutputWithContext(ctx context.Context) GatewayRouteTagArrayOutput {
	return o
}

func (o GatewayRouteTagArrayOutput) Index(i pulumi.IntInput) GatewayRouteTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteTag {
		return vs[0].([]GatewayRouteTag)[vs[1].(int)]
	}).(GatewayRouteTagOutput)
}

type GatewayRouteTarget struct {
	VirtualService GatewayRouteVirtualService `pulumi:"virtualService"`
}

// GatewayRouteTargetInput is an input type that accepts GatewayRouteTargetArgs and GatewayRouteTargetOutput values.
// You can construct a concrete instance of `GatewayRouteTargetInput` via:
//
//          GatewayRouteTargetArgs{...}
type GatewayRouteTargetInput interface {
	pulumi.Input

	ToGatewayRouteTargetOutput() GatewayRouteTargetOutput
	ToGatewayRouteTargetOutputWithContext(context.Context) GatewayRouteTargetOutput
}

type GatewayRouteTargetArgs struct {
	VirtualService GatewayRouteVirtualServiceInput `pulumi:"virtualService"`
}

func (GatewayRouteTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteTarget)(nil)).Elem()
}

func (i GatewayRouteTargetArgs) ToGatewayRouteTargetOutput() GatewayRouteTargetOutput {
	return i.ToGatewayRouteTargetOutputWithContext(context.Background())
}

func (i GatewayRouteTargetArgs) ToGatewayRouteTargetOutputWithContext(ctx context.Context) GatewayRouteTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteTargetOutput)
}

func (i GatewayRouteTargetArgs) ToGatewayRouteTargetPtrOutput() GatewayRouteTargetPtrOutput {
	return i.ToGatewayRouteTargetPtrOutputWithContext(context.Background())
}

func (i GatewayRouteTargetArgs) ToGatewayRouteTargetPtrOutputWithContext(ctx context.Context) GatewayRouteTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteTargetOutput).ToGatewayRouteTargetPtrOutputWithContext(ctx)
}

// GatewayRouteTargetPtrInput is an input type that accepts GatewayRouteTargetArgs, GatewayRouteTargetPtr and GatewayRouteTargetPtrOutput values.
// You can construct a concrete instance of `GatewayRouteTargetPtrInput` via:
//
//          GatewayRouteTargetArgs{...}
//
//  or:
//
//          nil
type GatewayRouteTargetPtrInput interface {
	pulumi.Input

	ToGatewayRouteTargetPtrOutput() GatewayRouteTargetPtrOutput
	ToGatewayRouteTargetPtrOutputWithContext(context.Context) GatewayRouteTargetPtrOutput
}

type gatewayRouteTargetPtrType GatewayRouteTargetArgs

func GatewayRouteTargetPtr(v *GatewayRouteTargetArgs) GatewayRouteTargetPtrInput {
	return (*gatewayRouteTargetPtrType)(v)
}

func (*gatewayRouteTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteTarget)(nil)).Elem()
}

func (i *gatewayRouteTargetPtrType) ToGatewayRouteTargetPtrOutput() GatewayRouteTargetPtrOutput {
	return i.ToGatewayRouteTargetPtrOutputWithContext(context.Background())
}

func (i *gatewayRouteTargetPtrType) ToGatewayRouteTargetPtrOutputWithContext(ctx context.Context) GatewayRouteTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteTargetPtrOutput)
}

type GatewayRouteTargetOutput struct{ *pulumi.OutputState }

func (GatewayRouteTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteTarget)(nil)).Elem()
}

func (o GatewayRouteTargetOutput) ToGatewayRouteTargetOutput() GatewayRouteTargetOutput {
	return o
}

func (o GatewayRouteTargetOutput) ToGatewayRouteTargetOutputWithContext(ctx context.Context) GatewayRouteTargetOutput {
	return o
}

func (o GatewayRouteTargetOutput) ToGatewayRouteTargetPtrOutput() GatewayRouteTargetPtrOutput {
	return o.ToGatewayRouteTargetPtrOutputWithContext(context.Background())
}

func (o GatewayRouteTargetOutput) ToGatewayRouteTargetPtrOutputWithContext(ctx context.Context) GatewayRouteTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteTarget) *GatewayRouteTarget {
		return &v
	}).(GatewayRouteTargetPtrOutput)
}

func (o GatewayRouteTargetOutput) VirtualService() GatewayRouteVirtualServiceOutput {
	return o.ApplyT(func(v GatewayRouteTarget) GatewayRouteVirtualService { return v.VirtualService }).(GatewayRouteVirtualServiceOutput)
}

type GatewayRouteTargetPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteTarget)(nil)).Elem()
}

func (o GatewayRouteTargetPtrOutput) ToGatewayRouteTargetPtrOutput() GatewayRouteTargetPtrOutput {
	return o
}

func (o GatewayRouteTargetPtrOutput) ToGatewayRouteTargetPtrOutputWithContext(ctx context.Context) GatewayRouteTargetPtrOutput {
	return o
}

func (o GatewayRouteTargetPtrOutput) Elem() GatewayRouteTargetOutput {
	return o.ApplyT(func(v *GatewayRouteTarget) GatewayRouteTarget {
		if v != nil {
			return *v
		}
		var ret GatewayRouteTarget
		return ret
	}).(GatewayRouteTargetOutput)
}

func (o GatewayRouteTargetPtrOutput) VirtualService() GatewayRouteVirtualServicePtrOutput {
	return o.ApplyT(func(v *GatewayRouteTarget) *GatewayRouteVirtualService {
		if v == nil {
			return nil
		}
		return &v.VirtualService
	}).(GatewayRouteVirtualServicePtrOutput)
}

type GatewayRouteVirtualService struct {
	VirtualServiceName string `pulumi:"virtualServiceName"`
}

// GatewayRouteVirtualServiceInput is an input type that accepts GatewayRouteVirtualServiceArgs and GatewayRouteVirtualServiceOutput values.
// You can construct a concrete instance of `GatewayRouteVirtualServiceInput` via:
//
//          GatewayRouteVirtualServiceArgs{...}
type GatewayRouteVirtualServiceInput interface {
	pulumi.Input

	ToGatewayRouteVirtualServiceOutput() GatewayRouteVirtualServiceOutput
	ToGatewayRouteVirtualServiceOutputWithContext(context.Context) GatewayRouteVirtualServiceOutput
}

type GatewayRouteVirtualServiceArgs struct {
	VirtualServiceName pulumi.StringInput `pulumi:"virtualServiceName"`
}

func (GatewayRouteVirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteVirtualService)(nil)).Elem()
}

func (i GatewayRouteVirtualServiceArgs) ToGatewayRouteVirtualServiceOutput() GatewayRouteVirtualServiceOutput {
	return i.ToGatewayRouteVirtualServiceOutputWithContext(context.Background())
}

func (i GatewayRouteVirtualServiceArgs) ToGatewayRouteVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteVirtualServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteVirtualServiceOutput)
}

func (i GatewayRouteVirtualServiceArgs) ToGatewayRouteVirtualServicePtrOutput() GatewayRouteVirtualServicePtrOutput {
	return i.ToGatewayRouteVirtualServicePtrOutputWithContext(context.Background())
}

func (i GatewayRouteVirtualServiceArgs) ToGatewayRouteVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteVirtualServiceOutput).ToGatewayRouteVirtualServicePtrOutputWithContext(ctx)
}

// GatewayRouteVirtualServicePtrInput is an input type that accepts GatewayRouteVirtualServiceArgs, GatewayRouteVirtualServicePtr and GatewayRouteVirtualServicePtrOutput values.
// You can construct a concrete instance of `GatewayRouteVirtualServicePtrInput` via:
//
//          GatewayRouteVirtualServiceArgs{...}
//
//  or:
//
//          nil
type GatewayRouteVirtualServicePtrInput interface {
	pulumi.Input

	ToGatewayRouteVirtualServicePtrOutput() GatewayRouteVirtualServicePtrOutput
	ToGatewayRouteVirtualServicePtrOutputWithContext(context.Context) GatewayRouteVirtualServicePtrOutput
}

type gatewayRouteVirtualServicePtrType GatewayRouteVirtualServiceArgs

func GatewayRouteVirtualServicePtr(v *GatewayRouteVirtualServiceArgs) GatewayRouteVirtualServicePtrInput {
	return (*gatewayRouteVirtualServicePtrType)(v)
}

func (*gatewayRouteVirtualServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteVirtualService)(nil)).Elem()
}

func (i *gatewayRouteVirtualServicePtrType) ToGatewayRouteVirtualServicePtrOutput() GatewayRouteVirtualServicePtrOutput {
	return i.ToGatewayRouteVirtualServicePtrOutputWithContext(context.Background())
}

func (i *gatewayRouteVirtualServicePtrType) ToGatewayRouteVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteVirtualServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteVirtualServicePtrOutput)
}

type GatewayRouteVirtualServiceOutput struct{ *pulumi.OutputState }

func (GatewayRouteVirtualServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteVirtualService)(nil)).Elem()
}

func (o GatewayRouteVirtualServiceOutput) ToGatewayRouteVirtualServiceOutput() GatewayRouteVirtualServiceOutput {
	return o
}

func (o GatewayRouteVirtualServiceOutput) ToGatewayRouteVirtualServiceOutputWithContext(ctx context.Context) GatewayRouteVirtualServiceOutput {
	return o
}

func (o GatewayRouteVirtualServiceOutput) ToGatewayRouteVirtualServicePtrOutput() GatewayRouteVirtualServicePtrOutput {
	return o.ToGatewayRouteVirtualServicePtrOutputWithContext(context.Background())
}

func (o GatewayRouteVirtualServiceOutput) ToGatewayRouteVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteVirtualServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouteVirtualService) *GatewayRouteVirtualService {
		return &v
	}).(GatewayRouteVirtualServicePtrOutput)
}

func (o GatewayRouteVirtualServiceOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteVirtualService) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type GatewayRouteVirtualServicePtrOutput struct{ *pulumi.OutputState }

func (GatewayRouteVirtualServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouteVirtualService)(nil)).Elem()
}

func (o GatewayRouteVirtualServicePtrOutput) ToGatewayRouteVirtualServicePtrOutput() GatewayRouteVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteVirtualServicePtrOutput) ToGatewayRouteVirtualServicePtrOutputWithContext(ctx context.Context) GatewayRouteVirtualServicePtrOutput {
	return o
}

func (o GatewayRouteVirtualServicePtrOutput) Elem() GatewayRouteVirtualServiceOutput {
	return o.ApplyT(func(v *GatewayRouteVirtualService) GatewayRouteVirtualService {
		if v != nil {
			return *v
		}
		var ret GatewayRouteVirtualService
		return ret
	}).(GatewayRouteVirtualServiceOutput)
}

func (o GatewayRouteVirtualServicePtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouteVirtualService) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type MeshEgressFilter struct {
	Type string `pulumi:"type"`
}

// MeshEgressFilterInput is an input type that accepts MeshEgressFilterArgs and MeshEgressFilterOutput values.
// You can construct a concrete instance of `MeshEgressFilterInput` via:
//
//          MeshEgressFilterArgs{...}
type MeshEgressFilterInput interface {
	pulumi.Input

	ToMeshEgressFilterOutput() MeshEgressFilterOutput
	ToMeshEgressFilterOutputWithContext(context.Context) MeshEgressFilterOutput
}

type MeshEgressFilterArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (MeshEgressFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshEgressFilter)(nil)).Elem()
}

func (i MeshEgressFilterArgs) ToMeshEgressFilterOutput() MeshEgressFilterOutput {
	return i.ToMeshEgressFilterOutputWithContext(context.Background())
}

func (i MeshEgressFilterArgs) ToMeshEgressFilterOutputWithContext(ctx context.Context) MeshEgressFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshEgressFilterOutput)
}

func (i MeshEgressFilterArgs) ToMeshEgressFilterPtrOutput() MeshEgressFilterPtrOutput {
	return i.ToMeshEgressFilterPtrOutputWithContext(context.Background())
}

func (i MeshEgressFilterArgs) ToMeshEgressFilterPtrOutputWithContext(ctx context.Context) MeshEgressFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshEgressFilterOutput).ToMeshEgressFilterPtrOutputWithContext(ctx)
}

// MeshEgressFilterPtrInput is an input type that accepts MeshEgressFilterArgs, MeshEgressFilterPtr and MeshEgressFilterPtrOutput values.
// You can construct a concrete instance of `MeshEgressFilterPtrInput` via:
//
//          MeshEgressFilterArgs{...}
//
//  or:
//
//          nil
type MeshEgressFilterPtrInput interface {
	pulumi.Input

	ToMeshEgressFilterPtrOutput() MeshEgressFilterPtrOutput
	ToMeshEgressFilterPtrOutputWithContext(context.Context) MeshEgressFilterPtrOutput
}

type meshEgressFilterPtrType MeshEgressFilterArgs

func MeshEgressFilterPtr(v *MeshEgressFilterArgs) MeshEgressFilterPtrInput {
	return (*meshEgressFilterPtrType)(v)
}

func (*meshEgressFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshEgressFilter)(nil)).Elem()
}

func (i *meshEgressFilterPtrType) ToMeshEgressFilterPtrOutput() MeshEgressFilterPtrOutput {
	return i.ToMeshEgressFilterPtrOutputWithContext(context.Background())
}

func (i *meshEgressFilterPtrType) ToMeshEgressFilterPtrOutputWithContext(ctx context.Context) MeshEgressFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshEgressFilterPtrOutput)
}

type MeshEgressFilterOutput struct{ *pulumi.OutputState }

func (MeshEgressFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshEgressFilter)(nil)).Elem()
}

func (o MeshEgressFilterOutput) ToMeshEgressFilterOutput() MeshEgressFilterOutput {
	return o
}

func (o MeshEgressFilterOutput) ToMeshEgressFilterOutputWithContext(ctx context.Context) MeshEgressFilterOutput {
	return o
}

func (o MeshEgressFilterOutput) ToMeshEgressFilterPtrOutput() MeshEgressFilterPtrOutput {
	return o.ToMeshEgressFilterPtrOutputWithContext(context.Background())
}

func (o MeshEgressFilterOutput) ToMeshEgressFilterPtrOutputWithContext(ctx context.Context) MeshEgressFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MeshEgressFilter) *MeshEgressFilter {
		return &v
	}).(MeshEgressFilterPtrOutput)
}

func (o MeshEgressFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MeshEgressFilter) string { return v.Type }).(pulumi.StringOutput)
}

type MeshEgressFilterPtrOutput struct{ *pulumi.OutputState }

func (MeshEgressFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshEgressFilter)(nil)).Elem()
}

func (o MeshEgressFilterPtrOutput) ToMeshEgressFilterPtrOutput() MeshEgressFilterPtrOutput {
	return o
}

func (o MeshEgressFilterPtrOutput) ToMeshEgressFilterPtrOutputWithContext(ctx context.Context) MeshEgressFilterPtrOutput {
	return o
}

func (o MeshEgressFilterPtrOutput) Elem() MeshEgressFilterOutput {
	return o.ApplyT(func(v *MeshEgressFilter) MeshEgressFilter {
		if v != nil {
			return *v
		}
		var ret MeshEgressFilter
		return ret
	}).(MeshEgressFilterOutput)
}

func (o MeshEgressFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MeshEgressFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MeshSpec struct {
	EgressFilter *MeshEgressFilter `pulumi:"egressFilter"`
}

// MeshSpecInput is an input type that accepts MeshSpecArgs and MeshSpecOutput values.
// You can construct a concrete instance of `MeshSpecInput` via:
//
//          MeshSpecArgs{...}
type MeshSpecInput interface {
	pulumi.Input

	ToMeshSpecOutput() MeshSpecOutput
	ToMeshSpecOutputWithContext(context.Context) MeshSpecOutput
}

type MeshSpecArgs struct {
	EgressFilter MeshEgressFilterPtrInput `pulumi:"egressFilter"`
}

func (MeshSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpec)(nil)).Elem()
}

func (i MeshSpecArgs) ToMeshSpecOutput() MeshSpecOutput {
	return i.ToMeshSpecOutputWithContext(context.Background())
}

func (i MeshSpecArgs) ToMeshSpecOutputWithContext(ctx context.Context) MeshSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecOutput)
}

func (i MeshSpecArgs) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return i.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (i MeshSpecArgs) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecOutput).ToMeshSpecPtrOutputWithContext(ctx)
}

// MeshSpecPtrInput is an input type that accepts MeshSpecArgs, MeshSpecPtr and MeshSpecPtrOutput values.
// You can construct a concrete instance of `MeshSpecPtrInput` via:
//
//          MeshSpecArgs{...}
//
//  or:
//
//          nil
type MeshSpecPtrInput interface {
	pulumi.Input

	ToMeshSpecPtrOutput() MeshSpecPtrOutput
	ToMeshSpecPtrOutputWithContext(context.Context) MeshSpecPtrOutput
}

type meshSpecPtrType MeshSpecArgs

func MeshSpecPtr(v *MeshSpecArgs) MeshSpecPtrInput {
	return (*meshSpecPtrType)(v)
}

func (*meshSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpec)(nil)).Elem()
}

func (i *meshSpecPtrType) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return i.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (i *meshSpecPtrType) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshSpecPtrOutput)
}

type MeshSpecOutput struct{ *pulumi.OutputState }

func (MeshSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshSpec)(nil)).Elem()
}

func (o MeshSpecOutput) ToMeshSpecOutput() MeshSpecOutput {
	return o
}

func (o MeshSpecOutput) ToMeshSpecOutputWithContext(ctx context.Context) MeshSpecOutput {
	return o
}

func (o MeshSpecOutput) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return o.ToMeshSpecPtrOutputWithContext(context.Background())
}

func (o MeshSpecOutput) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MeshSpec) *MeshSpec {
		return &v
	}).(MeshSpecPtrOutput)
}

func (o MeshSpecOutput) EgressFilter() MeshEgressFilterPtrOutput {
	return o.ApplyT(func(v MeshSpec) *MeshEgressFilter { return v.EgressFilter }).(MeshEgressFilterPtrOutput)
}

type MeshSpecPtrOutput struct{ *pulumi.OutputState }

func (MeshSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshSpec)(nil)).Elem()
}

func (o MeshSpecPtrOutput) ToMeshSpecPtrOutput() MeshSpecPtrOutput {
	return o
}

func (o MeshSpecPtrOutput) ToMeshSpecPtrOutputWithContext(ctx context.Context) MeshSpecPtrOutput {
	return o
}

func (o MeshSpecPtrOutput) Elem() MeshSpecOutput {
	return o.ApplyT(func(v *MeshSpec) MeshSpec {
		if v != nil {
			return *v
		}
		var ret MeshSpec
		return ret
	}).(MeshSpecOutput)
}

func (o MeshSpecPtrOutput) EgressFilter() MeshEgressFilterPtrOutput {
	return o.ApplyT(func(v *MeshSpec) *MeshEgressFilter {
		if v == nil {
			return nil
		}
		return v.EgressFilter
	}).(MeshEgressFilterPtrOutput)
}

type MeshTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// MeshTagInput is an input type that accepts MeshTagArgs and MeshTagOutput values.
// You can construct a concrete instance of `MeshTagInput` via:
//
//          MeshTagArgs{...}
type MeshTagInput interface {
	pulumi.Input

	ToMeshTagOutput() MeshTagOutput
	ToMeshTagOutputWithContext(context.Context) MeshTagOutput
}

type MeshTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (MeshTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshTag)(nil)).Elem()
}

func (i MeshTagArgs) ToMeshTagOutput() MeshTagOutput {
	return i.ToMeshTagOutputWithContext(context.Background())
}

func (i MeshTagArgs) ToMeshTagOutputWithContext(ctx context.Context) MeshTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshTagOutput)
}

// MeshTagArrayInput is an input type that accepts MeshTagArray and MeshTagArrayOutput values.
// You can construct a concrete instance of `MeshTagArrayInput` via:
//
//          MeshTagArray{ MeshTagArgs{...} }
type MeshTagArrayInput interface {
	pulumi.Input

	ToMeshTagArrayOutput() MeshTagArrayOutput
	ToMeshTagArrayOutputWithContext(context.Context) MeshTagArrayOutput
}

type MeshTagArray []MeshTagInput

func (MeshTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MeshTag)(nil)).Elem()
}

func (i MeshTagArray) ToMeshTagArrayOutput() MeshTagArrayOutput {
	return i.ToMeshTagArrayOutputWithContext(context.Background())
}

func (i MeshTagArray) ToMeshTagArrayOutputWithContext(ctx context.Context) MeshTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshTagArrayOutput)
}

type MeshTagOutput struct{ *pulumi.OutputState }

func (MeshTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeshTag)(nil)).Elem()
}

func (o MeshTagOutput) ToMeshTagOutput() MeshTagOutput {
	return o
}

func (o MeshTagOutput) ToMeshTagOutputWithContext(ctx context.Context) MeshTagOutput {
	return o
}

func (o MeshTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MeshTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o MeshTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v MeshTag) string { return v.Value }).(pulumi.StringOutput)
}

type MeshTagArrayOutput struct{ *pulumi.OutputState }

func (MeshTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MeshTag)(nil)).Elem()
}

func (o MeshTagArrayOutput) ToMeshTagArrayOutput() MeshTagArrayOutput {
	return o
}

func (o MeshTagArrayOutput) ToMeshTagArrayOutputWithContext(ctx context.Context) MeshTagArrayOutput {
	return o
}

func (o MeshTagArrayOutput) Index(i pulumi.IntInput) MeshTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MeshTag {
		return vs[0].([]MeshTag)[vs[1].(int)]
	}).(MeshTagOutput)
}

type RouteDuration struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// RouteDurationInput is an input type that accepts RouteDurationArgs and RouteDurationOutput values.
// You can construct a concrete instance of `RouteDurationInput` via:
//
//          RouteDurationArgs{...}
type RouteDurationInput interface {
	pulumi.Input

	ToRouteDurationOutput() RouteDurationOutput
	ToRouteDurationOutputWithContext(context.Context) RouteDurationOutput
}

type RouteDurationArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (RouteDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteDuration)(nil)).Elem()
}

func (i RouteDurationArgs) ToRouteDurationOutput() RouteDurationOutput {
	return i.ToRouteDurationOutputWithContext(context.Background())
}

func (i RouteDurationArgs) ToRouteDurationOutputWithContext(ctx context.Context) RouteDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteDurationOutput)
}

func (i RouteDurationArgs) ToRouteDurationPtrOutput() RouteDurationPtrOutput {
	return i.ToRouteDurationPtrOutputWithContext(context.Background())
}

func (i RouteDurationArgs) ToRouteDurationPtrOutputWithContext(ctx context.Context) RouteDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteDurationOutput).ToRouteDurationPtrOutputWithContext(ctx)
}

// RouteDurationPtrInput is an input type that accepts RouteDurationArgs, RouteDurationPtr and RouteDurationPtrOutput values.
// You can construct a concrete instance of `RouteDurationPtrInput` via:
//
//          RouteDurationArgs{...}
//
//  or:
//
//          nil
type RouteDurationPtrInput interface {
	pulumi.Input

	ToRouteDurationPtrOutput() RouteDurationPtrOutput
	ToRouteDurationPtrOutputWithContext(context.Context) RouteDurationPtrOutput
}

type routeDurationPtrType RouteDurationArgs

func RouteDurationPtr(v *RouteDurationArgs) RouteDurationPtrInput {
	return (*routeDurationPtrType)(v)
}

func (*routeDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteDuration)(nil)).Elem()
}

func (i *routeDurationPtrType) ToRouteDurationPtrOutput() RouteDurationPtrOutput {
	return i.ToRouteDurationPtrOutputWithContext(context.Background())
}

func (i *routeDurationPtrType) ToRouteDurationPtrOutputWithContext(ctx context.Context) RouteDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteDurationPtrOutput)
}

type RouteDurationOutput struct{ *pulumi.OutputState }

func (RouteDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteDuration)(nil)).Elem()
}

func (o RouteDurationOutput) ToRouteDurationOutput() RouteDurationOutput {
	return o
}

func (o RouteDurationOutput) ToRouteDurationOutputWithContext(ctx context.Context) RouteDurationOutput {
	return o
}

func (o RouteDurationOutput) ToRouteDurationPtrOutput() RouteDurationPtrOutput {
	return o.ToRouteDurationPtrOutputWithContext(context.Background())
}

func (o RouteDurationOutput) ToRouteDurationPtrOutputWithContext(ctx context.Context) RouteDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteDuration) *RouteDuration {
		return &v
	}).(RouteDurationPtrOutput)
}

func (o RouteDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v RouteDuration) string { return v.Unit }).(pulumi.StringOutput)
}

func (o RouteDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v RouteDuration) int { return v.Value }).(pulumi.IntOutput)
}

type RouteDurationPtrOutput struct{ *pulumi.OutputState }

func (RouteDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteDuration)(nil)).Elem()
}

func (o RouteDurationPtrOutput) ToRouteDurationPtrOutput() RouteDurationPtrOutput {
	return o
}

func (o RouteDurationPtrOutput) ToRouteDurationPtrOutputWithContext(ctx context.Context) RouteDurationPtrOutput {
	return o
}

func (o RouteDurationPtrOutput) Elem() RouteDurationOutput {
	return o.ApplyT(func(v *RouteDuration) RouteDuration {
		if v != nil {
			return *v
		}
		var ret RouteDuration
		return ret
	}).(RouteDurationOutput)
}

func (o RouteDurationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteDuration) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o RouteDurationPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type RouteGrpcRetryPolicy struct {
	GrpcRetryEvents []string      `pulumi:"grpcRetryEvents"`
	HttpRetryEvents []string      `pulumi:"httpRetryEvents"`
	MaxRetries      int           `pulumi:"maxRetries"`
	PerRetryTimeout RouteDuration `pulumi:"perRetryTimeout"`
	TcpRetryEvents  []string      `pulumi:"tcpRetryEvents"`
}

// RouteGrpcRetryPolicyInput is an input type that accepts RouteGrpcRetryPolicyArgs and RouteGrpcRetryPolicyOutput values.
// You can construct a concrete instance of `RouteGrpcRetryPolicyInput` via:
//
//          RouteGrpcRetryPolicyArgs{...}
type RouteGrpcRetryPolicyInput interface {
	pulumi.Input

	ToRouteGrpcRetryPolicyOutput() RouteGrpcRetryPolicyOutput
	ToRouteGrpcRetryPolicyOutputWithContext(context.Context) RouteGrpcRetryPolicyOutput
}

type RouteGrpcRetryPolicyArgs struct {
	GrpcRetryEvents pulumi.StringArrayInput `pulumi:"grpcRetryEvents"`
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	MaxRetries      pulumi.IntInput         `pulumi:"maxRetries"`
	PerRetryTimeout RouteDurationInput      `pulumi:"perRetryTimeout"`
	TcpRetryEvents  pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteGrpcRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRetryPolicy)(nil)).Elem()
}

func (i RouteGrpcRetryPolicyArgs) ToRouteGrpcRetryPolicyOutput() RouteGrpcRetryPolicyOutput {
	return i.ToRouteGrpcRetryPolicyOutputWithContext(context.Background())
}

func (i RouteGrpcRetryPolicyArgs) ToRouteGrpcRetryPolicyOutputWithContext(ctx context.Context) RouteGrpcRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRetryPolicyOutput)
}

func (i RouteGrpcRetryPolicyArgs) ToRouteGrpcRetryPolicyPtrOutput() RouteGrpcRetryPolicyPtrOutput {
	return i.ToRouteGrpcRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteGrpcRetryPolicyArgs) ToRouteGrpcRetryPolicyPtrOutputWithContext(ctx context.Context) RouteGrpcRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRetryPolicyOutput).ToRouteGrpcRetryPolicyPtrOutputWithContext(ctx)
}

// RouteGrpcRetryPolicyPtrInput is an input type that accepts RouteGrpcRetryPolicyArgs, RouteGrpcRetryPolicyPtr and RouteGrpcRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteGrpcRetryPolicyPtrInput` via:
//
//          RouteGrpcRetryPolicyArgs{...}
//
//  or:
//
//          nil
type RouteGrpcRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteGrpcRetryPolicyPtrOutput() RouteGrpcRetryPolicyPtrOutput
	ToRouteGrpcRetryPolicyPtrOutputWithContext(context.Context) RouteGrpcRetryPolicyPtrOutput
}

type routeGrpcRetryPolicyPtrType RouteGrpcRetryPolicyArgs

func RouteGrpcRetryPolicyPtr(v *RouteGrpcRetryPolicyArgs) RouteGrpcRetryPolicyPtrInput {
	return (*routeGrpcRetryPolicyPtrType)(v)
}

func (*routeGrpcRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRetryPolicy)(nil)).Elem()
}

func (i *routeGrpcRetryPolicyPtrType) ToRouteGrpcRetryPolicyPtrOutput() RouteGrpcRetryPolicyPtrOutput {
	return i.ToRouteGrpcRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeGrpcRetryPolicyPtrType) ToRouteGrpcRetryPolicyPtrOutputWithContext(ctx context.Context) RouteGrpcRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRetryPolicyPtrOutput)
}

type RouteGrpcRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteGrpcRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRetryPolicy)(nil)).Elem()
}

func (o RouteGrpcRetryPolicyOutput) ToRouteGrpcRetryPolicyOutput() RouteGrpcRetryPolicyOutput {
	return o
}

func (o RouteGrpcRetryPolicyOutput) ToRouteGrpcRetryPolicyOutputWithContext(ctx context.Context) RouteGrpcRetryPolicyOutput {
	return o
}

func (o RouteGrpcRetryPolicyOutput) ToRouteGrpcRetryPolicyPtrOutput() RouteGrpcRetryPolicyPtrOutput {
	return o.ToRouteGrpcRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteGrpcRetryPolicyOutput) ToRouteGrpcRetryPolicyPtrOutputWithContext(ctx context.Context) RouteGrpcRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteGrpcRetryPolicy) *RouteGrpcRetryPolicy {
		return &v
	}).(RouteGrpcRetryPolicyPtrOutput)
}

func (o RouteGrpcRetryPolicyOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteGrpcRetryPolicy) []string { return v.GrpcRetryEvents }).(pulumi.StringArrayOutput)
}

func (o RouteGrpcRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteGrpcRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

func (o RouteGrpcRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteGrpcRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

func (o RouteGrpcRetryPolicyOutput) PerRetryTimeout() RouteDurationOutput {
	return o.ApplyT(func(v RouteGrpcRetryPolicy) RouteDuration { return v.PerRetryTimeout }).(RouteDurationOutput)
}

func (o RouteGrpcRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteGrpcRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteGrpcRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteGrpcRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRetryPolicy)(nil)).Elem()
}

func (o RouteGrpcRetryPolicyPtrOutput) ToRouteGrpcRetryPolicyPtrOutput() RouteGrpcRetryPolicyPtrOutput {
	return o
}

func (o RouteGrpcRetryPolicyPtrOutput) ToRouteGrpcRetryPolicyPtrOutputWithContext(ctx context.Context) RouteGrpcRetryPolicyPtrOutput {
	return o
}

func (o RouteGrpcRetryPolicyPtrOutput) Elem() RouteGrpcRetryPolicyOutput {
	return o.ApplyT(func(v *RouteGrpcRetryPolicy) RouteGrpcRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteGrpcRetryPolicy
		return ret
	}).(RouteGrpcRetryPolicyOutput)
}

func (o RouteGrpcRetryPolicyPtrOutput) GrpcRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteGrpcRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.GrpcRetryEvents
	}).(pulumi.StringArrayOutput)
}

func (o RouteGrpcRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteGrpcRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

func (o RouteGrpcRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

func (o RouteGrpcRetryPolicyPtrOutput) PerRetryTimeout() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRetryPolicy) *RouteDuration {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteDurationPtrOutput)
}

func (o RouteGrpcRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteGrpcRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteGrpcRoute struct {
	Action      RouteGrpcRouteAction  `pulumi:"action"`
	Match       RouteGrpcRouteMatch   `pulumi:"match"`
	RetryPolicy *RouteGrpcRetryPolicy `pulumi:"retryPolicy"`
	Timeout     *RouteGrpcTimeout     `pulumi:"timeout"`
}

// RouteGrpcRouteInput is an input type that accepts RouteGrpcRouteArgs and RouteGrpcRouteOutput values.
// You can construct a concrete instance of `RouteGrpcRouteInput` via:
//
//          RouteGrpcRouteArgs{...}
type RouteGrpcRouteInput interface {
	pulumi.Input

	ToRouteGrpcRouteOutput() RouteGrpcRouteOutput
	ToRouteGrpcRouteOutputWithContext(context.Context) RouteGrpcRouteOutput
}

type RouteGrpcRouteArgs struct {
	Action      RouteGrpcRouteActionInput    `pulumi:"action"`
	Match       RouteGrpcRouteMatchInput     `pulumi:"match"`
	RetryPolicy RouteGrpcRetryPolicyPtrInput `pulumi:"retryPolicy"`
	Timeout     RouteGrpcTimeoutPtrInput     `pulumi:"timeout"`
}

func (RouteGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRoute)(nil)).Elem()
}

func (i RouteGrpcRouteArgs) ToRouteGrpcRouteOutput() RouteGrpcRouteOutput {
	return i.ToRouteGrpcRouteOutputWithContext(context.Background())
}

func (i RouteGrpcRouteArgs) ToRouteGrpcRouteOutputWithContext(ctx context.Context) RouteGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteOutput)
}

func (i RouteGrpcRouteArgs) ToRouteGrpcRoutePtrOutput() RouteGrpcRoutePtrOutput {
	return i.ToRouteGrpcRoutePtrOutputWithContext(context.Background())
}

func (i RouteGrpcRouteArgs) ToRouteGrpcRoutePtrOutputWithContext(ctx context.Context) RouteGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteOutput).ToRouteGrpcRoutePtrOutputWithContext(ctx)
}

// RouteGrpcRoutePtrInput is an input type that accepts RouteGrpcRouteArgs, RouteGrpcRoutePtr and RouteGrpcRoutePtrOutput values.
// You can construct a concrete instance of `RouteGrpcRoutePtrInput` via:
//
//          RouteGrpcRouteArgs{...}
//
//  or:
//
//          nil
type RouteGrpcRoutePtrInput interface {
	pulumi.Input

	ToRouteGrpcRoutePtrOutput() RouteGrpcRoutePtrOutput
	ToRouteGrpcRoutePtrOutputWithContext(context.Context) RouteGrpcRoutePtrOutput
}

type routeGrpcRoutePtrType RouteGrpcRouteArgs

func RouteGrpcRoutePtr(v *RouteGrpcRouteArgs) RouteGrpcRoutePtrInput {
	return (*routeGrpcRoutePtrType)(v)
}

func (*routeGrpcRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRoute)(nil)).Elem()
}

func (i *routeGrpcRoutePtrType) ToRouteGrpcRoutePtrOutput() RouteGrpcRoutePtrOutput {
	return i.ToRouteGrpcRoutePtrOutputWithContext(context.Background())
}

func (i *routeGrpcRoutePtrType) ToRouteGrpcRoutePtrOutputWithContext(ctx context.Context) RouteGrpcRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRoutePtrOutput)
}

type RouteGrpcRouteOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRoute)(nil)).Elem()
}

func (o RouteGrpcRouteOutput) ToRouteGrpcRouteOutput() RouteGrpcRouteOutput {
	return o
}

func (o RouteGrpcRouteOutput) ToRouteGrpcRouteOutputWithContext(ctx context.Context) RouteGrpcRouteOutput {
	return o
}

func (o RouteGrpcRouteOutput) ToRouteGrpcRoutePtrOutput() RouteGrpcRoutePtrOutput {
	return o.ToRouteGrpcRoutePtrOutputWithContext(context.Background())
}

func (o RouteGrpcRouteOutput) ToRouteGrpcRoutePtrOutputWithContext(ctx context.Context) RouteGrpcRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteGrpcRoute) *RouteGrpcRoute {
		return &v
	}).(RouteGrpcRoutePtrOutput)
}

func (o RouteGrpcRouteOutput) Action() RouteGrpcRouteActionOutput {
	return o.ApplyT(func(v RouteGrpcRoute) RouteGrpcRouteAction { return v.Action }).(RouteGrpcRouteActionOutput)
}

func (o RouteGrpcRouteOutput) Match() RouteGrpcRouteMatchOutput {
	return o.ApplyT(func(v RouteGrpcRoute) RouteGrpcRouteMatch { return v.Match }).(RouteGrpcRouteMatchOutput)
}

func (o RouteGrpcRouteOutput) RetryPolicy() RouteGrpcRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteGrpcRoute) *RouteGrpcRetryPolicy { return v.RetryPolicy }).(RouteGrpcRetryPolicyPtrOutput)
}

func (o RouteGrpcRouteOutput) Timeout() RouteGrpcTimeoutPtrOutput {
	return o.ApplyT(func(v RouteGrpcRoute) *RouteGrpcTimeout { return v.Timeout }).(RouteGrpcTimeoutPtrOutput)
}

type RouteGrpcRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteGrpcRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRoute)(nil)).Elem()
}

func (o RouteGrpcRoutePtrOutput) ToRouteGrpcRoutePtrOutput() RouteGrpcRoutePtrOutput {
	return o
}

func (o RouteGrpcRoutePtrOutput) ToRouteGrpcRoutePtrOutputWithContext(ctx context.Context) RouteGrpcRoutePtrOutput {
	return o
}

func (o RouteGrpcRoutePtrOutput) Elem() RouteGrpcRouteOutput {
	return o.ApplyT(func(v *RouteGrpcRoute) RouteGrpcRoute {
		if v != nil {
			return *v
		}
		var ret RouteGrpcRoute
		return ret
	}).(RouteGrpcRouteOutput)
}

func (o RouteGrpcRoutePtrOutput) Action() RouteGrpcRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRoute) *RouteGrpcRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteGrpcRouteActionPtrOutput)
}

func (o RouteGrpcRoutePtrOutput) Match() RouteGrpcRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRoute) *RouteGrpcRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(RouteGrpcRouteMatchPtrOutput)
}

func (o RouteGrpcRoutePtrOutput) RetryPolicy() RouteGrpcRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRoute) *RouteGrpcRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteGrpcRetryPolicyPtrOutput)
}

func (o RouteGrpcRoutePtrOutput) Timeout() RouteGrpcTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRoute) *RouteGrpcTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteGrpcTimeoutPtrOutput)
}

type RouteGrpcRouteAction struct {
	WeightedTargets []RouteWeightedTarget `pulumi:"weightedTargets"`
}

// RouteGrpcRouteActionInput is an input type that accepts RouteGrpcRouteActionArgs and RouteGrpcRouteActionOutput values.
// You can construct a concrete instance of `RouteGrpcRouteActionInput` via:
//
//          RouteGrpcRouteActionArgs{...}
type RouteGrpcRouteActionInput interface {
	pulumi.Input

	ToRouteGrpcRouteActionOutput() RouteGrpcRouteActionOutput
	ToRouteGrpcRouteActionOutputWithContext(context.Context) RouteGrpcRouteActionOutput
}

type RouteGrpcRouteActionArgs struct {
	WeightedTargets RouteWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteGrpcRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteAction)(nil)).Elem()
}

func (i RouteGrpcRouteActionArgs) ToRouteGrpcRouteActionOutput() RouteGrpcRouteActionOutput {
	return i.ToRouteGrpcRouteActionOutputWithContext(context.Background())
}

func (i RouteGrpcRouteActionArgs) ToRouteGrpcRouteActionOutputWithContext(ctx context.Context) RouteGrpcRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteActionOutput)
}

func (i RouteGrpcRouteActionArgs) ToRouteGrpcRouteActionPtrOutput() RouteGrpcRouteActionPtrOutput {
	return i.ToRouteGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteGrpcRouteActionArgs) ToRouteGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteActionOutput).ToRouteGrpcRouteActionPtrOutputWithContext(ctx)
}

// RouteGrpcRouteActionPtrInput is an input type that accepts RouteGrpcRouteActionArgs, RouteGrpcRouteActionPtr and RouteGrpcRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteGrpcRouteActionPtrInput` via:
//
//          RouteGrpcRouteActionArgs{...}
//
//  or:
//
//          nil
type RouteGrpcRouteActionPtrInput interface {
	pulumi.Input

	ToRouteGrpcRouteActionPtrOutput() RouteGrpcRouteActionPtrOutput
	ToRouteGrpcRouteActionPtrOutputWithContext(context.Context) RouteGrpcRouteActionPtrOutput
}

type routeGrpcRouteActionPtrType RouteGrpcRouteActionArgs

func RouteGrpcRouteActionPtr(v *RouteGrpcRouteActionArgs) RouteGrpcRouteActionPtrInput {
	return (*routeGrpcRouteActionPtrType)(v)
}

func (*routeGrpcRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRouteAction)(nil)).Elem()
}

func (i *routeGrpcRouteActionPtrType) ToRouteGrpcRouteActionPtrOutput() RouteGrpcRouteActionPtrOutput {
	return i.ToRouteGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeGrpcRouteActionPtrType) ToRouteGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteGrpcRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteActionPtrOutput)
}

type RouteGrpcRouteActionOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteAction)(nil)).Elem()
}

func (o RouteGrpcRouteActionOutput) ToRouteGrpcRouteActionOutput() RouteGrpcRouteActionOutput {
	return o
}

func (o RouteGrpcRouteActionOutput) ToRouteGrpcRouteActionOutputWithContext(ctx context.Context) RouteGrpcRouteActionOutput {
	return o
}

func (o RouteGrpcRouteActionOutput) ToRouteGrpcRouteActionPtrOutput() RouteGrpcRouteActionPtrOutput {
	return o.ToRouteGrpcRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteGrpcRouteActionOutput) ToRouteGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteGrpcRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteGrpcRouteAction) *RouteGrpcRouteAction {
		return &v
	}).(RouteGrpcRouteActionPtrOutput)
}

func (o RouteGrpcRouteActionOutput) WeightedTargets() RouteWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteGrpcRouteAction) []RouteWeightedTarget { return v.WeightedTargets }).(RouteWeightedTargetArrayOutput)
}

type RouteGrpcRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRouteAction)(nil)).Elem()
}

func (o RouteGrpcRouteActionPtrOutput) ToRouteGrpcRouteActionPtrOutput() RouteGrpcRouteActionPtrOutput {
	return o
}

func (o RouteGrpcRouteActionPtrOutput) ToRouteGrpcRouteActionPtrOutputWithContext(ctx context.Context) RouteGrpcRouteActionPtrOutput {
	return o
}

func (o RouteGrpcRouteActionPtrOutput) Elem() RouteGrpcRouteActionOutput {
	return o.ApplyT(func(v *RouteGrpcRouteAction) RouteGrpcRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteGrpcRouteAction
		return ret
	}).(RouteGrpcRouteActionOutput)
}

func (o RouteGrpcRouteActionPtrOutput) WeightedTargets() RouteWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteGrpcRouteAction) []RouteWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteWeightedTargetArrayOutput)
}

type RouteGrpcRouteMatch struct {
	Metadata    []RouteGrpcRouteMetadata `pulumi:"metadata"`
	MethodName  *string                  `pulumi:"methodName"`
	ServiceName *string                  `pulumi:"serviceName"`
}

// RouteGrpcRouteMatchInput is an input type that accepts RouteGrpcRouteMatchArgs and RouteGrpcRouteMatchOutput values.
// You can construct a concrete instance of `RouteGrpcRouteMatchInput` via:
//
//          RouteGrpcRouteMatchArgs{...}
type RouteGrpcRouteMatchInput interface {
	pulumi.Input

	ToRouteGrpcRouteMatchOutput() RouteGrpcRouteMatchOutput
	ToRouteGrpcRouteMatchOutputWithContext(context.Context) RouteGrpcRouteMatchOutput
}

type RouteGrpcRouteMatchArgs struct {
	Metadata    RouteGrpcRouteMetadataArrayInput `pulumi:"metadata"`
	MethodName  pulumi.StringPtrInput            `pulumi:"methodName"`
	ServiceName pulumi.StringPtrInput            `pulumi:"serviceName"`
}

func (RouteGrpcRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteMatch)(nil)).Elem()
}

func (i RouteGrpcRouteMatchArgs) ToRouteGrpcRouteMatchOutput() RouteGrpcRouteMatchOutput {
	return i.ToRouteGrpcRouteMatchOutputWithContext(context.Background())
}

func (i RouteGrpcRouteMatchArgs) ToRouteGrpcRouteMatchOutputWithContext(ctx context.Context) RouteGrpcRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMatchOutput)
}

func (i RouteGrpcRouteMatchArgs) ToRouteGrpcRouteMatchPtrOutput() RouteGrpcRouteMatchPtrOutput {
	return i.ToRouteGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteGrpcRouteMatchArgs) ToRouteGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMatchOutput).ToRouteGrpcRouteMatchPtrOutputWithContext(ctx)
}

// RouteGrpcRouteMatchPtrInput is an input type that accepts RouteGrpcRouteMatchArgs, RouteGrpcRouteMatchPtr and RouteGrpcRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteGrpcRouteMatchPtrInput` via:
//
//          RouteGrpcRouteMatchArgs{...}
//
//  or:
//
//          nil
type RouteGrpcRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteGrpcRouteMatchPtrOutput() RouteGrpcRouteMatchPtrOutput
	ToRouteGrpcRouteMatchPtrOutputWithContext(context.Context) RouteGrpcRouteMatchPtrOutput
}

type routeGrpcRouteMatchPtrType RouteGrpcRouteMatchArgs

func RouteGrpcRouteMatchPtr(v *RouteGrpcRouteMatchArgs) RouteGrpcRouteMatchPtrInput {
	return (*routeGrpcRouteMatchPtrType)(v)
}

func (*routeGrpcRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRouteMatch)(nil)).Elem()
}

func (i *routeGrpcRouteMatchPtrType) ToRouteGrpcRouteMatchPtrOutput() RouteGrpcRouteMatchPtrOutput {
	return i.ToRouteGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeGrpcRouteMatchPtrType) ToRouteGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMatchPtrOutput)
}

type RouteGrpcRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteMatch)(nil)).Elem()
}

func (o RouteGrpcRouteMatchOutput) ToRouteGrpcRouteMatchOutput() RouteGrpcRouteMatchOutput {
	return o
}

func (o RouteGrpcRouteMatchOutput) ToRouteGrpcRouteMatchOutputWithContext(ctx context.Context) RouteGrpcRouteMatchOutput {
	return o
}

func (o RouteGrpcRouteMatchOutput) ToRouteGrpcRouteMatchPtrOutput() RouteGrpcRouteMatchPtrOutput {
	return o.ToRouteGrpcRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteGrpcRouteMatchOutput) ToRouteGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteGrpcRouteMatch) *RouteGrpcRouteMatch {
		return &v
	}).(RouteGrpcRouteMatchPtrOutput)
}

func (o RouteGrpcRouteMatchOutput) Metadata() RouteGrpcRouteMetadataArrayOutput {
	return o.ApplyT(func(v RouteGrpcRouteMatch) []RouteGrpcRouteMetadata { return v.Metadata }).(RouteGrpcRouteMetadataArrayOutput)
}

func (o RouteGrpcRouteMatchOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMatch) *string { return v.MethodName }).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMatchOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMatch) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type RouteGrpcRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRouteMatch)(nil)).Elem()
}

func (o RouteGrpcRouteMatchPtrOutput) ToRouteGrpcRouteMatchPtrOutput() RouteGrpcRouteMatchPtrOutput {
	return o
}

func (o RouteGrpcRouteMatchPtrOutput) ToRouteGrpcRouteMatchPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMatchPtrOutput {
	return o
}

func (o RouteGrpcRouteMatchPtrOutput) Elem() RouteGrpcRouteMatchOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMatch) RouteGrpcRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteGrpcRouteMatch
		return ret
	}).(RouteGrpcRouteMatchOutput)
}

func (o RouteGrpcRouteMatchPtrOutput) Metadata() RouteGrpcRouteMetadataArrayOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMatch) []RouteGrpcRouteMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(RouteGrpcRouteMetadataArrayOutput)
}

func (o RouteGrpcRouteMatchPtrOutput) MethodName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.MethodName
	}).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMatchPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type RouteGrpcRouteMetadata struct {
	Invert *bool                              `pulumi:"invert"`
	Match  *RouteGrpcRouteMetadataMatchMethod `pulumi:"match"`
	Name   string                             `pulumi:"name"`
}

// RouteGrpcRouteMetadataInput is an input type that accepts RouteGrpcRouteMetadataArgs and RouteGrpcRouteMetadataOutput values.
// You can construct a concrete instance of `RouteGrpcRouteMetadataInput` via:
//
//          RouteGrpcRouteMetadataArgs{...}
type RouteGrpcRouteMetadataInput interface {
	pulumi.Input

	ToRouteGrpcRouteMetadataOutput() RouteGrpcRouteMetadataOutput
	ToRouteGrpcRouteMetadataOutputWithContext(context.Context) RouteGrpcRouteMetadataOutput
}

type RouteGrpcRouteMetadataArgs struct {
	Invert pulumi.BoolPtrInput                       `pulumi:"invert"`
	Match  RouteGrpcRouteMetadataMatchMethodPtrInput `pulumi:"match"`
	Name   pulumi.StringInput                        `pulumi:"name"`
}

func (RouteGrpcRouteMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteMetadata)(nil)).Elem()
}

func (i RouteGrpcRouteMetadataArgs) ToRouteGrpcRouteMetadataOutput() RouteGrpcRouteMetadataOutput {
	return i.ToRouteGrpcRouteMetadataOutputWithContext(context.Background())
}

func (i RouteGrpcRouteMetadataArgs) ToRouteGrpcRouteMetadataOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMetadataOutput)
}

// RouteGrpcRouteMetadataArrayInput is an input type that accepts RouteGrpcRouteMetadataArray and RouteGrpcRouteMetadataArrayOutput values.
// You can construct a concrete instance of `RouteGrpcRouteMetadataArrayInput` via:
//
//          RouteGrpcRouteMetadataArray{ RouteGrpcRouteMetadataArgs{...} }
type RouteGrpcRouteMetadataArrayInput interface {
	pulumi.Input

	ToRouteGrpcRouteMetadataArrayOutput() RouteGrpcRouteMetadataArrayOutput
	ToRouteGrpcRouteMetadataArrayOutputWithContext(context.Context) RouteGrpcRouteMetadataArrayOutput
}

type RouteGrpcRouteMetadataArray []RouteGrpcRouteMetadataInput

func (RouteGrpcRouteMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteGrpcRouteMetadata)(nil)).Elem()
}

func (i RouteGrpcRouteMetadataArray) ToRouteGrpcRouteMetadataArrayOutput() RouteGrpcRouteMetadataArrayOutput {
	return i.ToRouteGrpcRouteMetadataArrayOutputWithContext(context.Background())
}

func (i RouteGrpcRouteMetadataArray) ToRouteGrpcRouteMetadataArrayOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMetadataArrayOutput)
}

type RouteGrpcRouteMetadataOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteMetadata)(nil)).Elem()
}

func (o RouteGrpcRouteMetadataOutput) ToRouteGrpcRouteMetadataOutput() RouteGrpcRouteMetadataOutput {
	return o
}

func (o RouteGrpcRouteMetadataOutput) ToRouteGrpcRouteMetadataOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataOutput {
	return o
}

func (o RouteGrpcRouteMetadataOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadata) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

func (o RouteGrpcRouteMetadataOutput) Match() RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadata) *RouteGrpcRouteMetadataMatchMethod { return v.Match }).(RouteGrpcRouteMetadataMatchMethodPtrOutput)
}

func (o RouteGrpcRouteMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadata) string { return v.Name }).(pulumi.StringOutput)
}

type RouteGrpcRouteMetadataArrayOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteGrpcRouteMetadata)(nil)).Elem()
}

func (o RouteGrpcRouteMetadataArrayOutput) ToRouteGrpcRouteMetadataArrayOutput() RouteGrpcRouteMetadataArrayOutput {
	return o
}

func (o RouteGrpcRouteMetadataArrayOutput) ToRouteGrpcRouteMetadataArrayOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataArrayOutput {
	return o
}

func (o RouteGrpcRouteMetadataArrayOutput) Index(i pulumi.IntInput) RouteGrpcRouteMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteGrpcRouteMetadata {
		return vs[0].([]RouteGrpcRouteMetadata)[vs[1].(int)]
	}).(RouteGrpcRouteMetadataOutput)
}

type RouteGrpcRouteMetadataMatchMethod struct {
	Exact  *string          `pulumi:"exact"`
	Prefix *string          `pulumi:"prefix"`
	Range  *RouteMatchRange `pulumi:"range"`
	Regex  *string          `pulumi:"regex"`
	Suffix *string          `pulumi:"suffix"`
}

// RouteGrpcRouteMetadataMatchMethodInput is an input type that accepts RouteGrpcRouteMetadataMatchMethodArgs and RouteGrpcRouteMetadataMatchMethodOutput values.
// You can construct a concrete instance of `RouteGrpcRouteMetadataMatchMethodInput` via:
//
//          RouteGrpcRouteMetadataMatchMethodArgs{...}
type RouteGrpcRouteMetadataMatchMethodInput interface {
	pulumi.Input

	ToRouteGrpcRouteMetadataMatchMethodOutput() RouteGrpcRouteMetadataMatchMethodOutput
	ToRouteGrpcRouteMetadataMatchMethodOutputWithContext(context.Context) RouteGrpcRouteMetadataMatchMethodOutput
}

type RouteGrpcRouteMetadataMatchMethodArgs struct {
	Exact  pulumi.StringPtrInput   `pulumi:"exact"`
	Prefix pulumi.StringPtrInput   `pulumi:"prefix"`
	Range  RouteMatchRangePtrInput `pulumi:"range"`
	Regex  pulumi.StringPtrInput   `pulumi:"regex"`
	Suffix pulumi.StringPtrInput   `pulumi:"suffix"`
}

func (RouteGrpcRouteMetadataMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteMetadataMatchMethod)(nil)).Elem()
}

func (i RouteGrpcRouteMetadataMatchMethodArgs) ToRouteGrpcRouteMetadataMatchMethodOutput() RouteGrpcRouteMetadataMatchMethodOutput {
	return i.ToRouteGrpcRouteMetadataMatchMethodOutputWithContext(context.Background())
}

func (i RouteGrpcRouteMetadataMatchMethodArgs) ToRouteGrpcRouteMetadataMatchMethodOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMetadataMatchMethodOutput)
}

func (i RouteGrpcRouteMetadataMatchMethodArgs) ToRouteGrpcRouteMetadataMatchMethodPtrOutput() RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return i.ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(context.Background())
}

func (i RouteGrpcRouteMetadataMatchMethodArgs) ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMetadataMatchMethodOutput).ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(ctx)
}

// RouteGrpcRouteMetadataMatchMethodPtrInput is an input type that accepts RouteGrpcRouteMetadataMatchMethodArgs, RouteGrpcRouteMetadataMatchMethodPtr and RouteGrpcRouteMetadataMatchMethodPtrOutput values.
// You can construct a concrete instance of `RouteGrpcRouteMetadataMatchMethodPtrInput` via:
//
//          RouteGrpcRouteMetadataMatchMethodArgs{...}
//
//  or:
//
//          nil
type RouteGrpcRouteMetadataMatchMethodPtrInput interface {
	pulumi.Input

	ToRouteGrpcRouteMetadataMatchMethodPtrOutput() RouteGrpcRouteMetadataMatchMethodPtrOutput
	ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(context.Context) RouteGrpcRouteMetadataMatchMethodPtrOutput
}

type routeGrpcRouteMetadataMatchMethodPtrType RouteGrpcRouteMetadataMatchMethodArgs

func RouteGrpcRouteMetadataMatchMethodPtr(v *RouteGrpcRouteMetadataMatchMethodArgs) RouteGrpcRouteMetadataMatchMethodPtrInput {
	return (*routeGrpcRouteMetadataMatchMethodPtrType)(v)
}

func (*routeGrpcRouteMetadataMatchMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRouteMetadataMatchMethod)(nil)).Elem()
}

func (i *routeGrpcRouteMetadataMatchMethodPtrType) ToRouteGrpcRouteMetadataMatchMethodPtrOutput() RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return i.ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(context.Background())
}

func (i *routeGrpcRouteMetadataMatchMethodPtrType) ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcRouteMetadataMatchMethodPtrOutput)
}

type RouteGrpcRouteMetadataMatchMethodOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteMetadataMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcRouteMetadataMatchMethod)(nil)).Elem()
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) ToRouteGrpcRouteMetadataMatchMethodOutput() RouteGrpcRouteMetadataMatchMethodOutput {
	return o
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) ToRouteGrpcRouteMetadataMatchMethodOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataMatchMethodOutput {
	return o
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) ToRouteGrpcRouteMetadataMatchMethodPtrOutput() RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return o.ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(context.Background())
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteGrpcRouteMetadataMatchMethod) *RouteGrpcRouteMetadataMatchMethod {
		return &v
	}).(RouteGrpcRouteMetadataMatchMethodPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadataMatchMethod) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadataMatchMethod) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) Range() RouteMatchRangePtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadataMatchMethod) *RouteMatchRange { return v.Range }).(RouteMatchRangePtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadataMatchMethod) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteGrpcRouteMetadataMatchMethod) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteGrpcRouteMetadataMatchMethodPtrOutput struct{ *pulumi.OutputState }

func (RouteGrpcRouteMetadataMatchMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcRouteMetadataMatchMethod)(nil)).Elem()
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) ToRouteGrpcRouteMetadataMatchMethodPtrOutput() RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return o
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) ToRouteGrpcRouteMetadataMatchMethodPtrOutputWithContext(ctx context.Context) RouteGrpcRouteMetadataMatchMethodPtrOutput {
	return o
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) Elem() RouteGrpcRouteMetadataMatchMethodOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMetadataMatchMethod) RouteGrpcRouteMetadataMatchMethod {
		if v != nil {
			return *v
		}
		var ret RouteGrpcRouteMetadataMatchMethod
		return ret
	}).(RouteGrpcRouteMetadataMatchMethodOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMetadataMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMetadataMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) Range() RouteMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMetadataMatchMethod) *RouteMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteMatchRangePtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMetadataMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

func (o RouteGrpcRouteMetadataMatchMethodPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteGrpcRouteMetadataMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteGrpcTimeout struct {
	Idle       *RouteDuration `pulumi:"idle"`
	PerRequest *RouteDuration `pulumi:"perRequest"`
}

// RouteGrpcTimeoutInput is an input type that accepts RouteGrpcTimeoutArgs and RouteGrpcTimeoutOutput values.
// You can construct a concrete instance of `RouteGrpcTimeoutInput` via:
//
//          RouteGrpcTimeoutArgs{...}
type RouteGrpcTimeoutInput interface {
	pulumi.Input

	ToRouteGrpcTimeoutOutput() RouteGrpcTimeoutOutput
	ToRouteGrpcTimeoutOutputWithContext(context.Context) RouteGrpcTimeoutOutput
}

type RouteGrpcTimeoutArgs struct {
	Idle       RouteDurationPtrInput `pulumi:"idle"`
	PerRequest RouteDurationPtrInput `pulumi:"perRequest"`
}

func (RouteGrpcTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcTimeout)(nil)).Elem()
}

func (i RouteGrpcTimeoutArgs) ToRouteGrpcTimeoutOutput() RouteGrpcTimeoutOutput {
	return i.ToRouteGrpcTimeoutOutputWithContext(context.Background())
}

func (i RouteGrpcTimeoutArgs) ToRouteGrpcTimeoutOutputWithContext(ctx context.Context) RouteGrpcTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcTimeoutOutput)
}

func (i RouteGrpcTimeoutArgs) ToRouteGrpcTimeoutPtrOutput() RouteGrpcTimeoutPtrOutput {
	return i.ToRouteGrpcTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteGrpcTimeoutArgs) ToRouteGrpcTimeoutPtrOutputWithContext(ctx context.Context) RouteGrpcTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcTimeoutOutput).ToRouteGrpcTimeoutPtrOutputWithContext(ctx)
}

// RouteGrpcTimeoutPtrInput is an input type that accepts RouteGrpcTimeoutArgs, RouteGrpcTimeoutPtr and RouteGrpcTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteGrpcTimeoutPtrInput` via:
//
//          RouteGrpcTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteGrpcTimeoutPtrInput interface {
	pulumi.Input

	ToRouteGrpcTimeoutPtrOutput() RouteGrpcTimeoutPtrOutput
	ToRouteGrpcTimeoutPtrOutputWithContext(context.Context) RouteGrpcTimeoutPtrOutput
}

type routeGrpcTimeoutPtrType RouteGrpcTimeoutArgs

func RouteGrpcTimeoutPtr(v *RouteGrpcTimeoutArgs) RouteGrpcTimeoutPtrInput {
	return (*routeGrpcTimeoutPtrType)(v)
}

func (*routeGrpcTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcTimeout)(nil)).Elem()
}

func (i *routeGrpcTimeoutPtrType) ToRouteGrpcTimeoutPtrOutput() RouteGrpcTimeoutPtrOutput {
	return i.ToRouteGrpcTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeGrpcTimeoutPtrType) ToRouteGrpcTimeoutPtrOutputWithContext(ctx context.Context) RouteGrpcTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteGrpcTimeoutPtrOutput)
}

type RouteGrpcTimeoutOutput struct{ *pulumi.OutputState }

func (RouteGrpcTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteGrpcTimeout)(nil)).Elem()
}

func (o RouteGrpcTimeoutOutput) ToRouteGrpcTimeoutOutput() RouteGrpcTimeoutOutput {
	return o
}

func (o RouteGrpcTimeoutOutput) ToRouteGrpcTimeoutOutputWithContext(ctx context.Context) RouteGrpcTimeoutOutput {
	return o
}

func (o RouteGrpcTimeoutOutput) ToRouteGrpcTimeoutPtrOutput() RouteGrpcTimeoutPtrOutput {
	return o.ToRouteGrpcTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteGrpcTimeoutOutput) ToRouteGrpcTimeoutPtrOutputWithContext(ctx context.Context) RouteGrpcTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteGrpcTimeout) *RouteGrpcTimeout {
		return &v
	}).(RouteGrpcTimeoutPtrOutput)
}

func (o RouteGrpcTimeoutOutput) Idle() RouteDurationPtrOutput {
	return o.ApplyT(func(v RouteGrpcTimeout) *RouteDuration { return v.Idle }).(RouteDurationPtrOutput)
}

func (o RouteGrpcTimeoutOutput) PerRequest() RouteDurationPtrOutput {
	return o.ApplyT(func(v RouteGrpcTimeout) *RouteDuration { return v.PerRequest }).(RouteDurationPtrOutput)
}

type RouteGrpcTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteGrpcTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteGrpcTimeout)(nil)).Elem()
}

func (o RouteGrpcTimeoutPtrOutput) ToRouteGrpcTimeoutPtrOutput() RouteGrpcTimeoutPtrOutput {
	return o
}

func (o RouteGrpcTimeoutPtrOutput) ToRouteGrpcTimeoutPtrOutputWithContext(ctx context.Context) RouteGrpcTimeoutPtrOutput {
	return o
}

func (o RouteGrpcTimeoutPtrOutput) Elem() RouteGrpcTimeoutOutput {
	return o.ApplyT(func(v *RouteGrpcTimeout) RouteGrpcTimeout {
		if v != nil {
			return *v
		}
		var ret RouteGrpcTimeout
		return ret
	}).(RouteGrpcTimeoutOutput)
}

func (o RouteGrpcTimeoutPtrOutput) Idle() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteGrpcTimeout) *RouteDuration {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteDurationPtrOutput)
}

func (o RouteGrpcTimeoutPtrOutput) PerRequest() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteGrpcTimeout) *RouteDuration {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteDurationPtrOutput)
}

type RouteHeaderMatchMethod struct {
	Exact  *string          `pulumi:"exact"`
	Prefix *string          `pulumi:"prefix"`
	Range  *RouteMatchRange `pulumi:"range"`
	Regex  *string          `pulumi:"regex"`
	Suffix *string          `pulumi:"suffix"`
}

// RouteHeaderMatchMethodInput is an input type that accepts RouteHeaderMatchMethodArgs and RouteHeaderMatchMethodOutput values.
// You can construct a concrete instance of `RouteHeaderMatchMethodInput` via:
//
//          RouteHeaderMatchMethodArgs{...}
type RouteHeaderMatchMethodInput interface {
	pulumi.Input

	ToRouteHeaderMatchMethodOutput() RouteHeaderMatchMethodOutput
	ToRouteHeaderMatchMethodOutputWithContext(context.Context) RouteHeaderMatchMethodOutput
}

type RouteHeaderMatchMethodArgs struct {
	Exact  pulumi.StringPtrInput   `pulumi:"exact"`
	Prefix pulumi.StringPtrInput   `pulumi:"prefix"`
	Range  RouteMatchRangePtrInput `pulumi:"range"`
	Regex  pulumi.StringPtrInput   `pulumi:"regex"`
	Suffix pulumi.StringPtrInput   `pulumi:"suffix"`
}

func (RouteHeaderMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHeaderMatchMethod)(nil)).Elem()
}

func (i RouteHeaderMatchMethodArgs) ToRouteHeaderMatchMethodOutput() RouteHeaderMatchMethodOutput {
	return i.ToRouteHeaderMatchMethodOutputWithContext(context.Background())
}

func (i RouteHeaderMatchMethodArgs) ToRouteHeaderMatchMethodOutputWithContext(ctx context.Context) RouteHeaderMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHeaderMatchMethodOutput)
}

func (i RouteHeaderMatchMethodArgs) ToRouteHeaderMatchMethodPtrOutput() RouteHeaderMatchMethodPtrOutput {
	return i.ToRouteHeaderMatchMethodPtrOutputWithContext(context.Background())
}

func (i RouteHeaderMatchMethodArgs) ToRouteHeaderMatchMethodPtrOutputWithContext(ctx context.Context) RouteHeaderMatchMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHeaderMatchMethodOutput).ToRouteHeaderMatchMethodPtrOutputWithContext(ctx)
}

// RouteHeaderMatchMethodPtrInput is an input type that accepts RouteHeaderMatchMethodArgs, RouteHeaderMatchMethodPtr and RouteHeaderMatchMethodPtrOutput values.
// You can construct a concrete instance of `RouteHeaderMatchMethodPtrInput` via:
//
//          RouteHeaderMatchMethodArgs{...}
//
//  or:
//
//          nil
type RouteHeaderMatchMethodPtrInput interface {
	pulumi.Input

	ToRouteHeaderMatchMethodPtrOutput() RouteHeaderMatchMethodPtrOutput
	ToRouteHeaderMatchMethodPtrOutputWithContext(context.Context) RouteHeaderMatchMethodPtrOutput
}

type routeHeaderMatchMethodPtrType RouteHeaderMatchMethodArgs

func RouteHeaderMatchMethodPtr(v *RouteHeaderMatchMethodArgs) RouteHeaderMatchMethodPtrInput {
	return (*routeHeaderMatchMethodPtrType)(v)
}

func (*routeHeaderMatchMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHeaderMatchMethod)(nil)).Elem()
}

func (i *routeHeaderMatchMethodPtrType) ToRouteHeaderMatchMethodPtrOutput() RouteHeaderMatchMethodPtrOutput {
	return i.ToRouteHeaderMatchMethodPtrOutputWithContext(context.Background())
}

func (i *routeHeaderMatchMethodPtrType) ToRouteHeaderMatchMethodPtrOutputWithContext(ctx context.Context) RouteHeaderMatchMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHeaderMatchMethodPtrOutput)
}

type RouteHeaderMatchMethodOutput struct{ *pulumi.OutputState }

func (RouteHeaderMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHeaderMatchMethod)(nil)).Elem()
}

func (o RouteHeaderMatchMethodOutput) ToRouteHeaderMatchMethodOutput() RouteHeaderMatchMethodOutput {
	return o
}

func (o RouteHeaderMatchMethodOutput) ToRouteHeaderMatchMethodOutputWithContext(ctx context.Context) RouteHeaderMatchMethodOutput {
	return o
}

func (o RouteHeaderMatchMethodOutput) ToRouteHeaderMatchMethodPtrOutput() RouteHeaderMatchMethodPtrOutput {
	return o.ToRouteHeaderMatchMethodPtrOutputWithContext(context.Background())
}

func (o RouteHeaderMatchMethodOutput) ToRouteHeaderMatchMethodPtrOutputWithContext(ctx context.Context) RouteHeaderMatchMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHeaderMatchMethod) *RouteHeaderMatchMethod {
		return &v
	}).(RouteHeaderMatchMethodPtrOutput)
}

func (o RouteHeaderMatchMethodOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHeaderMatchMethod) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o RouteHeaderMatchMethodOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHeaderMatchMethod) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouteHeaderMatchMethodOutput) Range() RouteMatchRangePtrOutput {
	return o.ApplyT(func(v RouteHeaderMatchMethod) *RouteMatchRange { return v.Range }).(RouteMatchRangePtrOutput)
}

func (o RouteHeaderMatchMethodOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHeaderMatchMethod) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

func (o RouteHeaderMatchMethodOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHeaderMatchMethod) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type RouteHeaderMatchMethodPtrOutput struct{ *pulumi.OutputState }

func (RouteHeaderMatchMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHeaderMatchMethod)(nil)).Elem()
}

func (o RouteHeaderMatchMethodPtrOutput) ToRouteHeaderMatchMethodPtrOutput() RouteHeaderMatchMethodPtrOutput {
	return o
}

func (o RouteHeaderMatchMethodPtrOutput) ToRouteHeaderMatchMethodPtrOutputWithContext(ctx context.Context) RouteHeaderMatchMethodPtrOutput {
	return o
}

func (o RouteHeaderMatchMethodPtrOutput) Elem() RouteHeaderMatchMethodOutput {
	return o.ApplyT(func(v *RouteHeaderMatchMethod) RouteHeaderMatchMethod {
		if v != nil {
			return *v
		}
		var ret RouteHeaderMatchMethod
		return ret
	}).(RouteHeaderMatchMethodOutput)
}

func (o RouteHeaderMatchMethodPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHeaderMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o RouteHeaderMatchMethodPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHeaderMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o RouteHeaderMatchMethodPtrOutput) Range() RouteMatchRangePtrOutput {
	return o.ApplyT(func(v *RouteHeaderMatchMethod) *RouteMatchRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(RouteMatchRangePtrOutput)
}

func (o RouteHeaderMatchMethodPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHeaderMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

func (o RouteHeaderMatchMethodPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHeaderMatchMethod) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RouteHttpPathMatch struct {
	Exact *string `pulumi:"exact"`
	Regex *string `pulumi:"regex"`
}

// RouteHttpPathMatchInput is an input type that accepts RouteHttpPathMatchArgs and RouteHttpPathMatchOutput values.
// You can construct a concrete instance of `RouteHttpPathMatchInput` via:
//
//          RouteHttpPathMatchArgs{...}
type RouteHttpPathMatchInput interface {
	pulumi.Input

	ToRouteHttpPathMatchOutput() RouteHttpPathMatchOutput
	ToRouteHttpPathMatchOutputWithContext(context.Context) RouteHttpPathMatchOutput
}

type RouteHttpPathMatchArgs struct {
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (RouteHttpPathMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpPathMatch)(nil)).Elem()
}

func (i RouteHttpPathMatchArgs) ToRouteHttpPathMatchOutput() RouteHttpPathMatchOutput {
	return i.ToRouteHttpPathMatchOutputWithContext(context.Background())
}

func (i RouteHttpPathMatchArgs) ToRouteHttpPathMatchOutputWithContext(ctx context.Context) RouteHttpPathMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpPathMatchOutput)
}

func (i RouteHttpPathMatchArgs) ToRouteHttpPathMatchPtrOutput() RouteHttpPathMatchPtrOutput {
	return i.ToRouteHttpPathMatchPtrOutputWithContext(context.Background())
}

func (i RouteHttpPathMatchArgs) ToRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) RouteHttpPathMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpPathMatchOutput).ToRouteHttpPathMatchPtrOutputWithContext(ctx)
}

// RouteHttpPathMatchPtrInput is an input type that accepts RouteHttpPathMatchArgs, RouteHttpPathMatchPtr and RouteHttpPathMatchPtrOutput values.
// You can construct a concrete instance of `RouteHttpPathMatchPtrInput` via:
//
//          RouteHttpPathMatchArgs{...}
//
//  or:
//
//          nil
type RouteHttpPathMatchPtrInput interface {
	pulumi.Input

	ToRouteHttpPathMatchPtrOutput() RouteHttpPathMatchPtrOutput
	ToRouteHttpPathMatchPtrOutputWithContext(context.Context) RouteHttpPathMatchPtrOutput
}

type routeHttpPathMatchPtrType RouteHttpPathMatchArgs

func RouteHttpPathMatchPtr(v *RouteHttpPathMatchArgs) RouteHttpPathMatchPtrInput {
	return (*routeHttpPathMatchPtrType)(v)
}

func (*routeHttpPathMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpPathMatch)(nil)).Elem()
}

func (i *routeHttpPathMatchPtrType) ToRouteHttpPathMatchPtrOutput() RouteHttpPathMatchPtrOutput {
	return i.ToRouteHttpPathMatchPtrOutputWithContext(context.Background())
}

func (i *routeHttpPathMatchPtrType) ToRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) RouteHttpPathMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpPathMatchPtrOutput)
}

type RouteHttpPathMatchOutput struct{ *pulumi.OutputState }

func (RouteHttpPathMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpPathMatch)(nil)).Elem()
}

func (o RouteHttpPathMatchOutput) ToRouteHttpPathMatchOutput() RouteHttpPathMatchOutput {
	return o
}

func (o RouteHttpPathMatchOutput) ToRouteHttpPathMatchOutputWithContext(ctx context.Context) RouteHttpPathMatchOutput {
	return o
}

func (o RouteHttpPathMatchOutput) ToRouteHttpPathMatchPtrOutput() RouteHttpPathMatchPtrOutput {
	return o.ToRouteHttpPathMatchPtrOutputWithContext(context.Background())
}

func (o RouteHttpPathMatchOutput) ToRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) RouteHttpPathMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpPathMatch) *RouteHttpPathMatch {
		return &v
	}).(RouteHttpPathMatchPtrOutput)
}

func (o RouteHttpPathMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHttpPathMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o RouteHttpPathMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHttpPathMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type RouteHttpPathMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteHttpPathMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpPathMatch)(nil)).Elem()
}

func (o RouteHttpPathMatchPtrOutput) ToRouteHttpPathMatchPtrOutput() RouteHttpPathMatchPtrOutput {
	return o
}

func (o RouteHttpPathMatchPtrOutput) ToRouteHttpPathMatchPtrOutputWithContext(ctx context.Context) RouteHttpPathMatchPtrOutput {
	return o
}

func (o RouteHttpPathMatchPtrOutput) Elem() RouteHttpPathMatchOutput {
	return o.ApplyT(func(v *RouteHttpPathMatch) RouteHttpPathMatch {
		if v != nil {
			return *v
		}
		var ret RouteHttpPathMatch
		return ret
	}).(RouteHttpPathMatchOutput)
}

func (o RouteHttpPathMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHttpPathMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o RouteHttpPathMatchPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHttpPathMatch) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type RouteHttpQueryParameterMatch struct {
	Exact *string `pulumi:"exact"`
}

// RouteHttpQueryParameterMatchInput is an input type that accepts RouteHttpQueryParameterMatchArgs and RouteHttpQueryParameterMatchOutput values.
// You can construct a concrete instance of `RouteHttpQueryParameterMatchInput` via:
//
//          RouteHttpQueryParameterMatchArgs{...}
type RouteHttpQueryParameterMatchInput interface {
	pulumi.Input

	ToRouteHttpQueryParameterMatchOutput() RouteHttpQueryParameterMatchOutput
	ToRouteHttpQueryParameterMatchOutputWithContext(context.Context) RouteHttpQueryParameterMatchOutput
}

type RouteHttpQueryParameterMatchArgs struct {
	Exact pulumi.StringPtrInput `pulumi:"exact"`
}

func (RouteHttpQueryParameterMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpQueryParameterMatch)(nil)).Elem()
}

func (i RouteHttpQueryParameterMatchArgs) ToRouteHttpQueryParameterMatchOutput() RouteHttpQueryParameterMatchOutput {
	return i.ToRouteHttpQueryParameterMatchOutputWithContext(context.Background())
}

func (i RouteHttpQueryParameterMatchArgs) ToRouteHttpQueryParameterMatchOutputWithContext(ctx context.Context) RouteHttpQueryParameterMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpQueryParameterMatchOutput)
}

func (i RouteHttpQueryParameterMatchArgs) ToRouteHttpQueryParameterMatchPtrOutput() RouteHttpQueryParameterMatchPtrOutput {
	return i.ToRouteHttpQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i RouteHttpQueryParameterMatchArgs) ToRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteHttpQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpQueryParameterMatchOutput).ToRouteHttpQueryParameterMatchPtrOutputWithContext(ctx)
}

// RouteHttpQueryParameterMatchPtrInput is an input type that accepts RouteHttpQueryParameterMatchArgs, RouteHttpQueryParameterMatchPtr and RouteHttpQueryParameterMatchPtrOutput values.
// You can construct a concrete instance of `RouteHttpQueryParameterMatchPtrInput` via:
//
//          RouteHttpQueryParameterMatchArgs{...}
//
//  or:
//
//          nil
type RouteHttpQueryParameterMatchPtrInput interface {
	pulumi.Input

	ToRouteHttpQueryParameterMatchPtrOutput() RouteHttpQueryParameterMatchPtrOutput
	ToRouteHttpQueryParameterMatchPtrOutputWithContext(context.Context) RouteHttpQueryParameterMatchPtrOutput
}

type routeHttpQueryParameterMatchPtrType RouteHttpQueryParameterMatchArgs

func RouteHttpQueryParameterMatchPtr(v *RouteHttpQueryParameterMatchArgs) RouteHttpQueryParameterMatchPtrInput {
	return (*routeHttpQueryParameterMatchPtrType)(v)
}

func (*routeHttpQueryParameterMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpQueryParameterMatch)(nil)).Elem()
}

func (i *routeHttpQueryParameterMatchPtrType) ToRouteHttpQueryParameterMatchPtrOutput() RouteHttpQueryParameterMatchPtrOutput {
	return i.ToRouteHttpQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (i *routeHttpQueryParameterMatchPtrType) ToRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteHttpQueryParameterMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpQueryParameterMatchPtrOutput)
}

type RouteHttpQueryParameterMatchOutput struct{ *pulumi.OutputState }

func (RouteHttpQueryParameterMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpQueryParameterMatch)(nil)).Elem()
}

func (o RouteHttpQueryParameterMatchOutput) ToRouteHttpQueryParameterMatchOutput() RouteHttpQueryParameterMatchOutput {
	return o
}

func (o RouteHttpQueryParameterMatchOutput) ToRouteHttpQueryParameterMatchOutputWithContext(ctx context.Context) RouteHttpQueryParameterMatchOutput {
	return o
}

func (o RouteHttpQueryParameterMatchOutput) ToRouteHttpQueryParameterMatchPtrOutput() RouteHttpQueryParameterMatchPtrOutput {
	return o.ToRouteHttpQueryParameterMatchPtrOutputWithContext(context.Background())
}

func (o RouteHttpQueryParameterMatchOutput) ToRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteHttpQueryParameterMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpQueryParameterMatch) *RouteHttpQueryParameterMatch {
		return &v
	}).(RouteHttpQueryParameterMatchPtrOutput)
}

func (o RouteHttpQueryParameterMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHttpQueryParameterMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

type RouteHttpQueryParameterMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteHttpQueryParameterMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpQueryParameterMatch)(nil)).Elem()
}

func (o RouteHttpQueryParameterMatchPtrOutput) ToRouteHttpQueryParameterMatchPtrOutput() RouteHttpQueryParameterMatchPtrOutput {
	return o
}

func (o RouteHttpQueryParameterMatchPtrOutput) ToRouteHttpQueryParameterMatchPtrOutputWithContext(ctx context.Context) RouteHttpQueryParameterMatchPtrOutput {
	return o
}

func (o RouteHttpQueryParameterMatchPtrOutput) Elem() RouteHttpQueryParameterMatchOutput {
	return o.ApplyT(func(v *RouteHttpQueryParameterMatch) RouteHttpQueryParameterMatch {
		if v != nil {
			return *v
		}
		var ret RouteHttpQueryParameterMatch
		return ret
	}).(RouteHttpQueryParameterMatchOutput)
}

func (o RouteHttpQueryParameterMatchPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHttpQueryParameterMatch) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

type RouteHttpRetryPolicy struct {
	HttpRetryEvents []string      `pulumi:"httpRetryEvents"`
	MaxRetries      int           `pulumi:"maxRetries"`
	PerRetryTimeout RouteDuration `pulumi:"perRetryTimeout"`
	TcpRetryEvents  []string      `pulumi:"tcpRetryEvents"`
}

// RouteHttpRetryPolicyInput is an input type that accepts RouteHttpRetryPolicyArgs and RouteHttpRetryPolicyOutput values.
// You can construct a concrete instance of `RouteHttpRetryPolicyInput` via:
//
//          RouteHttpRetryPolicyArgs{...}
type RouteHttpRetryPolicyInput interface {
	pulumi.Input

	ToRouteHttpRetryPolicyOutput() RouteHttpRetryPolicyOutput
	ToRouteHttpRetryPolicyOutputWithContext(context.Context) RouteHttpRetryPolicyOutput
}

type RouteHttpRetryPolicyArgs struct {
	HttpRetryEvents pulumi.StringArrayInput `pulumi:"httpRetryEvents"`
	MaxRetries      pulumi.IntInput         `pulumi:"maxRetries"`
	PerRetryTimeout RouteDurationInput      `pulumi:"perRetryTimeout"`
	TcpRetryEvents  pulumi.StringArrayInput `pulumi:"tcpRetryEvents"`
}

func (RouteHttpRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRetryPolicy)(nil)).Elem()
}

func (i RouteHttpRetryPolicyArgs) ToRouteHttpRetryPolicyOutput() RouteHttpRetryPolicyOutput {
	return i.ToRouteHttpRetryPolicyOutputWithContext(context.Background())
}

func (i RouteHttpRetryPolicyArgs) ToRouteHttpRetryPolicyOutputWithContext(ctx context.Context) RouteHttpRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRetryPolicyOutput)
}

func (i RouteHttpRetryPolicyArgs) ToRouteHttpRetryPolicyPtrOutput() RouteHttpRetryPolicyPtrOutput {
	return i.ToRouteHttpRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RouteHttpRetryPolicyArgs) ToRouteHttpRetryPolicyPtrOutputWithContext(ctx context.Context) RouteHttpRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRetryPolicyOutput).ToRouteHttpRetryPolicyPtrOutputWithContext(ctx)
}

// RouteHttpRetryPolicyPtrInput is an input type that accepts RouteHttpRetryPolicyArgs, RouteHttpRetryPolicyPtr and RouteHttpRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RouteHttpRetryPolicyPtrInput` via:
//
//          RouteHttpRetryPolicyArgs{...}
//
//  or:
//
//          nil
type RouteHttpRetryPolicyPtrInput interface {
	pulumi.Input

	ToRouteHttpRetryPolicyPtrOutput() RouteHttpRetryPolicyPtrOutput
	ToRouteHttpRetryPolicyPtrOutputWithContext(context.Context) RouteHttpRetryPolicyPtrOutput
}

type routeHttpRetryPolicyPtrType RouteHttpRetryPolicyArgs

func RouteHttpRetryPolicyPtr(v *RouteHttpRetryPolicyArgs) RouteHttpRetryPolicyPtrInput {
	return (*routeHttpRetryPolicyPtrType)(v)
}

func (*routeHttpRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRetryPolicy)(nil)).Elem()
}

func (i *routeHttpRetryPolicyPtrType) ToRouteHttpRetryPolicyPtrOutput() RouteHttpRetryPolicyPtrOutput {
	return i.ToRouteHttpRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *routeHttpRetryPolicyPtrType) ToRouteHttpRetryPolicyPtrOutputWithContext(ctx context.Context) RouteHttpRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRetryPolicyPtrOutput)
}

type RouteHttpRetryPolicyOutput struct{ *pulumi.OutputState }

func (RouteHttpRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRetryPolicy)(nil)).Elem()
}

func (o RouteHttpRetryPolicyOutput) ToRouteHttpRetryPolicyOutput() RouteHttpRetryPolicyOutput {
	return o
}

func (o RouteHttpRetryPolicyOutput) ToRouteHttpRetryPolicyOutputWithContext(ctx context.Context) RouteHttpRetryPolicyOutput {
	return o
}

func (o RouteHttpRetryPolicyOutput) ToRouteHttpRetryPolicyPtrOutput() RouteHttpRetryPolicyPtrOutput {
	return o.ToRouteHttpRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RouteHttpRetryPolicyOutput) ToRouteHttpRetryPolicyPtrOutputWithContext(ctx context.Context) RouteHttpRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpRetryPolicy) *RouteHttpRetryPolicy {
		return &v
	}).(RouteHttpRetryPolicyPtrOutput)
}

func (o RouteHttpRetryPolicyOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteHttpRetryPolicy) []string { return v.HttpRetryEvents }).(pulumi.StringArrayOutput)
}

func (o RouteHttpRetryPolicyOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v RouteHttpRetryPolicy) int { return v.MaxRetries }).(pulumi.IntOutput)
}

func (o RouteHttpRetryPolicyOutput) PerRetryTimeout() RouteDurationOutput {
	return o.ApplyT(func(v RouteHttpRetryPolicy) RouteDuration { return v.PerRetryTimeout }).(RouteDurationOutput)
}

func (o RouteHttpRetryPolicyOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteHttpRetryPolicy) []string { return v.TcpRetryEvents }).(pulumi.StringArrayOutput)
}

type RouteHttpRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RouteHttpRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRetryPolicy)(nil)).Elem()
}

func (o RouteHttpRetryPolicyPtrOutput) ToRouteHttpRetryPolicyPtrOutput() RouteHttpRetryPolicyPtrOutput {
	return o
}

func (o RouteHttpRetryPolicyPtrOutput) ToRouteHttpRetryPolicyPtrOutputWithContext(ctx context.Context) RouteHttpRetryPolicyPtrOutput {
	return o
}

func (o RouteHttpRetryPolicyPtrOutput) Elem() RouteHttpRetryPolicyOutput {
	return o.ApplyT(func(v *RouteHttpRetryPolicy) RouteHttpRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RouteHttpRetryPolicy
		return ret
	}).(RouteHttpRetryPolicyOutput)
}

func (o RouteHttpRetryPolicyPtrOutput) HttpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteHttpRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.HttpRetryEvents
	}).(pulumi.StringArrayOutput)
}

func (o RouteHttpRetryPolicyPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteHttpRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

func (o RouteHttpRetryPolicyPtrOutput) PerRetryTimeout() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteHttpRetryPolicy) *RouteDuration {
		if v == nil {
			return nil
		}
		return &v.PerRetryTimeout
	}).(RouteDurationPtrOutput)
}

func (o RouteHttpRetryPolicyPtrOutput) TcpRetryEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteHttpRetryPolicy) []string {
		if v == nil {
			return nil
		}
		return v.TcpRetryEvents
	}).(pulumi.StringArrayOutput)
}

type RouteHttpRoute struct {
	Action      RouteHttpRouteAction  `pulumi:"action"`
	Match       RouteHttpRouteMatch   `pulumi:"match"`
	RetryPolicy *RouteHttpRetryPolicy `pulumi:"retryPolicy"`
	Timeout     *RouteHttpTimeout     `pulumi:"timeout"`
}

// RouteHttpRouteInput is an input type that accepts RouteHttpRouteArgs and RouteHttpRouteOutput values.
// You can construct a concrete instance of `RouteHttpRouteInput` via:
//
//          RouteHttpRouteArgs{...}
type RouteHttpRouteInput interface {
	pulumi.Input

	ToRouteHttpRouteOutput() RouteHttpRouteOutput
	ToRouteHttpRouteOutputWithContext(context.Context) RouteHttpRouteOutput
}

type RouteHttpRouteArgs struct {
	Action      RouteHttpRouteActionInput    `pulumi:"action"`
	Match       RouteHttpRouteMatchInput     `pulumi:"match"`
	RetryPolicy RouteHttpRetryPolicyPtrInput `pulumi:"retryPolicy"`
	Timeout     RouteHttpTimeoutPtrInput     `pulumi:"timeout"`
}

func (RouteHttpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRoute)(nil)).Elem()
}

func (i RouteHttpRouteArgs) ToRouteHttpRouteOutput() RouteHttpRouteOutput {
	return i.ToRouteHttpRouteOutputWithContext(context.Background())
}

func (i RouteHttpRouteArgs) ToRouteHttpRouteOutputWithContext(ctx context.Context) RouteHttpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteOutput)
}

func (i RouteHttpRouteArgs) ToRouteHttpRoutePtrOutput() RouteHttpRoutePtrOutput {
	return i.ToRouteHttpRoutePtrOutputWithContext(context.Background())
}

func (i RouteHttpRouteArgs) ToRouteHttpRoutePtrOutputWithContext(ctx context.Context) RouteHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteOutput).ToRouteHttpRoutePtrOutputWithContext(ctx)
}

// RouteHttpRoutePtrInput is an input type that accepts RouteHttpRouteArgs, RouteHttpRoutePtr and RouteHttpRoutePtrOutput values.
// You can construct a concrete instance of `RouteHttpRoutePtrInput` via:
//
//          RouteHttpRouteArgs{...}
//
//  or:
//
//          nil
type RouteHttpRoutePtrInput interface {
	pulumi.Input

	ToRouteHttpRoutePtrOutput() RouteHttpRoutePtrOutput
	ToRouteHttpRoutePtrOutputWithContext(context.Context) RouteHttpRoutePtrOutput
}

type routeHttpRoutePtrType RouteHttpRouteArgs

func RouteHttpRoutePtr(v *RouteHttpRouteArgs) RouteHttpRoutePtrInput {
	return (*routeHttpRoutePtrType)(v)
}

func (*routeHttpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRoute)(nil)).Elem()
}

func (i *routeHttpRoutePtrType) ToRouteHttpRoutePtrOutput() RouteHttpRoutePtrOutput {
	return i.ToRouteHttpRoutePtrOutputWithContext(context.Background())
}

func (i *routeHttpRoutePtrType) ToRouteHttpRoutePtrOutputWithContext(ctx context.Context) RouteHttpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRoutePtrOutput)
}

type RouteHttpRouteOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRoute)(nil)).Elem()
}

func (o RouteHttpRouteOutput) ToRouteHttpRouteOutput() RouteHttpRouteOutput {
	return o
}

func (o RouteHttpRouteOutput) ToRouteHttpRouteOutputWithContext(ctx context.Context) RouteHttpRouteOutput {
	return o
}

func (o RouteHttpRouteOutput) ToRouteHttpRoutePtrOutput() RouteHttpRoutePtrOutput {
	return o.ToRouteHttpRoutePtrOutputWithContext(context.Background())
}

func (o RouteHttpRouteOutput) ToRouteHttpRoutePtrOutputWithContext(ctx context.Context) RouteHttpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpRoute) *RouteHttpRoute {
		return &v
	}).(RouteHttpRoutePtrOutput)
}

func (o RouteHttpRouteOutput) Action() RouteHttpRouteActionOutput {
	return o.ApplyT(func(v RouteHttpRoute) RouteHttpRouteAction { return v.Action }).(RouteHttpRouteActionOutput)
}

func (o RouteHttpRouteOutput) Match() RouteHttpRouteMatchOutput {
	return o.ApplyT(func(v RouteHttpRoute) RouteHttpRouteMatch { return v.Match }).(RouteHttpRouteMatchOutput)
}

func (o RouteHttpRouteOutput) RetryPolicy() RouteHttpRetryPolicyPtrOutput {
	return o.ApplyT(func(v RouteHttpRoute) *RouteHttpRetryPolicy { return v.RetryPolicy }).(RouteHttpRetryPolicyPtrOutput)
}

func (o RouteHttpRouteOutput) Timeout() RouteHttpTimeoutPtrOutput {
	return o.ApplyT(func(v RouteHttpRoute) *RouteHttpTimeout { return v.Timeout }).(RouteHttpTimeoutPtrOutput)
}

type RouteHttpRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteHttpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRoute)(nil)).Elem()
}

func (o RouteHttpRoutePtrOutput) ToRouteHttpRoutePtrOutput() RouteHttpRoutePtrOutput {
	return o
}

func (o RouteHttpRoutePtrOutput) ToRouteHttpRoutePtrOutputWithContext(ctx context.Context) RouteHttpRoutePtrOutput {
	return o
}

func (o RouteHttpRoutePtrOutput) Elem() RouteHttpRouteOutput {
	return o.ApplyT(func(v *RouteHttpRoute) RouteHttpRoute {
		if v != nil {
			return *v
		}
		var ret RouteHttpRoute
		return ret
	}).(RouteHttpRouteOutput)
}

func (o RouteHttpRoutePtrOutput) Action() RouteHttpRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteHttpRoute) *RouteHttpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteHttpRouteActionPtrOutput)
}

func (o RouteHttpRoutePtrOutput) Match() RouteHttpRouteMatchPtrOutput {
	return o.ApplyT(func(v *RouteHttpRoute) *RouteHttpRouteMatch {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(RouteHttpRouteMatchPtrOutput)
}

func (o RouteHttpRoutePtrOutput) RetryPolicy() RouteHttpRetryPolicyPtrOutput {
	return o.ApplyT(func(v *RouteHttpRoute) *RouteHttpRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RouteHttpRetryPolicyPtrOutput)
}

func (o RouteHttpRoutePtrOutput) Timeout() RouteHttpTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteHttpRoute) *RouteHttpTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteHttpTimeoutPtrOutput)
}

type RouteHttpRouteAction struct {
	WeightedTargets []RouteWeightedTarget `pulumi:"weightedTargets"`
}

// RouteHttpRouteActionInput is an input type that accepts RouteHttpRouteActionArgs and RouteHttpRouteActionOutput values.
// You can construct a concrete instance of `RouteHttpRouteActionInput` via:
//
//          RouteHttpRouteActionArgs{...}
type RouteHttpRouteActionInput interface {
	pulumi.Input

	ToRouteHttpRouteActionOutput() RouteHttpRouteActionOutput
	ToRouteHttpRouteActionOutputWithContext(context.Context) RouteHttpRouteActionOutput
}

type RouteHttpRouteActionArgs struct {
	WeightedTargets RouteWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteHttpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRouteAction)(nil)).Elem()
}

func (i RouteHttpRouteActionArgs) ToRouteHttpRouteActionOutput() RouteHttpRouteActionOutput {
	return i.ToRouteHttpRouteActionOutputWithContext(context.Background())
}

func (i RouteHttpRouteActionArgs) ToRouteHttpRouteActionOutputWithContext(ctx context.Context) RouteHttpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteActionOutput)
}

func (i RouteHttpRouteActionArgs) ToRouteHttpRouteActionPtrOutput() RouteHttpRouteActionPtrOutput {
	return i.ToRouteHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteHttpRouteActionArgs) ToRouteHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteActionOutput).ToRouteHttpRouteActionPtrOutputWithContext(ctx)
}

// RouteHttpRouteActionPtrInput is an input type that accepts RouteHttpRouteActionArgs, RouteHttpRouteActionPtr and RouteHttpRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteHttpRouteActionPtrInput` via:
//
//          RouteHttpRouteActionArgs{...}
//
//  or:
//
//          nil
type RouteHttpRouteActionPtrInput interface {
	pulumi.Input

	ToRouteHttpRouteActionPtrOutput() RouteHttpRouteActionPtrOutput
	ToRouteHttpRouteActionPtrOutputWithContext(context.Context) RouteHttpRouteActionPtrOutput
}

type routeHttpRouteActionPtrType RouteHttpRouteActionArgs

func RouteHttpRouteActionPtr(v *RouteHttpRouteActionArgs) RouteHttpRouteActionPtrInput {
	return (*routeHttpRouteActionPtrType)(v)
}

func (*routeHttpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRouteAction)(nil)).Elem()
}

func (i *routeHttpRouteActionPtrType) ToRouteHttpRouteActionPtrOutput() RouteHttpRouteActionPtrOutput {
	return i.ToRouteHttpRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeHttpRouteActionPtrType) ToRouteHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteHttpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteActionPtrOutput)
}

type RouteHttpRouteActionOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRouteAction)(nil)).Elem()
}

func (o RouteHttpRouteActionOutput) ToRouteHttpRouteActionOutput() RouteHttpRouteActionOutput {
	return o
}

func (o RouteHttpRouteActionOutput) ToRouteHttpRouteActionOutputWithContext(ctx context.Context) RouteHttpRouteActionOutput {
	return o
}

func (o RouteHttpRouteActionOutput) ToRouteHttpRouteActionPtrOutput() RouteHttpRouteActionPtrOutput {
	return o.ToRouteHttpRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteHttpRouteActionOutput) ToRouteHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteHttpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpRouteAction) *RouteHttpRouteAction {
		return &v
	}).(RouteHttpRouteActionPtrOutput)
}

func (o RouteHttpRouteActionOutput) WeightedTargets() RouteWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteHttpRouteAction) []RouteWeightedTarget { return v.WeightedTargets }).(RouteWeightedTargetArrayOutput)
}

type RouteHttpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRouteAction)(nil)).Elem()
}

func (o RouteHttpRouteActionPtrOutput) ToRouteHttpRouteActionPtrOutput() RouteHttpRouteActionPtrOutput {
	return o
}

func (o RouteHttpRouteActionPtrOutput) ToRouteHttpRouteActionPtrOutputWithContext(ctx context.Context) RouteHttpRouteActionPtrOutput {
	return o
}

func (o RouteHttpRouteActionPtrOutput) Elem() RouteHttpRouteActionOutput {
	return o.ApplyT(func(v *RouteHttpRouteAction) RouteHttpRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteHttpRouteAction
		return ret
	}).(RouteHttpRouteActionOutput)
}

func (o RouteHttpRouteActionPtrOutput) WeightedTargets() RouteWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteHttpRouteAction) []RouteWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteWeightedTargetArrayOutput)
}

type RouteHttpRouteHeader struct {
	Invert *bool                   `pulumi:"invert"`
	Match  *RouteHeaderMatchMethod `pulumi:"match"`
	Name   string                  `pulumi:"name"`
}

// RouteHttpRouteHeaderInput is an input type that accepts RouteHttpRouteHeaderArgs and RouteHttpRouteHeaderOutput values.
// You can construct a concrete instance of `RouteHttpRouteHeaderInput` via:
//
//          RouteHttpRouteHeaderArgs{...}
type RouteHttpRouteHeaderInput interface {
	pulumi.Input

	ToRouteHttpRouteHeaderOutput() RouteHttpRouteHeaderOutput
	ToRouteHttpRouteHeaderOutputWithContext(context.Context) RouteHttpRouteHeaderOutput
}

type RouteHttpRouteHeaderArgs struct {
	Invert pulumi.BoolPtrInput            `pulumi:"invert"`
	Match  RouteHeaderMatchMethodPtrInput `pulumi:"match"`
	Name   pulumi.StringInput             `pulumi:"name"`
}

func (RouteHttpRouteHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRouteHeader)(nil)).Elem()
}

func (i RouteHttpRouteHeaderArgs) ToRouteHttpRouteHeaderOutput() RouteHttpRouteHeaderOutput {
	return i.ToRouteHttpRouteHeaderOutputWithContext(context.Background())
}

func (i RouteHttpRouteHeaderArgs) ToRouteHttpRouteHeaderOutputWithContext(ctx context.Context) RouteHttpRouteHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteHeaderOutput)
}

// RouteHttpRouteHeaderArrayInput is an input type that accepts RouteHttpRouteHeaderArray and RouteHttpRouteHeaderArrayOutput values.
// You can construct a concrete instance of `RouteHttpRouteHeaderArrayInput` via:
//
//          RouteHttpRouteHeaderArray{ RouteHttpRouteHeaderArgs{...} }
type RouteHttpRouteHeaderArrayInput interface {
	pulumi.Input

	ToRouteHttpRouteHeaderArrayOutput() RouteHttpRouteHeaderArrayOutput
	ToRouteHttpRouteHeaderArrayOutputWithContext(context.Context) RouteHttpRouteHeaderArrayOutput
}

type RouteHttpRouteHeaderArray []RouteHttpRouteHeaderInput

func (RouteHttpRouteHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteHttpRouteHeader)(nil)).Elem()
}

func (i RouteHttpRouteHeaderArray) ToRouteHttpRouteHeaderArrayOutput() RouteHttpRouteHeaderArrayOutput {
	return i.ToRouteHttpRouteHeaderArrayOutputWithContext(context.Background())
}

func (i RouteHttpRouteHeaderArray) ToRouteHttpRouteHeaderArrayOutputWithContext(ctx context.Context) RouteHttpRouteHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteHeaderArrayOutput)
}

type RouteHttpRouteHeaderOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRouteHeader)(nil)).Elem()
}

func (o RouteHttpRouteHeaderOutput) ToRouteHttpRouteHeaderOutput() RouteHttpRouteHeaderOutput {
	return o
}

func (o RouteHttpRouteHeaderOutput) ToRouteHttpRouteHeaderOutputWithContext(ctx context.Context) RouteHttpRouteHeaderOutput {
	return o
}

func (o RouteHttpRouteHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteHttpRouteHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

func (o RouteHttpRouteHeaderOutput) Match() RouteHeaderMatchMethodPtrOutput {
	return o.ApplyT(func(v RouteHttpRouteHeader) *RouteHeaderMatchMethod { return v.Match }).(RouteHeaderMatchMethodPtrOutput)
}

func (o RouteHttpRouteHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteHttpRouteHeader) string { return v.Name }).(pulumi.StringOutput)
}

type RouteHttpRouteHeaderArrayOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteHttpRouteHeader)(nil)).Elem()
}

func (o RouteHttpRouteHeaderArrayOutput) ToRouteHttpRouteHeaderArrayOutput() RouteHttpRouteHeaderArrayOutput {
	return o
}

func (o RouteHttpRouteHeaderArrayOutput) ToRouteHttpRouteHeaderArrayOutputWithContext(ctx context.Context) RouteHttpRouteHeaderArrayOutput {
	return o
}

func (o RouteHttpRouteHeaderArrayOutput) Index(i pulumi.IntInput) RouteHttpRouteHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteHttpRouteHeader {
		return vs[0].([]RouteHttpRouteHeader)[vs[1].(int)]
	}).(RouteHttpRouteHeaderOutput)
}

type RouteHttpRouteMatch struct {
	Headers         []RouteHttpRouteHeader `pulumi:"headers"`
	Method          *string                `pulumi:"method"`
	Path            *RouteHttpPathMatch    `pulumi:"path"`
	Prefix          *string                `pulumi:"prefix"`
	QueryParameters []RouteQueryParameter  `pulumi:"queryParameters"`
	Scheme          *string                `pulumi:"scheme"`
}

// RouteHttpRouteMatchInput is an input type that accepts RouteHttpRouteMatchArgs and RouteHttpRouteMatchOutput values.
// You can construct a concrete instance of `RouteHttpRouteMatchInput` via:
//
//          RouteHttpRouteMatchArgs{...}
type RouteHttpRouteMatchInput interface {
	pulumi.Input

	ToRouteHttpRouteMatchOutput() RouteHttpRouteMatchOutput
	ToRouteHttpRouteMatchOutputWithContext(context.Context) RouteHttpRouteMatchOutput
}

type RouteHttpRouteMatchArgs struct {
	Headers         RouteHttpRouteHeaderArrayInput `pulumi:"headers"`
	Method          pulumi.StringPtrInput          `pulumi:"method"`
	Path            RouteHttpPathMatchPtrInput     `pulumi:"path"`
	Prefix          pulumi.StringPtrInput          `pulumi:"prefix"`
	QueryParameters RouteQueryParameterArrayInput  `pulumi:"queryParameters"`
	Scheme          pulumi.StringPtrInput          `pulumi:"scheme"`
}

func (RouteHttpRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRouteMatch)(nil)).Elem()
}

func (i RouteHttpRouteMatchArgs) ToRouteHttpRouteMatchOutput() RouteHttpRouteMatchOutput {
	return i.ToRouteHttpRouteMatchOutputWithContext(context.Background())
}

func (i RouteHttpRouteMatchArgs) ToRouteHttpRouteMatchOutputWithContext(ctx context.Context) RouteHttpRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteMatchOutput)
}

func (i RouteHttpRouteMatchArgs) ToRouteHttpRouteMatchPtrOutput() RouteHttpRouteMatchPtrOutput {
	return i.ToRouteHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i RouteHttpRouteMatchArgs) ToRouteHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteMatchOutput).ToRouteHttpRouteMatchPtrOutputWithContext(ctx)
}

// RouteHttpRouteMatchPtrInput is an input type that accepts RouteHttpRouteMatchArgs, RouteHttpRouteMatchPtr and RouteHttpRouteMatchPtrOutput values.
// You can construct a concrete instance of `RouteHttpRouteMatchPtrInput` via:
//
//          RouteHttpRouteMatchArgs{...}
//
//  or:
//
//          nil
type RouteHttpRouteMatchPtrInput interface {
	pulumi.Input

	ToRouteHttpRouteMatchPtrOutput() RouteHttpRouteMatchPtrOutput
	ToRouteHttpRouteMatchPtrOutputWithContext(context.Context) RouteHttpRouteMatchPtrOutput
}

type routeHttpRouteMatchPtrType RouteHttpRouteMatchArgs

func RouteHttpRouteMatchPtr(v *RouteHttpRouteMatchArgs) RouteHttpRouteMatchPtrInput {
	return (*routeHttpRouteMatchPtrType)(v)
}

func (*routeHttpRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRouteMatch)(nil)).Elem()
}

func (i *routeHttpRouteMatchPtrType) ToRouteHttpRouteMatchPtrOutput() RouteHttpRouteMatchPtrOutput {
	return i.ToRouteHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (i *routeHttpRouteMatchPtrType) ToRouteHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteHttpRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpRouteMatchPtrOutput)
}

type RouteHttpRouteMatchOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpRouteMatch)(nil)).Elem()
}

func (o RouteHttpRouteMatchOutput) ToRouteHttpRouteMatchOutput() RouteHttpRouteMatchOutput {
	return o
}

func (o RouteHttpRouteMatchOutput) ToRouteHttpRouteMatchOutputWithContext(ctx context.Context) RouteHttpRouteMatchOutput {
	return o
}

func (o RouteHttpRouteMatchOutput) ToRouteHttpRouteMatchPtrOutput() RouteHttpRouteMatchPtrOutput {
	return o.ToRouteHttpRouteMatchPtrOutputWithContext(context.Background())
}

func (o RouteHttpRouteMatchOutput) ToRouteHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteHttpRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpRouteMatch) *RouteHttpRouteMatch {
		return &v
	}).(RouteHttpRouteMatchPtrOutput)
}

func (o RouteHttpRouteMatchOutput) Headers() RouteHttpRouteHeaderArrayOutput {
	return o.ApplyT(func(v RouteHttpRouteMatch) []RouteHttpRouteHeader { return v.Headers }).(RouteHttpRouteHeaderArrayOutput)
}

func (o RouteHttpRouteMatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHttpRouteMatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o RouteHttpRouteMatchOutput) Path() RouteHttpPathMatchPtrOutput {
	return o.ApplyT(func(v RouteHttpRouteMatch) *RouteHttpPathMatch { return v.Path }).(RouteHttpPathMatchPtrOutput)
}

func (o RouteHttpRouteMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHttpRouteMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o RouteHttpRouteMatchOutput) QueryParameters() RouteQueryParameterArrayOutput {
	return o.ApplyT(func(v RouteHttpRouteMatch) []RouteQueryParameter { return v.QueryParameters }).(RouteQueryParameterArrayOutput)
}

func (o RouteHttpRouteMatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteHttpRouteMatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type RouteHttpRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (RouteHttpRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpRouteMatch)(nil)).Elem()
}

func (o RouteHttpRouteMatchPtrOutput) ToRouteHttpRouteMatchPtrOutput() RouteHttpRouteMatchPtrOutput {
	return o
}

func (o RouteHttpRouteMatchPtrOutput) ToRouteHttpRouteMatchPtrOutputWithContext(ctx context.Context) RouteHttpRouteMatchPtrOutput {
	return o
}

func (o RouteHttpRouteMatchPtrOutput) Elem() RouteHttpRouteMatchOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) RouteHttpRouteMatch {
		if v != nil {
			return *v
		}
		var ret RouteHttpRouteMatch
		return ret
	}).(RouteHttpRouteMatchOutput)
}

func (o RouteHttpRouteMatchPtrOutput) Headers() RouteHttpRouteHeaderArrayOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) []RouteHttpRouteHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(RouteHttpRouteHeaderArrayOutput)
}

func (o RouteHttpRouteMatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o RouteHttpRouteMatchPtrOutput) Path() RouteHttpPathMatchPtrOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) *RouteHttpPathMatch {
		if v == nil {
			return nil
		}
		return v.Path
	}).(RouteHttpPathMatchPtrOutput)
}

func (o RouteHttpRouteMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o RouteHttpRouteMatchPtrOutput) QueryParameters() RouteQueryParameterArrayOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) []RouteQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(RouteQueryParameterArrayOutput)
}

func (o RouteHttpRouteMatchPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteHttpRouteMatch) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type RouteHttpTimeout struct {
	Idle       *RouteDuration `pulumi:"idle"`
	PerRequest *RouteDuration `pulumi:"perRequest"`
}

// RouteHttpTimeoutInput is an input type that accepts RouteHttpTimeoutArgs and RouteHttpTimeoutOutput values.
// You can construct a concrete instance of `RouteHttpTimeoutInput` via:
//
//          RouteHttpTimeoutArgs{...}
type RouteHttpTimeoutInput interface {
	pulumi.Input

	ToRouteHttpTimeoutOutput() RouteHttpTimeoutOutput
	ToRouteHttpTimeoutOutputWithContext(context.Context) RouteHttpTimeoutOutput
}

type RouteHttpTimeoutArgs struct {
	Idle       RouteDurationPtrInput `pulumi:"idle"`
	PerRequest RouteDurationPtrInput `pulumi:"perRequest"`
}

func (RouteHttpTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpTimeout)(nil)).Elem()
}

func (i RouteHttpTimeoutArgs) ToRouteHttpTimeoutOutput() RouteHttpTimeoutOutput {
	return i.ToRouteHttpTimeoutOutputWithContext(context.Background())
}

func (i RouteHttpTimeoutArgs) ToRouteHttpTimeoutOutputWithContext(ctx context.Context) RouteHttpTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpTimeoutOutput)
}

func (i RouteHttpTimeoutArgs) ToRouteHttpTimeoutPtrOutput() RouteHttpTimeoutPtrOutput {
	return i.ToRouteHttpTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteHttpTimeoutArgs) ToRouteHttpTimeoutPtrOutputWithContext(ctx context.Context) RouteHttpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpTimeoutOutput).ToRouteHttpTimeoutPtrOutputWithContext(ctx)
}

// RouteHttpTimeoutPtrInput is an input type that accepts RouteHttpTimeoutArgs, RouteHttpTimeoutPtr and RouteHttpTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteHttpTimeoutPtrInput` via:
//
//          RouteHttpTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteHttpTimeoutPtrInput interface {
	pulumi.Input

	ToRouteHttpTimeoutPtrOutput() RouteHttpTimeoutPtrOutput
	ToRouteHttpTimeoutPtrOutputWithContext(context.Context) RouteHttpTimeoutPtrOutput
}

type routeHttpTimeoutPtrType RouteHttpTimeoutArgs

func RouteHttpTimeoutPtr(v *RouteHttpTimeoutArgs) RouteHttpTimeoutPtrInput {
	return (*routeHttpTimeoutPtrType)(v)
}

func (*routeHttpTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpTimeout)(nil)).Elem()
}

func (i *routeHttpTimeoutPtrType) ToRouteHttpTimeoutPtrOutput() RouteHttpTimeoutPtrOutput {
	return i.ToRouteHttpTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeHttpTimeoutPtrType) ToRouteHttpTimeoutPtrOutputWithContext(ctx context.Context) RouteHttpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHttpTimeoutPtrOutput)
}

type RouteHttpTimeoutOutput struct{ *pulumi.OutputState }

func (RouteHttpTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHttpTimeout)(nil)).Elem()
}

func (o RouteHttpTimeoutOutput) ToRouteHttpTimeoutOutput() RouteHttpTimeoutOutput {
	return o
}

func (o RouteHttpTimeoutOutput) ToRouteHttpTimeoutOutputWithContext(ctx context.Context) RouteHttpTimeoutOutput {
	return o
}

func (o RouteHttpTimeoutOutput) ToRouteHttpTimeoutPtrOutput() RouteHttpTimeoutPtrOutput {
	return o.ToRouteHttpTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteHttpTimeoutOutput) ToRouteHttpTimeoutPtrOutputWithContext(ctx context.Context) RouteHttpTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteHttpTimeout) *RouteHttpTimeout {
		return &v
	}).(RouteHttpTimeoutPtrOutput)
}

func (o RouteHttpTimeoutOutput) Idle() RouteDurationPtrOutput {
	return o.ApplyT(func(v RouteHttpTimeout) *RouteDuration { return v.Idle }).(RouteDurationPtrOutput)
}

func (o RouteHttpTimeoutOutput) PerRequest() RouteDurationPtrOutput {
	return o.ApplyT(func(v RouteHttpTimeout) *RouteDuration { return v.PerRequest }).(RouteDurationPtrOutput)
}

type RouteHttpTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteHttpTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteHttpTimeout)(nil)).Elem()
}

func (o RouteHttpTimeoutPtrOutput) ToRouteHttpTimeoutPtrOutput() RouteHttpTimeoutPtrOutput {
	return o
}

func (o RouteHttpTimeoutPtrOutput) ToRouteHttpTimeoutPtrOutputWithContext(ctx context.Context) RouteHttpTimeoutPtrOutput {
	return o
}

func (o RouteHttpTimeoutPtrOutput) Elem() RouteHttpTimeoutOutput {
	return o.ApplyT(func(v *RouteHttpTimeout) RouteHttpTimeout {
		if v != nil {
			return *v
		}
		var ret RouteHttpTimeout
		return ret
	}).(RouteHttpTimeoutOutput)
}

func (o RouteHttpTimeoutPtrOutput) Idle() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteHttpTimeout) *RouteDuration {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteDurationPtrOutput)
}

func (o RouteHttpTimeoutPtrOutput) PerRequest() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteHttpTimeout) *RouteDuration {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(RouteDurationPtrOutput)
}

type RouteMatchRange struct {
	End   int `pulumi:"end"`
	Start int `pulumi:"start"`
}

// RouteMatchRangeInput is an input type that accepts RouteMatchRangeArgs and RouteMatchRangeOutput values.
// You can construct a concrete instance of `RouteMatchRangeInput` via:
//
//          RouteMatchRangeArgs{...}
type RouteMatchRangeInput interface {
	pulumi.Input

	ToRouteMatchRangeOutput() RouteMatchRangeOutput
	ToRouteMatchRangeOutputWithContext(context.Context) RouteMatchRangeOutput
}

type RouteMatchRangeArgs struct {
	End   pulumi.IntInput `pulumi:"end"`
	Start pulumi.IntInput `pulumi:"start"`
}

func (RouteMatchRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMatchRange)(nil)).Elem()
}

func (i RouteMatchRangeArgs) ToRouteMatchRangeOutput() RouteMatchRangeOutput {
	return i.ToRouteMatchRangeOutputWithContext(context.Background())
}

func (i RouteMatchRangeArgs) ToRouteMatchRangeOutputWithContext(ctx context.Context) RouteMatchRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMatchRangeOutput)
}

func (i RouteMatchRangeArgs) ToRouteMatchRangePtrOutput() RouteMatchRangePtrOutput {
	return i.ToRouteMatchRangePtrOutputWithContext(context.Background())
}

func (i RouteMatchRangeArgs) ToRouteMatchRangePtrOutputWithContext(ctx context.Context) RouteMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMatchRangeOutput).ToRouteMatchRangePtrOutputWithContext(ctx)
}

// RouteMatchRangePtrInput is an input type that accepts RouteMatchRangeArgs, RouteMatchRangePtr and RouteMatchRangePtrOutput values.
// You can construct a concrete instance of `RouteMatchRangePtrInput` via:
//
//          RouteMatchRangeArgs{...}
//
//  or:
//
//          nil
type RouteMatchRangePtrInput interface {
	pulumi.Input

	ToRouteMatchRangePtrOutput() RouteMatchRangePtrOutput
	ToRouteMatchRangePtrOutputWithContext(context.Context) RouteMatchRangePtrOutput
}

type routeMatchRangePtrType RouteMatchRangeArgs

func RouteMatchRangePtr(v *RouteMatchRangeArgs) RouteMatchRangePtrInput {
	return (*routeMatchRangePtrType)(v)
}

func (*routeMatchRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMatchRange)(nil)).Elem()
}

func (i *routeMatchRangePtrType) ToRouteMatchRangePtrOutput() RouteMatchRangePtrOutput {
	return i.ToRouteMatchRangePtrOutputWithContext(context.Background())
}

func (i *routeMatchRangePtrType) ToRouteMatchRangePtrOutputWithContext(ctx context.Context) RouteMatchRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMatchRangePtrOutput)
}

type RouteMatchRangeOutput struct{ *pulumi.OutputState }

func (RouteMatchRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMatchRange)(nil)).Elem()
}

func (o RouteMatchRangeOutput) ToRouteMatchRangeOutput() RouteMatchRangeOutput {
	return o
}

func (o RouteMatchRangeOutput) ToRouteMatchRangeOutputWithContext(ctx context.Context) RouteMatchRangeOutput {
	return o
}

func (o RouteMatchRangeOutput) ToRouteMatchRangePtrOutput() RouteMatchRangePtrOutput {
	return o.ToRouteMatchRangePtrOutputWithContext(context.Background())
}

func (o RouteMatchRangeOutput) ToRouteMatchRangePtrOutputWithContext(ctx context.Context) RouteMatchRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteMatchRange) *RouteMatchRange {
		return &v
	}).(RouteMatchRangePtrOutput)
}

func (o RouteMatchRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v RouteMatchRange) int { return v.End }).(pulumi.IntOutput)
}

func (o RouteMatchRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v RouteMatchRange) int { return v.Start }).(pulumi.IntOutput)
}

type RouteMatchRangePtrOutput struct{ *pulumi.OutputState }

func (RouteMatchRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMatchRange)(nil)).Elem()
}

func (o RouteMatchRangePtrOutput) ToRouteMatchRangePtrOutput() RouteMatchRangePtrOutput {
	return o
}

func (o RouteMatchRangePtrOutput) ToRouteMatchRangePtrOutputWithContext(ctx context.Context) RouteMatchRangePtrOutput {
	return o
}

func (o RouteMatchRangePtrOutput) Elem() RouteMatchRangeOutput {
	return o.ApplyT(func(v *RouteMatchRange) RouteMatchRange {
		if v != nil {
			return *v
		}
		var ret RouteMatchRange
		return ret
	}).(RouteMatchRangeOutput)
}

func (o RouteMatchRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.IntPtrOutput)
}

func (o RouteMatchRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteMatchRange) *int {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.IntPtrOutput)
}

type RouteQueryParameter struct {
	Match *RouteHttpQueryParameterMatch `pulumi:"match"`
	Name  string                        `pulumi:"name"`
}

// RouteQueryParameterInput is an input type that accepts RouteQueryParameterArgs and RouteQueryParameterOutput values.
// You can construct a concrete instance of `RouteQueryParameterInput` via:
//
//          RouteQueryParameterArgs{...}
type RouteQueryParameterInput interface {
	pulumi.Input

	ToRouteQueryParameterOutput() RouteQueryParameterOutput
	ToRouteQueryParameterOutputWithContext(context.Context) RouteQueryParameterOutput
}

type RouteQueryParameterArgs struct {
	Match RouteHttpQueryParameterMatchPtrInput `pulumi:"match"`
	Name  pulumi.StringInput                   `pulumi:"name"`
}

func (RouteQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteQueryParameter)(nil)).Elem()
}

func (i RouteQueryParameterArgs) ToRouteQueryParameterOutput() RouteQueryParameterOutput {
	return i.ToRouteQueryParameterOutputWithContext(context.Background())
}

func (i RouteQueryParameterArgs) ToRouteQueryParameterOutputWithContext(ctx context.Context) RouteQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteQueryParameterOutput)
}

// RouteQueryParameterArrayInput is an input type that accepts RouteQueryParameterArray and RouteQueryParameterArrayOutput values.
// You can construct a concrete instance of `RouteQueryParameterArrayInput` via:
//
//          RouteQueryParameterArray{ RouteQueryParameterArgs{...} }
type RouteQueryParameterArrayInput interface {
	pulumi.Input

	ToRouteQueryParameterArrayOutput() RouteQueryParameterArrayOutput
	ToRouteQueryParameterArrayOutputWithContext(context.Context) RouteQueryParameterArrayOutput
}

type RouteQueryParameterArray []RouteQueryParameterInput

func (RouteQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteQueryParameter)(nil)).Elem()
}

func (i RouteQueryParameterArray) ToRouteQueryParameterArrayOutput() RouteQueryParameterArrayOutput {
	return i.ToRouteQueryParameterArrayOutputWithContext(context.Background())
}

func (i RouteQueryParameterArray) ToRouteQueryParameterArrayOutputWithContext(ctx context.Context) RouteQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteQueryParameterArrayOutput)
}

type RouteQueryParameterOutput struct{ *pulumi.OutputState }

func (RouteQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteQueryParameter)(nil)).Elem()
}

func (o RouteQueryParameterOutput) ToRouteQueryParameterOutput() RouteQueryParameterOutput {
	return o
}

func (o RouteQueryParameterOutput) ToRouteQueryParameterOutputWithContext(ctx context.Context) RouteQueryParameterOutput {
	return o
}

func (o RouteQueryParameterOutput) Match() RouteHttpQueryParameterMatchPtrOutput {
	return o.ApplyT(func(v RouteQueryParameter) *RouteHttpQueryParameterMatch { return v.Match }).(RouteHttpQueryParameterMatchPtrOutput)
}

func (o RouteQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

type RouteQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (RouteQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteQueryParameter)(nil)).Elem()
}

func (o RouteQueryParameterArrayOutput) ToRouteQueryParameterArrayOutput() RouteQueryParameterArrayOutput {
	return o
}

func (o RouteQueryParameterArrayOutput) ToRouteQueryParameterArrayOutputWithContext(ctx context.Context) RouteQueryParameterArrayOutput {
	return o
}

func (o RouteQueryParameterArrayOutput) Index(i pulumi.IntInput) RouteQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteQueryParameter {
		return vs[0].([]RouteQueryParameter)[vs[1].(int)]
	}).(RouteQueryParameterOutput)
}

type RouteSpec struct {
	GrpcRoute  *RouteGrpcRoute `pulumi:"grpcRoute"`
	Http2Route *RouteHttpRoute `pulumi:"http2Route"`
	HttpRoute  *RouteHttpRoute `pulumi:"httpRoute"`
	Priority   *int            `pulumi:"priority"`
	TcpRoute   *RouteTcpRoute  `pulumi:"tcpRoute"`
}

// RouteSpecInput is an input type that accepts RouteSpecArgs and RouteSpecOutput values.
// You can construct a concrete instance of `RouteSpecInput` via:
//
//          RouteSpecArgs{...}
type RouteSpecInput interface {
	pulumi.Input

	ToRouteSpecOutput() RouteSpecOutput
	ToRouteSpecOutputWithContext(context.Context) RouteSpecOutput
}

type RouteSpecArgs struct {
	GrpcRoute  RouteGrpcRoutePtrInput `pulumi:"grpcRoute"`
	Http2Route RouteHttpRoutePtrInput `pulumi:"http2Route"`
	HttpRoute  RouteHttpRoutePtrInput `pulumi:"httpRoute"`
	Priority   pulumi.IntPtrInput     `pulumi:"priority"`
	TcpRoute   RouteTcpRoutePtrInput  `pulumi:"tcpRoute"`
}

func (RouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpec)(nil)).Elem()
}

func (i RouteSpecArgs) ToRouteSpecOutput() RouteSpecOutput {
	return i.ToRouteSpecOutputWithContext(context.Background())
}

func (i RouteSpecArgs) ToRouteSpecOutputWithContext(ctx context.Context) RouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecOutput)
}

func (i RouteSpecArgs) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return i.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (i RouteSpecArgs) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecOutput).ToRouteSpecPtrOutputWithContext(ctx)
}

// RouteSpecPtrInput is an input type that accepts RouteSpecArgs, RouteSpecPtr and RouteSpecPtrOutput values.
// You can construct a concrete instance of `RouteSpecPtrInput` via:
//
//          RouteSpecArgs{...}
//
//  or:
//
//          nil
type RouteSpecPtrInput interface {
	pulumi.Input

	ToRouteSpecPtrOutput() RouteSpecPtrOutput
	ToRouteSpecPtrOutputWithContext(context.Context) RouteSpecPtrOutput
}

type routeSpecPtrType RouteSpecArgs

func RouteSpecPtr(v *RouteSpecArgs) RouteSpecPtrInput {
	return (*routeSpecPtrType)(v)
}

func (*routeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpec)(nil)).Elem()
}

func (i *routeSpecPtrType) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return i.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (i *routeSpecPtrType) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecPtrOutput)
}

type RouteSpecOutput struct{ *pulumi.OutputState }

func (RouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpec)(nil)).Elem()
}

func (o RouteSpecOutput) ToRouteSpecOutput() RouteSpecOutput {
	return o
}

func (o RouteSpecOutput) ToRouteSpecOutputWithContext(ctx context.Context) RouteSpecOutput {
	return o
}

func (o RouteSpecOutput) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return o.ToRouteSpecPtrOutputWithContext(context.Background())
}

func (o RouteSpecOutput) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteSpec) *RouteSpec {
		return &v
	}).(RouteSpecPtrOutput)
}

func (o RouteSpecOutput) GrpcRoute() RouteGrpcRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteGrpcRoute { return v.GrpcRoute }).(RouteGrpcRoutePtrOutput)
}

func (o RouteSpecOutput) Http2Route() RouteHttpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteHttpRoute { return v.Http2Route }).(RouteHttpRoutePtrOutput)
}

func (o RouteSpecOutput) HttpRoute() RouteHttpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteHttpRoute { return v.HttpRoute }).(RouteHttpRoutePtrOutput)
}

func (o RouteSpecOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSpec) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o RouteSpecOutput) TcpRoute() RouteTcpRoutePtrOutput {
	return o.ApplyT(func(v RouteSpec) *RouteTcpRoute { return v.TcpRoute }).(RouteTcpRoutePtrOutput)
}

type RouteSpecPtrOutput struct{ *pulumi.OutputState }

func (RouteSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteSpec)(nil)).Elem()
}

func (o RouteSpecPtrOutput) ToRouteSpecPtrOutput() RouteSpecPtrOutput {
	return o
}

func (o RouteSpecPtrOutput) ToRouteSpecPtrOutputWithContext(ctx context.Context) RouteSpecPtrOutput {
	return o
}

func (o RouteSpecPtrOutput) Elem() RouteSpecOutput {
	return o.ApplyT(func(v *RouteSpec) RouteSpec {
		if v != nil {
			return *v
		}
		var ret RouteSpec
		return ret
	}).(RouteSpecOutput)
}

func (o RouteSpecPtrOutput) GrpcRoute() RouteGrpcRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteGrpcRoute {
		if v == nil {
			return nil
		}
		return v.GrpcRoute
	}).(RouteGrpcRoutePtrOutput)
}

func (o RouteSpecPtrOutput) Http2Route() RouteHttpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteHttpRoute {
		if v == nil {
			return nil
		}
		return v.Http2Route
	}).(RouteHttpRoutePtrOutput)
}

func (o RouteSpecPtrOutput) HttpRoute() RouteHttpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteHttpRoute {
		if v == nil {
			return nil
		}
		return v.HttpRoute
	}).(RouteHttpRoutePtrOutput)
}

func (o RouteSpecPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteSpec) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func (o RouteSpecPtrOutput) TcpRoute() RouteTcpRoutePtrOutput {
	return o.ApplyT(func(v *RouteSpec) *RouteTcpRoute {
		if v == nil {
			return nil
		}
		return v.TcpRoute
	}).(RouteTcpRoutePtrOutput)
}

type RouteTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// RouteTagInput is an input type that accepts RouteTagArgs and RouteTagOutput values.
// You can construct a concrete instance of `RouteTagInput` via:
//
//          RouteTagArgs{...}
type RouteTagInput interface {
	pulumi.Input

	ToRouteTagOutput() RouteTagOutput
	ToRouteTagOutputWithContext(context.Context) RouteTagOutput
}

type RouteTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTag)(nil)).Elem()
}

func (i RouteTagArgs) ToRouteTagOutput() RouteTagOutput {
	return i.ToRouteTagOutputWithContext(context.Background())
}

func (i RouteTagArgs) ToRouteTagOutputWithContext(ctx context.Context) RouteTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTagOutput)
}

// RouteTagArrayInput is an input type that accepts RouteTagArray and RouteTagArrayOutput values.
// You can construct a concrete instance of `RouteTagArrayInput` via:
//
//          RouteTagArray{ RouteTagArgs{...} }
type RouteTagArrayInput interface {
	pulumi.Input

	ToRouteTagArrayOutput() RouteTagArrayOutput
	ToRouteTagArrayOutputWithContext(context.Context) RouteTagArrayOutput
}

type RouteTagArray []RouteTagInput

func (RouteTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTag)(nil)).Elem()
}

func (i RouteTagArray) ToRouteTagArrayOutput() RouteTagArrayOutput {
	return i.ToRouteTagArrayOutputWithContext(context.Background())
}

func (i RouteTagArray) ToRouteTagArrayOutputWithContext(ctx context.Context) RouteTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTagArrayOutput)
}

type RouteTagOutput struct{ *pulumi.OutputState }

func (RouteTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTag)(nil)).Elem()
}

func (o RouteTagOutput) ToRouteTagOutput() RouteTagOutput {
	return o
}

func (o RouteTagOutput) ToRouteTagOutputWithContext(ctx context.Context) RouteTagOutput {
	return o
}

func (o RouteTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o RouteTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTag)(nil)).Elem()
}

func (o RouteTagArrayOutput) ToRouteTagArrayOutput() RouteTagArrayOutput {
	return o
}

func (o RouteTagArrayOutput) ToRouteTagArrayOutputWithContext(ctx context.Context) RouteTagArrayOutput {
	return o
}

func (o RouteTagArrayOutput) Index(i pulumi.IntInput) RouteTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTag {
		return vs[0].([]RouteTag)[vs[1].(int)]
	}).(RouteTagOutput)
}

type RouteTcpRoute struct {
	Action  RouteTcpRouteAction `pulumi:"action"`
	Timeout *RouteTcpTimeout    `pulumi:"timeout"`
}

// RouteTcpRouteInput is an input type that accepts RouteTcpRouteArgs and RouteTcpRouteOutput values.
// You can construct a concrete instance of `RouteTcpRouteInput` via:
//
//          RouteTcpRouteArgs{...}
type RouteTcpRouteInput interface {
	pulumi.Input

	ToRouteTcpRouteOutput() RouteTcpRouteOutput
	ToRouteTcpRouteOutputWithContext(context.Context) RouteTcpRouteOutput
}

type RouteTcpRouteArgs struct {
	Action  RouteTcpRouteActionInput `pulumi:"action"`
	Timeout RouteTcpTimeoutPtrInput  `pulumi:"timeout"`
}

func (RouteTcpRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTcpRoute)(nil)).Elem()
}

func (i RouteTcpRouteArgs) ToRouteTcpRouteOutput() RouteTcpRouteOutput {
	return i.ToRouteTcpRouteOutputWithContext(context.Background())
}

func (i RouteTcpRouteArgs) ToRouteTcpRouteOutputWithContext(ctx context.Context) RouteTcpRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpRouteOutput)
}

func (i RouteTcpRouteArgs) ToRouteTcpRoutePtrOutput() RouteTcpRoutePtrOutput {
	return i.ToRouteTcpRoutePtrOutputWithContext(context.Background())
}

func (i RouteTcpRouteArgs) ToRouteTcpRoutePtrOutputWithContext(ctx context.Context) RouteTcpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpRouteOutput).ToRouteTcpRoutePtrOutputWithContext(ctx)
}

// RouteTcpRoutePtrInput is an input type that accepts RouteTcpRouteArgs, RouteTcpRoutePtr and RouteTcpRoutePtrOutput values.
// You can construct a concrete instance of `RouteTcpRoutePtrInput` via:
//
//          RouteTcpRouteArgs{...}
//
//  or:
//
//          nil
type RouteTcpRoutePtrInput interface {
	pulumi.Input

	ToRouteTcpRoutePtrOutput() RouteTcpRoutePtrOutput
	ToRouteTcpRoutePtrOutputWithContext(context.Context) RouteTcpRoutePtrOutput
}

type routeTcpRoutePtrType RouteTcpRouteArgs

func RouteTcpRoutePtr(v *RouteTcpRouteArgs) RouteTcpRoutePtrInput {
	return (*routeTcpRoutePtrType)(v)
}

func (*routeTcpRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTcpRoute)(nil)).Elem()
}

func (i *routeTcpRoutePtrType) ToRouteTcpRoutePtrOutput() RouteTcpRoutePtrOutput {
	return i.ToRouteTcpRoutePtrOutputWithContext(context.Background())
}

func (i *routeTcpRoutePtrType) ToRouteTcpRoutePtrOutputWithContext(ctx context.Context) RouteTcpRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpRoutePtrOutput)
}

type RouteTcpRouteOutput struct{ *pulumi.OutputState }

func (RouteTcpRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTcpRoute)(nil)).Elem()
}

func (o RouteTcpRouteOutput) ToRouteTcpRouteOutput() RouteTcpRouteOutput {
	return o
}

func (o RouteTcpRouteOutput) ToRouteTcpRouteOutputWithContext(ctx context.Context) RouteTcpRouteOutput {
	return o
}

func (o RouteTcpRouteOutput) ToRouteTcpRoutePtrOutput() RouteTcpRoutePtrOutput {
	return o.ToRouteTcpRoutePtrOutputWithContext(context.Background())
}

func (o RouteTcpRouteOutput) ToRouteTcpRoutePtrOutputWithContext(ctx context.Context) RouteTcpRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTcpRoute) *RouteTcpRoute {
		return &v
	}).(RouteTcpRoutePtrOutput)
}

func (o RouteTcpRouteOutput) Action() RouteTcpRouteActionOutput {
	return o.ApplyT(func(v RouteTcpRoute) RouteTcpRouteAction { return v.Action }).(RouteTcpRouteActionOutput)
}

func (o RouteTcpRouteOutput) Timeout() RouteTcpTimeoutPtrOutput {
	return o.ApplyT(func(v RouteTcpRoute) *RouteTcpTimeout { return v.Timeout }).(RouteTcpTimeoutPtrOutput)
}

type RouteTcpRoutePtrOutput struct{ *pulumi.OutputState }

func (RouteTcpRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTcpRoute)(nil)).Elem()
}

func (o RouteTcpRoutePtrOutput) ToRouteTcpRoutePtrOutput() RouteTcpRoutePtrOutput {
	return o
}

func (o RouteTcpRoutePtrOutput) ToRouteTcpRoutePtrOutputWithContext(ctx context.Context) RouteTcpRoutePtrOutput {
	return o
}

func (o RouteTcpRoutePtrOutput) Elem() RouteTcpRouteOutput {
	return o.ApplyT(func(v *RouteTcpRoute) RouteTcpRoute {
		if v != nil {
			return *v
		}
		var ret RouteTcpRoute
		return ret
	}).(RouteTcpRouteOutput)
}

func (o RouteTcpRoutePtrOutput) Action() RouteTcpRouteActionPtrOutput {
	return o.ApplyT(func(v *RouteTcpRoute) *RouteTcpRouteAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(RouteTcpRouteActionPtrOutput)
}

func (o RouteTcpRoutePtrOutput) Timeout() RouteTcpTimeoutPtrOutput {
	return o.ApplyT(func(v *RouteTcpRoute) *RouteTcpTimeout {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(RouteTcpTimeoutPtrOutput)
}

type RouteTcpRouteAction struct {
	WeightedTargets []RouteWeightedTarget `pulumi:"weightedTargets"`
}

// RouteTcpRouteActionInput is an input type that accepts RouteTcpRouteActionArgs and RouteTcpRouteActionOutput values.
// You can construct a concrete instance of `RouteTcpRouteActionInput` via:
//
//          RouteTcpRouteActionArgs{...}
type RouteTcpRouteActionInput interface {
	pulumi.Input

	ToRouteTcpRouteActionOutput() RouteTcpRouteActionOutput
	ToRouteTcpRouteActionOutputWithContext(context.Context) RouteTcpRouteActionOutput
}

type RouteTcpRouteActionArgs struct {
	WeightedTargets RouteWeightedTargetArrayInput `pulumi:"weightedTargets"`
}

func (RouteTcpRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTcpRouteAction)(nil)).Elem()
}

func (i RouteTcpRouteActionArgs) ToRouteTcpRouteActionOutput() RouteTcpRouteActionOutput {
	return i.ToRouteTcpRouteActionOutputWithContext(context.Background())
}

func (i RouteTcpRouteActionArgs) ToRouteTcpRouteActionOutputWithContext(ctx context.Context) RouteTcpRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpRouteActionOutput)
}

func (i RouteTcpRouteActionArgs) ToRouteTcpRouteActionPtrOutput() RouteTcpRouteActionPtrOutput {
	return i.ToRouteTcpRouteActionPtrOutputWithContext(context.Background())
}

func (i RouteTcpRouteActionArgs) ToRouteTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteTcpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpRouteActionOutput).ToRouteTcpRouteActionPtrOutputWithContext(ctx)
}

// RouteTcpRouteActionPtrInput is an input type that accepts RouteTcpRouteActionArgs, RouteTcpRouteActionPtr and RouteTcpRouteActionPtrOutput values.
// You can construct a concrete instance of `RouteTcpRouteActionPtrInput` via:
//
//          RouteTcpRouteActionArgs{...}
//
//  or:
//
//          nil
type RouteTcpRouteActionPtrInput interface {
	pulumi.Input

	ToRouteTcpRouteActionPtrOutput() RouteTcpRouteActionPtrOutput
	ToRouteTcpRouteActionPtrOutputWithContext(context.Context) RouteTcpRouteActionPtrOutput
}

type routeTcpRouteActionPtrType RouteTcpRouteActionArgs

func RouteTcpRouteActionPtr(v *RouteTcpRouteActionArgs) RouteTcpRouteActionPtrInput {
	return (*routeTcpRouteActionPtrType)(v)
}

func (*routeTcpRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTcpRouteAction)(nil)).Elem()
}

func (i *routeTcpRouteActionPtrType) ToRouteTcpRouteActionPtrOutput() RouteTcpRouteActionPtrOutput {
	return i.ToRouteTcpRouteActionPtrOutputWithContext(context.Background())
}

func (i *routeTcpRouteActionPtrType) ToRouteTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteTcpRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpRouteActionPtrOutput)
}

type RouteTcpRouteActionOutput struct{ *pulumi.OutputState }

func (RouteTcpRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTcpRouteAction)(nil)).Elem()
}

func (o RouteTcpRouteActionOutput) ToRouteTcpRouteActionOutput() RouteTcpRouteActionOutput {
	return o
}

func (o RouteTcpRouteActionOutput) ToRouteTcpRouteActionOutputWithContext(ctx context.Context) RouteTcpRouteActionOutput {
	return o
}

func (o RouteTcpRouteActionOutput) ToRouteTcpRouteActionPtrOutput() RouteTcpRouteActionPtrOutput {
	return o.ToRouteTcpRouteActionPtrOutputWithContext(context.Background())
}

func (o RouteTcpRouteActionOutput) ToRouteTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteTcpRouteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTcpRouteAction) *RouteTcpRouteAction {
		return &v
	}).(RouteTcpRouteActionPtrOutput)
}

func (o RouteTcpRouteActionOutput) WeightedTargets() RouteWeightedTargetArrayOutput {
	return o.ApplyT(func(v RouteTcpRouteAction) []RouteWeightedTarget { return v.WeightedTargets }).(RouteWeightedTargetArrayOutput)
}

type RouteTcpRouteActionPtrOutput struct{ *pulumi.OutputState }

func (RouteTcpRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTcpRouteAction)(nil)).Elem()
}

func (o RouteTcpRouteActionPtrOutput) ToRouteTcpRouteActionPtrOutput() RouteTcpRouteActionPtrOutput {
	return o
}

func (o RouteTcpRouteActionPtrOutput) ToRouteTcpRouteActionPtrOutputWithContext(ctx context.Context) RouteTcpRouteActionPtrOutput {
	return o
}

func (o RouteTcpRouteActionPtrOutput) Elem() RouteTcpRouteActionOutput {
	return o.ApplyT(func(v *RouteTcpRouteAction) RouteTcpRouteAction {
		if v != nil {
			return *v
		}
		var ret RouteTcpRouteAction
		return ret
	}).(RouteTcpRouteActionOutput)
}

func (o RouteTcpRouteActionPtrOutput) WeightedTargets() RouteWeightedTargetArrayOutput {
	return o.ApplyT(func(v *RouteTcpRouteAction) []RouteWeightedTarget {
		if v == nil {
			return nil
		}
		return v.WeightedTargets
	}).(RouteWeightedTargetArrayOutput)
}

type RouteTcpTimeout struct {
	Idle *RouteDuration `pulumi:"idle"`
}

// RouteTcpTimeoutInput is an input type that accepts RouteTcpTimeoutArgs and RouteTcpTimeoutOutput values.
// You can construct a concrete instance of `RouteTcpTimeoutInput` via:
//
//          RouteTcpTimeoutArgs{...}
type RouteTcpTimeoutInput interface {
	pulumi.Input

	ToRouteTcpTimeoutOutput() RouteTcpTimeoutOutput
	ToRouteTcpTimeoutOutputWithContext(context.Context) RouteTcpTimeoutOutput
}

type RouteTcpTimeoutArgs struct {
	Idle RouteDurationPtrInput `pulumi:"idle"`
}

func (RouteTcpTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTcpTimeout)(nil)).Elem()
}

func (i RouteTcpTimeoutArgs) ToRouteTcpTimeoutOutput() RouteTcpTimeoutOutput {
	return i.ToRouteTcpTimeoutOutputWithContext(context.Background())
}

func (i RouteTcpTimeoutArgs) ToRouteTcpTimeoutOutputWithContext(ctx context.Context) RouteTcpTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpTimeoutOutput)
}

func (i RouteTcpTimeoutArgs) ToRouteTcpTimeoutPtrOutput() RouteTcpTimeoutPtrOutput {
	return i.ToRouteTcpTimeoutPtrOutputWithContext(context.Background())
}

func (i RouteTcpTimeoutArgs) ToRouteTcpTimeoutPtrOutputWithContext(ctx context.Context) RouteTcpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpTimeoutOutput).ToRouteTcpTimeoutPtrOutputWithContext(ctx)
}

// RouteTcpTimeoutPtrInput is an input type that accepts RouteTcpTimeoutArgs, RouteTcpTimeoutPtr and RouteTcpTimeoutPtrOutput values.
// You can construct a concrete instance of `RouteTcpTimeoutPtrInput` via:
//
//          RouteTcpTimeoutArgs{...}
//
//  or:
//
//          nil
type RouteTcpTimeoutPtrInput interface {
	pulumi.Input

	ToRouteTcpTimeoutPtrOutput() RouteTcpTimeoutPtrOutput
	ToRouteTcpTimeoutPtrOutputWithContext(context.Context) RouteTcpTimeoutPtrOutput
}

type routeTcpTimeoutPtrType RouteTcpTimeoutArgs

func RouteTcpTimeoutPtr(v *RouteTcpTimeoutArgs) RouteTcpTimeoutPtrInput {
	return (*routeTcpTimeoutPtrType)(v)
}

func (*routeTcpTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTcpTimeout)(nil)).Elem()
}

func (i *routeTcpTimeoutPtrType) ToRouteTcpTimeoutPtrOutput() RouteTcpTimeoutPtrOutput {
	return i.ToRouteTcpTimeoutPtrOutputWithContext(context.Background())
}

func (i *routeTcpTimeoutPtrType) ToRouteTcpTimeoutPtrOutputWithContext(ctx context.Context) RouteTcpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTcpTimeoutPtrOutput)
}

type RouteTcpTimeoutOutput struct{ *pulumi.OutputState }

func (RouteTcpTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTcpTimeout)(nil)).Elem()
}

func (o RouteTcpTimeoutOutput) ToRouteTcpTimeoutOutput() RouteTcpTimeoutOutput {
	return o
}

func (o RouteTcpTimeoutOutput) ToRouteTcpTimeoutOutputWithContext(ctx context.Context) RouteTcpTimeoutOutput {
	return o
}

func (o RouteTcpTimeoutOutput) ToRouteTcpTimeoutPtrOutput() RouteTcpTimeoutPtrOutput {
	return o.ToRouteTcpTimeoutPtrOutputWithContext(context.Background())
}

func (o RouteTcpTimeoutOutput) ToRouteTcpTimeoutPtrOutputWithContext(ctx context.Context) RouteTcpTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTcpTimeout) *RouteTcpTimeout {
		return &v
	}).(RouteTcpTimeoutPtrOutput)
}

func (o RouteTcpTimeoutOutput) Idle() RouteDurationPtrOutput {
	return o.ApplyT(func(v RouteTcpTimeout) *RouteDuration { return v.Idle }).(RouteDurationPtrOutput)
}

type RouteTcpTimeoutPtrOutput struct{ *pulumi.OutputState }

func (RouteTcpTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTcpTimeout)(nil)).Elem()
}

func (o RouteTcpTimeoutPtrOutput) ToRouteTcpTimeoutPtrOutput() RouteTcpTimeoutPtrOutput {
	return o
}

func (o RouteTcpTimeoutPtrOutput) ToRouteTcpTimeoutPtrOutputWithContext(ctx context.Context) RouteTcpTimeoutPtrOutput {
	return o
}

func (o RouteTcpTimeoutPtrOutput) Elem() RouteTcpTimeoutOutput {
	return o.ApplyT(func(v *RouteTcpTimeout) RouteTcpTimeout {
		if v != nil {
			return *v
		}
		var ret RouteTcpTimeout
		return ret
	}).(RouteTcpTimeoutOutput)
}

func (o RouteTcpTimeoutPtrOutput) Idle() RouteDurationPtrOutput {
	return o.ApplyT(func(v *RouteTcpTimeout) *RouteDuration {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(RouteDurationPtrOutput)
}

type RouteWeightedTarget struct {
	VirtualNode string `pulumi:"virtualNode"`
	Weight      int    `pulumi:"weight"`
}

// RouteWeightedTargetInput is an input type that accepts RouteWeightedTargetArgs and RouteWeightedTargetOutput values.
// You can construct a concrete instance of `RouteWeightedTargetInput` via:
//
//          RouteWeightedTargetArgs{...}
type RouteWeightedTargetInput interface {
	pulumi.Input

	ToRouteWeightedTargetOutput() RouteWeightedTargetOutput
	ToRouteWeightedTargetOutputWithContext(context.Context) RouteWeightedTargetOutput
}

type RouteWeightedTargetArgs struct {
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	Weight      pulumi.IntInput    `pulumi:"weight"`
}

func (RouteWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteWeightedTarget)(nil)).Elem()
}

func (i RouteWeightedTargetArgs) ToRouteWeightedTargetOutput() RouteWeightedTargetOutput {
	return i.ToRouteWeightedTargetOutputWithContext(context.Background())
}

func (i RouteWeightedTargetArgs) ToRouteWeightedTargetOutputWithContext(ctx context.Context) RouteWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteWeightedTargetOutput)
}

// RouteWeightedTargetArrayInput is an input type that accepts RouteWeightedTargetArray and RouteWeightedTargetArrayOutput values.
// You can construct a concrete instance of `RouteWeightedTargetArrayInput` via:
//
//          RouteWeightedTargetArray{ RouteWeightedTargetArgs{...} }
type RouteWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteWeightedTargetArrayOutput() RouteWeightedTargetArrayOutput
	ToRouteWeightedTargetArrayOutputWithContext(context.Context) RouteWeightedTargetArrayOutput
}

type RouteWeightedTargetArray []RouteWeightedTargetInput

func (RouteWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteWeightedTarget)(nil)).Elem()
}

func (i RouteWeightedTargetArray) ToRouteWeightedTargetArrayOutput() RouteWeightedTargetArrayOutput {
	return i.ToRouteWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteWeightedTargetArray) ToRouteWeightedTargetArrayOutputWithContext(ctx context.Context) RouteWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteWeightedTargetArrayOutput)
}

type RouteWeightedTargetOutput struct{ *pulumi.OutputState }

func (RouteWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteWeightedTarget)(nil)).Elem()
}

func (o RouteWeightedTargetOutput) ToRouteWeightedTargetOutput() RouteWeightedTargetOutput {
	return o
}

func (o RouteWeightedTargetOutput) ToRouteWeightedTargetOutputWithContext(ctx context.Context) RouteWeightedTargetOutput {
	return o
}

func (o RouteWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func(v RouteWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

func (o RouteWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v RouteWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteWeightedTargetArrayOutput struct{ *pulumi.OutputState }

func (RouteWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteWeightedTarget)(nil)).Elem()
}

func (o RouteWeightedTargetArrayOutput) ToRouteWeightedTargetArrayOutput() RouteWeightedTargetArrayOutput {
	return o
}

func (o RouteWeightedTargetArrayOutput) ToRouteWeightedTargetArrayOutputWithContext(ctx context.Context) RouteWeightedTargetArrayOutput {
	return o
}

func (o RouteWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteWeightedTarget {
		return vs[0].([]RouteWeightedTarget)[vs[1].(int)]
	}).(RouteWeightedTargetOutput)
}

type VirtualGatewayAccessLog struct {
	File *VirtualGatewayFileAccessLog `pulumi:"file"`
}

// VirtualGatewayAccessLogInput is an input type that accepts VirtualGatewayAccessLogArgs and VirtualGatewayAccessLogOutput values.
// You can construct a concrete instance of `VirtualGatewayAccessLogInput` via:
//
//          VirtualGatewayAccessLogArgs{...}
type VirtualGatewayAccessLogInput interface {
	pulumi.Input

	ToVirtualGatewayAccessLogOutput() VirtualGatewayAccessLogOutput
	ToVirtualGatewayAccessLogOutputWithContext(context.Context) VirtualGatewayAccessLogOutput
}

type VirtualGatewayAccessLogArgs struct {
	File VirtualGatewayFileAccessLogPtrInput `pulumi:"file"`
}

func (VirtualGatewayAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayAccessLog)(nil)).Elem()
}

func (i VirtualGatewayAccessLogArgs) ToVirtualGatewayAccessLogOutput() VirtualGatewayAccessLogOutput {
	return i.ToVirtualGatewayAccessLogOutputWithContext(context.Background())
}

func (i VirtualGatewayAccessLogArgs) ToVirtualGatewayAccessLogOutputWithContext(ctx context.Context) VirtualGatewayAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayAccessLogOutput)
}

func (i VirtualGatewayAccessLogArgs) ToVirtualGatewayAccessLogPtrOutput() VirtualGatewayAccessLogPtrOutput {
	return i.ToVirtualGatewayAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayAccessLogArgs) ToVirtualGatewayAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayAccessLogOutput).ToVirtualGatewayAccessLogPtrOutputWithContext(ctx)
}

// VirtualGatewayAccessLogPtrInput is an input type that accepts VirtualGatewayAccessLogArgs, VirtualGatewayAccessLogPtr and VirtualGatewayAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayAccessLogPtrInput` via:
//
//          VirtualGatewayAccessLogArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualGatewayAccessLogPtrOutput() VirtualGatewayAccessLogPtrOutput
	ToVirtualGatewayAccessLogPtrOutputWithContext(context.Context) VirtualGatewayAccessLogPtrOutput
}

type virtualGatewayAccessLogPtrType VirtualGatewayAccessLogArgs

func VirtualGatewayAccessLogPtr(v *VirtualGatewayAccessLogArgs) VirtualGatewayAccessLogPtrInput {
	return (*virtualGatewayAccessLogPtrType)(v)
}

func (*virtualGatewayAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayAccessLog)(nil)).Elem()
}

func (i *virtualGatewayAccessLogPtrType) ToVirtualGatewayAccessLogPtrOutput() VirtualGatewayAccessLogPtrOutput {
	return i.ToVirtualGatewayAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayAccessLogPtrType) ToVirtualGatewayAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayAccessLogPtrOutput)
}

type VirtualGatewayAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualGatewayAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayAccessLog)(nil)).Elem()
}

func (o VirtualGatewayAccessLogOutput) ToVirtualGatewayAccessLogOutput() VirtualGatewayAccessLogOutput {
	return o
}

func (o VirtualGatewayAccessLogOutput) ToVirtualGatewayAccessLogOutputWithContext(ctx context.Context) VirtualGatewayAccessLogOutput {
	return o
}

func (o VirtualGatewayAccessLogOutput) ToVirtualGatewayAccessLogPtrOutput() VirtualGatewayAccessLogPtrOutput {
	return o.ToVirtualGatewayAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayAccessLogOutput) ToVirtualGatewayAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayAccessLog) *VirtualGatewayAccessLog {
		return &v
	}).(VirtualGatewayAccessLogPtrOutput)
}

func (o VirtualGatewayAccessLogOutput) File() VirtualGatewayFileAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualGatewayAccessLog) *VirtualGatewayFileAccessLog { return v.File }).(VirtualGatewayFileAccessLogPtrOutput)
}

type VirtualGatewayAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayAccessLog)(nil)).Elem()
}

func (o VirtualGatewayAccessLogPtrOutput) ToVirtualGatewayAccessLogPtrOutput() VirtualGatewayAccessLogPtrOutput {
	return o
}

func (o VirtualGatewayAccessLogPtrOutput) ToVirtualGatewayAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayAccessLogPtrOutput {
	return o
}

func (o VirtualGatewayAccessLogPtrOutput) Elem() VirtualGatewayAccessLogOutput {
	return o.ApplyT(func(v *VirtualGatewayAccessLog) VirtualGatewayAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayAccessLog
		return ret
	}).(VirtualGatewayAccessLogOutput)
}

func (o VirtualGatewayAccessLogPtrOutput) File() VirtualGatewayFileAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayAccessLog) *VirtualGatewayFileAccessLog {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewayFileAccessLogPtrOutput)
}

type VirtualGatewayBackendDefaults struct {
	ClientPolicy *VirtualGatewayClientPolicy `pulumi:"clientPolicy"`
}

// VirtualGatewayBackendDefaultsInput is an input type that accepts VirtualGatewayBackendDefaultsArgs and VirtualGatewayBackendDefaultsOutput values.
// You can construct a concrete instance of `VirtualGatewayBackendDefaultsInput` via:
//
//          VirtualGatewayBackendDefaultsArgs{...}
type VirtualGatewayBackendDefaultsInput interface {
	pulumi.Input

	ToVirtualGatewayBackendDefaultsOutput() VirtualGatewayBackendDefaultsOutput
	ToVirtualGatewayBackendDefaultsOutputWithContext(context.Context) VirtualGatewayBackendDefaultsOutput
}

type VirtualGatewayBackendDefaultsArgs struct {
	ClientPolicy VirtualGatewayClientPolicyPtrInput `pulumi:"clientPolicy"`
}

func (VirtualGatewayBackendDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayBackendDefaults)(nil)).Elem()
}

func (i VirtualGatewayBackendDefaultsArgs) ToVirtualGatewayBackendDefaultsOutput() VirtualGatewayBackendDefaultsOutput {
	return i.ToVirtualGatewayBackendDefaultsOutputWithContext(context.Background())
}

func (i VirtualGatewayBackendDefaultsArgs) ToVirtualGatewayBackendDefaultsOutputWithContext(ctx context.Context) VirtualGatewayBackendDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayBackendDefaultsOutput)
}

func (i VirtualGatewayBackendDefaultsArgs) ToVirtualGatewayBackendDefaultsPtrOutput() VirtualGatewayBackendDefaultsPtrOutput {
	return i.ToVirtualGatewayBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayBackendDefaultsArgs) ToVirtualGatewayBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewayBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayBackendDefaultsOutput).ToVirtualGatewayBackendDefaultsPtrOutputWithContext(ctx)
}

// VirtualGatewayBackendDefaultsPtrInput is an input type that accepts VirtualGatewayBackendDefaultsArgs, VirtualGatewayBackendDefaultsPtr and VirtualGatewayBackendDefaultsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayBackendDefaultsPtrInput` via:
//
//          VirtualGatewayBackendDefaultsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayBackendDefaultsPtrInput interface {
	pulumi.Input

	ToVirtualGatewayBackendDefaultsPtrOutput() VirtualGatewayBackendDefaultsPtrOutput
	ToVirtualGatewayBackendDefaultsPtrOutputWithContext(context.Context) VirtualGatewayBackendDefaultsPtrOutput
}

type virtualGatewayBackendDefaultsPtrType VirtualGatewayBackendDefaultsArgs

func VirtualGatewayBackendDefaultsPtr(v *VirtualGatewayBackendDefaultsArgs) VirtualGatewayBackendDefaultsPtrInput {
	return (*virtualGatewayBackendDefaultsPtrType)(v)
}

func (*virtualGatewayBackendDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayBackendDefaults)(nil)).Elem()
}

func (i *virtualGatewayBackendDefaultsPtrType) ToVirtualGatewayBackendDefaultsPtrOutput() VirtualGatewayBackendDefaultsPtrOutput {
	return i.ToVirtualGatewayBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayBackendDefaultsPtrType) ToVirtualGatewayBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewayBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayBackendDefaultsPtrOutput)
}

type VirtualGatewayBackendDefaultsOutput struct{ *pulumi.OutputState }

func (VirtualGatewayBackendDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayBackendDefaults)(nil)).Elem()
}

func (o VirtualGatewayBackendDefaultsOutput) ToVirtualGatewayBackendDefaultsOutput() VirtualGatewayBackendDefaultsOutput {
	return o
}

func (o VirtualGatewayBackendDefaultsOutput) ToVirtualGatewayBackendDefaultsOutputWithContext(ctx context.Context) VirtualGatewayBackendDefaultsOutput {
	return o
}

func (o VirtualGatewayBackendDefaultsOutput) ToVirtualGatewayBackendDefaultsPtrOutput() VirtualGatewayBackendDefaultsPtrOutput {
	return o.ToVirtualGatewayBackendDefaultsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayBackendDefaultsOutput) ToVirtualGatewayBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewayBackendDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayBackendDefaults) *VirtualGatewayBackendDefaults {
		return &v
	}).(VirtualGatewayBackendDefaultsPtrOutput)
}

func (o VirtualGatewayBackendDefaultsOutput) ClientPolicy() VirtualGatewayClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualGatewayBackendDefaults) *VirtualGatewayClientPolicy { return v.ClientPolicy }).(VirtualGatewayClientPolicyPtrOutput)
}

type VirtualGatewayBackendDefaultsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayBackendDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayBackendDefaults)(nil)).Elem()
}

func (o VirtualGatewayBackendDefaultsPtrOutput) ToVirtualGatewayBackendDefaultsPtrOutput() VirtualGatewayBackendDefaultsPtrOutput {
	return o
}

func (o VirtualGatewayBackendDefaultsPtrOutput) ToVirtualGatewayBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualGatewayBackendDefaultsPtrOutput {
	return o
}

func (o VirtualGatewayBackendDefaultsPtrOutput) Elem() VirtualGatewayBackendDefaultsOutput {
	return o.ApplyT(func(v *VirtualGatewayBackendDefaults) VirtualGatewayBackendDefaults {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayBackendDefaults
		return ret
	}).(VirtualGatewayBackendDefaultsOutput)
}

func (o VirtualGatewayBackendDefaultsPtrOutput) ClientPolicy() VirtualGatewayClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayBackendDefaults) *VirtualGatewayClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualGatewayClientPolicyPtrOutput)
}

type VirtualGatewayClientPolicy struct {
	TLS *VirtualGatewayClientPolicyTls `pulumi:"tLS"`
}

// VirtualGatewayClientPolicyInput is an input type that accepts VirtualGatewayClientPolicyArgs and VirtualGatewayClientPolicyOutput values.
// You can construct a concrete instance of `VirtualGatewayClientPolicyInput` via:
//
//          VirtualGatewayClientPolicyArgs{...}
type VirtualGatewayClientPolicyInput interface {
	pulumi.Input

	ToVirtualGatewayClientPolicyOutput() VirtualGatewayClientPolicyOutput
	ToVirtualGatewayClientPolicyOutputWithContext(context.Context) VirtualGatewayClientPolicyOutput
}

type VirtualGatewayClientPolicyArgs struct {
	TLS VirtualGatewayClientPolicyTlsPtrInput `pulumi:"tLS"`
}

func (VirtualGatewayClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayClientPolicy)(nil)).Elem()
}

func (i VirtualGatewayClientPolicyArgs) ToVirtualGatewayClientPolicyOutput() VirtualGatewayClientPolicyOutput {
	return i.ToVirtualGatewayClientPolicyOutputWithContext(context.Background())
}

func (i VirtualGatewayClientPolicyArgs) ToVirtualGatewayClientPolicyOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientPolicyOutput)
}

func (i VirtualGatewayClientPolicyArgs) ToVirtualGatewayClientPolicyPtrOutput() VirtualGatewayClientPolicyPtrOutput {
	return i.ToVirtualGatewayClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayClientPolicyArgs) ToVirtualGatewayClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientPolicyOutput).ToVirtualGatewayClientPolicyPtrOutputWithContext(ctx)
}

// VirtualGatewayClientPolicyPtrInput is an input type that accepts VirtualGatewayClientPolicyArgs, VirtualGatewayClientPolicyPtr and VirtualGatewayClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayClientPolicyPtrInput` via:
//
//          VirtualGatewayClientPolicyArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualGatewayClientPolicyPtrOutput() VirtualGatewayClientPolicyPtrOutput
	ToVirtualGatewayClientPolicyPtrOutputWithContext(context.Context) VirtualGatewayClientPolicyPtrOutput
}

type virtualGatewayClientPolicyPtrType VirtualGatewayClientPolicyArgs

func VirtualGatewayClientPolicyPtr(v *VirtualGatewayClientPolicyArgs) VirtualGatewayClientPolicyPtrInput {
	return (*virtualGatewayClientPolicyPtrType)(v)
}

func (*virtualGatewayClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayClientPolicy)(nil)).Elem()
}

func (i *virtualGatewayClientPolicyPtrType) ToVirtualGatewayClientPolicyPtrOutput() VirtualGatewayClientPolicyPtrOutput {
	return i.ToVirtualGatewayClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayClientPolicyPtrType) ToVirtualGatewayClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientPolicyPtrOutput)
}

type VirtualGatewayClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualGatewayClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayClientPolicy)(nil)).Elem()
}

func (o VirtualGatewayClientPolicyOutput) ToVirtualGatewayClientPolicyOutput() VirtualGatewayClientPolicyOutput {
	return o
}

func (o VirtualGatewayClientPolicyOutput) ToVirtualGatewayClientPolicyOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyOutput {
	return o
}

func (o VirtualGatewayClientPolicyOutput) ToVirtualGatewayClientPolicyPtrOutput() VirtualGatewayClientPolicyPtrOutput {
	return o.ToVirtualGatewayClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayClientPolicyOutput) ToVirtualGatewayClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayClientPolicy) *VirtualGatewayClientPolicy {
		return &v
	}).(VirtualGatewayClientPolicyPtrOutput)
}

func (o VirtualGatewayClientPolicyOutput) TLS() VirtualGatewayClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualGatewayClientPolicy) *VirtualGatewayClientPolicyTls { return v.TLS }).(VirtualGatewayClientPolicyTlsPtrOutput)
}

type VirtualGatewayClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayClientPolicy)(nil)).Elem()
}

func (o VirtualGatewayClientPolicyPtrOutput) ToVirtualGatewayClientPolicyPtrOutput() VirtualGatewayClientPolicyPtrOutput {
	return o
}

func (o VirtualGatewayClientPolicyPtrOutput) ToVirtualGatewayClientPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyPtrOutput {
	return o
}

func (o VirtualGatewayClientPolicyPtrOutput) Elem() VirtualGatewayClientPolicyOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicy) VirtualGatewayClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayClientPolicy
		return ret
	}).(VirtualGatewayClientPolicyOutput)
}

func (o VirtualGatewayClientPolicyPtrOutput) TLS() VirtualGatewayClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicy) *VirtualGatewayClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.TLS
	}).(VirtualGatewayClientPolicyTlsPtrOutput)
}

type VirtualGatewayClientPolicyTls struct {
	Certificate *VirtualGatewayClientTlsCertificate `pulumi:"certificate"`
	Enforce     *bool                               `pulumi:"enforce"`
	Ports       []int                               `pulumi:"ports"`
	Validation  VirtualGatewayTlsValidationContext  `pulumi:"validation"`
}

// VirtualGatewayClientPolicyTlsInput is an input type that accepts VirtualGatewayClientPolicyTlsArgs and VirtualGatewayClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualGatewayClientPolicyTlsInput` via:
//
//          VirtualGatewayClientPolicyTlsArgs{...}
type VirtualGatewayClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualGatewayClientPolicyTlsOutput() VirtualGatewayClientPolicyTlsOutput
	ToVirtualGatewayClientPolicyTlsOutputWithContext(context.Context) VirtualGatewayClientPolicyTlsOutput
}

type VirtualGatewayClientPolicyTlsArgs struct {
	Certificate VirtualGatewayClientTlsCertificatePtrInput `pulumi:"certificate"`
	Enforce     pulumi.BoolPtrInput                        `pulumi:"enforce"`
	Ports       pulumi.IntArrayInput                       `pulumi:"ports"`
	Validation  VirtualGatewayTlsValidationContextInput    `pulumi:"validation"`
}

func (VirtualGatewayClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayClientPolicyTls)(nil)).Elem()
}

func (i VirtualGatewayClientPolicyTlsArgs) ToVirtualGatewayClientPolicyTlsOutput() VirtualGatewayClientPolicyTlsOutput {
	return i.ToVirtualGatewayClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualGatewayClientPolicyTlsArgs) ToVirtualGatewayClientPolicyTlsOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientPolicyTlsOutput)
}

func (i VirtualGatewayClientPolicyTlsArgs) ToVirtualGatewayClientPolicyTlsPtrOutput() VirtualGatewayClientPolicyTlsPtrOutput {
	return i.ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayClientPolicyTlsArgs) ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientPolicyTlsOutput).ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualGatewayClientPolicyTlsPtrInput is an input type that accepts VirtualGatewayClientPolicyTlsArgs, VirtualGatewayClientPolicyTlsPtr and VirtualGatewayClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayClientPolicyTlsPtrInput` via:
//
//          VirtualGatewayClientPolicyTlsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualGatewayClientPolicyTlsPtrOutput() VirtualGatewayClientPolicyTlsPtrOutput
	ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(context.Context) VirtualGatewayClientPolicyTlsPtrOutput
}

type virtualGatewayClientPolicyTlsPtrType VirtualGatewayClientPolicyTlsArgs

func VirtualGatewayClientPolicyTlsPtr(v *VirtualGatewayClientPolicyTlsArgs) VirtualGatewayClientPolicyTlsPtrInput {
	return (*virtualGatewayClientPolicyTlsPtrType)(v)
}

func (*virtualGatewayClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayClientPolicyTls)(nil)).Elem()
}

func (i *virtualGatewayClientPolicyTlsPtrType) ToVirtualGatewayClientPolicyTlsPtrOutput() VirtualGatewayClientPolicyTlsPtrOutput {
	return i.ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayClientPolicyTlsPtrType) ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientPolicyTlsPtrOutput)
}

type VirtualGatewayClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualGatewayClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayClientPolicyTls)(nil)).Elem()
}

func (o VirtualGatewayClientPolicyTlsOutput) ToVirtualGatewayClientPolicyTlsOutput() VirtualGatewayClientPolicyTlsOutput {
	return o
}

func (o VirtualGatewayClientPolicyTlsOutput) ToVirtualGatewayClientPolicyTlsOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyTlsOutput {
	return o
}

func (o VirtualGatewayClientPolicyTlsOutput) ToVirtualGatewayClientPolicyTlsPtrOutput() VirtualGatewayClientPolicyTlsPtrOutput {
	return o.ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayClientPolicyTlsOutput) ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayClientPolicyTls) *VirtualGatewayClientPolicyTls {
		return &v
	}).(VirtualGatewayClientPolicyTlsPtrOutput)
}

func (o VirtualGatewayClientPolicyTlsOutput) Certificate() VirtualGatewayClientTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewayClientPolicyTls) *VirtualGatewayClientTlsCertificate { return v.Certificate }).(VirtualGatewayClientTlsCertificatePtrOutput)
}

func (o VirtualGatewayClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewayClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

func (o VirtualGatewayClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualGatewayClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o VirtualGatewayClientPolicyTlsOutput) Validation() VirtualGatewayTlsValidationContextOutput {
	return o.ApplyT(func(v VirtualGatewayClientPolicyTls) VirtualGatewayTlsValidationContext { return v.Validation }).(VirtualGatewayTlsValidationContextOutput)
}

type VirtualGatewayClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayClientPolicyTls)(nil)).Elem()
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) ToVirtualGatewayClientPolicyTlsPtrOutput() VirtualGatewayClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) ToVirtualGatewayClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) Elem() VirtualGatewayClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicyTls) VirtualGatewayClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayClientPolicyTls
		return ret
	}).(VirtualGatewayClientPolicyTlsOutput)
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) Certificate() VirtualGatewayClientTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicyTls) *VirtualGatewayClientTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualGatewayClientTlsCertificatePtrOutput)
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

func (o VirtualGatewayClientPolicyTlsPtrOutput) Validation() VirtualGatewayTlsValidationContextPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayClientPolicyTls) *VirtualGatewayTlsValidationContext {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualGatewayTlsValidationContextPtrOutput)
}

type VirtualGatewayClientTlsCertificate struct {
	File *VirtualGatewayListenerTlsFileCertificate `pulumi:"file"`
	SDS  *VirtualGatewayListenerTlsSdsCertificate  `pulumi:"sDS"`
}

// VirtualGatewayClientTlsCertificateInput is an input type that accepts VirtualGatewayClientTlsCertificateArgs and VirtualGatewayClientTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewayClientTlsCertificateInput` via:
//
//          VirtualGatewayClientTlsCertificateArgs{...}
type VirtualGatewayClientTlsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewayClientTlsCertificateOutput() VirtualGatewayClientTlsCertificateOutput
	ToVirtualGatewayClientTlsCertificateOutputWithContext(context.Context) VirtualGatewayClientTlsCertificateOutput
}

type VirtualGatewayClientTlsCertificateArgs struct {
	File VirtualGatewayListenerTlsFileCertificatePtrInput `pulumi:"file"`
	SDS  VirtualGatewayListenerTlsSdsCertificatePtrInput  `pulumi:"sDS"`
}

func (VirtualGatewayClientTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayClientTlsCertificate)(nil)).Elem()
}

func (i VirtualGatewayClientTlsCertificateArgs) ToVirtualGatewayClientTlsCertificateOutput() VirtualGatewayClientTlsCertificateOutput {
	return i.ToVirtualGatewayClientTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewayClientTlsCertificateArgs) ToVirtualGatewayClientTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewayClientTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientTlsCertificateOutput)
}

func (i VirtualGatewayClientTlsCertificateArgs) ToVirtualGatewayClientTlsCertificatePtrOutput() VirtualGatewayClientTlsCertificatePtrOutput {
	return i.ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewayClientTlsCertificateArgs) ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayClientTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientTlsCertificateOutput).ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewayClientTlsCertificatePtrInput is an input type that accepts VirtualGatewayClientTlsCertificateArgs, VirtualGatewayClientTlsCertificatePtr and VirtualGatewayClientTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewayClientTlsCertificatePtrInput` via:
//
//          VirtualGatewayClientTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayClientTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewayClientTlsCertificatePtrOutput() VirtualGatewayClientTlsCertificatePtrOutput
	ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(context.Context) VirtualGatewayClientTlsCertificatePtrOutput
}

type virtualGatewayClientTlsCertificatePtrType VirtualGatewayClientTlsCertificateArgs

func VirtualGatewayClientTlsCertificatePtr(v *VirtualGatewayClientTlsCertificateArgs) VirtualGatewayClientTlsCertificatePtrInput {
	return (*virtualGatewayClientTlsCertificatePtrType)(v)
}

func (*virtualGatewayClientTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayClientTlsCertificate)(nil)).Elem()
}

func (i *virtualGatewayClientTlsCertificatePtrType) ToVirtualGatewayClientTlsCertificatePtrOutput() VirtualGatewayClientTlsCertificatePtrOutput {
	return i.ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewayClientTlsCertificatePtrType) ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayClientTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayClientTlsCertificatePtrOutput)
}

type VirtualGatewayClientTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewayClientTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayClientTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewayClientTlsCertificateOutput) ToVirtualGatewayClientTlsCertificateOutput() VirtualGatewayClientTlsCertificateOutput {
	return o
}

func (o VirtualGatewayClientTlsCertificateOutput) ToVirtualGatewayClientTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewayClientTlsCertificateOutput {
	return o
}

func (o VirtualGatewayClientTlsCertificateOutput) ToVirtualGatewayClientTlsCertificatePtrOutput() VirtualGatewayClientTlsCertificatePtrOutput {
	return o.ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewayClientTlsCertificateOutput) ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayClientTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayClientTlsCertificate) *VirtualGatewayClientTlsCertificate {
		return &v
	}).(VirtualGatewayClientTlsCertificatePtrOutput)
}

func (o VirtualGatewayClientTlsCertificateOutput) File() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewayClientTlsCertificate) *VirtualGatewayListenerTlsFileCertificate { return v.File }).(VirtualGatewayListenerTlsFileCertificatePtrOutput)
}

func (o VirtualGatewayClientTlsCertificateOutput) SDS() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewayClientTlsCertificate) *VirtualGatewayListenerTlsSdsCertificate { return v.SDS }).(VirtualGatewayListenerTlsSdsCertificatePtrOutput)
}

type VirtualGatewayClientTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayClientTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayClientTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewayClientTlsCertificatePtrOutput) ToVirtualGatewayClientTlsCertificatePtrOutput() VirtualGatewayClientTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewayClientTlsCertificatePtrOutput) ToVirtualGatewayClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayClientTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewayClientTlsCertificatePtrOutput) Elem() VirtualGatewayClientTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewayClientTlsCertificate) VirtualGatewayClientTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayClientTlsCertificate
		return ret
	}).(VirtualGatewayClientTlsCertificateOutput)
}

func (o VirtualGatewayClientTlsCertificatePtrOutput) File() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayClientTlsCertificate) *VirtualGatewayListenerTlsFileCertificate {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewayListenerTlsFileCertificatePtrOutput)
}

func (o VirtualGatewayClientTlsCertificatePtrOutput) SDS() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayClientTlsCertificate) *VirtualGatewayListenerTlsSdsCertificate {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualGatewayListenerTlsSdsCertificatePtrOutput)
}

type VirtualGatewayConnectionPool struct {
	GRPC  *VirtualGatewayGrpcConnectionPool  `pulumi:"gRPC"`
	HTTP  *VirtualGatewayHttpConnectionPool  `pulumi:"hTTP"`
	HTTP2 *VirtualGatewayHttp2ConnectionPool `pulumi:"hTTP2"`
}

// VirtualGatewayConnectionPoolInput is an input type that accepts VirtualGatewayConnectionPoolArgs and VirtualGatewayConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualGatewayConnectionPoolInput` via:
//
//          VirtualGatewayConnectionPoolArgs{...}
type VirtualGatewayConnectionPoolInput interface {
	pulumi.Input

	ToVirtualGatewayConnectionPoolOutput() VirtualGatewayConnectionPoolOutput
	ToVirtualGatewayConnectionPoolOutputWithContext(context.Context) VirtualGatewayConnectionPoolOutput
}

type VirtualGatewayConnectionPoolArgs struct {
	GRPC  VirtualGatewayGrpcConnectionPoolPtrInput  `pulumi:"gRPC"`
	HTTP  VirtualGatewayHttpConnectionPoolPtrInput  `pulumi:"hTTP"`
	HTTP2 VirtualGatewayHttp2ConnectionPoolPtrInput `pulumi:"hTTP2"`
}

func (VirtualGatewayConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayConnectionPool)(nil)).Elem()
}

func (i VirtualGatewayConnectionPoolArgs) ToVirtualGatewayConnectionPoolOutput() VirtualGatewayConnectionPoolOutput {
	return i.ToVirtualGatewayConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualGatewayConnectionPoolArgs) ToVirtualGatewayConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayConnectionPoolOutput)
}

func (i VirtualGatewayConnectionPoolArgs) ToVirtualGatewayConnectionPoolPtrOutput() VirtualGatewayConnectionPoolPtrOutput {
	return i.ToVirtualGatewayConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayConnectionPoolArgs) ToVirtualGatewayConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayConnectionPoolOutput).ToVirtualGatewayConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualGatewayConnectionPoolPtrInput is an input type that accepts VirtualGatewayConnectionPoolArgs, VirtualGatewayConnectionPoolPtr and VirtualGatewayConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayConnectionPoolPtrInput` via:
//
//          VirtualGatewayConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualGatewayConnectionPoolPtrOutput() VirtualGatewayConnectionPoolPtrOutput
	ToVirtualGatewayConnectionPoolPtrOutputWithContext(context.Context) VirtualGatewayConnectionPoolPtrOutput
}

type virtualGatewayConnectionPoolPtrType VirtualGatewayConnectionPoolArgs

func VirtualGatewayConnectionPoolPtr(v *VirtualGatewayConnectionPoolArgs) VirtualGatewayConnectionPoolPtrInput {
	return (*virtualGatewayConnectionPoolPtrType)(v)
}

func (*virtualGatewayConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayConnectionPool)(nil)).Elem()
}

func (i *virtualGatewayConnectionPoolPtrType) ToVirtualGatewayConnectionPoolPtrOutput() VirtualGatewayConnectionPoolPtrOutput {
	return i.ToVirtualGatewayConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayConnectionPoolPtrType) ToVirtualGatewayConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayConnectionPoolPtrOutput)
}

type VirtualGatewayConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualGatewayConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayConnectionPoolOutput) ToVirtualGatewayConnectionPoolOutput() VirtualGatewayConnectionPoolOutput {
	return o
}

func (o VirtualGatewayConnectionPoolOutput) ToVirtualGatewayConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayConnectionPoolOutput {
	return o
}

func (o VirtualGatewayConnectionPoolOutput) ToVirtualGatewayConnectionPoolPtrOutput() VirtualGatewayConnectionPoolPtrOutput {
	return o.ToVirtualGatewayConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayConnectionPoolOutput) ToVirtualGatewayConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayConnectionPool) *VirtualGatewayConnectionPool {
		return &v
	}).(VirtualGatewayConnectionPoolPtrOutput)
}

func (o VirtualGatewayConnectionPoolOutput) GRPC() VirtualGatewayGrpcConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewayConnectionPool) *VirtualGatewayGrpcConnectionPool { return v.GRPC }).(VirtualGatewayGrpcConnectionPoolPtrOutput)
}

func (o VirtualGatewayConnectionPoolOutput) HTTP() VirtualGatewayHttpConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewayConnectionPool) *VirtualGatewayHttpConnectionPool { return v.HTTP }).(VirtualGatewayHttpConnectionPoolPtrOutput)
}

func (o VirtualGatewayConnectionPoolOutput) HTTP2() VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewayConnectionPool) *VirtualGatewayHttp2ConnectionPool { return v.HTTP2 }).(VirtualGatewayHttp2ConnectionPoolPtrOutput)
}

type VirtualGatewayConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayConnectionPoolPtrOutput) ToVirtualGatewayConnectionPoolPtrOutput() VirtualGatewayConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayConnectionPoolPtrOutput) ToVirtualGatewayConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayConnectionPoolPtrOutput) Elem() VirtualGatewayConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualGatewayConnectionPool) VirtualGatewayConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayConnectionPool
		return ret
	}).(VirtualGatewayConnectionPoolOutput)
}

func (o VirtualGatewayConnectionPoolPtrOutput) GRPC() VirtualGatewayGrpcConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayConnectionPool) *VirtualGatewayGrpcConnectionPool {
		if v == nil {
			return nil
		}
		return v.GRPC
	}).(VirtualGatewayGrpcConnectionPoolPtrOutput)
}

func (o VirtualGatewayConnectionPoolPtrOutput) HTTP() VirtualGatewayHttpConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayConnectionPool) *VirtualGatewayHttpConnectionPool {
		if v == nil {
			return nil
		}
		return v.HTTP
	}).(VirtualGatewayHttpConnectionPoolPtrOutput)
}

func (o VirtualGatewayConnectionPoolPtrOutput) HTTP2() VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayConnectionPool) *VirtualGatewayHttp2ConnectionPool {
		if v == nil {
			return nil
		}
		return v.HTTP2
	}).(VirtualGatewayHttp2ConnectionPoolPtrOutput)
}

type VirtualGatewayFileAccessLog struct {
	Path string `pulumi:"path"`
}

// VirtualGatewayFileAccessLogInput is an input type that accepts VirtualGatewayFileAccessLogArgs and VirtualGatewayFileAccessLogOutput values.
// You can construct a concrete instance of `VirtualGatewayFileAccessLogInput` via:
//
//          VirtualGatewayFileAccessLogArgs{...}
type VirtualGatewayFileAccessLogInput interface {
	pulumi.Input

	ToVirtualGatewayFileAccessLogOutput() VirtualGatewayFileAccessLogOutput
	ToVirtualGatewayFileAccessLogOutputWithContext(context.Context) VirtualGatewayFileAccessLogOutput
}

type VirtualGatewayFileAccessLogArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualGatewayFileAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayFileAccessLog)(nil)).Elem()
}

func (i VirtualGatewayFileAccessLogArgs) ToVirtualGatewayFileAccessLogOutput() VirtualGatewayFileAccessLogOutput {
	return i.ToVirtualGatewayFileAccessLogOutputWithContext(context.Background())
}

func (i VirtualGatewayFileAccessLogArgs) ToVirtualGatewayFileAccessLogOutputWithContext(ctx context.Context) VirtualGatewayFileAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayFileAccessLogOutput)
}

func (i VirtualGatewayFileAccessLogArgs) ToVirtualGatewayFileAccessLogPtrOutput() VirtualGatewayFileAccessLogPtrOutput {
	return i.ToVirtualGatewayFileAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayFileAccessLogArgs) ToVirtualGatewayFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayFileAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayFileAccessLogOutput).ToVirtualGatewayFileAccessLogPtrOutputWithContext(ctx)
}

// VirtualGatewayFileAccessLogPtrInput is an input type that accepts VirtualGatewayFileAccessLogArgs, VirtualGatewayFileAccessLogPtr and VirtualGatewayFileAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayFileAccessLogPtrInput` via:
//
//          VirtualGatewayFileAccessLogArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayFileAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualGatewayFileAccessLogPtrOutput() VirtualGatewayFileAccessLogPtrOutput
	ToVirtualGatewayFileAccessLogPtrOutputWithContext(context.Context) VirtualGatewayFileAccessLogPtrOutput
}

type virtualGatewayFileAccessLogPtrType VirtualGatewayFileAccessLogArgs

func VirtualGatewayFileAccessLogPtr(v *VirtualGatewayFileAccessLogArgs) VirtualGatewayFileAccessLogPtrInput {
	return (*virtualGatewayFileAccessLogPtrType)(v)
}

func (*virtualGatewayFileAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayFileAccessLog)(nil)).Elem()
}

func (i *virtualGatewayFileAccessLogPtrType) ToVirtualGatewayFileAccessLogPtrOutput() VirtualGatewayFileAccessLogPtrOutput {
	return i.ToVirtualGatewayFileAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayFileAccessLogPtrType) ToVirtualGatewayFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayFileAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayFileAccessLogPtrOutput)
}

type VirtualGatewayFileAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualGatewayFileAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayFileAccessLog)(nil)).Elem()
}

func (o VirtualGatewayFileAccessLogOutput) ToVirtualGatewayFileAccessLogOutput() VirtualGatewayFileAccessLogOutput {
	return o
}

func (o VirtualGatewayFileAccessLogOutput) ToVirtualGatewayFileAccessLogOutputWithContext(ctx context.Context) VirtualGatewayFileAccessLogOutput {
	return o
}

func (o VirtualGatewayFileAccessLogOutput) ToVirtualGatewayFileAccessLogPtrOutput() VirtualGatewayFileAccessLogPtrOutput {
	return o.ToVirtualGatewayFileAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayFileAccessLogOutput) ToVirtualGatewayFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayFileAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayFileAccessLog) *VirtualGatewayFileAccessLog {
		return &v
	}).(VirtualGatewayFileAccessLogPtrOutput)
}

func (o VirtualGatewayFileAccessLogOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayFileAccessLog) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualGatewayFileAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayFileAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayFileAccessLog)(nil)).Elem()
}

func (o VirtualGatewayFileAccessLogPtrOutput) ToVirtualGatewayFileAccessLogPtrOutput() VirtualGatewayFileAccessLogPtrOutput {
	return o
}

func (o VirtualGatewayFileAccessLogPtrOutput) ToVirtualGatewayFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualGatewayFileAccessLogPtrOutput {
	return o
}

func (o VirtualGatewayFileAccessLogPtrOutput) Elem() VirtualGatewayFileAccessLogOutput {
	return o.ApplyT(func(v *VirtualGatewayFileAccessLog) VirtualGatewayFileAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayFileAccessLog
		return ret
	}).(VirtualGatewayFileAccessLogOutput)
}

func (o VirtualGatewayFileAccessLogPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayFileAccessLog) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewayGrpcConnectionPool struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualGatewayGrpcConnectionPoolInput is an input type that accepts VirtualGatewayGrpcConnectionPoolArgs and VirtualGatewayGrpcConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualGatewayGrpcConnectionPoolInput` via:
//
//          VirtualGatewayGrpcConnectionPoolArgs{...}
type VirtualGatewayGrpcConnectionPoolInput interface {
	pulumi.Input

	ToVirtualGatewayGrpcConnectionPoolOutput() VirtualGatewayGrpcConnectionPoolOutput
	ToVirtualGatewayGrpcConnectionPoolOutputWithContext(context.Context) VirtualGatewayGrpcConnectionPoolOutput
}

type VirtualGatewayGrpcConnectionPoolArgs struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualGatewayGrpcConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayGrpcConnectionPool)(nil)).Elem()
}

func (i VirtualGatewayGrpcConnectionPoolArgs) ToVirtualGatewayGrpcConnectionPoolOutput() VirtualGatewayGrpcConnectionPoolOutput {
	return i.ToVirtualGatewayGrpcConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualGatewayGrpcConnectionPoolArgs) ToVirtualGatewayGrpcConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayGrpcConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayGrpcConnectionPoolOutput)
}

func (i VirtualGatewayGrpcConnectionPoolArgs) ToVirtualGatewayGrpcConnectionPoolPtrOutput() VirtualGatewayGrpcConnectionPoolPtrOutput {
	return i.ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayGrpcConnectionPoolArgs) ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayGrpcConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayGrpcConnectionPoolOutput).ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualGatewayGrpcConnectionPoolPtrInput is an input type that accepts VirtualGatewayGrpcConnectionPoolArgs, VirtualGatewayGrpcConnectionPoolPtr and VirtualGatewayGrpcConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayGrpcConnectionPoolPtrInput` via:
//
//          VirtualGatewayGrpcConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayGrpcConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualGatewayGrpcConnectionPoolPtrOutput() VirtualGatewayGrpcConnectionPoolPtrOutput
	ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(context.Context) VirtualGatewayGrpcConnectionPoolPtrOutput
}

type virtualGatewayGrpcConnectionPoolPtrType VirtualGatewayGrpcConnectionPoolArgs

func VirtualGatewayGrpcConnectionPoolPtr(v *VirtualGatewayGrpcConnectionPoolArgs) VirtualGatewayGrpcConnectionPoolPtrInput {
	return (*virtualGatewayGrpcConnectionPoolPtrType)(v)
}

func (*virtualGatewayGrpcConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayGrpcConnectionPool)(nil)).Elem()
}

func (i *virtualGatewayGrpcConnectionPoolPtrType) ToVirtualGatewayGrpcConnectionPoolPtrOutput() VirtualGatewayGrpcConnectionPoolPtrOutput {
	return i.ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayGrpcConnectionPoolPtrType) ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayGrpcConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayGrpcConnectionPoolPtrOutput)
}

type VirtualGatewayGrpcConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualGatewayGrpcConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayGrpcConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayGrpcConnectionPoolOutput) ToVirtualGatewayGrpcConnectionPoolOutput() VirtualGatewayGrpcConnectionPoolOutput {
	return o
}

func (o VirtualGatewayGrpcConnectionPoolOutput) ToVirtualGatewayGrpcConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayGrpcConnectionPoolOutput {
	return o
}

func (o VirtualGatewayGrpcConnectionPoolOutput) ToVirtualGatewayGrpcConnectionPoolPtrOutput() VirtualGatewayGrpcConnectionPoolPtrOutput {
	return o.ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayGrpcConnectionPoolOutput) ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayGrpcConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayGrpcConnectionPool) *VirtualGatewayGrpcConnectionPool {
		return &v
	}).(VirtualGatewayGrpcConnectionPoolPtrOutput)
}

func (o VirtualGatewayGrpcConnectionPoolOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayGrpcConnectionPool) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualGatewayGrpcConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayGrpcConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayGrpcConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayGrpcConnectionPoolPtrOutput) ToVirtualGatewayGrpcConnectionPoolPtrOutput() VirtualGatewayGrpcConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayGrpcConnectionPoolPtrOutput) ToVirtualGatewayGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayGrpcConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayGrpcConnectionPoolPtrOutput) Elem() VirtualGatewayGrpcConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualGatewayGrpcConnectionPool) VirtualGatewayGrpcConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayGrpcConnectionPool
		return ret
	}).(VirtualGatewayGrpcConnectionPoolOutput)
}

func (o VirtualGatewayGrpcConnectionPoolPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayGrpcConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewayHealthCheckPolicy struct {
	HealthyThreshold   int     `pulumi:"healthyThreshold"`
	IntervalMillis     int     `pulumi:"intervalMillis"`
	Path               *string `pulumi:"path"`
	Port               *int    `pulumi:"port"`
	Protocol           string  `pulumi:"protocol"`
	TimeoutMillis      int     `pulumi:"timeoutMillis"`
	UnhealthyThreshold int     `pulumi:"unhealthyThreshold"`
}

// VirtualGatewayHealthCheckPolicyInput is an input type that accepts VirtualGatewayHealthCheckPolicyArgs and VirtualGatewayHealthCheckPolicyOutput values.
// You can construct a concrete instance of `VirtualGatewayHealthCheckPolicyInput` via:
//
//          VirtualGatewayHealthCheckPolicyArgs{...}
type VirtualGatewayHealthCheckPolicyInput interface {
	pulumi.Input

	ToVirtualGatewayHealthCheckPolicyOutput() VirtualGatewayHealthCheckPolicyOutput
	ToVirtualGatewayHealthCheckPolicyOutputWithContext(context.Context) VirtualGatewayHealthCheckPolicyOutput
}

type VirtualGatewayHealthCheckPolicyArgs struct {
	HealthyThreshold   pulumi.IntInput       `pulumi:"healthyThreshold"`
	IntervalMillis     pulumi.IntInput       `pulumi:"intervalMillis"`
	Path               pulumi.StringPtrInput `pulumi:"path"`
	Port               pulumi.IntPtrInput    `pulumi:"port"`
	Protocol           pulumi.StringInput    `pulumi:"protocol"`
	TimeoutMillis      pulumi.IntInput       `pulumi:"timeoutMillis"`
	UnhealthyThreshold pulumi.IntInput       `pulumi:"unhealthyThreshold"`
}

func (VirtualGatewayHealthCheckPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayHealthCheckPolicy)(nil)).Elem()
}

func (i VirtualGatewayHealthCheckPolicyArgs) ToVirtualGatewayHealthCheckPolicyOutput() VirtualGatewayHealthCheckPolicyOutput {
	return i.ToVirtualGatewayHealthCheckPolicyOutputWithContext(context.Background())
}

func (i VirtualGatewayHealthCheckPolicyArgs) ToVirtualGatewayHealthCheckPolicyOutputWithContext(ctx context.Context) VirtualGatewayHealthCheckPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHealthCheckPolicyOutput)
}

func (i VirtualGatewayHealthCheckPolicyArgs) ToVirtualGatewayHealthCheckPolicyPtrOutput() VirtualGatewayHealthCheckPolicyPtrOutput {
	return i.ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayHealthCheckPolicyArgs) ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayHealthCheckPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHealthCheckPolicyOutput).ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(ctx)
}

// VirtualGatewayHealthCheckPolicyPtrInput is an input type that accepts VirtualGatewayHealthCheckPolicyArgs, VirtualGatewayHealthCheckPolicyPtr and VirtualGatewayHealthCheckPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayHealthCheckPolicyPtrInput` via:
//
//          VirtualGatewayHealthCheckPolicyArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayHealthCheckPolicyPtrInput interface {
	pulumi.Input

	ToVirtualGatewayHealthCheckPolicyPtrOutput() VirtualGatewayHealthCheckPolicyPtrOutput
	ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(context.Context) VirtualGatewayHealthCheckPolicyPtrOutput
}

type virtualGatewayHealthCheckPolicyPtrType VirtualGatewayHealthCheckPolicyArgs

func VirtualGatewayHealthCheckPolicyPtr(v *VirtualGatewayHealthCheckPolicyArgs) VirtualGatewayHealthCheckPolicyPtrInput {
	return (*virtualGatewayHealthCheckPolicyPtrType)(v)
}

func (*virtualGatewayHealthCheckPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayHealthCheckPolicy)(nil)).Elem()
}

func (i *virtualGatewayHealthCheckPolicyPtrType) ToVirtualGatewayHealthCheckPolicyPtrOutput() VirtualGatewayHealthCheckPolicyPtrOutput {
	return i.ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayHealthCheckPolicyPtrType) ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayHealthCheckPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHealthCheckPolicyPtrOutput)
}

type VirtualGatewayHealthCheckPolicyOutput struct{ *pulumi.OutputState }

func (VirtualGatewayHealthCheckPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayHealthCheckPolicy)(nil)).Elem()
}

func (o VirtualGatewayHealthCheckPolicyOutput) ToVirtualGatewayHealthCheckPolicyOutput() VirtualGatewayHealthCheckPolicyOutput {
	return o
}

func (o VirtualGatewayHealthCheckPolicyOutput) ToVirtualGatewayHealthCheckPolicyOutputWithContext(ctx context.Context) VirtualGatewayHealthCheckPolicyOutput {
	return o
}

func (o VirtualGatewayHealthCheckPolicyOutput) ToVirtualGatewayHealthCheckPolicyPtrOutput() VirtualGatewayHealthCheckPolicyPtrOutput {
	return o.ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayHealthCheckPolicyOutput) ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayHealthCheckPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayHealthCheckPolicy) *VirtualGatewayHealthCheckPolicy {
		return &v
	}).(VirtualGatewayHealthCheckPolicyPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

func (o VirtualGatewayHealthCheckPolicyOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayHealthCheckPolicy) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualGatewayHealthCheckPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayHealthCheckPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayHealthCheckPolicy)(nil)).Elem()
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) ToVirtualGatewayHealthCheckPolicyPtrOutput() VirtualGatewayHealthCheckPolicyPtrOutput {
	return o
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) ToVirtualGatewayHealthCheckPolicyPtrOutputWithContext(ctx context.Context) VirtualGatewayHealthCheckPolicyPtrOutput {
	return o
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) Elem() VirtualGatewayHealthCheckPolicyOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) VirtualGatewayHealthCheckPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayHealthCheckPolicy
		return ret
	}).(VirtualGatewayHealthCheckPolicyOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) IntervalMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalMillis
	}).(pulumi.IntPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) TimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutMillis
	}).(pulumi.IntPtrOutput)
}

func (o VirtualGatewayHealthCheckPolicyPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHealthCheckPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewayHttp2ConnectionPool struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualGatewayHttp2ConnectionPoolInput is an input type that accepts VirtualGatewayHttp2ConnectionPoolArgs and VirtualGatewayHttp2ConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualGatewayHttp2ConnectionPoolInput` via:
//
//          VirtualGatewayHttp2ConnectionPoolArgs{...}
type VirtualGatewayHttp2ConnectionPoolInput interface {
	pulumi.Input

	ToVirtualGatewayHttp2ConnectionPoolOutput() VirtualGatewayHttp2ConnectionPoolOutput
	ToVirtualGatewayHttp2ConnectionPoolOutputWithContext(context.Context) VirtualGatewayHttp2ConnectionPoolOutput
}

type VirtualGatewayHttp2ConnectionPoolArgs struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualGatewayHttp2ConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayHttp2ConnectionPool)(nil)).Elem()
}

func (i VirtualGatewayHttp2ConnectionPoolArgs) ToVirtualGatewayHttp2ConnectionPoolOutput() VirtualGatewayHttp2ConnectionPoolOutput {
	return i.ToVirtualGatewayHttp2ConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualGatewayHttp2ConnectionPoolArgs) ToVirtualGatewayHttp2ConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayHttp2ConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHttp2ConnectionPoolOutput)
}

func (i VirtualGatewayHttp2ConnectionPoolArgs) ToVirtualGatewayHttp2ConnectionPoolPtrOutput() VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return i.ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayHttp2ConnectionPoolArgs) ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHttp2ConnectionPoolOutput).ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualGatewayHttp2ConnectionPoolPtrInput is an input type that accepts VirtualGatewayHttp2ConnectionPoolArgs, VirtualGatewayHttp2ConnectionPoolPtr and VirtualGatewayHttp2ConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayHttp2ConnectionPoolPtrInput` via:
//
//          VirtualGatewayHttp2ConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayHttp2ConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualGatewayHttp2ConnectionPoolPtrOutput() VirtualGatewayHttp2ConnectionPoolPtrOutput
	ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(context.Context) VirtualGatewayHttp2ConnectionPoolPtrOutput
}

type virtualGatewayHttp2ConnectionPoolPtrType VirtualGatewayHttp2ConnectionPoolArgs

func VirtualGatewayHttp2ConnectionPoolPtr(v *VirtualGatewayHttp2ConnectionPoolArgs) VirtualGatewayHttp2ConnectionPoolPtrInput {
	return (*virtualGatewayHttp2ConnectionPoolPtrType)(v)
}

func (*virtualGatewayHttp2ConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayHttp2ConnectionPool)(nil)).Elem()
}

func (i *virtualGatewayHttp2ConnectionPoolPtrType) ToVirtualGatewayHttp2ConnectionPoolPtrOutput() VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return i.ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayHttp2ConnectionPoolPtrType) ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHttp2ConnectionPoolPtrOutput)
}

type VirtualGatewayHttp2ConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualGatewayHttp2ConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayHttp2ConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayHttp2ConnectionPoolOutput) ToVirtualGatewayHttp2ConnectionPoolOutput() VirtualGatewayHttp2ConnectionPoolOutput {
	return o
}

func (o VirtualGatewayHttp2ConnectionPoolOutput) ToVirtualGatewayHttp2ConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayHttp2ConnectionPoolOutput {
	return o
}

func (o VirtualGatewayHttp2ConnectionPoolOutput) ToVirtualGatewayHttp2ConnectionPoolPtrOutput() VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return o.ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayHttp2ConnectionPoolOutput) ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayHttp2ConnectionPool) *VirtualGatewayHttp2ConnectionPool {
		return &v
	}).(VirtualGatewayHttp2ConnectionPoolPtrOutput)
}

func (o VirtualGatewayHttp2ConnectionPoolOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayHttp2ConnectionPool) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualGatewayHttp2ConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayHttp2ConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayHttp2ConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayHttp2ConnectionPoolPtrOutput) ToVirtualGatewayHttp2ConnectionPoolPtrOutput() VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayHttp2ConnectionPoolPtrOutput) ToVirtualGatewayHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttp2ConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayHttp2ConnectionPoolPtrOutput) Elem() VirtualGatewayHttp2ConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualGatewayHttp2ConnectionPool) VirtualGatewayHttp2ConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayHttp2ConnectionPool
		return ret
	}).(VirtualGatewayHttp2ConnectionPoolOutput)
}

func (o VirtualGatewayHttp2ConnectionPoolPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHttp2ConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewayHttpConnectionPool struct {
	MaxConnections     int  `pulumi:"maxConnections"`
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// VirtualGatewayHttpConnectionPoolInput is an input type that accepts VirtualGatewayHttpConnectionPoolArgs and VirtualGatewayHttpConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualGatewayHttpConnectionPoolInput` via:
//
//          VirtualGatewayHttpConnectionPoolArgs{...}
type VirtualGatewayHttpConnectionPoolInput interface {
	pulumi.Input

	ToVirtualGatewayHttpConnectionPoolOutput() VirtualGatewayHttpConnectionPoolOutput
	ToVirtualGatewayHttpConnectionPoolOutputWithContext(context.Context) VirtualGatewayHttpConnectionPoolOutput
}

type VirtualGatewayHttpConnectionPoolArgs struct {
	MaxConnections     pulumi.IntInput    `pulumi:"maxConnections"`
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (VirtualGatewayHttpConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayHttpConnectionPool)(nil)).Elem()
}

func (i VirtualGatewayHttpConnectionPoolArgs) ToVirtualGatewayHttpConnectionPoolOutput() VirtualGatewayHttpConnectionPoolOutput {
	return i.ToVirtualGatewayHttpConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualGatewayHttpConnectionPoolArgs) ToVirtualGatewayHttpConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayHttpConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHttpConnectionPoolOutput)
}

func (i VirtualGatewayHttpConnectionPoolArgs) ToVirtualGatewayHttpConnectionPoolPtrOutput() VirtualGatewayHttpConnectionPoolPtrOutput {
	return i.ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayHttpConnectionPoolArgs) ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttpConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHttpConnectionPoolOutput).ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualGatewayHttpConnectionPoolPtrInput is an input type that accepts VirtualGatewayHttpConnectionPoolArgs, VirtualGatewayHttpConnectionPoolPtr and VirtualGatewayHttpConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayHttpConnectionPoolPtrInput` via:
//
//          VirtualGatewayHttpConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayHttpConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualGatewayHttpConnectionPoolPtrOutput() VirtualGatewayHttpConnectionPoolPtrOutput
	ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(context.Context) VirtualGatewayHttpConnectionPoolPtrOutput
}

type virtualGatewayHttpConnectionPoolPtrType VirtualGatewayHttpConnectionPoolArgs

func VirtualGatewayHttpConnectionPoolPtr(v *VirtualGatewayHttpConnectionPoolArgs) VirtualGatewayHttpConnectionPoolPtrInput {
	return (*virtualGatewayHttpConnectionPoolPtrType)(v)
}

func (*virtualGatewayHttpConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayHttpConnectionPool)(nil)).Elem()
}

func (i *virtualGatewayHttpConnectionPoolPtrType) ToVirtualGatewayHttpConnectionPoolPtrOutput() VirtualGatewayHttpConnectionPoolPtrOutput {
	return i.ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayHttpConnectionPoolPtrType) ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttpConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayHttpConnectionPoolPtrOutput)
}

type VirtualGatewayHttpConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualGatewayHttpConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayHttpConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayHttpConnectionPoolOutput) ToVirtualGatewayHttpConnectionPoolOutput() VirtualGatewayHttpConnectionPoolOutput {
	return o
}

func (o VirtualGatewayHttpConnectionPoolOutput) ToVirtualGatewayHttpConnectionPoolOutputWithContext(ctx context.Context) VirtualGatewayHttpConnectionPoolOutput {
	return o
}

func (o VirtualGatewayHttpConnectionPoolOutput) ToVirtualGatewayHttpConnectionPoolPtrOutput() VirtualGatewayHttpConnectionPoolPtrOutput {
	return o.ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayHttpConnectionPoolOutput) ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttpConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayHttpConnectionPool) *VirtualGatewayHttpConnectionPool {
		return &v
	}).(VirtualGatewayHttpConnectionPoolPtrOutput)
}

func (o VirtualGatewayHttpConnectionPoolOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayHttpConnectionPool) int { return v.MaxConnections }).(pulumi.IntOutput)
}

func (o VirtualGatewayHttpConnectionPoolOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualGatewayHttpConnectionPool) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type VirtualGatewayHttpConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayHttpConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayHttpConnectionPool)(nil)).Elem()
}

func (o VirtualGatewayHttpConnectionPoolPtrOutput) ToVirtualGatewayHttpConnectionPoolPtrOutput() VirtualGatewayHttpConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayHttpConnectionPoolPtrOutput) ToVirtualGatewayHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualGatewayHttpConnectionPoolPtrOutput {
	return o
}

func (o VirtualGatewayHttpConnectionPoolPtrOutput) Elem() VirtualGatewayHttpConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualGatewayHttpConnectionPool) VirtualGatewayHttpConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayHttpConnectionPool
		return ret
	}).(VirtualGatewayHttpConnectionPoolOutput)
}

func (o VirtualGatewayHttpConnectionPoolPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHttpConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o VirtualGatewayHttpConnectionPoolPtrOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayHttpConnectionPool) *int {
		if v == nil {
			return nil
		}
		return v.MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualGatewayListener struct {
	ConnectionPool *VirtualGatewayConnectionPool    `pulumi:"connectionPool"`
	HealthCheck    *VirtualGatewayHealthCheckPolicy `pulumi:"healthCheck"`
	PortMapping    VirtualGatewayPortMapping        `pulumi:"portMapping"`
	TLS            *VirtualGatewayListenerTls       `pulumi:"tLS"`
}

// VirtualGatewayListenerInput is an input type that accepts VirtualGatewayListenerArgs and VirtualGatewayListenerOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerInput` via:
//
//          VirtualGatewayListenerArgs{...}
type VirtualGatewayListenerInput interface {
	pulumi.Input

	ToVirtualGatewayListenerOutput() VirtualGatewayListenerOutput
	ToVirtualGatewayListenerOutputWithContext(context.Context) VirtualGatewayListenerOutput
}

type VirtualGatewayListenerArgs struct {
	ConnectionPool VirtualGatewayConnectionPoolPtrInput    `pulumi:"connectionPool"`
	HealthCheck    VirtualGatewayHealthCheckPolicyPtrInput `pulumi:"healthCheck"`
	PortMapping    VirtualGatewayPortMappingInput          `pulumi:"portMapping"`
	TLS            VirtualGatewayListenerTlsPtrInput       `pulumi:"tLS"`
}

func (VirtualGatewayListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListener)(nil)).Elem()
}

func (i VirtualGatewayListenerArgs) ToVirtualGatewayListenerOutput() VirtualGatewayListenerOutput {
	return i.ToVirtualGatewayListenerOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerArgs) ToVirtualGatewayListenerOutputWithContext(ctx context.Context) VirtualGatewayListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerOutput)
}

// VirtualGatewayListenerArrayInput is an input type that accepts VirtualGatewayListenerArray and VirtualGatewayListenerArrayOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerArrayInput` via:
//
//          VirtualGatewayListenerArray{ VirtualGatewayListenerArgs{...} }
type VirtualGatewayListenerArrayInput interface {
	pulumi.Input

	ToVirtualGatewayListenerArrayOutput() VirtualGatewayListenerArrayOutput
	ToVirtualGatewayListenerArrayOutputWithContext(context.Context) VirtualGatewayListenerArrayOutput
}

type VirtualGatewayListenerArray []VirtualGatewayListenerInput

func (VirtualGatewayListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayListener)(nil)).Elem()
}

func (i VirtualGatewayListenerArray) ToVirtualGatewayListenerArrayOutput() VirtualGatewayListenerArrayOutput {
	return i.ToVirtualGatewayListenerArrayOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerArray) ToVirtualGatewayListenerArrayOutputWithContext(ctx context.Context) VirtualGatewayListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerArrayOutput)
}

type VirtualGatewayListenerOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListener)(nil)).Elem()
}

func (o VirtualGatewayListenerOutput) ToVirtualGatewayListenerOutput() VirtualGatewayListenerOutput {
	return o
}

func (o VirtualGatewayListenerOutput) ToVirtualGatewayListenerOutputWithContext(ctx context.Context) VirtualGatewayListenerOutput {
	return o
}

func (o VirtualGatewayListenerOutput) ConnectionPool() VirtualGatewayConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListener) *VirtualGatewayConnectionPool { return v.ConnectionPool }).(VirtualGatewayConnectionPoolPtrOutput)
}

func (o VirtualGatewayListenerOutput) HealthCheck() VirtualGatewayHealthCheckPolicyPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListener) *VirtualGatewayHealthCheckPolicy { return v.HealthCheck }).(VirtualGatewayHealthCheckPolicyPtrOutput)
}

func (o VirtualGatewayListenerOutput) PortMapping() VirtualGatewayPortMappingOutput {
	return o.ApplyT(func(v VirtualGatewayListener) VirtualGatewayPortMapping { return v.PortMapping }).(VirtualGatewayPortMappingOutput)
}

func (o VirtualGatewayListenerOutput) TLS() VirtualGatewayListenerTlsPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListener) *VirtualGatewayListenerTls { return v.TLS }).(VirtualGatewayListenerTlsPtrOutput)
}

type VirtualGatewayListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayListener)(nil)).Elem()
}

func (o VirtualGatewayListenerArrayOutput) ToVirtualGatewayListenerArrayOutput() VirtualGatewayListenerArrayOutput {
	return o
}

func (o VirtualGatewayListenerArrayOutput) ToVirtualGatewayListenerArrayOutputWithContext(ctx context.Context) VirtualGatewayListenerArrayOutput {
	return o
}

func (o VirtualGatewayListenerArrayOutput) Index(i pulumi.IntInput) VirtualGatewayListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewayListener {
		return vs[0].([]VirtualGatewayListener)[vs[1].(int)]
	}).(VirtualGatewayListenerOutput)
}

type VirtualGatewayListenerTls struct {
	Certificate VirtualGatewayListenerTlsCertificate        `pulumi:"certificate"`
	Mode        string                                      `pulumi:"mode"`
	Validation  *VirtualGatewayListenerTlsValidationContext `pulumi:"validation"`
}

// VirtualGatewayListenerTlsInput is an input type that accepts VirtualGatewayListenerTlsArgs and VirtualGatewayListenerTlsOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsInput` via:
//
//          VirtualGatewayListenerTlsArgs{...}
type VirtualGatewayListenerTlsInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsOutput() VirtualGatewayListenerTlsOutput
	ToVirtualGatewayListenerTlsOutputWithContext(context.Context) VirtualGatewayListenerTlsOutput
}

type VirtualGatewayListenerTlsArgs struct {
	Certificate VirtualGatewayListenerTlsCertificateInput          `pulumi:"certificate"`
	Mode        pulumi.StringInput                                 `pulumi:"mode"`
	Validation  VirtualGatewayListenerTlsValidationContextPtrInput `pulumi:"validation"`
}

func (VirtualGatewayListenerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTls)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsArgs) ToVirtualGatewayListenerTlsOutput() VirtualGatewayListenerTlsOutput {
	return i.ToVirtualGatewayListenerTlsOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsArgs) ToVirtualGatewayListenerTlsOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsOutput)
}

func (i VirtualGatewayListenerTlsArgs) ToVirtualGatewayListenerTlsPtrOutput() VirtualGatewayListenerTlsPtrOutput {
	return i.ToVirtualGatewayListenerTlsPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsArgs) ToVirtualGatewayListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsOutput).ToVirtualGatewayListenerTlsPtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsPtrInput is an input type that accepts VirtualGatewayListenerTlsArgs, VirtualGatewayListenerTlsPtr and VirtualGatewayListenerTlsPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsPtrInput` via:
//
//          VirtualGatewayListenerTlsArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsPtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsPtrOutput() VirtualGatewayListenerTlsPtrOutput
	ToVirtualGatewayListenerTlsPtrOutputWithContext(context.Context) VirtualGatewayListenerTlsPtrOutput
}

type virtualGatewayListenerTlsPtrType VirtualGatewayListenerTlsArgs

func VirtualGatewayListenerTlsPtr(v *VirtualGatewayListenerTlsArgs) VirtualGatewayListenerTlsPtrInput {
	return (*virtualGatewayListenerTlsPtrType)(v)
}

func (*virtualGatewayListenerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTls)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsPtrType) ToVirtualGatewayListenerTlsPtrOutput() VirtualGatewayListenerTlsPtrOutput {
	return i.ToVirtualGatewayListenerTlsPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsPtrType) ToVirtualGatewayListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsPtrOutput)
}

type VirtualGatewayListenerTlsOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTls)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsOutput) ToVirtualGatewayListenerTlsOutput() VirtualGatewayListenerTlsOutput {
	return o
}

func (o VirtualGatewayListenerTlsOutput) ToVirtualGatewayListenerTlsOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsOutput {
	return o
}

func (o VirtualGatewayListenerTlsOutput) ToVirtualGatewayListenerTlsPtrOutput() VirtualGatewayListenerTlsPtrOutput {
	return o.ToVirtualGatewayListenerTlsPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsOutput) ToVirtualGatewayListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTls) *VirtualGatewayListenerTls {
		return &v
	}).(VirtualGatewayListenerTlsPtrOutput)
}

func (o VirtualGatewayListenerTlsOutput) Certificate() VirtualGatewayListenerTlsCertificateOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTls) VirtualGatewayListenerTlsCertificate { return v.Certificate }).(VirtualGatewayListenerTlsCertificateOutput)
}

func (o VirtualGatewayListenerTlsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTls) string { return v.Mode }).(pulumi.StringOutput)
}

func (o VirtualGatewayListenerTlsOutput) Validation() VirtualGatewayListenerTlsValidationContextPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTls) *VirtualGatewayListenerTlsValidationContext { return v.Validation }).(VirtualGatewayListenerTlsValidationContextPtrOutput)
}

type VirtualGatewayListenerTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTls)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsPtrOutput) ToVirtualGatewayListenerTlsPtrOutput() VirtualGatewayListenerTlsPtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsPtrOutput) ToVirtualGatewayListenerTlsPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsPtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsPtrOutput) Elem() VirtualGatewayListenerTlsOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTls) VirtualGatewayListenerTls {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTls
		return ret
	}).(VirtualGatewayListenerTlsOutput)
}

func (o VirtualGatewayListenerTlsPtrOutput) Certificate() VirtualGatewayListenerTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTls) *VirtualGatewayListenerTlsCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(VirtualGatewayListenerTlsCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTls) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o VirtualGatewayListenerTlsPtrOutput) Validation() VirtualGatewayListenerTlsValidationContextPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTls) *VirtualGatewayListenerTlsValidationContext {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(VirtualGatewayListenerTlsValidationContextPtrOutput)
}

type VirtualGatewayListenerTlsAcmCertificate struct {
	CertificateArn string `pulumi:"certificateArn"`
}

// VirtualGatewayListenerTlsAcmCertificateInput is an input type that accepts VirtualGatewayListenerTlsAcmCertificateArgs and VirtualGatewayListenerTlsAcmCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsAcmCertificateInput` via:
//
//          VirtualGatewayListenerTlsAcmCertificateArgs{...}
type VirtualGatewayListenerTlsAcmCertificateInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsAcmCertificateOutput() VirtualGatewayListenerTlsAcmCertificateOutput
	ToVirtualGatewayListenerTlsAcmCertificateOutputWithContext(context.Context) VirtualGatewayListenerTlsAcmCertificateOutput
}

type VirtualGatewayListenerTlsAcmCertificateArgs struct {
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (VirtualGatewayListenerTlsAcmCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsAcmCertificate)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsAcmCertificateArgs) ToVirtualGatewayListenerTlsAcmCertificateOutput() VirtualGatewayListenerTlsAcmCertificateOutput {
	return i.ToVirtualGatewayListenerTlsAcmCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsAcmCertificateArgs) ToVirtualGatewayListenerTlsAcmCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsAcmCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsAcmCertificateOutput)
}

func (i VirtualGatewayListenerTlsAcmCertificateArgs) ToVirtualGatewayListenerTlsAcmCertificatePtrOutput() VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsAcmCertificateArgs) ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsAcmCertificateOutput).ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsAcmCertificatePtrInput is an input type that accepts VirtualGatewayListenerTlsAcmCertificateArgs, VirtualGatewayListenerTlsAcmCertificatePtr and VirtualGatewayListenerTlsAcmCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsAcmCertificatePtrInput` via:
//
//          VirtualGatewayListenerTlsAcmCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsAcmCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsAcmCertificatePtrOutput() VirtualGatewayListenerTlsAcmCertificatePtrOutput
	ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(context.Context) VirtualGatewayListenerTlsAcmCertificatePtrOutput
}

type virtualGatewayListenerTlsAcmCertificatePtrType VirtualGatewayListenerTlsAcmCertificateArgs

func VirtualGatewayListenerTlsAcmCertificatePtr(v *VirtualGatewayListenerTlsAcmCertificateArgs) VirtualGatewayListenerTlsAcmCertificatePtrInput {
	return (*virtualGatewayListenerTlsAcmCertificatePtrType)(v)
}

func (*virtualGatewayListenerTlsAcmCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsAcmCertificate)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsAcmCertificatePtrType) ToVirtualGatewayListenerTlsAcmCertificatePtrOutput() VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsAcmCertificatePtrType) ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsAcmCertificatePtrOutput)
}

type VirtualGatewayListenerTlsAcmCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsAcmCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsAcmCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsAcmCertificateOutput) ToVirtualGatewayListenerTlsAcmCertificateOutput() VirtualGatewayListenerTlsAcmCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsAcmCertificateOutput) ToVirtualGatewayListenerTlsAcmCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsAcmCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsAcmCertificateOutput) ToVirtualGatewayListenerTlsAcmCertificatePtrOutput() VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return o.ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsAcmCertificateOutput) ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTlsAcmCertificate) *VirtualGatewayListenerTlsAcmCertificate {
		return &v
	}).(VirtualGatewayListenerTlsAcmCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsAcmCertificateOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsAcmCertificate) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type VirtualGatewayListenerTlsAcmCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsAcmCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsAcmCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsAcmCertificatePtrOutput) ToVirtualGatewayListenerTlsAcmCertificatePtrOutput() VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsAcmCertificatePtrOutput) ToVirtualGatewayListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsAcmCertificatePtrOutput) Elem() VirtualGatewayListenerTlsAcmCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsAcmCertificate) VirtualGatewayListenerTlsAcmCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTlsAcmCertificate
		return ret
	}).(VirtualGatewayListenerTlsAcmCertificateOutput)
}

func (o VirtualGatewayListenerTlsAcmCertificatePtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsAcmCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewayListenerTlsCertificate struct {
	ACM  *VirtualGatewayListenerTlsAcmCertificate  `pulumi:"aCM"`
	File *VirtualGatewayListenerTlsFileCertificate `pulumi:"file"`
	SDS  *VirtualGatewayListenerTlsSdsCertificate  `pulumi:"sDS"`
}

// VirtualGatewayListenerTlsCertificateInput is an input type that accepts VirtualGatewayListenerTlsCertificateArgs and VirtualGatewayListenerTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsCertificateInput` via:
//
//          VirtualGatewayListenerTlsCertificateArgs{...}
type VirtualGatewayListenerTlsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsCertificateOutput() VirtualGatewayListenerTlsCertificateOutput
	ToVirtualGatewayListenerTlsCertificateOutputWithContext(context.Context) VirtualGatewayListenerTlsCertificateOutput
}

type VirtualGatewayListenerTlsCertificateArgs struct {
	ACM  VirtualGatewayListenerTlsAcmCertificatePtrInput  `pulumi:"aCM"`
	File VirtualGatewayListenerTlsFileCertificatePtrInput `pulumi:"file"`
	SDS  VirtualGatewayListenerTlsSdsCertificatePtrInput  `pulumi:"sDS"`
}

func (VirtualGatewayListenerTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsCertificate)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsCertificateArgs) ToVirtualGatewayListenerTlsCertificateOutput() VirtualGatewayListenerTlsCertificateOutput {
	return i.ToVirtualGatewayListenerTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsCertificateArgs) ToVirtualGatewayListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsCertificateOutput)
}

func (i VirtualGatewayListenerTlsCertificateArgs) ToVirtualGatewayListenerTlsCertificatePtrOutput() VirtualGatewayListenerTlsCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsCertificateArgs) ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsCertificateOutput).ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsCertificatePtrInput is an input type that accepts VirtualGatewayListenerTlsCertificateArgs, VirtualGatewayListenerTlsCertificatePtr and VirtualGatewayListenerTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsCertificatePtrInput` via:
//
//          VirtualGatewayListenerTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsCertificatePtrOutput() VirtualGatewayListenerTlsCertificatePtrOutput
	ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(context.Context) VirtualGatewayListenerTlsCertificatePtrOutput
}

type virtualGatewayListenerTlsCertificatePtrType VirtualGatewayListenerTlsCertificateArgs

func VirtualGatewayListenerTlsCertificatePtr(v *VirtualGatewayListenerTlsCertificateArgs) VirtualGatewayListenerTlsCertificatePtrInput {
	return (*virtualGatewayListenerTlsCertificatePtrType)(v)
}

func (*virtualGatewayListenerTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsCertificate)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsCertificatePtrType) ToVirtualGatewayListenerTlsCertificatePtrOutput() VirtualGatewayListenerTlsCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsCertificatePtrType) ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsCertificatePtrOutput)
}

type VirtualGatewayListenerTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsCertificateOutput) ToVirtualGatewayListenerTlsCertificateOutput() VirtualGatewayListenerTlsCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsCertificateOutput) ToVirtualGatewayListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsCertificateOutput) ToVirtualGatewayListenerTlsCertificatePtrOutput() VirtualGatewayListenerTlsCertificatePtrOutput {
	return o.ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsCertificateOutput) ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsCertificate {
		return &v
	}).(VirtualGatewayListenerTlsCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsCertificateOutput) ACM() VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsAcmCertificate { return v.ACM }).(VirtualGatewayListenerTlsAcmCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsCertificateOutput) File() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsFileCertificate { return v.File }).(VirtualGatewayListenerTlsFileCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsCertificateOutput) SDS() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsSdsCertificate { return v.SDS }).(VirtualGatewayListenerTlsSdsCertificatePtrOutput)
}

type VirtualGatewayListenerTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsCertificatePtrOutput) ToVirtualGatewayListenerTlsCertificatePtrOutput() VirtualGatewayListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsCertificatePtrOutput) ToVirtualGatewayListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsCertificatePtrOutput) Elem() VirtualGatewayListenerTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsCertificate) VirtualGatewayListenerTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTlsCertificate
		return ret
	}).(VirtualGatewayListenerTlsCertificateOutput)
}

func (o VirtualGatewayListenerTlsCertificatePtrOutput) ACM() VirtualGatewayListenerTlsAcmCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsAcmCertificate {
		if v == nil {
			return nil
		}
		return v.ACM
	}).(VirtualGatewayListenerTlsAcmCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsCertificatePtrOutput) File() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsFileCertificate {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewayListenerTlsFileCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsCertificatePtrOutput) SDS() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsCertificate) *VirtualGatewayListenerTlsSdsCertificate {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualGatewayListenerTlsSdsCertificatePtrOutput)
}

type VirtualGatewayListenerTlsFileCertificate struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// VirtualGatewayListenerTlsFileCertificateInput is an input type that accepts VirtualGatewayListenerTlsFileCertificateArgs and VirtualGatewayListenerTlsFileCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsFileCertificateInput` via:
//
//          VirtualGatewayListenerTlsFileCertificateArgs{...}
type VirtualGatewayListenerTlsFileCertificateInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsFileCertificateOutput() VirtualGatewayListenerTlsFileCertificateOutput
	ToVirtualGatewayListenerTlsFileCertificateOutputWithContext(context.Context) VirtualGatewayListenerTlsFileCertificateOutput
}

type VirtualGatewayListenerTlsFileCertificateArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualGatewayListenerTlsFileCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsFileCertificate)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsFileCertificateArgs) ToVirtualGatewayListenerTlsFileCertificateOutput() VirtualGatewayListenerTlsFileCertificateOutput {
	return i.ToVirtualGatewayListenerTlsFileCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsFileCertificateArgs) ToVirtualGatewayListenerTlsFileCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsFileCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsFileCertificateOutput)
}

func (i VirtualGatewayListenerTlsFileCertificateArgs) ToVirtualGatewayListenerTlsFileCertificatePtrOutput() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsFileCertificateArgs) ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsFileCertificateOutput).ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsFileCertificatePtrInput is an input type that accepts VirtualGatewayListenerTlsFileCertificateArgs, VirtualGatewayListenerTlsFileCertificatePtr and VirtualGatewayListenerTlsFileCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsFileCertificatePtrInput` via:
//
//          VirtualGatewayListenerTlsFileCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsFileCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsFileCertificatePtrOutput() VirtualGatewayListenerTlsFileCertificatePtrOutput
	ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(context.Context) VirtualGatewayListenerTlsFileCertificatePtrOutput
}

type virtualGatewayListenerTlsFileCertificatePtrType VirtualGatewayListenerTlsFileCertificateArgs

func VirtualGatewayListenerTlsFileCertificatePtr(v *VirtualGatewayListenerTlsFileCertificateArgs) VirtualGatewayListenerTlsFileCertificatePtrInput {
	return (*virtualGatewayListenerTlsFileCertificatePtrType)(v)
}

func (*virtualGatewayListenerTlsFileCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsFileCertificate)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsFileCertificatePtrType) ToVirtualGatewayListenerTlsFileCertificatePtrOutput() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsFileCertificatePtrType) ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsFileCertificatePtrOutput)
}

type VirtualGatewayListenerTlsFileCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsFileCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsFileCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsFileCertificateOutput) ToVirtualGatewayListenerTlsFileCertificateOutput() VirtualGatewayListenerTlsFileCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsFileCertificateOutput) ToVirtualGatewayListenerTlsFileCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsFileCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsFileCertificateOutput) ToVirtualGatewayListenerTlsFileCertificatePtrOutput() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o.ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsFileCertificateOutput) ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTlsFileCertificate) *VirtualGatewayListenerTlsFileCertificate {
		return &v
	}).(VirtualGatewayListenerTlsFileCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsFileCertificateOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsFileCertificate) string { return v.CertificateChain }).(pulumi.StringOutput)
}

func (o VirtualGatewayListenerTlsFileCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsFileCertificate) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualGatewayListenerTlsFileCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsFileCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsFileCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsFileCertificatePtrOutput) ToVirtualGatewayListenerTlsFileCertificatePtrOutput() VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsFileCertificatePtrOutput) ToVirtualGatewayListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsFileCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsFileCertificatePtrOutput) Elem() VirtualGatewayListenerTlsFileCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsFileCertificate) VirtualGatewayListenerTlsFileCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTlsFileCertificate
		return ret
	}).(VirtualGatewayListenerTlsFileCertificateOutput)
}

func (o VirtualGatewayListenerTlsFileCertificatePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsFileCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

func (o VirtualGatewayListenerTlsFileCertificatePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsFileCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewayListenerTlsSdsCertificate struct {
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewayListenerTlsSdsCertificateInput is an input type that accepts VirtualGatewayListenerTlsSdsCertificateArgs and VirtualGatewayListenerTlsSdsCertificateOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsSdsCertificateInput` via:
//
//          VirtualGatewayListenerTlsSdsCertificateArgs{...}
type VirtualGatewayListenerTlsSdsCertificateInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsSdsCertificateOutput() VirtualGatewayListenerTlsSdsCertificateOutput
	ToVirtualGatewayListenerTlsSdsCertificateOutputWithContext(context.Context) VirtualGatewayListenerTlsSdsCertificateOutput
}

type VirtualGatewayListenerTlsSdsCertificateArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewayListenerTlsSdsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsSdsCertificate)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsSdsCertificateArgs) ToVirtualGatewayListenerTlsSdsCertificateOutput() VirtualGatewayListenerTlsSdsCertificateOutput {
	return i.ToVirtualGatewayListenerTlsSdsCertificateOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsSdsCertificateArgs) ToVirtualGatewayListenerTlsSdsCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsSdsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsSdsCertificateOutput)
}

func (i VirtualGatewayListenerTlsSdsCertificateArgs) ToVirtualGatewayListenerTlsSdsCertificatePtrOutput() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsSdsCertificateArgs) ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsSdsCertificateOutput).ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsSdsCertificatePtrInput is an input type that accepts VirtualGatewayListenerTlsSdsCertificateArgs, VirtualGatewayListenerTlsSdsCertificatePtr and VirtualGatewayListenerTlsSdsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsSdsCertificatePtrInput` via:
//
//          VirtualGatewayListenerTlsSdsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsSdsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsSdsCertificatePtrOutput() VirtualGatewayListenerTlsSdsCertificatePtrOutput
	ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(context.Context) VirtualGatewayListenerTlsSdsCertificatePtrOutput
}

type virtualGatewayListenerTlsSdsCertificatePtrType VirtualGatewayListenerTlsSdsCertificateArgs

func VirtualGatewayListenerTlsSdsCertificatePtr(v *VirtualGatewayListenerTlsSdsCertificateArgs) VirtualGatewayListenerTlsSdsCertificatePtrInput {
	return (*virtualGatewayListenerTlsSdsCertificatePtrType)(v)
}

func (*virtualGatewayListenerTlsSdsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsSdsCertificate)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsSdsCertificatePtrType) ToVirtualGatewayListenerTlsSdsCertificatePtrOutput() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return i.ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsSdsCertificatePtrType) ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsSdsCertificatePtrOutput)
}

type VirtualGatewayListenerTlsSdsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsSdsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsSdsCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsSdsCertificateOutput) ToVirtualGatewayListenerTlsSdsCertificateOutput() VirtualGatewayListenerTlsSdsCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsSdsCertificateOutput) ToVirtualGatewayListenerTlsSdsCertificateOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsSdsCertificateOutput {
	return o
}

func (o VirtualGatewayListenerTlsSdsCertificateOutput) ToVirtualGatewayListenerTlsSdsCertificatePtrOutput() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o.ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsSdsCertificateOutput) ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTlsSdsCertificate) *VirtualGatewayListenerTlsSdsCertificate {
		return &v
	}).(VirtualGatewayListenerTlsSdsCertificatePtrOutput)
}

func (o VirtualGatewayListenerTlsSdsCertificateOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsSdsCertificate) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewayListenerTlsSdsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsSdsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsSdsCertificate)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsSdsCertificatePtrOutput) ToVirtualGatewayListenerTlsSdsCertificatePtrOutput() VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsSdsCertificatePtrOutput) ToVirtualGatewayListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsSdsCertificatePtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsSdsCertificatePtrOutput) Elem() VirtualGatewayListenerTlsSdsCertificateOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsSdsCertificate) VirtualGatewayListenerTlsSdsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTlsSdsCertificate
		return ret
	}).(VirtualGatewayListenerTlsSdsCertificateOutput)
}

func (o VirtualGatewayListenerTlsSdsCertificatePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsSdsCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewayListenerTlsValidationContext struct {
	SubjectAlternativeNames *VirtualGatewaySubjectAlternativeNames          `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualGatewayListenerTlsValidationContextTrust `pulumi:"trust"`
}

// VirtualGatewayListenerTlsValidationContextInput is an input type that accepts VirtualGatewayListenerTlsValidationContextArgs and VirtualGatewayListenerTlsValidationContextOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsValidationContextInput` via:
//
//          VirtualGatewayListenerTlsValidationContextArgs{...}
type VirtualGatewayListenerTlsValidationContextInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsValidationContextOutput() VirtualGatewayListenerTlsValidationContextOutput
	ToVirtualGatewayListenerTlsValidationContextOutputWithContext(context.Context) VirtualGatewayListenerTlsValidationContextOutput
}

type VirtualGatewayListenerTlsValidationContextArgs struct {
	SubjectAlternativeNames VirtualGatewaySubjectAlternativeNamesPtrInput        `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualGatewayListenerTlsValidationContextTrustInput `pulumi:"trust"`
}

func (VirtualGatewayListenerTlsValidationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsValidationContext)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsValidationContextArgs) ToVirtualGatewayListenerTlsValidationContextOutput() VirtualGatewayListenerTlsValidationContextOutput {
	return i.ToVirtualGatewayListenerTlsValidationContextOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsValidationContextArgs) ToVirtualGatewayListenerTlsValidationContextOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsValidationContextOutput)
}

func (i VirtualGatewayListenerTlsValidationContextArgs) ToVirtualGatewayListenerTlsValidationContextPtrOutput() VirtualGatewayListenerTlsValidationContextPtrOutput {
	return i.ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsValidationContextArgs) ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsValidationContextOutput).ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsValidationContextPtrInput is an input type that accepts VirtualGatewayListenerTlsValidationContextArgs, VirtualGatewayListenerTlsValidationContextPtr and VirtualGatewayListenerTlsValidationContextPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsValidationContextPtrInput` via:
//
//          VirtualGatewayListenerTlsValidationContextArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsValidationContextPtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsValidationContextPtrOutput() VirtualGatewayListenerTlsValidationContextPtrOutput
	ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(context.Context) VirtualGatewayListenerTlsValidationContextPtrOutput
}

type virtualGatewayListenerTlsValidationContextPtrType VirtualGatewayListenerTlsValidationContextArgs

func VirtualGatewayListenerTlsValidationContextPtr(v *VirtualGatewayListenerTlsValidationContextArgs) VirtualGatewayListenerTlsValidationContextPtrInput {
	return (*virtualGatewayListenerTlsValidationContextPtrType)(v)
}

func (*virtualGatewayListenerTlsValidationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsValidationContext)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsValidationContextPtrType) ToVirtualGatewayListenerTlsValidationContextPtrOutput() VirtualGatewayListenerTlsValidationContextPtrOutput {
	return i.ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsValidationContextPtrType) ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsValidationContextPtrOutput)
}

type VirtualGatewayListenerTlsValidationContextOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsValidationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsValidationContext)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsValidationContextOutput) ToVirtualGatewayListenerTlsValidationContextOutput() VirtualGatewayListenerTlsValidationContextOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextOutput) ToVirtualGatewayListenerTlsValidationContextOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextOutput) ToVirtualGatewayListenerTlsValidationContextPtrOutput() VirtualGatewayListenerTlsValidationContextPtrOutput {
	return o.ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsValidationContextOutput) ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTlsValidationContext) *VirtualGatewayListenerTlsValidationContext {
		return &v
	}).(VirtualGatewayListenerTlsValidationContextPtrOutput)
}

func (o VirtualGatewayListenerTlsValidationContextOutput) SubjectAlternativeNames() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsValidationContext) *VirtualGatewaySubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySubjectAlternativeNamesPtrOutput)
}

func (o VirtualGatewayListenerTlsValidationContextOutput) Trust() VirtualGatewayListenerTlsValidationContextTrustOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsValidationContext) VirtualGatewayListenerTlsValidationContextTrust {
		return v.Trust
	}).(VirtualGatewayListenerTlsValidationContextTrustOutput)
}

type VirtualGatewayListenerTlsValidationContextPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsValidationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsValidationContext)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsValidationContextPtrOutput) ToVirtualGatewayListenerTlsValidationContextPtrOutput() VirtualGatewayListenerTlsValidationContextPtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextPtrOutput) ToVirtualGatewayListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextPtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextPtrOutput) Elem() VirtualGatewayListenerTlsValidationContextOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsValidationContext) VirtualGatewayListenerTlsValidationContext {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTlsValidationContext
		return ret
	}).(VirtualGatewayListenerTlsValidationContextOutput)
}

func (o VirtualGatewayListenerTlsValidationContextPtrOutput) SubjectAlternativeNames() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsValidationContext) *VirtualGatewaySubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySubjectAlternativeNamesPtrOutput)
}

func (o VirtualGatewayListenerTlsValidationContextPtrOutput) Trust() VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsValidationContext) *VirtualGatewayListenerTlsValidationContextTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualGatewayListenerTlsValidationContextTrustPtrOutput)
}

type VirtualGatewayListenerTlsValidationContextTrust struct {
	File *VirtualGatewayTlsValidationContextFileTrust `pulumi:"file"`
	SDS  *VirtualGatewayTlsValidationContextSdsTrust  `pulumi:"sDS"`
}

// VirtualGatewayListenerTlsValidationContextTrustInput is an input type that accepts VirtualGatewayListenerTlsValidationContextTrustArgs and VirtualGatewayListenerTlsValidationContextTrustOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsValidationContextTrustInput` via:
//
//          VirtualGatewayListenerTlsValidationContextTrustArgs{...}
type VirtualGatewayListenerTlsValidationContextTrustInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsValidationContextTrustOutput() VirtualGatewayListenerTlsValidationContextTrustOutput
	ToVirtualGatewayListenerTlsValidationContextTrustOutputWithContext(context.Context) VirtualGatewayListenerTlsValidationContextTrustOutput
}

type VirtualGatewayListenerTlsValidationContextTrustArgs struct {
	File VirtualGatewayTlsValidationContextFileTrustPtrInput `pulumi:"file"`
	SDS  VirtualGatewayTlsValidationContextSdsTrustPtrInput  `pulumi:"sDS"`
}

func (VirtualGatewayListenerTlsValidationContextTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsValidationContextTrust)(nil)).Elem()
}

func (i VirtualGatewayListenerTlsValidationContextTrustArgs) ToVirtualGatewayListenerTlsValidationContextTrustOutput() VirtualGatewayListenerTlsValidationContextTrustOutput {
	return i.ToVirtualGatewayListenerTlsValidationContextTrustOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsValidationContextTrustArgs) ToVirtualGatewayListenerTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsValidationContextTrustOutput)
}

func (i VirtualGatewayListenerTlsValidationContextTrustArgs) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutput() VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return i.ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayListenerTlsValidationContextTrustArgs) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsValidationContextTrustOutput).ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(ctx)
}

// VirtualGatewayListenerTlsValidationContextTrustPtrInput is an input type that accepts VirtualGatewayListenerTlsValidationContextTrustArgs, VirtualGatewayListenerTlsValidationContextTrustPtr and VirtualGatewayListenerTlsValidationContextTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayListenerTlsValidationContextTrustPtrInput` via:
//
//          VirtualGatewayListenerTlsValidationContextTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayListenerTlsValidationContextTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewayListenerTlsValidationContextTrustPtrOutput() VirtualGatewayListenerTlsValidationContextTrustPtrOutput
	ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(context.Context) VirtualGatewayListenerTlsValidationContextTrustPtrOutput
}

type virtualGatewayListenerTlsValidationContextTrustPtrType VirtualGatewayListenerTlsValidationContextTrustArgs

func VirtualGatewayListenerTlsValidationContextTrustPtr(v *VirtualGatewayListenerTlsValidationContextTrustArgs) VirtualGatewayListenerTlsValidationContextTrustPtrInput {
	return (*virtualGatewayListenerTlsValidationContextTrustPtrType)(v)
}

func (*virtualGatewayListenerTlsValidationContextTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsValidationContextTrust)(nil)).Elem()
}

func (i *virtualGatewayListenerTlsValidationContextTrustPtrType) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutput() VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return i.ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayListenerTlsValidationContextTrustPtrType) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayListenerTlsValidationContextTrustPtrOutput)
}

type VirtualGatewayListenerTlsValidationContextTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsValidationContextTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayListenerTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsValidationContextTrustOutput) ToVirtualGatewayListenerTlsValidationContextTrustOutput() VirtualGatewayListenerTlsValidationContextTrustOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextTrustOutput) ToVirtualGatewayListenerTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextTrustOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextTrustOutput) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutput() VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return o.ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayListenerTlsValidationContextTrustOutput) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayListenerTlsValidationContextTrust) *VirtualGatewayListenerTlsValidationContextTrust {
		return &v
	}).(VirtualGatewayListenerTlsValidationContextTrustPtrOutput)
}

func (o VirtualGatewayListenerTlsValidationContextTrustOutput) File() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsValidationContextTrust) *VirtualGatewayTlsValidationContextFileTrust {
		return v.File
	}).(VirtualGatewayTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualGatewayListenerTlsValidationContextTrustOutput) SDS() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v VirtualGatewayListenerTlsValidationContextTrust) *VirtualGatewayTlsValidationContextSdsTrust {
		return v.SDS
	}).(VirtualGatewayTlsValidationContextSdsTrustPtrOutput)
}

type VirtualGatewayListenerTlsValidationContextTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayListenerTlsValidationContextTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayListenerTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualGatewayListenerTlsValidationContextTrustPtrOutput) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutput() VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextTrustPtrOutput) ToVirtualGatewayListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayListenerTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualGatewayListenerTlsValidationContextTrustPtrOutput) Elem() VirtualGatewayListenerTlsValidationContextTrustOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsValidationContextTrust) VirtualGatewayListenerTlsValidationContextTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayListenerTlsValidationContextTrust
		return ret
	}).(VirtualGatewayListenerTlsValidationContextTrustOutput)
}

func (o VirtualGatewayListenerTlsValidationContextTrustPtrOutput) File() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsValidationContextTrust) *VirtualGatewayTlsValidationContextFileTrust {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewayTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualGatewayListenerTlsValidationContextTrustPtrOutput) SDS() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayListenerTlsValidationContextTrust) *VirtualGatewayTlsValidationContextSdsTrust {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualGatewayTlsValidationContextSdsTrustPtrOutput)
}

type VirtualGatewayLogging struct {
	AccessLog *VirtualGatewayAccessLog `pulumi:"accessLog"`
}

// VirtualGatewayLoggingInput is an input type that accepts VirtualGatewayLoggingArgs and VirtualGatewayLoggingOutput values.
// You can construct a concrete instance of `VirtualGatewayLoggingInput` via:
//
//          VirtualGatewayLoggingArgs{...}
type VirtualGatewayLoggingInput interface {
	pulumi.Input

	ToVirtualGatewayLoggingOutput() VirtualGatewayLoggingOutput
	ToVirtualGatewayLoggingOutputWithContext(context.Context) VirtualGatewayLoggingOutput
}

type VirtualGatewayLoggingArgs struct {
	AccessLog VirtualGatewayAccessLogPtrInput `pulumi:"accessLog"`
}

func (VirtualGatewayLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayLogging)(nil)).Elem()
}

func (i VirtualGatewayLoggingArgs) ToVirtualGatewayLoggingOutput() VirtualGatewayLoggingOutput {
	return i.ToVirtualGatewayLoggingOutputWithContext(context.Background())
}

func (i VirtualGatewayLoggingArgs) ToVirtualGatewayLoggingOutputWithContext(ctx context.Context) VirtualGatewayLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayLoggingOutput)
}

func (i VirtualGatewayLoggingArgs) ToVirtualGatewayLoggingPtrOutput() VirtualGatewayLoggingPtrOutput {
	return i.ToVirtualGatewayLoggingPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayLoggingArgs) ToVirtualGatewayLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewayLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayLoggingOutput).ToVirtualGatewayLoggingPtrOutputWithContext(ctx)
}

// VirtualGatewayLoggingPtrInput is an input type that accepts VirtualGatewayLoggingArgs, VirtualGatewayLoggingPtr and VirtualGatewayLoggingPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayLoggingPtrInput` via:
//
//          VirtualGatewayLoggingArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayLoggingPtrInput interface {
	pulumi.Input

	ToVirtualGatewayLoggingPtrOutput() VirtualGatewayLoggingPtrOutput
	ToVirtualGatewayLoggingPtrOutputWithContext(context.Context) VirtualGatewayLoggingPtrOutput
}

type virtualGatewayLoggingPtrType VirtualGatewayLoggingArgs

func VirtualGatewayLoggingPtr(v *VirtualGatewayLoggingArgs) VirtualGatewayLoggingPtrInput {
	return (*virtualGatewayLoggingPtrType)(v)
}

func (*virtualGatewayLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayLogging)(nil)).Elem()
}

func (i *virtualGatewayLoggingPtrType) ToVirtualGatewayLoggingPtrOutput() VirtualGatewayLoggingPtrOutput {
	return i.ToVirtualGatewayLoggingPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayLoggingPtrType) ToVirtualGatewayLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewayLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayLoggingPtrOutput)
}

type VirtualGatewayLoggingOutput struct{ *pulumi.OutputState }

func (VirtualGatewayLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayLogging)(nil)).Elem()
}

func (o VirtualGatewayLoggingOutput) ToVirtualGatewayLoggingOutput() VirtualGatewayLoggingOutput {
	return o
}

func (o VirtualGatewayLoggingOutput) ToVirtualGatewayLoggingOutputWithContext(ctx context.Context) VirtualGatewayLoggingOutput {
	return o
}

func (o VirtualGatewayLoggingOutput) ToVirtualGatewayLoggingPtrOutput() VirtualGatewayLoggingPtrOutput {
	return o.ToVirtualGatewayLoggingPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayLoggingOutput) ToVirtualGatewayLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewayLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayLogging) *VirtualGatewayLogging {
		return &v
	}).(VirtualGatewayLoggingPtrOutput)
}

func (o VirtualGatewayLoggingOutput) AccessLog() VirtualGatewayAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualGatewayLogging) *VirtualGatewayAccessLog { return v.AccessLog }).(VirtualGatewayAccessLogPtrOutput)
}

type VirtualGatewayLoggingPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayLogging)(nil)).Elem()
}

func (o VirtualGatewayLoggingPtrOutput) ToVirtualGatewayLoggingPtrOutput() VirtualGatewayLoggingPtrOutput {
	return o
}

func (o VirtualGatewayLoggingPtrOutput) ToVirtualGatewayLoggingPtrOutputWithContext(ctx context.Context) VirtualGatewayLoggingPtrOutput {
	return o
}

func (o VirtualGatewayLoggingPtrOutput) Elem() VirtualGatewayLoggingOutput {
	return o.ApplyT(func(v *VirtualGatewayLogging) VirtualGatewayLogging {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayLogging
		return ret
	}).(VirtualGatewayLoggingOutput)
}

func (o VirtualGatewayLoggingPtrOutput) AccessLog() VirtualGatewayAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayLogging) *VirtualGatewayAccessLog {
		if v == nil {
			return nil
		}
		return v.AccessLog
	}).(VirtualGatewayAccessLogPtrOutput)
}

type VirtualGatewayPortMapping struct {
	Port     int    `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// VirtualGatewayPortMappingInput is an input type that accepts VirtualGatewayPortMappingArgs and VirtualGatewayPortMappingOutput values.
// You can construct a concrete instance of `VirtualGatewayPortMappingInput` via:
//
//          VirtualGatewayPortMappingArgs{...}
type VirtualGatewayPortMappingInput interface {
	pulumi.Input

	ToVirtualGatewayPortMappingOutput() VirtualGatewayPortMappingOutput
	ToVirtualGatewayPortMappingOutputWithContext(context.Context) VirtualGatewayPortMappingOutput
}

type VirtualGatewayPortMappingArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualGatewayPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayPortMapping)(nil)).Elem()
}

func (i VirtualGatewayPortMappingArgs) ToVirtualGatewayPortMappingOutput() VirtualGatewayPortMappingOutput {
	return i.ToVirtualGatewayPortMappingOutputWithContext(context.Background())
}

func (i VirtualGatewayPortMappingArgs) ToVirtualGatewayPortMappingOutputWithContext(ctx context.Context) VirtualGatewayPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayPortMappingOutput)
}

type VirtualGatewayPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualGatewayPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayPortMapping)(nil)).Elem()
}

func (o VirtualGatewayPortMappingOutput) ToVirtualGatewayPortMappingOutput() VirtualGatewayPortMappingOutput {
	return o
}

func (o VirtualGatewayPortMappingOutput) ToVirtualGatewayPortMappingOutputWithContext(ctx context.Context) VirtualGatewayPortMappingOutput {
	return o
}

func (o VirtualGatewayPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualGatewayPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

func (o VirtualGatewayPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualGatewaySpec struct {
	BackendDefaults *VirtualGatewayBackendDefaults `pulumi:"backendDefaults"`
	Listeners       []VirtualGatewayListener       `pulumi:"listeners"`
	Logging         *VirtualGatewayLogging         `pulumi:"logging"`
}

// VirtualGatewaySpecInput is an input type that accepts VirtualGatewaySpecArgs and VirtualGatewaySpecOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecInput` via:
//
//          VirtualGatewaySpecArgs{...}
type VirtualGatewaySpecInput interface {
	pulumi.Input

	ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput
	ToVirtualGatewaySpecOutputWithContext(context.Context) VirtualGatewaySpecOutput
}

type VirtualGatewaySpecArgs struct {
	BackendDefaults VirtualGatewayBackendDefaultsPtrInput `pulumi:"backendDefaults"`
	Listeners       VirtualGatewayListenerArrayInput      `pulumi:"listeners"`
	Logging         VirtualGatewayLoggingPtrInput         `pulumi:"logging"`
}

func (VirtualGatewaySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpec)(nil)).Elem()
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput {
	return i.ToVirtualGatewaySpecOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecOutputWithContext(ctx context.Context) VirtualGatewaySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecOutput)
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return i.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySpecArgs) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecOutput).ToVirtualGatewaySpecPtrOutputWithContext(ctx)
}

// VirtualGatewaySpecPtrInput is an input type that accepts VirtualGatewaySpecArgs, VirtualGatewaySpecPtr and VirtualGatewaySpecPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySpecPtrInput` via:
//
//          VirtualGatewaySpecArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySpecPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput
	ToVirtualGatewaySpecPtrOutputWithContext(context.Context) VirtualGatewaySpecPtrOutput
}

type virtualGatewaySpecPtrType VirtualGatewaySpecArgs

func VirtualGatewaySpecPtr(v *VirtualGatewaySpecArgs) VirtualGatewaySpecPtrInput {
	return (*virtualGatewaySpecPtrType)(v)
}

func (*virtualGatewaySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpec)(nil)).Elem()
}

func (i *virtualGatewaySpecPtrType) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return i.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySpecPtrType) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySpecPtrOutput)
}

type VirtualGatewaySpecOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySpec)(nil)).Elem()
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecOutput() VirtualGatewaySpecOutput {
	return o
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecOutputWithContext(ctx context.Context) VirtualGatewaySpecOutput {
	return o
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return o.ToVirtualGatewaySpecPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySpecOutput) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySpec) *VirtualGatewaySpec {
		return &v
	}).(VirtualGatewaySpecPtrOutput)
}

func (o VirtualGatewaySpecOutput) BackendDefaults() VirtualGatewayBackendDefaultsPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) *VirtualGatewayBackendDefaults { return v.BackendDefaults }).(VirtualGatewayBackendDefaultsPtrOutput)
}

func (o VirtualGatewaySpecOutput) Listeners() VirtualGatewayListenerArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) []VirtualGatewayListener { return v.Listeners }).(VirtualGatewayListenerArrayOutput)
}

func (o VirtualGatewaySpecOutput) Logging() VirtualGatewayLoggingPtrOutput {
	return o.ApplyT(func(v VirtualGatewaySpec) *VirtualGatewayLogging { return v.Logging }).(VirtualGatewayLoggingPtrOutput)
}

type VirtualGatewaySpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySpec)(nil)).Elem()
}

func (o VirtualGatewaySpecPtrOutput) ToVirtualGatewaySpecPtrOutput() VirtualGatewaySpecPtrOutput {
	return o
}

func (o VirtualGatewaySpecPtrOutput) ToVirtualGatewaySpecPtrOutputWithContext(ctx context.Context) VirtualGatewaySpecPtrOutput {
	return o
}

func (o VirtualGatewaySpecPtrOutput) Elem() VirtualGatewaySpecOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) VirtualGatewaySpec {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySpec
		return ret
	}).(VirtualGatewaySpecOutput)
}

func (o VirtualGatewaySpecPtrOutput) BackendDefaults() VirtualGatewayBackendDefaultsPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewayBackendDefaults {
		if v == nil {
			return nil
		}
		return v.BackendDefaults
	}).(VirtualGatewayBackendDefaultsPtrOutput)
}

func (o VirtualGatewaySpecPtrOutput) Listeners() VirtualGatewayListenerArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) []VirtualGatewayListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(VirtualGatewayListenerArrayOutput)
}

func (o VirtualGatewaySpecPtrOutput) Logging() VirtualGatewayLoggingPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySpec) *VirtualGatewayLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(VirtualGatewayLoggingPtrOutput)
}

type VirtualGatewaySubjectAlternativeNameMatchers struct {
	Exact []string `pulumi:"exact"`
}

// VirtualGatewaySubjectAlternativeNameMatchersInput is an input type that accepts VirtualGatewaySubjectAlternativeNameMatchersArgs and VirtualGatewaySubjectAlternativeNameMatchersOutput values.
// You can construct a concrete instance of `VirtualGatewaySubjectAlternativeNameMatchersInput` via:
//
//          VirtualGatewaySubjectAlternativeNameMatchersArgs{...}
type VirtualGatewaySubjectAlternativeNameMatchersInput interface {
	pulumi.Input

	ToVirtualGatewaySubjectAlternativeNameMatchersOutput() VirtualGatewaySubjectAlternativeNameMatchersOutput
	ToVirtualGatewaySubjectAlternativeNameMatchersOutputWithContext(context.Context) VirtualGatewaySubjectAlternativeNameMatchersOutput
}

type VirtualGatewaySubjectAlternativeNameMatchersArgs struct {
	Exact pulumi.StringArrayInput `pulumi:"exact"`
}

func (VirtualGatewaySubjectAlternativeNameMatchersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySubjectAlternativeNameMatchers)(nil)).Elem()
}

func (i VirtualGatewaySubjectAlternativeNameMatchersArgs) ToVirtualGatewaySubjectAlternativeNameMatchersOutput() VirtualGatewaySubjectAlternativeNameMatchersOutput {
	return i.ToVirtualGatewaySubjectAlternativeNameMatchersOutputWithContext(context.Background())
}

func (i VirtualGatewaySubjectAlternativeNameMatchersArgs) ToVirtualGatewaySubjectAlternativeNameMatchersOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNameMatchersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySubjectAlternativeNameMatchersOutput)
}

func (i VirtualGatewaySubjectAlternativeNameMatchersArgs) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutput() VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return i.ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySubjectAlternativeNameMatchersArgs) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySubjectAlternativeNameMatchersOutput).ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(ctx)
}

// VirtualGatewaySubjectAlternativeNameMatchersPtrInput is an input type that accepts VirtualGatewaySubjectAlternativeNameMatchersArgs, VirtualGatewaySubjectAlternativeNameMatchersPtr and VirtualGatewaySubjectAlternativeNameMatchersPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySubjectAlternativeNameMatchersPtrInput` via:
//
//          VirtualGatewaySubjectAlternativeNameMatchersArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySubjectAlternativeNameMatchersPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutput() VirtualGatewaySubjectAlternativeNameMatchersPtrOutput
	ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(context.Context) VirtualGatewaySubjectAlternativeNameMatchersPtrOutput
}

type virtualGatewaySubjectAlternativeNameMatchersPtrType VirtualGatewaySubjectAlternativeNameMatchersArgs

func VirtualGatewaySubjectAlternativeNameMatchersPtr(v *VirtualGatewaySubjectAlternativeNameMatchersArgs) VirtualGatewaySubjectAlternativeNameMatchersPtrInput {
	return (*virtualGatewaySubjectAlternativeNameMatchersPtrType)(v)
}

func (*virtualGatewaySubjectAlternativeNameMatchersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySubjectAlternativeNameMatchers)(nil)).Elem()
}

func (i *virtualGatewaySubjectAlternativeNameMatchersPtrType) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutput() VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return i.ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySubjectAlternativeNameMatchersPtrType) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySubjectAlternativeNameMatchersPtrOutput)
}

type VirtualGatewaySubjectAlternativeNameMatchersOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySubjectAlternativeNameMatchersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySubjectAlternativeNameMatchers)(nil)).Elem()
}

func (o VirtualGatewaySubjectAlternativeNameMatchersOutput) ToVirtualGatewaySubjectAlternativeNameMatchersOutput() VirtualGatewaySubjectAlternativeNameMatchersOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNameMatchersOutput) ToVirtualGatewaySubjectAlternativeNameMatchersOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNameMatchersOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNameMatchersOutput) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutput() VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return o.ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySubjectAlternativeNameMatchersOutput) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySubjectAlternativeNameMatchers) *VirtualGatewaySubjectAlternativeNameMatchers {
		return &v
	}).(VirtualGatewaySubjectAlternativeNameMatchersPtrOutput)
}

func (o VirtualGatewaySubjectAlternativeNameMatchersOutput) Exact() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewaySubjectAlternativeNameMatchers) []string { return v.Exact }).(pulumi.StringArrayOutput)
}

type VirtualGatewaySubjectAlternativeNameMatchersPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySubjectAlternativeNameMatchersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySubjectAlternativeNameMatchers)(nil)).Elem()
}

func (o VirtualGatewaySubjectAlternativeNameMatchersPtrOutput) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutput() VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNameMatchersPtrOutput) ToVirtualGatewaySubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNameMatchersPtrOutput) Elem() VirtualGatewaySubjectAlternativeNameMatchersOutput {
	return o.ApplyT(func(v *VirtualGatewaySubjectAlternativeNameMatchers) VirtualGatewaySubjectAlternativeNameMatchers {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySubjectAlternativeNameMatchers
		return ret
	}).(VirtualGatewaySubjectAlternativeNameMatchersOutput)
}

func (o VirtualGatewaySubjectAlternativeNameMatchersPtrOutput) Exact() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewaySubjectAlternativeNameMatchers) []string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewaySubjectAlternativeNames struct {
	Match VirtualGatewaySubjectAlternativeNameMatchers `pulumi:"match"`
}

// VirtualGatewaySubjectAlternativeNamesInput is an input type that accepts VirtualGatewaySubjectAlternativeNamesArgs and VirtualGatewaySubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualGatewaySubjectAlternativeNamesInput` via:
//
//          VirtualGatewaySubjectAlternativeNamesArgs{...}
type VirtualGatewaySubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualGatewaySubjectAlternativeNamesOutput() VirtualGatewaySubjectAlternativeNamesOutput
	ToVirtualGatewaySubjectAlternativeNamesOutputWithContext(context.Context) VirtualGatewaySubjectAlternativeNamesOutput
}

type VirtualGatewaySubjectAlternativeNamesArgs struct {
	Match VirtualGatewaySubjectAlternativeNameMatchersInput `pulumi:"match"`
}

func (VirtualGatewaySubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualGatewaySubjectAlternativeNamesArgs) ToVirtualGatewaySubjectAlternativeNamesOutput() VirtualGatewaySubjectAlternativeNamesOutput {
	return i.ToVirtualGatewaySubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualGatewaySubjectAlternativeNamesArgs) ToVirtualGatewaySubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySubjectAlternativeNamesOutput)
}

func (i VirtualGatewaySubjectAlternativeNamesArgs) ToVirtualGatewaySubjectAlternativeNamesPtrOutput() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualGatewaySubjectAlternativeNamesArgs) ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySubjectAlternativeNamesOutput).ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualGatewaySubjectAlternativeNamesPtrInput is an input type that accepts VirtualGatewaySubjectAlternativeNamesArgs, VirtualGatewaySubjectAlternativeNamesPtr and VirtualGatewaySubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualGatewaySubjectAlternativeNamesPtrInput` via:
//
//          VirtualGatewaySubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualGatewaySubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualGatewaySubjectAlternativeNamesPtrOutput() VirtualGatewaySubjectAlternativeNamesPtrOutput
	ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualGatewaySubjectAlternativeNamesPtrOutput
}

type virtualGatewaySubjectAlternativeNamesPtrType VirtualGatewaySubjectAlternativeNamesArgs

func VirtualGatewaySubjectAlternativeNamesPtr(v *VirtualGatewaySubjectAlternativeNamesArgs) VirtualGatewaySubjectAlternativeNamesPtrInput {
	return (*virtualGatewaySubjectAlternativeNamesPtrType)(v)
}

func (*virtualGatewaySubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualGatewaySubjectAlternativeNamesPtrType) ToVirtualGatewaySubjectAlternativeNamesPtrOutput() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return i.ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualGatewaySubjectAlternativeNamesPtrType) ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewaySubjectAlternativeNamesPtrOutput)
}

type VirtualGatewaySubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewaySubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySubjectAlternativeNamesOutput) ToVirtualGatewaySubjectAlternativeNamesOutput() VirtualGatewaySubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNamesOutput) ToVirtualGatewaySubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNamesOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNamesOutput) ToVirtualGatewaySubjectAlternativeNamesPtrOutput() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o.ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualGatewaySubjectAlternativeNamesOutput) ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewaySubjectAlternativeNames) *VirtualGatewaySubjectAlternativeNames {
		return &v
	}).(VirtualGatewaySubjectAlternativeNamesPtrOutput)
}

func (o VirtualGatewaySubjectAlternativeNamesOutput) Match() VirtualGatewaySubjectAlternativeNameMatchersOutput {
	return o.ApplyT(func(v VirtualGatewaySubjectAlternativeNames) VirtualGatewaySubjectAlternativeNameMatchers {
		return v.Match
	}).(VirtualGatewaySubjectAlternativeNameMatchersOutput)
}

type VirtualGatewaySubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewaySubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewaySubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualGatewaySubjectAlternativeNamesPtrOutput) ToVirtualGatewaySubjectAlternativeNamesPtrOutput() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNamesPtrOutput) ToVirtualGatewaySubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualGatewaySubjectAlternativeNamesPtrOutput) Elem() VirtualGatewaySubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualGatewaySubjectAlternativeNames) VirtualGatewaySubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualGatewaySubjectAlternativeNames
		return ret
	}).(VirtualGatewaySubjectAlternativeNamesOutput)
}

func (o VirtualGatewaySubjectAlternativeNamesPtrOutput) Match() VirtualGatewaySubjectAlternativeNameMatchersPtrOutput {
	return o.ApplyT(func(v *VirtualGatewaySubjectAlternativeNames) *VirtualGatewaySubjectAlternativeNameMatchers {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualGatewaySubjectAlternativeNameMatchersPtrOutput)
}

type VirtualGatewayTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VirtualGatewayTagInput is an input type that accepts VirtualGatewayTagArgs and VirtualGatewayTagOutput values.
// You can construct a concrete instance of `VirtualGatewayTagInput` via:
//
//          VirtualGatewayTagArgs{...}
type VirtualGatewayTagInput interface {
	pulumi.Input

	ToVirtualGatewayTagOutput() VirtualGatewayTagOutput
	ToVirtualGatewayTagOutputWithContext(context.Context) VirtualGatewayTagOutput
}

type VirtualGatewayTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTag)(nil)).Elem()
}

func (i VirtualGatewayTagArgs) ToVirtualGatewayTagOutput() VirtualGatewayTagOutput {
	return i.ToVirtualGatewayTagOutputWithContext(context.Background())
}

func (i VirtualGatewayTagArgs) ToVirtualGatewayTagOutputWithContext(ctx context.Context) VirtualGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTagOutput)
}

// VirtualGatewayTagArrayInput is an input type that accepts VirtualGatewayTagArray and VirtualGatewayTagArrayOutput values.
// You can construct a concrete instance of `VirtualGatewayTagArrayInput` via:
//
//          VirtualGatewayTagArray{ VirtualGatewayTagArgs{...} }
type VirtualGatewayTagArrayInput interface {
	pulumi.Input

	ToVirtualGatewayTagArrayOutput() VirtualGatewayTagArrayOutput
	ToVirtualGatewayTagArrayOutputWithContext(context.Context) VirtualGatewayTagArrayOutput
}

type VirtualGatewayTagArray []VirtualGatewayTagInput

func (VirtualGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayTag)(nil)).Elem()
}

func (i VirtualGatewayTagArray) ToVirtualGatewayTagArrayOutput() VirtualGatewayTagArrayOutput {
	return i.ToVirtualGatewayTagArrayOutputWithContext(context.Background())
}

func (i VirtualGatewayTagArray) ToVirtualGatewayTagArrayOutputWithContext(ctx context.Context) VirtualGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTagArrayOutput)
}

type VirtualGatewayTagOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTag)(nil)).Elem()
}

func (o VirtualGatewayTagOutput) ToVirtualGatewayTagOutput() VirtualGatewayTagOutput {
	return o
}

func (o VirtualGatewayTagOutput) ToVirtualGatewayTagOutputWithContext(ctx context.Context) VirtualGatewayTagOutput {
	return o
}

func (o VirtualGatewayTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o VirtualGatewayTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayTag) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualGatewayTag)(nil)).Elem()
}

func (o VirtualGatewayTagArrayOutput) ToVirtualGatewayTagArrayOutput() VirtualGatewayTagArrayOutput {
	return o
}

func (o VirtualGatewayTagArrayOutput) ToVirtualGatewayTagArrayOutputWithContext(ctx context.Context) VirtualGatewayTagArrayOutput {
	return o
}

func (o VirtualGatewayTagArrayOutput) Index(i pulumi.IntInput) VirtualGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualGatewayTag {
		return vs[0].([]VirtualGatewayTag)[vs[1].(int)]
	}).(VirtualGatewayTagOutput)
}

type VirtualGatewayTlsValidationContext struct {
	SubjectAlternativeNames *VirtualGatewaySubjectAlternativeNames  `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualGatewayTlsValidationContextTrust `pulumi:"trust"`
}

// VirtualGatewayTlsValidationContextInput is an input type that accepts VirtualGatewayTlsValidationContextArgs and VirtualGatewayTlsValidationContextOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextInput` via:
//
//          VirtualGatewayTlsValidationContextArgs{...}
type VirtualGatewayTlsValidationContextInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextOutput() VirtualGatewayTlsValidationContextOutput
	ToVirtualGatewayTlsValidationContextOutputWithContext(context.Context) VirtualGatewayTlsValidationContextOutput
}

type VirtualGatewayTlsValidationContextArgs struct {
	SubjectAlternativeNames VirtualGatewaySubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualGatewayTlsValidationContextTrustInput  `pulumi:"trust"`
}

func (VirtualGatewayTlsValidationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContext)(nil)).Elem()
}

func (i VirtualGatewayTlsValidationContextArgs) ToVirtualGatewayTlsValidationContextOutput() VirtualGatewayTlsValidationContextOutput {
	return i.ToVirtualGatewayTlsValidationContextOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextArgs) ToVirtualGatewayTlsValidationContextOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextOutput)
}

func (i VirtualGatewayTlsValidationContextArgs) ToVirtualGatewayTlsValidationContextPtrOutput() VirtualGatewayTlsValidationContextPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextArgs) ToVirtualGatewayTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextOutput).ToVirtualGatewayTlsValidationContextPtrOutputWithContext(ctx)
}

// VirtualGatewayTlsValidationContextPtrInput is an input type that accepts VirtualGatewayTlsValidationContextArgs, VirtualGatewayTlsValidationContextPtr and VirtualGatewayTlsValidationContextPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextPtrInput` via:
//
//          VirtualGatewayTlsValidationContextArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayTlsValidationContextPtrInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextPtrOutput() VirtualGatewayTlsValidationContextPtrOutput
	ToVirtualGatewayTlsValidationContextPtrOutputWithContext(context.Context) VirtualGatewayTlsValidationContextPtrOutput
}

type virtualGatewayTlsValidationContextPtrType VirtualGatewayTlsValidationContextArgs

func VirtualGatewayTlsValidationContextPtr(v *VirtualGatewayTlsValidationContextArgs) VirtualGatewayTlsValidationContextPtrInput {
	return (*virtualGatewayTlsValidationContextPtrType)(v)
}

func (*virtualGatewayTlsValidationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContext)(nil)).Elem()
}

func (i *virtualGatewayTlsValidationContextPtrType) ToVirtualGatewayTlsValidationContextPtrOutput() VirtualGatewayTlsValidationContextPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayTlsValidationContextPtrType) ToVirtualGatewayTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextPtrOutput)
}

type VirtualGatewayTlsValidationContextOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContext)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextOutput) ToVirtualGatewayTlsValidationContextOutput() VirtualGatewayTlsValidationContextOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextOutput) ToVirtualGatewayTlsValidationContextOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextOutput) ToVirtualGatewayTlsValidationContextPtrOutput() VirtualGatewayTlsValidationContextPtrOutput {
	return o.ToVirtualGatewayTlsValidationContextPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayTlsValidationContextOutput) ToVirtualGatewayTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayTlsValidationContext) *VirtualGatewayTlsValidationContext {
		return &v
	}).(VirtualGatewayTlsValidationContextPtrOutput)
}

func (o VirtualGatewayTlsValidationContextOutput) SubjectAlternativeNames() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContext) *VirtualGatewaySubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySubjectAlternativeNamesPtrOutput)
}

func (o VirtualGatewayTlsValidationContextOutput) Trust() VirtualGatewayTlsValidationContextTrustOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContext) VirtualGatewayTlsValidationContextTrust { return v.Trust }).(VirtualGatewayTlsValidationContextTrustOutput)
}

type VirtualGatewayTlsValidationContextPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContext)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextPtrOutput) ToVirtualGatewayTlsValidationContextPtrOutput() VirtualGatewayTlsValidationContextPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextPtrOutput) ToVirtualGatewayTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextPtrOutput) Elem() VirtualGatewayTlsValidationContextOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContext) VirtualGatewayTlsValidationContext {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayTlsValidationContext
		return ret
	}).(VirtualGatewayTlsValidationContextOutput)
}

func (o VirtualGatewayTlsValidationContextPtrOutput) SubjectAlternativeNames() VirtualGatewaySubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContext) *VirtualGatewaySubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualGatewaySubjectAlternativeNamesPtrOutput)
}

func (o VirtualGatewayTlsValidationContextPtrOutput) Trust() VirtualGatewayTlsValidationContextTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContext) *VirtualGatewayTlsValidationContextTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualGatewayTlsValidationContextTrustPtrOutput)
}

type VirtualGatewayTlsValidationContextAcmTrust struct {
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualGatewayTlsValidationContextAcmTrustInput is an input type that accepts VirtualGatewayTlsValidationContextAcmTrustArgs and VirtualGatewayTlsValidationContextAcmTrustOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextAcmTrustInput` via:
//
//          VirtualGatewayTlsValidationContextAcmTrustArgs{...}
type VirtualGatewayTlsValidationContextAcmTrustInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextAcmTrustOutput() VirtualGatewayTlsValidationContextAcmTrustOutput
	ToVirtualGatewayTlsValidationContextAcmTrustOutputWithContext(context.Context) VirtualGatewayTlsValidationContextAcmTrustOutput
}

type VirtualGatewayTlsValidationContextAcmTrustArgs struct {
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualGatewayTlsValidationContextAcmTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextAcmTrust)(nil)).Elem()
}

func (i VirtualGatewayTlsValidationContextAcmTrustArgs) ToVirtualGatewayTlsValidationContextAcmTrustOutput() VirtualGatewayTlsValidationContextAcmTrustOutput {
	return i.ToVirtualGatewayTlsValidationContextAcmTrustOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextAcmTrustArgs) ToVirtualGatewayTlsValidationContextAcmTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextAcmTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextAcmTrustOutput)
}

func (i VirtualGatewayTlsValidationContextAcmTrustArgs) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutput() VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextAcmTrustArgs) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextAcmTrustOutput).ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(ctx)
}

// VirtualGatewayTlsValidationContextAcmTrustPtrInput is an input type that accepts VirtualGatewayTlsValidationContextAcmTrustArgs, VirtualGatewayTlsValidationContextAcmTrustPtr and VirtualGatewayTlsValidationContextAcmTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextAcmTrustPtrInput` via:
//
//          VirtualGatewayTlsValidationContextAcmTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayTlsValidationContextAcmTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextAcmTrustPtrOutput() VirtualGatewayTlsValidationContextAcmTrustPtrOutput
	ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(context.Context) VirtualGatewayTlsValidationContextAcmTrustPtrOutput
}

type virtualGatewayTlsValidationContextAcmTrustPtrType VirtualGatewayTlsValidationContextAcmTrustArgs

func VirtualGatewayTlsValidationContextAcmTrustPtr(v *VirtualGatewayTlsValidationContextAcmTrustArgs) VirtualGatewayTlsValidationContextAcmTrustPtrInput {
	return (*virtualGatewayTlsValidationContextAcmTrustPtrType)(v)
}

func (*virtualGatewayTlsValidationContextAcmTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextAcmTrust)(nil)).Elem()
}

func (i *virtualGatewayTlsValidationContextAcmTrustPtrType) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutput() VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayTlsValidationContextAcmTrustPtrType) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextAcmTrustPtrOutput)
}

type VirtualGatewayTlsValidationContextAcmTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextAcmTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextAcmTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextAcmTrustOutput) ToVirtualGatewayTlsValidationContextAcmTrustOutput() VirtualGatewayTlsValidationContextAcmTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextAcmTrustOutput) ToVirtualGatewayTlsValidationContextAcmTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextAcmTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextAcmTrustOutput) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutput() VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return o.ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayTlsValidationContextAcmTrustOutput) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayTlsValidationContextAcmTrust) *VirtualGatewayTlsValidationContextAcmTrust {
		return &v
	}).(VirtualGatewayTlsValidationContextAcmTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextAcmTrustOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContextAcmTrust) []string { return v.CertificateAuthorityArns }).(pulumi.StringArrayOutput)
}

type VirtualGatewayTlsValidationContextAcmTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextAcmTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextAcmTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextAcmTrustPtrOutput) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutput() VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextAcmTrustPtrOutput) ToVirtualGatewayTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextAcmTrustPtrOutput) Elem() VirtualGatewayTlsValidationContextAcmTrustOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextAcmTrust) VirtualGatewayTlsValidationContextAcmTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayTlsValidationContextAcmTrust
		return ret
	}).(VirtualGatewayTlsValidationContextAcmTrustOutput)
}

func (o VirtualGatewayTlsValidationContextAcmTrustPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextAcmTrust) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualGatewayTlsValidationContextFileTrust struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualGatewayTlsValidationContextFileTrustInput is an input type that accepts VirtualGatewayTlsValidationContextFileTrustArgs and VirtualGatewayTlsValidationContextFileTrustOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextFileTrustInput` via:
//
//          VirtualGatewayTlsValidationContextFileTrustArgs{...}
type VirtualGatewayTlsValidationContextFileTrustInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextFileTrustOutput() VirtualGatewayTlsValidationContextFileTrustOutput
	ToVirtualGatewayTlsValidationContextFileTrustOutputWithContext(context.Context) VirtualGatewayTlsValidationContextFileTrustOutput
}

type VirtualGatewayTlsValidationContextFileTrustArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualGatewayTlsValidationContextFileTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextFileTrust)(nil)).Elem()
}

func (i VirtualGatewayTlsValidationContextFileTrustArgs) ToVirtualGatewayTlsValidationContextFileTrustOutput() VirtualGatewayTlsValidationContextFileTrustOutput {
	return i.ToVirtualGatewayTlsValidationContextFileTrustOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextFileTrustArgs) ToVirtualGatewayTlsValidationContextFileTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextFileTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextFileTrustOutput)
}

func (i VirtualGatewayTlsValidationContextFileTrustArgs) ToVirtualGatewayTlsValidationContextFileTrustPtrOutput() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextFileTrustArgs) ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextFileTrustOutput).ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(ctx)
}

// VirtualGatewayTlsValidationContextFileTrustPtrInput is an input type that accepts VirtualGatewayTlsValidationContextFileTrustArgs, VirtualGatewayTlsValidationContextFileTrustPtr and VirtualGatewayTlsValidationContextFileTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextFileTrustPtrInput` via:
//
//          VirtualGatewayTlsValidationContextFileTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayTlsValidationContextFileTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextFileTrustPtrOutput() VirtualGatewayTlsValidationContextFileTrustPtrOutput
	ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(context.Context) VirtualGatewayTlsValidationContextFileTrustPtrOutput
}

type virtualGatewayTlsValidationContextFileTrustPtrType VirtualGatewayTlsValidationContextFileTrustArgs

func VirtualGatewayTlsValidationContextFileTrustPtr(v *VirtualGatewayTlsValidationContextFileTrustArgs) VirtualGatewayTlsValidationContextFileTrustPtrInput {
	return (*virtualGatewayTlsValidationContextFileTrustPtrType)(v)
}

func (*virtualGatewayTlsValidationContextFileTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextFileTrust)(nil)).Elem()
}

func (i *virtualGatewayTlsValidationContextFileTrustPtrType) ToVirtualGatewayTlsValidationContextFileTrustPtrOutput() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayTlsValidationContextFileTrustPtrType) ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextFileTrustPtrOutput)
}

type VirtualGatewayTlsValidationContextFileTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextFileTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextFileTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextFileTrustOutput) ToVirtualGatewayTlsValidationContextFileTrustOutput() VirtualGatewayTlsValidationContextFileTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextFileTrustOutput) ToVirtualGatewayTlsValidationContextFileTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextFileTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextFileTrustOutput) ToVirtualGatewayTlsValidationContextFileTrustPtrOutput() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o.ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayTlsValidationContextFileTrustOutput) ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayTlsValidationContextFileTrust) *VirtualGatewayTlsValidationContextFileTrust {
		return &v
	}).(VirtualGatewayTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextFileTrustOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContextFileTrust) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type VirtualGatewayTlsValidationContextFileTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextFileTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextFileTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextFileTrustPtrOutput) ToVirtualGatewayTlsValidationContextFileTrustPtrOutput() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextFileTrustPtrOutput) ToVirtualGatewayTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextFileTrustPtrOutput) Elem() VirtualGatewayTlsValidationContextFileTrustOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextFileTrust) VirtualGatewayTlsValidationContextFileTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayTlsValidationContextFileTrust
		return ret
	}).(VirtualGatewayTlsValidationContextFileTrustOutput)
}

func (o VirtualGatewayTlsValidationContextFileTrustPtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextFileTrust) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewayTlsValidationContextSdsTrust struct {
	SecretName string `pulumi:"secretName"`
}

// VirtualGatewayTlsValidationContextSdsTrustInput is an input type that accepts VirtualGatewayTlsValidationContextSdsTrustArgs and VirtualGatewayTlsValidationContextSdsTrustOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextSdsTrustInput` via:
//
//          VirtualGatewayTlsValidationContextSdsTrustArgs{...}
type VirtualGatewayTlsValidationContextSdsTrustInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextSdsTrustOutput() VirtualGatewayTlsValidationContextSdsTrustOutput
	ToVirtualGatewayTlsValidationContextSdsTrustOutputWithContext(context.Context) VirtualGatewayTlsValidationContextSdsTrustOutput
}

type VirtualGatewayTlsValidationContextSdsTrustArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualGatewayTlsValidationContextSdsTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextSdsTrust)(nil)).Elem()
}

func (i VirtualGatewayTlsValidationContextSdsTrustArgs) ToVirtualGatewayTlsValidationContextSdsTrustOutput() VirtualGatewayTlsValidationContextSdsTrustOutput {
	return i.ToVirtualGatewayTlsValidationContextSdsTrustOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextSdsTrustArgs) ToVirtualGatewayTlsValidationContextSdsTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextSdsTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextSdsTrustOutput)
}

func (i VirtualGatewayTlsValidationContextSdsTrustArgs) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutput() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextSdsTrustArgs) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextSdsTrustOutput).ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(ctx)
}

// VirtualGatewayTlsValidationContextSdsTrustPtrInput is an input type that accepts VirtualGatewayTlsValidationContextSdsTrustArgs, VirtualGatewayTlsValidationContextSdsTrustPtr and VirtualGatewayTlsValidationContextSdsTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextSdsTrustPtrInput` via:
//
//          VirtualGatewayTlsValidationContextSdsTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayTlsValidationContextSdsTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextSdsTrustPtrOutput() VirtualGatewayTlsValidationContextSdsTrustPtrOutput
	ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(context.Context) VirtualGatewayTlsValidationContextSdsTrustPtrOutput
}

type virtualGatewayTlsValidationContextSdsTrustPtrType VirtualGatewayTlsValidationContextSdsTrustArgs

func VirtualGatewayTlsValidationContextSdsTrustPtr(v *VirtualGatewayTlsValidationContextSdsTrustArgs) VirtualGatewayTlsValidationContextSdsTrustPtrInput {
	return (*virtualGatewayTlsValidationContextSdsTrustPtrType)(v)
}

func (*virtualGatewayTlsValidationContextSdsTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextSdsTrust)(nil)).Elem()
}

func (i *virtualGatewayTlsValidationContextSdsTrustPtrType) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutput() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayTlsValidationContextSdsTrustPtrType) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextSdsTrustPtrOutput)
}

type VirtualGatewayTlsValidationContextSdsTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextSdsTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextSdsTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextSdsTrustOutput) ToVirtualGatewayTlsValidationContextSdsTrustOutput() VirtualGatewayTlsValidationContextSdsTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextSdsTrustOutput) ToVirtualGatewayTlsValidationContextSdsTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextSdsTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextSdsTrustOutput) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutput() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o.ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayTlsValidationContextSdsTrustOutput) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayTlsValidationContextSdsTrust) *VirtualGatewayTlsValidationContextSdsTrust {
		return &v
	}).(VirtualGatewayTlsValidationContextSdsTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextSdsTrustOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContextSdsTrust) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualGatewayTlsValidationContextSdsTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextSdsTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextSdsTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextSdsTrustPtrOutput) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutput() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextSdsTrustPtrOutput) ToVirtualGatewayTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextSdsTrustPtrOutput) Elem() VirtualGatewayTlsValidationContextSdsTrustOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextSdsTrust) VirtualGatewayTlsValidationContextSdsTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayTlsValidationContextSdsTrust
		return ret
	}).(VirtualGatewayTlsValidationContextSdsTrustOutput)
}

func (o VirtualGatewayTlsValidationContextSdsTrustPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextSdsTrust) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualGatewayTlsValidationContextTrust struct {
	ACM  *VirtualGatewayTlsValidationContextAcmTrust  `pulumi:"aCM"`
	File *VirtualGatewayTlsValidationContextFileTrust `pulumi:"file"`
	SDS  *VirtualGatewayTlsValidationContextSdsTrust  `pulumi:"sDS"`
}

// VirtualGatewayTlsValidationContextTrustInput is an input type that accepts VirtualGatewayTlsValidationContextTrustArgs and VirtualGatewayTlsValidationContextTrustOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextTrustInput` via:
//
//          VirtualGatewayTlsValidationContextTrustArgs{...}
type VirtualGatewayTlsValidationContextTrustInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextTrustOutput() VirtualGatewayTlsValidationContextTrustOutput
	ToVirtualGatewayTlsValidationContextTrustOutputWithContext(context.Context) VirtualGatewayTlsValidationContextTrustOutput
}

type VirtualGatewayTlsValidationContextTrustArgs struct {
	ACM  VirtualGatewayTlsValidationContextAcmTrustPtrInput  `pulumi:"aCM"`
	File VirtualGatewayTlsValidationContextFileTrustPtrInput `pulumi:"file"`
	SDS  VirtualGatewayTlsValidationContextSdsTrustPtrInput  `pulumi:"sDS"`
}

func (VirtualGatewayTlsValidationContextTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextTrust)(nil)).Elem()
}

func (i VirtualGatewayTlsValidationContextTrustArgs) ToVirtualGatewayTlsValidationContextTrustOutput() VirtualGatewayTlsValidationContextTrustOutput {
	return i.ToVirtualGatewayTlsValidationContextTrustOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextTrustArgs) ToVirtualGatewayTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextTrustOutput)
}

func (i VirtualGatewayTlsValidationContextTrustArgs) ToVirtualGatewayTlsValidationContextTrustPtrOutput() VirtualGatewayTlsValidationContextTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i VirtualGatewayTlsValidationContextTrustArgs) ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextTrustOutput).ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(ctx)
}

// VirtualGatewayTlsValidationContextTrustPtrInput is an input type that accepts VirtualGatewayTlsValidationContextTrustArgs, VirtualGatewayTlsValidationContextTrustPtr and VirtualGatewayTlsValidationContextTrustPtrOutput values.
// You can construct a concrete instance of `VirtualGatewayTlsValidationContextTrustPtrInput` via:
//
//          VirtualGatewayTlsValidationContextTrustArgs{...}
//
//  or:
//
//          nil
type VirtualGatewayTlsValidationContextTrustPtrInput interface {
	pulumi.Input

	ToVirtualGatewayTlsValidationContextTrustPtrOutput() VirtualGatewayTlsValidationContextTrustPtrOutput
	ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(context.Context) VirtualGatewayTlsValidationContextTrustPtrOutput
}

type virtualGatewayTlsValidationContextTrustPtrType VirtualGatewayTlsValidationContextTrustArgs

func VirtualGatewayTlsValidationContextTrustPtr(v *VirtualGatewayTlsValidationContextTrustArgs) VirtualGatewayTlsValidationContextTrustPtrInput {
	return (*virtualGatewayTlsValidationContextTrustPtrType)(v)
}

func (*virtualGatewayTlsValidationContextTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextTrust)(nil)).Elem()
}

func (i *virtualGatewayTlsValidationContextTrustPtrType) ToVirtualGatewayTlsValidationContextTrustPtrOutput() VirtualGatewayTlsValidationContextTrustPtrOutput {
	return i.ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i *virtualGatewayTlsValidationContextTrustPtrType) ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualGatewayTlsValidationContextTrustPtrOutput)
}

type VirtualGatewayTlsValidationContextTrustOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualGatewayTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextTrustOutput) ToVirtualGatewayTlsValidationContextTrustOutput() VirtualGatewayTlsValidationContextTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextTrustOutput) ToVirtualGatewayTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextTrustOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextTrustOutput) ToVirtualGatewayTlsValidationContextTrustPtrOutput() VirtualGatewayTlsValidationContextTrustPtrOutput {
	return o.ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (o VirtualGatewayTlsValidationContextTrustOutput) ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextTrust {
		return &v
	}).(VirtualGatewayTlsValidationContextTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextTrustOutput) ACM() VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextAcmTrust {
		return v.ACM
	}).(VirtualGatewayTlsValidationContextAcmTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextTrustOutput) File() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextFileTrust {
		return v.File
	}).(VirtualGatewayTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextTrustOutput) SDS() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextSdsTrust {
		return v.SDS
	}).(VirtualGatewayTlsValidationContextSdsTrustPtrOutput)
}

type VirtualGatewayTlsValidationContextTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualGatewayTlsValidationContextTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualGatewayTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualGatewayTlsValidationContextTrustPtrOutput) ToVirtualGatewayTlsValidationContextTrustPtrOutput() VirtualGatewayTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextTrustPtrOutput) ToVirtualGatewayTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualGatewayTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualGatewayTlsValidationContextTrustPtrOutput) Elem() VirtualGatewayTlsValidationContextTrustOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextTrust) VirtualGatewayTlsValidationContextTrust {
		if v != nil {
			return *v
		}
		var ret VirtualGatewayTlsValidationContextTrust
		return ret
	}).(VirtualGatewayTlsValidationContextTrustOutput)
}

func (o VirtualGatewayTlsValidationContextTrustPtrOutput) ACM() VirtualGatewayTlsValidationContextAcmTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextAcmTrust {
		if v == nil {
			return nil
		}
		return v.ACM
	}).(VirtualGatewayTlsValidationContextAcmTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextTrustPtrOutput) File() VirtualGatewayTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextFileTrust {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualGatewayTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualGatewayTlsValidationContextTrustPtrOutput) SDS() VirtualGatewayTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v *VirtualGatewayTlsValidationContextTrust) *VirtualGatewayTlsValidationContextSdsTrust {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualGatewayTlsValidationContextSdsTrustPtrOutput)
}

type VirtualNodeAccessLog struct {
	File *VirtualNodeFileAccessLog `pulumi:"file"`
}

// VirtualNodeAccessLogInput is an input type that accepts VirtualNodeAccessLogArgs and VirtualNodeAccessLogOutput values.
// You can construct a concrete instance of `VirtualNodeAccessLogInput` via:
//
//          VirtualNodeAccessLogArgs{...}
type VirtualNodeAccessLogInput interface {
	pulumi.Input

	ToVirtualNodeAccessLogOutput() VirtualNodeAccessLogOutput
	ToVirtualNodeAccessLogOutputWithContext(context.Context) VirtualNodeAccessLogOutput
}

type VirtualNodeAccessLogArgs struct {
	File VirtualNodeFileAccessLogPtrInput `pulumi:"file"`
}

func (VirtualNodeAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeAccessLog)(nil)).Elem()
}

func (i VirtualNodeAccessLogArgs) ToVirtualNodeAccessLogOutput() VirtualNodeAccessLogOutput {
	return i.ToVirtualNodeAccessLogOutputWithContext(context.Background())
}

func (i VirtualNodeAccessLogArgs) ToVirtualNodeAccessLogOutputWithContext(ctx context.Context) VirtualNodeAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAccessLogOutput)
}

func (i VirtualNodeAccessLogArgs) ToVirtualNodeAccessLogPtrOutput() VirtualNodeAccessLogPtrOutput {
	return i.ToVirtualNodeAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualNodeAccessLogArgs) ToVirtualNodeAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAccessLogOutput).ToVirtualNodeAccessLogPtrOutputWithContext(ctx)
}

// VirtualNodeAccessLogPtrInput is an input type that accepts VirtualNodeAccessLogArgs, VirtualNodeAccessLogPtr and VirtualNodeAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualNodeAccessLogPtrInput` via:
//
//          VirtualNodeAccessLogArgs{...}
//
//  or:
//
//          nil
type VirtualNodeAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualNodeAccessLogPtrOutput() VirtualNodeAccessLogPtrOutput
	ToVirtualNodeAccessLogPtrOutputWithContext(context.Context) VirtualNodeAccessLogPtrOutput
}

type virtualNodeAccessLogPtrType VirtualNodeAccessLogArgs

func VirtualNodeAccessLogPtr(v *VirtualNodeAccessLogArgs) VirtualNodeAccessLogPtrInput {
	return (*virtualNodeAccessLogPtrType)(v)
}

func (*virtualNodeAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeAccessLog)(nil)).Elem()
}

func (i *virtualNodeAccessLogPtrType) ToVirtualNodeAccessLogPtrOutput() VirtualNodeAccessLogPtrOutput {
	return i.ToVirtualNodeAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualNodeAccessLogPtrType) ToVirtualNodeAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAccessLogPtrOutput)
}

type VirtualNodeAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualNodeAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeAccessLog)(nil)).Elem()
}

func (o VirtualNodeAccessLogOutput) ToVirtualNodeAccessLogOutput() VirtualNodeAccessLogOutput {
	return o
}

func (o VirtualNodeAccessLogOutput) ToVirtualNodeAccessLogOutputWithContext(ctx context.Context) VirtualNodeAccessLogOutput {
	return o
}

func (o VirtualNodeAccessLogOutput) ToVirtualNodeAccessLogPtrOutput() VirtualNodeAccessLogPtrOutput {
	return o.ToVirtualNodeAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualNodeAccessLogOutput) ToVirtualNodeAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeAccessLog) *VirtualNodeAccessLog {
		return &v
	}).(VirtualNodeAccessLogPtrOutput)
}

func (o VirtualNodeAccessLogOutput) File() VirtualNodeFileAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualNodeAccessLog) *VirtualNodeFileAccessLog { return v.File }).(VirtualNodeFileAccessLogPtrOutput)
}

type VirtualNodeAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeAccessLog)(nil)).Elem()
}

func (o VirtualNodeAccessLogPtrOutput) ToVirtualNodeAccessLogPtrOutput() VirtualNodeAccessLogPtrOutput {
	return o
}

func (o VirtualNodeAccessLogPtrOutput) ToVirtualNodeAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeAccessLogPtrOutput {
	return o
}

func (o VirtualNodeAccessLogPtrOutput) Elem() VirtualNodeAccessLogOutput {
	return o.ApplyT(func(v *VirtualNodeAccessLog) VirtualNodeAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualNodeAccessLog
		return ret
	}).(VirtualNodeAccessLogOutput)
}

func (o VirtualNodeAccessLogPtrOutput) File() VirtualNodeFileAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualNodeAccessLog) *VirtualNodeFileAccessLog {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeFileAccessLogPtrOutput)
}

type VirtualNodeAwsCloudMapInstanceAttribute struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VirtualNodeAwsCloudMapInstanceAttributeInput is an input type that accepts VirtualNodeAwsCloudMapInstanceAttributeArgs and VirtualNodeAwsCloudMapInstanceAttributeOutput values.
// You can construct a concrete instance of `VirtualNodeAwsCloudMapInstanceAttributeInput` via:
//
//          VirtualNodeAwsCloudMapInstanceAttributeArgs{...}
type VirtualNodeAwsCloudMapInstanceAttributeInput interface {
	pulumi.Input

	ToVirtualNodeAwsCloudMapInstanceAttributeOutput() VirtualNodeAwsCloudMapInstanceAttributeOutput
	ToVirtualNodeAwsCloudMapInstanceAttributeOutputWithContext(context.Context) VirtualNodeAwsCloudMapInstanceAttributeOutput
}

type VirtualNodeAwsCloudMapInstanceAttributeArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualNodeAwsCloudMapInstanceAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeAwsCloudMapInstanceAttribute)(nil)).Elem()
}

func (i VirtualNodeAwsCloudMapInstanceAttributeArgs) ToVirtualNodeAwsCloudMapInstanceAttributeOutput() VirtualNodeAwsCloudMapInstanceAttributeOutput {
	return i.ToVirtualNodeAwsCloudMapInstanceAttributeOutputWithContext(context.Background())
}

func (i VirtualNodeAwsCloudMapInstanceAttributeArgs) ToVirtualNodeAwsCloudMapInstanceAttributeOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapInstanceAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAwsCloudMapInstanceAttributeOutput)
}

// VirtualNodeAwsCloudMapInstanceAttributeArrayInput is an input type that accepts VirtualNodeAwsCloudMapInstanceAttributeArray and VirtualNodeAwsCloudMapInstanceAttributeArrayOutput values.
// You can construct a concrete instance of `VirtualNodeAwsCloudMapInstanceAttributeArrayInput` via:
//
//          VirtualNodeAwsCloudMapInstanceAttributeArray{ VirtualNodeAwsCloudMapInstanceAttributeArgs{...} }
type VirtualNodeAwsCloudMapInstanceAttributeArrayInput interface {
	pulumi.Input

	ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutput() VirtualNodeAwsCloudMapInstanceAttributeArrayOutput
	ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutputWithContext(context.Context) VirtualNodeAwsCloudMapInstanceAttributeArrayOutput
}

type VirtualNodeAwsCloudMapInstanceAttributeArray []VirtualNodeAwsCloudMapInstanceAttributeInput

func (VirtualNodeAwsCloudMapInstanceAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeAwsCloudMapInstanceAttribute)(nil)).Elem()
}

func (i VirtualNodeAwsCloudMapInstanceAttributeArray) ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutput() VirtualNodeAwsCloudMapInstanceAttributeArrayOutput {
	return i.ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutputWithContext(context.Background())
}

func (i VirtualNodeAwsCloudMapInstanceAttributeArray) ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapInstanceAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAwsCloudMapInstanceAttributeArrayOutput)
}

type VirtualNodeAwsCloudMapInstanceAttributeOutput struct{ *pulumi.OutputState }

func (VirtualNodeAwsCloudMapInstanceAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeAwsCloudMapInstanceAttribute)(nil)).Elem()
}

func (o VirtualNodeAwsCloudMapInstanceAttributeOutput) ToVirtualNodeAwsCloudMapInstanceAttributeOutput() VirtualNodeAwsCloudMapInstanceAttributeOutput {
	return o
}

func (o VirtualNodeAwsCloudMapInstanceAttributeOutput) ToVirtualNodeAwsCloudMapInstanceAttributeOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapInstanceAttributeOutput {
	return o
}

func (o VirtualNodeAwsCloudMapInstanceAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeAwsCloudMapInstanceAttribute) string { return v.Key }).(pulumi.StringOutput)
}

func (o VirtualNodeAwsCloudMapInstanceAttributeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeAwsCloudMapInstanceAttribute) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualNodeAwsCloudMapInstanceAttributeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeAwsCloudMapInstanceAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeAwsCloudMapInstanceAttribute)(nil)).Elem()
}

func (o VirtualNodeAwsCloudMapInstanceAttributeArrayOutput) ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutput() VirtualNodeAwsCloudMapInstanceAttributeArrayOutput {
	return o
}

func (o VirtualNodeAwsCloudMapInstanceAttributeArrayOutput) ToVirtualNodeAwsCloudMapInstanceAttributeArrayOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapInstanceAttributeArrayOutput {
	return o
}

func (o VirtualNodeAwsCloudMapInstanceAttributeArrayOutput) Index(i pulumi.IntInput) VirtualNodeAwsCloudMapInstanceAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeAwsCloudMapInstanceAttribute {
		return vs[0].([]VirtualNodeAwsCloudMapInstanceAttribute)[vs[1].(int)]
	}).(VirtualNodeAwsCloudMapInstanceAttributeOutput)
}

type VirtualNodeAwsCloudMapServiceDiscovery struct {
	Attributes    []VirtualNodeAwsCloudMapInstanceAttribute `pulumi:"attributes"`
	NamespaceName string                                    `pulumi:"namespaceName"`
	ServiceName   string                                    `pulumi:"serviceName"`
}

// VirtualNodeAwsCloudMapServiceDiscoveryInput is an input type that accepts VirtualNodeAwsCloudMapServiceDiscoveryArgs and VirtualNodeAwsCloudMapServiceDiscoveryOutput values.
// You can construct a concrete instance of `VirtualNodeAwsCloudMapServiceDiscoveryInput` via:
//
//          VirtualNodeAwsCloudMapServiceDiscoveryArgs{...}
type VirtualNodeAwsCloudMapServiceDiscoveryInput interface {
	pulumi.Input

	ToVirtualNodeAwsCloudMapServiceDiscoveryOutput() VirtualNodeAwsCloudMapServiceDiscoveryOutput
	ToVirtualNodeAwsCloudMapServiceDiscoveryOutputWithContext(context.Context) VirtualNodeAwsCloudMapServiceDiscoveryOutput
}

type VirtualNodeAwsCloudMapServiceDiscoveryArgs struct {
	Attributes    VirtualNodeAwsCloudMapInstanceAttributeArrayInput `pulumi:"attributes"`
	NamespaceName pulumi.StringInput                                `pulumi:"namespaceName"`
	ServiceName   pulumi.StringInput                                `pulumi:"serviceName"`
}

func (VirtualNodeAwsCloudMapServiceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeAwsCloudMapServiceDiscovery)(nil)).Elem()
}

func (i VirtualNodeAwsCloudMapServiceDiscoveryArgs) ToVirtualNodeAwsCloudMapServiceDiscoveryOutput() VirtualNodeAwsCloudMapServiceDiscoveryOutput {
	return i.ToVirtualNodeAwsCloudMapServiceDiscoveryOutputWithContext(context.Background())
}

func (i VirtualNodeAwsCloudMapServiceDiscoveryArgs) ToVirtualNodeAwsCloudMapServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapServiceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAwsCloudMapServiceDiscoveryOutput)
}

func (i VirtualNodeAwsCloudMapServiceDiscoveryArgs) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutput() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i VirtualNodeAwsCloudMapServiceDiscoveryArgs) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAwsCloudMapServiceDiscoveryOutput).ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(ctx)
}

// VirtualNodeAwsCloudMapServiceDiscoveryPtrInput is an input type that accepts VirtualNodeAwsCloudMapServiceDiscoveryArgs, VirtualNodeAwsCloudMapServiceDiscoveryPtr and VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput values.
// You can construct a concrete instance of `VirtualNodeAwsCloudMapServiceDiscoveryPtrInput` via:
//
//          VirtualNodeAwsCloudMapServiceDiscoveryArgs{...}
//
//  or:
//
//          nil
type VirtualNodeAwsCloudMapServiceDiscoveryPtrInput interface {
	pulumi.Input

	ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutput() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput
	ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(context.Context) VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput
}

type virtualNodeAwsCloudMapServiceDiscoveryPtrType VirtualNodeAwsCloudMapServiceDiscoveryArgs

func VirtualNodeAwsCloudMapServiceDiscoveryPtr(v *VirtualNodeAwsCloudMapServiceDiscoveryArgs) VirtualNodeAwsCloudMapServiceDiscoveryPtrInput {
	return (*virtualNodeAwsCloudMapServiceDiscoveryPtrType)(v)
}

func (*virtualNodeAwsCloudMapServiceDiscoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeAwsCloudMapServiceDiscovery)(nil)).Elem()
}

func (i *virtualNodeAwsCloudMapServiceDiscoveryPtrType) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutput() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i *virtualNodeAwsCloudMapServiceDiscoveryPtrType) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput)
}

type VirtualNodeAwsCloudMapServiceDiscoveryOutput struct{ *pulumi.OutputState }

func (VirtualNodeAwsCloudMapServiceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeAwsCloudMapServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) ToVirtualNodeAwsCloudMapServiceDiscoveryOutput() VirtualNodeAwsCloudMapServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) ToVirtualNodeAwsCloudMapServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutput() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return o.ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeAwsCloudMapServiceDiscovery) *VirtualNodeAwsCloudMapServiceDiscovery {
		return &v
	}).(VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput)
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) Attributes() VirtualNodeAwsCloudMapInstanceAttributeArrayOutput {
	return o.ApplyT(func(v VirtualNodeAwsCloudMapServiceDiscovery) []VirtualNodeAwsCloudMapInstanceAttribute {
		return v.Attributes
	}).(VirtualNodeAwsCloudMapInstanceAttributeArrayOutput)
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeAwsCloudMapServiceDiscovery) string { return v.NamespaceName }).(pulumi.StringOutput)
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeAwsCloudMapServiceDiscovery) string { return v.ServiceName }).(pulumi.StringOutput)
}

type VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeAwsCloudMapServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutput() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) ToVirtualNodeAwsCloudMapServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) Elem() VirtualNodeAwsCloudMapServiceDiscoveryOutput {
	return o.ApplyT(func(v *VirtualNodeAwsCloudMapServiceDiscovery) VirtualNodeAwsCloudMapServiceDiscovery {
		if v != nil {
			return *v
		}
		var ret VirtualNodeAwsCloudMapServiceDiscovery
		return ret
	}).(VirtualNodeAwsCloudMapServiceDiscoveryOutput)
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) Attributes() VirtualNodeAwsCloudMapInstanceAttributeArrayOutput {
	return o.ApplyT(func(v *VirtualNodeAwsCloudMapServiceDiscovery) []VirtualNodeAwsCloudMapInstanceAttribute {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(VirtualNodeAwsCloudMapInstanceAttributeArrayOutput)
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) NamespaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeAwsCloudMapServiceDiscovery) *string {
		if v == nil {
			return nil
		}
		return &v.NamespaceName
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeAwsCloudMapServiceDiscovery) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeBackend struct {
	VirtualService *VirtualNodeVirtualServiceBackend `pulumi:"virtualService"`
}

// VirtualNodeBackendInput is an input type that accepts VirtualNodeBackendArgs and VirtualNodeBackendOutput values.
// You can construct a concrete instance of `VirtualNodeBackendInput` via:
//
//          VirtualNodeBackendArgs{...}
type VirtualNodeBackendInput interface {
	pulumi.Input

	ToVirtualNodeBackendOutput() VirtualNodeBackendOutput
	ToVirtualNodeBackendOutputWithContext(context.Context) VirtualNodeBackendOutput
}

type VirtualNodeBackendArgs struct {
	VirtualService VirtualNodeVirtualServiceBackendPtrInput `pulumi:"virtualService"`
}

func (VirtualNodeBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeBackend)(nil)).Elem()
}

func (i VirtualNodeBackendArgs) ToVirtualNodeBackendOutput() VirtualNodeBackendOutput {
	return i.ToVirtualNodeBackendOutputWithContext(context.Background())
}

func (i VirtualNodeBackendArgs) ToVirtualNodeBackendOutputWithContext(ctx context.Context) VirtualNodeBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeBackendOutput)
}

// VirtualNodeBackendArrayInput is an input type that accepts VirtualNodeBackendArray and VirtualNodeBackendArrayOutput values.
// You can construct a concrete instance of `VirtualNodeBackendArrayInput` via:
//
//          VirtualNodeBackendArray{ VirtualNodeBackendArgs{...} }
type VirtualNodeBackendArrayInput interface {
	pulumi.Input

	ToVirtualNodeBackendArrayOutput() VirtualNodeBackendArrayOutput
	ToVirtualNodeBackendArrayOutputWithContext(context.Context) VirtualNodeBackendArrayOutput
}

type VirtualNodeBackendArray []VirtualNodeBackendInput

func (VirtualNodeBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeBackend)(nil)).Elem()
}

func (i VirtualNodeBackendArray) ToVirtualNodeBackendArrayOutput() VirtualNodeBackendArrayOutput {
	return i.ToVirtualNodeBackendArrayOutputWithContext(context.Background())
}

func (i VirtualNodeBackendArray) ToVirtualNodeBackendArrayOutputWithContext(ctx context.Context) VirtualNodeBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeBackendArrayOutput)
}

type VirtualNodeBackendOutput struct{ *pulumi.OutputState }

func (VirtualNodeBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeBackend)(nil)).Elem()
}

func (o VirtualNodeBackendOutput) ToVirtualNodeBackendOutput() VirtualNodeBackendOutput {
	return o
}

func (o VirtualNodeBackendOutput) ToVirtualNodeBackendOutputWithContext(ctx context.Context) VirtualNodeBackendOutput {
	return o
}

func (o VirtualNodeBackendOutput) VirtualService() VirtualNodeVirtualServiceBackendPtrOutput {
	return o.ApplyT(func(v VirtualNodeBackend) *VirtualNodeVirtualServiceBackend { return v.VirtualService }).(VirtualNodeVirtualServiceBackendPtrOutput)
}

type VirtualNodeBackendArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeBackend)(nil)).Elem()
}

func (o VirtualNodeBackendArrayOutput) ToVirtualNodeBackendArrayOutput() VirtualNodeBackendArrayOutput {
	return o
}

func (o VirtualNodeBackendArrayOutput) ToVirtualNodeBackendArrayOutputWithContext(ctx context.Context) VirtualNodeBackendArrayOutput {
	return o
}

func (o VirtualNodeBackendArrayOutput) Index(i pulumi.IntInput) VirtualNodeBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeBackend {
		return vs[0].([]VirtualNodeBackend)[vs[1].(int)]
	}).(VirtualNodeBackendOutput)
}

type VirtualNodeBackendDefaults struct {
	ClientPolicy *VirtualNodeClientPolicy `pulumi:"clientPolicy"`
}

// VirtualNodeBackendDefaultsInput is an input type that accepts VirtualNodeBackendDefaultsArgs and VirtualNodeBackendDefaultsOutput values.
// You can construct a concrete instance of `VirtualNodeBackendDefaultsInput` via:
//
//          VirtualNodeBackendDefaultsArgs{...}
type VirtualNodeBackendDefaultsInput interface {
	pulumi.Input

	ToVirtualNodeBackendDefaultsOutput() VirtualNodeBackendDefaultsOutput
	ToVirtualNodeBackendDefaultsOutputWithContext(context.Context) VirtualNodeBackendDefaultsOutput
}

type VirtualNodeBackendDefaultsArgs struct {
	ClientPolicy VirtualNodeClientPolicyPtrInput `pulumi:"clientPolicy"`
}

func (VirtualNodeBackendDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeBackendDefaults)(nil)).Elem()
}

func (i VirtualNodeBackendDefaultsArgs) ToVirtualNodeBackendDefaultsOutput() VirtualNodeBackendDefaultsOutput {
	return i.ToVirtualNodeBackendDefaultsOutputWithContext(context.Background())
}

func (i VirtualNodeBackendDefaultsArgs) ToVirtualNodeBackendDefaultsOutputWithContext(ctx context.Context) VirtualNodeBackendDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeBackendDefaultsOutput)
}

func (i VirtualNodeBackendDefaultsArgs) ToVirtualNodeBackendDefaultsPtrOutput() VirtualNodeBackendDefaultsPtrOutput {
	return i.ToVirtualNodeBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeBackendDefaultsArgs) ToVirtualNodeBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeBackendDefaultsOutput).ToVirtualNodeBackendDefaultsPtrOutputWithContext(ctx)
}

// VirtualNodeBackendDefaultsPtrInput is an input type that accepts VirtualNodeBackendDefaultsArgs, VirtualNodeBackendDefaultsPtr and VirtualNodeBackendDefaultsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeBackendDefaultsPtrInput` via:
//
//          VirtualNodeBackendDefaultsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeBackendDefaultsPtrInput interface {
	pulumi.Input

	ToVirtualNodeBackendDefaultsPtrOutput() VirtualNodeBackendDefaultsPtrOutput
	ToVirtualNodeBackendDefaultsPtrOutputWithContext(context.Context) VirtualNodeBackendDefaultsPtrOutput
}

type virtualNodeBackendDefaultsPtrType VirtualNodeBackendDefaultsArgs

func VirtualNodeBackendDefaultsPtr(v *VirtualNodeBackendDefaultsArgs) VirtualNodeBackendDefaultsPtrInput {
	return (*virtualNodeBackendDefaultsPtrType)(v)
}

func (*virtualNodeBackendDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeBackendDefaults)(nil)).Elem()
}

func (i *virtualNodeBackendDefaultsPtrType) ToVirtualNodeBackendDefaultsPtrOutput() VirtualNodeBackendDefaultsPtrOutput {
	return i.ToVirtualNodeBackendDefaultsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeBackendDefaultsPtrType) ToVirtualNodeBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeBackendDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeBackendDefaultsPtrOutput)
}

type VirtualNodeBackendDefaultsOutput struct{ *pulumi.OutputState }

func (VirtualNodeBackendDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeBackendDefaults)(nil)).Elem()
}

func (o VirtualNodeBackendDefaultsOutput) ToVirtualNodeBackendDefaultsOutput() VirtualNodeBackendDefaultsOutput {
	return o
}

func (o VirtualNodeBackendDefaultsOutput) ToVirtualNodeBackendDefaultsOutputWithContext(ctx context.Context) VirtualNodeBackendDefaultsOutput {
	return o
}

func (o VirtualNodeBackendDefaultsOutput) ToVirtualNodeBackendDefaultsPtrOutput() VirtualNodeBackendDefaultsPtrOutput {
	return o.ToVirtualNodeBackendDefaultsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeBackendDefaultsOutput) ToVirtualNodeBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeBackendDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeBackendDefaults) *VirtualNodeBackendDefaults {
		return &v
	}).(VirtualNodeBackendDefaultsPtrOutput)
}

func (o VirtualNodeBackendDefaultsOutput) ClientPolicy() VirtualNodeClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNodeBackendDefaults) *VirtualNodeClientPolicy { return v.ClientPolicy }).(VirtualNodeClientPolicyPtrOutput)
}

type VirtualNodeBackendDefaultsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeBackendDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeBackendDefaults)(nil)).Elem()
}

func (o VirtualNodeBackendDefaultsPtrOutput) ToVirtualNodeBackendDefaultsPtrOutput() VirtualNodeBackendDefaultsPtrOutput {
	return o
}

func (o VirtualNodeBackendDefaultsPtrOutput) ToVirtualNodeBackendDefaultsPtrOutputWithContext(ctx context.Context) VirtualNodeBackendDefaultsPtrOutput {
	return o
}

func (o VirtualNodeBackendDefaultsPtrOutput) Elem() VirtualNodeBackendDefaultsOutput {
	return o.ApplyT(func(v *VirtualNodeBackendDefaults) VirtualNodeBackendDefaults {
		if v != nil {
			return *v
		}
		var ret VirtualNodeBackendDefaults
		return ret
	}).(VirtualNodeBackendDefaultsOutput)
}

func (o VirtualNodeBackendDefaultsPtrOutput) ClientPolicy() VirtualNodeClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualNodeBackendDefaults) *VirtualNodeClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualNodeClientPolicyPtrOutput)
}

type VirtualNodeClientPolicy struct {
	TLS *VirtualNodeClientPolicyTls `pulumi:"tLS"`
}

// VirtualNodeClientPolicyInput is an input type that accepts VirtualNodeClientPolicyArgs and VirtualNodeClientPolicyOutput values.
// You can construct a concrete instance of `VirtualNodeClientPolicyInput` via:
//
//          VirtualNodeClientPolicyArgs{...}
type VirtualNodeClientPolicyInput interface {
	pulumi.Input

	ToVirtualNodeClientPolicyOutput() VirtualNodeClientPolicyOutput
	ToVirtualNodeClientPolicyOutputWithContext(context.Context) VirtualNodeClientPolicyOutput
}

type VirtualNodeClientPolicyArgs struct {
	TLS VirtualNodeClientPolicyTlsPtrInput `pulumi:"tLS"`
}

func (VirtualNodeClientPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeClientPolicy)(nil)).Elem()
}

func (i VirtualNodeClientPolicyArgs) ToVirtualNodeClientPolicyOutput() VirtualNodeClientPolicyOutput {
	return i.ToVirtualNodeClientPolicyOutputWithContext(context.Background())
}

func (i VirtualNodeClientPolicyArgs) ToVirtualNodeClientPolicyOutputWithContext(ctx context.Context) VirtualNodeClientPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientPolicyOutput)
}

func (i VirtualNodeClientPolicyArgs) ToVirtualNodeClientPolicyPtrOutput() VirtualNodeClientPolicyPtrOutput {
	return i.ToVirtualNodeClientPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNodeClientPolicyArgs) ToVirtualNodeClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientPolicyOutput).ToVirtualNodeClientPolicyPtrOutputWithContext(ctx)
}

// VirtualNodeClientPolicyPtrInput is an input type that accepts VirtualNodeClientPolicyArgs, VirtualNodeClientPolicyPtr and VirtualNodeClientPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNodeClientPolicyPtrInput` via:
//
//          VirtualNodeClientPolicyArgs{...}
//
//  or:
//
//          nil
type VirtualNodeClientPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNodeClientPolicyPtrOutput() VirtualNodeClientPolicyPtrOutput
	ToVirtualNodeClientPolicyPtrOutputWithContext(context.Context) VirtualNodeClientPolicyPtrOutput
}

type virtualNodeClientPolicyPtrType VirtualNodeClientPolicyArgs

func VirtualNodeClientPolicyPtr(v *VirtualNodeClientPolicyArgs) VirtualNodeClientPolicyPtrInput {
	return (*virtualNodeClientPolicyPtrType)(v)
}

func (*virtualNodeClientPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeClientPolicy)(nil)).Elem()
}

func (i *virtualNodeClientPolicyPtrType) ToVirtualNodeClientPolicyPtrOutput() VirtualNodeClientPolicyPtrOutput {
	return i.ToVirtualNodeClientPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNodeClientPolicyPtrType) ToVirtualNodeClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientPolicyPtrOutput)
}

type VirtualNodeClientPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNodeClientPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeClientPolicy)(nil)).Elem()
}

func (o VirtualNodeClientPolicyOutput) ToVirtualNodeClientPolicyOutput() VirtualNodeClientPolicyOutput {
	return o
}

func (o VirtualNodeClientPolicyOutput) ToVirtualNodeClientPolicyOutputWithContext(ctx context.Context) VirtualNodeClientPolicyOutput {
	return o
}

func (o VirtualNodeClientPolicyOutput) ToVirtualNodeClientPolicyPtrOutput() VirtualNodeClientPolicyPtrOutput {
	return o.ToVirtualNodeClientPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNodeClientPolicyOutput) ToVirtualNodeClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeClientPolicy) *VirtualNodeClientPolicy {
		return &v
	}).(VirtualNodeClientPolicyPtrOutput)
}

func (o VirtualNodeClientPolicyOutput) TLS() VirtualNodeClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeClientPolicy) *VirtualNodeClientPolicyTls { return v.TLS }).(VirtualNodeClientPolicyTlsPtrOutput)
}

type VirtualNodeClientPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeClientPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeClientPolicy)(nil)).Elem()
}

func (o VirtualNodeClientPolicyPtrOutput) ToVirtualNodeClientPolicyPtrOutput() VirtualNodeClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeClientPolicyPtrOutput) ToVirtualNodeClientPolicyPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyPtrOutput {
	return o
}

func (o VirtualNodeClientPolicyPtrOutput) Elem() VirtualNodeClientPolicyOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicy) VirtualNodeClientPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNodeClientPolicy
		return ret
	}).(VirtualNodeClientPolicyOutput)
}

func (o VirtualNodeClientPolicyPtrOutput) TLS() VirtualNodeClientPolicyTlsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicy) *VirtualNodeClientPolicyTls {
		if v == nil {
			return nil
		}
		return v.TLS
	}).(VirtualNodeClientPolicyTlsPtrOutput)
}

type VirtualNodeClientPolicyTls struct {
	Certificate *VirtualNodeClientTlsCertificate `pulumi:"certificate"`
	Enforce     *bool                            `pulumi:"enforce"`
	Ports       []int                            `pulumi:"ports"`
	Validation  VirtualNodeTlsValidationContext  `pulumi:"validation"`
}

// VirtualNodeClientPolicyTlsInput is an input type that accepts VirtualNodeClientPolicyTlsArgs and VirtualNodeClientPolicyTlsOutput values.
// You can construct a concrete instance of `VirtualNodeClientPolicyTlsInput` via:
//
//          VirtualNodeClientPolicyTlsArgs{...}
type VirtualNodeClientPolicyTlsInput interface {
	pulumi.Input

	ToVirtualNodeClientPolicyTlsOutput() VirtualNodeClientPolicyTlsOutput
	ToVirtualNodeClientPolicyTlsOutputWithContext(context.Context) VirtualNodeClientPolicyTlsOutput
}

type VirtualNodeClientPolicyTlsArgs struct {
	Certificate VirtualNodeClientTlsCertificatePtrInput `pulumi:"certificate"`
	Enforce     pulumi.BoolPtrInput                     `pulumi:"enforce"`
	Ports       pulumi.IntArrayInput                    `pulumi:"ports"`
	Validation  VirtualNodeTlsValidationContextInput    `pulumi:"validation"`
}

func (VirtualNodeClientPolicyTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeClientPolicyTls)(nil)).Elem()
}

func (i VirtualNodeClientPolicyTlsArgs) ToVirtualNodeClientPolicyTlsOutput() VirtualNodeClientPolicyTlsOutput {
	return i.ToVirtualNodeClientPolicyTlsOutputWithContext(context.Background())
}

func (i VirtualNodeClientPolicyTlsArgs) ToVirtualNodeClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeClientPolicyTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientPolicyTlsOutput)
}

func (i VirtualNodeClientPolicyTlsArgs) ToVirtualNodeClientPolicyTlsPtrOutput() VirtualNodeClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeClientPolicyTlsArgs) ToVirtualNodeClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientPolicyTlsOutput).ToVirtualNodeClientPolicyTlsPtrOutputWithContext(ctx)
}

// VirtualNodeClientPolicyTlsPtrInput is an input type that accepts VirtualNodeClientPolicyTlsArgs, VirtualNodeClientPolicyTlsPtr and VirtualNodeClientPolicyTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeClientPolicyTlsPtrInput` via:
//
//          VirtualNodeClientPolicyTlsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeClientPolicyTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeClientPolicyTlsPtrOutput() VirtualNodeClientPolicyTlsPtrOutput
	ToVirtualNodeClientPolicyTlsPtrOutputWithContext(context.Context) VirtualNodeClientPolicyTlsPtrOutput
}

type virtualNodeClientPolicyTlsPtrType VirtualNodeClientPolicyTlsArgs

func VirtualNodeClientPolicyTlsPtr(v *VirtualNodeClientPolicyTlsArgs) VirtualNodeClientPolicyTlsPtrInput {
	return (*virtualNodeClientPolicyTlsPtrType)(v)
}

func (*virtualNodeClientPolicyTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeClientPolicyTls)(nil)).Elem()
}

func (i *virtualNodeClientPolicyTlsPtrType) ToVirtualNodeClientPolicyTlsPtrOutput() VirtualNodeClientPolicyTlsPtrOutput {
	return i.ToVirtualNodeClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeClientPolicyTlsPtrType) ToVirtualNodeClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientPolicyTlsPtrOutput)
}

type VirtualNodeClientPolicyTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeClientPolicyTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeClientPolicyTlsOutput) ToVirtualNodeClientPolicyTlsOutput() VirtualNodeClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeClientPolicyTlsOutput) ToVirtualNodeClientPolicyTlsOutputWithContext(ctx context.Context) VirtualNodeClientPolicyTlsOutput {
	return o
}

func (o VirtualNodeClientPolicyTlsOutput) ToVirtualNodeClientPolicyTlsPtrOutput() VirtualNodeClientPolicyTlsPtrOutput {
	return o.ToVirtualNodeClientPolicyTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeClientPolicyTlsOutput) ToVirtualNodeClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeClientPolicyTls) *VirtualNodeClientPolicyTls {
		return &v
	}).(VirtualNodeClientPolicyTlsPtrOutput)
}

func (o VirtualNodeClientPolicyTlsOutput) Certificate() VirtualNodeClientTlsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeClientPolicyTls) *VirtualNodeClientTlsCertificate { return v.Certificate }).(VirtualNodeClientTlsCertificatePtrOutput)
}

func (o VirtualNodeClientPolicyTlsOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeClientPolicyTls) *bool { return v.Enforce }).(pulumi.BoolPtrOutput)
}

func (o VirtualNodeClientPolicyTlsOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualNodeClientPolicyTls) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

func (o VirtualNodeClientPolicyTlsOutput) Validation() VirtualNodeTlsValidationContextOutput {
	return o.ApplyT(func(v VirtualNodeClientPolicyTls) VirtualNodeTlsValidationContext { return v.Validation }).(VirtualNodeTlsValidationContextOutput)
}

type VirtualNodeClientPolicyTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeClientPolicyTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeClientPolicyTls)(nil)).Elem()
}

func (o VirtualNodeClientPolicyTlsPtrOutput) ToVirtualNodeClientPolicyTlsPtrOutput() VirtualNodeClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeClientPolicyTlsPtrOutput) ToVirtualNodeClientPolicyTlsPtrOutputWithContext(ctx context.Context) VirtualNodeClientPolicyTlsPtrOutput {
	return o
}

func (o VirtualNodeClientPolicyTlsPtrOutput) Elem() VirtualNodeClientPolicyTlsOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicyTls) VirtualNodeClientPolicyTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeClientPolicyTls
		return ret
	}).(VirtualNodeClientPolicyTlsOutput)
}

func (o VirtualNodeClientPolicyTlsPtrOutput) Certificate() VirtualNodeClientTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicyTls) *VirtualNodeClientTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(VirtualNodeClientTlsCertificatePtrOutput)
}

func (o VirtualNodeClientPolicyTlsPtrOutput) Enforce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicyTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualNodeClientPolicyTlsPtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicyTls) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

func (o VirtualNodeClientPolicyTlsPtrOutput) Validation() VirtualNodeTlsValidationContextPtrOutput {
	return o.ApplyT(func(v *VirtualNodeClientPolicyTls) *VirtualNodeTlsValidationContext {
		if v == nil {
			return nil
		}
		return &v.Validation
	}).(VirtualNodeTlsValidationContextPtrOutput)
}

type VirtualNodeClientTlsCertificate struct {
	File *VirtualNodeListenerTlsFileCertificate `pulumi:"file"`
	SDS  *VirtualNodeListenerTlsSdsCertificate  `pulumi:"sDS"`
}

// VirtualNodeClientTlsCertificateInput is an input type that accepts VirtualNodeClientTlsCertificateArgs and VirtualNodeClientTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeClientTlsCertificateInput` via:
//
//          VirtualNodeClientTlsCertificateArgs{...}
type VirtualNodeClientTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeClientTlsCertificateOutput() VirtualNodeClientTlsCertificateOutput
	ToVirtualNodeClientTlsCertificateOutputWithContext(context.Context) VirtualNodeClientTlsCertificateOutput
}

type VirtualNodeClientTlsCertificateArgs struct {
	File VirtualNodeListenerTlsFileCertificatePtrInput `pulumi:"file"`
	SDS  VirtualNodeListenerTlsSdsCertificatePtrInput  `pulumi:"sDS"`
}

func (VirtualNodeClientTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeClientTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeClientTlsCertificateArgs) ToVirtualNodeClientTlsCertificateOutput() VirtualNodeClientTlsCertificateOutput {
	return i.ToVirtualNodeClientTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeClientTlsCertificateArgs) ToVirtualNodeClientTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeClientTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientTlsCertificateOutput)
}

func (i VirtualNodeClientTlsCertificateArgs) ToVirtualNodeClientTlsCertificatePtrOutput() VirtualNodeClientTlsCertificatePtrOutput {
	return i.ToVirtualNodeClientTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeClientTlsCertificateArgs) ToVirtualNodeClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeClientTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientTlsCertificateOutput).ToVirtualNodeClientTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeClientTlsCertificatePtrInput is an input type that accepts VirtualNodeClientTlsCertificateArgs, VirtualNodeClientTlsCertificatePtr and VirtualNodeClientTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeClientTlsCertificatePtrInput` via:
//
//          VirtualNodeClientTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeClientTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeClientTlsCertificatePtrOutput() VirtualNodeClientTlsCertificatePtrOutput
	ToVirtualNodeClientTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeClientTlsCertificatePtrOutput
}

type virtualNodeClientTlsCertificatePtrType VirtualNodeClientTlsCertificateArgs

func VirtualNodeClientTlsCertificatePtr(v *VirtualNodeClientTlsCertificateArgs) VirtualNodeClientTlsCertificatePtrInput {
	return (*virtualNodeClientTlsCertificatePtrType)(v)
}

func (*virtualNodeClientTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeClientTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeClientTlsCertificatePtrType) ToVirtualNodeClientTlsCertificatePtrOutput() VirtualNodeClientTlsCertificatePtrOutput {
	return i.ToVirtualNodeClientTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeClientTlsCertificatePtrType) ToVirtualNodeClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeClientTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeClientTlsCertificatePtrOutput)
}

type VirtualNodeClientTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeClientTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeClientTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeClientTlsCertificateOutput) ToVirtualNodeClientTlsCertificateOutput() VirtualNodeClientTlsCertificateOutput {
	return o
}

func (o VirtualNodeClientTlsCertificateOutput) ToVirtualNodeClientTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeClientTlsCertificateOutput {
	return o
}

func (o VirtualNodeClientTlsCertificateOutput) ToVirtualNodeClientTlsCertificatePtrOutput() VirtualNodeClientTlsCertificatePtrOutput {
	return o.ToVirtualNodeClientTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeClientTlsCertificateOutput) ToVirtualNodeClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeClientTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeClientTlsCertificate) *VirtualNodeClientTlsCertificate {
		return &v
	}).(VirtualNodeClientTlsCertificatePtrOutput)
}

func (o VirtualNodeClientTlsCertificateOutput) File() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeClientTlsCertificate) *VirtualNodeListenerTlsFileCertificate { return v.File }).(VirtualNodeListenerTlsFileCertificatePtrOutput)
}

func (o VirtualNodeClientTlsCertificateOutput) SDS() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeClientTlsCertificate) *VirtualNodeListenerTlsSdsCertificate { return v.SDS }).(VirtualNodeListenerTlsSdsCertificatePtrOutput)
}

type VirtualNodeClientTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeClientTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeClientTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeClientTlsCertificatePtrOutput) ToVirtualNodeClientTlsCertificatePtrOutput() VirtualNodeClientTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeClientTlsCertificatePtrOutput) ToVirtualNodeClientTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeClientTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeClientTlsCertificatePtrOutput) Elem() VirtualNodeClientTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeClientTlsCertificate) VirtualNodeClientTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeClientTlsCertificate
		return ret
	}).(VirtualNodeClientTlsCertificateOutput)
}

func (o VirtualNodeClientTlsCertificatePtrOutput) File() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeClientTlsCertificate) *VirtualNodeListenerTlsFileCertificate {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeListenerTlsFileCertificatePtrOutput)
}

func (o VirtualNodeClientTlsCertificatePtrOutput) SDS() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeClientTlsCertificate) *VirtualNodeListenerTlsSdsCertificate {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualNodeListenerTlsSdsCertificatePtrOutput)
}

type VirtualNodeConnectionPool struct {
	GRPC  *VirtualNodeGrpcConnectionPool  `pulumi:"gRPC"`
	HTTP  *VirtualNodeHttpConnectionPool  `pulumi:"hTTP"`
	HTTP2 *VirtualNodeHttp2ConnectionPool `pulumi:"hTTP2"`
	TCP   *VirtualNodeTcpConnectionPool   `pulumi:"tCP"`
}

// VirtualNodeConnectionPoolInput is an input type that accepts VirtualNodeConnectionPoolArgs and VirtualNodeConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeConnectionPoolInput` via:
//
//          VirtualNodeConnectionPoolArgs{...}
type VirtualNodeConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeConnectionPoolOutput() VirtualNodeConnectionPoolOutput
	ToVirtualNodeConnectionPoolOutputWithContext(context.Context) VirtualNodeConnectionPoolOutput
}

type VirtualNodeConnectionPoolArgs struct {
	GRPC  VirtualNodeGrpcConnectionPoolPtrInput  `pulumi:"gRPC"`
	HTTP  VirtualNodeHttpConnectionPoolPtrInput  `pulumi:"hTTP"`
	HTTP2 VirtualNodeHttp2ConnectionPoolPtrInput `pulumi:"hTTP2"`
	TCP   VirtualNodeTcpConnectionPoolPtrInput   `pulumi:"tCP"`
}

func (VirtualNodeConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeConnectionPool)(nil)).Elem()
}

func (i VirtualNodeConnectionPoolArgs) ToVirtualNodeConnectionPoolOutput() VirtualNodeConnectionPoolOutput {
	return i.ToVirtualNodeConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeConnectionPoolArgs) ToVirtualNodeConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeConnectionPoolOutput)
}

func (i VirtualNodeConnectionPoolArgs) ToVirtualNodeConnectionPoolPtrOutput() VirtualNodeConnectionPoolPtrOutput {
	return i.ToVirtualNodeConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeConnectionPoolArgs) ToVirtualNodeConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeConnectionPoolOutput).ToVirtualNodeConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeConnectionPoolPtrInput is an input type that accepts VirtualNodeConnectionPoolArgs, VirtualNodeConnectionPoolPtr and VirtualNodeConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeConnectionPoolPtrInput` via:
//
//          VirtualNodeConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualNodeConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeConnectionPoolPtrOutput() VirtualNodeConnectionPoolPtrOutput
	ToVirtualNodeConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeConnectionPoolPtrOutput
}

type virtualNodeConnectionPoolPtrType VirtualNodeConnectionPoolArgs

func VirtualNodeConnectionPoolPtr(v *VirtualNodeConnectionPoolArgs) VirtualNodeConnectionPoolPtrInput {
	return (*virtualNodeConnectionPoolPtrType)(v)
}

func (*virtualNodeConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeConnectionPool)(nil)).Elem()
}

func (i *virtualNodeConnectionPoolPtrType) ToVirtualNodeConnectionPoolPtrOutput() VirtualNodeConnectionPoolPtrOutput {
	return i.ToVirtualNodeConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeConnectionPoolPtrType) ToVirtualNodeConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeConnectionPoolPtrOutput)
}

type VirtualNodeConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeConnectionPool)(nil)).Elem()
}

func (o VirtualNodeConnectionPoolOutput) ToVirtualNodeConnectionPoolOutput() VirtualNodeConnectionPoolOutput {
	return o
}

func (o VirtualNodeConnectionPoolOutput) ToVirtualNodeConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeConnectionPoolOutput {
	return o
}

func (o VirtualNodeConnectionPoolOutput) ToVirtualNodeConnectionPoolPtrOutput() VirtualNodeConnectionPoolPtrOutput {
	return o.ToVirtualNodeConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeConnectionPoolOutput) ToVirtualNodeConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeConnectionPool) *VirtualNodeConnectionPool {
		return &v
	}).(VirtualNodeConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolOutput) GRPC() VirtualNodeGrpcConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeConnectionPool) *VirtualNodeGrpcConnectionPool { return v.GRPC }).(VirtualNodeGrpcConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolOutput) HTTP() VirtualNodeHttpConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeConnectionPool) *VirtualNodeHttpConnectionPool { return v.HTTP }).(VirtualNodeHttpConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolOutput) HTTP2() VirtualNodeHttp2ConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeConnectionPool) *VirtualNodeHttp2ConnectionPool { return v.HTTP2 }).(VirtualNodeHttp2ConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolOutput) TCP() VirtualNodeTcpConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeConnectionPool) *VirtualNodeTcpConnectionPool { return v.TCP }).(VirtualNodeTcpConnectionPoolPtrOutput)
}

type VirtualNodeConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeConnectionPool)(nil)).Elem()
}

func (o VirtualNodeConnectionPoolPtrOutput) ToVirtualNodeConnectionPoolPtrOutput() VirtualNodeConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeConnectionPoolPtrOutput) ToVirtualNodeConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeConnectionPoolPtrOutput) Elem() VirtualNodeConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeConnectionPool) VirtualNodeConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeConnectionPool
		return ret
	}).(VirtualNodeConnectionPoolOutput)
}

func (o VirtualNodeConnectionPoolPtrOutput) GRPC() VirtualNodeGrpcConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeConnectionPool) *VirtualNodeGrpcConnectionPool {
		if v == nil {
			return nil
		}
		return v.GRPC
	}).(VirtualNodeGrpcConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolPtrOutput) HTTP() VirtualNodeHttpConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeConnectionPool) *VirtualNodeHttpConnectionPool {
		if v == nil {
			return nil
		}
		return v.HTTP
	}).(VirtualNodeHttpConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolPtrOutput) HTTP2() VirtualNodeHttp2ConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeConnectionPool) *VirtualNodeHttp2ConnectionPool {
		if v == nil {
			return nil
		}
		return v.HTTP2
	}).(VirtualNodeHttp2ConnectionPoolPtrOutput)
}

func (o VirtualNodeConnectionPoolPtrOutput) TCP() VirtualNodeTcpConnectionPoolPtrOutput {
	return o.ApplyT(func(v *VirtualNodeConnectionPool) *VirtualNodeTcpConnectionPool {
		if v == nil {
			return nil
		}
		return v.TCP
	}).(VirtualNodeTcpConnectionPoolPtrOutput)
}

type VirtualNodeDnsServiceDiscovery struct {
	Hostname     string  `pulumi:"hostname"`
	ResponseType *string `pulumi:"responseType"`
}

// VirtualNodeDnsServiceDiscoveryInput is an input type that accepts VirtualNodeDnsServiceDiscoveryArgs and VirtualNodeDnsServiceDiscoveryOutput values.
// You can construct a concrete instance of `VirtualNodeDnsServiceDiscoveryInput` via:
//
//          VirtualNodeDnsServiceDiscoveryArgs{...}
type VirtualNodeDnsServiceDiscoveryInput interface {
	pulumi.Input

	ToVirtualNodeDnsServiceDiscoveryOutput() VirtualNodeDnsServiceDiscoveryOutput
	ToVirtualNodeDnsServiceDiscoveryOutputWithContext(context.Context) VirtualNodeDnsServiceDiscoveryOutput
}

type VirtualNodeDnsServiceDiscoveryArgs struct {
	Hostname     pulumi.StringInput    `pulumi:"hostname"`
	ResponseType pulumi.StringPtrInput `pulumi:"responseType"`
}

func (VirtualNodeDnsServiceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeDnsServiceDiscovery)(nil)).Elem()
}

func (i VirtualNodeDnsServiceDiscoveryArgs) ToVirtualNodeDnsServiceDiscoveryOutput() VirtualNodeDnsServiceDiscoveryOutput {
	return i.ToVirtualNodeDnsServiceDiscoveryOutputWithContext(context.Background())
}

func (i VirtualNodeDnsServiceDiscoveryArgs) ToVirtualNodeDnsServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeDnsServiceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeDnsServiceDiscoveryOutput)
}

func (i VirtualNodeDnsServiceDiscoveryArgs) ToVirtualNodeDnsServiceDiscoveryPtrOutput() VirtualNodeDnsServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i VirtualNodeDnsServiceDiscoveryArgs) ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeDnsServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeDnsServiceDiscoveryOutput).ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(ctx)
}

// VirtualNodeDnsServiceDiscoveryPtrInput is an input type that accepts VirtualNodeDnsServiceDiscoveryArgs, VirtualNodeDnsServiceDiscoveryPtr and VirtualNodeDnsServiceDiscoveryPtrOutput values.
// You can construct a concrete instance of `VirtualNodeDnsServiceDiscoveryPtrInput` via:
//
//          VirtualNodeDnsServiceDiscoveryArgs{...}
//
//  or:
//
//          nil
type VirtualNodeDnsServiceDiscoveryPtrInput interface {
	pulumi.Input

	ToVirtualNodeDnsServiceDiscoveryPtrOutput() VirtualNodeDnsServiceDiscoveryPtrOutput
	ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(context.Context) VirtualNodeDnsServiceDiscoveryPtrOutput
}

type virtualNodeDnsServiceDiscoveryPtrType VirtualNodeDnsServiceDiscoveryArgs

func VirtualNodeDnsServiceDiscoveryPtr(v *VirtualNodeDnsServiceDiscoveryArgs) VirtualNodeDnsServiceDiscoveryPtrInput {
	return (*virtualNodeDnsServiceDiscoveryPtrType)(v)
}

func (*virtualNodeDnsServiceDiscoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeDnsServiceDiscovery)(nil)).Elem()
}

func (i *virtualNodeDnsServiceDiscoveryPtrType) ToVirtualNodeDnsServiceDiscoveryPtrOutput() VirtualNodeDnsServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i *virtualNodeDnsServiceDiscoveryPtrType) ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeDnsServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeDnsServiceDiscoveryPtrOutput)
}

type VirtualNodeDnsServiceDiscoveryOutput struct{ *pulumi.OutputState }

func (VirtualNodeDnsServiceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeDnsServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeDnsServiceDiscoveryOutput) ToVirtualNodeDnsServiceDiscoveryOutput() VirtualNodeDnsServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeDnsServiceDiscoveryOutput) ToVirtualNodeDnsServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeDnsServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeDnsServiceDiscoveryOutput) ToVirtualNodeDnsServiceDiscoveryPtrOutput() VirtualNodeDnsServiceDiscoveryPtrOutput {
	return o.ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (o VirtualNodeDnsServiceDiscoveryOutput) ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeDnsServiceDiscoveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeDnsServiceDiscovery) *VirtualNodeDnsServiceDiscovery {
		return &v
	}).(VirtualNodeDnsServiceDiscoveryPtrOutput)
}

func (o VirtualNodeDnsServiceDiscoveryOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeDnsServiceDiscovery) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o VirtualNodeDnsServiceDiscoveryOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeDnsServiceDiscovery) *string { return v.ResponseType }).(pulumi.StringPtrOutput)
}

type VirtualNodeDnsServiceDiscoveryPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeDnsServiceDiscoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeDnsServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeDnsServiceDiscoveryPtrOutput) ToVirtualNodeDnsServiceDiscoveryPtrOutput() VirtualNodeDnsServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeDnsServiceDiscoveryPtrOutput) ToVirtualNodeDnsServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeDnsServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeDnsServiceDiscoveryPtrOutput) Elem() VirtualNodeDnsServiceDiscoveryOutput {
	return o.ApplyT(func(v *VirtualNodeDnsServiceDiscovery) VirtualNodeDnsServiceDiscovery {
		if v != nil {
			return *v
		}
		var ret VirtualNodeDnsServiceDiscovery
		return ret
	}).(VirtualNodeDnsServiceDiscoveryOutput)
}

func (o VirtualNodeDnsServiceDiscoveryPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeDnsServiceDiscovery) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeDnsServiceDiscoveryPtrOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeDnsServiceDiscovery) *string {
		if v == nil {
			return nil
		}
		return v.ResponseType
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeDuration struct {
	Unit  string `pulumi:"unit"`
	Value int    `pulumi:"value"`
}

// VirtualNodeDurationInput is an input type that accepts VirtualNodeDurationArgs and VirtualNodeDurationOutput values.
// You can construct a concrete instance of `VirtualNodeDurationInput` via:
//
//          VirtualNodeDurationArgs{...}
type VirtualNodeDurationInput interface {
	pulumi.Input

	ToVirtualNodeDurationOutput() VirtualNodeDurationOutput
	ToVirtualNodeDurationOutputWithContext(context.Context) VirtualNodeDurationOutput
}

type VirtualNodeDurationArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (VirtualNodeDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeDuration)(nil)).Elem()
}

func (i VirtualNodeDurationArgs) ToVirtualNodeDurationOutput() VirtualNodeDurationOutput {
	return i.ToVirtualNodeDurationOutputWithContext(context.Background())
}

func (i VirtualNodeDurationArgs) ToVirtualNodeDurationOutputWithContext(ctx context.Context) VirtualNodeDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeDurationOutput)
}

func (i VirtualNodeDurationArgs) ToVirtualNodeDurationPtrOutput() VirtualNodeDurationPtrOutput {
	return i.ToVirtualNodeDurationPtrOutputWithContext(context.Background())
}

func (i VirtualNodeDurationArgs) ToVirtualNodeDurationPtrOutputWithContext(ctx context.Context) VirtualNodeDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeDurationOutput).ToVirtualNodeDurationPtrOutputWithContext(ctx)
}

// VirtualNodeDurationPtrInput is an input type that accepts VirtualNodeDurationArgs, VirtualNodeDurationPtr and VirtualNodeDurationPtrOutput values.
// You can construct a concrete instance of `VirtualNodeDurationPtrInput` via:
//
//          VirtualNodeDurationArgs{...}
//
//  or:
//
//          nil
type VirtualNodeDurationPtrInput interface {
	pulumi.Input

	ToVirtualNodeDurationPtrOutput() VirtualNodeDurationPtrOutput
	ToVirtualNodeDurationPtrOutputWithContext(context.Context) VirtualNodeDurationPtrOutput
}

type virtualNodeDurationPtrType VirtualNodeDurationArgs

func VirtualNodeDurationPtr(v *VirtualNodeDurationArgs) VirtualNodeDurationPtrInput {
	return (*virtualNodeDurationPtrType)(v)
}

func (*virtualNodeDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeDuration)(nil)).Elem()
}

func (i *virtualNodeDurationPtrType) ToVirtualNodeDurationPtrOutput() VirtualNodeDurationPtrOutput {
	return i.ToVirtualNodeDurationPtrOutputWithContext(context.Background())
}

func (i *virtualNodeDurationPtrType) ToVirtualNodeDurationPtrOutputWithContext(ctx context.Context) VirtualNodeDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeDurationOutput struct{ *pulumi.OutputState }

func (VirtualNodeDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeDuration)(nil)).Elem()
}

func (o VirtualNodeDurationOutput) ToVirtualNodeDurationOutput() VirtualNodeDurationOutput {
	return o
}

func (o VirtualNodeDurationOutput) ToVirtualNodeDurationOutputWithContext(ctx context.Context) VirtualNodeDurationOutput {
	return o
}

func (o VirtualNodeDurationOutput) ToVirtualNodeDurationPtrOutput() VirtualNodeDurationPtrOutput {
	return o.ToVirtualNodeDurationPtrOutputWithContext(context.Background())
}

func (o VirtualNodeDurationOutput) ToVirtualNodeDurationPtrOutputWithContext(ctx context.Context) VirtualNodeDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeDuration) *VirtualNodeDuration {
		return &v
	}).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeDuration) string { return v.Unit }).(pulumi.StringOutput)
}

func (o VirtualNodeDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeDuration) int { return v.Value }).(pulumi.IntOutput)
}

type VirtualNodeDurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeDuration)(nil)).Elem()
}

func (o VirtualNodeDurationPtrOutput) ToVirtualNodeDurationPtrOutput() VirtualNodeDurationPtrOutput {
	return o
}

func (o VirtualNodeDurationPtrOutput) ToVirtualNodeDurationPtrOutputWithContext(ctx context.Context) VirtualNodeDurationPtrOutput {
	return o
}

func (o VirtualNodeDurationPtrOutput) Elem() VirtualNodeDurationOutput {
	return o.ApplyT(func(v *VirtualNodeDuration) VirtualNodeDuration {
		if v != nil {
			return *v
		}
		var ret VirtualNodeDuration
		return ret
	}).(VirtualNodeDurationOutput)
}

func (o VirtualNodeDurationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeDuration) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeDurationPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeFileAccessLog struct {
	Path string `pulumi:"path"`
}

// VirtualNodeFileAccessLogInput is an input type that accepts VirtualNodeFileAccessLogArgs and VirtualNodeFileAccessLogOutput values.
// You can construct a concrete instance of `VirtualNodeFileAccessLogInput` via:
//
//          VirtualNodeFileAccessLogArgs{...}
type VirtualNodeFileAccessLogInput interface {
	pulumi.Input

	ToVirtualNodeFileAccessLogOutput() VirtualNodeFileAccessLogOutput
	ToVirtualNodeFileAccessLogOutputWithContext(context.Context) VirtualNodeFileAccessLogOutput
}

type VirtualNodeFileAccessLogArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualNodeFileAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeFileAccessLog)(nil)).Elem()
}

func (i VirtualNodeFileAccessLogArgs) ToVirtualNodeFileAccessLogOutput() VirtualNodeFileAccessLogOutput {
	return i.ToVirtualNodeFileAccessLogOutputWithContext(context.Background())
}

func (i VirtualNodeFileAccessLogArgs) ToVirtualNodeFileAccessLogOutputWithContext(ctx context.Context) VirtualNodeFileAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeFileAccessLogOutput)
}

func (i VirtualNodeFileAccessLogArgs) ToVirtualNodeFileAccessLogPtrOutput() VirtualNodeFileAccessLogPtrOutput {
	return i.ToVirtualNodeFileAccessLogPtrOutputWithContext(context.Background())
}

func (i VirtualNodeFileAccessLogArgs) ToVirtualNodeFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeFileAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeFileAccessLogOutput).ToVirtualNodeFileAccessLogPtrOutputWithContext(ctx)
}

// VirtualNodeFileAccessLogPtrInput is an input type that accepts VirtualNodeFileAccessLogArgs, VirtualNodeFileAccessLogPtr and VirtualNodeFileAccessLogPtrOutput values.
// You can construct a concrete instance of `VirtualNodeFileAccessLogPtrInput` via:
//
//          VirtualNodeFileAccessLogArgs{...}
//
//  or:
//
//          nil
type VirtualNodeFileAccessLogPtrInput interface {
	pulumi.Input

	ToVirtualNodeFileAccessLogPtrOutput() VirtualNodeFileAccessLogPtrOutput
	ToVirtualNodeFileAccessLogPtrOutputWithContext(context.Context) VirtualNodeFileAccessLogPtrOutput
}

type virtualNodeFileAccessLogPtrType VirtualNodeFileAccessLogArgs

func VirtualNodeFileAccessLogPtr(v *VirtualNodeFileAccessLogArgs) VirtualNodeFileAccessLogPtrInput {
	return (*virtualNodeFileAccessLogPtrType)(v)
}

func (*virtualNodeFileAccessLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeFileAccessLog)(nil)).Elem()
}

func (i *virtualNodeFileAccessLogPtrType) ToVirtualNodeFileAccessLogPtrOutput() VirtualNodeFileAccessLogPtrOutput {
	return i.ToVirtualNodeFileAccessLogPtrOutputWithContext(context.Background())
}

func (i *virtualNodeFileAccessLogPtrType) ToVirtualNodeFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeFileAccessLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeFileAccessLogPtrOutput)
}

type VirtualNodeFileAccessLogOutput struct{ *pulumi.OutputState }

func (VirtualNodeFileAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeFileAccessLog)(nil)).Elem()
}

func (o VirtualNodeFileAccessLogOutput) ToVirtualNodeFileAccessLogOutput() VirtualNodeFileAccessLogOutput {
	return o
}

func (o VirtualNodeFileAccessLogOutput) ToVirtualNodeFileAccessLogOutputWithContext(ctx context.Context) VirtualNodeFileAccessLogOutput {
	return o
}

func (o VirtualNodeFileAccessLogOutput) ToVirtualNodeFileAccessLogPtrOutput() VirtualNodeFileAccessLogPtrOutput {
	return o.ToVirtualNodeFileAccessLogPtrOutputWithContext(context.Background())
}

func (o VirtualNodeFileAccessLogOutput) ToVirtualNodeFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeFileAccessLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeFileAccessLog) *VirtualNodeFileAccessLog {
		return &v
	}).(VirtualNodeFileAccessLogPtrOutput)
}

func (o VirtualNodeFileAccessLogOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeFileAccessLog) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualNodeFileAccessLogPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeFileAccessLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeFileAccessLog)(nil)).Elem()
}

func (o VirtualNodeFileAccessLogPtrOutput) ToVirtualNodeFileAccessLogPtrOutput() VirtualNodeFileAccessLogPtrOutput {
	return o
}

func (o VirtualNodeFileAccessLogPtrOutput) ToVirtualNodeFileAccessLogPtrOutputWithContext(ctx context.Context) VirtualNodeFileAccessLogPtrOutput {
	return o
}

func (o VirtualNodeFileAccessLogPtrOutput) Elem() VirtualNodeFileAccessLogOutput {
	return o.ApplyT(func(v *VirtualNodeFileAccessLog) VirtualNodeFileAccessLog {
		if v != nil {
			return *v
		}
		var ret VirtualNodeFileAccessLog
		return ret
	}).(VirtualNodeFileAccessLogOutput)
}

func (o VirtualNodeFileAccessLogPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeFileAccessLog) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeGrpcConnectionPool struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualNodeGrpcConnectionPoolInput is an input type that accepts VirtualNodeGrpcConnectionPoolArgs and VirtualNodeGrpcConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeGrpcConnectionPoolInput` via:
//
//          VirtualNodeGrpcConnectionPoolArgs{...}
type VirtualNodeGrpcConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeGrpcConnectionPoolOutput() VirtualNodeGrpcConnectionPoolOutput
	ToVirtualNodeGrpcConnectionPoolOutputWithContext(context.Context) VirtualNodeGrpcConnectionPoolOutput
}

type VirtualNodeGrpcConnectionPoolArgs struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualNodeGrpcConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeGrpcConnectionPool)(nil)).Elem()
}

func (i VirtualNodeGrpcConnectionPoolArgs) ToVirtualNodeGrpcConnectionPoolOutput() VirtualNodeGrpcConnectionPoolOutput {
	return i.ToVirtualNodeGrpcConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeGrpcConnectionPoolArgs) ToVirtualNodeGrpcConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeGrpcConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeGrpcConnectionPoolOutput)
}

func (i VirtualNodeGrpcConnectionPoolArgs) ToVirtualNodeGrpcConnectionPoolPtrOutput() VirtualNodeGrpcConnectionPoolPtrOutput {
	return i.ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeGrpcConnectionPoolArgs) ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeGrpcConnectionPoolOutput).ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeGrpcConnectionPoolPtrInput is an input type that accepts VirtualNodeGrpcConnectionPoolArgs, VirtualNodeGrpcConnectionPoolPtr and VirtualNodeGrpcConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeGrpcConnectionPoolPtrInput` via:
//
//          VirtualNodeGrpcConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualNodeGrpcConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeGrpcConnectionPoolPtrOutput() VirtualNodeGrpcConnectionPoolPtrOutput
	ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeGrpcConnectionPoolPtrOutput
}

type virtualNodeGrpcConnectionPoolPtrType VirtualNodeGrpcConnectionPoolArgs

func VirtualNodeGrpcConnectionPoolPtr(v *VirtualNodeGrpcConnectionPoolArgs) VirtualNodeGrpcConnectionPoolPtrInput {
	return (*virtualNodeGrpcConnectionPoolPtrType)(v)
}

func (*virtualNodeGrpcConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeGrpcConnectionPool)(nil)).Elem()
}

func (i *virtualNodeGrpcConnectionPoolPtrType) ToVirtualNodeGrpcConnectionPoolPtrOutput() VirtualNodeGrpcConnectionPoolPtrOutput {
	return i.ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeGrpcConnectionPoolPtrType) ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeGrpcConnectionPoolPtrOutput)
}

type VirtualNodeGrpcConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeGrpcConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeGrpcConnectionPool)(nil)).Elem()
}

func (o VirtualNodeGrpcConnectionPoolOutput) ToVirtualNodeGrpcConnectionPoolOutput() VirtualNodeGrpcConnectionPoolOutput {
	return o
}

func (o VirtualNodeGrpcConnectionPoolOutput) ToVirtualNodeGrpcConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeGrpcConnectionPoolOutput {
	return o
}

func (o VirtualNodeGrpcConnectionPoolOutput) ToVirtualNodeGrpcConnectionPoolPtrOutput() VirtualNodeGrpcConnectionPoolPtrOutput {
	return o.ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeGrpcConnectionPoolOutput) ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeGrpcConnectionPool) *VirtualNodeGrpcConnectionPool {
		return &v
	}).(VirtualNodeGrpcConnectionPoolPtrOutput)
}

func (o VirtualNodeGrpcConnectionPoolOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeGrpcConnectionPool) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualNodeGrpcConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeGrpcConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeGrpcConnectionPool)(nil)).Elem()
}

func (o VirtualNodeGrpcConnectionPoolPtrOutput) ToVirtualNodeGrpcConnectionPoolPtrOutput() VirtualNodeGrpcConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeGrpcConnectionPoolPtrOutput) ToVirtualNodeGrpcConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeGrpcConnectionPoolPtrOutput) Elem() VirtualNodeGrpcConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeGrpcConnectionPool) VirtualNodeGrpcConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeGrpcConnectionPool
		return ret
	}).(VirtualNodeGrpcConnectionPoolOutput)
}

func (o VirtualNodeGrpcConnectionPoolPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeGrpcConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeGrpcTimeout struct {
	Idle       *VirtualNodeDuration `pulumi:"idle"`
	PerRequest *VirtualNodeDuration `pulumi:"perRequest"`
}

// VirtualNodeGrpcTimeoutInput is an input type that accepts VirtualNodeGrpcTimeoutArgs and VirtualNodeGrpcTimeoutOutput values.
// You can construct a concrete instance of `VirtualNodeGrpcTimeoutInput` via:
//
//          VirtualNodeGrpcTimeoutArgs{...}
type VirtualNodeGrpcTimeoutInput interface {
	pulumi.Input

	ToVirtualNodeGrpcTimeoutOutput() VirtualNodeGrpcTimeoutOutput
	ToVirtualNodeGrpcTimeoutOutputWithContext(context.Context) VirtualNodeGrpcTimeoutOutput
}

type VirtualNodeGrpcTimeoutArgs struct {
	Idle       VirtualNodeDurationPtrInput `pulumi:"idle"`
	PerRequest VirtualNodeDurationPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeGrpcTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeGrpcTimeout)(nil)).Elem()
}

func (i VirtualNodeGrpcTimeoutArgs) ToVirtualNodeGrpcTimeoutOutput() VirtualNodeGrpcTimeoutOutput {
	return i.ToVirtualNodeGrpcTimeoutOutputWithContext(context.Background())
}

func (i VirtualNodeGrpcTimeoutArgs) ToVirtualNodeGrpcTimeoutOutputWithContext(ctx context.Context) VirtualNodeGrpcTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeGrpcTimeoutOutput)
}

func (i VirtualNodeGrpcTimeoutArgs) ToVirtualNodeGrpcTimeoutPtrOutput() VirtualNodeGrpcTimeoutPtrOutput {
	return i.ToVirtualNodeGrpcTimeoutPtrOutputWithContext(context.Background())
}

func (i VirtualNodeGrpcTimeoutArgs) ToVirtualNodeGrpcTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeGrpcTimeoutOutput).ToVirtualNodeGrpcTimeoutPtrOutputWithContext(ctx)
}

// VirtualNodeGrpcTimeoutPtrInput is an input type that accepts VirtualNodeGrpcTimeoutArgs, VirtualNodeGrpcTimeoutPtr and VirtualNodeGrpcTimeoutPtrOutput values.
// You can construct a concrete instance of `VirtualNodeGrpcTimeoutPtrInput` via:
//
//          VirtualNodeGrpcTimeoutArgs{...}
//
//  or:
//
//          nil
type VirtualNodeGrpcTimeoutPtrInput interface {
	pulumi.Input

	ToVirtualNodeGrpcTimeoutPtrOutput() VirtualNodeGrpcTimeoutPtrOutput
	ToVirtualNodeGrpcTimeoutPtrOutputWithContext(context.Context) VirtualNodeGrpcTimeoutPtrOutput
}

type virtualNodeGrpcTimeoutPtrType VirtualNodeGrpcTimeoutArgs

func VirtualNodeGrpcTimeoutPtr(v *VirtualNodeGrpcTimeoutArgs) VirtualNodeGrpcTimeoutPtrInput {
	return (*virtualNodeGrpcTimeoutPtrType)(v)
}

func (*virtualNodeGrpcTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeGrpcTimeout)(nil)).Elem()
}

func (i *virtualNodeGrpcTimeoutPtrType) ToVirtualNodeGrpcTimeoutPtrOutput() VirtualNodeGrpcTimeoutPtrOutput {
	return i.ToVirtualNodeGrpcTimeoutPtrOutputWithContext(context.Background())
}

func (i *virtualNodeGrpcTimeoutPtrType) ToVirtualNodeGrpcTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeGrpcTimeoutPtrOutput)
}

type VirtualNodeGrpcTimeoutOutput struct{ *pulumi.OutputState }

func (VirtualNodeGrpcTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeGrpcTimeout)(nil)).Elem()
}

func (o VirtualNodeGrpcTimeoutOutput) ToVirtualNodeGrpcTimeoutOutput() VirtualNodeGrpcTimeoutOutput {
	return o
}

func (o VirtualNodeGrpcTimeoutOutput) ToVirtualNodeGrpcTimeoutOutputWithContext(ctx context.Context) VirtualNodeGrpcTimeoutOutput {
	return o
}

func (o VirtualNodeGrpcTimeoutOutput) ToVirtualNodeGrpcTimeoutPtrOutput() VirtualNodeGrpcTimeoutPtrOutput {
	return o.ToVirtualNodeGrpcTimeoutPtrOutputWithContext(context.Background())
}

func (o VirtualNodeGrpcTimeoutOutput) ToVirtualNodeGrpcTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeGrpcTimeout) *VirtualNodeGrpcTimeout {
		return &v
	}).(VirtualNodeGrpcTimeoutPtrOutput)
}

func (o VirtualNodeGrpcTimeoutOutput) Idle() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v VirtualNodeGrpcTimeout) *VirtualNodeDuration { return v.Idle }).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeGrpcTimeoutOutput) PerRequest() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v VirtualNodeGrpcTimeout) *VirtualNodeDuration { return v.PerRequest }).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeGrpcTimeoutPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeGrpcTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeGrpcTimeout)(nil)).Elem()
}

func (o VirtualNodeGrpcTimeoutPtrOutput) ToVirtualNodeGrpcTimeoutPtrOutput() VirtualNodeGrpcTimeoutPtrOutput {
	return o
}

func (o VirtualNodeGrpcTimeoutPtrOutput) ToVirtualNodeGrpcTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeGrpcTimeoutPtrOutput {
	return o
}

func (o VirtualNodeGrpcTimeoutPtrOutput) Elem() VirtualNodeGrpcTimeoutOutput {
	return o.ApplyT(func(v *VirtualNodeGrpcTimeout) VirtualNodeGrpcTimeout {
		if v != nil {
			return *v
		}
		var ret VirtualNodeGrpcTimeout
		return ret
	}).(VirtualNodeGrpcTimeoutOutput)
}

func (o VirtualNodeGrpcTimeoutPtrOutput) Idle() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeGrpcTimeout) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeGrpcTimeoutPtrOutput) PerRequest() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeGrpcTimeout) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeHealthCheck struct {
	HealthyThreshold   int     `pulumi:"healthyThreshold"`
	IntervalMillis     int     `pulumi:"intervalMillis"`
	Path               *string `pulumi:"path"`
	Port               *int    `pulumi:"port"`
	Protocol           string  `pulumi:"protocol"`
	TimeoutMillis      int     `pulumi:"timeoutMillis"`
	UnhealthyThreshold int     `pulumi:"unhealthyThreshold"`
}

// VirtualNodeHealthCheckInput is an input type that accepts VirtualNodeHealthCheckArgs and VirtualNodeHealthCheckOutput values.
// You can construct a concrete instance of `VirtualNodeHealthCheckInput` via:
//
//          VirtualNodeHealthCheckArgs{...}
type VirtualNodeHealthCheckInput interface {
	pulumi.Input

	ToVirtualNodeHealthCheckOutput() VirtualNodeHealthCheckOutput
	ToVirtualNodeHealthCheckOutputWithContext(context.Context) VirtualNodeHealthCheckOutput
}

type VirtualNodeHealthCheckArgs struct {
	HealthyThreshold   pulumi.IntInput       `pulumi:"healthyThreshold"`
	IntervalMillis     pulumi.IntInput       `pulumi:"intervalMillis"`
	Path               pulumi.StringPtrInput `pulumi:"path"`
	Port               pulumi.IntPtrInput    `pulumi:"port"`
	Protocol           pulumi.StringInput    `pulumi:"protocol"`
	TimeoutMillis      pulumi.IntInput       `pulumi:"timeoutMillis"`
	UnhealthyThreshold pulumi.IntInput       `pulumi:"unhealthyThreshold"`
}

func (VirtualNodeHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHealthCheck)(nil)).Elem()
}

func (i VirtualNodeHealthCheckArgs) ToVirtualNodeHealthCheckOutput() VirtualNodeHealthCheckOutput {
	return i.ToVirtualNodeHealthCheckOutputWithContext(context.Background())
}

func (i VirtualNodeHealthCheckArgs) ToVirtualNodeHealthCheckOutputWithContext(ctx context.Context) VirtualNodeHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHealthCheckOutput)
}

func (i VirtualNodeHealthCheckArgs) ToVirtualNodeHealthCheckPtrOutput() VirtualNodeHealthCheckPtrOutput {
	return i.ToVirtualNodeHealthCheckPtrOutputWithContext(context.Background())
}

func (i VirtualNodeHealthCheckArgs) ToVirtualNodeHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHealthCheckOutput).ToVirtualNodeHealthCheckPtrOutputWithContext(ctx)
}

// VirtualNodeHealthCheckPtrInput is an input type that accepts VirtualNodeHealthCheckArgs, VirtualNodeHealthCheckPtr and VirtualNodeHealthCheckPtrOutput values.
// You can construct a concrete instance of `VirtualNodeHealthCheckPtrInput` via:
//
//          VirtualNodeHealthCheckArgs{...}
//
//  or:
//
//          nil
type VirtualNodeHealthCheckPtrInput interface {
	pulumi.Input

	ToVirtualNodeHealthCheckPtrOutput() VirtualNodeHealthCheckPtrOutput
	ToVirtualNodeHealthCheckPtrOutputWithContext(context.Context) VirtualNodeHealthCheckPtrOutput
}

type virtualNodeHealthCheckPtrType VirtualNodeHealthCheckArgs

func VirtualNodeHealthCheckPtr(v *VirtualNodeHealthCheckArgs) VirtualNodeHealthCheckPtrInput {
	return (*virtualNodeHealthCheckPtrType)(v)
}

func (*virtualNodeHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHealthCheck)(nil)).Elem()
}

func (i *virtualNodeHealthCheckPtrType) ToVirtualNodeHealthCheckPtrOutput() VirtualNodeHealthCheckPtrOutput {
	return i.ToVirtualNodeHealthCheckPtrOutputWithContext(context.Background())
}

func (i *virtualNodeHealthCheckPtrType) ToVirtualNodeHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHealthCheckPtrOutput)
}

type VirtualNodeHealthCheckOutput struct{ *pulumi.OutputState }

func (VirtualNodeHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHealthCheck)(nil)).Elem()
}

func (o VirtualNodeHealthCheckOutput) ToVirtualNodeHealthCheckOutput() VirtualNodeHealthCheckOutput {
	return o
}

func (o VirtualNodeHealthCheckOutput) ToVirtualNodeHealthCheckOutputWithContext(ctx context.Context) VirtualNodeHealthCheckOutput {
	return o
}

func (o VirtualNodeHealthCheckOutput) ToVirtualNodeHealthCheckPtrOutput() VirtualNodeHealthCheckPtrOutput {
	return o.ToVirtualNodeHealthCheckPtrOutputWithContext(context.Background())
}

func (o VirtualNodeHealthCheckOutput) ToVirtualNodeHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeHealthCheck) *VirtualNodeHealthCheck {
		return &v
	}).(VirtualNodeHealthCheckPtrOutput)
}

func (o VirtualNodeHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o VirtualNodeHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

func (o VirtualNodeHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o VirtualNodeHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o VirtualNodeHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o VirtualNodeHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

func (o VirtualNodeHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualNodeHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHealthCheck)(nil)).Elem()
}

func (o VirtualNodeHealthCheckPtrOutput) ToVirtualNodeHealthCheckPtrOutput() VirtualNodeHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeHealthCheckPtrOutput) ToVirtualNodeHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeHealthCheckPtrOutput) Elem() VirtualNodeHealthCheckOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) VirtualNodeHealthCheck {
		if v != nil {
			return *v
		}
		var ret VirtualNodeHealthCheck
		return ret
	}).(VirtualNodeHealthCheckOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) IntervalMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalMillis
	}).(pulumi.IntPtrOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) TimeoutMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutMillis
	}).(pulumi.IntPtrOutput)
}

func (o VirtualNodeHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeHttp2ConnectionPool struct {
	MaxRequests int `pulumi:"maxRequests"`
}

// VirtualNodeHttp2ConnectionPoolInput is an input type that accepts VirtualNodeHttp2ConnectionPoolArgs and VirtualNodeHttp2ConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeHttp2ConnectionPoolInput` via:
//
//          VirtualNodeHttp2ConnectionPoolArgs{...}
type VirtualNodeHttp2ConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeHttp2ConnectionPoolOutput() VirtualNodeHttp2ConnectionPoolOutput
	ToVirtualNodeHttp2ConnectionPoolOutputWithContext(context.Context) VirtualNodeHttp2ConnectionPoolOutput
}

type VirtualNodeHttp2ConnectionPoolArgs struct {
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
}

func (VirtualNodeHttp2ConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHttp2ConnectionPool)(nil)).Elem()
}

func (i VirtualNodeHttp2ConnectionPoolArgs) ToVirtualNodeHttp2ConnectionPoolOutput() VirtualNodeHttp2ConnectionPoolOutput {
	return i.ToVirtualNodeHttp2ConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeHttp2ConnectionPoolArgs) ToVirtualNodeHttp2ConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeHttp2ConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttp2ConnectionPoolOutput)
}

func (i VirtualNodeHttp2ConnectionPoolArgs) ToVirtualNodeHttp2ConnectionPoolPtrOutput() VirtualNodeHttp2ConnectionPoolPtrOutput {
	return i.ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeHttp2ConnectionPoolArgs) ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttp2ConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttp2ConnectionPoolOutput).ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeHttp2ConnectionPoolPtrInput is an input type that accepts VirtualNodeHttp2ConnectionPoolArgs, VirtualNodeHttp2ConnectionPoolPtr and VirtualNodeHttp2ConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeHttp2ConnectionPoolPtrInput` via:
//
//          VirtualNodeHttp2ConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualNodeHttp2ConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeHttp2ConnectionPoolPtrOutput() VirtualNodeHttp2ConnectionPoolPtrOutput
	ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeHttp2ConnectionPoolPtrOutput
}

type virtualNodeHttp2ConnectionPoolPtrType VirtualNodeHttp2ConnectionPoolArgs

func VirtualNodeHttp2ConnectionPoolPtr(v *VirtualNodeHttp2ConnectionPoolArgs) VirtualNodeHttp2ConnectionPoolPtrInput {
	return (*virtualNodeHttp2ConnectionPoolPtrType)(v)
}

func (*virtualNodeHttp2ConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHttp2ConnectionPool)(nil)).Elem()
}

func (i *virtualNodeHttp2ConnectionPoolPtrType) ToVirtualNodeHttp2ConnectionPoolPtrOutput() VirtualNodeHttp2ConnectionPoolPtrOutput {
	return i.ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeHttp2ConnectionPoolPtrType) ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttp2ConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttp2ConnectionPoolPtrOutput)
}

type VirtualNodeHttp2ConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeHttp2ConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHttp2ConnectionPool)(nil)).Elem()
}

func (o VirtualNodeHttp2ConnectionPoolOutput) ToVirtualNodeHttp2ConnectionPoolOutput() VirtualNodeHttp2ConnectionPoolOutput {
	return o
}

func (o VirtualNodeHttp2ConnectionPoolOutput) ToVirtualNodeHttp2ConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeHttp2ConnectionPoolOutput {
	return o
}

func (o VirtualNodeHttp2ConnectionPoolOutput) ToVirtualNodeHttp2ConnectionPoolPtrOutput() VirtualNodeHttp2ConnectionPoolPtrOutput {
	return o.ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeHttp2ConnectionPoolOutput) ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttp2ConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeHttp2ConnectionPool) *VirtualNodeHttp2ConnectionPool {
		return &v
	}).(VirtualNodeHttp2ConnectionPoolPtrOutput)
}

func (o VirtualNodeHttp2ConnectionPoolOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeHttp2ConnectionPool) int { return v.MaxRequests }).(pulumi.IntOutput)
}

type VirtualNodeHttp2ConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeHttp2ConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHttp2ConnectionPool)(nil)).Elem()
}

func (o VirtualNodeHttp2ConnectionPoolPtrOutput) ToVirtualNodeHttp2ConnectionPoolPtrOutput() VirtualNodeHttp2ConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeHttp2ConnectionPoolPtrOutput) ToVirtualNodeHttp2ConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttp2ConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeHttp2ConnectionPoolPtrOutput) Elem() VirtualNodeHttp2ConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeHttp2ConnectionPool) VirtualNodeHttp2ConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeHttp2ConnectionPool
		return ret
	}).(VirtualNodeHttp2ConnectionPoolOutput)
}

func (o VirtualNodeHttp2ConnectionPoolPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHttp2ConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeHttpConnectionPool struct {
	MaxConnections     int  `pulumi:"maxConnections"`
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// VirtualNodeHttpConnectionPoolInput is an input type that accepts VirtualNodeHttpConnectionPoolArgs and VirtualNodeHttpConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeHttpConnectionPoolInput` via:
//
//          VirtualNodeHttpConnectionPoolArgs{...}
type VirtualNodeHttpConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeHttpConnectionPoolOutput() VirtualNodeHttpConnectionPoolOutput
	ToVirtualNodeHttpConnectionPoolOutputWithContext(context.Context) VirtualNodeHttpConnectionPoolOutput
}

type VirtualNodeHttpConnectionPoolArgs struct {
	MaxConnections     pulumi.IntInput    `pulumi:"maxConnections"`
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (VirtualNodeHttpConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHttpConnectionPool)(nil)).Elem()
}

func (i VirtualNodeHttpConnectionPoolArgs) ToVirtualNodeHttpConnectionPoolOutput() VirtualNodeHttpConnectionPoolOutput {
	return i.ToVirtualNodeHttpConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeHttpConnectionPoolArgs) ToVirtualNodeHttpConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeHttpConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttpConnectionPoolOutput)
}

func (i VirtualNodeHttpConnectionPoolArgs) ToVirtualNodeHttpConnectionPoolPtrOutput() VirtualNodeHttpConnectionPoolPtrOutput {
	return i.ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeHttpConnectionPoolArgs) ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttpConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttpConnectionPoolOutput).ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeHttpConnectionPoolPtrInput is an input type that accepts VirtualNodeHttpConnectionPoolArgs, VirtualNodeHttpConnectionPoolPtr and VirtualNodeHttpConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeHttpConnectionPoolPtrInput` via:
//
//          VirtualNodeHttpConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualNodeHttpConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeHttpConnectionPoolPtrOutput() VirtualNodeHttpConnectionPoolPtrOutput
	ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeHttpConnectionPoolPtrOutput
}

type virtualNodeHttpConnectionPoolPtrType VirtualNodeHttpConnectionPoolArgs

func VirtualNodeHttpConnectionPoolPtr(v *VirtualNodeHttpConnectionPoolArgs) VirtualNodeHttpConnectionPoolPtrInput {
	return (*virtualNodeHttpConnectionPoolPtrType)(v)
}

func (*virtualNodeHttpConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHttpConnectionPool)(nil)).Elem()
}

func (i *virtualNodeHttpConnectionPoolPtrType) ToVirtualNodeHttpConnectionPoolPtrOutput() VirtualNodeHttpConnectionPoolPtrOutput {
	return i.ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeHttpConnectionPoolPtrType) ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttpConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttpConnectionPoolPtrOutput)
}

type VirtualNodeHttpConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeHttpConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHttpConnectionPool)(nil)).Elem()
}

func (o VirtualNodeHttpConnectionPoolOutput) ToVirtualNodeHttpConnectionPoolOutput() VirtualNodeHttpConnectionPoolOutput {
	return o
}

func (o VirtualNodeHttpConnectionPoolOutput) ToVirtualNodeHttpConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeHttpConnectionPoolOutput {
	return o
}

func (o VirtualNodeHttpConnectionPoolOutput) ToVirtualNodeHttpConnectionPoolPtrOutput() VirtualNodeHttpConnectionPoolPtrOutput {
	return o.ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeHttpConnectionPoolOutput) ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttpConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeHttpConnectionPool) *VirtualNodeHttpConnectionPool {
		return &v
	}).(VirtualNodeHttpConnectionPoolPtrOutput)
}

func (o VirtualNodeHttpConnectionPoolOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeHttpConnectionPool) int { return v.MaxConnections }).(pulumi.IntOutput)
}

func (o VirtualNodeHttpConnectionPoolOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNodeHttpConnectionPool) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type VirtualNodeHttpConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeHttpConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHttpConnectionPool)(nil)).Elem()
}

func (o VirtualNodeHttpConnectionPoolPtrOutput) ToVirtualNodeHttpConnectionPoolPtrOutput() VirtualNodeHttpConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeHttpConnectionPoolPtrOutput) ToVirtualNodeHttpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeHttpConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeHttpConnectionPoolPtrOutput) Elem() VirtualNodeHttpConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeHttpConnectionPool) VirtualNodeHttpConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeHttpConnectionPool
		return ret
	}).(VirtualNodeHttpConnectionPoolOutput)
}

func (o VirtualNodeHttpConnectionPoolPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHttpConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

func (o VirtualNodeHttpConnectionPoolPtrOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHttpConnectionPool) *int {
		if v == nil {
			return nil
		}
		return v.MaxPendingRequests
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeHttpTimeout struct {
	Idle       *VirtualNodeDuration `pulumi:"idle"`
	PerRequest *VirtualNodeDuration `pulumi:"perRequest"`
}

// VirtualNodeHttpTimeoutInput is an input type that accepts VirtualNodeHttpTimeoutArgs and VirtualNodeHttpTimeoutOutput values.
// You can construct a concrete instance of `VirtualNodeHttpTimeoutInput` via:
//
//          VirtualNodeHttpTimeoutArgs{...}
type VirtualNodeHttpTimeoutInput interface {
	pulumi.Input

	ToVirtualNodeHttpTimeoutOutput() VirtualNodeHttpTimeoutOutput
	ToVirtualNodeHttpTimeoutOutputWithContext(context.Context) VirtualNodeHttpTimeoutOutput
}

type VirtualNodeHttpTimeoutArgs struct {
	Idle       VirtualNodeDurationPtrInput `pulumi:"idle"`
	PerRequest VirtualNodeDurationPtrInput `pulumi:"perRequest"`
}

func (VirtualNodeHttpTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHttpTimeout)(nil)).Elem()
}

func (i VirtualNodeHttpTimeoutArgs) ToVirtualNodeHttpTimeoutOutput() VirtualNodeHttpTimeoutOutput {
	return i.ToVirtualNodeHttpTimeoutOutputWithContext(context.Background())
}

func (i VirtualNodeHttpTimeoutArgs) ToVirtualNodeHttpTimeoutOutputWithContext(ctx context.Context) VirtualNodeHttpTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttpTimeoutOutput)
}

func (i VirtualNodeHttpTimeoutArgs) ToVirtualNodeHttpTimeoutPtrOutput() VirtualNodeHttpTimeoutPtrOutput {
	return i.ToVirtualNodeHttpTimeoutPtrOutputWithContext(context.Background())
}

func (i VirtualNodeHttpTimeoutArgs) ToVirtualNodeHttpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeHttpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttpTimeoutOutput).ToVirtualNodeHttpTimeoutPtrOutputWithContext(ctx)
}

// VirtualNodeHttpTimeoutPtrInput is an input type that accepts VirtualNodeHttpTimeoutArgs, VirtualNodeHttpTimeoutPtr and VirtualNodeHttpTimeoutPtrOutput values.
// You can construct a concrete instance of `VirtualNodeHttpTimeoutPtrInput` via:
//
//          VirtualNodeHttpTimeoutArgs{...}
//
//  or:
//
//          nil
type VirtualNodeHttpTimeoutPtrInput interface {
	pulumi.Input

	ToVirtualNodeHttpTimeoutPtrOutput() VirtualNodeHttpTimeoutPtrOutput
	ToVirtualNodeHttpTimeoutPtrOutputWithContext(context.Context) VirtualNodeHttpTimeoutPtrOutput
}

type virtualNodeHttpTimeoutPtrType VirtualNodeHttpTimeoutArgs

func VirtualNodeHttpTimeoutPtr(v *VirtualNodeHttpTimeoutArgs) VirtualNodeHttpTimeoutPtrInput {
	return (*virtualNodeHttpTimeoutPtrType)(v)
}

func (*virtualNodeHttpTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHttpTimeout)(nil)).Elem()
}

func (i *virtualNodeHttpTimeoutPtrType) ToVirtualNodeHttpTimeoutPtrOutput() VirtualNodeHttpTimeoutPtrOutput {
	return i.ToVirtualNodeHttpTimeoutPtrOutputWithContext(context.Background())
}

func (i *virtualNodeHttpTimeoutPtrType) ToVirtualNodeHttpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeHttpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeHttpTimeoutPtrOutput)
}

type VirtualNodeHttpTimeoutOutput struct{ *pulumi.OutputState }

func (VirtualNodeHttpTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeHttpTimeout)(nil)).Elem()
}

func (o VirtualNodeHttpTimeoutOutput) ToVirtualNodeHttpTimeoutOutput() VirtualNodeHttpTimeoutOutput {
	return o
}

func (o VirtualNodeHttpTimeoutOutput) ToVirtualNodeHttpTimeoutOutputWithContext(ctx context.Context) VirtualNodeHttpTimeoutOutput {
	return o
}

func (o VirtualNodeHttpTimeoutOutput) ToVirtualNodeHttpTimeoutPtrOutput() VirtualNodeHttpTimeoutPtrOutput {
	return o.ToVirtualNodeHttpTimeoutPtrOutputWithContext(context.Background())
}

func (o VirtualNodeHttpTimeoutOutput) ToVirtualNodeHttpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeHttpTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeHttpTimeout) *VirtualNodeHttpTimeout {
		return &v
	}).(VirtualNodeHttpTimeoutPtrOutput)
}

func (o VirtualNodeHttpTimeoutOutput) Idle() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v VirtualNodeHttpTimeout) *VirtualNodeDuration { return v.Idle }).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeHttpTimeoutOutput) PerRequest() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v VirtualNodeHttpTimeout) *VirtualNodeDuration { return v.PerRequest }).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeHttpTimeoutPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeHttpTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeHttpTimeout)(nil)).Elem()
}

func (o VirtualNodeHttpTimeoutPtrOutput) ToVirtualNodeHttpTimeoutPtrOutput() VirtualNodeHttpTimeoutPtrOutput {
	return o
}

func (o VirtualNodeHttpTimeoutPtrOutput) ToVirtualNodeHttpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeHttpTimeoutPtrOutput {
	return o
}

func (o VirtualNodeHttpTimeoutPtrOutput) Elem() VirtualNodeHttpTimeoutOutput {
	return o.ApplyT(func(v *VirtualNodeHttpTimeout) VirtualNodeHttpTimeout {
		if v != nil {
			return *v
		}
		var ret VirtualNodeHttpTimeout
		return ret
	}).(VirtualNodeHttpTimeoutOutput)
}

func (o VirtualNodeHttpTimeoutPtrOutput) Idle() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHttpTimeout) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeHttpTimeoutPtrOutput) PerRequest() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeHttpTimeout) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return v.PerRequest
	}).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeListener struct {
	ConnectionPool   *VirtualNodeConnectionPool   `pulumi:"connectionPool"`
	HealthCheck      *VirtualNodeHealthCheck      `pulumi:"healthCheck"`
	OutlierDetection *VirtualNodeOutlierDetection `pulumi:"outlierDetection"`
	PortMapping      VirtualNodePortMapping       `pulumi:"portMapping"`
	TLS              *VirtualNodeListenerTls      `pulumi:"tLS"`
	Timeout          *VirtualNodeListenerTimeout  `pulumi:"timeout"`
}

// VirtualNodeListenerInput is an input type that accepts VirtualNodeListenerArgs and VirtualNodeListenerOutput values.
// You can construct a concrete instance of `VirtualNodeListenerInput` via:
//
//          VirtualNodeListenerArgs{...}
type VirtualNodeListenerInput interface {
	pulumi.Input

	ToVirtualNodeListenerOutput() VirtualNodeListenerOutput
	ToVirtualNodeListenerOutputWithContext(context.Context) VirtualNodeListenerOutput
}

type VirtualNodeListenerArgs struct {
	ConnectionPool   VirtualNodeConnectionPoolPtrInput   `pulumi:"connectionPool"`
	HealthCheck      VirtualNodeHealthCheckPtrInput      `pulumi:"healthCheck"`
	OutlierDetection VirtualNodeOutlierDetectionPtrInput `pulumi:"outlierDetection"`
	PortMapping      VirtualNodePortMappingInput         `pulumi:"portMapping"`
	TLS              VirtualNodeListenerTlsPtrInput      `pulumi:"tLS"`
	Timeout          VirtualNodeListenerTimeoutPtrInput  `pulumi:"timeout"`
}

func (VirtualNodeListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListener)(nil)).Elem()
}

func (i VirtualNodeListenerArgs) ToVirtualNodeListenerOutput() VirtualNodeListenerOutput {
	return i.ToVirtualNodeListenerOutputWithContext(context.Background())
}

func (i VirtualNodeListenerArgs) ToVirtualNodeListenerOutputWithContext(ctx context.Context) VirtualNodeListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerOutput)
}

// VirtualNodeListenerArrayInput is an input type that accepts VirtualNodeListenerArray and VirtualNodeListenerArrayOutput values.
// You can construct a concrete instance of `VirtualNodeListenerArrayInput` via:
//
//          VirtualNodeListenerArray{ VirtualNodeListenerArgs{...} }
type VirtualNodeListenerArrayInput interface {
	pulumi.Input

	ToVirtualNodeListenerArrayOutput() VirtualNodeListenerArrayOutput
	ToVirtualNodeListenerArrayOutputWithContext(context.Context) VirtualNodeListenerArrayOutput
}

type VirtualNodeListenerArray []VirtualNodeListenerInput

func (VirtualNodeListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeListener)(nil)).Elem()
}

func (i VirtualNodeListenerArray) ToVirtualNodeListenerArrayOutput() VirtualNodeListenerArrayOutput {
	return i.ToVirtualNodeListenerArrayOutputWithContext(context.Background())
}

func (i VirtualNodeListenerArray) ToVirtualNodeListenerArrayOutputWithContext(ctx context.Context) VirtualNodeListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerArrayOutput)
}

type VirtualNodeListenerOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListener)(nil)).Elem()
}

func (o VirtualNodeListenerOutput) ToVirtualNodeListenerOutput() VirtualNodeListenerOutput {
	return o
}

func (o VirtualNodeListenerOutput) ToVirtualNodeListenerOutputWithContext(ctx context.Context) VirtualNodeListenerOutput {
	return o
}

func (o VirtualNodeListenerOutput) ConnectionPool() VirtualNodeConnectionPoolPtrOutput {
	return o.ApplyT(func(v VirtualNodeListener) *VirtualNodeConnectionPool { return v.ConnectionPool }).(VirtualNodeConnectionPoolPtrOutput)
}

func (o VirtualNodeListenerOutput) HealthCheck() VirtualNodeHealthCheckPtrOutput {
	return o.ApplyT(func(v VirtualNodeListener) *VirtualNodeHealthCheck { return v.HealthCheck }).(VirtualNodeHealthCheckPtrOutput)
}

func (o VirtualNodeListenerOutput) OutlierDetection() VirtualNodeOutlierDetectionPtrOutput {
	return o.ApplyT(func(v VirtualNodeListener) *VirtualNodeOutlierDetection { return v.OutlierDetection }).(VirtualNodeOutlierDetectionPtrOutput)
}

func (o VirtualNodeListenerOutput) PortMapping() VirtualNodePortMappingOutput {
	return o.ApplyT(func(v VirtualNodeListener) VirtualNodePortMapping { return v.PortMapping }).(VirtualNodePortMappingOutput)
}

func (o VirtualNodeListenerOutput) TLS() VirtualNodeListenerTlsPtrOutput {
	return o.ApplyT(func(v VirtualNodeListener) *VirtualNodeListenerTls { return v.TLS }).(VirtualNodeListenerTlsPtrOutput)
}

func (o VirtualNodeListenerOutput) Timeout() VirtualNodeListenerTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeListener) *VirtualNodeListenerTimeout { return v.Timeout }).(VirtualNodeListenerTimeoutPtrOutput)
}

type VirtualNodeListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeListener)(nil)).Elem()
}

func (o VirtualNodeListenerArrayOutput) ToVirtualNodeListenerArrayOutput() VirtualNodeListenerArrayOutput {
	return o
}

func (o VirtualNodeListenerArrayOutput) ToVirtualNodeListenerArrayOutputWithContext(ctx context.Context) VirtualNodeListenerArrayOutput {
	return o
}

func (o VirtualNodeListenerArrayOutput) Index(i pulumi.IntInput) VirtualNodeListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeListener {
		return vs[0].([]VirtualNodeListener)[vs[1].(int)]
	}).(VirtualNodeListenerOutput)
}

type VirtualNodeListenerTimeout struct {
	GRPC  *VirtualNodeGrpcTimeout `pulumi:"gRPC"`
	HTTP  *VirtualNodeHttpTimeout `pulumi:"hTTP"`
	HTTP2 *VirtualNodeHttpTimeout `pulumi:"hTTP2"`
	TCP   *VirtualNodeTcpTimeout  `pulumi:"tCP"`
}

// VirtualNodeListenerTimeoutInput is an input type that accepts VirtualNodeListenerTimeoutArgs and VirtualNodeListenerTimeoutOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTimeoutInput` via:
//
//          VirtualNodeListenerTimeoutArgs{...}
type VirtualNodeListenerTimeoutInput interface {
	pulumi.Input

	ToVirtualNodeListenerTimeoutOutput() VirtualNodeListenerTimeoutOutput
	ToVirtualNodeListenerTimeoutOutputWithContext(context.Context) VirtualNodeListenerTimeoutOutput
}

type VirtualNodeListenerTimeoutArgs struct {
	GRPC  VirtualNodeGrpcTimeoutPtrInput `pulumi:"gRPC"`
	HTTP  VirtualNodeHttpTimeoutPtrInput `pulumi:"hTTP"`
	HTTP2 VirtualNodeHttpTimeoutPtrInput `pulumi:"hTTP2"`
	TCP   VirtualNodeTcpTimeoutPtrInput  `pulumi:"tCP"`
}

func (VirtualNodeListenerTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTimeout)(nil)).Elem()
}

func (i VirtualNodeListenerTimeoutArgs) ToVirtualNodeListenerTimeoutOutput() VirtualNodeListenerTimeoutOutput {
	return i.ToVirtualNodeListenerTimeoutOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTimeoutArgs) ToVirtualNodeListenerTimeoutOutputWithContext(ctx context.Context) VirtualNodeListenerTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTimeoutOutput)
}

func (i VirtualNodeListenerTimeoutArgs) ToVirtualNodeListenerTimeoutPtrOutput() VirtualNodeListenerTimeoutPtrOutput {
	return i.ToVirtualNodeListenerTimeoutPtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTimeoutArgs) ToVirtualNodeListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTimeoutOutput).ToVirtualNodeListenerTimeoutPtrOutputWithContext(ctx)
}

// VirtualNodeListenerTimeoutPtrInput is an input type that accepts VirtualNodeListenerTimeoutArgs, VirtualNodeListenerTimeoutPtr and VirtualNodeListenerTimeoutPtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTimeoutPtrInput` via:
//
//          VirtualNodeListenerTimeoutArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTimeoutPtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTimeoutPtrOutput() VirtualNodeListenerTimeoutPtrOutput
	ToVirtualNodeListenerTimeoutPtrOutputWithContext(context.Context) VirtualNodeListenerTimeoutPtrOutput
}

type virtualNodeListenerTimeoutPtrType VirtualNodeListenerTimeoutArgs

func VirtualNodeListenerTimeoutPtr(v *VirtualNodeListenerTimeoutArgs) VirtualNodeListenerTimeoutPtrInput {
	return (*virtualNodeListenerTimeoutPtrType)(v)
}

func (*virtualNodeListenerTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTimeout)(nil)).Elem()
}

func (i *virtualNodeListenerTimeoutPtrType) ToVirtualNodeListenerTimeoutPtrOutput() VirtualNodeListenerTimeoutPtrOutput {
	return i.ToVirtualNodeListenerTimeoutPtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTimeoutPtrType) ToVirtualNodeListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTimeoutPtrOutput)
}

type VirtualNodeListenerTimeoutOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTimeout)(nil)).Elem()
}

func (o VirtualNodeListenerTimeoutOutput) ToVirtualNodeListenerTimeoutOutput() VirtualNodeListenerTimeoutOutput {
	return o
}

func (o VirtualNodeListenerTimeoutOutput) ToVirtualNodeListenerTimeoutOutputWithContext(ctx context.Context) VirtualNodeListenerTimeoutOutput {
	return o
}

func (o VirtualNodeListenerTimeoutOutput) ToVirtualNodeListenerTimeoutPtrOutput() VirtualNodeListenerTimeoutPtrOutput {
	return o.ToVirtualNodeListenerTimeoutPtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTimeoutOutput) ToVirtualNodeListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTimeout) *VirtualNodeListenerTimeout {
		return &v
	}).(VirtualNodeListenerTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutOutput) GRPC() VirtualNodeGrpcTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTimeout) *VirtualNodeGrpcTimeout { return v.GRPC }).(VirtualNodeGrpcTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutOutput) HTTP() VirtualNodeHttpTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTimeout) *VirtualNodeHttpTimeout { return v.HTTP }).(VirtualNodeHttpTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutOutput) HTTP2() VirtualNodeHttpTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTimeout) *VirtualNodeHttpTimeout { return v.HTTP2 }).(VirtualNodeHttpTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutOutput) TCP() VirtualNodeTcpTimeoutPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTimeout) *VirtualNodeTcpTimeout { return v.TCP }).(VirtualNodeTcpTimeoutPtrOutput)
}

type VirtualNodeListenerTimeoutPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTimeout)(nil)).Elem()
}

func (o VirtualNodeListenerTimeoutPtrOutput) ToVirtualNodeListenerTimeoutPtrOutput() VirtualNodeListenerTimeoutPtrOutput {
	return o
}

func (o VirtualNodeListenerTimeoutPtrOutput) ToVirtualNodeListenerTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTimeoutPtrOutput {
	return o
}

func (o VirtualNodeListenerTimeoutPtrOutput) Elem() VirtualNodeListenerTimeoutOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTimeout) VirtualNodeListenerTimeout {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTimeout
		return ret
	}).(VirtualNodeListenerTimeoutOutput)
}

func (o VirtualNodeListenerTimeoutPtrOutput) GRPC() VirtualNodeGrpcTimeoutPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTimeout) *VirtualNodeGrpcTimeout {
		if v == nil {
			return nil
		}
		return v.GRPC
	}).(VirtualNodeGrpcTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutPtrOutput) HTTP() VirtualNodeHttpTimeoutPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTimeout) *VirtualNodeHttpTimeout {
		if v == nil {
			return nil
		}
		return v.HTTP
	}).(VirtualNodeHttpTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutPtrOutput) HTTP2() VirtualNodeHttpTimeoutPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTimeout) *VirtualNodeHttpTimeout {
		if v == nil {
			return nil
		}
		return v.HTTP2
	}).(VirtualNodeHttpTimeoutPtrOutput)
}

func (o VirtualNodeListenerTimeoutPtrOutput) TCP() VirtualNodeTcpTimeoutPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTimeout) *VirtualNodeTcpTimeout {
		if v == nil {
			return nil
		}
		return v.TCP
	}).(VirtualNodeTcpTimeoutPtrOutput)
}

type VirtualNodeListenerTls struct {
	Certificate VirtualNodeListenerTlsCertificate        `pulumi:"certificate"`
	Mode        string                                   `pulumi:"mode"`
	Validation  *VirtualNodeListenerTlsValidationContext `pulumi:"validation"`
}

// VirtualNodeListenerTlsInput is an input type that accepts VirtualNodeListenerTlsArgs and VirtualNodeListenerTlsOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsInput` via:
//
//          VirtualNodeListenerTlsArgs{...}
type VirtualNodeListenerTlsInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsOutput() VirtualNodeListenerTlsOutput
	ToVirtualNodeListenerTlsOutputWithContext(context.Context) VirtualNodeListenerTlsOutput
}

type VirtualNodeListenerTlsArgs struct {
	Certificate VirtualNodeListenerTlsCertificateInput          `pulumi:"certificate"`
	Mode        pulumi.StringInput                              `pulumi:"mode"`
	Validation  VirtualNodeListenerTlsValidationContextPtrInput `pulumi:"validation"`
}

func (VirtualNodeListenerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTls)(nil)).Elem()
}

func (i VirtualNodeListenerTlsArgs) ToVirtualNodeListenerTlsOutput() VirtualNodeListenerTlsOutput {
	return i.ToVirtualNodeListenerTlsOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsArgs) ToVirtualNodeListenerTlsOutputWithContext(ctx context.Context) VirtualNodeListenerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsOutput)
}

func (i VirtualNodeListenerTlsArgs) ToVirtualNodeListenerTlsPtrOutput() VirtualNodeListenerTlsPtrOutput {
	return i.ToVirtualNodeListenerTlsPtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsArgs) ToVirtualNodeListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsOutput).ToVirtualNodeListenerTlsPtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsPtrInput is an input type that accepts VirtualNodeListenerTlsArgs, VirtualNodeListenerTlsPtr and VirtualNodeListenerTlsPtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsPtrInput` via:
//
//          VirtualNodeListenerTlsArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsPtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsPtrOutput() VirtualNodeListenerTlsPtrOutput
	ToVirtualNodeListenerTlsPtrOutputWithContext(context.Context) VirtualNodeListenerTlsPtrOutput
}

type virtualNodeListenerTlsPtrType VirtualNodeListenerTlsArgs

func VirtualNodeListenerTlsPtr(v *VirtualNodeListenerTlsArgs) VirtualNodeListenerTlsPtrInput {
	return (*virtualNodeListenerTlsPtrType)(v)
}

func (*virtualNodeListenerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTls)(nil)).Elem()
}

func (i *virtualNodeListenerTlsPtrType) ToVirtualNodeListenerTlsPtrOutput() VirtualNodeListenerTlsPtrOutput {
	return i.ToVirtualNodeListenerTlsPtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsPtrType) ToVirtualNodeListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsPtrOutput)
}

type VirtualNodeListenerTlsOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTls)(nil)).Elem()
}

func (o VirtualNodeListenerTlsOutput) ToVirtualNodeListenerTlsOutput() VirtualNodeListenerTlsOutput {
	return o
}

func (o VirtualNodeListenerTlsOutput) ToVirtualNodeListenerTlsOutputWithContext(ctx context.Context) VirtualNodeListenerTlsOutput {
	return o
}

func (o VirtualNodeListenerTlsOutput) ToVirtualNodeListenerTlsPtrOutput() VirtualNodeListenerTlsPtrOutput {
	return o.ToVirtualNodeListenerTlsPtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsOutput) ToVirtualNodeListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTls) *VirtualNodeListenerTls {
		return &v
	}).(VirtualNodeListenerTlsPtrOutput)
}

func (o VirtualNodeListenerTlsOutput) Certificate() VirtualNodeListenerTlsCertificateOutput {
	return o.ApplyT(func(v VirtualNodeListenerTls) VirtualNodeListenerTlsCertificate { return v.Certificate }).(VirtualNodeListenerTlsCertificateOutput)
}

func (o VirtualNodeListenerTlsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeListenerTls) string { return v.Mode }).(pulumi.StringOutput)
}

func (o VirtualNodeListenerTlsOutput) Validation() VirtualNodeListenerTlsValidationContextPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTls) *VirtualNodeListenerTlsValidationContext { return v.Validation }).(VirtualNodeListenerTlsValidationContextPtrOutput)
}

type VirtualNodeListenerTlsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTls)(nil)).Elem()
}

func (o VirtualNodeListenerTlsPtrOutput) ToVirtualNodeListenerTlsPtrOutput() VirtualNodeListenerTlsPtrOutput {
	return o
}

func (o VirtualNodeListenerTlsPtrOutput) ToVirtualNodeListenerTlsPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsPtrOutput {
	return o
}

func (o VirtualNodeListenerTlsPtrOutput) Elem() VirtualNodeListenerTlsOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTls) VirtualNodeListenerTls {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTls
		return ret
	}).(VirtualNodeListenerTlsOutput)
}

func (o VirtualNodeListenerTlsPtrOutput) Certificate() VirtualNodeListenerTlsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTls) *VirtualNodeListenerTlsCertificate {
		if v == nil {
			return nil
		}
		return &v.Certificate
	}).(VirtualNodeListenerTlsCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTls) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeListenerTlsPtrOutput) Validation() VirtualNodeListenerTlsValidationContextPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTls) *VirtualNodeListenerTlsValidationContext {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(VirtualNodeListenerTlsValidationContextPtrOutput)
}

type VirtualNodeListenerTlsAcmCertificate struct {
	CertificateArn string `pulumi:"certificateArn"`
}

// VirtualNodeListenerTlsAcmCertificateInput is an input type that accepts VirtualNodeListenerTlsAcmCertificateArgs and VirtualNodeListenerTlsAcmCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsAcmCertificateInput` via:
//
//          VirtualNodeListenerTlsAcmCertificateArgs{...}
type VirtualNodeListenerTlsAcmCertificateInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsAcmCertificateOutput() VirtualNodeListenerTlsAcmCertificateOutput
	ToVirtualNodeListenerTlsAcmCertificateOutputWithContext(context.Context) VirtualNodeListenerTlsAcmCertificateOutput
}

type VirtualNodeListenerTlsAcmCertificateArgs struct {
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
}

func (VirtualNodeListenerTlsAcmCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsAcmCertificate)(nil)).Elem()
}

func (i VirtualNodeListenerTlsAcmCertificateArgs) ToVirtualNodeListenerTlsAcmCertificateOutput() VirtualNodeListenerTlsAcmCertificateOutput {
	return i.ToVirtualNodeListenerTlsAcmCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsAcmCertificateArgs) ToVirtualNodeListenerTlsAcmCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsAcmCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsAcmCertificateOutput)
}

func (i VirtualNodeListenerTlsAcmCertificateArgs) ToVirtualNodeListenerTlsAcmCertificatePtrOutput() VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsAcmCertificateArgs) ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsAcmCertificateOutput).ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsAcmCertificatePtrInput is an input type that accepts VirtualNodeListenerTlsAcmCertificateArgs, VirtualNodeListenerTlsAcmCertificatePtr and VirtualNodeListenerTlsAcmCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsAcmCertificatePtrInput` via:
//
//          VirtualNodeListenerTlsAcmCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsAcmCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsAcmCertificatePtrOutput() VirtualNodeListenerTlsAcmCertificatePtrOutput
	ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(context.Context) VirtualNodeListenerTlsAcmCertificatePtrOutput
}

type virtualNodeListenerTlsAcmCertificatePtrType VirtualNodeListenerTlsAcmCertificateArgs

func VirtualNodeListenerTlsAcmCertificatePtr(v *VirtualNodeListenerTlsAcmCertificateArgs) VirtualNodeListenerTlsAcmCertificatePtrInput {
	return (*virtualNodeListenerTlsAcmCertificatePtrType)(v)
}

func (*virtualNodeListenerTlsAcmCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsAcmCertificate)(nil)).Elem()
}

func (i *virtualNodeListenerTlsAcmCertificatePtrType) ToVirtualNodeListenerTlsAcmCertificatePtrOutput() VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsAcmCertificatePtrType) ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsAcmCertificatePtrOutput)
}

type VirtualNodeListenerTlsAcmCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsAcmCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsAcmCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsAcmCertificateOutput) ToVirtualNodeListenerTlsAcmCertificateOutput() VirtualNodeListenerTlsAcmCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsAcmCertificateOutput) ToVirtualNodeListenerTlsAcmCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsAcmCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsAcmCertificateOutput) ToVirtualNodeListenerTlsAcmCertificatePtrOutput() VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return o.ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsAcmCertificateOutput) ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTlsAcmCertificate) *VirtualNodeListenerTlsAcmCertificate {
		return &v
	}).(VirtualNodeListenerTlsAcmCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsAcmCertificateOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsAcmCertificate) string { return v.CertificateArn }).(pulumi.StringOutput)
}

type VirtualNodeListenerTlsAcmCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsAcmCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsAcmCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsAcmCertificatePtrOutput) ToVirtualNodeListenerTlsAcmCertificatePtrOutput() VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsAcmCertificatePtrOutput) ToVirtualNodeListenerTlsAcmCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsAcmCertificatePtrOutput) Elem() VirtualNodeListenerTlsAcmCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsAcmCertificate) VirtualNodeListenerTlsAcmCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTlsAcmCertificate
		return ret
	}).(VirtualNodeListenerTlsAcmCertificateOutput)
}

func (o VirtualNodeListenerTlsAcmCertificatePtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsAcmCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeListenerTlsCertificate struct {
	ACM  *VirtualNodeListenerTlsAcmCertificate  `pulumi:"aCM"`
	File *VirtualNodeListenerTlsFileCertificate `pulumi:"file"`
	SDS  *VirtualNodeListenerTlsSdsCertificate  `pulumi:"sDS"`
}

// VirtualNodeListenerTlsCertificateInput is an input type that accepts VirtualNodeListenerTlsCertificateArgs and VirtualNodeListenerTlsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsCertificateInput` via:
//
//          VirtualNodeListenerTlsCertificateArgs{...}
type VirtualNodeListenerTlsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsCertificateOutput() VirtualNodeListenerTlsCertificateOutput
	ToVirtualNodeListenerTlsCertificateOutputWithContext(context.Context) VirtualNodeListenerTlsCertificateOutput
}

type VirtualNodeListenerTlsCertificateArgs struct {
	ACM  VirtualNodeListenerTlsAcmCertificatePtrInput  `pulumi:"aCM"`
	File VirtualNodeListenerTlsFileCertificatePtrInput `pulumi:"file"`
	SDS  VirtualNodeListenerTlsSdsCertificatePtrInput  `pulumi:"sDS"`
}

func (VirtualNodeListenerTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsCertificate)(nil)).Elem()
}

func (i VirtualNodeListenerTlsCertificateArgs) ToVirtualNodeListenerTlsCertificateOutput() VirtualNodeListenerTlsCertificateOutput {
	return i.ToVirtualNodeListenerTlsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsCertificateArgs) ToVirtualNodeListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsCertificateOutput)
}

func (i VirtualNodeListenerTlsCertificateArgs) ToVirtualNodeListenerTlsCertificatePtrOutput() VirtualNodeListenerTlsCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsCertificateArgs) ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsCertificateOutput).ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsCertificatePtrInput is an input type that accepts VirtualNodeListenerTlsCertificateArgs, VirtualNodeListenerTlsCertificatePtr and VirtualNodeListenerTlsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsCertificatePtrInput` via:
//
//          VirtualNodeListenerTlsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsCertificatePtrOutput() VirtualNodeListenerTlsCertificatePtrOutput
	ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(context.Context) VirtualNodeListenerTlsCertificatePtrOutput
}

type virtualNodeListenerTlsCertificatePtrType VirtualNodeListenerTlsCertificateArgs

func VirtualNodeListenerTlsCertificatePtr(v *VirtualNodeListenerTlsCertificateArgs) VirtualNodeListenerTlsCertificatePtrInput {
	return (*virtualNodeListenerTlsCertificatePtrType)(v)
}

func (*virtualNodeListenerTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsCertificate)(nil)).Elem()
}

func (i *virtualNodeListenerTlsCertificatePtrType) ToVirtualNodeListenerTlsCertificatePtrOutput() VirtualNodeListenerTlsCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsCertificatePtrType) ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsCertificatePtrOutput)
}

type VirtualNodeListenerTlsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsCertificateOutput) ToVirtualNodeListenerTlsCertificateOutput() VirtualNodeListenerTlsCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsCertificateOutput) ToVirtualNodeListenerTlsCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsCertificateOutput) ToVirtualNodeListenerTlsCertificatePtrOutput() VirtualNodeListenerTlsCertificatePtrOutput {
	return o.ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsCertificateOutput) ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsCertificate {
		return &v
	}).(VirtualNodeListenerTlsCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsCertificateOutput) ACM() VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsAcmCertificate { return v.ACM }).(VirtualNodeListenerTlsAcmCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsCertificateOutput) File() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsFileCertificate { return v.File }).(VirtualNodeListenerTlsFileCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsCertificateOutput) SDS() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsSdsCertificate { return v.SDS }).(VirtualNodeListenerTlsSdsCertificatePtrOutput)
}

type VirtualNodeListenerTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsCertificatePtrOutput) ToVirtualNodeListenerTlsCertificatePtrOutput() VirtualNodeListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsCertificatePtrOutput) ToVirtualNodeListenerTlsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsCertificatePtrOutput) Elem() VirtualNodeListenerTlsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsCertificate) VirtualNodeListenerTlsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTlsCertificate
		return ret
	}).(VirtualNodeListenerTlsCertificateOutput)
}

func (o VirtualNodeListenerTlsCertificatePtrOutput) ACM() VirtualNodeListenerTlsAcmCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsAcmCertificate {
		if v == nil {
			return nil
		}
		return v.ACM
	}).(VirtualNodeListenerTlsAcmCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsCertificatePtrOutput) File() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsFileCertificate {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeListenerTlsFileCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsCertificatePtrOutput) SDS() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsCertificate) *VirtualNodeListenerTlsSdsCertificate {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualNodeListenerTlsSdsCertificatePtrOutput)
}

type VirtualNodeListenerTlsFileCertificate struct {
	CertificateChain string `pulumi:"certificateChain"`
	PrivateKey       string `pulumi:"privateKey"`
}

// VirtualNodeListenerTlsFileCertificateInput is an input type that accepts VirtualNodeListenerTlsFileCertificateArgs and VirtualNodeListenerTlsFileCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsFileCertificateInput` via:
//
//          VirtualNodeListenerTlsFileCertificateArgs{...}
type VirtualNodeListenerTlsFileCertificateInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsFileCertificateOutput() VirtualNodeListenerTlsFileCertificateOutput
	ToVirtualNodeListenerTlsFileCertificateOutputWithContext(context.Context) VirtualNodeListenerTlsFileCertificateOutput
}

type VirtualNodeListenerTlsFileCertificateArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
	PrivateKey       pulumi.StringInput `pulumi:"privateKey"`
}

func (VirtualNodeListenerTlsFileCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsFileCertificate)(nil)).Elem()
}

func (i VirtualNodeListenerTlsFileCertificateArgs) ToVirtualNodeListenerTlsFileCertificateOutput() VirtualNodeListenerTlsFileCertificateOutput {
	return i.ToVirtualNodeListenerTlsFileCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsFileCertificateArgs) ToVirtualNodeListenerTlsFileCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsFileCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsFileCertificateOutput)
}

func (i VirtualNodeListenerTlsFileCertificateArgs) ToVirtualNodeListenerTlsFileCertificatePtrOutput() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsFileCertificateArgs) ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsFileCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsFileCertificateOutput).ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsFileCertificatePtrInput is an input type that accepts VirtualNodeListenerTlsFileCertificateArgs, VirtualNodeListenerTlsFileCertificatePtr and VirtualNodeListenerTlsFileCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsFileCertificatePtrInput` via:
//
//          VirtualNodeListenerTlsFileCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsFileCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsFileCertificatePtrOutput() VirtualNodeListenerTlsFileCertificatePtrOutput
	ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(context.Context) VirtualNodeListenerTlsFileCertificatePtrOutput
}

type virtualNodeListenerTlsFileCertificatePtrType VirtualNodeListenerTlsFileCertificateArgs

func VirtualNodeListenerTlsFileCertificatePtr(v *VirtualNodeListenerTlsFileCertificateArgs) VirtualNodeListenerTlsFileCertificatePtrInput {
	return (*virtualNodeListenerTlsFileCertificatePtrType)(v)
}

func (*virtualNodeListenerTlsFileCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsFileCertificate)(nil)).Elem()
}

func (i *virtualNodeListenerTlsFileCertificatePtrType) ToVirtualNodeListenerTlsFileCertificatePtrOutput() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsFileCertificatePtrType) ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsFileCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsFileCertificatePtrOutput)
}

type VirtualNodeListenerTlsFileCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsFileCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsFileCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsFileCertificateOutput) ToVirtualNodeListenerTlsFileCertificateOutput() VirtualNodeListenerTlsFileCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsFileCertificateOutput) ToVirtualNodeListenerTlsFileCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsFileCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsFileCertificateOutput) ToVirtualNodeListenerTlsFileCertificatePtrOutput() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o.ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsFileCertificateOutput) ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTlsFileCertificate) *VirtualNodeListenerTlsFileCertificate {
		return &v
	}).(VirtualNodeListenerTlsFileCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsFileCertificateOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsFileCertificate) string { return v.CertificateChain }).(pulumi.StringOutput)
}

func (o VirtualNodeListenerTlsFileCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsFileCertificate) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type VirtualNodeListenerTlsFileCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsFileCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsFileCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsFileCertificatePtrOutput) ToVirtualNodeListenerTlsFileCertificatePtrOutput() VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsFileCertificatePtrOutput) ToVirtualNodeListenerTlsFileCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsFileCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsFileCertificatePtrOutput) Elem() VirtualNodeListenerTlsFileCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsFileCertificate) VirtualNodeListenerTlsFileCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTlsFileCertificate
		return ret
	}).(VirtualNodeListenerTlsFileCertificateOutput)
}

func (o VirtualNodeListenerTlsFileCertificatePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsFileCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNodeListenerTlsFileCertificatePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsFileCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeListenerTlsSdsCertificate struct {
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeListenerTlsSdsCertificateInput is an input type that accepts VirtualNodeListenerTlsSdsCertificateArgs and VirtualNodeListenerTlsSdsCertificateOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsSdsCertificateInput` via:
//
//          VirtualNodeListenerTlsSdsCertificateArgs{...}
type VirtualNodeListenerTlsSdsCertificateInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsSdsCertificateOutput() VirtualNodeListenerTlsSdsCertificateOutput
	ToVirtualNodeListenerTlsSdsCertificateOutputWithContext(context.Context) VirtualNodeListenerTlsSdsCertificateOutput
}

type VirtualNodeListenerTlsSdsCertificateArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeListenerTlsSdsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsSdsCertificate)(nil)).Elem()
}

func (i VirtualNodeListenerTlsSdsCertificateArgs) ToVirtualNodeListenerTlsSdsCertificateOutput() VirtualNodeListenerTlsSdsCertificateOutput {
	return i.ToVirtualNodeListenerTlsSdsCertificateOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsSdsCertificateArgs) ToVirtualNodeListenerTlsSdsCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsSdsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsSdsCertificateOutput)
}

func (i VirtualNodeListenerTlsSdsCertificateArgs) ToVirtualNodeListenerTlsSdsCertificatePtrOutput() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsSdsCertificateArgs) ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsSdsCertificateOutput).ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsSdsCertificatePtrInput is an input type that accepts VirtualNodeListenerTlsSdsCertificateArgs, VirtualNodeListenerTlsSdsCertificatePtr and VirtualNodeListenerTlsSdsCertificatePtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsSdsCertificatePtrInput` via:
//
//          VirtualNodeListenerTlsSdsCertificateArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsSdsCertificatePtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsSdsCertificatePtrOutput() VirtualNodeListenerTlsSdsCertificatePtrOutput
	ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(context.Context) VirtualNodeListenerTlsSdsCertificatePtrOutput
}

type virtualNodeListenerTlsSdsCertificatePtrType VirtualNodeListenerTlsSdsCertificateArgs

func VirtualNodeListenerTlsSdsCertificatePtr(v *VirtualNodeListenerTlsSdsCertificateArgs) VirtualNodeListenerTlsSdsCertificatePtrInput {
	return (*virtualNodeListenerTlsSdsCertificatePtrType)(v)
}

func (*virtualNodeListenerTlsSdsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsSdsCertificate)(nil)).Elem()
}

func (i *virtualNodeListenerTlsSdsCertificatePtrType) ToVirtualNodeListenerTlsSdsCertificatePtrOutput() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return i.ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsSdsCertificatePtrType) ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsSdsCertificatePtrOutput)
}

type VirtualNodeListenerTlsSdsCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsSdsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsSdsCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsSdsCertificateOutput) ToVirtualNodeListenerTlsSdsCertificateOutput() VirtualNodeListenerTlsSdsCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsSdsCertificateOutput) ToVirtualNodeListenerTlsSdsCertificateOutputWithContext(ctx context.Context) VirtualNodeListenerTlsSdsCertificateOutput {
	return o
}

func (o VirtualNodeListenerTlsSdsCertificateOutput) ToVirtualNodeListenerTlsSdsCertificatePtrOutput() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o.ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsSdsCertificateOutput) ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTlsSdsCertificate) *VirtualNodeListenerTlsSdsCertificate {
		return &v
	}).(VirtualNodeListenerTlsSdsCertificatePtrOutput)
}

func (o VirtualNodeListenerTlsSdsCertificateOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsSdsCertificate) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeListenerTlsSdsCertificatePtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsSdsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsSdsCertificate)(nil)).Elem()
}

func (o VirtualNodeListenerTlsSdsCertificatePtrOutput) ToVirtualNodeListenerTlsSdsCertificatePtrOutput() VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsSdsCertificatePtrOutput) ToVirtualNodeListenerTlsSdsCertificatePtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsSdsCertificatePtrOutput {
	return o
}

func (o VirtualNodeListenerTlsSdsCertificatePtrOutput) Elem() VirtualNodeListenerTlsSdsCertificateOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsSdsCertificate) VirtualNodeListenerTlsSdsCertificate {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTlsSdsCertificate
		return ret
	}).(VirtualNodeListenerTlsSdsCertificateOutput)
}

func (o VirtualNodeListenerTlsSdsCertificatePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsSdsCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeListenerTlsValidationContext struct {
	SubjectAlternativeNames *VirtualNodeSubjectAlternativeNames          `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualNodeListenerTlsValidationContextTrust `pulumi:"trust"`
}

// VirtualNodeListenerTlsValidationContextInput is an input type that accepts VirtualNodeListenerTlsValidationContextArgs and VirtualNodeListenerTlsValidationContextOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsValidationContextInput` via:
//
//          VirtualNodeListenerTlsValidationContextArgs{...}
type VirtualNodeListenerTlsValidationContextInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsValidationContextOutput() VirtualNodeListenerTlsValidationContextOutput
	ToVirtualNodeListenerTlsValidationContextOutputWithContext(context.Context) VirtualNodeListenerTlsValidationContextOutput
}

type VirtualNodeListenerTlsValidationContextArgs struct {
	SubjectAlternativeNames VirtualNodeSubjectAlternativeNamesPtrInput        `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualNodeListenerTlsValidationContextTrustInput `pulumi:"trust"`
}

func (VirtualNodeListenerTlsValidationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsValidationContext)(nil)).Elem()
}

func (i VirtualNodeListenerTlsValidationContextArgs) ToVirtualNodeListenerTlsValidationContextOutput() VirtualNodeListenerTlsValidationContextOutput {
	return i.ToVirtualNodeListenerTlsValidationContextOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsValidationContextArgs) ToVirtualNodeListenerTlsValidationContextOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsValidationContextOutput)
}

func (i VirtualNodeListenerTlsValidationContextArgs) ToVirtualNodeListenerTlsValidationContextPtrOutput() VirtualNodeListenerTlsValidationContextPtrOutput {
	return i.ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsValidationContextArgs) ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsValidationContextOutput).ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsValidationContextPtrInput is an input type that accepts VirtualNodeListenerTlsValidationContextArgs, VirtualNodeListenerTlsValidationContextPtr and VirtualNodeListenerTlsValidationContextPtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsValidationContextPtrInput` via:
//
//          VirtualNodeListenerTlsValidationContextArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsValidationContextPtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsValidationContextPtrOutput() VirtualNodeListenerTlsValidationContextPtrOutput
	ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(context.Context) VirtualNodeListenerTlsValidationContextPtrOutput
}

type virtualNodeListenerTlsValidationContextPtrType VirtualNodeListenerTlsValidationContextArgs

func VirtualNodeListenerTlsValidationContextPtr(v *VirtualNodeListenerTlsValidationContextArgs) VirtualNodeListenerTlsValidationContextPtrInput {
	return (*virtualNodeListenerTlsValidationContextPtrType)(v)
}

func (*virtualNodeListenerTlsValidationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsValidationContext)(nil)).Elem()
}

func (i *virtualNodeListenerTlsValidationContextPtrType) ToVirtualNodeListenerTlsValidationContextPtrOutput() VirtualNodeListenerTlsValidationContextPtrOutput {
	return i.ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsValidationContextPtrType) ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsValidationContextPtrOutput)
}

type VirtualNodeListenerTlsValidationContextOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsValidationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsValidationContext)(nil)).Elem()
}

func (o VirtualNodeListenerTlsValidationContextOutput) ToVirtualNodeListenerTlsValidationContextOutput() VirtualNodeListenerTlsValidationContextOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextOutput) ToVirtualNodeListenerTlsValidationContextOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextOutput) ToVirtualNodeListenerTlsValidationContextPtrOutput() VirtualNodeListenerTlsValidationContextPtrOutput {
	return o.ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsValidationContextOutput) ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTlsValidationContext) *VirtualNodeListenerTlsValidationContext {
		return &v
	}).(VirtualNodeListenerTlsValidationContextPtrOutput)
}

func (o VirtualNodeListenerTlsValidationContextOutput) SubjectAlternativeNames() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsValidationContext) *VirtualNodeSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSubjectAlternativeNamesPtrOutput)
}

func (o VirtualNodeListenerTlsValidationContextOutput) Trust() VirtualNodeListenerTlsValidationContextTrustOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsValidationContext) VirtualNodeListenerTlsValidationContextTrust {
		return v.Trust
	}).(VirtualNodeListenerTlsValidationContextTrustOutput)
}

type VirtualNodeListenerTlsValidationContextPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsValidationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsValidationContext)(nil)).Elem()
}

func (o VirtualNodeListenerTlsValidationContextPtrOutput) ToVirtualNodeListenerTlsValidationContextPtrOutput() VirtualNodeListenerTlsValidationContextPtrOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextPtrOutput) ToVirtualNodeListenerTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextPtrOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextPtrOutput) Elem() VirtualNodeListenerTlsValidationContextOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsValidationContext) VirtualNodeListenerTlsValidationContext {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTlsValidationContext
		return ret
	}).(VirtualNodeListenerTlsValidationContextOutput)
}

func (o VirtualNodeListenerTlsValidationContextPtrOutput) SubjectAlternativeNames() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsValidationContext) *VirtualNodeSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSubjectAlternativeNamesPtrOutput)
}

func (o VirtualNodeListenerTlsValidationContextPtrOutput) Trust() VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsValidationContext) *VirtualNodeListenerTlsValidationContextTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeListenerTlsValidationContextTrustPtrOutput)
}

type VirtualNodeListenerTlsValidationContextTrust struct {
	File *VirtualNodeTlsValidationContextFileTrust `pulumi:"file"`
	SDS  *VirtualNodeTlsValidationContextSdsTrust  `pulumi:"sDS"`
}

// VirtualNodeListenerTlsValidationContextTrustInput is an input type that accepts VirtualNodeListenerTlsValidationContextTrustArgs and VirtualNodeListenerTlsValidationContextTrustOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsValidationContextTrustInput` via:
//
//          VirtualNodeListenerTlsValidationContextTrustArgs{...}
type VirtualNodeListenerTlsValidationContextTrustInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsValidationContextTrustOutput() VirtualNodeListenerTlsValidationContextTrustOutput
	ToVirtualNodeListenerTlsValidationContextTrustOutputWithContext(context.Context) VirtualNodeListenerTlsValidationContextTrustOutput
}

type VirtualNodeListenerTlsValidationContextTrustArgs struct {
	File VirtualNodeTlsValidationContextFileTrustPtrInput `pulumi:"file"`
	SDS  VirtualNodeTlsValidationContextSdsTrustPtrInput  `pulumi:"sDS"`
}

func (VirtualNodeListenerTlsValidationContextTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsValidationContextTrust)(nil)).Elem()
}

func (i VirtualNodeListenerTlsValidationContextTrustArgs) ToVirtualNodeListenerTlsValidationContextTrustOutput() VirtualNodeListenerTlsValidationContextTrustOutput {
	return i.ToVirtualNodeListenerTlsValidationContextTrustOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsValidationContextTrustArgs) ToVirtualNodeListenerTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsValidationContextTrustOutput)
}

func (i VirtualNodeListenerTlsValidationContextTrustArgs) ToVirtualNodeListenerTlsValidationContextTrustPtrOutput() VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return i.ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeListenerTlsValidationContextTrustArgs) ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsValidationContextTrustOutput).ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(ctx)
}

// VirtualNodeListenerTlsValidationContextTrustPtrInput is an input type that accepts VirtualNodeListenerTlsValidationContextTrustArgs, VirtualNodeListenerTlsValidationContextTrustPtr and VirtualNodeListenerTlsValidationContextTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeListenerTlsValidationContextTrustPtrInput` via:
//
//          VirtualNodeListenerTlsValidationContextTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeListenerTlsValidationContextTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeListenerTlsValidationContextTrustPtrOutput() VirtualNodeListenerTlsValidationContextTrustPtrOutput
	ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(context.Context) VirtualNodeListenerTlsValidationContextTrustPtrOutput
}

type virtualNodeListenerTlsValidationContextTrustPtrType VirtualNodeListenerTlsValidationContextTrustArgs

func VirtualNodeListenerTlsValidationContextTrustPtr(v *VirtualNodeListenerTlsValidationContextTrustArgs) VirtualNodeListenerTlsValidationContextTrustPtrInput {
	return (*virtualNodeListenerTlsValidationContextTrustPtrType)(v)
}

func (*virtualNodeListenerTlsValidationContextTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsValidationContextTrust)(nil)).Elem()
}

func (i *virtualNodeListenerTlsValidationContextTrustPtrType) ToVirtualNodeListenerTlsValidationContextTrustPtrOutput() VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return i.ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeListenerTlsValidationContextTrustPtrType) ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeListenerTlsValidationContextTrustPtrOutput)
}

type VirtualNodeListenerTlsValidationContextTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsValidationContextTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeListenerTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualNodeListenerTlsValidationContextTrustOutput) ToVirtualNodeListenerTlsValidationContextTrustOutput() VirtualNodeListenerTlsValidationContextTrustOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextTrustOutput) ToVirtualNodeListenerTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextTrustOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextTrustOutput) ToVirtualNodeListenerTlsValidationContextTrustPtrOutput() VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return o.ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeListenerTlsValidationContextTrustOutput) ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeListenerTlsValidationContextTrust) *VirtualNodeListenerTlsValidationContextTrust {
		return &v
	}).(VirtualNodeListenerTlsValidationContextTrustPtrOutput)
}

func (o VirtualNodeListenerTlsValidationContextTrustOutput) File() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsValidationContextTrust) *VirtualNodeTlsValidationContextFileTrust {
		return v.File
	}).(VirtualNodeTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualNodeListenerTlsValidationContextTrustOutput) SDS() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v VirtualNodeListenerTlsValidationContextTrust) *VirtualNodeTlsValidationContextSdsTrust {
		return v.SDS
	}).(VirtualNodeTlsValidationContextSdsTrustPtrOutput)
}

type VirtualNodeListenerTlsValidationContextTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeListenerTlsValidationContextTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeListenerTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualNodeListenerTlsValidationContextTrustPtrOutput) ToVirtualNodeListenerTlsValidationContextTrustPtrOutput() VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextTrustPtrOutput) ToVirtualNodeListenerTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeListenerTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualNodeListenerTlsValidationContextTrustPtrOutput) Elem() VirtualNodeListenerTlsValidationContextTrustOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsValidationContextTrust) VirtualNodeListenerTlsValidationContextTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeListenerTlsValidationContextTrust
		return ret
	}).(VirtualNodeListenerTlsValidationContextTrustOutput)
}

func (o VirtualNodeListenerTlsValidationContextTrustPtrOutput) File() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsValidationContextTrust) *VirtualNodeTlsValidationContextFileTrust {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualNodeListenerTlsValidationContextTrustPtrOutput) SDS() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeListenerTlsValidationContextTrust) *VirtualNodeTlsValidationContextSdsTrust {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualNodeTlsValidationContextSdsTrustPtrOutput)
}

type VirtualNodeLogging struct {
	AccessLog *VirtualNodeAccessLog `pulumi:"accessLog"`
}

// VirtualNodeLoggingInput is an input type that accepts VirtualNodeLoggingArgs and VirtualNodeLoggingOutput values.
// You can construct a concrete instance of `VirtualNodeLoggingInput` via:
//
//          VirtualNodeLoggingArgs{...}
type VirtualNodeLoggingInput interface {
	pulumi.Input

	ToVirtualNodeLoggingOutput() VirtualNodeLoggingOutput
	ToVirtualNodeLoggingOutputWithContext(context.Context) VirtualNodeLoggingOutput
}

type VirtualNodeLoggingArgs struct {
	AccessLog VirtualNodeAccessLogPtrInput `pulumi:"accessLog"`
}

func (VirtualNodeLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeLogging)(nil)).Elem()
}

func (i VirtualNodeLoggingArgs) ToVirtualNodeLoggingOutput() VirtualNodeLoggingOutput {
	return i.ToVirtualNodeLoggingOutputWithContext(context.Background())
}

func (i VirtualNodeLoggingArgs) ToVirtualNodeLoggingOutputWithContext(ctx context.Context) VirtualNodeLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeLoggingOutput)
}

func (i VirtualNodeLoggingArgs) ToVirtualNodeLoggingPtrOutput() VirtualNodeLoggingPtrOutput {
	return i.ToVirtualNodeLoggingPtrOutputWithContext(context.Background())
}

func (i VirtualNodeLoggingArgs) ToVirtualNodeLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeLoggingOutput).ToVirtualNodeLoggingPtrOutputWithContext(ctx)
}

// VirtualNodeLoggingPtrInput is an input type that accepts VirtualNodeLoggingArgs, VirtualNodeLoggingPtr and VirtualNodeLoggingPtrOutput values.
// You can construct a concrete instance of `VirtualNodeLoggingPtrInput` via:
//
//          VirtualNodeLoggingArgs{...}
//
//  or:
//
//          nil
type VirtualNodeLoggingPtrInput interface {
	pulumi.Input

	ToVirtualNodeLoggingPtrOutput() VirtualNodeLoggingPtrOutput
	ToVirtualNodeLoggingPtrOutputWithContext(context.Context) VirtualNodeLoggingPtrOutput
}

type virtualNodeLoggingPtrType VirtualNodeLoggingArgs

func VirtualNodeLoggingPtr(v *VirtualNodeLoggingArgs) VirtualNodeLoggingPtrInput {
	return (*virtualNodeLoggingPtrType)(v)
}

func (*virtualNodeLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeLogging)(nil)).Elem()
}

func (i *virtualNodeLoggingPtrType) ToVirtualNodeLoggingPtrOutput() VirtualNodeLoggingPtrOutput {
	return i.ToVirtualNodeLoggingPtrOutputWithContext(context.Background())
}

func (i *virtualNodeLoggingPtrType) ToVirtualNodeLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeLoggingPtrOutput)
}

type VirtualNodeLoggingOutput struct{ *pulumi.OutputState }

func (VirtualNodeLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeLogging)(nil)).Elem()
}

func (o VirtualNodeLoggingOutput) ToVirtualNodeLoggingOutput() VirtualNodeLoggingOutput {
	return o
}

func (o VirtualNodeLoggingOutput) ToVirtualNodeLoggingOutputWithContext(ctx context.Context) VirtualNodeLoggingOutput {
	return o
}

func (o VirtualNodeLoggingOutput) ToVirtualNodeLoggingPtrOutput() VirtualNodeLoggingPtrOutput {
	return o.ToVirtualNodeLoggingPtrOutputWithContext(context.Background())
}

func (o VirtualNodeLoggingOutput) ToVirtualNodeLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeLogging) *VirtualNodeLogging {
		return &v
	}).(VirtualNodeLoggingPtrOutput)
}

func (o VirtualNodeLoggingOutput) AccessLog() VirtualNodeAccessLogPtrOutput {
	return o.ApplyT(func(v VirtualNodeLogging) *VirtualNodeAccessLog { return v.AccessLog }).(VirtualNodeAccessLogPtrOutput)
}

type VirtualNodeLoggingPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeLogging)(nil)).Elem()
}

func (o VirtualNodeLoggingPtrOutput) ToVirtualNodeLoggingPtrOutput() VirtualNodeLoggingPtrOutput {
	return o
}

func (o VirtualNodeLoggingPtrOutput) ToVirtualNodeLoggingPtrOutputWithContext(ctx context.Context) VirtualNodeLoggingPtrOutput {
	return o
}

func (o VirtualNodeLoggingPtrOutput) Elem() VirtualNodeLoggingOutput {
	return o.ApplyT(func(v *VirtualNodeLogging) VirtualNodeLogging {
		if v != nil {
			return *v
		}
		var ret VirtualNodeLogging
		return ret
	}).(VirtualNodeLoggingOutput)
}

func (o VirtualNodeLoggingPtrOutput) AccessLog() VirtualNodeAccessLogPtrOutput {
	return o.ApplyT(func(v *VirtualNodeLogging) *VirtualNodeAccessLog {
		if v == nil {
			return nil
		}
		return v.AccessLog
	}).(VirtualNodeAccessLogPtrOutput)
}

type VirtualNodeOutlierDetection struct {
	BaseEjectionDuration VirtualNodeDuration `pulumi:"baseEjectionDuration"`
	Interval             VirtualNodeDuration `pulumi:"interval"`
	MaxEjectionPercent   int                 `pulumi:"maxEjectionPercent"`
	MaxServerErrors      int                 `pulumi:"maxServerErrors"`
}

// VirtualNodeOutlierDetectionInput is an input type that accepts VirtualNodeOutlierDetectionArgs and VirtualNodeOutlierDetectionOutput values.
// You can construct a concrete instance of `VirtualNodeOutlierDetectionInput` via:
//
//          VirtualNodeOutlierDetectionArgs{...}
type VirtualNodeOutlierDetectionInput interface {
	pulumi.Input

	ToVirtualNodeOutlierDetectionOutput() VirtualNodeOutlierDetectionOutput
	ToVirtualNodeOutlierDetectionOutputWithContext(context.Context) VirtualNodeOutlierDetectionOutput
}

type VirtualNodeOutlierDetectionArgs struct {
	BaseEjectionDuration VirtualNodeDurationInput `pulumi:"baseEjectionDuration"`
	Interval             VirtualNodeDurationInput `pulumi:"interval"`
	MaxEjectionPercent   pulumi.IntInput          `pulumi:"maxEjectionPercent"`
	MaxServerErrors      pulumi.IntInput          `pulumi:"maxServerErrors"`
}

func (VirtualNodeOutlierDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeOutlierDetection)(nil)).Elem()
}

func (i VirtualNodeOutlierDetectionArgs) ToVirtualNodeOutlierDetectionOutput() VirtualNodeOutlierDetectionOutput {
	return i.ToVirtualNodeOutlierDetectionOutputWithContext(context.Background())
}

func (i VirtualNodeOutlierDetectionArgs) ToVirtualNodeOutlierDetectionOutputWithContext(ctx context.Context) VirtualNodeOutlierDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeOutlierDetectionOutput)
}

func (i VirtualNodeOutlierDetectionArgs) ToVirtualNodeOutlierDetectionPtrOutput() VirtualNodeOutlierDetectionPtrOutput {
	return i.ToVirtualNodeOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i VirtualNodeOutlierDetectionArgs) ToVirtualNodeOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeOutlierDetectionOutput).ToVirtualNodeOutlierDetectionPtrOutputWithContext(ctx)
}

// VirtualNodeOutlierDetectionPtrInput is an input type that accepts VirtualNodeOutlierDetectionArgs, VirtualNodeOutlierDetectionPtr and VirtualNodeOutlierDetectionPtrOutput values.
// You can construct a concrete instance of `VirtualNodeOutlierDetectionPtrInput` via:
//
//          VirtualNodeOutlierDetectionArgs{...}
//
//  or:
//
//          nil
type VirtualNodeOutlierDetectionPtrInput interface {
	pulumi.Input

	ToVirtualNodeOutlierDetectionPtrOutput() VirtualNodeOutlierDetectionPtrOutput
	ToVirtualNodeOutlierDetectionPtrOutputWithContext(context.Context) VirtualNodeOutlierDetectionPtrOutput
}

type virtualNodeOutlierDetectionPtrType VirtualNodeOutlierDetectionArgs

func VirtualNodeOutlierDetectionPtr(v *VirtualNodeOutlierDetectionArgs) VirtualNodeOutlierDetectionPtrInput {
	return (*virtualNodeOutlierDetectionPtrType)(v)
}

func (*virtualNodeOutlierDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeOutlierDetection)(nil)).Elem()
}

func (i *virtualNodeOutlierDetectionPtrType) ToVirtualNodeOutlierDetectionPtrOutput() VirtualNodeOutlierDetectionPtrOutput {
	return i.ToVirtualNodeOutlierDetectionPtrOutputWithContext(context.Background())
}

func (i *virtualNodeOutlierDetectionPtrType) ToVirtualNodeOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeOutlierDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeOutlierDetectionPtrOutput)
}

type VirtualNodeOutlierDetectionOutput struct{ *pulumi.OutputState }

func (VirtualNodeOutlierDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeOutlierDetection)(nil)).Elem()
}

func (o VirtualNodeOutlierDetectionOutput) ToVirtualNodeOutlierDetectionOutput() VirtualNodeOutlierDetectionOutput {
	return o
}

func (o VirtualNodeOutlierDetectionOutput) ToVirtualNodeOutlierDetectionOutputWithContext(ctx context.Context) VirtualNodeOutlierDetectionOutput {
	return o
}

func (o VirtualNodeOutlierDetectionOutput) ToVirtualNodeOutlierDetectionPtrOutput() VirtualNodeOutlierDetectionPtrOutput {
	return o.ToVirtualNodeOutlierDetectionPtrOutputWithContext(context.Background())
}

func (o VirtualNodeOutlierDetectionOutput) ToVirtualNodeOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeOutlierDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeOutlierDetection) *VirtualNodeOutlierDetection {
		return &v
	}).(VirtualNodeOutlierDetectionPtrOutput)
}

func (o VirtualNodeOutlierDetectionOutput) BaseEjectionDuration() VirtualNodeDurationOutput {
	return o.ApplyT(func(v VirtualNodeOutlierDetection) VirtualNodeDuration { return v.BaseEjectionDuration }).(VirtualNodeDurationOutput)
}

func (o VirtualNodeOutlierDetectionOutput) Interval() VirtualNodeDurationOutput {
	return o.ApplyT(func(v VirtualNodeOutlierDetection) VirtualNodeDuration { return v.Interval }).(VirtualNodeDurationOutput)
}

func (o VirtualNodeOutlierDetectionOutput) MaxEjectionPercent() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeOutlierDetection) int { return v.MaxEjectionPercent }).(pulumi.IntOutput)
}

func (o VirtualNodeOutlierDetectionOutput) MaxServerErrors() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeOutlierDetection) int { return v.MaxServerErrors }).(pulumi.IntOutput)
}

type VirtualNodeOutlierDetectionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeOutlierDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeOutlierDetection)(nil)).Elem()
}

func (o VirtualNodeOutlierDetectionPtrOutput) ToVirtualNodeOutlierDetectionPtrOutput() VirtualNodeOutlierDetectionPtrOutput {
	return o
}

func (o VirtualNodeOutlierDetectionPtrOutput) ToVirtualNodeOutlierDetectionPtrOutputWithContext(ctx context.Context) VirtualNodeOutlierDetectionPtrOutput {
	return o
}

func (o VirtualNodeOutlierDetectionPtrOutput) Elem() VirtualNodeOutlierDetectionOutput {
	return o.ApplyT(func(v *VirtualNodeOutlierDetection) VirtualNodeOutlierDetection {
		if v != nil {
			return *v
		}
		var ret VirtualNodeOutlierDetection
		return ret
	}).(VirtualNodeOutlierDetectionOutput)
}

func (o VirtualNodeOutlierDetectionPtrOutput) BaseEjectionDuration() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeOutlierDetection) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return &v.BaseEjectionDuration
	}).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeOutlierDetectionPtrOutput) Interval() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeOutlierDetection) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(VirtualNodeDurationPtrOutput)
}

func (o VirtualNodeOutlierDetectionPtrOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return &v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

func (o VirtualNodeOutlierDetectionPtrOutput) MaxServerErrors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeOutlierDetection) *int {
		if v == nil {
			return nil
		}
		return &v.MaxServerErrors
	}).(pulumi.IntPtrOutput)
}

type VirtualNodePortMapping struct {
	Port     int    `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// VirtualNodePortMappingInput is an input type that accepts VirtualNodePortMappingArgs and VirtualNodePortMappingOutput values.
// You can construct a concrete instance of `VirtualNodePortMappingInput` via:
//
//          VirtualNodePortMappingArgs{...}
type VirtualNodePortMappingInput interface {
	pulumi.Input

	ToVirtualNodePortMappingOutput() VirtualNodePortMappingOutput
	ToVirtualNodePortMappingOutputWithContext(context.Context) VirtualNodePortMappingOutput
}

type VirtualNodePortMappingArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualNodePortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodePortMapping)(nil)).Elem()
}

func (i VirtualNodePortMappingArgs) ToVirtualNodePortMappingOutput() VirtualNodePortMappingOutput {
	return i.ToVirtualNodePortMappingOutputWithContext(context.Background())
}

func (i VirtualNodePortMappingArgs) ToVirtualNodePortMappingOutputWithContext(ctx context.Context) VirtualNodePortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodePortMappingOutput)
}

type VirtualNodePortMappingOutput struct{ *pulumi.OutputState }

func (VirtualNodePortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodePortMapping)(nil)).Elem()
}

func (o VirtualNodePortMappingOutput) ToVirtualNodePortMappingOutput() VirtualNodePortMappingOutput {
	return o
}

func (o VirtualNodePortMappingOutput) ToVirtualNodePortMappingOutputWithContext(ctx context.Context) VirtualNodePortMappingOutput {
	return o
}

func (o VirtualNodePortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodePortMapping) int { return v.Port }).(pulumi.IntOutput)
}

func (o VirtualNodePortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodePortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualNodeServiceDiscovery struct {
	AWSCloudMap *VirtualNodeAwsCloudMapServiceDiscovery `pulumi:"aWSCloudMap"`
	DNS         *VirtualNodeDnsServiceDiscovery         `pulumi:"dNS"`
}

// VirtualNodeServiceDiscoveryInput is an input type that accepts VirtualNodeServiceDiscoveryArgs and VirtualNodeServiceDiscoveryOutput values.
// You can construct a concrete instance of `VirtualNodeServiceDiscoveryInput` via:
//
//          VirtualNodeServiceDiscoveryArgs{...}
type VirtualNodeServiceDiscoveryInput interface {
	pulumi.Input

	ToVirtualNodeServiceDiscoveryOutput() VirtualNodeServiceDiscoveryOutput
	ToVirtualNodeServiceDiscoveryOutputWithContext(context.Context) VirtualNodeServiceDiscoveryOutput
}

type VirtualNodeServiceDiscoveryArgs struct {
	AWSCloudMap VirtualNodeAwsCloudMapServiceDiscoveryPtrInput `pulumi:"aWSCloudMap"`
	DNS         VirtualNodeDnsServiceDiscoveryPtrInput         `pulumi:"dNS"`
}

func (VirtualNodeServiceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeServiceDiscovery)(nil)).Elem()
}

func (i VirtualNodeServiceDiscoveryArgs) ToVirtualNodeServiceDiscoveryOutput() VirtualNodeServiceDiscoveryOutput {
	return i.ToVirtualNodeServiceDiscoveryOutputWithContext(context.Background())
}

func (i VirtualNodeServiceDiscoveryArgs) ToVirtualNodeServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeServiceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeServiceDiscoveryOutput)
}

func (i VirtualNodeServiceDiscoveryArgs) ToVirtualNodeServiceDiscoveryPtrOutput() VirtualNodeServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i VirtualNodeServiceDiscoveryArgs) ToVirtualNodeServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeServiceDiscoveryOutput).ToVirtualNodeServiceDiscoveryPtrOutputWithContext(ctx)
}

// VirtualNodeServiceDiscoveryPtrInput is an input type that accepts VirtualNodeServiceDiscoveryArgs, VirtualNodeServiceDiscoveryPtr and VirtualNodeServiceDiscoveryPtrOutput values.
// You can construct a concrete instance of `VirtualNodeServiceDiscoveryPtrInput` via:
//
//          VirtualNodeServiceDiscoveryArgs{...}
//
//  or:
//
//          nil
type VirtualNodeServiceDiscoveryPtrInput interface {
	pulumi.Input

	ToVirtualNodeServiceDiscoveryPtrOutput() VirtualNodeServiceDiscoveryPtrOutput
	ToVirtualNodeServiceDiscoveryPtrOutputWithContext(context.Context) VirtualNodeServiceDiscoveryPtrOutput
}

type virtualNodeServiceDiscoveryPtrType VirtualNodeServiceDiscoveryArgs

func VirtualNodeServiceDiscoveryPtr(v *VirtualNodeServiceDiscoveryArgs) VirtualNodeServiceDiscoveryPtrInput {
	return (*virtualNodeServiceDiscoveryPtrType)(v)
}

func (*virtualNodeServiceDiscoveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeServiceDiscovery)(nil)).Elem()
}

func (i *virtualNodeServiceDiscoveryPtrType) ToVirtualNodeServiceDiscoveryPtrOutput() VirtualNodeServiceDiscoveryPtrOutput {
	return i.ToVirtualNodeServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (i *virtualNodeServiceDiscoveryPtrType) ToVirtualNodeServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeServiceDiscoveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeServiceDiscoveryPtrOutput)
}

type VirtualNodeServiceDiscoveryOutput struct{ *pulumi.OutputState }

func (VirtualNodeServiceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeServiceDiscoveryOutput) ToVirtualNodeServiceDiscoveryOutput() VirtualNodeServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeServiceDiscoveryOutput) ToVirtualNodeServiceDiscoveryOutputWithContext(ctx context.Context) VirtualNodeServiceDiscoveryOutput {
	return o
}

func (o VirtualNodeServiceDiscoveryOutput) ToVirtualNodeServiceDiscoveryPtrOutput() VirtualNodeServiceDiscoveryPtrOutput {
	return o.ToVirtualNodeServiceDiscoveryPtrOutputWithContext(context.Background())
}

func (o VirtualNodeServiceDiscoveryOutput) ToVirtualNodeServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeServiceDiscoveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeServiceDiscovery) *VirtualNodeServiceDiscovery {
		return &v
	}).(VirtualNodeServiceDiscoveryPtrOutput)
}

func (o VirtualNodeServiceDiscoveryOutput) AWSCloudMap() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v VirtualNodeServiceDiscovery) *VirtualNodeAwsCloudMapServiceDiscovery { return v.AWSCloudMap }).(VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput)
}

func (o VirtualNodeServiceDiscoveryOutput) DNS() VirtualNodeDnsServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v VirtualNodeServiceDiscovery) *VirtualNodeDnsServiceDiscovery { return v.DNS }).(VirtualNodeDnsServiceDiscoveryPtrOutput)
}

type VirtualNodeServiceDiscoveryPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeServiceDiscoveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeServiceDiscovery)(nil)).Elem()
}

func (o VirtualNodeServiceDiscoveryPtrOutput) ToVirtualNodeServiceDiscoveryPtrOutput() VirtualNodeServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeServiceDiscoveryPtrOutput) ToVirtualNodeServiceDiscoveryPtrOutputWithContext(ctx context.Context) VirtualNodeServiceDiscoveryPtrOutput {
	return o
}

func (o VirtualNodeServiceDiscoveryPtrOutput) Elem() VirtualNodeServiceDiscoveryOutput {
	return o.ApplyT(func(v *VirtualNodeServiceDiscovery) VirtualNodeServiceDiscovery {
		if v != nil {
			return *v
		}
		var ret VirtualNodeServiceDiscovery
		return ret
	}).(VirtualNodeServiceDiscoveryOutput)
}

func (o VirtualNodeServiceDiscoveryPtrOutput) AWSCloudMap() VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v *VirtualNodeServiceDiscovery) *VirtualNodeAwsCloudMapServiceDiscovery {
		if v == nil {
			return nil
		}
		return v.AWSCloudMap
	}).(VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput)
}

func (o VirtualNodeServiceDiscoveryPtrOutput) DNS() VirtualNodeDnsServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v *VirtualNodeServiceDiscovery) *VirtualNodeDnsServiceDiscovery {
		if v == nil {
			return nil
		}
		return v.DNS
	}).(VirtualNodeDnsServiceDiscoveryPtrOutput)
}

type VirtualNodeSpec struct {
	BackendDefaults  *VirtualNodeBackendDefaults  `pulumi:"backendDefaults"`
	Backends         []VirtualNodeBackend         `pulumi:"backends"`
	Listeners        []VirtualNodeListener        `pulumi:"listeners"`
	Logging          *VirtualNodeLogging          `pulumi:"logging"`
	ServiceDiscovery *VirtualNodeServiceDiscovery `pulumi:"serviceDiscovery"`
}

// VirtualNodeSpecInput is an input type that accepts VirtualNodeSpecArgs and VirtualNodeSpecOutput values.
// You can construct a concrete instance of `VirtualNodeSpecInput` via:
//
//          VirtualNodeSpecArgs{...}
type VirtualNodeSpecInput interface {
	pulumi.Input

	ToVirtualNodeSpecOutput() VirtualNodeSpecOutput
	ToVirtualNodeSpecOutputWithContext(context.Context) VirtualNodeSpecOutput
}

type VirtualNodeSpecArgs struct {
	BackendDefaults  VirtualNodeBackendDefaultsPtrInput  `pulumi:"backendDefaults"`
	Backends         VirtualNodeBackendArrayInput        `pulumi:"backends"`
	Listeners        VirtualNodeListenerArrayInput       `pulumi:"listeners"`
	Logging          VirtualNodeLoggingPtrInput          `pulumi:"logging"`
	ServiceDiscovery VirtualNodeServiceDiscoveryPtrInput `pulumi:"serviceDiscovery"`
}

func (VirtualNodeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return i.ToVirtualNodeSpecOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput)
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput).ToVirtualNodeSpecPtrOutputWithContext(ctx)
}

// VirtualNodeSpecPtrInput is an input type that accepts VirtualNodeSpecArgs, VirtualNodeSpecPtr and VirtualNodeSpecPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSpecPtrInput` via:
//
//          VirtualNodeSpecArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSpecPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput
	ToVirtualNodeSpecPtrOutputWithContext(context.Context) VirtualNodeSpecPtrOutput
}

type virtualNodeSpecPtrType VirtualNodeSpecArgs

func VirtualNodeSpecPtr(v *VirtualNodeSpecArgs) VirtualNodeSpecPtrInput {
	return (*virtualNodeSpecPtrType)(v)
}

func (*virtualNodeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecPtrOutput)
}

type VirtualNodeSpecOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSpec) *VirtualNodeSpec {
		return &v
	}).(VirtualNodeSpecPtrOutput)
}

func (o VirtualNodeSpecOutput) BackendDefaults() VirtualNodeBackendDefaultsPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeBackendDefaults { return v.BackendDefaults }).(VirtualNodeBackendDefaultsPtrOutput)
}

func (o VirtualNodeSpecOutput) Backends() VirtualNodeBackendArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpec) []VirtualNodeBackend { return v.Backends }).(VirtualNodeBackendArrayOutput)
}

func (o VirtualNodeSpecOutput) Listeners() VirtualNodeListenerArrayOutput {
	return o.ApplyT(func(v VirtualNodeSpec) []VirtualNodeListener { return v.Listeners }).(VirtualNodeListenerArrayOutput)
}

func (o VirtualNodeSpecOutput) Logging() VirtualNodeLoggingPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeLogging { return v.Logging }).(VirtualNodeLoggingPtrOutput)
}

func (o VirtualNodeSpecOutput) ServiceDiscovery() VirtualNodeServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeServiceDiscovery { return v.ServiceDiscovery }).(VirtualNodeServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) Elem() VirtualNodeSpecOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) VirtualNodeSpec {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSpec
		return ret
	}).(VirtualNodeSpecOutput)
}

func (o VirtualNodeSpecPtrOutput) BackendDefaults() VirtualNodeBackendDefaultsPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeBackendDefaults {
		if v == nil {
			return nil
		}
		return v.BackendDefaults
	}).(VirtualNodeBackendDefaultsPtrOutput)
}

func (o VirtualNodeSpecPtrOutput) Backends() VirtualNodeBackendArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) []VirtualNodeBackend {
		if v == nil {
			return nil
		}
		return v.Backends
	}).(VirtualNodeBackendArrayOutput)
}

func (o VirtualNodeSpecPtrOutput) Listeners() VirtualNodeListenerArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) []VirtualNodeListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(VirtualNodeListenerArrayOutput)
}

func (o VirtualNodeSpecPtrOutput) Logging() VirtualNodeLoggingPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(VirtualNodeLoggingPtrOutput)
}

func (o VirtualNodeSpecPtrOutput) ServiceDiscovery() VirtualNodeServiceDiscoveryPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSpec) *VirtualNodeServiceDiscovery {
		if v == nil {
			return nil
		}
		return v.ServiceDiscovery
	}).(VirtualNodeServiceDiscoveryPtrOutput)
}

type VirtualNodeSubjectAlternativeNameMatchers struct {
	Exact []string `pulumi:"exact"`
}

// VirtualNodeSubjectAlternativeNameMatchersInput is an input type that accepts VirtualNodeSubjectAlternativeNameMatchersArgs and VirtualNodeSubjectAlternativeNameMatchersOutput values.
// You can construct a concrete instance of `VirtualNodeSubjectAlternativeNameMatchersInput` via:
//
//          VirtualNodeSubjectAlternativeNameMatchersArgs{...}
type VirtualNodeSubjectAlternativeNameMatchersInput interface {
	pulumi.Input

	ToVirtualNodeSubjectAlternativeNameMatchersOutput() VirtualNodeSubjectAlternativeNameMatchersOutput
	ToVirtualNodeSubjectAlternativeNameMatchersOutputWithContext(context.Context) VirtualNodeSubjectAlternativeNameMatchersOutput
}

type VirtualNodeSubjectAlternativeNameMatchersArgs struct {
	Exact pulumi.StringArrayInput `pulumi:"exact"`
}

func (VirtualNodeSubjectAlternativeNameMatchersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSubjectAlternativeNameMatchers)(nil)).Elem()
}

func (i VirtualNodeSubjectAlternativeNameMatchersArgs) ToVirtualNodeSubjectAlternativeNameMatchersOutput() VirtualNodeSubjectAlternativeNameMatchersOutput {
	return i.ToVirtualNodeSubjectAlternativeNameMatchersOutputWithContext(context.Background())
}

func (i VirtualNodeSubjectAlternativeNameMatchersArgs) ToVirtualNodeSubjectAlternativeNameMatchersOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNameMatchersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSubjectAlternativeNameMatchersOutput)
}

func (i VirtualNodeSubjectAlternativeNameMatchersArgs) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutput() VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return i.ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSubjectAlternativeNameMatchersArgs) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSubjectAlternativeNameMatchersOutput).ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(ctx)
}

// VirtualNodeSubjectAlternativeNameMatchersPtrInput is an input type that accepts VirtualNodeSubjectAlternativeNameMatchersArgs, VirtualNodeSubjectAlternativeNameMatchersPtr and VirtualNodeSubjectAlternativeNameMatchersPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSubjectAlternativeNameMatchersPtrInput` via:
//
//          VirtualNodeSubjectAlternativeNameMatchersArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSubjectAlternativeNameMatchersPtrInput interface {
	pulumi.Input

	ToVirtualNodeSubjectAlternativeNameMatchersPtrOutput() VirtualNodeSubjectAlternativeNameMatchersPtrOutput
	ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(context.Context) VirtualNodeSubjectAlternativeNameMatchersPtrOutput
}

type virtualNodeSubjectAlternativeNameMatchersPtrType VirtualNodeSubjectAlternativeNameMatchersArgs

func VirtualNodeSubjectAlternativeNameMatchersPtr(v *VirtualNodeSubjectAlternativeNameMatchersArgs) VirtualNodeSubjectAlternativeNameMatchersPtrInput {
	return (*virtualNodeSubjectAlternativeNameMatchersPtrType)(v)
}

func (*virtualNodeSubjectAlternativeNameMatchersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSubjectAlternativeNameMatchers)(nil)).Elem()
}

func (i *virtualNodeSubjectAlternativeNameMatchersPtrType) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutput() VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return i.ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSubjectAlternativeNameMatchersPtrType) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSubjectAlternativeNameMatchersPtrOutput)
}

type VirtualNodeSubjectAlternativeNameMatchersOutput struct{ *pulumi.OutputState }

func (VirtualNodeSubjectAlternativeNameMatchersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSubjectAlternativeNameMatchers)(nil)).Elem()
}

func (o VirtualNodeSubjectAlternativeNameMatchersOutput) ToVirtualNodeSubjectAlternativeNameMatchersOutput() VirtualNodeSubjectAlternativeNameMatchersOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNameMatchersOutput) ToVirtualNodeSubjectAlternativeNameMatchersOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNameMatchersOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNameMatchersOutput) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutput() VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return o.ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSubjectAlternativeNameMatchersOutput) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSubjectAlternativeNameMatchers) *VirtualNodeSubjectAlternativeNameMatchers {
		return &v
	}).(VirtualNodeSubjectAlternativeNameMatchersPtrOutput)
}

func (o VirtualNodeSubjectAlternativeNameMatchersOutput) Exact() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeSubjectAlternativeNameMatchers) []string { return v.Exact }).(pulumi.StringArrayOutput)
}

type VirtualNodeSubjectAlternativeNameMatchersPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSubjectAlternativeNameMatchersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSubjectAlternativeNameMatchers)(nil)).Elem()
}

func (o VirtualNodeSubjectAlternativeNameMatchersPtrOutput) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutput() VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNameMatchersPtrOutput) ToVirtualNodeSubjectAlternativeNameMatchersPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNameMatchersPtrOutput) Elem() VirtualNodeSubjectAlternativeNameMatchersOutput {
	return o.ApplyT(func(v *VirtualNodeSubjectAlternativeNameMatchers) VirtualNodeSubjectAlternativeNameMatchers {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSubjectAlternativeNameMatchers
		return ret
	}).(VirtualNodeSubjectAlternativeNameMatchersOutput)
}

func (o VirtualNodeSubjectAlternativeNameMatchersPtrOutput) Exact() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeSubjectAlternativeNameMatchers) []string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeSubjectAlternativeNames struct {
	Match VirtualNodeSubjectAlternativeNameMatchers `pulumi:"match"`
}

// VirtualNodeSubjectAlternativeNamesInput is an input type that accepts VirtualNodeSubjectAlternativeNamesArgs and VirtualNodeSubjectAlternativeNamesOutput values.
// You can construct a concrete instance of `VirtualNodeSubjectAlternativeNamesInput` via:
//
//          VirtualNodeSubjectAlternativeNamesArgs{...}
type VirtualNodeSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToVirtualNodeSubjectAlternativeNamesOutput() VirtualNodeSubjectAlternativeNamesOutput
	ToVirtualNodeSubjectAlternativeNamesOutputWithContext(context.Context) VirtualNodeSubjectAlternativeNamesOutput
}

type VirtualNodeSubjectAlternativeNamesArgs struct {
	Match VirtualNodeSubjectAlternativeNameMatchersInput `pulumi:"match"`
}

func (VirtualNodeSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSubjectAlternativeNames)(nil)).Elem()
}

func (i VirtualNodeSubjectAlternativeNamesArgs) ToVirtualNodeSubjectAlternativeNamesOutput() VirtualNodeSubjectAlternativeNamesOutput {
	return i.ToVirtualNodeSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i VirtualNodeSubjectAlternativeNamesArgs) ToVirtualNodeSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSubjectAlternativeNamesOutput)
}

func (i VirtualNodeSubjectAlternativeNamesArgs) ToVirtualNodeSubjectAlternativeNamesPtrOutput() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSubjectAlternativeNamesArgs) ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSubjectAlternativeNamesOutput).ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

// VirtualNodeSubjectAlternativeNamesPtrInput is an input type that accepts VirtualNodeSubjectAlternativeNamesArgs, VirtualNodeSubjectAlternativeNamesPtr and VirtualNodeSubjectAlternativeNamesPtrOutput values.
// You can construct a concrete instance of `VirtualNodeSubjectAlternativeNamesPtrInput` via:
//
//          VirtualNodeSubjectAlternativeNamesArgs{...}
//
//  or:
//
//          nil
type VirtualNodeSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToVirtualNodeSubjectAlternativeNamesPtrOutput() VirtualNodeSubjectAlternativeNamesPtrOutput
	ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(context.Context) VirtualNodeSubjectAlternativeNamesPtrOutput
}

type virtualNodeSubjectAlternativeNamesPtrType VirtualNodeSubjectAlternativeNamesArgs

func VirtualNodeSubjectAlternativeNamesPtr(v *VirtualNodeSubjectAlternativeNamesArgs) VirtualNodeSubjectAlternativeNamesPtrInput {
	return (*virtualNodeSubjectAlternativeNamesPtrType)(v)
}

func (*virtualNodeSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSubjectAlternativeNames)(nil)).Elem()
}

func (i *virtualNodeSubjectAlternativeNamesPtrType) ToVirtualNodeSubjectAlternativeNamesPtrOutput() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return i.ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSubjectAlternativeNamesPtrType) ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSubjectAlternativeNamesPtrOutput)
}

type VirtualNodeSubjectAlternativeNamesOutput struct{ *pulumi.OutputState }

func (VirtualNodeSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSubjectAlternativeNamesOutput) ToVirtualNodeSubjectAlternativeNamesOutput() VirtualNodeSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNamesOutput) ToVirtualNodeSubjectAlternativeNamesOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNamesOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNamesOutput) ToVirtualNodeSubjectAlternativeNamesPtrOutput() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o.ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSubjectAlternativeNamesOutput) ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeSubjectAlternativeNames) *VirtualNodeSubjectAlternativeNames {
		return &v
	}).(VirtualNodeSubjectAlternativeNamesPtrOutput)
}

func (o VirtualNodeSubjectAlternativeNamesOutput) Match() VirtualNodeSubjectAlternativeNameMatchersOutput {
	return o.ApplyT(func(v VirtualNodeSubjectAlternativeNames) VirtualNodeSubjectAlternativeNameMatchers { return v.Match }).(VirtualNodeSubjectAlternativeNameMatchersOutput)
}

type VirtualNodeSubjectAlternativeNamesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSubjectAlternativeNames)(nil)).Elem()
}

func (o VirtualNodeSubjectAlternativeNamesPtrOutput) ToVirtualNodeSubjectAlternativeNamesPtrOutput() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNamesPtrOutput) ToVirtualNodeSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o
}

func (o VirtualNodeSubjectAlternativeNamesPtrOutput) Elem() VirtualNodeSubjectAlternativeNamesOutput {
	return o.ApplyT(func(v *VirtualNodeSubjectAlternativeNames) VirtualNodeSubjectAlternativeNames {
		if v != nil {
			return *v
		}
		var ret VirtualNodeSubjectAlternativeNames
		return ret
	}).(VirtualNodeSubjectAlternativeNamesOutput)
}

func (o VirtualNodeSubjectAlternativeNamesPtrOutput) Match() VirtualNodeSubjectAlternativeNameMatchersPtrOutput {
	return o.ApplyT(func(v *VirtualNodeSubjectAlternativeNames) *VirtualNodeSubjectAlternativeNameMatchers {
		if v == nil {
			return nil
		}
		return &v.Match
	}).(VirtualNodeSubjectAlternativeNameMatchersPtrOutput)
}

type VirtualNodeTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VirtualNodeTagInput is an input type that accepts VirtualNodeTagArgs and VirtualNodeTagOutput values.
// You can construct a concrete instance of `VirtualNodeTagInput` via:
//
//          VirtualNodeTagArgs{...}
type VirtualNodeTagInput interface {
	pulumi.Input

	ToVirtualNodeTagOutput() VirtualNodeTagOutput
	ToVirtualNodeTagOutputWithContext(context.Context) VirtualNodeTagOutput
}

type VirtualNodeTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTag)(nil)).Elem()
}

func (i VirtualNodeTagArgs) ToVirtualNodeTagOutput() VirtualNodeTagOutput {
	return i.ToVirtualNodeTagOutputWithContext(context.Background())
}

func (i VirtualNodeTagArgs) ToVirtualNodeTagOutputWithContext(ctx context.Context) VirtualNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTagOutput)
}

// VirtualNodeTagArrayInput is an input type that accepts VirtualNodeTagArray and VirtualNodeTagArrayOutput values.
// You can construct a concrete instance of `VirtualNodeTagArrayInput` via:
//
//          VirtualNodeTagArray{ VirtualNodeTagArgs{...} }
type VirtualNodeTagArrayInput interface {
	pulumi.Input

	ToVirtualNodeTagArrayOutput() VirtualNodeTagArrayOutput
	ToVirtualNodeTagArrayOutputWithContext(context.Context) VirtualNodeTagArrayOutput
}

type VirtualNodeTagArray []VirtualNodeTagInput

func (VirtualNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeTag)(nil)).Elem()
}

func (i VirtualNodeTagArray) ToVirtualNodeTagArrayOutput() VirtualNodeTagArrayOutput {
	return i.ToVirtualNodeTagArrayOutputWithContext(context.Background())
}

func (i VirtualNodeTagArray) ToVirtualNodeTagArrayOutputWithContext(ctx context.Context) VirtualNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTagArrayOutput)
}

type VirtualNodeTagOutput struct{ *pulumi.OutputState }

func (VirtualNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTag)(nil)).Elem()
}

func (o VirtualNodeTagOutput) ToVirtualNodeTagOutput() VirtualNodeTagOutput {
	return o
}

func (o VirtualNodeTagOutput) ToVirtualNodeTagOutputWithContext(ctx context.Context) VirtualNodeTagOutput {
	return o
}

func (o VirtualNodeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o VirtualNodeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeTag) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualNodeTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNodeTag)(nil)).Elem()
}

func (o VirtualNodeTagArrayOutput) ToVirtualNodeTagArrayOutput() VirtualNodeTagArrayOutput {
	return o
}

func (o VirtualNodeTagArrayOutput) ToVirtualNodeTagArrayOutputWithContext(ctx context.Context) VirtualNodeTagArrayOutput {
	return o
}

func (o VirtualNodeTagArrayOutput) Index(i pulumi.IntInput) VirtualNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNodeTag {
		return vs[0].([]VirtualNodeTag)[vs[1].(int)]
	}).(VirtualNodeTagOutput)
}

type VirtualNodeTcpConnectionPool struct {
	MaxConnections int `pulumi:"maxConnections"`
}

// VirtualNodeTcpConnectionPoolInput is an input type that accepts VirtualNodeTcpConnectionPoolArgs and VirtualNodeTcpConnectionPoolOutput values.
// You can construct a concrete instance of `VirtualNodeTcpConnectionPoolInput` via:
//
//          VirtualNodeTcpConnectionPoolArgs{...}
type VirtualNodeTcpConnectionPoolInput interface {
	pulumi.Input

	ToVirtualNodeTcpConnectionPoolOutput() VirtualNodeTcpConnectionPoolOutput
	ToVirtualNodeTcpConnectionPoolOutputWithContext(context.Context) VirtualNodeTcpConnectionPoolOutput
}

type VirtualNodeTcpConnectionPoolArgs struct {
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
}

func (VirtualNodeTcpConnectionPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTcpConnectionPool)(nil)).Elem()
}

func (i VirtualNodeTcpConnectionPoolArgs) ToVirtualNodeTcpConnectionPoolOutput() VirtualNodeTcpConnectionPoolOutput {
	return i.ToVirtualNodeTcpConnectionPoolOutputWithContext(context.Background())
}

func (i VirtualNodeTcpConnectionPoolArgs) ToVirtualNodeTcpConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeTcpConnectionPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTcpConnectionPoolOutput)
}

func (i VirtualNodeTcpConnectionPoolArgs) ToVirtualNodeTcpConnectionPoolPtrOutput() VirtualNodeTcpConnectionPoolPtrOutput {
	return i.ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTcpConnectionPoolArgs) ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeTcpConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTcpConnectionPoolOutput).ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(ctx)
}

// VirtualNodeTcpConnectionPoolPtrInput is an input type that accepts VirtualNodeTcpConnectionPoolArgs, VirtualNodeTcpConnectionPoolPtr and VirtualNodeTcpConnectionPoolPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTcpConnectionPoolPtrInput` via:
//
//          VirtualNodeTcpConnectionPoolArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTcpConnectionPoolPtrInput interface {
	pulumi.Input

	ToVirtualNodeTcpConnectionPoolPtrOutput() VirtualNodeTcpConnectionPoolPtrOutput
	ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(context.Context) VirtualNodeTcpConnectionPoolPtrOutput
}

type virtualNodeTcpConnectionPoolPtrType VirtualNodeTcpConnectionPoolArgs

func VirtualNodeTcpConnectionPoolPtr(v *VirtualNodeTcpConnectionPoolArgs) VirtualNodeTcpConnectionPoolPtrInput {
	return (*virtualNodeTcpConnectionPoolPtrType)(v)
}

func (*virtualNodeTcpConnectionPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTcpConnectionPool)(nil)).Elem()
}

func (i *virtualNodeTcpConnectionPoolPtrType) ToVirtualNodeTcpConnectionPoolPtrOutput() VirtualNodeTcpConnectionPoolPtrOutput {
	return i.ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTcpConnectionPoolPtrType) ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeTcpConnectionPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTcpConnectionPoolPtrOutput)
}

type VirtualNodeTcpConnectionPoolOutput struct{ *pulumi.OutputState }

func (VirtualNodeTcpConnectionPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTcpConnectionPool)(nil)).Elem()
}

func (o VirtualNodeTcpConnectionPoolOutput) ToVirtualNodeTcpConnectionPoolOutput() VirtualNodeTcpConnectionPoolOutput {
	return o
}

func (o VirtualNodeTcpConnectionPoolOutput) ToVirtualNodeTcpConnectionPoolOutputWithContext(ctx context.Context) VirtualNodeTcpConnectionPoolOutput {
	return o
}

func (o VirtualNodeTcpConnectionPoolOutput) ToVirtualNodeTcpConnectionPoolPtrOutput() VirtualNodeTcpConnectionPoolPtrOutput {
	return o.ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTcpConnectionPoolOutput) ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeTcpConnectionPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTcpConnectionPool) *VirtualNodeTcpConnectionPool {
		return &v
	}).(VirtualNodeTcpConnectionPoolPtrOutput)
}

func (o VirtualNodeTcpConnectionPoolOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNodeTcpConnectionPool) int { return v.MaxConnections }).(pulumi.IntOutput)
}

type VirtualNodeTcpConnectionPoolPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTcpConnectionPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTcpConnectionPool)(nil)).Elem()
}

func (o VirtualNodeTcpConnectionPoolPtrOutput) ToVirtualNodeTcpConnectionPoolPtrOutput() VirtualNodeTcpConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeTcpConnectionPoolPtrOutput) ToVirtualNodeTcpConnectionPoolPtrOutputWithContext(ctx context.Context) VirtualNodeTcpConnectionPoolPtrOutput {
	return o
}

func (o VirtualNodeTcpConnectionPoolPtrOutput) Elem() VirtualNodeTcpConnectionPoolOutput {
	return o.ApplyT(func(v *VirtualNodeTcpConnectionPool) VirtualNodeTcpConnectionPool {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTcpConnectionPool
		return ret
	}).(VirtualNodeTcpConnectionPoolOutput)
}

func (o VirtualNodeTcpConnectionPoolPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTcpConnectionPool) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConnections
	}).(pulumi.IntPtrOutput)
}

type VirtualNodeTcpTimeout struct {
	Idle *VirtualNodeDuration `pulumi:"idle"`
}

// VirtualNodeTcpTimeoutInput is an input type that accepts VirtualNodeTcpTimeoutArgs and VirtualNodeTcpTimeoutOutput values.
// You can construct a concrete instance of `VirtualNodeTcpTimeoutInput` via:
//
//          VirtualNodeTcpTimeoutArgs{...}
type VirtualNodeTcpTimeoutInput interface {
	pulumi.Input

	ToVirtualNodeTcpTimeoutOutput() VirtualNodeTcpTimeoutOutput
	ToVirtualNodeTcpTimeoutOutputWithContext(context.Context) VirtualNodeTcpTimeoutOutput
}

type VirtualNodeTcpTimeoutArgs struct {
	Idle VirtualNodeDurationPtrInput `pulumi:"idle"`
}

func (VirtualNodeTcpTimeoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTcpTimeout)(nil)).Elem()
}

func (i VirtualNodeTcpTimeoutArgs) ToVirtualNodeTcpTimeoutOutput() VirtualNodeTcpTimeoutOutput {
	return i.ToVirtualNodeTcpTimeoutOutputWithContext(context.Background())
}

func (i VirtualNodeTcpTimeoutArgs) ToVirtualNodeTcpTimeoutOutputWithContext(ctx context.Context) VirtualNodeTcpTimeoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTcpTimeoutOutput)
}

func (i VirtualNodeTcpTimeoutArgs) ToVirtualNodeTcpTimeoutPtrOutput() VirtualNodeTcpTimeoutPtrOutput {
	return i.ToVirtualNodeTcpTimeoutPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTcpTimeoutArgs) ToVirtualNodeTcpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeTcpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTcpTimeoutOutput).ToVirtualNodeTcpTimeoutPtrOutputWithContext(ctx)
}

// VirtualNodeTcpTimeoutPtrInput is an input type that accepts VirtualNodeTcpTimeoutArgs, VirtualNodeTcpTimeoutPtr and VirtualNodeTcpTimeoutPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTcpTimeoutPtrInput` via:
//
//          VirtualNodeTcpTimeoutArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTcpTimeoutPtrInput interface {
	pulumi.Input

	ToVirtualNodeTcpTimeoutPtrOutput() VirtualNodeTcpTimeoutPtrOutput
	ToVirtualNodeTcpTimeoutPtrOutputWithContext(context.Context) VirtualNodeTcpTimeoutPtrOutput
}

type virtualNodeTcpTimeoutPtrType VirtualNodeTcpTimeoutArgs

func VirtualNodeTcpTimeoutPtr(v *VirtualNodeTcpTimeoutArgs) VirtualNodeTcpTimeoutPtrInput {
	return (*virtualNodeTcpTimeoutPtrType)(v)
}

func (*virtualNodeTcpTimeoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTcpTimeout)(nil)).Elem()
}

func (i *virtualNodeTcpTimeoutPtrType) ToVirtualNodeTcpTimeoutPtrOutput() VirtualNodeTcpTimeoutPtrOutput {
	return i.ToVirtualNodeTcpTimeoutPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTcpTimeoutPtrType) ToVirtualNodeTcpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeTcpTimeoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTcpTimeoutPtrOutput)
}

type VirtualNodeTcpTimeoutOutput struct{ *pulumi.OutputState }

func (VirtualNodeTcpTimeoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTcpTimeout)(nil)).Elem()
}

func (o VirtualNodeTcpTimeoutOutput) ToVirtualNodeTcpTimeoutOutput() VirtualNodeTcpTimeoutOutput {
	return o
}

func (o VirtualNodeTcpTimeoutOutput) ToVirtualNodeTcpTimeoutOutputWithContext(ctx context.Context) VirtualNodeTcpTimeoutOutput {
	return o
}

func (o VirtualNodeTcpTimeoutOutput) ToVirtualNodeTcpTimeoutPtrOutput() VirtualNodeTcpTimeoutPtrOutput {
	return o.ToVirtualNodeTcpTimeoutPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTcpTimeoutOutput) ToVirtualNodeTcpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeTcpTimeoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTcpTimeout) *VirtualNodeTcpTimeout {
		return &v
	}).(VirtualNodeTcpTimeoutPtrOutput)
}

func (o VirtualNodeTcpTimeoutOutput) Idle() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v VirtualNodeTcpTimeout) *VirtualNodeDuration { return v.Idle }).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeTcpTimeoutPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTcpTimeoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTcpTimeout)(nil)).Elem()
}

func (o VirtualNodeTcpTimeoutPtrOutput) ToVirtualNodeTcpTimeoutPtrOutput() VirtualNodeTcpTimeoutPtrOutput {
	return o
}

func (o VirtualNodeTcpTimeoutPtrOutput) ToVirtualNodeTcpTimeoutPtrOutputWithContext(ctx context.Context) VirtualNodeTcpTimeoutPtrOutput {
	return o
}

func (o VirtualNodeTcpTimeoutPtrOutput) Elem() VirtualNodeTcpTimeoutOutput {
	return o.ApplyT(func(v *VirtualNodeTcpTimeout) VirtualNodeTcpTimeout {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTcpTimeout
		return ret
	}).(VirtualNodeTcpTimeoutOutput)
}

func (o VirtualNodeTcpTimeoutPtrOutput) Idle() VirtualNodeDurationPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTcpTimeout) *VirtualNodeDuration {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(VirtualNodeDurationPtrOutput)
}

type VirtualNodeTlsValidationContext struct {
	SubjectAlternativeNames *VirtualNodeSubjectAlternativeNames  `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualNodeTlsValidationContextTrust `pulumi:"trust"`
}

// VirtualNodeTlsValidationContextInput is an input type that accepts VirtualNodeTlsValidationContextArgs and VirtualNodeTlsValidationContextOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextInput` via:
//
//          VirtualNodeTlsValidationContextArgs{...}
type VirtualNodeTlsValidationContextInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextOutput() VirtualNodeTlsValidationContextOutput
	ToVirtualNodeTlsValidationContextOutputWithContext(context.Context) VirtualNodeTlsValidationContextOutput
}

type VirtualNodeTlsValidationContextArgs struct {
	SubjectAlternativeNames VirtualNodeSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	Trust                   VirtualNodeTlsValidationContextTrustInput  `pulumi:"trust"`
}

func (VirtualNodeTlsValidationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContext)(nil)).Elem()
}

func (i VirtualNodeTlsValidationContextArgs) ToVirtualNodeTlsValidationContextOutput() VirtualNodeTlsValidationContextOutput {
	return i.ToVirtualNodeTlsValidationContextOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextArgs) ToVirtualNodeTlsValidationContextOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextOutput)
}

func (i VirtualNodeTlsValidationContextArgs) ToVirtualNodeTlsValidationContextPtrOutput() VirtualNodeTlsValidationContextPtrOutput {
	return i.ToVirtualNodeTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextArgs) ToVirtualNodeTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextOutput).ToVirtualNodeTlsValidationContextPtrOutputWithContext(ctx)
}

// VirtualNodeTlsValidationContextPtrInput is an input type that accepts VirtualNodeTlsValidationContextArgs, VirtualNodeTlsValidationContextPtr and VirtualNodeTlsValidationContextPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextPtrInput` via:
//
//          VirtualNodeTlsValidationContextArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTlsValidationContextPtrInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextPtrOutput() VirtualNodeTlsValidationContextPtrOutput
	ToVirtualNodeTlsValidationContextPtrOutputWithContext(context.Context) VirtualNodeTlsValidationContextPtrOutput
}

type virtualNodeTlsValidationContextPtrType VirtualNodeTlsValidationContextArgs

func VirtualNodeTlsValidationContextPtr(v *VirtualNodeTlsValidationContextArgs) VirtualNodeTlsValidationContextPtrInput {
	return (*virtualNodeTlsValidationContextPtrType)(v)
}

func (*virtualNodeTlsValidationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContext)(nil)).Elem()
}

func (i *virtualNodeTlsValidationContextPtrType) ToVirtualNodeTlsValidationContextPtrOutput() VirtualNodeTlsValidationContextPtrOutput {
	return i.ToVirtualNodeTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTlsValidationContextPtrType) ToVirtualNodeTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextPtrOutput)
}

type VirtualNodeTlsValidationContextOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContext)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextOutput) ToVirtualNodeTlsValidationContextOutput() VirtualNodeTlsValidationContextOutput {
	return o
}

func (o VirtualNodeTlsValidationContextOutput) ToVirtualNodeTlsValidationContextOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextOutput {
	return o
}

func (o VirtualNodeTlsValidationContextOutput) ToVirtualNodeTlsValidationContextPtrOutput() VirtualNodeTlsValidationContextPtrOutput {
	return o.ToVirtualNodeTlsValidationContextPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTlsValidationContextOutput) ToVirtualNodeTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTlsValidationContext) *VirtualNodeTlsValidationContext {
		return &v
	}).(VirtualNodeTlsValidationContextPtrOutput)
}

func (o VirtualNodeTlsValidationContextOutput) SubjectAlternativeNames() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContext) *VirtualNodeSubjectAlternativeNames {
		return v.SubjectAlternativeNames
	}).(VirtualNodeSubjectAlternativeNamesPtrOutput)
}

func (o VirtualNodeTlsValidationContextOutput) Trust() VirtualNodeTlsValidationContextTrustOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContext) VirtualNodeTlsValidationContextTrust { return v.Trust }).(VirtualNodeTlsValidationContextTrustOutput)
}

type VirtualNodeTlsValidationContextPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContext)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextPtrOutput) ToVirtualNodeTlsValidationContextPtrOutput() VirtualNodeTlsValidationContextPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextPtrOutput) ToVirtualNodeTlsValidationContextPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextPtrOutput) Elem() VirtualNodeTlsValidationContextOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContext) VirtualNodeTlsValidationContext {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTlsValidationContext
		return ret
	}).(VirtualNodeTlsValidationContextOutput)
}

func (o VirtualNodeTlsValidationContextPtrOutput) SubjectAlternativeNames() VirtualNodeSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContext) *VirtualNodeSubjectAlternativeNames {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(VirtualNodeSubjectAlternativeNamesPtrOutput)
}

func (o VirtualNodeTlsValidationContextPtrOutput) Trust() VirtualNodeTlsValidationContextTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContext) *VirtualNodeTlsValidationContextTrust {
		if v == nil {
			return nil
		}
		return &v.Trust
	}).(VirtualNodeTlsValidationContextTrustPtrOutput)
}

type VirtualNodeTlsValidationContextAcmTrust struct {
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// VirtualNodeTlsValidationContextAcmTrustInput is an input type that accepts VirtualNodeTlsValidationContextAcmTrustArgs and VirtualNodeTlsValidationContextAcmTrustOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextAcmTrustInput` via:
//
//          VirtualNodeTlsValidationContextAcmTrustArgs{...}
type VirtualNodeTlsValidationContextAcmTrustInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextAcmTrustOutput() VirtualNodeTlsValidationContextAcmTrustOutput
	ToVirtualNodeTlsValidationContextAcmTrustOutputWithContext(context.Context) VirtualNodeTlsValidationContextAcmTrustOutput
}

type VirtualNodeTlsValidationContextAcmTrustArgs struct {
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (VirtualNodeTlsValidationContextAcmTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextAcmTrust)(nil)).Elem()
}

func (i VirtualNodeTlsValidationContextAcmTrustArgs) ToVirtualNodeTlsValidationContextAcmTrustOutput() VirtualNodeTlsValidationContextAcmTrustOutput {
	return i.ToVirtualNodeTlsValidationContextAcmTrustOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextAcmTrustArgs) ToVirtualNodeTlsValidationContextAcmTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextAcmTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextAcmTrustOutput)
}

func (i VirtualNodeTlsValidationContextAcmTrustArgs) ToVirtualNodeTlsValidationContextAcmTrustPtrOutput() VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextAcmTrustArgs) ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextAcmTrustOutput).ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(ctx)
}

// VirtualNodeTlsValidationContextAcmTrustPtrInput is an input type that accepts VirtualNodeTlsValidationContextAcmTrustArgs, VirtualNodeTlsValidationContextAcmTrustPtr and VirtualNodeTlsValidationContextAcmTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextAcmTrustPtrInput` via:
//
//          VirtualNodeTlsValidationContextAcmTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTlsValidationContextAcmTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextAcmTrustPtrOutput() VirtualNodeTlsValidationContextAcmTrustPtrOutput
	ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(context.Context) VirtualNodeTlsValidationContextAcmTrustPtrOutput
}

type virtualNodeTlsValidationContextAcmTrustPtrType VirtualNodeTlsValidationContextAcmTrustArgs

func VirtualNodeTlsValidationContextAcmTrustPtr(v *VirtualNodeTlsValidationContextAcmTrustArgs) VirtualNodeTlsValidationContextAcmTrustPtrInput {
	return (*virtualNodeTlsValidationContextAcmTrustPtrType)(v)
}

func (*virtualNodeTlsValidationContextAcmTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextAcmTrust)(nil)).Elem()
}

func (i *virtualNodeTlsValidationContextAcmTrustPtrType) ToVirtualNodeTlsValidationContextAcmTrustPtrOutput() VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTlsValidationContextAcmTrustPtrType) ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextAcmTrustPtrOutput)
}

type VirtualNodeTlsValidationContextAcmTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextAcmTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextAcmTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextAcmTrustOutput) ToVirtualNodeTlsValidationContextAcmTrustOutput() VirtualNodeTlsValidationContextAcmTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextAcmTrustOutput) ToVirtualNodeTlsValidationContextAcmTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextAcmTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextAcmTrustOutput) ToVirtualNodeTlsValidationContextAcmTrustPtrOutput() VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return o.ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTlsValidationContextAcmTrustOutput) ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTlsValidationContextAcmTrust) *VirtualNodeTlsValidationContextAcmTrust {
		return &v
	}).(VirtualNodeTlsValidationContextAcmTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextAcmTrustOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContextAcmTrust) []string { return v.CertificateAuthorityArns }).(pulumi.StringArrayOutput)
}

type VirtualNodeTlsValidationContextAcmTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextAcmTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextAcmTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextAcmTrustPtrOutput) ToVirtualNodeTlsValidationContextAcmTrustPtrOutput() VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextAcmTrustPtrOutput) ToVirtualNodeTlsValidationContextAcmTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextAcmTrustPtrOutput) Elem() VirtualNodeTlsValidationContextAcmTrustOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextAcmTrust) VirtualNodeTlsValidationContextAcmTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTlsValidationContextAcmTrust
		return ret
	}).(VirtualNodeTlsValidationContextAcmTrustOutput)
}

func (o VirtualNodeTlsValidationContextAcmTrustPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextAcmTrust) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type VirtualNodeTlsValidationContextFileTrust struct {
	CertificateChain string `pulumi:"certificateChain"`
}

// VirtualNodeTlsValidationContextFileTrustInput is an input type that accepts VirtualNodeTlsValidationContextFileTrustArgs and VirtualNodeTlsValidationContextFileTrustOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextFileTrustInput` via:
//
//          VirtualNodeTlsValidationContextFileTrustArgs{...}
type VirtualNodeTlsValidationContextFileTrustInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextFileTrustOutput() VirtualNodeTlsValidationContextFileTrustOutput
	ToVirtualNodeTlsValidationContextFileTrustOutputWithContext(context.Context) VirtualNodeTlsValidationContextFileTrustOutput
}

type VirtualNodeTlsValidationContextFileTrustArgs struct {
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (VirtualNodeTlsValidationContextFileTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextFileTrust)(nil)).Elem()
}

func (i VirtualNodeTlsValidationContextFileTrustArgs) ToVirtualNodeTlsValidationContextFileTrustOutput() VirtualNodeTlsValidationContextFileTrustOutput {
	return i.ToVirtualNodeTlsValidationContextFileTrustOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextFileTrustArgs) ToVirtualNodeTlsValidationContextFileTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextFileTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextFileTrustOutput)
}

func (i VirtualNodeTlsValidationContextFileTrustArgs) ToVirtualNodeTlsValidationContextFileTrustPtrOutput() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextFileTrustArgs) ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextFileTrustOutput).ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(ctx)
}

// VirtualNodeTlsValidationContextFileTrustPtrInput is an input type that accepts VirtualNodeTlsValidationContextFileTrustArgs, VirtualNodeTlsValidationContextFileTrustPtr and VirtualNodeTlsValidationContextFileTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextFileTrustPtrInput` via:
//
//          VirtualNodeTlsValidationContextFileTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTlsValidationContextFileTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextFileTrustPtrOutput() VirtualNodeTlsValidationContextFileTrustPtrOutput
	ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(context.Context) VirtualNodeTlsValidationContextFileTrustPtrOutput
}

type virtualNodeTlsValidationContextFileTrustPtrType VirtualNodeTlsValidationContextFileTrustArgs

func VirtualNodeTlsValidationContextFileTrustPtr(v *VirtualNodeTlsValidationContextFileTrustArgs) VirtualNodeTlsValidationContextFileTrustPtrInput {
	return (*virtualNodeTlsValidationContextFileTrustPtrType)(v)
}

func (*virtualNodeTlsValidationContextFileTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextFileTrust)(nil)).Elem()
}

func (i *virtualNodeTlsValidationContextFileTrustPtrType) ToVirtualNodeTlsValidationContextFileTrustPtrOutput() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTlsValidationContextFileTrustPtrType) ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextFileTrustPtrOutput)
}

type VirtualNodeTlsValidationContextFileTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextFileTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextFileTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextFileTrustOutput) ToVirtualNodeTlsValidationContextFileTrustOutput() VirtualNodeTlsValidationContextFileTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextFileTrustOutput) ToVirtualNodeTlsValidationContextFileTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextFileTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextFileTrustOutput) ToVirtualNodeTlsValidationContextFileTrustPtrOutput() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o.ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTlsValidationContextFileTrustOutput) ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTlsValidationContextFileTrust) *VirtualNodeTlsValidationContextFileTrust {
		return &v
	}).(VirtualNodeTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextFileTrustOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContextFileTrust) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type VirtualNodeTlsValidationContextFileTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextFileTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextFileTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextFileTrustPtrOutput) ToVirtualNodeTlsValidationContextFileTrustPtrOutput() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextFileTrustPtrOutput) ToVirtualNodeTlsValidationContextFileTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextFileTrustPtrOutput) Elem() VirtualNodeTlsValidationContextFileTrustOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextFileTrust) VirtualNodeTlsValidationContextFileTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTlsValidationContextFileTrust
		return ret
	}).(VirtualNodeTlsValidationContextFileTrustOutput)
}

func (o VirtualNodeTlsValidationContextFileTrustPtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextFileTrust) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeTlsValidationContextSdsTrust struct {
	SecretName string `pulumi:"secretName"`
}

// VirtualNodeTlsValidationContextSdsTrustInput is an input type that accepts VirtualNodeTlsValidationContextSdsTrustArgs and VirtualNodeTlsValidationContextSdsTrustOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextSdsTrustInput` via:
//
//          VirtualNodeTlsValidationContextSdsTrustArgs{...}
type VirtualNodeTlsValidationContextSdsTrustInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextSdsTrustOutput() VirtualNodeTlsValidationContextSdsTrustOutput
	ToVirtualNodeTlsValidationContextSdsTrustOutputWithContext(context.Context) VirtualNodeTlsValidationContextSdsTrustOutput
}

type VirtualNodeTlsValidationContextSdsTrustArgs struct {
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (VirtualNodeTlsValidationContextSdsTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextSdsTrust)(nil)).Elem()
}

func (i VirtualNodeTlsValidationContextSdsTrustArgs) ToVirtualNodeTlsValidationContextSdsTrustOutput() VirtualNodeTlsValidationContextSdsTrustOutput {
	return i.ToVirtualNodeTlsValidationContextSdsTrustOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextSdsTrustArgs) ToVirtualNodeTlsValidationContextSdsTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextSdsTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextSdsTrustOutput)
}

func (i VirtualNodeTlsValidationContextSdsTrustArgs) ToVirtualNodeTlsValidationContextSdsTrustPtrOutput() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextSdsTrustArgs) ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextSdsTrustOutput).ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(ctx)
}

// VirtualNodeTlsValidationContextSdsTrustPtrInput is an input type that accepts VirtualNodeTlsValidationContextSdsTrustArgs, VirtualNodeTlsValidationContextSdsTrustPtr and VirtualNodeTlsValidationContextSdsTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextSdsTrustPtrInput` via:
//
//          VirtualNodeTlsValidationContextSdsTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTlsValidationContextSdsTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextSdsTrustPtrOutput() VirtualNodeTlsValidationContextSdsTrustPtrOutput
	ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(context.Context) VirtualNodeTlsValidationContextSdsTrustPtrOutput
}

type virtualNodeTlsValidationContextSdsTrustPtrType VirtualNodeTlsValidationContextSdsTrustArgs

func VirtualNodeTlsValidationContextSdsTrustPtr(v *VirtualNodeTlsValidationContextSdsTrustArgs) VirtualNodeTlsValidationContextSdsTrustPtrInput {
	return (*virtualNodeTlsValidationContextSdsTrustPtrType)(v)
}

func (*virtualNodeTlsValidationContextSdsTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextSdsTrust)(nil)).Elem()
}

func (i *virtualNodeTlsValidationContextSdsTrustPtrType) ToVirtualNodeTlsValidationContextSdsTrustPtrOutput() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTlsValidationContextSdsTrustPtrType) ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextSdsTrustPtrOutput)
}

type VirtualNodeTlsValidationContextSdsTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextSdsTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextSdsTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextSdsTrustOutput) ToVirtualNodeTlsValidationContextSdsTrustOutput() VirtualNodeTlsValidationContextSdsTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextSdsTrustOutput) ToVirtualNodeTlsValidationContextSdsTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextSdsTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextSdsTrustOutput) ToVirtualNodeTlsValidationContextSdsTrustPtrOutput() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o.ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTlsValidationContextSdsTrustOutput) ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTlsValidationContextSdsTrust) *VirtualNodeTlsValidationContextSdsTrust {
		return &v
	}).(VirtualNodeTlsValidationContextSdsTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextSdsTrustOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContextSdsTrust) string { return v.SecretName }).(pulumi.StringOutput)
}

type VirtualNodeTlsValidationContextSdsTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextSdsTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextSdsTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextSdsTrustPtrOutput) ToVirtualNodeTlsValidationContextSdsTrustPtrOutput() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextSdsTrustPtrOutput) ToVirtualNodeTlsValidationContextSdsTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextSdsTrustPtrOutput) Elem() VirtualNodeTlsValidationContextSdsTrustOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextSdsTrust) VirtualNodeTlsValidationContextSdsTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTlsValidationContextSdsTrust
		return ret
	}).(VirtualNodeTlsValidationContextSdsTrustOutput)
}

func (o VirtualNodeTlsValidationContextSdsTrustPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextSdsTrust) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type VirtualNodeTlsValidationContextTrust struct {
	ACM  *VirtualNodeTlsValidationContextAcmTrust  `pulumi:"aCM"`
	File *VirtualNodeTlsValidationContextFileTrust `pulumi:"file"`
	SDS  *VirtualNodeTlsValidationContextSdsTrust  `pulumi:"sDS"`
}

// VirtualNodeTlsValidationContextTrustInput is an input type that accepts VirtualNodeTlsValidationContextTrustArgs and VirtualNodeTlsValidationContextTrustOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextTrustInput` via:
//
//          VirtualNodeTlsValidationContextTrustArgs{...}
type VirtualNodeTlsValidationContextTrustInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextTrustOutput() VirtualNodeTlsValidationContextTrustOutput
	ToVirtualNodeTlsValidationContextTrustOutputWithContext(context.Context) VirtualNodeTlsValidationContextTrustOutput
}

type VirtualNodeTlsValidationContextTrustArgs struct {
	ACM  VirtualNodeTlsValidationContextAcmTrustPtrInput  `pulumi:"aCM"`
	File VirtualNodeTlsValidationContextFileTrustPtrInput `pulumi:"file"`
	SDS  VirtualNodeTlsValidationContextSdsTrustPtrInput  `pulumi:"sDS"`
}

func (VirtualNodeTlsValidationContextTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextTrust)(nil)).Elem()
}

func (i VirtualNodeTlsValidationContextTrustArgs) ToVirtualNodeTlsValidationContextTrustOutput() VirtualNodeTlsValidationContextTrustOutput {
	return i.ToVirtualNodeTlsValidationContextTrustOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextTrustArgs) ToVirtualNodeTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextTrustOutput)
}

func (i VirtualNodeTlsValidationContextTrustArgs) ToVirtualNodeTlsValidationContextTrustPtrOutput() VirtualNodeTlsValidationContextTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i VirtualNodeTlsValidationContextTrustArgs) ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextTrustOutput).ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(ctx)
}

// VirtualNodeTlsValidationContextTrustPtrInput is an input type that accepts VirtualNodeTlsValidationContextTrustArgs, VirtualNodeTlsValidationContextTrustPtr and VirtualNodeTlsValidationContextTrustPtrOutput values.
// You can construct a concrete instance of `VirtualNodeTlsValidationContextTrustPtrInput` via:
//
//          VirtualNodeTlsValidationContextTrustArgs{...}
//
//  or:
//
//          nil
type VirtualNodeTlsValidationContextTrustPtrInput interface {
	pulumi.Input

	ToVirtualNodeTlsValidationContextTrustPtrOutput() VirtualNodeTlsValidationContextTrustPtrOutput
	ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(context.Context) VirtualNodeTlsValidationContextTrustPtrOutput
}

type virtualNodeTlsValidationContextTrustPtrType VirtualNodeTlsValidationContextTrustArgs

func VirtualNodeTlsValidationContextTrustPtr(v *VirtualNodeTlsValidationContextTrustArgs) VirtualNodeTlsValidationContextTrustPtrInput {
	return (*virtualNodeTlsValidationContextTrustPtrType)(v)
}

func (*virtualNodeTlsValidationContextTrustPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextTrust)(nil)).Elem()
}

func (i *virtualNodeTlsValidationContextTrustPtrType) ToVirtualNodeTlsValidationContextTrustPtrOutput() VirtualNodeTlsValidationContextTrustPtrOutput {
	return i.ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (i *virtualNodeTlsValidationContextTrustPtrType) ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextTrustPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeTlsValidationContextTrustPtrOutput)
}

type VirtualNodeTlsValidationContextTrustOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextTrustOutput) ToVirtualNodeTlsValidationContextTrustOutput() VirtualNodeTlsValidationContextTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextTrustOutput) ToVirtualNodeTlsValidationContextTrustOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextTrustOutput {
	return o
}

func (o VirtualNodeTlsValidationContextTrustOutput) ToVirtualNodeTlsValidationContextTrustPtrOutput() VirtualNodeTlsValidationContextTrustPtrOutput {
	return o.ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(context.Background())
}

func (o VirtualNodeTlsValidationContextTrustOutput) ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextTrustPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextTrust {
		return &v
	}).(VirtualNodeTlsValidationContextTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextTrustOutput) ACM() VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextAcmTrust { return v.ACM }).(VirtualNodeTlsValidationContextAcmTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextTrustOutput) File() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextFileTrust { return v.File }).(VirtualNodeTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextTrustOutput) SDS() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextSdsTrust { return v.SDS }).(VirtualNodeTlsValidationContextSdsTrustPtrOutput)
}

type VirtualNodeTlsValidationContextTrustPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeTlsValidationContextTrustPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeTlsValidationContextTrust)(nil)).Elem()
}

func (o VirtualNodeTlsValidationContextTrustPtrOutput) ToVirtualNodeTlsValidationContextTrustPtrOutput() VirtualNodeTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextTrustPtrOutput) ToVirtualNodeTlsValidationContextTrustPtrOutputWithContext(ctx context.Context) VirtualNodeTlsValidationContextTrustPtrOutput {
	return o
}

func (o VirtualNodeTlsValidationContextTrustPtrOutput) Elem() VirtualNodeTlsValidationContextTrustOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextTrust) VirtualNodeTlsValidationContextTrust {
		if v != nil {
			return *v
		}
		var ret VirtualNodeTlsValidationContextTrust
		return ret
	}).(VirtualNodeTlsValidationContextTrustOutput)
}

func (o VirtualNodeTlsValidationContextTrustPtrOutput) ACM() VirtualNodeTlsValidationContextAcmTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextAcmTrust {
		if v == nil {
			return nil
		}
		return v.ACM
	}).(VirtualNodeTlsValidationContextAcmTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextTrustPtrOutput) File() VirtualNodeTlsValidationContextFileTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextFileTrust {
		if v == nil {
			return nil
		}
		return v.File
	}).(VirtualNodeTlsValidationContextFileTrustPtrOutput)
}

func (o VirtualNodeTlsValidationContextTrustPtrOutput) SDS() VirtualNodeTlsValidationContextSdsTrustPtrOutput {
	return o.ApplyT(func(v *VirtualNodeTlsValidationContextTrust) *VirtualNodeTlsValidationContextSdsTrust {
		if v == nil {
			return nil
		}
		return v.SDS
	}).(VirtualNodeTlsValidationContextSdsTrustPtrOutput)
}

type VirtualNodeVirtualServiceBackend struct {
	ClientPolicy       *VirtualNodeClientPolicy `pulumi:"clientPolicy"`
	VirtualServiceName string                   `pulumi:"virtualServiceName"`
}

// VirtualNodeVirtualServiceBackendInput is an input type that accepts VirtualNodeVirtualServiceBackendArgs and VirtualNodeVirtualServiceBackendOutput values.
// You can construct a concrete instance of `VirtualNodeVirtualServiceBackendInput` via:
//
//          VirtualNodeVirtualServiceBackendArgs{...}
type VirtualNodeVirtualServiceBackendInput interface {
	pulumi.Input

	ToVirtualNodeVirtualServiceBackendOutput() VirtualNodeVirtualServiceBackendOutput
	ToVirtualNodeVirtualServiceBackendOutputWithContext(context.Context) VirtualNodeVirtualServiceBackendOutput
}

type VirtualNodeVirtualServiceBackendArgs struct {
	ClientPolicy       VirtualNodeClientPolicyPtrInput `pulumi:"clientPolicy"`
	VirtualServiceName pulumi.StringInput              `pulumi:"virtualServiceName"`
}

func (VirtualNodeVirtualServiceBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeVirtualServiceBackend)(nil)).Elem()
}

func (i VirtualNodeVirtualServiceBackendArgs) ToVirtualNodeVirtualServiceBackendOutput() VirtualNodeVirtualServiceBackendOutput {
	return i.ToVirtualNodeVirtualServiceBackendOutputWithContext(context.Background())
}

func (i VirtualNodeVirtualServiceBackendArgs) ToVirtualNodeVirtualServiceBackendOutputWithContext(ctx context.Context) VirtualNodeVirtualServiceBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeVirtualServiceBackendOutput)
}

func (i VirtualNodeVirtualServiceBackendArgs) ToVirtualNodeVirtualServiceBackendPtrOutput() VirtualNodeVirtualServiceBackendPtrOutput {
	return i.ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(context.Background())
}

func (i VirtualNodeVirtualServiceBackendArgs) ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(ctx context.Context) VirtualNodeVirtualServiceBackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeVirtualServiceBackendOutput).ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(ctx)
}

// VirtualNodeVirtualServiceBackendPtrInput is an input type that accepts VirtualNodeVirtualServiceBackendArgs, VirtualNodeVirtualServiceBackendPtr and VirtualNodeVirtualServiceBackendPtrOutput values.
// You can construct a concrete instance of `VirtualNodeVirtualServiceBackendPtrInput` via:
//
//          VirtualNodeVirtualServiceBackendArgs{...}
//
//  or:
//
//          nil
type VirtualNodeVirtualServiceBackendPtrInput interface {
	pulumi.Input

	ToVirtualNodeVirtualServiceBackendPtrOutput() VirtualNodeVirtualServiceBackendPtrOutput
	ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(context.Context) VirtualNodeVirtualServiceBackendPtrOutput
}

type virtualNodeVirtualServiceBackendPtrType VirtualNodeVirtualServiceBackendArgs

func VirtualNodeVirtualServiceBackendPtr(v *VirtualNodeVirtualServiceBackendArgs) VirtualNodeVirtualServiceBackendPtrInput {
	return (*virtualNodeVirtualServiceBackendPtrType)(v)
}

func (*virtualNodeVirtualServiceBackendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeVirtualServiceBackend)(nil)).Elem()
}

func (i *virtualNodeVirtualServiceBackendPtrType) ToVirtualNodeVirtualServiceBackendPtrOutput() VirtualNodeVirtualServiceBackendPtrOutput {
	return i.ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(context.Background())
}

func (i *virtualNodeVirtualServiceBackendPtrType) ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(ctx context.Context) VirtualNodeVirtualServiceBackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeVirtualServiceBackendPtrOutput)
}

type VirtualNodeVirtualServiceBackendOutput struct{ *pulumi.OutputState }

func (VirtualNodeVirtualServiceBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeVirtualServiceBackend)(nil)).Elem()
}

func (o VirtualNodeVirtualServiceBackendOutput) ToVirtualNodeVirtualServiceBackendOutput() VirtualNodeVirtualServiceBackendOutput {
	return o
}

func (o VirtualNodeVirtualServiceBackendOutput) ToVirtualNodeVirtualServiceBackendOutputWithContext(ctx context.Context) VirtualNodeVirtualServiceBackendOutput {
	return o
}

func (o VirtualNodeVirtualServiceBackendOutput) ToVirtualNodeVirtualServiceBackendPtrOutput() VirtualNodeVirtualServiceBackendPtrOutput {
	return o.ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(context.Background())
}

func (o VirtualNodeVirtualServiceBackendOutput) ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(ctx context.Context) VirtualNodeVirtualServiceBackendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNodeVirtualServiceBackend) *VirtualNodeVirtualServiceBackend {
		return &v
	}).(VirtualNodeVirtualServiceBackendPtrOutput)
}

func (o VirtualNodeVirtualServiceBackendOutput) ClientPolicy() VirtualNodeClientPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNodeVirtualServiceBackend) *VirtualNodeClientPolicy { return v.ClientPolicy }).(VirtualNodeClientPolicyPtrOutput)
}

func (o VirtualNodeVirtualServiceBackendOutput) VirtualServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNodeVirtualServiceBackend) string { return v.VirtualServiceName }).(pulumi.StringOutput)
}

type VirtualNodeVirtualServiceBackendPtrOutput struct{ *pulumi.OutputState }

func (VirtualNodeVirtualServiceBackendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeVirtualServiceBackend)(nil)).Elem()
}

func (o VirtualNodeVirtualServiceBackendPtrOutput) ToVirtualNodeVirtualServiceBackendPtrOutput() VirtualNodeVirtualServiceBackendPtrOutput {
	return o
}

func (o VirtualNodeVirtualServiceBackendPtrOutput) ToVirtualNodeVirtualServiceBackendPtrOutputWithContext(ctx context.Context) VirtualNodeVirtualServiceBackendPtrOutput {
	return o
}

func (o VirtualNodeVirtualServiceBackendPtrOutput) Elem() VirtualNodeVirtualServiceBackendOutput {
	return o.ApplyT(func(v *VirtualNodeVirtualServiceBackend) VirtualNodeVirtualServiceBackend {
		if v != nil {
			return *v
		}
		var ret VirtualNodeVirtualServiceBackend
		return ret
	}).(VirtualNodeVirtualServiceBackendOutput)
}

func (o VirtualNodeVirtualServiceBackendPtrOutput) ClientPolicy() VirtualNodeClientPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualNodeVirtualServiceBackend) *VirtualNodeClientPolicy {
		if v == nil {
			return nil
		}
		return v.ClientPolicy
	}).(VirtualNodeClientPolicyPtrOutput)
}

func (o VirtualNodeVirtualServiceBackendPtrOutput) VirtualServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNodeVirtualServiceBackend) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualServiceName
	}).(pulumi.StringPtrOutput)
}

type VirtualRouterListener struct {
	PortMapping VirtualRouterPortMapping `pulumi:"portMapping"`
}

// VirtualRouterListenerInput is an input type that accepts VirtualRouterListenerArgs and VirtualRouterListenerOutput values.
// You can construct a concrete instance of `VirtualRouterListenerInput` via:
//
//          VirtualRouterListenerArgs{...}
type VirtualRouterListenerInput interface {
	pulumi.Input

	ToVirtualRouterListenerOutput() VirtualRouterListenerOutput
	ToVirtualRouterListenerOutputWithContext(context.Context) VirtualRouterListenerOutput
}

type VirtualRouterListenerArgs struct {
	PortMapping VirtualRouterPortMappingInput `pulumi:"portMapping"`
}

func (VirtualRouterListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterListener)(nil)).Elem()
}

func (i VirtualRouterListenerArgs) ToVirtualRouterListenerOutput() VirtualRouterListenerOutput {
	return i.ToVirtualRouterListenerOutputWithContext(context.Background())
}

func (i VirtualRouterListenerArgs) ToVirtualRouterListenerOutputWithContext(ctx context.Context) VirtualRouterListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterListenerOutput)
}

// VirtualRouterListenerArrayInput is an input type that accepts VirtualRouterListenerArray and VirtualRouterListenerArrayOutput values.
// You can construct a concrete instance of `VirtualRouterListenerArrayInput` via:
//
//          VirtualRouterListenerArray{ VirtualRouterListenerArgs{...} }
type VirtualRouterListenerArrayInput interface {
	pulumi.Input

	ToVirtualRouterListenerArrayOutput() VirtualRouterListenerArrayOutput
	ToVirtualRouterListenerArrayOutputWithContext(context.Context) VirtualRouterListenerArrayOutput
}

type VirtualRouterListenerArray []VirtualRouterListenerInput

func (VirtualRouterListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualRouterListener)(nil)).Elem()
}

func (i VirtualRouterListenerArray) ToVirtualRouterListenerArrayOutput() VirtualRouterListenerArrayOutput {
	return i.ToVirtualRouterListenerArrayOutputWithContext(context.Background())
}

func (i VirtualRouterListenerArray) ToVirtualRouterListenerArrayOutputWithContext(ctx context.Context) VirtualRouterListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterListenerArrayOutput)
}

type VirtualRouterListenerOutput struct{ *pulumi.OutputState }

func (VirtualRouterListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterListener)(nil)).Elem()
}

func (o VirtualRouterListenerOutput) ToVirtualRouterListenerOutput() VirtualRouterListenerOutput {
	return o
}

func (o VirtualRouterListenerOutput) ToVirtualRouterListenerOutputWithContext(ctx context.Context) VirtualRouterListenerOutput {
	return o
}

func (o VirtualRouterListenerOutput) PortMapping() VirtualRouterPortMappingOutput {
	return o.ApplyT(func(v VirtualRouterListener) VirtualRouterPortMapping { return v.PortMapping }).(VirtualRouterPortMappingOutput)
}

type VirtualRouterListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualRouterListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualRouterListener)(nil)).Elem()
}

func (o VirtualRouterListenerArrayOutput) ToVirtualRouterListenerArrayOutput() VirtualRouterListenerArrayOutput {
	return o
}

func (o VirtualRouterListenerArrayOutput) ToVirtualRouterListenerArrayOutputWithContext(ctx context.Context) VirtualRouterListenerArrayOutput {
	return o
}

func (o VirtualRouterListenerArrayOutput) Index(i pulumi.IntInput) VirtualRouterListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualRouterListener {
		return vs[0].([]VirtualRouterListener)[vs[1].(int)]
	}).(VirtualRouterListenerOutput)
}

type VirtualRouterPortMapping struct {
	Port     int    `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

// VirtualRouterPortMappingInput is an input type that accepts VirtualRouterPortMappingArgs and VirtualRouterPortMappingOutput values.
// You can construct a concrete instance of `VirtualRouterPortMappingInput` via:
//
//          VirtualRouterPortMappingArgs{...}
type VirtualRouterPortMappingInput interface {
	pulumi.Input

	ToVirtualRouterPortMappingOutput() VirtualRouterPortMappingOutput
	ToVirtualRouterPortMappingOutputWithContext(context.Context) VirtualRouterPortMappingOutput
}

type VirtualRouterPortMappingArgs struct {
	Port     pulumi.IntInput    `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualRouterPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterPortMapping)(nil)).Elem()
}

func (i VirtualRouterPortMappingArgs) ToVirtualRouterPortMappingOutput() VirtualRouterPortMappingOutput {
	return i.ToVirtualRouterPortMappingOutputWithContext(context.Background())
}

func (i VirtualRouterPortMappingArgs) ToVirtualRouterPortMappingOutputWithContext(ctx context.Context) VirtualRouterPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterPortMappingOutput)
}

type VirtualRouterPortMappingOutput struct{ *pulumi.OutputState }

func (VirtualRouterPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterPortMapping)(nil)).Elem()
}

func (o VirtualRouterPortMappingOutput) ToVirtualRouterPortMappingOutput() VirtualRouterPortMappingOutput {
	return o
}

func (o VirtualRouterPortMappingOutput) ToVirtualRouterPortMappingOutputWithContext(ctx context.Context) VirtualRouterPortMappingOutput {
	return o
}

func (o VirtualRouterPortMappingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualRouterPortMapping) int { return v.Port }).(pulumi.IntOutput)
}

func (o VirtualRouterPortMappingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualRouterPortMapping) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualRouterSpec struct {
	Listeners []VirtualRouterListener `pulumi:"listeners"`
}

// VirtualRouterSpecInput is an input type that accepts VirtualRouterSpecArgs and VirtualRouterSpecOutput values.
// You can construct a concrete instance of `VirtualRouterSpecInput` via:
//
//          VirtualRouterSpecArgs{...}
type VirtualRouterSpecInput interface {
	pulumi.Input

	ToVirtualRouterSpecOutput() VirtualRouterSpecOutput
	ToVirtualRouterSpecOutputWithContext(context.Context) VirtualRouterSpecOutput
}

type VirtualRouterSpecArgs struct {
	Listeners VirtualRouterListenerArrayInput `pulumi:"listeners"`
}

func (VirtualRouterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpec)(nil)).Elem()
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecOutput() VirtualRouterSpecOutput {
	return i.ToVirtualRouterSpecOutputWithContext(context.Background())
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecOutputWithContext(ctx context.Context) VirtualRouterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecOutput)
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return i.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (i VirtualRouterSpecArgs) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecOutput).ToVirtualRouterSpecPtrOutputWithContext(ctx)
}

// VirtualRouterSpecPtrInput is an input type that accepts VirtualRouterSpecArgs, VirtualRouterSpecPtr and VirtualRouterSpecPtrOutput values.
// You can construct a concrete instance of `VirtualRouterSpecPtrInput` via:
//
//          VirtualRouterSpecArgs{...}
//
//  or:
//
//          nil
type VirtualRouterSpecPtrInput interface {
	pulumi.Input

	ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput
	ToVirtualRouterSpecPtrOutputWithContext(context.Context) VirtualRouterSpecPtrOutput
}

type virtualRouterSpecPtrType VirtualRouterSpecArgs

func VirtualRouterSpecPtr(v *VirtualRouterSpecArgs) VirtualRouterSpecPtrInput {
	return (*virtualRouterSpecPtrType)(v)
}

func (*virtualRouterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpec)(nil)).Elem()
}

func (i *virtualRouterSpecPtrType) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return i.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (i *virtualRouterSpecPtrType) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterSpecPtrOutput)
}

type VirtualRouterSpecOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterSpec)(nil)).Elem()
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecOutput() VirtualRouterSpecOutput {
	return o
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecOutputWithContext(ctx context.Context) VirtualRouterSpecOutput {
	return o
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return o.ToVirtualRouterSpecPtrOutputWithContext(context.Background())
}

func (o VirtualRouterSpecOutput) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualRouterSpec) *VirtualRouterSpec {
		return &v
	}).(VirtualRouterSpecPtrOutput)
}

func (o VirtualRouterSpecOutput) Listeners() VirtualRouterListenerArrayOutput {
	return o.ApplyT(func(v VirtualRouterSpec) []VirtualRouterListener { return v.Listeners }).(VirtualRouterListenerArrayOutput)
}

type VirtualRouterSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualRouterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualRouterSpec)(nil)).Elem()
}

func (o VirtualRouterSpecPtrOutput) ToVirtualRouterSpecPtrOutput() VirtualRouterSpecPtrOutput {
	return o
}

func (o VirtualRouterSpecPtrOutput) ToVirtualRouterSpecPtrOutputWithContext(ctx context.Context) VirtualRouterSpecPtrOutput {
	return o
}

func (o VirtualRouterSpecPtrOutput) Elem() VirtualRouterSpecOutput {
	return o.ApplyT(func(v *VirtualRouterSpec) VirtualRouterSpec {
		if v != nil {
			return *v
		}
		var ret VirtualRouterSpec
		return ret
	}).(VirtualRouterSpecOutput)
}

func (o VirtualRouterSpecPtrOutput) Listeners() VirtualRouterListenerArrayOutput {
	return o.ApplyT(func(v *VirtualRouterSpec) []VirtualRouterListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(VirtualRouterListenerArrayOutput)
}

type VirtualRouterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VirtualRouterTagInput is an input type that accepts VirtualRouterTagArgs and VirtualRouterTagOutput values.
// You can construct a concrete instance of `VirtualRouterTagInput` via:
//
//          VirtualRouterTagArgs{...}
type VirtualRouterTagInput interface {
	pulumi.Input

	ToVirtualRouterTagOutput() VirtualRouterTagOutput
	ToVirtualRouterTagOutputWithContext(context.Context) VirtualRouterTagOutput
}

type VirtualRouterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualRouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterTag)(nil)).Elem()
}

func (i VirtualRouterTagArgs) ToVirtualRouterTagOutput() VirtualRouterTagOutput {
	return i.ToVirtualRouterTagOutputWithContext(context.Background())
}

func (i VirtualRouterTagArgs) ToVirtualRouterTagOutputWithContext(ctx context.Context) VirtualRouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterTagOutput)
}

// VirtualRouterTagArrayInput is an input type that accepts VirtualRouterTagArray and VirtualRouterTagArrayOutput values.
// You can construct a concrete instance of `VirtualRouterTagArrayInput` via:
//
//          VirtualRouterTagArray{ VirtualRouterTagArgs{...} }
type VirtualRouterTagArrayInput interface {
	pulumi.Input

	ToVirtualRouterTagArrayOutput() VirtualRouterTagArrayOutput
	ToVirtualRouterTagArrayOutputWithContext(context.Context) VirtualRouterTagArrayOutput
}

type VirtualRouterTagArray []VirtualRouterTagInput

func (VirtualRouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualRouterTag)(nil)).Elem()
}

func (i VirtualRouterTagArray) ToVirtualRouterTagArrayOutput() VirtualRouterTagArrayOutput {
	return i.ToVirtualRouterTagArrayOutputWithContext(context.Background())
}

func (i VirtualRouterTagArray) ToVirtualRouterTagArrayOutputWithContext(ctx context.Context) VirtualRouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualRouterTagArrayOutput)
}

type VirtualRouterTagOutput struct{ *pulumi.OutputState }

func (VirtualRouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualRouterTag)(nil)).Elem()
}

func (o VirtualRouterTagOutput) ToVirtualRouterTagOutput() VirtualRouterTagOutput {
	return o
}

func (o VirtualRouterTagOutput) ToVirtualRouterTagOutputWithContext(ctx context.Context) VirtualRouterTagOutput {
	return o
}

func (o VirtualRouterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualRouterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o VirtualRouterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualRouterTag) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualRouterTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualRouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualRouterTag)(nil)).Elem()
}

func (o VirtualRouterTagArrayOutput) ToVirtualRouterTagArrayOutput() VirtualRouterTagArrayOutput {
	return o
}

func (o VirtualRouterTagArrayOutput) ToVirtualRouterTagArrayOutputWithContext(ctx context.Context) VirtualRouterTagArrayOutput {
	return o
}

func (o VirtualRouterTagArrayOutput) Index(i pulumi.IntInput) VirtualRouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualRouterTag {
		return vs[0].([]VirtualRouterTag)[vs[1].(int)]
	}).(VirtualRouterTagOutput)
}

type VirtualServiceProvider struct {
	VirtualNode   *VirtualServiceVirtualNodeServiceProvider   `pulumi:"virtualNode"`
	VirtualRouter *VirtualServiceVirtualRouterServiceProvider `pulumi:"virtualRouter"`
}

// VirtualServiceProviderInput is an input type that accepts VirtualServiceProviderArgs and VirtualServiceProviderOutput values.
// You can construct a concrete instance of `VirtualServiceProviderInput` via:
//
//          VirtualServiceProviderArgs{...}
type VirtualServiceProviderInput interface {
	pulumi.Input

	ToVirtualServiceProviderOutput() VirtualServiceProviderOutput
	ToVirtualServiceProviderOutputWithContext(context.Context) VirtualServiceProviderOutput
}

type VirtualServiceProviderArgs struct {
	VirtualNode   VirtualServiceVirtualNodeServiceProviderPtrInput   `pulumi:"virtualNode"`
	VirtualRouter VirtualServiceVirtualRouterServiceProviderPtrInput `pulumi:"virtualRouter"`
}

func (VirtualServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceProvider)(nil)).Elem()
}

func (i VirtualServiceProviderArgs) ToVirtualServiceProviderOutput() VirtualServiceProviderOutput {
	return i.ToVirtualServiceProviderOutputWithContext(context.Background())
}

func (i VirtualServiceProviderArgs) ToVirtualServiceProviderOutputWithContext(ctx context.Context) VirtualServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceProviderOutput)
}

func (i VirtualServiceProviderArgs) ToVirtualServiceProviderPtrOutput() VirtualServiceProviderPtrOutput {
	return i.ToVirtualServiceProviderPtrOutputWithContext(context.Background())
}

func (i VirtualServiceProviderArgs) ToVirtualServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceProviderOutput).ToVirtualServiceProviderPtrOutputWithContext(ctx)
}

// VirtualServiceProviderPtrInput is an input type that accepts VirtualServiceProviderArgs, VirtualServiceProviderPtr and VirtualServiceProviderPtrOutput values.
// You can construct a concrete instance of `VirtualServiceProviderPtrInput` via:
//
//          VirtualServiceProviderArgs{...}
//
//  or:
//
//          nil
type VirtualServiceProviderPtrInput interface {
	pulumi.Input

	ToVirtualServiceProviderPtrOutput() VirtualServiceProviderPtrOutput
	ToVirtualServiceProviderPtrOutputWithContext(context.Context) VirtualServiceProviderPtrOutput
}

type virtualServiceProviderPtrType VirtualServiceProviderArgs

func VirtualServiceProviderPtr(v *VirtualServiceProviderArgs) VirtualServiceProviderPtrInput {
	return (*virtualServiceProviderPtrType)(v)
}

func (*virtualServiceProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceProvider)(nil)).Elem()
}

func (i *virtualServiceProviderPtrType) ToVirtualServiceProviderPtrOutput() VirtualServiceProviderPtrOutput {
	return i.ToVirtualServiceProviderPtrOutputWithContext(context.Background())
}

func (i *virtualServiceProviderPtrType) ToVirtualServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceProviderPtrOutput)
}

type VirtualServiceProviderOutput struct{ *pulumi.OutputState }

func (VirtualServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceProvider)(nil)).Elem()
}

func (o VirtualServiceProviderOutput) ToVirtualServiceProviderOutput() VirtualServiceProviderOutput {
	return o
}

func (o VirtualServiceProviderOutput) ToVirtualServiceProviderOutputWithContext(ctx context.Context) VirtualServiceProviderOutput {
	return o
}

func (o VirtualServiceProviderOutput) ToVirtualServiceProviderPtrOutput() VirtualServiceProviderPtrOutput {
	return o.ToVirtualServiceProviderPtrOutputWithContext(context.Background())
}

func (o VirtualServiceProviderOutput) ToVirtualServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceProvider) *VirtualServiceProvider {
		return &v
	}).(VirtualServiceProviderPtrOutput)
}

func (o VirtualServiceProviderOutput) VirtualNode() VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return o.ApplyT(func(v VirtualServiceProvider) *VirtualServiceVirtualNodeServiceProvider { return v.VirtualNode }).(VirtualServiceVirtualNodeServiceProviderPtrOutput)
}

func (o VirtualServiceProviderOutput) VirtualRouter() VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return o.ApplyT(func(v VirtualServiceProvider) *VirtualServiceVirtualRouterServiceProvider { return v.VirtualRouter }).(VirtualServiceVirtualRouterServiceProviderPtrOutput)
}

type VirtualServiceProviderPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceProvider)(nil)).Elem()
}

func (o VirtualServiceProviderPtrOutput) ToVirtualServiceProviderPtrOutput() VirtualServiceProviderPtrOutput {
	return o
}

func (o VirtualServiceProviderPtrOutput) ToVirtualServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceProviderPtrOutput {
	return o
}

func (o VirtualServiceProviderPtrOutput) Elem() VirtualServiceProviderOutput {
	return o.ApplyT(func(v *VirtualServiceProvider) VirtualServiceProvider {
		if v != nil {
			return *v
		}
		var ret VirtualServiceProvider
		return ret
	}).(VirtualServiceProviderOutput)
}

func (o VirtualServiceProviderPtrOutput) VirtualNode() VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return o.ApplyT(func(v *VirtualServiceProvider) *VirtualServiceVirtualNodeServiceProvider {
		if v == nil {
			return nil
		}
		return v.VirtualNode
	}).(VirtualServiceVirtualNodeServiceProviderPtrOutput)
}

func (o VirtualServiceProviderPtrOutput) VirtualRouter() VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return o.ApplyT(func(v *VirtualServiceProvider) *VirtualServiceVirtualRouterServiceProvider {
		if v == nil {
			return nil
		}
		return v.VirtualRouter
	}).(VirtualServiceVirtualRouterServiceProviderPtrOutput)
}

type VirtualServiceSpec struct {
	Provider *VirtualServiceProvider `pulumi:"provider"`
}

// VirtualServiceSpecInput is an input type that accepts VirtualServiceSpecArgs and VirtualServiceSpecOutput values.
// You can construct a concrete instance of `VirtualServiceSpecInput` via:
//
//          VirtualServiceSpecArgs{...}
type VirtualServiceSpecInput interface {
	pulumi.Input

	ToVirtualServiceSpecOutput() VirtualServiceSpecOutput
	ToVirtualServiceSpecOutputWithContext(context.Context) VirtualServiceSpecOutput
}

type VirtualServiceSpecArgs struct {
	Provider VirtualServiceProviderPtrInput `pulumi:"provider"`
}

func (VirtualServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return i.ToVirtualServiceSpecOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput)
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i VirtualServiceSpecArgs) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecOutput).ToVirtualServiceSpecPtrOutputWithContext(ctx)
}

// VirtualServiceSpecPtrInput is an input type that accepts VirtualServiceSpecArgs, VirtualServiceSpecPtr and VirtualServiceSpecPtrOutput values.
// You can construct a concrete instance of `VirtualServiceSpecPtrInput` via:
//
//          VirtualServiceSpecArgs{...}
//
//  or:
//
//          nil
type VirtualServiceSpecPtrInput interface {
	pulumi.Input

	ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput
	ToVirtualServiceSpecPtrOutputWithContext(context.Context) VirtualServiceSpecPtrOutput
}

type virtualServiceSpecPtrType VirtualServiceSpecArgs

func VirtualServiceSpecPtr(v *VirtualServiceSpecArgs) VirtualServiceSpecPtrInput {
	return (*virtualServiceSpecPtrType)(v)
}

func (*virtualServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return i.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (i *virtualServiceSpecPtrType) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceSpecPtrOutput)
}

type VirtualServiceSpecOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutput() VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecOutputWithContext(ctx context.Context) VirtualServiceSpecOutput {
	return o
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o.ToVirtualServiceSpecPtrOutputWithContext(context.Background())
}

func (o VirtualServiceSpecOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceSpec) *VirtualServiceSpec {
		return &v
	}).(VirtualServiceSpecPtrOutput)
}

func (o VirtualServiceSpecOutput) Provider() VirtualServiceProviderPtrOutput {
	return o.ApplyT(func(v VirtualServiceSpec) *VirtualServiceProvider { return v.Provider }).(VirtualServiceProviderPtrOutput)
}

type VirtualServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceSpec)(nil)).Elem()
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutput() VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) ToVirtualServiceSpecPtrOutputWithContext(ctx context.Context) VirtualServiceSpecPtrOutput {
	return o
}

func (o VirtualServiceSpecPtrOutput) Elem() VirtualServiceSpecOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) VirtualServiceSpec {
		if v != nil {
			return *v
		}
		var ret VirtualServiceSpec
		return ret
	}).(VirtualServiceSpecOutput)
}

func (o VirtualServiceSpecPtrOutput) Provider() VirtualServiceProviderPtrOutput {
	return o.ApplyT(func(v *VirtualServiceSpec) *VirtualServiceProvider {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(VirtualServiceProviderPtrOutput)
}

type VirtualServiceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// VirtualServiceTagInput is an input type that accepts VirtualServiceTagArgs and VirtualServiceTagOutput values.
// You can construct a concrete instance of `VirtualServiceTagInput` via:
//
//          VirtualServiceTagArgs{...}
type VirtualServiceTagInput interface {
	pulumi.Input

	ToVirtualServiceTagOutput() VirtualServiceTagOutput
	ToVirtualServiceTagOutputWithContext(context.Context) VirtualServiceTagOutput
}

type VirtualServiceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceTag)(nil)).Elem()
}

func (i VirtualServiceTagArgs) ToVirtualServiceTagOutput() VirtualServiceTagOutput {
	return i.ToVirtualServiceTagOutputWithContext(context.Background())
}

func (i VirtualServiceTagArgs) ToVirtualServiceTagOutputWithContext(ctx context.Context) VirtualServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceTagOutput)
}

// VirtualServiceTagArrayInput is an input type that accepts VirtualServiceTagArray and VirtualServiceTagArrayOutput values.
// You can construct a concrete instance of `VirtualServiceTagArrayInput` via:
//
//          VirtualServiceTagArray{ VirtualServiceTagArgs{...} }
type VirtualServiceTagArrayInput interface {
	pulumi.Input

	ToVirtualServiceTagArrayOutput() VirtualServiceTagArrayOutput
	ToVirtualServiceTagArrayOutputWithContext(context.Context) VirtualServiceTagArrayOutput
}

type VirtualServiceTagArray []VirtualServiceTagInput

func (VirtualServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceTag)(nil)).Elem()
}

func (i VirtualServiceTagArray) ToVirtualServiceTagArrayOutput() VirtualServiceTagArrayOutput {
	return i.ToVirtualServiceTagArrayOutputWithContext(context.Background())
}

func (i VirtualServiceTagArray) ToVirtualServiceTagArrayOutputWithContext(ctx context.Context) VirtualServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceTagArrayOutput)
}

type VirtualServiceTagOutput struct{ *pulumi.OutputState }

func (VirtualServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceTag)(nil)).Elem()
}

func (o VirtualServiceTagOutput) ToVirtualServiceTagOutput() VirtualServiceTagOutput {
	return o
}

func (o VirtualServiceTagOutput) ToVirtualServiceTagOutputWithContext(ctx context.Context) VirtualServiceTagOutput {
	return o
}

func (o VirtualServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o VirtualServiceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceTag) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualServiceTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualServiceTag)(nil)).Elem()
}

func (o VirtualServiceTagArrayOutput) ToVirtualServiceTagArrayOutput() VirtualServiceTagArrayOutput {
	return o
}

func (o VirtualServiceTagArrayOutput) ToVirtualServiceTagArrayOutputWithContext(ctx context.Context) VirtualServiceTagArrayOutput {
	return o
}

func (o VirtualServiceTagArrayOutput) Index(i pulumi.IntInput) VirtualServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualServiceTag {
		return vs[0].([]VirtualServiceTag)[vs[1].(int)]
	}).(VirtualServiceTagOutput)
}

type VirtualServiceVirtualNodeServiceProvider struct {
	VirtualNodeName string `pulumi:"virtualNodeName"`
}

// VirtualServiceVirtualNodeServiceProviderInput is an input type that accepts VirtualServiceVirtualNodeServiceProviderArgs and VirtualServiceVirtualNodeServiceProviderOutput values.
// You can construct a concrete instance of `VirtualServiceVirtualNodeServiceProviderInput` via:
//
//          VirtualServiceVirtualNodeServiceProviderArgs{...}
type VirtualServiceVirtualNodeServiceProviderInput interface {
	pulumi.Input

	ToVirtualServiceVirtualNodeServiceProviderOutput() VirtualServiceVirtualNodeServiceProviderOutput
	ToVirtualServiceVirtualNodeServiceProviderOutputWithContext(context.Context) VirtualServiceVirtualNodeServiceProviderOutput
}

type VirtualServiceVirtualNodeServiceProviderArgs struct {
	VirtualNodeName pulumi.StringInput `pulumi:"virtualNodeName"`
}

func (VirtualServiceVirtualNodeServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceVirtualNodeServiceProvider)(nil)).Elem()
}

func (i VirtualServiceVirtualNodeServiceProviderArgs) ToVirtualServiceVirtualNodeServiceProviderOutput() VirtualServiceVirtualNodeServiceProviderOutput {
	return i.ToVirtualServiceVirtualNodeServiceProviderOutputWithContext(context.Background())
}

func (i VirtualServiceVirtualNodeServiceProviderArgs) ToVirtualServiceVirtualNodeServiceProviderOutputWithContext(ctx context.Context) VirtualServiceVirtualNodeServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceVirtualNodeServiceProviderOutput)
}

func (i VirtualServiceVirtualNodeServiceProviderArgs) ToVirtualServiceVirtualNodeServiceProviderPtrOutput() VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return i.ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(context.Background())
}

func (i VirtualServiceVirtualNodeServiceProviderArgs) ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceVirtualNodeServiceProviderOutput).ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(ctx)
}

// VirtualServiceVirtualNodeServiceProviderPtrInput is an input type that accepts VirtualServiceVirtualNodeServiceProviderArgs, VirtualServiceVirtualNodeServiceProviderPtr and VirtualServiceVirtualNodeServiceProviderPtrOutput values.
// You can construct a concrete instance of `VirtualServiceVirtualNodeServiceProviderPtrInput` via:
//
//          VirtualServiceVirtualNodeServiceProviderArgs{...}
//
//  or:
//
//          nil
type VirtualServiceVirtualNodeServiceProviderPtrInput interface {
	pulumi.Input

	ToVirtualServiceVirtualNodeServiceProviderPtrOutput() VirtualServiceVirtualNodeServiceProviderPtrOutput
	ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(context.Context) VirtualServiceVirtualNodeServiceProviderPtrOutput
}

type virtualServiceVirtualNodeServiceProviderPtrType VirtualServiceVirtualNodeServiceProviderArgs

func VirtualServiceVirtualNodeServiceProviderPtr(v *VirtualServiceVirtualNodeServiceProviderArgs) VirtualServiceVirtualNodeServiceProviderPtrInput {
	return (*virtualServiceVirtualNodeServiceProviderPtrType)(v)
}

func (*virtualServiceVirtualNodeServiceProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceVirtualNodeServiceProvider)(nil)).Elem()
}

func (i *virtualServiceVirtualNodeServiceProviderPtrType) ToVirtualServiceVirtualNodeServiceProviderPtrOutput() VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return i.ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(context.Background())
}

func (i *virtualServiceVirtualNodeServiceProviderPtrType) ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceVirtualNodeServiceProviderPtrOutput)
}

type VirtualServiceVirtualNodeServiceProviderOutput struct{ *pulumi.OutputState }

func (VirtualServiceVirtualNodeServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceVirtualNodeServiceProvider)(nil)).Elem()
}

func (o VirtualServiceVirtualNodeServiceProviderOutput) ToVirtualServiceVirtualNodeServiceProviderOutput() VirtualServiceVirtualNodeServiceProviderOutput {
	return o
}

func (o VirtualServiceVirtualNodeServiceProviderOutput) ToVirtualServiceVirtualNodeServiceProviderOutputWithContext(ctx context.Context) VirtualServiceVirtualNodeServiceProviderOutput {
	return o
}

func (o VirtualServiceVirtualNodeServiceProviderOutput) ToVirtualServiceVirtualNodeServiceProviderPtrOutput() VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return o.ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(context.Background())
}

func (o VirtualServiceVirtualNodeServiceProviderOutput) ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceVirtualNodeServiceProvider) *VirtualServiceVirtualNodeServiceProvider {
		return &v
	}).(VirtualServiceVirtualNodeServiceProviderPtrOutput)
}

func (o VirtualServiceVirtualNodeServiceProviderOutput) VirtualNodeName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceVirtualNodeServiceProvider) string { return v.VirtualNodeName }).(pulumi.StringOutput)
}

type VirtualServiceVirtualNodeServiceProviderPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceVirtualNodeServiceProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceVirtualNodeServiceProvider)(nil)).Elem()
}

func (o VirtualServiceVirtualNodeServiceProviderPtrOutput) ToVirtualServiceVirtualNodeServiceProviderPtrOutput() VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return o
}

func (o VirtualServiceVirtualNodeServiceProviderPtrOutput) ToVirtualServiceVirtualNodeServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualNodeServiceProviderPtrOutput {
	return o
}

func (o VirtualServiceVirtualNodeServiceProviderPtrOutput) Elem() VirtualServiceVirtualNodeServiceProviderOutput {
	return o.ApplyT(func(v *VirtualServiceVirtualNodeServiceProvider) VirtualServiceVirtualNodeServiceProvider {
		if v != nil {
			return *v
		}
		var ret VirtualServiceVirtualNodeServiceProvider
		return ret
	}).(VirtualServiceVirtualNodeServiceProviderOutput)
}

func (o VirtualServiceVirtualNodeServiceProviderPtrOutput) VirtualNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceVirtualNodeServiceProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNodeName
	}).(pulumi.StringPtrOutput)
}

type VirtualServiceVirtualRouterServiceProvider struct {
	VirtualRouterName string `pulumi:"virtualRouterName"`
}

// VirtualServiceVirtualRouterServiceProviderInput is an input type that accepts VirtualServiceVirtualRouterServiceProviderArgs and VirtualServiceVirtualRouterServiceProviderOutput values.
// You can construct a concrete instance of `VirtualServiceVirtualRouterServiceProviderInput` via:
//
//          VirtualServiceVirtualRouterServiceProviderArgs{...}
type VirtualServiceVirtualRouterServiceProviderInput interface {
	pulumi.Input

	ToVirtualServiceVirtualRouterServiceProviderOutput() VirtualServiceVirtualRouterServiceProviderOutput
	ToVirtualServiceVirtualRouterServiceProviderOutputWithContext(context.Context) VirtualServiceVirtualRouterServiceProviderOutput
}

type VirtualServiceVirtualRouterServiceProviderArgs struct {
	VirtualRouterName pulumi.StringInput `pulumi:"virtualRouterName"`
}

func (VirtualServiceVirtualRouterServiceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceVirtualRouterServiceProvider)(nil)).Elem()
}

func (i VirtualServiceVirtualRouterServiceProviderArgs) ToVirtualServiceVirtualRouterServiceProviderOutput() VirtualServiceVirtualRouterServiceProviderOutput {
	return i.ToVirtualServiceVirtualRouterServiceProviderOutputWithContext(context.Background())
}

func (i VirtualServiceVirtualRouterServiceProviderArgs) ToVirtualServiceVirtualRouterServiceProviderOutputWithContext(ctx context.Context) VirtualServiceVirtualRouterServiceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceVirtualRouterServiceProviderOutput)
}

func (i VirtualServiceVirtualRouterServiceProviderArgs) ToVirtualServiceVirtualRouterServiceProviderPtrOutput() VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return i.ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(context.Background())
}

func (i VirtualServiceVirtualRouterServiceProviderArgs) ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceVirtualRouterServiceProviderOutput).ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(ctx)
}

// VirtualServiceVirtualRouterServiceProviderPtrInput is an input type that accepts VirtualServiceVirtualRouterServiceProviderArgs, VirtualServiceVirtualRouterServiceProviderPtr and VirtualServiceVirtualRouterServiceProviderPtrOutput values.
// You can construct a concrete instance of `VirtualServiceVirtualRouterServiceProviderPtrInput` via:
//
//          VirtualServiceVirtualRouterServiceProviderArgs{...}
//
//  or:
//
//          nil
type VirtualServiceVirtualRouterServiceProviderPtrInput interface {
	pulumi.Input

	ToVirtualServiceVirtualRouterServiceProviderPtrOutput() VirtualServiceVirtualRouterServiceProviderPtrOutput
	ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(context.Context) VirtualServiceVirtualRouterServiceProviderPtrOutput
}

type virtualServiceVirtualRouterServiceProviderPtrType VirtualServiceVirtualRouterServiceProviderArgs

func VirtualServiceVirtualRouterServiceProviderPtr(v *VirtualServiceVirtualRouterServiceProviderArgs) VirtualServiceVirtualRouterServiceProviderPtrInput {
	return (*virtualServiceVirtualRouterServiceProviderPtrType)(v)
}

func (*virtualServiceVirtualRouterServiceProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceVirtualRouterServiceProvider)(nil)).Elem()
}

func (i *virtualServiceVirtualRouterServiceProviderPtrType) ToVirtualServiceVirtualRouterServiceProviderPtrOutput() VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return i.ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(context.Background())
}

func (i *virtualServiceVirtualRouterServiceProviderPtrType) ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualServiceVirtualRouterServiceProviderPtrOutput)
}

type VirtualServiceVirtualRouterServiceProviderOutput struct{ *pulumi.OutputState }

func (VirtualServiceVirtualRouterServiceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualServiceVirtualRouterServiceProvider)(nil)).Elem()
}

func (o VirtualServiceVirtualRouterServiceProviderOutput) ToVirtualServiceVirtualRouterServiceProviderOutput() VirtualServiceVirtualRouterServiceProviderOutput {
	return o
}

func (o VirtualServiceVirtualRouterServiceProviderOutput) ToVirtualServiceVirtualRouterServiceProviderOutputWithContext(ctx context.Context) VirtualServiceVirtualRouterServiceProviderOutput {
	return o
}

func (o VirtualServiceVirtualRouterServiceProviderOutput) ToVirtualServiceVirtualRouterServiceProviderPtrOutput() VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return o.ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(context.Background())
}

func (o VirtualServiceVirtualRouterServiceProviderOutput) ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualServiceVirtualRouterServiceProvider) *VirtualServiceVirtualRouterServiceProvider {
		return &v
	}).(VirtualServiceVirtualRouterServiceProviderPtrOutput)
}

func (o VirtualServiceVirtualRouterServiceProviderOutput) VirtualRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualServiceVirtualRouterServiceProvider) string { return v.VirtualRouterName }).(pulumi.StringOutput)
}

type VirtualServiceVirtualRouterServiceProviderPtrOutput struct{ *pulumi.OutputState }

func (VirtualServiceVirtualRouterServiceProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualServiceVirtualRouterServiceProvider)(nil)).Elem()
}

func (o VirtualServiceVirtualRouterServiceProviderPtrOutput) ToVirtualServiceVirtualRouterServiceProviderPtrOutput() VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return o
}

func (o VirtualServiceVirtualRouterServiceProviderPtrOutput) ToVirtualServiceVirtualRouterServiceProviderPtrOutputWithContext(ctx context.Context) VirtualServiceVirtualRouterServiceProviderPtrOutput {
	return o
}

func (o VirtualServiceVirtualRouterServiceProviderPtrOutput) Elem() VirtualServiceVirtualRouterServiceProviderOutput {
	return o.ApplyT(func(v *VirtualServiceVirtualRouterServiceProvider) VirtualServiceVirtualRouterServiceProvider {
		if v != nil {
			return *v
		}
		var ret VirtualServiceVirtualRouterServiceProvider
		return ret
	}).(VirtualServiceVirtualRouterServiceProviderOutput)
}

func (o VirtualServiceVirtualRouterServiceProviderPtrOutput) VirtualRouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualServiceVirtualRouterServiceProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualRouterName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRoutePtrInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteActionInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteActionPtrInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMatchInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMatchPtrInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMetadataInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteMetadataArrayInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteRewriteInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteGrpcGatewayRouteRewritePtrInput)(nil)).Elem(), GatewayRouteGrpcGatewayRouteRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHostnameMatchInput)(nil)).Elem(), GatewayRouteHostnameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHostnameMatchPtrInput)(nil)).Elem(), GatewayRouteHostnameMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHostnameRewriteInput)(nil)).Elem(), GatewayRouteHostnameRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHostnameRewritePtrInput)(nil)).Elem(), GatewayRouteHostnameRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRoutePtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteActionInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteActionPtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeaderInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeaderArrayInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeaderMatchInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteHeaderMatchPtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteHeaderMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteMatchInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteMatchPtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRoutePathRewriteInput)(nil)).Elem(), GatewayRouteHttpGatewayRoutePathRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRoutePathRewritePtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRoutePathRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRoutePrefixRewriteInput)(nil)).Elem(), GatewayRouteHttpGatewayRoutePrefixRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRoutePrefixRewritePtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRoutePrefixRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteRewriteInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpGatewayRouteRewritePtrInput)(nil)).Elem(), GatewayRouteHttpGatewayRouteRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpPathMatchInput)(nil)).Elem(), GatewayRouteHttpPathMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpPathMatchPtrInput)(nil)).Elem(), GatewayRouteHttpPathMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpQueryParameterMatchInput)(nil)).Elem(), GatewayRouteHttpQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteHttpQueryParameterMatchPtrInput)(nil)).Elem(), GatewayRouteHttpQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteMetadataMatchInput)(nil)).Elem(), GatewayRouteMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteMetadataMatchPtrInput)(nil)).Elem(), GatewayRouteMetadataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteQueryParameterInput)(nil)).Elem(), GatewayRouteQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteQueryParameterArrayInput)(nil)).Elem(), GatewayRouteQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteRangeMatchInput)(nil)).Elem(), GatewayRouteRangeMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteRangeMatchPtrInput)(nil)).Elem(), GatewayRouteRangeMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecInput)(nil)).Elem(), GatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteSpecPtrInput)(nil)).Elem(), GatewayRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteTagInput)(nil)).Elem(), GatewayRouteTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteTagArrayInput)(nil)).Elem(), GatewayRouteTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteTargetInput)(nil)).Elem(), GatewayRouteTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteTargetPtrInput)(nil)).Elem(), GatewayRouteTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteVirtualServiceInput)(nil)).Elem(), GatewayRouteVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteVirtualServicePtrInput)(nil)).Elem(), GatewayRouteVirtualServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshEgressFilterInput)(nil)).Elem(), MeshEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshEgressFilterPtrInput)(nil)).Elem(), MeshEgressFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecInput)(nil)).Elem(), MeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshSpecPtrInput)(nil)).Elem(), MeshSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshTagInput)(nil)).Elem(), MeshTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshTagArrayInput)(nil)).Elem(), MeshTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteDurationInput)(nil)).Elem(), RouteDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteDurationPtrInput)(nil)).Elem(), RouteDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRetryPolicyInput)(nil)).Elem(), RouteGrpcRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRetryPolicyPtrInput)(nil)).Elem(), RouteGrpcRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteInput)(nil)).Elem(), RouteGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRoutePtrInput)(nil)).Elem(), RouteGrpcRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteActionInput)(nil)).Elem(), RouteGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteActionPtrInput)(nil)).Elem(), RouteGrpcRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteMatchInput)(nil)).Elem(), RouteGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteMatchPtrInput)(nil)).Elem(), RouteGrpcRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteMetadataInput)(nil)).Elem(), RouteGrpcRouteMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteMetadataArrayInput)(nil)).Elem(), RouteGrpcRouteMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteMetadataMatchMethodInput)(nil)).Elem(), RouteGrpcRouteMetadataMatchMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcRouteMetadataMatchMethodPtrInput)(nil)).Elem(), RouteGrpcRouteMetadataMatchMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcTimeoutInput)(nil)).Elem(), RouteGrpcTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteGrpcTimeoutPtrInput)(nil)).Elem(), RouteGrpcTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHeaderMatchMethodInput)(nil)).Elem(), RouteHeaderMatchMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHeaderMatchMethodPtrInput)(nil)).Elem(), RouteHeaderMatchMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpPathMatchInput)(nil)).Elem(), RouteHttpPathMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpPathMatchPtrInput)(nil)).Elem(), RouteHttpPathMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpQueryParameterMatchInput)(nil)).Elem(), RouteHttpQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpQueryParameterMatchPtrInput)(nil)).Elem(), RouteHttpQueryParameterMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRetryPolicyInput)(nil)).Elem(), RouteHttpRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRetryPolicyPtrInput)(nil)).Elem(), RouteHttpRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteInput)(nil)).Elem(), RouteHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRoutePtrInput)(nil)).Elem(), RouteHttpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteActionInput)(nil)).Elem(), RouteHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteActionPtrInput)(nil)).Elem(), RouteHttpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteHeaderInput)(nil)).Elem(), RouteHttpRouteHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteHeaderArrayInput)(nil)).Elem(), RouteHttpRouteHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteMatchInput)(nil)).Elem(), RouteHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpRouteMatchPtrInput)(nil)).Elem(), RouteHttpRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpTimeoutInput)(nil)).Elem(), RouteHttpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHttpTimeoutPtrInput)(nil)).Elem(), RouteHttpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMatchRangeInput)(nil)).Elem(), RouteMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMatchRangePtrInput)(nil)).Elem(), RouteMatchRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteQueryParameterInput)(nil)).Elem(), RouteQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteQueryParameterArrayInput)(nil)).Elem(), RouteQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecInput)(nil)).Elem(), RouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSpecPtrInput)(nil)).Elem(), RouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTagInput)(nil)).Elem(), RouteTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTagArrayInput)(nil)).Elem(), RouteTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTcpRouteInput)(nil)).Elem(), RouteTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTcpRoutePtrInput)(nil)).Elem(), RouteTcpRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTcpRouteActionInput)(nil)).Elem(), RouteTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTcpRouteActionPtrInput)(nil)).Elem(), RouteTcpRouteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTcpTimeoutInput)(nil)).Elem(), RouteTcpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTcpTimeoutPtrInput)(nil)).Elem(), RouteTcpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteWeightedTargetInput)(nil)).Elem(), RouteWeightedTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteWeightedTargetArrayInput)(nil)).Elem(), RouteWeightedTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayAccessLogInput)(nil)).Elem(), VirtualGatewayAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayAccessLogPtrInput)(nil)).Elem(), VirtualGatewayAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayBackendDefaultsInput)(nil)).Elem(), VirtualGatewayBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayBackendDefaultsPtrInput)(nil)).Elem(), VirtualGatewayBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayClientPolicyInput)(nil)).Elem(), VirtualGatewayClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayClientPolicyPtrInput)(nil)).Elem(), VirtualGatewayClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayClientPolicyTlsInput)(nil)).Elem(), VirtualGatewayClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayClientPolicyTlsPtrInput)(nil)).Elem(), VirtualGatewayClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayClientTlsCertificateInput)(nil)).Elem(), VirtualGatewayClientTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayClientTlsCertificatePtrInput)(nil)).Elem(), VirtualGatewayClientTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayConnectionPoolInput)(nil)).Elem(), VirtualGatewayConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayConnectionPoolPtrInput)(nil)).Elem(), VirtualGatewayConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayFileAccessLogInput)(nil)).Elem(), VirtualGatewayFileAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayFileAccessLogPtrInput)(nil)).Elem(), VirtualGatewayFileAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayGrpcConnectionPoolInput)(nil)).Elem(), VirtualGatewayGrpcConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayGrpcConnectionPoolPtrInput)(nil)).Elem(), VirtualGatewayGrpcConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayHealthCheckPolicyInput)(nil)).Elem(), VirtualGatewayHealthCheckPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayHealthCheckPolicyPtrInput)(nil)).Elem(), VirtualGatewayHealthCheckPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayHttp2ConnectionPoolInput)(nil)).Elem(), VirtualGatewayHttp2ConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayHttp2ConnectionPoolPtrInput)(nil)).Elem(), VirtualGatewayHttp2ConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayHttpConnectionPoolInput)(nil)).Elem(), VirtualGatewayHttpConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayHttpConnectionPoolPtrInput)(nil)).Elem(), VirtualGatewayHttpConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerInput)(nil)).Elem(), VirtualGatewayListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerArrayInput)(nil)).Elem(), VirtualGatewayListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsInput)(nil)).Elem(), VirtualGatewayListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsPtrInput)(nil)).Elem(), VirtualGatewayListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsAcmCertificateInput)(nil)).Elem(), VirtualGatewayListenerTlsAcmCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsAcmCertificatePtrInput)(nil)).Elem(), VirtualGatewayListenerTlsAcmCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsCertificateInput)(nil)).Elem(), VirtualGatewayListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsCertificatePtrInput)(nil)).Elem(), VirtualGatewayListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsFileCertificateInput)(nil)).Elem(), VirtualGatewayListenerTlsFileCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsFileCertificatePtrInput)(nil)).Elem(), VirtualGatewayListenerTlsFileCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsSdsCertificateInput)(nil)).Elem(), VirtualGatewayListenerTlsSdsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsSdsCertificatePtrInput)(nil)).Elem(), VirtualGatewayListenerTlsSdsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsValidationContextInput)(nil)).Elem(), VirtualGatewayListenerTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsValidationContextPtrInput)(nil)).Elem(), VirtualGatewayListenerTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsValidationContextTrustInput)(nil)).Elem(), VirtualGatewayListenerTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayListenerTlsValidationContextTrustPtrInput)(nil)).Elem(), VirtualGatewayListenerTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayLoggingInput)(nil)).Elem(), VirtualGatewayLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayLoggingPtrInput)(nil)).Elem(), VirtualGatewayLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayPortMappingInput)(nil)).Elem(), VirtualGatewayPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecInput)(nil)).Elem(), VirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySpecPtrInput)(nil)).Elem(), VirtualGatewaySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySubjectAlternativeNameMatchersInput)(nil)).Elem(), VirtualGatewaySubjectAlternativeNameMatchersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySubjectAlternativeNameMatchersPtrInput)(nil)).Elem(), VirtualGatewaySubjectAlternativeNameMatchersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySubjectAlternativeNamesInput)(nil)).Elem(), VirtualGatewaySubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewaySubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualGatewaySubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTagInput)(nil)).Elem(), VirtualGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTagArrayInput)(nil)).Elem(), VirtualGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextInput)(nil)).Elem(), VirtualGatewayTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextPtrInput)(nil)).Elem(), VirtualGatewayTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextAcmTrustInput)(nil)).Elem(), VirtualGatewayTlsValidationContextAcmTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextAcmTrustPtrInput)(nil)).Elem(), VirtualGatewayTlsValidationContextAcmTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextFileTrustInput)(nil)).Elem(), VirtualGatewayTlsValidationContextFileTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextFileTrustPtrInput)(nil)).Elem(), VirtualGatewayTlsValidationContextFileTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextSdsTrustInput)(nil)).Elem(), VirtualGatewayTlsValidationContextSdsTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextSdsTrustPtrInput)(nil)).Elem(), VirtualGatewayTlsValidationContextSdsTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextTrustInput)(nil)).Elem(), VirtualGatewayTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualGatewayTlsValidationContextTrustPtrInput)(nil)).Elem(), VirtualGatewayTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeAccessLogInput)(nil)).Elem(), VirtualNodeAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeAccessLogPtrInput)(nil)).Elem(), VirtualNodeAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeAwsCloudMapInstanceAttributeInput)(nil)).Elem(), VirtualNodeAwsCloudMapInstanceAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeAwsCloudMapInstanceAttributeArrayInput)(nil)).Elem(), VirtualNodeAwsCloudMapInstanceAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeAwsCloudMapServiceDiscoveryInput)(nil)).Elem(), VirtualNodeAwsCloudMapServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeAwsCloudMapServiceDiscoveryPtrInput)(nil)).Elem(), VirtualNodeAwsCloudMapServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeBackendInput)(nil)).Elem(), VirtualNodeBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeBackendArrayInput)(nil)).Elem(), VirtualNodeBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeBackendDefaultsInput)(nil)).Elem(), VirtualNodeBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeBackendDefaultsPtrInput)(nil)).Elem(), VirtualNodeBackendDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeClientPolicyInput)(nil)).Elem(), VirtualNodeClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeClientPolicyPtrInput)(nil)).Elem(), VirtualNodeClientPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeClientPolicyTlsInput)(nil)).Elem(), VirtualNodeClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeClientPolicyTlsPtrInput)(nil)).Elem(), VirtualNodeClientPolicyTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeClientTlsCertificateInput)(nil)).Elem(), VirtualNodeClientTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeClientTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeClientTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeConnectionPoolInput)(nil)).Elem(), VirtualNodeConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeDnsServiceDiscoveryInput)(nil)).Elem(), VirtualNodeDnsServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeDnsServiceDiscoveryPtrInput)(nil)).Elem(), VirtualNodeDnsServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeDurationInput)(nil)).Elem(), VirtualNodeDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeDurationPtrInput)(nil)).Elem(), VirtualNodeDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeFileAccessLogInput)(nil)).Elem(), VirtualNodeFileAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeFileAccessLogPtrInput)(nil)).Elem(), VirtualNodeFileAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeGrpcConnectionPoolInput)(nil)).Elem(), VirtualNodeGrpcConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeGrpcConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeGrpcConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeGrpcTimeoutInput)(nil)).Elem(), VirtualNodeGrpcTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeGrpcTimeoutPtrInput)(nil)).Elem(), VirtualNodeGrpcTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHealthCheckInput)(nil)).Elem(), VirtualNodeHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHealthCheckPtrInput)(nil)).Elem(), VirtualNodeHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHttp2ConnectionPoolInput)(nil)).Elem(), VirtualNodeHttp2ConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHttp2ConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeHttp2ConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHttpConnectionPoolInput)(nil)).Elem(), VirtualNodeHttpConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHttpConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeHttpConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHttpTimeoutInput)(nil)).Elem(), VirtualNodeHttpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeHttpTimeoutPtrInput)(nil)).Elem(), VirtualNodeHttpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerInput)(nil)).Elem(), VirtualNodeListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerArrayInput)(nil)).Elem(), VirtualNodeListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTimeoutInput)(nil)).Elem(), VirtualNodeListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTimeoutPtrInput)(nil)).Elem(), VirtualNodeListenerTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsInput)(nil)).Elem(), VirtualNodeListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsPtrInput)(nil)).Elem(), VirtualNodeListenerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsAcmCertificateInput)(nil)).Elem(), VirtualNodeListenerTlsAcmCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsAcmCertificatePtrInput)(nil)).Elem(), VirtualNodeListenerTlsAcmCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsCertificateInput)(nil)).Elem(), VirtualNodeListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsCertificatePtrInput)(nil)).Elem(), VirtualNodeListenerTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsFileCertificateInput)(nil)).Elem(), VirtualNodeListenerTlsFileCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsFileCertificatePtrInput)(nil)).Elem(), VirtualNodeListenerTlsFileCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsSdsCertificateInput)(nil)).Elem(), VirtualNodeListenerTlsSdsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsSdsCertificatePtrInput)(nil)).Elem(), VirtualNodeListenerTlsSdsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsValidationContextInput)(nil)).Elem(), VirtualNodeListenerTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsValidationContextPtrInput)(nil)).Elem(), VirtualNodeListenerTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsValidationContextTrustInput)(nil)).Elem(), VirtualNodeListenerTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeListenerTlsValidationContextTrustPtrInput)(nil)).Elem(), VirtualNodeListenerTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeLoggingInput)(nil)).Elem(), VirtualNodeLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeLoggingPtrInput)(nil)).Elem(), VirtualNodeLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeOutlierDetectionInput)(nil)).Elem(), VirtualNodeOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeOutlierDetectionPtrInput)(nil)).Elem(), VirtualNodeOutlierDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodePortMappingInput)(nil)).Elem(), VirtualNodePortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeServiceDiscoveryInput)(nil)).Elem(), VirtualNodeServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeServiceDiscoveryPtrInput)(nil)).Elem(), VirtualNodeServiceDiscoveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecInput)(nil)).Elem(), VirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSpecPtrInput)(nil)).Elem(), VirtualNodeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSubjectAlternativeNameMatchersInput)(nil)).Elem(), VirtualNodeSubjectAlternativeNameMatchersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSubjectAlternativeNameMatchersPtrInput)(nil)).Elem(), VirtualNodeSubjectAlternativeNameMatchersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSubjectAlternativeNamesInput)(nil)).Elem(), VirtualNodeSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeSubjectAlternativeNamesPtrInput)(nil)).Elem(), VirtualNodeSubjectAlternativeNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTagInput)(nil)).Elem(), VirtualNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTagArrayInput)(nil)).Elem(), VirtualNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTcpConnectionPoolInput)(nil)).Elem(), VirtualNodeTcpConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTcpConnectionPoolPtrInput)(nil)).Elem(), VirtualNodeTcpConnectionPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTcpTimeoutInput)(nil)).Elem(), VirtualNodeTcpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTcpTimeoutPtrInput)(nil)).Elem(), VirtualNodeTcpTimeoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextInput)(nil)).Elem(), VirtualNodeTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextPtrInput)(nil)).Elem(), VirtualNodeTlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextAcmTrustInput)(nil)).Elem(), VirtualNodeTlsValidationContextAcmTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextAcmTrustPtrInput)(nil)).Elem(), VirtualNodeTlsValidationContextAcmTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextFileTrustInput)(nil)).Elem(), VirtualNodeTlsValidationContextFileTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextFileTrustPtrInput)(nil)).Elem(), VirtualNodeTlsValidationContextFileTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextSdsTrustInput)(nil)).Elem(), VirtualNodeTlsValidationContextSdsTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextSdsTrustPtrInput)(nil)).Elem(), VirtualNodeTlsValidationContextSdsTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextTrustInput)(nil)).Elem(), VirtualNodeTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeTlsValidationContextTrustPtrInput)(nil)).Elem(), VirtualNodeTlsValidationContextTrustArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeVirtualServiceBackendInput)(nil)).Elem(), VirtualNodeVirtualServiceBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNodeVirtualServiceBackendPtrInput)(nil)).Elem(), VirtualNodeVirtualServiceBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterListenerInput)(nil)).Elem(), VirtualRouterListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterListenerArrayInput)(nil)).Elem(), VirtualRouterListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterPortMappingInput)(nil)).Elem(), VirtualRouterPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecInput)(nil)).Elem(), VirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterSpecPtrInput)(nil)).Elem(), VirtualRouterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterTagInput)(nil)).Elem(), VirtualRouterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualRouterTagArrayInput)(nil)).Elem(), VirtualRouterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceProviderInput)(nil)).Elem(), VirtualServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceProviderPtrInput)(nil)).Elem(), VirtualServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceSpecPtrInput)(nil)).Elem(), VirtualServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceTagInput)(nil)).Elem(), VirtualServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceTagArrayInput)(nil)).Elem(), VirtualServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceVirtualNodeServiceProviderInput)(nil)).Elem(), VirtualServiceVirtualNodeServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceVirtualNodeServiceProviderPtrInput)(nil)).Elem(), VirtualServiceVirtualNodeServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceVirtualRouterServiceProviderInput)(nil)).Elem(), VirtualServiceVirtualRouterServiceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualServiceVirtualRouterServiceProviderPtrInput)(nil)).Elem(), VirtualServiceVirtualRouterServiceProviderArgs{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteMetadataOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteMetadataArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteGrpcGatewayRouteRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHostnameMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteHostnameMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHostnameRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteHostnameRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRoutePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteActionOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteActionPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteHeaderOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteHeaderArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteHeaderMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteHeaderMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRoutePathRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRoutePathRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRoutePrefixRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRoutePrefixRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteRewriteOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpGatewayRouteRewritePtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpPathMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpPathMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteHttpQueryParameterMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteMetadataMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteMetadataMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteQueryParameterOutput{})
	pulumi.RegisterOutputType(GatewayRouteQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteRangeMatchOutput{})
	pulumi.RegisterOutputType(GatewayRouteRangeMatchPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecOutput{})
	pulumi.RegisterOutputType(GatewayRouteSpecPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteTagOutput{})
	pulumi.RegisterOutputType(GatewayRouteTagArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteTargetOutput{})
	pulumi.RegisterOutputType(GatewayRouteTargetPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouteVirtualServiceOutput{})
	pulumi.RegisterOutputType(GatewayRouteVirtualServicePtrOutput{})
	pulumi.RegisterOutputType(MeshEgressFilterOutput{})
	pulumi.RegisterOutputType(MeshEgressFilterPtrOutput{})
	pulumi.RegisterOutputType(MeshSpecOutput{})
	pulumi.RegisterOutputType(MeshSpecPtrOutput{})
	pulumi.RegisterOutputType(MeshTagOutput{})
	pulumi.RegisterOutputType(MeshTagArrayOutput{})
	pulumi.RegisterOutputType(RouteDurationOutput{})
	pulumi.RegisterOutputType(RouteDurationPtrOutput{})
	pulumi.RegisterOutputType(RouteGrpcRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteGrpcRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteOutput{})
	pulumi.RegisterOutputType(RouteGrpcRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteActionOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteMetadataOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteMetadataArrayOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteMetadataMatchMethodOutput{})
	pulumi.RegisterOutputType(RouteGrpcRouteMetadataMatchMethodPtrOutput{})
	pulumi.RegisterOutputType(RouteGrpcTimeoutOutput{})
	pulumi.RegisterOutputType(RouteGrpcTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteHeaderMatchMethodOutput{})
	pulumi.RegisterOutputType(RouteHeaderMatchMethodPtrOutput{})
	pulumi.RegisterOutputType(RouteHttpPathMatchOutput{})
	pulumi.RegisterOutputType(RouteHttpPathMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteHttpQueryParameterMatchOutput{})
	pulumi.RegisterOutputType(RouteHttpQueryParameterMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteHttpRetryPolicyOutput{})
	pulumi.RegisterOutputType(RouteHttpRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteOutput{})
	pulumi.RegisterOutputType(RouteHttpRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteActionOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteHeaderOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteHeaderArrayOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteMatchOutput{})
	pulumi.RegisterOutputType(RouteHttpRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(RouteHttpTimeoutOutput{})
	pulumi.RegisterOutputType(RouteHttpTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteMatchRangeOutput{})
	pulumi.RegisterOutputType(RouteMatchRangePtrOutput{})
	pulumi.RegisterOutputType(RouteQueryParameterOutput{})
	pulumi.RegisterOutputType(RouteQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(RouteSpecOutput{})
	pulumi.RegisterOutputType(RouteSpecPtrOutput{})
	pulumi.RegisterOutputType(RouteTagOutput{})
	pulumi.RegisterOutputType(RouteTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTcpRouteOutput{})
	pulumi.RegisterOutputType(RouteTcpRoutePtrOutput{})
	pulumi.RegisterOutputType(RouteTcpRouteActionOutput{})
	pulumi.RegisterOutputType(RouteTcpRouteActionPtrOutput{})
	pulumi.RegisterOutputType(RouteTcpTimeoutOutput{})
	pulumi.RegisterOutputType(RouteTcpTimeoutPtrOutput{})
	pulumi.RegisterOutputType(RouteWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteWeightedTargetArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewayAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualGatewayAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayBackendDefaultsOutput{})
	pulumi.RegisterOutputType(VirtualGatewayBackendDefaultsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualGatewayClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualGatewayClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayClientTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewayClientTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualGatewayConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayFileAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualGatewayFileAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayGrpcConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualGatewayGrpcConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayHealthCheckPolicyOutput{})
	pulumi.RegisterOutputType(VirtualGatewayHealthCheckPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayHttp2ConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualGatewayHttp2ConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayHttpConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualGatewayHttpConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsAcmCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsAcmCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsFileCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsFileCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsSdsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsSdsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsValidationContextOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsValidationContextPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsValidationContextTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewayListenerTlsValidationContextTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayLoggingOutput{})
	pulumi.RegisterOutputType(VirtualGatewayLoggingPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySubjectAlternativeNameMatchersOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySubjectAlternativeNameMatchersPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualGatewaySubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTagOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextAcmTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextAcmTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextFileTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextFileTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextSdsTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextSdsTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextTrustOutput{})
	pulumi.RegisterOutputType(VirtualGatewayTlsValidationContextTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualNodeAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeAwsCloudMapInstanceAttributeOutput{})
	pulumi.RegisterOutputType(VirtualNodeAwsCloudMapInstanceAttributeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeAwsCloudMapServiceDiscoveryOutput{})
	pulumi.RegisterOutputType(VirtualNodeAwsCloudMapServiceDiscoveryPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeBackendOutput{})
	pulumi.RegisterOutputType(VirtualNodeBackendArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeBackendDefaultsOutput{})
	pulumi.RegisterOutputType(VirtualNodeBackendDefaultsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeClientPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNodeClientPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeClientPolicyTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeClientPolicyTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeClientTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeClientTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeDnsServiceDiscoveryOutput{})
	pulumi.RegisterOutputType(VirtualNodeDnsServiceDiscoveryPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeDurationOutput{})
	pulumi.RegisterOutputType(VirtualNodeDurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeFileAccessLogOutput{})
	pulumi.RegisterOutputType(VirtualNodeFileAccessLogPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeGrpcConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeGrpcConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeGrpcTimeoutOutput{})
	pulumi.RegisterOutputType(VirtualNodeGrpcTimeoutPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualNodeHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeHttp2ConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeHttp2ConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeHttpConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeHttpConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeHttpTimeoutOutput{})
	pulumi.RegisterOutputType(VirtualNodeHttpTimeoutPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTimeoutOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTimeoutPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsAcmCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsAcmCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsFileCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsFileCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsSdsCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsSdsCertificatePtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsValidationContextOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsValidationContextPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsValidationContextTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeListenerTlsValidationContextTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeLoggingOutput{})
	pulumi.RegisterOutputType(VirtualNodeLoggingPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeOutlierDetectionOutput{})
	pulumi.RegisterOutputType(VirtualNodeOutlierDetectionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodePortMappingOutput{})
	pulumi.RegisterOutputType(VirtualNodeServiceDiscoveryOutput{})
	pulumi.RegisterOutputType(VirtualNodeServiceDiscoveryPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSubjectAlternativeNameMatchersOutput{})
	pulumi.RegisterOutputType(VirtualNodeSubjectAlternativeNameMatchersPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(VirtualNodeSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTagOutput{})
	pulumi.RegisterOutputType(VirtualNodeTagArrayOutput{})
	pulumi.RegisterOutputType(VirtualNodeTcpConnectionPoolOutput{})
	pulumi.RegisterOutputType(VirtualNodeTcpConnectionPoolPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTcpTimeoutOutput{})
	pulumi.RegisterOutputType(VirtualNodeTcpTimeoutPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextAcmTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextAcmTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextFileTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextFileTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextSdsTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextSdsTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextTrustOutput{})
	pulumi.RegisterOutputType(VirtualNodeTlsValidationContextTrustPtrOutput{})
	pulumi.RegisterOutputType(VirtualNodeVirtualServiceBackendOutput{})
	pulumi.RegisterOutputType(VirtualNodeVirtualServiceBackendPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterListenerOutput{})
	pulumi.RegisterOutputType(VirtualRouterListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualRouterPortMappingOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecOutput{})
	pulumi.RegisterOutputType(VirtualRouterSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualRouterTagOutput{})
	pulumi.RegisterOutputType(VirtualRouterTagArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceProviderOutput{})
	pulumi.RegisterOutputType(VirtualServiceProviderPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecOutput{})
	pulumi.RegisterOutputType(VirtualServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceTagOutput{})
	pulumi.RegisterOutputType(VirtualServiceTagArrayOutput{})
	pulumi.RegisterOutputType(VirtualServiceVirtualNodeServiceProviderOutput{})
	pulumi.RegisterOutputType(VirtualServiceVirtualNodeServiceProviderPtrOutput{})
	pulumi.RegisterOutputType(VirtualServiceVirtualRouterServiceProviderOutput{})
	pulumi.RegisterOutputType(VirtualServiceVirtualRouterServiceProviderPtrOutput{})
}
