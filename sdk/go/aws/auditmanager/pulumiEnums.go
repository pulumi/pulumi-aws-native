// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package auditmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The destination type, such as Amazon S3.
type AssessmentAssessmentReportDestinationType string

const (
	AssessmentAssessmentReportDestinationTypeS3 = AssessmentAssessmentReportDestinationType("S3")
)

func (AssessmentAssessmentReportDestinationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentAssessmentReportDestinationType)(nil)).Elem()
}

func (e AssessmentAssessmentReportDestinationType) ToAssessmentAssessmentReportDestinationTypeOutput() AssessmentAssessmentReportDestinationTypeOutput {
	return pulumi.ToOutput(e).(AssessmentAssessmentReportDestinationTypeOutput)
}

func (e AssessmentAssessmentReportDestinationType) ToAssessmentAssessmentReportDestinationTypeOutputWithContext(ctx context.Context) AssessmentAssessmentReportDestinationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentAssessmentReportDestinationTypeOutput)
}

func (e AssessmentAssessmentReportDestinationType) ToAssessmentAssessmentReportDestinationTypePtrOutput() AssessmentAssessmentReportDestinationTypePtrOutput {
	return e.ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(context.Background())
}

func (e AssessmentAssessmentReportDestinationType) ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(ctx context.Context) AssessmentAssessmentReportDestinationTypePtrOutput {
	return AssessmentAssessmentReportDestinationType(e).ToAssessmentAssessmentReportDestinationTypeOutputWithContext(ctx).ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(ctx)
}

func (e AssessmentAssessmentReportDestinationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentAssessmentReportDestinationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentAssessmentReportDestinationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentAssessmentReportDestinationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentAssessmentReportDestinationTypeOutput struct{ *pulumi.OutputState }

func (AssessmentAssessmentReportDestinationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentAssessmentReportDestinationType)(nil)).Elem()
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToAssessmentAssessmentReportDestinationTypeOutput() AssessmentAssessmentReportDestinationTypeOutput {
	return o
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToAssessmentAssessmentReportDestinationTypeOutputWithContext(ctx context.Context) AssessmentAssessmentReportDestinationTypeOutput {
	return o
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToAssessmentAssessmentReportDestinationTypePtrOutput() AssessmentAssessmentReportDestinationTypePtrOutput {
	return o.ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(context.Background())
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(ctx context.Context) AssessmentAssessmentReportDestinationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentAssessmentReportDestinationType) *AssessmentAssessmentReportDestinationType {
		return &v
	}).(AssessmentAssessmentReportDestinationTypePtrOutput)
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentAssessmentReportDestinationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentAssessmentReportDestinationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentAssessmentReportDestinationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentAssessmentReportDestinationTypePtrOutput struct{ *pulumi.OutputState }

func (AssessmentAssessmentReportDestinationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentAssessmentReportDestinationType)(nil)).Elem()
}

func (o AssessmentAssessmentReportDestinationTypePtrOutput) ToAssessmentAssessmentReportDestinationTypePtrOutput() AssessmentAssessmentReportDestinationTypePtrOutput {
	return o
}

func (o AssessmentAssessmentReportDestinationTypePtrOutput) ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(ctx context.Context) AssessmentAssessmentReportDestinationTypePtrOutput {
	return o
}

func (o AssessmentAssessmentReportDestinationTypePtrOutput) Elem() AssessmentAssessmentReportDestinationTypeOutput {
	return o.ApplyT(func(v *AssessmentAssessmentReportDestinationType) AssessmentAssessmentReportDestinationType {
		if v != nil {
			return *v
		}
		var ret AssessmentAssessmentReportDestinationType
		return ret
	}).(AssessmentAssessmentReportDestinationTypeOutput)
}

func (o AssessmentAssessmentReportDestinationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentAssessmentReportDestinationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentAssessmentReportDestinationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentAssessmentReportDestinationTypeInput is an input type that accepts AssessmentAssessmentReportDestinationTypeArgs and AssessmentAssessmentReportDestinationTypeOutput values.
// You can construct a concrete instance of `AssessmentAssessmentReportDestinationTypeInput` via:
//
//          AssessmentAssessmentReportDestinationTypeArgs{...}
type AssessmentAssessmentReportDestinationTypeInput interface {
	pulumi.Input

	ToAssessmentAssessmentReportDestinationTypeOutput() AssessmentAssessmentReportDestinationTypeOutput
	ToAssessmentAssessmentReportDestinationTypeOutputWithContext(context.Context) AssessmentAssessmentReportDestinationTypeOutput
}

var assessmentAssessmentReportDestinationTypePtrType = reflect.TypeOf((**AssessmentAssessmentReportDestinationType)(nil)).Elem()

type AssessmentAssessmentReportDestinationTypePtrInput interface {
	pulumi.Input

	ToAssessmentAssessmentReportDestinationTypePtrOutput() AssessmentAssessmentReportDestinationTypePtrOutput
	ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(context.Context) AssessmentAssessmentReportDestinationTypePtrOutput
}

type assessmentAssessmentReportDestinationTypePtr string

func AssessmentAssessmentReportDestinationTypePtr(v string) AssessmentAssessmentReportDestinationTypePtrInput {
	return (*assessmentAssessmentReportDestinationTypePtr)(&v)
}

func (*assessmentAssessmentReportDestinationTypePtr) ElementType() reflect.Type {
	return assessmentAssessmentReportDestinationTypePtrType
}

func (in *assessmentAssessmentReportDestinationTypePtr) ToAssessmentAssessmentReportDestinationTypePtrOutput() AssessmentAssessmentReportDestinationTypePtrOutput {
	return pulumi.ToOutput(in).(AssessmentAssessmentReportDestinationTypePtrOutput)
}

func (in *assessmentAssessmentReportDestinationTypePtr) ToAssessmentAssessmentReportDestinationTypePtrOutputWithContext(ctx context.Context) AssessmentAssessmentReportDestinationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentAssessmentReportDestinationTypePtrOutput)
}

// The status of the specified assessment.
type AssessmentAssessmentStatus string

const (
	AssessmentAssessmentStatusActive   = AssessmentAssessmentStatus("ACTIVE")
	AssessmentAssessmentStatusInactive = AssessmentAssessmentStatus("INACTIVE")
)

func (AssessmentAssessmentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentAssessmentStatus)(nil)).Elem()
}

func (e AssessmentAssessmentStatus) ToAssessmentAssessmentStatusOutput() AssessmentAssessmentStatusOutput {
	return pulumi.ToOutput(e).(AssessmentAssessmentStatusOutput)
}

func (e AssessmentAssessmentStatus) ToAssessmentAssessmentStatusOutputWithContext(ctx context.Context) AssessmentAssessmentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentAssessmentStatusOutput)
}

func (e AssessmentAssessmentStatus) ToAssessmentAssessmentStatusPtrOutput() AssessmentAssessmentStatusPtrOutput {
	return e.ToAssessmentAssessmentStatusPtrOutputWithContext(context.Background())
}

func (e AssessmentAssessmentStatus) ToAssessmentAssessmentStatusPtrOutputWithContext(ctx context.Context) AssessmentAssessmentStatusPtrOutput {
	return AssessmentAssessmentStatus(e).ToAssessmentAssessmentStatusOutputWithContext(ctx).ToAssessmentAssessmentStatusPtrOutputWithContext(ctx)
}

func (e AssessmentAssessmentStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentAssessmentStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentAssessmentStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentAssessmentStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentAssessmentStatusOutput struct{ *pulumi.OutputState }

func (AssessmentAssessmentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentAssessmentStatus)(nil)).Elem()
}

func (o AssessmentAssessmentStatusOutput) ToAssessmentAssessmentStatusOutput() AssessmentAssessmentStatusOutput {
	return o
}

func (o AssessmentAssessmentStatusOutput) ToAssessmentAssessmentStatusOutputWithContext(ctx context.Context) AssessmentAssessmentStatusOutput {
	return o
}

func (o AssessmentAssessmentStatusOutput) ToAssessmentAssessmentStatusPtrOutput() AssessmentAssessmentStatusPtrOutput {
	return o.ToAssessmentAssessmentStatusPtrOutputWithContext(context.Background())
}

func (o AssessmentAssessmentStatusOutput) ToAssessmentAssessmentStatusPtrOutputWithContext(ctx context.Context) AssessmentAssessmentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentAssessmentStatus) *AssessmentAssessmentStatus {
		return &v
	}).(AssessmentAssessmentStatusPtrOutput)
}

func (o AssessmentAssessmentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentAssessmentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentAssessmentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentAssessmentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentAssessmentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentAssessmentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentAssessmentStatusPtrOutput struct{ *pulumi.OutputState }

func (AssessmentAssessmentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentAssessmentStatus)(nil)).Elem()
}

func (o AssessmentAssessmentStatusPtrOutput) ToAssessmentAssessmentStatusPtrOutput() AssessmentAssessmentStatusPtrOutput {
	return o
}

func (o AssessmentAssessmentStatusPtrOutput) ToAssessmentAssessmentStatusPtrOutputWithContext(ctx context.Context) AssessmentAssessmentStatusPtrOutput {
	return o
}

func (o AssessmentAssessmentStatusPtrOutput) Elem() AssessmentAssessmentStatusOutput {
	return o.ApplyT(func(v *AssessmentAssessmentStatus) AssessmentAssessmentStatus {
		if v != nil {
			return *v
		}
		var ret AssessmentAssessmentStatus
		return ret
	}).(AssessmentAssessmentStatusOutput)
}

func (o AssessmentAssessmentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentAssessmentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentAssessmentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentAssessmentStatusInput is an input type that accepts AssessmentAssessmentStatusArgs and AssessmentAssessmentStatusOutput values.
// You can construct a concrete instance of `AssessmentAssessmentStatusInput` via:
//
//          AssessmentAssessmentStatusArgs{...}
type AssessmentAssessmentStatusInput interface {
	pulumi.Input

	ToAssessmentAssessmentStatusOutput() AssessmentAssessmentStatusOutput
	ToAssessmentAssessmentStatusOutputWithContext(context.Context) AssessmentAssessmentStatusOutput
}

var assessmentAssessmentStatusPtrType = reflect.TypeOf((**AssessmentAssessmentStatus)(nil)).Elem()

type AssessmentAssessmentStatusPtrInput interface {
	pulumi.Input

	ToAssessmentAssessmentStatusPtrOutput() AssessmentAssessmentStatusPtrOutput
	ToAssessmentAssessmentStatusPtrOutputWithContext(context.Context) AssessmentAssessmentStatusPtrOutput
}

type assessmentAssessmentStatusPtr string

func AssessmentAssessmentStatusPtr(v string) AssessmentAssessmentStatusPtrInput {
	return (*assessmentAssessmentStatusPtr)(&v)
}

func (*assessmentAssessmentStatusPtr) ElementType() reflect.Type {
	return assessmentAssessmentStatusPtrType
}

func (in *assessmentAssessmentStatusPtr) ToAssessmentAssessmentStatusPtrOutput() AssessmentAssessmentStatusPtrOutput {
	return pulumi.ToOutput(in).(AssessmentAssessmentStatusPtrOutput)
}

func (in *assessmentAssessmentStatusPtr) ToAssessmentAssessmentStatusPtrOutputWithContext(ctx context.Context) AssessmentAssessmentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentAssessmentStatusPtrOutput)
}

// The status of the delegation.
type AssessmentDelegationStatus string

const (
	AssessmentDelegationStatusInProgress  = AssessmentDelegationStatus("IN_PROGRESS")
	AssessmentDelegationStatusUnderReview = AssessmentDelegationStatus("UNDER_REVIEW")
	AssessmentDelegationStatusComplete    = AssessmentDelegationStatus("COMPLETE")
)

func (AssessmentDelegationStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentDelegationStatus)(nil)).Elem()
}

func (e AssessmentDelegationStatus) ToAssessmentDelegationStatusOutput() AssessmentDelegationStatusOutput {
	return pulumi.ToOutput(e).(AssessmentDelegationStatusOutput)
}

func (e AssessmentDelegationStatus) ToAssessmentDelegationStatusOutputWithContext(ctx context.Context) AssessmentDelegationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentDelegationStatusOutput)
}

func (e AssessmentDelegationStatus) ToAssessmentDelegationStatusPtrOutput() AssessmentDelegationStatusPtrOutput {
	return e.ToAssessmentDelegationStatusPtrOutputWithContext(context.Background())
}

func (e AssessmentDelegationStatus) ToAssessmentDelegationStatusPtrOutputWithContext(ctx context.Context) AssessmentDelegationStatusPtrOutput {
	return AssessmentDelegationStatus(e).ToAssessmentDelegationStatusOutputWithContext(ctx).ToAssessmentDelegationStatusPtrOutputWithContext(ctx)
}

func (e AssessmentDelegationStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentDelegationStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentDelegationStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentDelegationStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentDelegationStatusOutput struct{ *pulumi.OutputState }

func (AssessmentDelegationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentDelegationStatus)(nil)).Elem()
}

func (o AssessmentDelegationStatusOutput) ToAssessmentDelegationStatusOutput() AssessmentDelegationStatusOutput {
	return o
}

func (o AssessmentDelegationStatusOutput) ToAssessmentDelegationStatusOutputWithContext(ctx context.Context) AssessmentDelegationStatusOutput {
	return o
}

func (o AssessmentDelegationStatusOutput) ToAssessmentDelegationStatusPtrOutput() AssessmentDelegationStatusPtrOutput {
	return o.ToAssessmentDelegationStatusPtrOutputWithContext(context.Background())
}

func (o AssessmentDelegationStatusOutput) ToAssessmentDelegationStatusPtrOutputWithContext(ctx context.Context) AssessmentDelegationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentDelegationStatus) *AssessmentDelegationStatus {
		return &v
	}).(AssessmentDelegationStatusPtrOutput)
}

func (o AssessmentDelegationStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentDelegationStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentDelegationStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentDelegationStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentDelegationStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentDelegationStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentDelegationStatusPtrOutput struct{ *pulumi.OutputState }

func (AssessmentDelegationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentDelegationStatus)(nil)).Elem()
}

func (o AssessmentDelegationStatusPtrOutput) ToAssessmentDelegationStatusPtrOutput() AssessmentDelegationStatusPtrOutput {
	return o
}

func (o AssessmentDelegationStatusPtrOutput) ToAssessmentDelegationStatusPtrOutputWithContext(ctx context.Context) AssessmentDelegationStatusPtrOutput {
	return o
}

func (o AssessmentDelegationStatusPtrOutput) Elem() AssessmentDelegationStatusOutput {
	return o.ApplyT(func(v *AssessmentDelegationStatus) AssessmentDelegationStatus {
		if v != nil {
			return *v
		}
		var ret AssessmentDelegationStatus
		return ret
	}).(AssessmentDelegationStatusOutput)
}

func (o AssessmentDelegationStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentDelegationStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentDelegationStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentDelegationStatusInput is an input type that accepts AssessmentDelegationStatusArgs and AssessmentDelegationStatusOutput values.
// You can construct a concrete instance of `AssessmentDelegationStatusInput` via:
//
//          AssessmentDelegationStatusArgs{...}
type AssessmentDelegationStatusInput interface {
	pulumi.Input

	ToAssessmentDelegationStatusOutput() AssessmentDelegationStatusOutput
	ToAssessmentDelegationStatusOutputWithContext(context.Context) AssessmentDelegationStatusOutput
}

var assessmentDelegationStatusPtrType = reflect.TypeOf((**AssessmentDelegationStatus)(nil)).Elem()

type AssessmentDelegationStatusPtrInput interface {
	pulumi.Input

	ToAssessmentDelegationStatusPtrOutput() AssessmentDelegationStatusPtrOutput
	ToAssessmentDelegationStatusPtrOutputWithContext(context.Context) AssessmentDelegationStatusPtrOutput
}

type assessmentDelegationStatusPtr string

func AssessmentDelegationStatusPtr(v string) AssessmentDelegationStatusPtrInput {
	return (*assessmentDelegationStatusPtr)(&v)
}

func (*assessmentDelegationStatusPtr) ElementType() reflect.Type {
	return assessmentDelegationStatusPtrType
}

func (in *assessmentDelegationStatusPtr) ToAssessmentDelegationStatusPtrOutput() AssessmentDelegationStatusPtrOutput {
	return pulumi.ToOutput(in).(AssessmentDelegationStatusPtrOutput)
}

func (in *assessmentDelegationStatusPtr) ToAssessmentDelegationStatusPtrOutputWithContext(ctx context.Context) AssessmentDelegationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentDelegationStatusPtrOutput)
}

//  The IAM role type.
type AssessmentRoleType string

const (
	AssessmentRoleTypeProcessOwner  = AssessmentRoleType("PROCESS_OWNER")
	AssessmentRoleTypeResourceOwner = AssessmentRoleType("RESOURCE_OWNER")
)

func (AssessmentRoleType) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentRoleType)(nil)).Elem()
}

func (e AssessmentRoleType) ToAssessmentRoleTypeOutput() AssessmentRoleTypeOutput {
	return pulumi.ToOutput(e).(AssessmentRoleTypeOutput)
}

func (e AssessmentRoleType) ToAssessmentRoleTypeOutputWithContext(ctx context.Context) AssessmentRoleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentRoleTypeOutput)
}

func (e AssessmentRoleType) ToAssessmentRoleTypePtrOutput() AssessmentRoleTypePtrOutput {
	return e.ToAssessmentRoleTypePtrOutputWithContext(context.Background())
}

func (e AssessmentRoleType) ToAssessmentRoleTypePtrOutputWithContext(ctx context.Context) AssessmentRoleTypePtrOutput {
	return AssessmentRoleType(e).ToAssessmentRoleTypeOutputWithContext(ctx).ToAssessmentRoleTypePtrOutputWithContext(ctx)
}

func (e AssessmentRoleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentRoleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentRoleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentRoleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentRoleTypeOutput struct{ *pulumi.OutputState }

func (AssessmentRoleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentRoleType)(nil)).Elem()
}

func (o AssessmentRoleTypeOutput) ToAssessmentRoleTypeOutput() AssessmentRoleTypeOutput {
	return o
}

func (o AssessmentRoleTypeOutput) ToAssessmentRoleTypeOutputWithContext(ctx context.Context) AssessmentRoleTypeOutput {
	return o
}

func (o AssessmentRoleTypeOutput) ToAssessmentRoleTypePtrOutput() AssessmentRoleTypePtrOutput {
	return o.ToAssessmentRoleTypePtrOutputWithContext(context.Background())
}

func (o AssessmentRoleTypeOutput) ToAssessmentRoleTypePtrOutputWithContext(ctx context.Context) AssessmentRoleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentRoleType) *AssessmentRoleType {
		return &v
	}).(AssessmentRoleTypePtrOutput)
}

func (o AssessmentRoleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentRoleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentRoleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentRoleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentRoleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentRoleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentRoleTypePtrOutput struct{ *pulumi.OutputState }

func (AssessmentRoleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentRoleType)(nil)).Elem()
}

func (o AssessmentRoleTypePtrOutput) ToAssessmentRoleTypePtrOutput() AssessmentRoleTypePtrOutput {
	return o
}

func (o AssessmentRoleTypePtrOutput) ToAssessmentRoleTypePtrOutputWithContext(ctx context.Context) AssessmentRoleTypePtrOutput {
	return o
}

func (o AssessmentRoleTypePtrOutput) Elem() AssessmentRoleTypeOutput {
	return o.ApplyT(func(v *AssessmentRoleType) AssessmentRoleType {
		if v != nil {
			return *v
		}
		var ret AssessmentRoleType
		return ret
	}).(AssessmentRoleTypeOutput)
}

func (o AssessmentRoleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentRoleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentRoleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentRoleTypeInput is an input type that accepts AssessmentRoleTypeArgs and AssessmentRoleTypeOutput values.
// You can construct a concrete instance of `AssessmentRoleTypeInput` via:
//
//          AssessmentRoleTypeArgs{...}
type AssessmentRoleTypeInput interface {
	pulumi.Input

	ToAssessmentRoleTypeOutput() AssessmentRoleTypeOutput
	ToAssessmentRoleTypeOutputWithContext(context.Context) AssessmentRoleTypeOutput
}

var assessmentRoleTypePtrType = reflect.TypeOf((**AssessmentRoleType)(nil)).Elem()

type AssessmentRoleTypePtrInput interface {
	pulumi.Input

	ToAssessmentRoleTypePtrOutput() AssessmentRoleTypePtrOutput
	ToAssessmentRoleTypePtrOutputWithContext(context.Context) AssessmentRoleTypePtrOutput
}

type assessmentRoleTypePtr string

func AssessmentRoleTypePtr(v string) AssessmentRoleTypePtrInput {
	return (*assessmentRoleTypePtr)(&v)
}

func (*assessmentRoleTypePtr) ElementType() reflect.Type {
	return assessmentRoleTypePtrType
}

func (in *assessmentRoleTypePtr) ToAssessmentRoleTypePtrOutput() AssessmentRoleTypePtrOutput {
	return pulumi.ToOutput(in).(AssessmentRoleTypePtrOutput)
}

func (in *assessmentRoleTypePtr) ToAssessmentRoleTypePtrOutputWithContext(ctx context.Context) AssessmentRoleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentRoleTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssessmentAssessmentReportDestinationTypeOutput{})
	pulumi.RegisterOutputType(AssessmentAssessmentReportDestinationTypePtrOutput{})
	pulumi.RegisterOutputType(AssessmentAssessmentStatusOutput{})
	pulumi.RegisterOutputType(AssessmentAssessmentStatusPtrOutput{})
	pulumi.RegisterOutputType(AssessmentDelegationStatusOutput{})
	pulumi.RegisterOutputType(AssessmentDelegationStatusPtrOutput{})
	pulumi.RegisterOutputType(AssessmentRoleTypeOutput{})
	pulumi.RegisterOutputType(AssessmentRoleTypePtrOutput{})
}
