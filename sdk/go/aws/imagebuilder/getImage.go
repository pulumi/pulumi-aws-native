// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::ImageBuilder::Image
func LookupImage(ctx *pulumi.Context, args *LookupImageArgs, opts ...pulumi.InvokeOption) (*LookupImageResult, error) {
	var rv LookupImageResult
	err := ctx.Invoke("aws-native:imagebuilder:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupImageArgs struct {
	// The Amazon Resource Name (ARN) of the image.
	Arn string `pulumi:"arn"`
}

type LookupImageResult struct {
	// The Amazon Resource Name (ARN) of the image.
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
	ContainerRecipeArn *string `pulumi:"containerRecipeArn"`
	// The AMI ID of the EC2 AMI in current region.
	ImageId *string `pulumi:"imageId"`
	// The name of the image.
	Name *string `pulumi:"name"`
}

func LookupImageOutput(ctx *pulumi.Context, args LookupImageOutputArgs, opts ...pulumi.InvokeOption) LookupImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageResult, error) {
			args := v.(LookupImageArgs)
			r, err := LookupImage(ctx, &args, opts...)
			return *r, err
		}).(LookupImageResultOutput)
}

type LookupImageOutputArgs struct {
	// The Amazon Resource Name (ARN) of the image.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageArgs)(nil)).Elem()
}

type LookupImageResultOutput struct{ *pulumi.OutputState }

func (LookupImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageResult)(nil)).Elem()
}

func (o LookupImageResultOutput) ToLookupImageResultOutput() LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToLookupImageResultOutputWithContext(ctx context.Context) LookupImageResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the image.
func (o LookupImageResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
func (o LookupImageResultOutput) ContainerRecipeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageResult) *string { return v.ContainerRecipeArn }).(pulumi.StringPtrOutput)
}

// The AMI ID of the EC2 AMI in current region.
func (o LookupImageResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The name of the image.
func (o LookupImageResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageResultOutput{})
}
