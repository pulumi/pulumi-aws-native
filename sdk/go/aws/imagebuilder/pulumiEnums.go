// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The platform of the component.
type ComponentPlatform string

const (
	ComponentPlatformWindows = ComponentPlatform("Windows")
	ComponentPlatformLinux   = ComponentPlatform("Linux")
)

func (ComponentPlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentPlatform)(nil)).Elem()
}

func (e ComponentPlatform) ToComponentPlatformOutput() ComponentPlatformOutput {
	return pulumi.ToOutput(e).(ComponentPlatformOutput)
}

func (e ComponentPlatform) ToComponentPlatformOutputWithContext(ctx context.Context) ComponentPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComponentPlatformOutput)
}

func (e ComponentPlatform) ToComponentPlatformPtrOutput() ComponentPlatformPtrOutput {
	return e.ToComponentPlatformPtrOutputWithContext(context.Background())
}

func (e ComponentPlatform) ToComponentPlatformPtrOutputWithContext(ctx context.Context) ComponentPlatformPtrOutput {
	return ComponentPlatform(e).ToComponentPlatformOutputWithContext(ctx).ToComponentPlatformPtrOutputWithContext(ctx)
}

func (e ComponentPlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComponentPlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComponentPlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComponentPlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComponentPlatformOutput struct{ *pulumi.OutputState }

func (ComponentPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentPlatform)(nil)).Elem()
}

func (o ComponentPlatformOutput) ToComponentPlatformOutput() ComponentPlatformOutput {
	return o
}

func (o ComponentPlatformOutput) ToComponentPlatformOutputWithContext(ctx context.Context) ComponentPlatformOutput {
	return o
}

func (o ComponentPlatformOutput) ToComponentPlatformPtrOutput() ComponentPlatformPtrOutput {
	return o.ToComponentPlatformPtrOutputWithContext(context.Background())
}

func (o ComponentPlatformOutput) ToComponentPlatformPtrOutputWithContext(ctx context.Context) ComponentPlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentPlatform) *ComponentPlatform {
		return &v
	}).(ComponentPlatformPtrOutput)
}

func (o ComponentPlatformOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComponentPlatformOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComponentPlatform) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComponentPlatformOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComponentPlatformOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComponentPlatform) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComponentPlatformPtrOutput struct{ *pulumi.OutputState }

func (ComponentPlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentPlatform)(nil)).Elem()
}

func (o ComponentPlatformPtrOutput) ToComponentPlatformPtrOutput() ComponentPlatformPtrOutput {
	return o
}

func (o ComponentPlatformPtrOutput) ToComponentPlatformPtrOutputWithContext(ctx context.Context) ComponentPlatformPtrOutput {
	return o
}

func (o ComponentPlatformPtrOutput) Elem() ComponentPlatformOutput {
	return o.ApplyT(func(v *ComponentPlatform) ComponentPlatform {
		if v != nil {
			return *v
		}
		var ret ComponentPlatform
		return ret
	}).(ComponentPlatformOutput)
}

func (o ComponentPlatformPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComponentPlatformPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComponentPlatform) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComponentPlatformInput is an input type that accepts ComponentPlatformArgs and ComponentPlatformOutput values.
// You can construct a concrete instance of `ComponentPlatformInput` via:
//
//          ComponentPlatformArgs{...}
type ComponentPlatformInput interface {
	pulumi.Input

	ToComponentPlatformOutput() ComponentPlatformOutput
	ToComponentPlatformOutputWithContext(context.Context) ComponentPlatformOutput
}

var componentPlatformPtrType = reflect.TypeOf((**ComponentPlatform)(nil)).Elem()

type ComponentPlatformPtrInput interface {
	pulumi.Input

	ToComponentPlatformPtrOutput() ComponentPlatformPtrOutput
	ToComponentPlatformPtrOutputWithContext(context.Context) ComponentPlatformPtrOutput
}

type componentPlatformPtr string

func ComponentPlatformPtr(v string) ComponentPlatformPtrInput {
	return (*componentPlatformPtr)(&v)
}

func (*componentPlatformPtr) ElementType() reflect.Type {
	return componentPlatformPtrType
}

func (in *componentPlatformPtr) ToComponentPlatformPtrOutput() ComponentPlatformPtrOutput {
	return pulumi.ToOutput(in).(ComponentPlatformPtrOutput)
}

func (in *componentPlatformPtr) ToComponentPlatformPtrOutputWithContext(ctx context.Context) ComponentPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComponentPlatformPtrOutput)
}

// The type of the component denotes whether the component is used to build the image or only to test it.
type ComponentType string

const (
	ComponentTypeBuild = ComponentType("BUILD")
	ComponentTypeTest  = ComponentType("TEST")
)

func (ComponentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentType)(nil)).Elem()
}

func (e ComponentType) ToComponentTypeOutput() ComponentTypeOutput {
	return pulumi.ToOutput(e).(ComponentTypeOutput)
}

func (e ComponentType) ToComponentTypeOutputWithContext(ctx context.Context) ComponentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComponentTypeOutput)
}

func (e ComponentType) ToComponentTypePtrOutput() ComponentTypePtrOutput {
	return e.ToComponentTypePtrOutputWithContext(context.Background())
}

func (e ComponentType) ToComponentTypePtrOutputWithContext(ctx context.Context) ComponentTypePtrOutput {
	return ComponentType(e).ToComponentTypeOutputWithContext(ctx).ToComponentTypePtrOutputWithContext(ctx)
}

func (e ComponentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComponentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComponentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComponentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComponentTypeOutput struct{ *pulumi.OutputState }

func (ComponentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentType)(nil)).Elem()
}

func (o ComponentTypeOutput) ToComponentTypeOutput() ComponentTypeOutput {
	return o
}

func (o ComponentTypeOutput) ToComponentTypeOutputWithContext(ctx context.Context) ComponentTypeOutput {
	return o
}

func (o ComponentTypeOutput) ToComponentTypePtrOutput() ComponentTypePtrOutput {
	return o.ToComponentTypePtrOutputWithContext(context.Background())
}

func (o ComponentTypeOutput) ToComponentTypePtrOutputWithContext(ctx context.Context) ComponentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentType) *ComponentType {
		return &v
	}).(ComponentTypePtrOutput)
}

func (o ComponentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComponentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComponentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComponentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComponentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComponentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComponentTypePtrOutput struct{ *pulumi.OutputState }

func (ComponentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentType)(nil)).Elem()
}

func (o ComponentTypePtrOutput) ToComponentTypePtrOutput() ComponentTypePtrOutput {
	return o
}

func (o ComponentTypePtrOutput) ToComponentTypePtrOutputWithContext(ctx context.Context) ComponentTypePtrOutput {
	return o
}

func (o ComponentTypePtrOutput) Elem() ComponentTypeOutput {
	return o.ApplyT(func(v *ComponentType) ComponentType {
		if v != nil {
			return *v
		}
		var ret ComponentType
		return ret
	}).(ComponentTypeOutput)
}

func (o ComponentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComponentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComponentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComponentTypeInput is an input type that accepts ComponentTypeArgs and ComponentTypeOutput values.
// You can construct a concrete instance of `ComponentTypeInput` via:
//
//          ComponentTypeArgs{...}
type ComponentTypeInput interface {
	pulumi.Input

	ToComponentTypeOutput() ComponentTypeOutput
	ToComponentTypeOutputWithContext(context.Context) ComponentTypeOutput
}

var componentTypePtrType = reflect.TypeOf((**ComponentType)(nil)).Elem()

type ComponentTypePtrInput interface {
	pulumi.Input

	ToComponentTypePtrOutput() ComponentTypePtrOutput
	ToComponentTypePtrOutputWithContext(context.Context) ComponentTypePtrOutput
}

type componentTypePtr string

func ComponentTypePtr(v string) ComponentTypePtrInput {
	return (*componentTypePtr)(&v)
}

func (*componentTypePtr) ElementType() reflect.Type {
	return componentTypePtrType
}

func (in *componentTypePtr) ToComponentTypePtrOutput() ComponentTypePtrOutput {
	return pulumi.ToOutput(in).(ComponentTypePtrOutput)
}

func (in *componentTypePtr) ToComponentTypePtrOutputWithContext(ctx context.Context) ComponentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComponentTypePtrOutput)
}

// Specifies the type of container, such as Docker.
type ContainerRecipeContainerType string

const (
	ContainerRecipeContainerTypeDocker = ContainerRecipeContainerType("DOCKER")
)

func (ContainerRecipeContainerType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeContainerType)(nil)).Elem()
}

func (e ContainerRecipeContainerType) ToContainerRecipeContainerTypeOutput() ContainerRecipeContainerTypeOutput {
	return pulumi.ToOutput(e).(ContainerRecipeContainerTypeOutput)
}

func (e ContainerRecipeContainerType) ToContainerRecipeContainerTypeOutputWithContext(ctx context.Context) ContainerRecipeContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContainerRecipeContainerTypeOutput)
}

func (e ContainerRecipeContainerType) ToContainerRecipeContainerTypePtrOutput() ContainerRecipeContainerTypePtrOutput {
	return e.ToContainerRecipeContainerTypePtrOutputWithContext(context.Background())
}

func (e ContainerRecipeContainerType) ToContainerRecipeContainerTypePtrOutputWithContext(ctx context.Context) ContainerRecipeContainerTypePtrOutput {
	return ContainerRecipeContainerType(e).ToContainerRecipeContainerTypeOutputWithContext(ctx).ToContainerRecipeContainerTypePtrOutputWithContext(ctx)
}

func (e ContainerRecipeContainerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipeContainerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipeContainerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerRecipeContainerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContainerRecipeContainerTypeOutput struct{ *pulumi.OutputState }

func (ContainerRecipeContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeContainerType)(nil)).Elem()
}

func (o ContainerRecipeContainerTypeOutput) ToContainerRecipeContainerTypeOutput() ContainerRecipeContainerTypeOutput {
	return o
}

func (o ContainerRecipeContainerTypeOutput) ToContainerRecipeContainerTypeOutputWithContext(ctx context.Context) ContainerRecipeContainerTypeOutput {
	return o
}

func (o ContainerRecipeContainerTypeOutput) ToContainerRecipeContainerTypePtrOutput() ContainerRecipeContainerTypePtrOutput {
	return o.ToContainerRecipeContainerTypePtrOutputWithContext(context.Background())
}

func (o ContainerRecipeContainerTypeOutput) ToContainerRecipeContainerTypePtrOutputWithContext(ctx context.Context) ContainerRecipeContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipeContainerType) *ContainerRecipeContainerType {
		return &v
	}).(ContainerRecipeContainerTypePtrOutput)
}

func (o ContainerRecipeContainerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContainerRecipeContainerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipeContainerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContainerRecipeContainerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeContainerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipeContainerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContainerRecipeContainerTypePtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipeContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeContainerType)(nil)).Elem()
}

func (o ContainerRecipeContainerTypePtrOutput) ToContainerRecipeContainerTypePtrOutput() ContainerRecipeContainerTypePtrOutput {
	return o
}

func (o ContainerRecipeContainerTypePtrOutput) ToContainerRecipeContainerTypePtrOutputWithContext(ctx context.Context) ContainerRecipeContainerTypePtrOutput {
	return o
}

func (o ContainerRecipeContainerTypePtrOutput) Elem() ContainerRecipeContainerTypeOutput {
	return o.ApplyT(func(v *ContainerRecipeContainerType) ContainerRecipeContainerType {
		if v != nil {
			return *v
		}
		var ret ContainerRecipeContainerType
		return ret
	}).(ContainerRecipeContainerTypeOutput)
}

func (o ContainerRecipeContainerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeContainerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContainerRecipeContainerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContainerRecipeContainerTypeInput is an input type that accepts ContainerRecipeContainerTypeArgs and ContainerRecipeContainerTypeOutput values.
// You can construct a concrete instance of `ContainerRecipeContainerTypeInput` via:
//
//          ContainerRecipeContainerTypeArgs{...}
type ContainerRecipeContainerTypeInput interface {
	pulumi.Input

	ToContainerRecipeContainerTypeOutput() ContainerRecipeContainerTypeOutput
	ToContainerRecipeContainerTypeOutputWithContext(context.Context) ContainerRecipeContainerTypeOutput
}

var containerRecipeContainerTypePtrType = reflect.TypeOf((**ContainerRecipeContainerType)(nil)).Elem()

type ContainerRecipeContainerTypePtrInput interface {
	pulumi.Input

	ToContainerRecipeContainerTypePtrOutput() ContainerRecipeContainerTypePtrOutput
	ToContainerRecipeContainerTypePtrOutputWithContext(context.Context) ContainerRecipeContainerTypePtrOutput
}

type containerRecipeContainerTypePtr string

func ContainerRecipeContainerTypePtr(v string) ContainerRecipeContainerTypePtrInput {
	return (*containerRecipeContainerTypePtr)(&v)
}

func (*containerRecipeContainerTypePtr) ElementType() reflect.Type {
	return containerRecipeContainerTypePtrType
}

func (in *containerRecipeContainerTypePtr) ToContainerRecipeContainerTypePtrOutput() ContainerRecipeContainerTypePtrOutput {
	return pulumi.ToOutput(in).(ContainerRecipeContainerTypePtrOutput)
}

func (in *containerRecipeContainerTypePtr) ToContainerRecipeContainerTypePtrOutputWithContext(ctx context.Context) ContainerRecipeContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContainerRecipeContainerTypePtrOutput)
}

// Use to override the device's volume type.
type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType string

const (
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeStandard = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("standard")
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeIo1      = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("io1")
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeIo2      = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("io2")
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeGp2      = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("gp2")
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeGp3      = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("gp3")
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeSc1      = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("sc1")
	ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeSt1      = ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType("st1")
)

func (ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return pulumi.ToOutput(e).(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput)
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(ctx context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput)
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return e.ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(context.Background())
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType(e).ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(ctx).ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx)
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput struct{ *pulumi.OutputState }

func (ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return o
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(ctx context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return o
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o.ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(context.Background())
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) *ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType {
		return &v
	}).(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput)
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) Elem() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return o.ApplyT(func(v *ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType {
		if v != nil {
			return *v
		}
		var ret ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType
		return ret
	}).(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput)
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeInput is an input type that accepts ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeArgs and ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput values.
// You can construct a concrete instance of `ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeInput` via:
//
//          ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeArgs{...}
type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeInput interface {
	pulumi.Input

	ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput
	ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput
}

var containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrType = reflect.TypeOf((**ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()

type ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrInput interface {
	pulumi.Input

	ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput
	ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput
}

type containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr string

func ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr(v string) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrInput {
	return (*containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr)(&v)
}

func (*containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr) ElementType() reflect.Type {
	return containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrType
}

func (in *containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return pulumi.ToOutput(in).(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput)
}

func (in *containerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr) ToContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput)
}

// Specifies the operating system platform when you use a custom source image.
type ContainerRecipePlatformOverride string

const (
	ContainerRecipePlatformOverrideWindows = ContainerRecipePlatformOverride("Windows")
	ContainerRecipePlatformOverrideLinux   = ContainerRecipePlatformOverride("Linux")
)

func (ContainerRecipePlatformOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipePlatformOverride)(nil)).Elem()
}

func (e ContainerRecipePlatformOverride) ToContainerRecipePlatformOverrideOutput() ContainerRecipePlatformOverrideOutput {
	return pulumi.ToOutput(e).(ContainerRecipePlatformOverrideOutput)
}

func (e ContainerRecipePlatformOverride) ToContainerRecipePlatformOverrideOutputWithContext(ctx context.Context) ContainerRecipePlatformOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContainerRecipePlatformOverrideOutput)
}

func (e ContainerRecipePlatformOverride) ToContainerRecipePlatformOverridePtrOutput() ContainerRecipePlatformOverridePtrOutput {
	return e.ToContainerRecipePlatformOverridePtrOutputWithContext(context.Background())
}

func (e ContainerRecipePlatformOverride) ToContainerRecipePlatformOverridePtrOutputWithContext(ctx context.Context) ContainerRecipePlatformOverridePtrOutput {
	return ContainerRecipePlatformOverride(e).ToContainerRecipePlatformOverrideOutputWithContext(ctx).ToContainerRecipePlatformOverridePtrOutputWithContext(ctx)
}

func (e ContainerRecipePlatformOverride) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipePlatformOverride) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipePlatformOverride) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerRecipePlatformOverride) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContainerRecipePlatformOverrideOutput struct{ *pulumi.OutputState }

func (ContainerRecipePlatformOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipePlatformOverride)(nil)).Elem()
}

func (o ContainerRecipePlatformOverrideOutput) ToContainerRecipePlatformOverrideOutput() ContainerRecipePlatformOverrideOutput {
	return o
}

func (o ContainerRecipePlatformOverrideOutput) ToContainerRecipePlatformOverrideOutputWithContext(ctx context.Context) ContainerRecipePlatformOverrideOutput {
	return o
}

func (o ContainerRecipePlatformOverrideOutput) ToContainerRecipePlatformOverridePtrOutput() ContainerRecipePlatformOverridePtrOutput {
	return o.ToContainerRecipePlatformOverridePtrOutputWithContext(context.Background())
}

func (o ContainerRecipePlatformOverrideOutput) ToContainerRecipePlatformOverridePtrOutputWithContext(ctx context.Context) ContainerRecipePlatformOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipePlatformOverride) *ContainerRecipePlatformOverride {
		return &v
	}).(ContainerRecipePlatformOverridePtrOutput)
}

func (o ContainerRecipePlatformOverrideOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContainerRecipePlatformOverrideOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipePlatformOverride) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContainerRecipePlatformOverrideOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipePlatformOverrideOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipePlatformOverride) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContainerRecipePlatformOverridePtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipePlatformOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipePlatformOverride)(nil)).Elem()
}

func (o ContainerRecipePlatformOverridePtrOutput) ToContainerRecipePlatformOverridePtrOutput() ContainerRecipePlatformOverridePtrOutput {
	return o
}

func (o ContainerRecipePlatformOverridePtrOutput) ToContainerRecipePlatformOverridePtrOutputWithContext(ctx context.Context) ContainerRecipePlatformOverridePtrOutput {
	return o
}

func (o ContainerRecipePlatformOverridePtrOutput) Elem() ContainerRecipePlatformOverrideOutput {
	return o.ApplyT(func(v *ContainerRecipePlatformOverride) ContainerRecipePlatformOverride {
		if v != nil {
			return *v
		}
		var ret ContainerRecipePlatformOverride
		return ret
	}).(ContainerRecipePlatformOverrideOutput)
}

func (o ContainerRecipePlatformOverridePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipePlatformOverridePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContainerRecipePlatformOverride) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContainerRecipePlatformOverrideInput is an input type that accepts ContainerRecipePlatformOverrideArgs and ContainerRecipePlatformOverrideOutput values.
// You can construct a concrete instance of `ContainerRecipePlatformOverrideInput` via:
//
//          ContainerRecipePlatformOverrideArgs{...}
type ContainerRecipePlatformOverrideInput interface {
	pulumi.Input

	ToContainerRecipePlatformOverrideOutput() ContainerRecipePlatformOverrideOutput
	ToContainerRecipePlatformOverrideOutputWithContext(context.Context) ContainerRecipePlatformOverrideOutput
}

var containerRecipePlatformOverridePtrType = reflect.TypeOf((**ContainerRecipePlatformOverride)(nil)).Elem()

type ContainerRecipePlatformOverridePtrInput interface {
	pulumi.Input

	ToContainerRecipePlatformOverridePtrOutput() ContainerRecipePlatformOverridePtrOutput
	ToContainerRecipePlatformOverridePtrOutputWithContext(context.Context) ContainerRecipePlatformOverridePtrOutput
}

type containerRecipePlatformOverridePtr string

func ContainerRecipePlatformOverridePtr(v string) ContainerRecipePlatformOverridePtrInput {
	return (*containerRecipePlatformOverridePtr)(&v)
}

func (*containerRecipePlatformOverridePtr) ElementType() reflect.Type {
	return containerRecipePlatformOverridePtrType
}

func (in *containerRecipePlatformOverridePtr) ToContainerRecipePlatformOverridePtrOutput() ContainerRecipePlatformOverridePtrOutput {
	return pulumi.ToOutput(in).(ContainerRecipePlatformOverridePtrOutput)
}

func (in *containerRecipePlatformOverridePtr) ToContainerRecipePlatformOverridePtrOutputWithContext(ctx context.Context) ContainerRecipePlatformOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContainerRecipePlatformOverridePtrOutput)
}

// Specifies the service in which this image was registered.
type ContainerRecipeTargetContainerRepositoryService string

const (
	ContainerRecipeTargetContainerRepositoryServiceEcr = ContainerRecipeTargetContainerRepositoryService("ECR")
)

func (ContainerRecipeTargetContainerRepositoryService) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeTargetContainerRepositoryService)(nil)).Elem()
}

func (e ContainerRecipeTargetContainerRepositoryService) ToContainerRecipeTargetContainerRepositoryServiceOutput() ContainerRecipeTargetContainerRepositoryServiceOutput {
	return pulumi.ToOutput(e).(ContainerRecipeTargetContainerRepositoryServiceOutput)
}

func (e ContainerRecipeTargetContainerRepositoryService) ToContainerRecipeTargetContainerRepositoryServiceOutputWithContext(ctx context.Context) ContainerRecipeTargetContainerRepositoryServiceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContainerRecipeTargetContainerRepositoryServiceOutput)
}

func (e ContainerRecipeTargetContainerRepositoryService) ToContainerRecipeTargetContainerRepositoryServicePtrOutput() ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return e.ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(context.Background())
}

func (e ContainerRecipeTargetContainerRepositoryService) ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return ContainerRecipeTargetContainerRepositoryService(e).ToContainerRecipeTargetContainerRepositoryServiceOutputWithContext(ctx).ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(ctx)
}

func (e ContainerRecipeTargetContainerRepositoryService) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipeTargetContainerRepositoryService) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerRecipeTargetContainerRepositoryService) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerRecipeTargetContainerRepositoryService) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContainerRecipeTargetContainerRepositoryServiceOutput struct{ *pulumi.OutputState }

func (ContainerRecipeTargetContainerRepositoryServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeTargetContainerRepositoryService)(nil)).Elem()
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToContainerRecipeTargetContainerRepositoryServiceOutput() ContainerRecipeTargetContainerRepositoryServiceOutput {
	return o
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToContainerRecipeTargetContainerRepositoryServiceOutputWithContext(ctx context.Context) ContainerRecipeTargetContainerRepositoryServiceOutput {
	return o
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToContainerRecipeTargetContainerRepositoryServicePtrOutput() ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return o.ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(context.Background())
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipeTargetContainerRepositoryService) *ContainerRecipeTargetContainerRepositoryService {
		return &v
	}).(ContainerRecipeTargetContainerRepositoryServicePtrOutput)
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipeTargetContainerRepositoryService) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeTargetContainerRepositoryServiceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerRecipeTargetContainerRepositoryService) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContainerRecipeTargetContainerRepositoryServicePtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipeTargetContainerRepositoryServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeTargetContainerRepositoryService)(nil)).Elem()
}

func (o ContainerRecipeTargetContainerRepositoryServicePtrOutput) ToContainerRecipeTargetContainerRepositoryServicePtrOutput() ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return o
}

func (o ContainerRecipeTargetContainerRepositoryServicePtrOutput) ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return o
}

func (o ContainerRecipeTargetContainerRepositoryServicePtrOutput) Elem() ContainerRecipeTargetContainerRepositoryServiceOutput {
	return o.ApplyT(func(v *ContainerRecipeTargetContainerRepositoryService) ContainerRecipeTargetContainerRepositoryService {
		if v != nil {
			return *v
		}
		var ret ContainerRecipeTargetContainerRepositoryService
		return ret
	}).(ContainerRecipeTargetContainerRepositoryServiceOutput)
}

func (o ContainerRecipeTargetContainerRepositoryServicePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeTargetContainerRepositoryServicePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContainerRecipeTargetContainerRepositoryService) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContainerRecipeTargetContainerRepositoryServiceInput is an input type that accepts ContainerRecipeTargetContainerRepositoryServiceArgs and ContainerRecipeTargetContainerRepositoryServiceOutput values.
// You can construct a concrete instance of `ContainerRecipeTargetContainerRepositoryServiceInput` via:
//
//          ContainerRecipeTargetContainerRepositoryServiceArgs{...}
type ContainerRecipeTargetContainerRepositoryServiceInput interface {
	pulumi.Input

	ToContainerRecipeTargetContainerRepositoryServiceOutput() ContainerRecipeTargetContainerRepositoryServiceOutput
	ToContainerRecipeTargetContainerRepositoryServiceOutputWithContext(context.Context) ContainerRecipeTargetContainerRepositoryServiceOutput
}

var containerRecipeTargetContainerRepositoryServicePtrType = reflect.TypeOf((**ContainerRecipeTargetContainerRepositoryService)(nil)).Elem()

type ContainerRecipeTargetContainerRepositoryServicePtrInput interface {
	pulumi.Input

	ToContainerRecipeTargetContainerRepositoryServicePtrOutput() ContainerRecipeTargetContainerRepositoryServicePtrOutput
	ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(context.Context) ContainerRecipeTargetContainerRepositoryServicePtrOutput
}

type containerRecipeTargetContainerRepositoryServicePtr string

func ContainerRecipeTargetContainerRepositoryServicePtr(v string) ContainerRecipeTargetContainerRepositoryServicePtrInput {
	return (*containerRecipeTargetContainerRepositoryServicePtr)(&v)
}

func (*containerRecipeTargetContainerRepositoryServicePtr) ElementType() reflect.Type {
	return containerRecipeTargetContainerRepositoryServicePtrType
}

func (in *containerRecipeTargetContainerRepositoryServicePtr) ToContainerRecipeTargetContainerRepositoryServicePtrOutput() ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return pulumi.ToOutput(in).(ContainerRecipeTargetContainerRepositoryServicePtrOutput)
}

func (in *containerRecipeTargetContainerRepositoryServicePtr) ToContainerRecipeTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) ContainerRecipeTargetContainerRepositoryServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContainerRecipeTargetContainerRepositoryServicePtrOutput)
}

// The service of target container repository.
type DistributionConfigurationTargetContainerRepositoryService string

const (
	DistributionConfigurationTargetContainerRepositoryServiceEcr = DistributionConfigurationTargetContainerRepositoryService("ECR")
)

func (DistributionConfigurationTargetContainerRepositoryService) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationTargetContainerRepositoryService)(nil)).Elem()
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToDistributionConfigurationTargetContainerRepositoryServiceOutput() DistributionConfigurationTargetContainerRepositoryServiceOutput {
	return pulumi.ToOutput(e).(DistributionConfigurationTargetContainerRepositoryServiceOutput)
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToDistributionConfigurationTargetContainerRepositoryServiceOutputWithContext(ctx context.Context) DistributionConfigurationTargetContainerRepositoryServiceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DistributionConfigurationTargetContainerRepositoryServiceOutput)
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutput() DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return e.ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(context.Background())
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return DistributionConfigurationTargetContainerRepositoryService(e).ToDistributionConfigurationTargetContainerRepositoryServiceOutputWithContext(ctx).ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(ctx)
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DistributionConfigurationTargetContainerRepositoryService) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DistributionConfigurationTargetContainerRepositoryServiceOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationTargetContainerRepositoryServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationTargetContainerRepositoryService)(nil)).Elem()
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToDistributionConfigurationTargetContainerRepositoryServiceOutput() DistributionConfigurationTargetContainerRepositoryServiceOutput {
	return o
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToDistributionConfigurationTargetContainerRepositoryServiceOutputWithContext(ctx context.Context) DistributionConfigurationTargetContainerRepositoryServiceOutput {
	return o
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutput() DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return o.ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionConfigurationTargetContainerRepositoryService) *DistributionConfigurationTargetContainerRepositoryService {
		return &v
	}).(DistributionConfigurationTargetContainerRepositoryServicePtrOutput)
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionConfigurationTargetContainerRepositoryService) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationTargetContainerRepositoryServiceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionConfigurationTargetContainerRepositoryService) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DistributionConfigurationTargetContainerRepositoryServicePtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationTargetContainerRepositoryServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationTargetContainerRepositoryService)(nil)).Elem()
}

func (o DistributionConfigurationTargetContainerRepositoryServicePtrOutput) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutput() DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return o
}

func (o DistributionConfigurationTargetContainerRepositoryServicePtrOutput) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return o
}

func (o DistributionConfigurationTargetContainerRepositoryServicePtrOutput) Elem() DistributionConfigurationTargetContainerRepositoryServiceOutput {
	return o.ApplyT(func(v *DistributionConfigurationTargetContainerRepositoryService) DistributionConfigurationTargetContainerRepositoryService {
		if v != nil {
			return *v
		}
		var ret DistributionConfigurationTargetContainerRepositoryService
		return ret
	}).(DistributionConfigurationTargetContainerRepositoryServiceOutput)
}

func (o DistributionConfigurationTargetContainerRepositoryServicePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationTargetContainerRepositoryServicePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DistributionConfigurationTargetContainerRepositoryService) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DistributionConfigurationTargetContainerRepositoryServiceInput is an input type that accepts DistributionConfigurationTargetContainerRepositoryServiceArgs and DistributionConfigurationTargetContainerRepositoryServiceOutput values.
// You can construct a concrete instance of `DistributionConfigurationTargetContainerRepositoryServiceInput` via:
//
//          DistributionConfigurationTargetContainerRepositoryServiceArgs{...}
type DistributionConfigurationTargetContainerRepositoryServiceInput interface {
	pulumi.Input

	ToDistributionConfigurationTargetContainerRepositoryServiceOutput() DistributionConfigurationTargetContainerRepositoryServiceOutput
	ToDistributionConfigurationTargetContainerRepositoryServiceOutputWithContext(context.Context) DistributionConfigurationTargetContainerRepositoryServiceOutput
}

var distributionConfigurationTargetContainerRepositoryServicePtrType = reflect.TypeOf((**DistributionConfigurationTargetContainerRepositoryService)(nil)).Elem()

type DistributionConfigurationTargetContainerRepositoryServicePtrInput interface {
	pulumi.Input

	ToDistributionConfigurationTargetContainerRepositoryServicePtrOutput() DistributionConfigurationTargetContainerRepositoryServicePtrOutput
	ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(context.Context) DistributionConfigurationTargetContainerRepositoryServicePtrOutput
}

type distributionConfigurationTargetContainerRepositoryServicePtr string

func DistributionConfigurationTargetContainerRepositoryServicePtr(v string) DistributionConfigurationTargetContainerRepositoryServicePtrInput {
	return (*distributionConfigurationTargetContainerRepositoryServicePtr)(&v)
}

func (*distributionConfigurationTargetContainerRepositoryServicePtr) ElementType() reflect.Type {
	return distributionConfigurationTargetContainerRepositoryServicePtrType
}

func (in *distributionConfigurationTargetContainerRepositoryServicePtr) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutput() DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return pulumi.ToOutput(in).(DistributionConfigurationTargetContainerRepositoryServicePtrOutput)
}

func (in *distributionConfigurationTargetContainerRepositoryServicePtr) ToDistributionConfigurationTargetContainerRepositoryServicePtrOutputWithContext(ctx context.Context) DistributionConfigurationTargetContainerRepositoryServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DistributionConfigurationTargetContainerRepositoryServicePtrOutput)
}

// The condition configures when the pipeline should trigger a new image build.
type ImagePipelineSchedulePipelineExecutionStartCondition string

const (
	ImagePipelineSchedulePipelineExecutionStartConditionExpressionMatchOnly                          = ImagePipelineSchedulePipelineExecutionStartCondition("EXPRESSION_MATCH_ONLY")
	ImagePipelineSchedulePipelineExecutionStartConditionExpressionMatchAndDependencyUpdatesAvailable = ImagePipelineSchedulePipelineExecutionStartCondition("EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE")
)

func (ImagePipelineSchedulePipelineExecutionStartCondition) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineSchedulePipelineExecutionStartCondition)(nil)).Elem()
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToImagePipelineSchedulePipelineExecutionStartConditionOutput() ImagePipelineSchedulePipelineExecutionStartConditionOutput {
	return pulumi.ToOutput(e).(ImagePipelineSchedulePipelineExecutionStartConditionOutput)
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToImagePipelineSchedulePipelineExecutionStartConditionOutputWithContext(ctx context.Context) ImagePipelineSchedulePipelineExecutionStartConditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImagePipelineSchedulePipelineExecutionStartConditionOutput)
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutput() ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return e.ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(context.Background())
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return ImagePipelineSchedulePipelineExecutionStartCondition(e).ToImagePipelineSchedulePipelineExecutionStartConditionOutputWithContext(ctx).ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(ctx)
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImagePipelineSchedulePipelineExecutionStartCondition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImagePipelineSchedulePipelineExecutionStartConditionOutput struct{ *pulumi.OutputState }

func (ImagePipelineSchedulePipelineExecutionStartConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineSchedulePipelineExecutionStartCondition)(nil)).Elem()
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToImagePipelineSchedulePipelineExecutionStartConditionOutput() ImagePipelineSchedulePipelineExecutionStartConditionOutput {
	return o
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToImagePipelineSchedulePipelineExecutionStartConditionOutputWithContext(ctx context.Context) ImagePipelineSchedulePipelineExecutionStartConditionOutput {
	return o
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutput() ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return o.ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(context.Background())
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagePipelineSchedulePipelineExecutionStartCondition) *ImagePipelineSchedulePipelineExecutionStartCondition {
		return &v
	}).(ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput)
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagePipelineSchedulePipelineExecutionStartCondition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagePipelineSchedulePipelineExecutionStartCondition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput struct{ *pulumi.OutputState }

func (ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipelineSchedulePipelineExecutionStartCondition)(nil)).Elem()
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutput() ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return o
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return o
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput) Elem() ImagePipelineSchedulePipelineExecutionStartConditionOutput {
	return o.ApplyT(func(v *ImagePipelineSchedulePipelineExecutionStartCondition) ImagePipelineSchedulePipelineExecutionStartCondition {
		if v != nil {
			return *v
		}
		var ret ImagePipelineSchedulePipelineExecutionStartCondition
		return ret
	}).(ImagePipelineSchedulePipelineExecutionStartConditionOutput)
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImagePipelineSchedulePipelineExecutionStartCondition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImagePipelineSchedulePipelineExecutionStartConditionInput is an input type that accepts ImagePipelineSchedulePipelineExecutionStartConditionArgs and ImagePipelineSchedulePipelineExecutionStartConditionOutput values.
// You can construct a concrete instance of `ImagePipelineSchedulePipelineExecutionStartConditionInput` via:
//
//          ImagePipelineSchedulePipelineExecutionStartConditionArgs{...}
type ImagePipelineSchedulePipelineExecutionStartConditionInput interface {
	pulumi.Input

	ToImagePipelineSchedulePipelineExecutionStartConditionOutput() ImagePipelineSchedulePipelineExecutionStartConditionOutput
	ToImagePipelineSchedulePipelineExecutionStartConditionOutputWithContext(context.Context) ImagePipelineSchedulePipelineExecutionStartConditionOutput
}

var imagePipelineSchedulePipelineExecutionStartConditionPtrType = reflect.TypeOf((**ImagePipelineSchedulePipelineExecutionStartCondition)(nil)).Elem()

type ImagePipelineSchedulePipelineExecutionStartConditionPtrInput interface {
	pulumi.Input

	ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutput() ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput
	ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(context.Context) ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput
}

type imagePipelineSchedulePipelineExecutionStartConditionPtr string

func ImagePipelineSchedulePipelineExecutionStartConditionPtr(v string) ImagePipelineSchedulePipelineExecutionStartConditionPtrInput {
	return (*imagePipelineSchedulePipelineExecutionStartConditionPtr)(&v)
}

func (*imagePipelineSchedulePipelineExecutionStartConditionPtr) ElementType() reflect.Type {
	return imagePipelineSchedulePipelineExecutionStartConditionPtrType
}

func (in *imagePipelineSchedulePipelineExecutionStartConditionPtr) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutput() ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return pulumi.ToOutput(in).(ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput)
}

func (in *imagePipelineSchedulePipelineExecutionStartConditionPtr) ToImagePipelineSchedulePipelineExecutionStartConditionPtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput)
}

// The status of the image pipeline.
type ImagePipelineStatus string

const (
	ImagePipelineStatusDisabled = ImagePipelineStatus("DISABLED")
	ImagePipelineStatusEnabled  = ImagePipelineStatus("ENABLED")
)

func (ImagePipelineStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineStatus)(nil)).Elem()
}

func (e ImagePipelineStatus) ToImagePipelineStatusOutput() ImagePipelineStatusOutput {
	return pulumi.ToOutput(e).(ImagePipelineStatusOutput)
}

func (e ImagePipelineStatus) ToImagePipelineStatusOutputWithContext(ctx context.Context) ImagePipelineStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImagePipelineStatusOutput)
}

func (e ImagePipelineStatus) ToImagePipelineStatusPtrOutput() ImagePipelineStatusPtrOutput {
	return e.ToImagePipelineStatusPtrOutputWithContext(context.Background())
}

func (e ImagePipelineStatus) ToImagePipelineStatusPtrOutputWithContext(ctx context.Context) ImagePipelineStatusPtrOutput {
	return ImagePipelineStatus(e).ToImagePipelineStatusOutputWithContext(ctx).ToImagePipelineStatusPtrOutputWithContext(ctx)
}

func (e ImagePipelineStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagePipelineStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagePipelineStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImagePipelineStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImagePipelineStatusOutput struct{ *pulumi.OutputState }

func (ImagePipelineStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineStatus)(nil)).Elem()
}

func (o ImagePipelineStatusOutput) ToImagePipelineStatusOutput() ImagePipelineStatusOutput {
	return o
}

func (o ImagePipelineStatusOutput) ToImagePipelineStatusOutputWithContext(ctx context.Context) ImagePipelineStatusOutput {
	return o
}

func (o ImagePipelineStatusOutput) ToImagePipelineStatusPtrOutput() ImagePipelineStatusPtrOutput {
	return o.ToImagePipelineStatusPtrOutputWithContext(context.Background())
}

func (o ImagePipelineStatusOutput) ToImagePipelineStatusPtrOutputWithContext(ctx context.Context) ImagePipelineStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagePipelineStatus) *ImagePipelineStatus {
		return &v
	}).(ImagePipelineStatusPtrOutput)
}

func (o ImagePipelineStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImagePipelineStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagePipelineStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImagePipelineStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagePipelineStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagePipelineStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImagePipelineStatusPtrOutput struct{ *pulumi.OutputState }

func (ImagePipelineStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipelineStatus)(nil)).Elem()
}

func (o ImagePipelineStatusPtrOutput) ToImagePipelineStatusPtrOutput() ImagePipelineStatusPtrOutput {
	return o
}

func (o ImagePipelineStatusPtrOutput) ToImagePipelineStatusPtrOutputWithContext(ctx context.Context) ImagePipelineStatusPtrOutput {
	return o
}

func (o ImagePipelineStatusPtrOutput) Elem() ImagePipelineStatusOutput {
	return o.ApplyT(func(v *ImagePipelineStatus) ImagePipelineStatus {
		if v != nil {
			return *v
		}
		var ret ImagePipelineStatus
		return ret
	}).(ImagePipelineStatusOutput)
}

func (o ImagePipelineStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagePipelineStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImagePipelineStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImagePipelineStatusInput is an input type that accepts ImagePipelineStatusArgs and ImagePipelineStatusOutput values.
// You can construct a concrete instance of `ImagePipelineStatusInput` via:
//
//          ImagePipelineStatusArgs{...}
type ImagePipelineStatusInput interface {
	pulumi.Input

	ToImagePipelineStatusOutput() ImagePipelineStatusOutput
	ToImagePipelineStatusOutputWithContext(context.Context) ImagePipelineStatusOutput
}

var imagePipelineStatusPtrType = reflect.TypeOf((**ImagePipelineStatus)(nil)).Elem()

type ImagePipelineStatusPtrInput interface {
	pulumi.Input

	ToImagePipelineStatusPtrOutput() ImagePipelineStatusPtrOutput
	ToImagePipelineStatusPtrOutputWithContext(context.Context) ImagePipelineStatusPtrOutput
}

type imagePipelineStatusPtr string

func ImagePipelineStatusPtr(v string) ImagePipelineStatusPtrInput {
	return (*imagePipelineStatusPtr)(&v)
}

func (*imagePipelineStatusPtr) ElementType() reflect.Type {
	return imagePipelineStatusPtrType
}

func (in *imagePipelineStatusPtr) ToImagePipelineStatusPtrOutput() ImagePipelineStatusPtrOutput {
	return pulumi.ToOutput(in).(ImagePipelineStatusPtrOutput)
}

func (in *imagePipelineStatusPtr) ToImagePipelineStatusPtrOutputWithContext(ctx context.Context) ImagePipelineStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImagePipelineStatusPtrOutput)
}

// Use to override the device's volume type.
type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType string

const (
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeStandard = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("standard")
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeIo1      = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("io1")
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeIo2      = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("io2")
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeGp2      = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("gp2")
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeGp3      = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("gp3")
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeSc1      = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("sc1")
	ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeSt1      = ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType("st1")
)

func (ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return pulumi.ToOutput(e).(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput)
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(ctx context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput)
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return e.ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(context.Background())
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType(e).ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(ctx).ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx)
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput struct{ *pulumi.OutputState }

func (ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return o
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(ctx context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return o
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o.ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(context.Background())
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) *ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType {
		return &v
	}).(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput)
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput struct{ *pulumi.OutputState }

func (ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return o
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) Elem() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput {
	return o.ApplyT(func(v *ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType {
		if v != nil {
			return *v
		}
		var ret ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType
		return ret
	}).(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput)
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeInput is an input type that accepts ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeArgs and ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput values.
// You can construct a concrete instance of `ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeInput` via:
//
//          ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeArgs{...}
type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeInput interface {
	pulumi.Input

	ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput
	ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutputWithContext(context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput
}

var imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrType = reflect.TypeOf((**ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType)(nil)).Elem()

type ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrInput interface {
	pulumi.Input

	ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput
	ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput
}

type imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr string

func ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr(v string) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrInput {
	return (*imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr)(&v)
}

func (*imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr) ElementType() reflect.Type {
	return imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrType
}

func (in *imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput() ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return pulumi.ToOutput(in).(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput)
}

func (in *imageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtr) ToImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutputWithContext(ctx context.Context) ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput)
}

// Indicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:
type InfrastructureConfigurationInstanceMetadataOptionsHttpTokens string

const (
	InfrastructureConfigurationInstanceMetadataOptionsHttpTokensRequired = InfrastructureConfigurationInstanceMetadataOptionsHttpTokens("required")
	InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOptional = InfrastructureConfigurationInstanceMetadataOptionsHttpTokens("optional")
)

func (InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationInstanceMetadataOptionsHttpTokens)(nil)).Elem()
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput {
	return pulumi.ToOutput(e).(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput)
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput)
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return e.ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(context.Background())
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return InfrastructureConfigurationInstanceMetadataOptionsHttpTokens(e).ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutputWithContext(ctx).ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(ctx)
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationInstanceMetadataOptionsHttpTokens)(nil)).Elem()
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return o.ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) *InfrastructureConfigurationInstanceMetadataOptionsHttpTokens {
		return &v
	}).(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput)
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationInstanceMetadataOptionsHttpTokens)(nil)).Elem()
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput) Elem() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) InfrastructureConfigurationInstanceMetadataOptionsHttpTokens {
		if v != nil {
			return *v
		}
		var ret InfrastructureConfigurationInstanceMetadataOptionsHttpTokens
		return ret
	}).(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput)
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InfrastructureConfigurationInstanceMetadataOptionsHttpTokens) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InfrastructureConfigurationInstanceMetadataOptionsHttpTokensInput is an input type that accepts InfrastructureConfigurationInstanceMetadataOptionsHttpTokensArgs and InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationInstanceMetadataOptionsHttpTokensInput` via:
//
//          InfrastructureConfigurationInstanceMetadataOptionsHttpTokensArgs{...}
type InfrastructureConfigurationInstanceMetadataOptionsHttpTokensInput interface {
	pulumi.Input

	ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput
	ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutputWithContext(context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput
}

var infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrType = reflect.TypeOf((**InfrastructureConfigurationInstanceMetadataOptionsHttpTokens)(nil)).Elem()

type InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrInput interface {
	pulumi.Input

	ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput
	ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput
}

type infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtr string

func InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtr(v string) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrInput {
	return (*infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtr)(&v)
}

func (*infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtr) ElementType() reflect.Type {
	return infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrType
}

func (in *infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtr) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return pulumi.ToOutput(in).(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput)
}

func (in *infrastructureConfigurationInstanceMetadataOptionsHttpTokensPtr) ToInfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ComponentPlatformOutput{})
	pulumi.RegisterOutputType(ComponentPlatformPtrOutput{})
	pulumi.RegisterOutputType(ComponentTypeOutput{})
	pulumi.RegisterOutputType(ComponentTypePtrOutput{})
	pulumi.RegisterOutputType(ContainerRecipeContainerTypeOutput{})
	pulumi.RegisterOutputType(ContainerRecipeContainerTypePtrOutput{})
	pulumi.RegisterOutputType(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput{})
	pulumi.RegisterOutputType(ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput{})
	pulumi.RegisterOutputType(ContainerRecipePlatformOverrideOutput{})
	pulumi.RegisterOutputType(ContainerRecipePlatformOverridePtrOutput{})
	pulumi.RegisterOutputType(ContainerRecipeTargetContainerRepositoryServiceOutput{})
	pulumi.RegisterOutputType(ContainerRecipeTargetContainerRepositoryServicePtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationTargetContainerRepositoryServiceOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationTargetContainerRepositoryServicePtrOutput{})
	pulumi.RegisterOutputType(ImagePipelineSchedulePipelineExecutionStartConditionOutput{})
	pulumi.RegisterOutputType(ImagePipelineSchedulePipelineExecutionStartConditionPtrOutput{})
	pulumi.RegisterOutputType(ImagePipelineStatusOutput{})
	pulumi.RegisterOutputType(ImagePipelineStatusPtrOutput{})
	pulumi.RegisterOutputType(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypeOutput{})
	pulumi.RegisterOutputType(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeTypePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationInstanceMetadataOptionsHttpTokensPtrOutput{})
}
