// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package stepfunctions

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for StateMachine
type StateMachine struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                          `pulumi:"arn"`
	Definition              StateMachineDefinitionPtrOutput              `pulumi:"definition"`
	DefinitionS3Location    StateMachineS3LocationPtrOutput              `pulumi:"definitionS3Location"`
	DefinitionString        pulumi.StringPtrOutput                       `pulumi:"definitionString"`
	DefinitionSubstitutions StateMachineDefinitionSubstitutionsPtrOutput `pulumi:"definitionSubstitutions"`
	LoggingConfiguration    StateMachineLoggingConfigurationPtrOutput    `pulumi:"loggingConfiguration"`
	Name                    pulumi.StringOutput                          `pulumi:"name"`
	RoleArn                 pulumi.StringOutput                          `pulumi:"roleArn"`
	StateMachineName        pulumi.StringPtrOutput                       `pulumi:"stateMachineName"`
	StateMachineType        pulumi.StringPtrOutput                       `pulumi:"stateMachineType"`
	Tags                    StateMachineTagsEntryArrayOutput             `pulumi:"tags"`
	TracingConfiguration    StateMachineTracingConfigurationPtrOutput    `pulumi:"tracingConfiguration"`
}

// NewStateMachine registers a new resource with the given unique name, arguments, and options.
func NewStateMachine(ctx *pulumi.Context,
	name string, args *StateMachineArgs, opts ...pulumi.ResourceOption) (*StateMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource StateMachine
	err := ctx.RegisterResource("aws-native:stepfunctions:StateMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStateMachine gets an existing StateMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStateMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StateMachineState, opts ...pulumi.ResourceOption) (*StateMachine, error) {
	var resource StateMachine
	err := ctx.ReadResource("aws-native:stepfunctions:StateMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StateMachine resources.
type stateMachineState struct {
}

type StateMachineState struct {
}

func (StateMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*stateMachineState)(nil)).Elem()
}

type stateMachineArgs struct {
	Definition              *StateMachineDefinition              `pulumi:"definition"`
	DefinitionS3Location    *StateMachineS3Location              `pulumi:"definitionS3Location"`
	DefinitionString        *string                              `pulumi:"definitionString"`
	DefinitionSubstitutions *StateMachineDefinitionSubstitutions `pulumi:"definitionSubstitutions"`
	LoggingConfiguration    *StateMachineLoggingConfiguration    `pulumi:"loggingConfiguration"`
	RoleArn                 string                               `pulumi:"roleArn"`
	StateMachineName        *string                              `pulumi:"stateMachineName"`
	StateMachineType        *string                              `pulumi:"stateMachineType"`
	Tags                    []StateMachineTagsEntry              `pulumi:"tags"`
	TracingConfiguration    *StateMachineTracingConfiguration    `pulumi:"tracingConfiguration"`
}

// The set of arguments for constructing a StateMachine resource.
type StateMachineArgs struct {
	Definition              StateMachineDefinitionPtrInput
	DefinitionS3Location    StateMachineS3LocationPtrInput
	DefinitionString        pulumi.StringPtrInput
	DefinitionSubstitutions StateMachineDefinitionSubstitutionsPtrInput
	LoggingConfiguration    StateMachineLoggingConfigurationPtrInput
	RoleArn                 pulumi.StringInput
	StateMachineName        pulumi.StringPtrInput
	StateMachineType        pulumi.StringPtrInput
	Tags                    StateMachineTagsEntryArrayInput
	TracingConfiguration    StateMachineTracingConfigurationPtrInput
}

func (StateMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stateMachineArgs)(nil)).Elem()
}

type StateMachineInput interface {
	pulumi.Input

	ToStateMachineOutput() StateMachineOutput
	ToStateMachineOutputWithContext(ctx context.Context) StateMachineOutput
}

func (*StateMachine) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachine)(nil))
}

func (i *StateMachine) ToStateMachineOutput() StateMachineOutput {
	return i.ToStateMachineOutputWithContext(context.Background())
}

func (i *StateMachine) ToStateMachineOutputWithContext(ctx context.Context) StateMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineOutput)
}

type StateMachineOutput struct{ *pulumi.OutputState }

func (StateMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachine)(nil))
}

func (o StateMachineOutput) ToStateMachineOutput() StateMachineOutput {
	return o
}

func (o StateMachineOutput) ToStateMachineOutputWithContext(ctx context.Context) StateMachineOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(StateMachineOutput{})
}
