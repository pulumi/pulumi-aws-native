// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package stepfunctions

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::StepFunctions::Activity
//
// Deprecated: Activity is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Activity struct {
	pulumi.CustomResourceState

	Name pulumi.StringOutput          `pulumi:"name"`
	Tags ActivityTagsEntryArrayOutput `pulumi:"tags"`
}

// NewActivity registers a new resource with the given unique name, arguments, and options.
func NewActivity(ctx *pulumi.Context,
	name string, args *ActivityArgs, opts ...pulumi.ResourceOption) (*Activity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource Activity
	err := ctx.RegisterResource("aws-native:stepfunctions:Activity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActivity gets an existing Activity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActivity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActivityState, opts ...pulumi.ResourceOption) (*Activity, error) {
	var resource Activity
	err := ctx.ReadResource("aws-native:stepfunctions:Activity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Activity resources.
type activityState struct {
}

type ActivityState struct {
}

func (ActivityState) ElementType() reflect.Type {
	return reflect.TypeOf((*activityState)(nil)).Elem()
}

type activityArgs struct {
	Name string              `pulumi:"name"`
	Tags []ActivityTagsEntry `pulumi:"tags"`
}

// The set of arguments for constructing a Activity resource.
type ActivityArgs struct {
	Name pulumi.StringInput
	Tags ActivityTagsEntryArrayInput
}

func (ActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*activityArgs)(nil)).Elem()
}

type ActivityInput interface {
	pulumi.Input

	ToActivityOutput() ActivityOutput
	ToActivityOutputWithContext(ctx context.Context) ActivityOutput
}

func (*Activity) ElementType() reflect.Type {
	return reflect.TypeOf((*Activity)(nil))
}

func (i *Activity) ToActivityOutput() ActivityOutput {
	return i.ToActivityOutputWithContext(context.Background())
}

func (i *Activity) ToActivityOutputWithContext(ctx context.Context) ActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityOutput)
}

type ActivityOutput struct{ *pulumi.OutputState }

func (ActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Activity)(nil))
}

func (o ActivityOutput) ToActivityOutput() ActivityOutput {
	return o
}

func (o ActivityOutput) ToActivityOutputWithContext(ctx context.Context) ActivityOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ActivityOutput{})
}
