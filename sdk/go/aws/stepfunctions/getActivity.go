// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package stepfunctions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for Activity
func LookupActivity(ctx *pulumi.Context, args *LookupActivityArgs, opts ...pulumi.InvokeOption) (*LookupActivityResult, error) {
	var rv LookupActivityResult
	err := ctx.Invoke("aws-native:stepfunctions:getActivity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupActivityArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupActivityResult struct {
	Arn  *string             `pulumi:"arn"`
	Tags []ActivityTagsEntry `pulumi:"tags"`
}

func LookupActivityOutput(ctx *pulumi.Context, args LookupActivityOutputArgs, opts ...pulumi.InvokeOption) LookupActivityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupActivityResult, error) {
			args := v.(LookupActivityArgs)
			r, err := LookupActivity(ctx, &args, opts...)
			var s LookupActivityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupActivityResultOutput)
}

type LookupActivityOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupActivityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActivityArgs)(nil)).Elem()
}

type LookupActivityResultOutput struct{ *pulumi.OutputState }

func (LookupActivityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActivityResult)(nil)).Elem()
}

func (o LookupActivityResultOutput) ToLookupActivityResultOutput() LookupActivityResultOutput {
	return o
}

func (o LookupActivityResultOutput) ToLookupActivityResultOutputWithContext(ctx context.Context) LookupActivityResultOutput {
	return o
}

func (o LookupActivityResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupActivityResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupActivityResultOutput) Tags() ActivityTagsEntryArrayOutput {
	return o.ApplyT(func(v LookupActivityResult) []ActivityTagsEntry { return v.Tags }).(ActivityTagsEntryArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupActivityResultOutput{})
}
