// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package stepfunctions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StateMachineCloudWatchLogsLogGroup struct {
	LogGroupArn *string `pulumi:"logGroupArn"`
}

// StateMachineCloudWatchLogsLogGroupInput is an input type that accepts StateMachineCloudWatchLogsLogGroupArgs and StateMachineCloudWatchLogsLogGroupOutput values.
// You can construct a concrete instance of `StateMachineCloudWatchLogsLogGroupInput` via:
//
//          StateMachineCloudWatchLogsLogGroupArgs{...}
type StateMachineCloudWatchLogsLogGroupInput interface {
	pulumi.Input

	ToStateMachineCloudWatchLogsLogGroupOutput() StateMachineCloudWatchLogsLogGroupOutput
	ToStateMachineCloudWatchLogsLogGroupOutputWithContext(context.Context) StateMachineCloudWatchLogsLogGroupOutput
}

type StateMachineCloudWatchLogsLogGroupArgs struct {
	LogGroupArn pulumi.StringPtrInput `pulumi:"logGroupArn"`
}

func (StateMachineCloudWatchLogsLogGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineCloudWatchLogsLogGroup)(nil)).Elem()
}

func (i StateMachineCloudWatchLogsLogGroupArgs) ToStateMachineCloudWatchLogsLogGroupOutput() StateMachineCloudWatchLogsLogGroupOutput {
	return i.ToStateMachineCloudWatchLogsLogGroupOutputWithContext(context.Background())
}

func (i StateMachineCloudWatchLogsLogGroupArgs) ToStateMachineCloudWatchLogsLogGroupOutputWithContext(ctx context.Context) StateMachineCloudWatchLogsLogGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineCloudWatchLogsLogGroupOutput)
}

func (i StateMachineCloudWatchLogsLogGroupArgs) ToStateMachineCloudWatchLogsLogGroupPtrOutput() StateMachineCloudWatchLogsLogGroupPtrOutput {
	return i.ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(context.Background())
}

func (i StateMachineCloudWatchLogsLogGroupArgs) ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(ctx context.Context) StateMachineCloudWatchLogsLogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineCloudWatchLogsLogGroupOutput).ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(ctx)
}

// StateMachineCloudWatchLogsLogGroupPtrInput is an input type that accepts StateMachineCloudWatchLogsLogGroupArgs, StateMachineCloudWatchLogsLogGroupPtr and StateMachineCloudWatchLogsLogGroupPtrOutput values.
// You can construct a concrete instance of `StateMachineCloudWatchLogsLogGroupPtrInput` via:
//
//          StateMachineCloudWatchLogsLogGroupArgs{...}
//
//  or:
//
//          nil
type StateMachineCloudWatchLogsLogGroupPtrInput interface {
	pulumi.Input

	ToStateMachineCloudWatchLogsLogGroupPtrOutput() StateMachineCloudWatchLogsLogGroupPtrOutput
	ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(context.Context) StateMachineCloudWatchLogsLogGroupPtrOutput
}

type stateMachineCloudWatchLogsLogGroupPtrType StateMachineCloudWatchLogsLogGroupArgs

func StateMachineCloudWatchLogsLogGroupPtr(v *StateMachineCloudWatchLogsLogGroupArgs) StateMachineCloudWatchLogsLogGroupPtrInput {
	return (*stateMachineCloudWatchLogsLogGroupPtrType)(v)
}

func (*stateMachineCloudWatchLogsLogGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineCloudWatchLogsLogGroup)(nil)).Elem()
}

func (i *stateMachineCloudWatchLogsLogGroupPtrType) ToStateMachineCloudWatchLogsLogGroupPtrOutput() StateMachineCloudWatchLogsLogGroupPtrOutput {
	return i.ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(context.Background())
}

func (i *stateMachineCloudWatchLogsLogGroupPtrType) ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(ctx context.Context) StateMachineCloudWatchLogsLogGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineCloudWatchLogsLogGroupPtrOutput)
}

type StateMachineCloudWatchLogsLogGroupOutput struct{ *pulumi.OutputState }

func (StateMachineCloudWatchLogsLogGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineCloudWatchLogsLogGroup)(nil)).Elem()
}

func (o StateMachineCloudWatchLogsLogGroupOutput) ToStateMachineCloudWatchLogsLogGroupOutput() StateMachineCloudWatchLogsLogGroupOutput {
	return o
}

func (o StateMachineCloudWatchLogsLogGroupOutput) ToStateMachineCloudWatchLogsLogGroupOutputWithContext(ctx context.Context) StateMachineCloudWatchLogsLogGroupOutput {
	return o
}

func (o StateMachineCloudWatchLogsLogGroupOutput) ToStateMachineCloudWatchLogsLogGroupPtrOutput() StateMachineCloudWatchLogsLogGroupPtrOutput {
	return o.ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(context.Background())
}

func (o StateMachineCloudWatchLogsLogGroupOutput) ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(ctx context.Context) StateMachineCloudWatchLogsLogGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineCloudWatchLogsLogGroup) *StateMachineCloudWatchLogsLogGroup {
		return &v
	}).(StateMachineCloudWatchLogsLogGroupPtrOutput)
}

func (o StateMachineCloudWatchLogsLogGroupOutput) LogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineCloudWatchLogsLogGroup) *string { return v.LogGroupArn }).(pulumi.StringPtrOutput)
}

type StateMachineCloudWatchLogsLogGroupPtrOutput struct{ *pulumi.OutputState }

func (StateMachineCloudWatchLogsLogGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineCloudWatchLogsLogGroup)(nil)).Elem()
}

func (o StateMachineCloudWatchLogsLogGroupPtrOutput) ToStateMachineCloudWatchLogsLogGroupPtrOutput() StateMachineCloudWatchLogsLogGroupPtrOutput {
	return o
}

func (o StateMachineCloudWatchLogsLogGroupPtrOutput) ToStateMachineCloudWatchLogsLogGroupPtrOutputWithContext(ctx context.Context) StateMachineCloudWatchLogsLogGroupPtrOutput {
	return o
}

func (o StateMachineCloudWatchLogsLogGroupPtrOutput) Elem() StateMachineCloudWatchLogsLogGroupOutput {
	return o.ApplyT(func(v *StateMachineCloudWatchLogsLogGroup) StateMachineCloudWatchLogsLogGroup {
		if v != nil {
			return *v
		}
		var ret StateMachineCloudWatchLogsLogGroup
		return ret
	}).(StateMachineCloudWatchLogsLogGroupOutput)
}

func (o StateMachineCloudWatchLogsLogGroupPtrOutput) LogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineCloudWatchLogsLogGroup) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupArn
	}).(pulumi.StringPtrOutput)
}

type StateMachineDefinition struct {
}

// StateMachineDefinitionInput is an input type that accepts StateMachineDefinitionArgs and StateMachineDefinitionOutput values.
// You can construct a concrete instance of `StateMachineDefinitionInput` via:
//
//          StateMachineDefinitionArgs{...}
type StateMachineDefinitionInput interface {
	pulumi.Input

	ToStateMachineDefinitionOutput() StateMachineDefinitionOutput
	ToStateMachineDefinitionOutputWithContext(context.Context) StateMachineDefinitionOutput
}

type StateMachineDefinitionArgs struct {
}

func (StateMachineDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineDefinition)(nil)).Elem()
}

func (i StateMachineDefinitionArgs) ToStateMachineDefinitionOutput() StateMachineDefinitionOutput {
	return i.ToStateMachineDefinitionOutputWithContext(context.Background())
}

func (i StateMachineDefinitionArgs) ToStateMachineDefinitionOutputWithContext(ctx context.Context) StateMachineDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineDefinitionOutput)
}

func (i StateMachineDefinitionArgs) ToStateMachineDefinitionPtrOutput() StateMachineDefinitionPtrOutput {
	return i.ToStateMachineDefinitionPtrOutputWithContext(context.Background())
}

func (i StateMachineDefinitionArgs) ToStateMachineDefinitionPtrOutputWithContext(ctx context.Context) StateMachineDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineDefinitionOutput).ToStateMachineDefinitionPtrOutputWithContext(ctx)
}

// StateMachineDefinitionPtrInput is an input type that accepts StateMachineDefinitionArgs, StateMachineDefinitionPtr and StateMachineDefinitionPtrOutput values.
// You can construct a concrete instance of `StateMachineDefinitionPtrInput` via:
//
//          StateMachineDefinitionArgs{...}
//
//  or:
//
//          nil
type StateMachineDefinitionPtrInput interface {
	pulumi.Input

	ToStateMachineDefinitionPtrOutput() StateMachineDefinitionPtrOutput
	ToStateMachineDefinitionPtrOutputWithContext(context.Context) StateMachineDefinitionPtrOutput
}

type stateMachineDefinitionPtrType StateMachineDefinitionArgs

func StateMachineDefinitionPtr(v *StateMachineDefinitionArgs) StateMachineDefinitionPtrInput {
	return (*stateMachineDefinitionPtrType)(v)
}

func (*stateMachineDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineDefinition)(nil)).Elem()
}

func (i *stateMachineDefinitionPtrType) ToStateMachineDefinitionPtrOutput() StateMachineDefinitionPtrOutput {
	return i.ToStateMachineDefinitionPtrOutputWithContext(context.Background())
}

func (i *stateMachineDefinitionPtrType) ToStateMachineDefinitionPtrOutputWithContext(ctx context.Context) StateMachineDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineDefinitionPtrOutput)
}

type StateMachineDefinitionOutput struct{ *pulumi.OutputState }

func (StateMachineDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineDefinition)(nil)).Elem()
}

func (o StateMachineDefinitionOutput) ToStateMachineDefinitionOutput() StateMachineDefinitionOutput {
	return o
}

func (o StateMachineDefinitionOutput) ToStateMachineDefinitionOutputWithContext(ctx context.Context) StateMachineDefinitionOutput {
	return o
}

func (o StateMachineDefinitionOutput) ToStateMachineDefinitionPtrOutput() StateMachineDefinitionPtrOutput {
	return o.ToStateMachineDefinitionPtrOutputWithContext(context.Background())
}

func (o StateMachineDefinitionOutput) ToStateMachineDefinitionPtrOutputWithContext(ctx context.Context) StateMachineDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineDefinition) *StateMachineDefinition {
		return &v
	}).(StateMachineDefinitionPtrOutput)
}

type StateMachineDefinitionPtrOutput struct{ *pulumi.OutputState }

func (StateMachineDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineDefinition)(nil)).Elem()
}

func (o StateMachineDefinitionPtrOutput) ToStateMachineDefinitionPtrOutput() StateMachineDefinitionPtrOutput {
	return o
}

func (o StateMachineDefinitionPtrOutput) ToStateMachineDefinitionPtrOutputWithContext(ctx context.Context) StateMachineDefinitionPtrOutput {
	return o
}

func (o StateMachineDefinitionPtrOutput) Elem() StateMachineDefinitionOutput {
	return o.ApplyT(func(v *StateMachineDefinition) StateMachineDefinition {
		if v != nil {
			return *v
		}
		var ret StateMachineDefinition
		return ret
	}).(StateMachineDefinitionOutput)
}

type StateMachineDefinitionSubstitutions struct {
}

// StateMachineDefinitionSubstitutionsInput is an input type that accepts StateMachineDefinitionSubstitutionsArgs and StateMachineDefinitionSubstitutionsOutput values.
// You can construct a concrete instance of `StateMachineDefinitionSubstitutionsInput` via:
//
//          StateMachineDefinitionSubstitutionsArgs{...}
type StateMachineDefinitionSubstitutionsInput interface {
	pulumi.Input

	ToStateMachineDefinitionSubstitutionsOutput() StateMachineDefinitionSubstitutionsOutput
	ToStateMachineDefinitionSubstitutionsOutputWithContext(context.Context) StateMachineDefinitionSubstitutionsOutput
}

type StateMachineDefinitionSubstitutionsArgs struct {
}

func (StateMachineDefinitionSubstitutionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineDefinitionSubstitutions)(nil)).Elem()
}

func (i StateMachineDefinitionSubstitutionsArgs) ToStateMachineDefinitionSubstitutionsOutput() StateMachineDefinitionSubstitutionsOutput {
	return i.ToStateMachineDefinitionSubstitutionsOutputWithContext(context.Background())
}

func (i StateMachineDefinitionSubstitutionsArgs) ToStateMachineDefinitionSubstitutionsOutputWithContext(ctx context.Context) StateMachineDefinitionSubstitutionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineDefinitionSubstitutionsOutput)
}

func (i StateMachineDefinitionSubstitutionsArgs) ToStateMachineDefinitionSubstitutionsPtrOutput() StateMachineDefinitionSubstitutionsPtrOutput {
	return i.ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(context.Background())
}

func (i StateMachineDefinitionSubstitutionsArgs) ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(ctx context.Context) StateMachineDefinitionSubstitutionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineDefinitionSubstitutionsOutput).ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(ctx)
}

// StateMachineDefinitionSubstitutionsPtrInput is an input type that accepts StateMachineDefinitionSubstitutionsArgs, StateMachineDefinitionSubstitutionsPtr and StateMachineDefinitionSubstitutionsPtrOutput values.
// You can construct a concrete instance of `StateMachineDefinitionSubstitutionsPtrInput` via:
//
//          StateMachineDefinitionSubstitutionsArgs{...}
//
//  or:
//
//          nil
type StateMachineDefinitionSubstitutionsPtrInput interface {
	pulumi.Input

	ToStateMachineDefinitionSubstitutionsPtrOutput() StateMachineDefinitionSubstitutionsPtrOutput
	ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(context.Context) StateMachineDefinitionSubstitutionsPtrOutput
}

type stateMachineDefinitionSubstitutionsPtrType StateMachineDefinitionSubstitutionsArgs

func StateMachineDefinitionSubstitutionsPtr(v *StateMachineDefinitionSubstitutionsArgs) StateMachineDefinitionSubstitutionsPtrInput {
	return (*stateMachineDefinitionSubstitutionsPtrType)(v)
}

func (*stateMachineDefinitionSubstitutionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineDefinitionSubstitutions)(nil)).Elem()
}

func (i *stateMachineDefinitionSubstitutionsPtrType) ToStateMachineDefinitionSubstitutionsPtrOutput() StateMachineDefinitionSubstitutionsPtrOutput {
	return i.ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(context.Background())
}

func (i *stateMachineDefinitionSubstitutionsPtrType) ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(ctx context.Context) StateMachineDefinitionSubstitutionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineDefinitionSubstitutionsPtrOutput)
}

type StateMachineDefinitionSubstitutionsOutput struct{ *pulumi.OutputState }

func (StateMachineDefinitionSubstitutionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineDefinitionSubstitutions)(nil)).Elem()
}

func (o StateMachineDefinitionSubstitutionsOutput) ToStateMachineDefinitionSubstitutionsOutput() StateMachineDefinitionSubstitutionsOutput {
	return o
}

func (o StateMachineDefinitionSubstitutionsOutput) ToStateMachineDefinitionSubstitutionsOutputWithContext(ctx context.Context) StateMachineDefinitionSubstitutionsOutput {
	return o
}

func (o StateMachineDefinitionSubstitutionsOutput) ToStateMachineDefinitionSubstitutionsPtrOutput() StateMachineDefinitionSubstitutionsPtrOutput {
	return o.ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(context.Background())
}

func (o StateMachineDefinitionSubstitutionsOutput) ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(ctx context.Context) StateMachineDefinitionSubstitutionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineDefinitionSubstitutions) *StateMachineDefinitionSubstitutions {
		return &v
	}).(StateMachineDefinitionSubstitutionsPtrOutput)
}

type StateMachineDefinitionSubstitutionsPtrOutput struct{ *pulumi.OutputState }

func (StateMachineDefinitionSubstitutionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineDefinitionSubstitutions)(nil)).Elem()
}

func (o StateMachineDefinitionSubstitutionsPtrOutput) ToStateMachineDefinitionSubstitutionsPtrOutput() StateMachineDefinitionSubstitutionsPtrOutput {
	return o
}

func (o StateMachineDefinitionSubstitutionsPtrOutput) ToStateMachineDefinitionSubstitutionsPtrOutputWithContext(ctx context.Context) StateMachineDefinitionSubstitutionsPtrOutput {
	return o
}

func (o StateMachineDefinitionSubstitutionsPtrOutput) Elem() StateMachineDefinitionSubstitutionsOutput {
	return o.ApplyT(func(v *StateMachineDefinitionSubstitutions) StateMachineDefinitionSubstitutions {
		if v != nil {
			return *v
		}
		var ret StateMachineDefinitionSubstitutions
		return ret
	}).(StateMachineDefinitionSubstitutionsOutput)
}

type StateMachineLogDestination struct {
	CloudWatchLogsLogGroup *StateMachineCloudWatchLogsLogGroup `pulumi:"cloudWatchLogsLogGroup"`
}

// StateMachineLogDestinationInput is an input type that accepts StateMachineLogDestinationArgs and StateMachineLogDestinationOutput values.
// You can construct a concrete instance of `StateMachineLogDestinationInput` via:
//
//          StateMachineLogDestinationArgs{...}
type StateMachineLogDestinationInput interface {
	pulumi.Input

	ToStateMachineLogDestinationOutput() StateMachineLogDestinationOutput
	ToStateMachineLogDestinationOutputWithContext(context.Context) StateMachineLogDestinationOutput
}

type StateMachineLogDestinationArgs struct {
	CloudWatchLogsLogGroup StateMachineCloudWatchLogsLogGroupPtrInput `pulumi:"cloudWatchLogsLogGroup"`
}

func (StateMachineLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineLogDestination)(nil)).Elem()
}

func (i StateMachineLogDestinationArgs) ToStateMachineLogDestinationOutput() StateMachineLogDestinationOutput {
	return i.ToStateMachineLogDestinationOutputWithContext(context.Background())
}

func (i StateMachineLogDestinationArgs) ToStateMachineLogDestinationOutputWithContext(ctx context.Context) StateMachineLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLogDestinationOutput)
}

// StateMachineLogDestinationArrayInput is an input type that accepts StateMachineLogDestinationArray and StateMachineLogDestinationArrayOutput values.
// You can construct a concrete instance of `StateMachineLogDestinationArrayInput` via:
//
//          StateMachineLogDestinationArray{ StateMachineLogDestinationArgs{...} }
type StateMachineLogDestinationArrayInput interface {
	pulumi.Input

	ToStateMachineLogDestinationArrayOutput() StateMachineLogDestinationArrayOutput
	ToStateMachineLogDestinationArrayOutputWithContext(context.Context) StateMachineLogDestinationArrayOutput
}

type StateMachineLogDestinationArray []StateMachineLogDestinationInput

func (StateMachineLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateMachineLogDestination)(nil)).Elem()
}

func (i StateMachineLogDestinationArray) ToStateMachineLogDestinationArrayOutput() StateMachineLogDestinationArrayOutput {
	return i.ToStateMachineLogDestinationArrayOutputWithContext(context.Background())
}

func (i StateMachineLogDestinationArray) ToStateMachineLogDestinationArrayOutputWithContext(ctx context.Context) StateMachineLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLogDestinationArrayOutput)
}

type StateMachineLogDestinationOutput struct{ *pulumi.OutputState }

func (StateMachineLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineLogDestination)(nil)).Elem()
}

func (o StateMachineLogDestinationOutput) ToStateMachineLogDestinationOutput() StateMachineLogDestinationOutput {
	return o
}

func (o StateMachineLogDestinationOutput) ToStateMachineLogDestinationOutputWithContext(ctx context.Context) StateMachineLogDestinationOutput {
	return o
}

func (o StateMachineLogDestinationOutput) CloudWatchLogsLogGroup() StateMachineCloudWatchLogsLogGroupPtrOutput {
	return o.ApplyT(func(v StateMachineLogDestination) *StateMachineCloudWatchLogsLogGroup {
		return v.CloudWatchLogsLogGroup
	}).(StateMachineCloudWatchLogsLogGroupPtrOutput)
}

type StateMachineLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (StateMachineLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateMachineLogDestination)(nil)).Elem()
}

func (o StateMachineLogDestinationArrayOutput) ToStateMachineLogDestinationArrayOutput() StateMachineLogDestinationArrayOutput {
	return o
}

func (o StateMachineLogDestinationArrayOutput) ToStateMachineLogDestinationArrayOutputWithContext(ctx context.Context) StateMachineLogDestinationArrayOutput {
	return o
}

func (o StateMachineLogDestinationArrayOutput) Index(i pulumi.IntInput) StateMachineLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StateMachineLogDestination {
		return vs[0].([]StateMachineLogDestination)[vs[1].(int)]
	}).(StateMachineLogDestinationOutput)
}

type StateMachineLoggingConfiguration struct {
	Destinations         []StateMachineLogDestination `pulumi:"destinations"`
	IncludeExecutionData *bool                        `pulumi:"includeExecutionData"`
	Level                *string                      `pulumi:"level"`
}

// StateMachineLoggingConfigurationInput is an input type that accepts StateMachineLoggingConfigurationArgs and StateMachineLoggingConfigurationOutput values.
// You can construct a concrete instance of `StateMachineLoggingConfigurationInput` via:
//
//          StateMachineLoggingConfigurationArgs{...}
type StateMachineLoggingConfigurationInput interface {
	pulumi.Input

	ToStateMachineLoggingConfigurationOutput() StateMachineLoggingConfigurationOutput
	ToStateMachineLoggingConfigurationOutputWithContext(context.Context) StateMachineLoggingConfigurationOutput
}

type StateMachineLoggingConfigurationArgs struct {
	Destinations         StateMachineLogDestinationArrayInput `pulumi:"destinations"`
	IncludeExecutionData pulumi.BoolPtrInput                  `pulumi:"includeExecutionData"`
	Level                pulumi.StringPtrInput                `pulumi:"level"`
}

func (StateMachineLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineLoggingConfiguration)(nil)).Elem()
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationOutput() StateMachineLoggingConfigurationOutput {
	return i.ToStateMachineLoggingConfigurationOutputWithContext(context.Background())
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLoggingConfigurationOutput)
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return i.ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLoggingConfigurationOutput).ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx)
}

// StateMachineLoggingConfigurationPtrInput is an input type that accepts StateMachineLoggingConfigurationArgs, StateMachineLoggingConfigurationPtr and StateMachineLoggingConfigurationPtrOutput values.
// You can construct a concrete instance of `StateMachineLoggingConfigurationPtrInput` via:
//
//          StateMachineLoggingConfigurationArgs{...}
//
//  or:
//
//          nil
type StateMachineLoggingConfigurationPtrInput interface {
	pulumi.Input

	ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput
	ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Context) StateMachineLoggingConfigurationPtrOutput
}

type stateMachineLoggingConfigurationPtrType StateMachineLoggingConfigurationArgs

func StateMachineLoggingConfigurationPtr(v *StateMachineLoggingConfigurationArgs) StateMachineLoggingConfigurationPtrInput {
	return (*stateMachineLoggingConfigurationPtrType)(v)
}

func (*stateMachineLoggingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineLoggingConfiguration)(nil)).Elem()
}

func (i *stateMachineLoggingConfigurationPtrType) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return i.ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i *stateMachineLoggingConfigurationPtrType) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLoggingConfigurationPtrOutput)
}

type StateMachineLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (StateMachineLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineLoggingConfiguration)(nil)).Elem()
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationOutput() StateMachineLoggingConfigurationOutput {
	return o
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationOutput {
	return o
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return o.ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineLoggingConfiguration) *StateMachineLoggingConfiguration {
		return &v
	}).(StateMachineLoggingConfigurationPtrOutput)
}

func (o StateMachineLoggingConfigurationOutput) Destinations() StateMachineLogDestinationArrayOutput {
	return o.ApplyT(func(v StateMachineLoggingConfiguration) []StateMachineLogDestination { return v.Destinations }).(StateMachineLogDestinationArrayOutput)
}

func (o StateMachineLoggingConfigurationOutput) IncludeExecutionData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StateMachineLoggingConfiguration) *bool { return v.IncludeExecutionData }).(pulumi.BoolPtrOutput)
}

func (o StateMachineLoggingConfigurationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineLoggingConfiguration) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type StateMachineLoggingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StateMachineLoggingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineLoggingConfiguration)(nil)).Elem()
}

func (o StateMachineLoggingConfigurationPtrOutput) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return o
}

func (o StateMachineLoggingConfigurationPtrOutput) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return o
}

func (o StateMachineLoggingConfigurationPtrOutput) Elem() StateMachineLoggingConfigurationOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) StateMachineLoggingConfiguration {
		if v != nil {
			return *v
		}
		var ret StateMachineLoggingConfiguration
		return ret
	}).(StateMachineLoggingConfigurationOutput)
}

func (o StateMachineLoggingConfigurationPtrOutput) Destinations() StateMachineLogDestinationArrayOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) []StateMachineLogDestination {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(StateMachineLogDestinationArrayOutput)
}

func (o StateMachineLoggingConfigurationPtrOutput) IncludeExecutionData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeExecutionData
	}).(pulumi.BoolPtrOutput)
}

func (o StateMachineLoggingConfigurationPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

type StateMachineS3Location struct {
	Bucket  string  `pulumi:"bucket"`
	Key     string  `pulumi:"key"`
	Version *string `pulumi:"version"`
}

// StateMachineS3LocationInput is an input type that accepts StateMachineS3LocationArgs and StateMachineS3LocationOutput values.
// You can construct a concrete instance of `StateMachineS3LocationInput` via:
//
//          StateMachineS3LocationArgs{...}
type StateMachineS3LocationInput interface {
	pulumi.Input

	ToStateMachineS3LocationOutput() StateMachineS3LocationOutput
	ToStateMachineS3LocationOutputWithContext(context.Context) StateMachineS3LocationOutput
}

type StateMachineS3LocationArgs struct {
	Bucket  pulumi.StringInput    `pulumi:"bucket"`
	Key     pulumi.StringInput    `pulumi:"key"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (StateMachineS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineS3Location)(nil)).Elem()
}

func (i StateMachineS3LocationArgs) ToStateMachineS3LocationOutput() StateMachineS3LocationOutput {
	return i.ToStateMachineS3LocationOutputWithContext(context.Background())
}

func (i StateMachineS3LocationArgs) ToStateMachineS3LocationOutputWithContext(ctx context.Context) StateMachineS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineS3LocationOutput)
}

func (i StateMachineS3LocationArgs) ToStateMachineS3LocationPtrOutput() StateMachineS3LocationPtrOutput {
	return i.ToStateMachineS3LocationPtrOutputWithContext(context.Background())
}

func (i StateMachineS3LocationArgs) ToStateMachineS3LocationPtrOutputWithContext(ctx context.Context) StateMachineS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineS3LocationOutput).ToStateMachineS3LocationPtrOutputWithContext(ctx)
}

// StateMachineS3LocationPtrInput is an input type that accepts StateMachineS3LocationArgs, StateMachineS3LocationPtr and StateMachineS3LocationPtrOutput values.
// You can construct a concrete instance of `StateMachineS3LocationPtrInput` via:
//
//          StateMachineS3LocationArgs{...}
//
//  or:
//
//          nil
type StateMachineS3LocationPtrInput interface {
	pulumi.Input

	ToStateMachineS3LocationPtrOutput() StateMachineS3LocationPtrOutput
	ToStateMachineS3LocationPtrOutputWithContext(context.Context) StateMachineS3LocationPtrOutput
}

type stateMachineS3LocationPtrType StateMachineS3LocationArgs

func StateMachineS3LocationPtr(v *StateMachineS3LocationArgs) StateMachineS3LocationPtrInput {
	return (*stateMachineS3LocationPtrType)(v)
}

func (*stateMachineS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineS3Location)(nil)).Elem()
}

func (i *stateMachineS3LocationPtrType) ToStateMachineS3LocationPtrOutput() StateMachineS3LocationPtrOutput {
	return i.ToStateMachineS3LocationPtrOutputWithContext(context.Background())
}

func (i *stateMachineS3LocationPtrType) ToStateMachineS3LocationPtrOutputWithContext(ctx context.Context) StateMachineS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineS3LocationPtrOutput)
}

type StateMachineS3LocationOutput struct{ *pulumi.OutputState }

func (StateMachineS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineS3Location)(nil)).Elem()
}

func (o StateMachineS3LocationOutput) ToStateMachineS3LocationOutput() StateMachineS3LocationOutput {
	return o
}

func (o StateMachineS3LocationOutput) ToStateMachineS3LocationOutputWithContext(ctx context.Context) StateMachineS3LocationOutput {
	return o
}

func (o StateMachineS3LocationOutput) ToStateMachineS3LocationPtrOutput() StateMachineS3LocationPtrOutput {
	return o.ToStateMachineS3LocationPtrOutputWithContext(context.Background())
}

func (o StateMachineS3LocationOutput) ToStateMachineS3LocationPtrOutputWithContext(ctx context.Context) StateMachineS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineS3Location) *StateMachineS3Location {
		return &v
	}).(StateMachineS3LocationPtrOutput)
}

func (o StateMachineS3LocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v StateMachineS3Location) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o StateMachineS3LocationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StateMachineS3Location) string { return v.Key }).(pulumi.StringOutput)
}

func (o StateMachineS3LocationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineS3Location) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type StateMachineS3LocationPtrOutput struct{ *pulumi.OutputState }

func (StateMachineS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineS3Location)(nil)).Elem()
}

func (o StateMachineS3LocationPtrOutput) ToStateMachineS3LocationPtrOutput() StateMachineS3LocationPtrOutput {
	return o
}

func (o StateMachineS3LocationPtrOutput) ToStateMachineS3LocationPtrOutputWithContext(ctx context.Context) StateMachineS3LocationPtrOutput {
	return o
}

func (o StateMachineS3LocationPtrOutput) Elem() StateMachineS3LocationOutput {
	return o.ApplyT(func(v *StateMachineS3Location) StateMachineS3Location {
		if v != nil {
			return *v
		}
		var ret StateMachineS3Location
		return ret
	}).(StateMachineS3LocationOutput)
}

func (o StateMachineS3LocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o StateMachineS3LocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o StateMachineS3LocationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineS3Location) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type StateMachineTagsEntry struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// StateMachineTagsEntryInput is an input type that accepts StateMachineTagsEntryArgs and StateMachineTagsEntryOutput values.
// You can construct a concrete instance of `StateMachineTagsEntryInput` via:
//
//          StateMachineTagsEntryArgs{...}
type StateMachineTagsEntryInput interface {
	pulumi.Input

	ToStateMachineTagsEntryOutput() StateMachineTagsEntryOutput
	ToStateMachineTagsEntryOutputWithContext(context.Context) StateMachineTagsEntryOutput
}

type StateMachineTagsEntryArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (StateMachineTagsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineTagsEntry)(nil)).Elem()
}

func (i StateMachineTagsEntryArgs) ToStateMachineTagsEntryOutput() StateMachineTagsEntryOutput {
	return i.ToStateMachineTagsEntryOutputWithContext(context.Background())
}

func (i StateMachineTagsEntryArgs) ToStateMachineTagsEntryOutputWithContext(ctx context.Context) StateMachineTagsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTagsEntryOutput)
}

// StateMachineTagsEntryArrayInput is an input type that accepts StateMachineTagsEntryArray and StateMachineTagsEntryArrayOutput values.
// You can construct a concrete instance of `StateMachineTagsEntryArrayInput` via:
//
//          StateMachineTagsEntryArray{ StateMachineTagsEntryArgs{...} }
type StateMachineTagsEntryArrayInput interface {
	pulumi.Input

	ToStateMachineTagsEntryArrayOutput() StateMachineTagsEntryArrayOutput
	ToStateMachineTagsEntryArrayOutputWithContext(context.Context) StateMachineTagsEntryArrayOutput
}

type StateMachineTagsEntryArray []StateMachineTagsEntryInput

func (StateMachineTagsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateMachineTagsEntry)(nil)).Elem()
}

func (i StateMachineTagsEntryArray) ToStateMachineTagsEntryArrayOutput() StateMachineTagsEntryArrayOutput {
	return i.ToStateMachineTagsEntryArrayOutputWithContext(context.Background())
}

func (i StateMachineTagsEntryArray) ToStateMachineTagsEntryArrayOutputWithContext(ctx context.Context) StateMachineTagsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTagsEntryArrayOutput)
}

type StateMachineTagsEntryOutput struct{ *pulumi.OutputState }

func (StateMachineTagsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineTagsEntry)(nil)).Elem()
}

func (o StateMachineTagsEntryOutput) ToStateMachineTagsEntryOutput() StateMachineTagsEntryOutput {
	return o
}

func (o StateMachineTagsEntryOutput) ToStateMachineTagsEntryOutputWithContext(ctx context.Context) StateMachineTagsEntryOutput {
	return o
}

func (o StateMachineTagsEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StateMachineTagsEntry) string { return v.Key }).(pulumi.StringOutput)
}

func (o StateMachineTagsEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StateMachineTagsEntry) string { return v.Value }).(pulumi.StringOutput)
}

type StateMachineTagsEntryArrayOutput struct{ *pulumi.OutputState }

func (StateMachineTagsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateMachineTagsEntry)(nil)).Elem()
}

func (o StateMachineTagsEntryArrayOutput) ToStateMachineTagsEntryArrayOutput() StateMachineTagsEntryArrayOutput {
	return o
}

func (o StateMachineTagsEntryArrayOutput) ToStateMachineTagsEntryArrayOutputWithContext(ctx context.Context) StateMachineTagsEntryArrayOutput {
	return o
}

func (o StateMachineTagsEntryArrayOutput) Index(i pulumi.IntInput) StateMachineTagsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StateMachineTagsEntry {
		return vs[0].([]StateMachineTagsEntry)[vs[1].(int)]
	}).(StateMachineTagsEntryOutput)
}

type StateMachineTracingConfiguration struct {
	Enabled *bool `pulumi:"enabled"`
}

// StateMachineTracingConfigurationInput is an input type that accepts StateMachineTracingConfigurationArgs and StateMachineTracingConfigurationOutput values.
// You can construct a concrete instance of `StateMachineTracingConfigurationInput` via:
//
//          StateMachineTracingConfigurationArgs{...}
type StateMachineTracingConfigurationInput interface {
	pulumi.Input

	ToStateMachineTracingConfigurationOutput() StateMachineTracingConfigurationOutput
	ToStateMachineTracingConfigurationOutputWithContext(context.Context) StateMachineTracingConfigurationOutput
}

type StateMachineTracingConfigurationArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (StateMachineTracingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineTracingConfiguration)(nil)).Elem()
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationOutput() StateMachineTracingConfigurationOutput {
	return i.ToStateMachineTracingConfigurationOutputWithContext(context.Background())
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationOutputWithContext(ctx context.Context) StateMachineTracingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTracingConfigurationOutput)
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return i.ToStateMachineTracingConfigurationPtrOutputWithContext(context.Background())
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTracingConfigurationOutput).ToStateMachineTracingConfigurationPtrOutputWithContext(ctx)
}

// StateMachineTracingConfigurationPtrInput is an input type that accepts StateMachineTracingConfigurationArgs, StateMachineTracingConfigurationPtr and StateMachineTracingConfigurationPtrOutput values.
// You can construct a concrete instance of `StateMachineTracingConfigurationPtrInput` via:
//
//          StateMachineTracingConfigurationArgs{...}
//
//  or:
//
//          nil
type StateMachineTracingConfigurationPtrInput interface {
	pulumi.Input

	ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput
	ToStateMachineTracingConfigurationPtrOutputWithContext(context.Context) StateMachineTracingConfigurationPtrOutput
}

type stateMachineTracingConfigurationPtrType StateMachineTracingConfigurationArgs

func StateMachineTracingConfigurationPtr(v *StateMachineTracingConfigurationArgs) StateMachineTracingConfigurationPtrInput {
	return (*stateMachineTracingConfigurationPtrType)(v)
}

func (*stateMachineTracingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineTracingConfiguration)(nil)).Elem()
}

func (i *stateMachineTracingConfigurationPtrType) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return i.ToStateMachineTracingConfigurationPtrOutputWithContext(context.Background())
}

func (i *stateMachineTracingConfigurationPtrType) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTracingConfigurationPtrOutput)
}

type StateMachineTracingConfigurationOutput struct{ *pulumi.OutputState }

func (StateMachineTracingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineTracingConfiguration)(nil)).Elem()
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationOutput() StateMachineTracingConfigurationOutput {
	return o
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationOutputWithContext(ctx context.Context) StateMachineTracingConfigurationOutput {
	return o
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return o.ToStateMachineTracingConfigurationPtrOutputWithContext(context.Background())
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineTracingConfiguration) *StateMachineTracingConfiguration {
		return &v
	}).(StateMachineTracingConfigurationPtrOutput)
}

func (o StateMachineTracingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StateMachineTracingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type StateMachineTracingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StateMachineTracingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineTracingConfiguration)(nil)).Elem()
}

func (o StateMachineTracingConfigurationPtrOutput) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return o
}

func (o StateMachineTracingConfigurationPtrOutput) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return o
}

func (o StateMachineTracingConfigurationPtrOutput) Elem() StateMachineTracingConfigurationOutput {
	return o.ApplyT(func(v *StateMachineTracingConfiguration) StateMachineTracingConfiguration {
		if v != nil {
			return *v
		}
		var ret StateMachineTracingConfiguration
		return ret
	}).(StateMachineTracingConfigurationOutput)
}

func (o StateMachineTracingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StateMachineTracingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(StateMachineCloudWatchLogsLogGroupOutput{})
	pulumi.RegisterOutputType(StateMachineCloudWatchLogsLogGroupPtrOutput{})
	pulumi.RegisterOutputType(StateMachineDefinitionOutput{})
	pulumi.RegisterOutputType(StateMachineDefinitionPtrOutput{})
	pulumi.RegisterOutputType(StateMachineDefinitionSubstitutionsOutput{})
	pulumi.RegisterOutputType(StateMachineDefinitionSubstitutionsPtrOutput{})
	pulumi.RegisterOutputType(StateMachineLogDestinationOutput{})
	pulumi.RegisterOutputType(StateMachineLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(StateMachineLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(StateMachineLoggingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StateMachineS3LocationOutput{})
	pulumi.RegisterOutputType(StateMachineS3LocationPtrOutput{})
	pulumi.RegisterOutputType(StateMachineTagsEntryOutput{})
	pulumi.RegisterOutputType(StateMachineTagsEntryArrayOutput{})
	pulumi.RegisterOutputType(StateMachineTracingConfigurationOutput{})
	pulumi.RegisterOutputType(StateMachineTracingConfigurationPtrOutput{})
}
