// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stepfunctions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for StateMachine
func LookupStateMachine(ctx *pulumi.Context, args *LookupStateMachineArgs, opts ...pulumi.InvokeOption) (*LookupStateMachineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStateMachineResult
	err := ctx.Invoke("aws-native:stepfunctions:getStateMachine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStateMachineArgs struct {
	// Returns the ARN of the resource.
	Arn string `pulumi:"arn"`
}

type LookupStateMachineResult struct {
	// Returns the ARN of the resource.
	Arn *string `pulumi:"arn"`
	// The Amazon States Language definition of the state machine. The state machine definition must be in JSON. See [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) .
	DefinitionString *string `pulumi:"definitionString"`
	// Encryption configuration for the state machine.
	EncryptionConfiguration *StateMachineEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// Defines what execution history events are logged and where they are logged.
	//
	// > By default, the `level` is set to `OFF` . For more information see [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
	LoggingConfiguration *StateMachineLoggingConfiguration `pulumi:"loggingConfiguration"`
	// Returns the name of the state machine. For example:
	//
	// `{ "Fn::GetAtt": ["MyStateMachine", "Name"] }`
	//
	// Returns the name of your state machine:
	//
	// `HelloWorld-StateMachine`
	//
	// If you did not specify the name it will be similar to the following:
	//
	// `MyStateMachine-1234abcdefgh`
	//
	// For more information about using `Fn::GetAtt` , see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html) .
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	RoleArn *string `pulumi:"roleArn"`
	// Identifier for a state machine revision, which is an immutable, read-only snapshot of a state machine’s definition and configuration.
	StateMachineRevisionId *string `pulumi:"stateMachineRevisionId"`
	// The list of tags to add to a resource.
	//
	// Tags may only contain Unicode letters, digits, white space, or these symbols: `_ . : / = + - @` .
	Tags []aws.Tag `pulumi:"tags"`
	// Selects whether or not the state machine's AWS X-Ray tracing is enabled.
	TracingConfiguration *StateMachineTracingConfiguration `pulumi:"tracingConfiguration"`
}

func LookupStateMachineOutput(ctx *pulumi.Context, args LookupStateMachineOutputArgs, opts ...pulumi.InvokeOption) LookupStateMachineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStateMachineResultOutput, error) {
			args := v.(LookupStateMachineArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupStateMachineResult
			secret, err := ctx.InvokePackageRaw("aws-native:stepfunctions:getStateMachine", args, &rv, "", opts...)
			if err != nil {
				return LookupStateMachineResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupStateMachineResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupStateMachineResultOutput), nil
			}
			return output, nil
		}).(LookupStateMachineResultOutput)
}

type LookupStateMachineOutputArgs struct {
	// Returns the ARN of the resource.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupStateMachineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStateMachineArgs)(nil)).Elem()
}

type LookupStateMachineResultOutput struct{ *pulumi.OutputState }

func (LookupStateMachineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStateMachineResult)(nil)).Elem()
}

func (o LookupStateMachineResultOutput) ToLookupStateMachineResultOutput() LookupStateMachineResultOutput {
	return o
}

func (o LookupStateMachineResultOutput) ToLookupStateMachineResultOutputWithContext(ctx context.Context) LookupStateMachineResultOutput {
	return o
}

// Returns the ARN of the resource.
func (o LookupStateMachineResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The Amazon States Language definition of the state machine. The state machine definition must be in JSON. See [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) .
func (o LookupStateMachineResultOutput) DefinitionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *string { return v.DefinitionString }).(pulumi.StringPtrOutput)
}

// Encryption configuration for the state machine.
func (o LookupStateMachineResultOutput) EncryptionConfiguration() StateMachineEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *StateMachineEncryptionConfiguration {
		return v.EncryptionConfiguration
	}).(StateMachineEncryptionConfigurationPtrOutput)
}

// Defines what execution history events are logged and where they are logged.
//
// > By default, the `level` is set to `OFF` . For more information see [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
func (o LookupStateMachineResultOutput) LoggingConfiguration() StateMachineLoggingConfigurationPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *StateMachineLoggingConfiguration { return v.LoggingConfiguration }).(StateMachineLoggingConfigurationPtrOutput)
}

// Returns the name of the state machine. For example:
//
// `{ "Fn::GetAtt": ["MyStateMachine", "Name"] }`
//
// Returns the name of your state machine:
//
// `HelloWorld-StateMachine`
//
// If you did not specify the name it will be similar to the following:
//
// `MyStateMachine-1234abcdefgh`
//
// For more information about using `Fn::GetAtt` , see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html) .
func (o LookupStateMachineResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
func (o LookupStateMachineResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Identifier for a state machine revision, which is an immutable, read-only snapshot of a state machine’s definition and configuration.
func (o LookupStateMachineResultOutput) StateMachineRevisionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *string { return v.StateMachineRevisionId }).(pulumi.StringPtrOutput)
}

// The list of tags to add to a resource.
//
// Tags may only contain Unicode letters, digits, white space, or these symbols: `_ . : / = + - @` .
func (o LookupStateMachineResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupStateMachineResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// Selects whether or not the state machine's AWS X-Ray tracing is enabled.
func (o LookupStateMachineResultOutput) TracingConfiguration() StateMachineTracingConfigurationPtrOutput {
	return o.ApplyT(func(v LookupStateMachineResult) *StateMachineTracingConfiguration { return v.TracingConfiguration }).(StateMachineTracingConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStateMachineResultOutput{})
}
