// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An object representing an Amazon EKS cluster.
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	var rv LookupClusterResult
	err := ctx.Invoke("aws-native:eks:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	// The unique name to give to your cluster.
	Name string `pulumi:"name"`
}

type LookupClusterResult struct {
	// The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
	Arn *string `pulumi:"arn"`
	// The certificate-authority-data for your cluster.
	CertificateAuthorityData *string `pulumi:"certificateAuthorityData"`
	// The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control plane to data plane communication.
	ClusterSecurityGroupId *string `pulumi:"clusterSecurityGroupId"`
	// Amazon Resource Name (ARN) or alias of the customer master key (CMK).
	EncryptionConfigKeyArn *string `pulumi:"encryptionConfigKeyArn"`
	// The endpoint for your Kubernetes API server, such as https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
	Endpoint *string         `pulumi:"endpoint"`
	Logging  *ClusterLogging `pulumi:"logging"`
	// The issuer URL for the cluster's OIDC identity provider, such as https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this output value, you can include the following code in your template.
	OpenIdConnectIssuerUrl *string                    `pulumi:"openIdConnectIssuerUrl"`
	ResourcesVpcConfig     *ClusterResourcesVpcConfig `pulumi:"resourcesVpcConfig"`
	// An array of key-value pairs to apply to this resource.
	Tags []ClusterTag `pulumi:"tags"`
	// The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
	Version *string `pulumi:"version"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResult, error) {
			args := v.(LookupClusterArgs)
			r, err := LookupCluster(ctx, &args, opts...)
			var s LookupClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterResultOutput)
}

type LookupClusterOutputArgs struct {
	// The unique name to give to your cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

// The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
func (o LookupClusterResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The certificate-authority-data for your cluster.
func (o LookupClusterResultOutput) CertificateAuthorityData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.CertificateAuthorityData }).(pulumi.StringPtrOutput)
}

// The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control plane to data plane communication.
func (o LookupClusterResultOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.ClusterSecurityGroupId }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) or alias of the customer master key (CMK).
func (o LookupClusterResultOutput) EncryptionConfigKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.EncryptionConfigKeyArn }).(pulumi.StringPtrOutput)
}

// The endpoint for your Kubernetes API server, such as https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
func (o LookupClusterResultOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) Logging() ClusterLoggingPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterLogging { return v.Logging }).(ClusterLoggingPtrOutput)
}

// The issuer URL for the cluster's OIDC identity provider, such as https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this output value, you can include the following code in your template.
func (o LookupClusterResultOutput) OpenIdConnectIssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.OpenIdConnectIssuerUrl }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) ResourcesVpcConfig() ClusterResourcesVpcConfigPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterResourcesVpcConfig { return v.ResourcesVpcConfig }).(ClusterResourcesVpcConfigPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupClusterResultOutput) Tags() ClusterTagArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []ClusterTag { return v.Tags }).(ClusterTagArrayOutput)
}

// The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
func (o LookupClusterResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
