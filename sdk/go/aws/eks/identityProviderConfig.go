// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An object representing an Amazon EKS IdentityProviderConfig.
type IdentityProviderConfig struct {
	pulumi.CustomResourceState

	// The name of the identity provider configuration.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// The ARN of the configuration.
	IdentityProviderConfigArn pulumi.StringOutput `pulumi:"identityProviderConfigArn"`
	// The name of the OIDC provider configuration.
	IdentityProviderConfigName pulumi.StringPtrOutput                                    `pulumi:"identityProviderConfigName"`
	Oidc                       IdentityProviderConfigOidcIdentityProviderConfigPtrOutput `pulumi:"oidc"`
	// An array of key-value pairs to apply to this resource.
	Tags IdentityProviderConfigTagArrayOutput `pulumi:"tags"`
	// The type of the identity provider configuration.
	Type IdentityProviderConfigTypeOutput `pulumi:"type"`
}

// NewIdentityProviderConfig registers a new resource with the given unique name, arguments, and options.
func NewIdentityProviderConfig(ctx *pulumi.Context,
	name string, args *IdentityProviderConfigArgs, opts ...pulumi.ResourceOption) (*IdentityProviderConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource IdentityProviderConfig
	err := ctx.RegisterResource("aws-native:eks:IdentityProviderConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityProviderConfig gets an existing IdentityProviderConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProviderConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityProviderConfigState, opts ...pulumi.ResourceOption) (*IdentityProviderConfig, error) {
	var resource IdentityProviderConfig
	err := ctx.ReadResource("aws-native:eks:IdentityProviderConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityProviderConfig resources.
type identityProviderConfigState struct {
}

type IdentityProviderConfigState struct {
}

func (IdentityProviderConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderConfigState)(nil)).Elem()
}

type identityProviderConfigArgs struct {
	// The name of the identity provider configuration.
	ClusterName string `pulumi:"clusterName"`
	// The name of the OIDC provider configuration.
	IdentityProviderConfigName *string                                           `pulumi:"identityProviderConfigName"`
	Oidc                       *IdentityProviderConfigOidcIdentityProviderConfig `pulumi:"oidc"`
	// An array of key-value pairs to apply to this resource.
	Tags []IdentityProviderConfigTag `pulumi:"tags"`
	// The type of the identity provider configuration.
	Type IdentityProviderConfigType `pulumi:"type"`
}

// The set of arguments for constructing a IdentityProviderConfig resource.
type IdentityProviderConfigArgs struct {
	// The name of the identity provider configuration.
	ClusterName pulumi.StringInput
	// The name of the OIDC provider configuration.
	IdentityProviderConfigName pulumi.StringPtrInput
	Oidc                       IdentityProviderConfigOidcIdentityProviderConfigPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags IdentityProviderConfigTagArrayInput
	// The type of the identity provider configuration.
	Type IdentityProviderConfigTypeInput
}

func (IdentityProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderConfigArgs)(nil)).Elem()
}

type IdentityProviderConfigInput interface {
	pulumi.Input

	ToIdentityProviderConfigOutput() IdentityProviderConfigOutput
	ToIdentityProviderConfigOutputWithContext(ctx context.Context) IdentityProviderConfigOutput
}

func (*IdentityProviderConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderConfig)(nil)).Elem()
}

func (i *IdentityProviderConfig) ToIdentityProviderConfigOutput() IdentityProviderConfigOutput {
	return i.ToIdentityProviderConfigOutputWithContext(context.Background())
}

func (i *IdentityProviderConfig) ToIdentityProviderConfigOutputWithContext(ctx context.Context) IdentityProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOutput)
}

type IdentityProviderConfigOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderConfig)(nil)).Elem()
}

func (o IdentityProviderConfigOutput) ToIdentityProviderConfigOutput() IdentityProviderConfigOutput {
	return o
}

func (o IdentityProviderConfigOutput) ToIdentityProviderConfigOutputWithContext(ctx context.Context) IdentityProviderConfigOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigInput)(nil)).Elem(), &IdentityProviderConfig{})
	pulumi.RegisterOutputType(IdentityProviderConfigOutput{})
}
