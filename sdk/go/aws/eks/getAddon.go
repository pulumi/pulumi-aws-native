// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Schema for AWS::EKS::Addon
func LookupAddon(ctx *pulumi.Context, args *LookupAddonArgs, opts ...pulumi.InvokeOption) (*LookupAddonResult, error) {
	var rv LookupAddonResult
	err := ctx.Invoke("aws-native:eks:getAddon", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAddonArgs struct {
	// Name of Addon
	AddonName string `pulumi:"addonName"`
	// Name of Cluster
	ClusterName string `pulumi:"clusterName"`
}

type LookupAddonResult struct {
	// Version of Addon
	AddonVersion *string `pulumi:"addonVersion"`
	// Amazon Resource Name (ARN) of the add-on
	Arn *string `pulumi:"arn"`
	// IAM role to bind to the add-on's service account
	ServiceAccountRoleArn *string `pulumi:"serviceAccountRoleArn"`
	// An array of key-value pairs to apply to this resource.
	Tags []AddonTag `pulumi:"tags"`
}

func LookupAddonOutput(ctx *pulumi.Context, args LookupAddonOutputArgs, opts ...pulumi.InvokeOption) LookupAddonResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAddonResult, error) {
			args := v.(LookupAddonArgs)
			r, err := LookupAddon(ctx, &args, opts...)
			return *r, err
		}).(LookupAddonResultOutput)
}

type LookupAddonOutputArgs struct {
	// Name of Addon
	AddonName pulumi.StringInput `pulumi:"addonName"`
	// Name of Cluster
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
}

func (LookupAddonOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddonArgs)(nil)).Elem()
}

type LookupAddonResultOutput struct{ *pulumi.OutputState }

func (LookupAddonResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddonResult)(nil)).Elem()
}

func (o LookupAddonResultOutput) ToLookupAddonResultOutput() LookupAddonResultOutput {
	return o
}

func (o LookupAddonResultOutput) ToLookupAddonResultOutputWithContext(ctx context.Context) LookupAddonResultOutput {
	return o
}

// Version of Addon
func (o LookupAddonResultOutput) AddonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAddonResult) *string { return v.AddonVersion }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the add-on
func (o LookupAddonResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAddonResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// IAM role to bind to the add-on's service account
func (o LookupAddonResultOutput) ServiceAccountRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAddonResult) *string { return v.ServiceAccountRoleArn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupAddonResultOutput) Tags() AddonTagArrayOutput {
	return o.ApplyT(func(v LookupAddonResult) []AddonTag { return v.Tags }).(AddonTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAddonResultOutput{})
}
