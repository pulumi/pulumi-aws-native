// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// An object representing an Amazon EKS PodIdentityAssociation.
type PodIdentityAssociation struct {
	pulumi.CustomResourceState

	// The ARN of the pod identity association.
	AssociationArn pulumi.StringOutput `pulumi:"associationArn"`
	// The ID of the pod identity association.
	AssociationId pulumi.StringOutput `pulumi:"associationId"`
	// The cluster that the pod identity association is created for.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// The Kubernetes namespace that the pod identity association is created for.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// The IAM role ARN that the pod identity association is created for.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The Kubernetes service account that the pod identity association is created for.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// An array of key-value pairs to apply to this resource.
	Tags PodIdentityAssociationTagArrayOutput `pulumi:"tags"`
}

// NewPodIdentityAssociation registers a new resource with the given unique name, arguments, and options.
func NewPodIdentityAssociation(ctx *pulumi.Context,
	name string, args *PodIdentityAssociationArgs, opts ...pulumi.ResourceOption) (*PodIdentityAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.ServiceAccount == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccount'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"clusterName",
		"namespace",
		"serviceAccount",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PodIdentityAssociation
	err := ctx.RegisterResource("aws-native:eks:PodIdentityAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodIdentityAssociation gets an existing PodIdentityAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodIdentityAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodIdentityAssociationState, opts ...pulumi.ResourceOption) (*PodIdentityAssociation, error) {
	var resource PodIdentityAssociation
	err := ctx.ReadResource("aws-native:eks:PodIdentityAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodIdentityAssociation resources.
type podIdentityAssociationState struct {
}

type PodIdentityAssociationState struct {
}

func (PodIdentityAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*podIdentityAssociationState)(nil)).Elem()
}

type podIdentityAssociationArgs struct {
	// The cluster that the pod identity association is created for.
	ClusterName string `pulumi:"clusterName"`
	// The Kubernetes namespace that the pod identity association is created for.
	Namespace string `pulumi:"namespace"`
	// The IAM role ARN that the pod identity association is created for.
	RoleArn string `pulumi:"roleArn"`
	// The Kubernetes service account that the pod identity association is created for.
	ServiceAccount string `pulumi:"serviceAccount"`
	// An array of key-value pairs to apply to this resource.
	Tags []PodIdentityAssociationTag `pulumi:"tags"`
}

// The set of arguments for constructing a PodIdentityAssociation resource.
type PodIdentityAssociationArgs struct {
	// The cluster that the pod identity association is created for.
	ClusterName pulumi.StringInput
	// The Kubernetes namespace that the pod identity association is created for.
	Namespace pulumi.StringInput
	// The IAM role ARN that the pod identity association is created for.
	RoleArn pulumi.StringInput
	// The Kubernetes service account that the pod identity association is created for.
	ServiceAccount pulumi.StringInput
	// An array of key-value pairs to apply to this resource.
	Tags PodIdentityAssociationTagArrayInput
}

func (PodIdentityAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podIdentityAssociationArgs)(nil)).Elem()
}

type PodIdentityAssociationInput interface {
	pulumi.Input

	ToPodIdentityAssociationOutput() PodIdentityAssociationOutput
	ToPodIdentityAssociationOutputWithContext(ctx context.Context) PodIdentityAssociationOutput
}

func (*PodIdentityAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**PodIdentityAssociation)(nil)).Elem()
}

func (i *PodIdentityAssociation) ToPodIdentityAssociationOutput() PodIdentityAssociationOutput {
	return i.ToPodIdentityAssociationOutputWithContext(context.Background())
}

func (i *PodIdentityAssociation) ToPodIdentityAssociationOutputWithContext(ctx context.Context) PodIdentityAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodIdentityAssociationOutput)
}

func (i *PodIdentityAssociation) ToOutput(ctx context.Context) pulumix.Output[*PodIdentityAssociation] {
	return pulumix.Output[*PodIdentityAssociation]{
		OutputState: i.ToPodIdentityAssociationOutputWithContext(ctx).OutputState,
	}
}

type PodIdentityAssociationOutput struct{ *pulumi.OutputState }

func (PodIdentityAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodIdentityAssociation)(nil)).Elem()
}

func (o PodIdentityAssociationOutput) ToPodIdentityAssociationOutput() PodIdentityAssociationOutput {
	return o
}

func (o PodIdentityAssociationOutput) ToPodIdentityAssociationOutputWithContext(ctx context.Context) PodIdentityAssociationOutput {
	return o
}

func (o PodIdentityAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[*PodIdentityAssociation] {
	return pulumix.Output[*PodIdentityAssociation]{
		OutputState: o.OutputState,
	}
}

// The ARN of the pod identity association.
func (o PodIdentityAssociationOutput) AssociationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) pulumi.StringOutput { return v.AssociationArn }).(pulumi.StringOutput)
}

// The ID of the pod identity association.
func (o PodIdentityAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) pulumi.StringOutput { return v.AssociationId }).(pulumi.StringOutput)
}

// The cluster that the pod identity association is created for.
func (o PodIdentityAssociationOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) pulumi.StringOutput { return v.ClusterName }).(pulumi.StringOutput)
}

// The Kubernetes namespace that the pod identity association is created for.
func (o PodIdentityAssociationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// The IAM role ARN that the pod identity association is created for.
func (o PodIdentityAssociationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The Kubernetes service account that the pod identity association is created for.
func (o PodIdentityAssociationOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o PodIdentityAssociationOutput) Tags() PodIdentityAssociationTagArrayOutput {
	return o.ApplyT(func(v *PodIdentityAssociation) PodIdentityAssociationTagArrayOutput { return v.Tags }).(PodIdentityAssociationTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodIdentityAssociationInput)(nil)).Elem(), &PodIdentityAssociation{})
	pulumi.RegisterOutputType(PodIdentityAssociationOutput{})
}
