// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type AddonTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// AddonTagInput is an input type that accepts AddonTagArgs and AddonTagOutput values.
// You can construct a concrete instance of `AddonTagInput` via:
//
//          AddonTagArgs{...}
type AddonTagInput interface {
	pulumi.Input

	ToAddonTagOutput() AddonTagOutput
	ToAddonTagOutputWithContext(context.Context) AddonTagOutput
}

// A key-value pair to associate with a resource.
type AddonTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AddonTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonTag)(nil)).Elem()
}

func (i AddonTagArgs) ToAddonTagOutput() AddonTagOutput {
	return i.ToAddonTagOutputWithContext(context.Background())
}

func (i AddonTagArgs) ToAddonTagOutputWithContext(ctx context.Context) AddonTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonTagOutput)
}

// AddonTagArrayInput is an input type that accepts AddonTagArray and AddonTagArrayOutput values.
// You can construct a concrete instance of `AddonTagArrayInput` via:
//
//          AddonTagArray{ AddonTagArgs{...} }
type AddonTagArrayInput interface {
	pulumi.Input

	ToAddonTagArrayOutput() AddonTagArrayOutput
	ToAddonTagArrayOutputWithContext(context.Context) AddonTagArrayOutput
}

type AddonTagArray []AddonTagInput

func (AddonTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddonTag)(nil)).Elem()
}

func (i AddonTagArray) ToAddonTagArrayOutput() AddonTagArrayOutput {
	return i.ToAddonTagArrayOutputWithContext(context.Background())
}

func (i AddonTagArray) ToAddonTagArrayOutputWithContext(ctx context.Context) AddonTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonTagArrayOutput)
}

// A key-value pair to associate with a resource.
type AddonTagOutput struct{ *pulumi.OutputState }

func (AddonTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonTag)(nil)).Elem()
}

func (o AddonTagOutput) ToAddonTagOutput() AddonTagOutput {
	return o
}

func (o AddonTagOutput) ToAddonTagOutputWithContext(ctx context.Context) AddonTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o AddonTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AddonTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o AddonTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AddonTag) string { return v.Value }).(pulumi.StringOutput)
}

type AddonTagArrayOutput struct{ *pulumi.OutputState }

func (AddonTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddonTag)(nil)).Elem()
}

func (o AddonTagArrayOutput) ToAddonTagArrayOutput() AddonTagArrayOutput {
	return o
}

func (o AddonTagArrayOutput) ToAddonTagArrayOutputWithContext(ctx context.Context) AddonTagArrayOutput {
	return o
}

func (o AddonTagArrayOutput) Index(i pulumi.IntInput) AddonTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddonTag {
		return vs[0].([]AddonTag)[vs[1].(int)]
	}).(AddonTagOutput)
}

// The encryption configuration for the cluster
type ClusterEncryptionConfig struct {
	// The encryption provider for the cluster.
	Provider *ClusterProvider `pulumi:"provider"`
	// Specifies the resources to be encrypted. The only supported value is "secrets".
	Resources []string `pulumi:"resources"`
}

// ClusterEncryptionConfigInput is an input type that accepts ClusterEncryptionConfigArgs and ClusterEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigInput` via:
//
//          ClusterEncryptionConfigArgs{...}
type ClusterEncryptionConfigInput interface {
	pulumi.Input

	ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput
	ToClusterEncryptionConfigOutputWithContext(context.Context) ClusterEncryptionConfigOutput
}

// The encryption configuration for the cluster
type ClusterEncryptionConfigArgs struct {
	// The encryption provider for the cluster.
	Provider ClusterProviderPtrInput `pulumi:"provider"`
	// Specifies the resources to be encrypted. The only supported value is "secrets".
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (ClusterEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return i.ToClusterEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput)
}

// ClusterEncryptionConfigArrayInput is an input type that accepts ClusterEncryptionConfigArray and ClusterEncryptionConfigArrayOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigArrayInput` via:
//
//          ClusterEncryptionConfigArray{ ClusterEncryptionConfigArgs{...} }
type ClusterEncryptionConfigArrayInput interface {
	pulumi.Input

	ToClusterEncryptionConfigArrayOutput() ClusterEncryptionConfigArrayOutput
	ToClusterEncryptionConfigArrayOutputWithContext(context.Context) ClusterEncryptionConfigArrayOutput
}

type ClusterEncryptionConfigArray []ClusterEncryptionConfigInput

func (ClusterEncryptionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArray) ToClusterEncryptionConfigArrayOutput() ClusterEncryptionConfigArrayOutput {
	return i.ToClusterEncryptionConfigArrayOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArray) ToClusterEncryptionConfigArrayOutputWithContext(ctx context.Context) ClusterEncryptionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigArrayOutput)
}

// The encryption configuration for the cluster
type ClusterEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return o
}

// The encryption provider for the cluster.
func (o ClusterEncryptionConfigOutput) Provider() ClusterProviderPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) *ClusterProvider { return v.Provider }).(ClusterProviderPtrOutput)
}

// Specifies the resources to be encrypted. The only supported value is "secrets".
func (o ClusterEncryptionConfigOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type ClusterEncryptionConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigArrayOutput) ToClusterEncryptionConfigArrayOutput() ClusterEncryptionConfigArrayOutput {
	return o
}

func (o ClusterEncryptionConfigArrayOutput) ToClusterEncryptionConfigArrayOutputWithContext(ctx context.Context) ClusterEncryptionConfigArrayOutput {
	return o
}

func (o ClusterEncryptionConfigArrayOutput) Index(i pulumi.IntInput) ClusterEncryptionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterEncryptionConfig {
		return vs[0].([]ClusterEncryptionConfig)[vs[1].(int)]
	}).(ClusterEncryptionConfigOutput)
}

// The Kubernetes network configuration for the cluster.
type ClusterKubernetesNetworkConfig struct {
	// Ipv4 or Ipv6. You can only specify ipv6 for 1.21 and later clusters that use version 1.10.1 or later of the Amazon VPC CNI add-on
	IpFamily *ClusterKubernetesNetworkConfigIpFamily `pulumi:"ipFamily"`
	// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
	ServiceIpv4Cidr *string `pulumi:"serviceIpv4Cidr"`
	// The CIDR block to assign Kubernetes service IP addresses from.
	ServiceIpv6Cidr *string `pulumi:"serviceIpv6Cidr"`
}

// ClusterKubernetesNetworkConfigInput is an input type that accepts ClusterKubernetesNetworkConfigArgs and ClusterKubernetesNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigInput` via:
//
//          ClusterKubernetesNetworkConfigArgs{...}
type ClusterKubernetesNetworkConfigInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput
	ToClusterKubernetesNetworkConfigOutputWithContext(context.Context) ClusterKubernetesNetworkConfigOutput
}

// The Kubernetes network configuration for the cluster.
type ClusterKubernetesNetworkConfigArgs struct {
	// Ipv4 or Ipv6. You can only specify ipv6 for 1.21 and later clusters that use version 1.10.1 or later of the Amazon VPC CNI add-on
	IpFamily ClusterKubernetesNetworkConfigIpFamilyPtrInput `pulumi:"ipFamily"`
	// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
	ServiceIpv4Cidr pulumi.StringPtrInput `pulumi:"serviceIpv4Cidr"`
	// The CIDR block to assign Kubernetes service IP addresses from.
	ServiceIpv6Cidr pulumi.StringPtrInput `pulumi:"serviceIpv6Cidr"`
}

func (ClusterKubernetesNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return i.ToClusterKubernetesNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput)
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput).ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx)
}

// ClusterKubernetesNetworkConfigPtrInput is an input type that accepts ClusterKubernetesNetworkConfigArgs, ClusterKubernetesNetworkConfigPtr and ClusterKubernetesNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigPtrInput` via:
//
//          ClusterKubernetesNetworkConfigArgs{...}
//
//  or:
//
//          nil
type ClusterKubernetesNetworkConfigPtrInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput
	ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Context) ClusterKubernetesNetworkConfigPtrOutput
}

type clusterKubernetesNetworkConfigPtrType ClusterKubernetesNetworkConfigArgs

func ClusterKubernetesNetworkConfigPtr(v *ClusterKubernetesNetworkConfigArgs) ClusterKubernetesNetworkConfigPtrInput {
	return (*clusterKubernetesNetworkConfigPtrType)(v)
}

func (*clusterKubernetesNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigPtrOutput)
}

// The Kubernetes network configuration for the cluster.
type ClusterKubernetesNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubernetesNetworkConfig) *ClusterKubernetesNetworkConfig {
		return &v
	}).(ClusterKubernetesNetworkConfigPtrOutput)
}

// Ipv4 or Ipv6. You can only specify ipv6 for 1.21 and later clusters that use version 1.10.1 or later of the Amazon VPC CNI add-on
func (o ClusterKubernetesNetworkConfigOutput) IpFamily() ClusterKubernetesNetworkConfigIpFamilyPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *ClusterKubernetesNetworkConfigIpFamily { return v.IpFamily }).(ClusterKubernetesNetworkConfigIpFamilyPtrOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
func (o ClusterKubernetesNetworkConfigOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.ServiceIpv4Cidr }).(pulumi.StringPtrOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from.
func (o ClusterKubernetesNetworkConfigOutput) ServiceIpv6Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.ServiceIpv6Cidr }).(pulumi.StringPtrOutput)
}

type ClusterKubernetesNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) Elem() ClusterKubernetesNetworkConfigOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) ClusterKubernetesNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ClusterKubernetesNetworkConfig
		return ret
	}).(ClusterKubernetesNetworkConfigOutput)
}

// Ipv4 or Ipv6. You can only specify ipv6 for 1.21 and later clusters that use version 1.10.1 or later of the Amazon VPC CNI add-on
func (o ClusterKubernetesNetworkConfigPtrOutput) IpFamily() ClusterKubernetesNetworkConfigIpFamilyPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *ClusterKubernetesNetworkConfigIpFamily {
		if v == nil {
			return nil
		}
		return v.IpFamily
	}).(ClusterKubernetesNetworkConfigIpFamilyPtrOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
func (o ClusterKubernetesNetworkConfigPtrOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv4Cidr
	}).(pulumi.StringPtrOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from.
func (o ClusterKubernetesNetworkConfigPtrOutput) ServiceIpv6Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv6Cidr
	}).(pulumi.StringPtrOutput)
}

// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
type ClusterLogging struct {
	// The cluster control plane logging configuration for your cluster.
	ClusterLogging *ClusterLogging `pulumi:"clusterLogging"`
}

// ClusterLoggingInput is an input type that accepts ClusterLoggingArgs and ClusterLoggingOutput values.
// You can construct a concrete instance of `ClusterLoggingInput` via:
//
//          ClusterLoggingArgs{...}
type ClusterLoggingInput interface {
	pulumi.Input

	ToClusterLoggingOutput() ClusterLoggingOutput
	ToClusterLoggingOutputWithContext(context.Context) ClusterLoggingOutput
}

// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
type ClusterLoggingArgs struct {
	// The cluster control plane logging configuration for your cluster.
	ClusterLogging ClusterLoggingPtrInput `pulumi:"clusterLogging"`
}

func (ClusterLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogging)(nil)).Elem()
}

func (i ClusterLoggingArgs) ToClusterLoggingOutput() ClusterLoggingOutput {
	return i.ToClusterLoggingOutputWithContext(context.Background())
}

func (i ClusterLoggingArgs) ToClusterLoggingOutputWithContext(ctx context.Context) ClusterLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingOutput)
}

func (i ClusterLoggingArgs) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return i.ToClusterLoggingPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingArgs) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingOutput).ToClusterLoggingPtrOutputWithContext(ctx)
}

// ClusterLoggingPtrInput is an input type that accepts ClusterLoggingArgs, ClusterLoggingPtr and ClusterLoggingPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingPtrInput` via:
//
//          ClusterLoggingArgs{...}
//
//  or:
//
//          nil
type ClusterLoggingPtrInput interface {
	pulumi.Input

	ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput
	ToClusterLoggingPtrOutputWithContext(context.Context) ClusterLoggingPtrOutput
}

type clusterLoggingPtrType ClusterLoggingArgs

func ClusterLoggingPtr(v *ClusterLoggingArgs) ClusterLoggingPtrInput {
	return (*clusterLoggingPtrType)(v)
}

func (*clusterLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLogging)(nil)).Elem()
}

func (i *clusterLoggingPtrType) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return i.ToClusterLoggingPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingPtrType) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingPtrOutput)
}

// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
type ClusterLoggingOutput struct{ *pulumi.OutputState }

func (ClusterLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogging)(nil)).Elem()
}

func (o ClusterLoggingOutput) ToClusterLoggingOutput() ClusterLoggingOutput {
	return o
}

func (o ClusterLoggingOutput) ToClusterLoggingOutputWithContext(ctx context.Context) ClusterLoggingOutput {
	return o
}

func (o ClusterLoggingOutput) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return o.ToClusterLoggingPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingOutput) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLogging) *ClusterLogging {
		return &v
	}).(ClusterLoggingPtrOutput)
}

// The cluster control plane logging configuration for your cluster.
func (o ClusterLoggingOutput) ClusterLogging() ClusterLoggingPtrOutput {
	return o.ApplyT(func(v ClusterLogging) *ClusterLogging { return v.ClusterLogging }).(ClusterLoggingPtrOutput)
}

type ClusterLoggingPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLogging)(nil)).Elem()
}

func (o ClusterLoggingPtrOutput) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return o
}

func (o ClusterLoggingPtrOutput) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return o
}

func (o ClusterLoggingPtrOutput) Elem() ClusterLoggingOutput {
	return o.ApplyT(func(v *ClusterLogging) ClusterLogging {
		if v != nil {
			return *v
		}
		var ret ClusterLogging
		return ret
	}).(ClusterLoggingOutput)
}

// The cluster control plane logging configuration for your cluster.
func (o ClusterLoggingPtrOutput) ClusterLogging() ClusterLoggingPtrOutput {
	return o.ApplyT(func(v *ClusterLogging) *ClusterLogging {
		if v == nil {
			return nil
		}
		return v.ClusterLogging
	}).(ClusterLoggingPtrOutput)
}

type ClusterProvider struct {
	// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
	KeyArn *string `pulumi:"keyArn"`
}

// ClusterProviderInput is an input type that accepts ClusterProviderArgs and ClusterProviderOutput values.
// You can construct a concrete instance of `ClusterProviderInput` via:
//
//          ClusterProviderArgs{...}
type ClusterProviderInput interface {
	pulumi.Input

	ToClusterProviderOutput() ClusterProviderOutput
	ToClusterProviderOutputWithContext(context.Context) ClusterProviderOutput
}

type ClusterProviderArgs struct {
	// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
	KeyArn pulumi.StringPtrInput `pulumi:"keyArn"`
}

func (ClusterProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProvider)(nil)).Elem()
}

func (i ClusterProviderArgs) ToClusterProviderOutput() ClusterProviderOutput {
	return i.ToClusterProviderOutputWithContext(context.Background())
}

func (i ClusterProviderArgs) ToClusterProviderOutputWithContext(ctx context.Context) ClusterProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProviderOutput)
}

func (i ClusterProviderArgs) ToClusterProviderPtrOutput() ClusterProviderPtrOutput {
	return i.ToClusterProviderPtrOutputWithContext(context.Background())
}

func (i ClusterProviderArgs) ToClusterProviderPtrOutputWithContext(ctx context.Context) ClusterProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProviderOutput).ToClusterProviderPtrOutputWithContext(ctx)
}

// ClusterProviderPtrInput is an input type that accepts ClusterProviderArgs, ClusterProviderPtr and ClusterProviderPtrOutput values.
// You can construct a concrete instance of `ClusterProviderPtrInput` via:
//
//          ClusterProviderArgs{...}
//
//  or:
//
//          nil
type ClusterProviderPtrInput interface {
	pulumi.Input

	ToClusterProviderPtrOutput() ClusterProviderPtrOutput
	ToClusterProviderPtrOutputWithContext(context.Context) ClusterProviderPtrOutput
}

type clusterProviderPtrType ClusterProviderArgs

func ClusterProviderPtr(v *ClusterProviderArgs) ClusterProviderPtrInput {
	return (*clusterProviderPtrType)(v)
}

func (*clusterProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProvider)(nil)).Elem()
}

func (i *clusterProviderPtrType) ToClusterProviderPtrOutput() ClusterProviderPtrOutput {
	return i.ToClusterProviderPtrOutputWithContext(context.Background())
}

func (i *clusterProviderPtrType) ToClusterProviderPtrOutputWithContext(ctx context.Context) ClusterProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProviderPtrOutput)
}

type ClusterProviderOutput struct{ *pulumi.OutputState }

func (ClusterProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProvider)(nil)).Elem()
}

func (o ClusterProviderOutput) ToClusterProviderOutput() ClusterProviderOutput {
	return o
}

func (o ClusterProviderOutput) ToClusterProviderOutputWithContext(ctx context.Context) ClusterProviderOutput {
	return o
}

func (o ClusterProviderOutput) ToClusterProviderPtrOutput() ClusterProviderPtrOutput {
	return o.ToClusterProviderPtrOutputWithContext(context.Background())
}

func (o ClusterProviderOutput) ToClusterProviderPtrOutputWithContext(ctx context.Context) ClusterProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterProvider) *ClusterProvider {
		return &v
	}).(ClusterProviderPtrOutput)
}

// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
func (o ClusterProviderOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterProvider) *string { return v.KeyArn }).(pulumi.StringPtrOutput)
}

type ClusterProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProvider)(nil)).Elem()
}

func (o ClusterProviderPtrOutput) ToClusterProviderPtrOutput() ClusterProviderPtrOutput {
	return o
}

func (o ClusterProviderPtrOutput) ToClusterProviderPtrOutputWithContext(ctx context.Context) ClusterProviderPtrOutput {
	return o
}

func (o ClusterProviderPtrOutput) Elem() ClusterProviderOutput {
	return o.ApplyT(func(v *ClusterProvider) ClusterProvider {
		if v != nil {
			return *v
		}
		var ret ClusterProvider
		return ret
	}).(ClusterProviderOutput)
}

// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
func (o ClusterProviderPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProvider) *string {
		if v == nil {
			return nil
		}
		return v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// An object representing the VPC configuration to use for an Amazon EKS cluster.
type ClusterResourcesVpcConfig struct {
	// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
	EndpointPrivateAccess *bool `pulumi:"endpointPrivateAccess"`
	// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
	EndpointPublicAccess *bool `pulumi:"endpointPublicAccess"`
	// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ClusterResourcesVpcConfigInput is an input type that accepts ClusterResourcesVpcConfigArgs and ClusterResourcesVpcConfigOutput values.
// You can construct a concrete instance of `ClusterResourcesVpcConfigInput` via:
//
//          ClusterResourcesVpcConfigArgs{...}
type ClusterResourcesVpcConfigInput interface {
	pulumi.Input

	ToClusterResourcesVpcConfigOutput() ClusterResourcesVpcConfigOutput
	ToClusterResourcesVpcConfigOutputWithContext(context.Context) ClusterResourcesVpcConfigOutput
}

// An object representing the VPC configuration to use for an Amazon EKS cluster.
type ClusterResourcesVpcConfigArgs struct {
	// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
	EndpointPrivateAccess pulumi.BoolPtrInput `pulumi:"endpointPrivateAccess"`
	// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
	EndpointPublicAccess pulumi.BoolPtrInput `pulumi:"endpointPublicAccess"`
	// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
	PublicAccessCidrs pulumi.StringArrayInput `pulumi:"publicAccessCidrs"`
	// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ClusterResourcesVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourcesVpcConfig)(nil)).Elem()
}

func (i ClusterResourcesVpcConfigArgs) ToClusterResourcesVpcConfigOutput() ClusterResourcesVpcConfigOutput {
	return i.ToClusterResourcesVpcConfigOutputWithContext(context.Background())
}

func (i ClusterResourcesVpcConfigArgs) ToClusterResourcesVpcConfigOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcesVpcConfigOutput)
}

// An object representing the VPC configuration to use for an Amazon EKS cluster.
type ClusterResourcesVpcConfigOutput struct{ *pulumi.OutputState }

func (ClusterResourcesVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourcesVpcConfig)(nil)).Elem()
}

func (o ClusterResourcesVpcConfigOutput) ToClusterResourcesVpcConfigOutput() ClusterResourcesVpcConfigOutput {
	return o
}

func (o ClusterResourcesVpcConfigOutput) ToClusterResourcesVpcConfigOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigOutput {
	return o
}

// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
func (o ClusterResourcesVpcConfigOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) *bool { return v.EndpointPrivateAccess }).(pulumi.BoolPtrOutput)
}

// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
func (o ClusterResourcesVpcConfigOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) *bool { return v.EndpointPublicAccess }).(pulumi.BoolPtrOutput)
}

// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
func (o ClusterResourcesVpcConfigOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
func (o ClusterResourcesVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
func (o ClusterResourcesVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ClusterResourcesVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourcesVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourcesVpcConfig)(nil)).Elem()
}

func (o ClusterResourcesVpcConfigPtrOutput) ToClusterResourcesVpcConfigPtrOutput() ClusterResourcesVpcConfigPtrOutput {
	return o
}

func (o ClusterResourcesVpcConfigPtrOutput) ToClusterResourcesVpcConfigPtrOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigPtrOutput {
	return o
}

func (o ClusterResourcesVpcConfigPtrOutput) Elem() ClusterResourcesVpcConfigOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) ClusterResourcesVpcConfig {
		if v != nil {
			return *v
		}
		var ret ClusterResourcesVpcConfig
		return ret
	}).(ClusterResourcesVpcConfigOutput)
}

// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
func (o ClusterResourcesVpcConfigPtrOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPrivateAccess
	}).(pulumi.BoolPtrOutput)
}

// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
func (o ClusterResourcesVpcConfigPtrOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
func (o ClusterResourcesVpcConfigPtrOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.PublicAccessCidrs
	}).(pulumi.StringArrayOutput)
}

// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
func (o ClusterResourcesVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
func (o ClusterResourcesVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type ClusterTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ClusterTagInput is an input type that accepts ClusterTagArgs and ClusterTagOutput values.
// You can construct a concrete instance of `ClusterTagInput` via:
//
//          ClusterTagArgs{...}
type ClusterTagInput interface {
	pulumi.Input

	ToClusterTagOutput() ClusterTagOutput
	ToClusterTagOutputWithContext(context.Context) ClusterTagOutput
}

// A key-value pair to associate with a resource.
type ClusterTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (i ClusterTagArgs) ToClusterTagOutput() ClusterTagOutput {
	return i.ToClusterTagOutputWithContext(context.Background())
}

func (i ClusterTagArgs) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagOutput)
}

// ClusterTagArrayInput is an input type that accepts ClusterTagArray and ClusterTagArrayOutput values.
// You can construct a concrete instance of `ClusterTagArrayInput` via:
//
//          ClusterTagArray{ ClusterTagArgs{...} }
type ClusterTagArrayInput interface {
	pulumi.Input

	ToClusterTagArrayOutput() ClusterTagArrayOutput
	ToClusterTagArrayOutputWithContext(context.Context) ClusterTagArrayOutput
}

type ClusterTagArray []ClusterTagInput

func (ClusterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (i ClusterTagArray) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return i.ToClusterTagArrayOutputWithContext(context.Background())
}

func (i ClusterTagArray) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ClusterTagOutput struct{ *pulumi.OutputState }

func (ClusterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (o ClusterTagOutput) ToClusterTagOutput() ClusterTagOutput {
	return o
}

func (o ClusterTagOutput) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ClusterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ClusterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) Index(i pulumi.IntInput) ClusterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterTag {
		return vs[0].([]ClusterTag)[vs[1].(int)]
	}).(ClusterTagOutput)
}

// A key-value pair to associate with a pod.
type FargateProfileLabel struct {
	// The key name of the label.
	Key string `pulumi:"key"`
	// The value for the label.
	Value string `pulumi:"value"`
}

// FargateProfileLabelInput is an input type that accepts FargateProfileLabelArgs and FargateProfileLabelOutput values.
// You can construct a concrete instance of `FargateProfileLabelInput` via:
//
//          FargateProfileLabelArgs{...}
type FargateProfileLabelInput interface {
	pulumi.Input

	ToFargateProfileLabelOutput() FargateProfileLabelOutput
	ToFargateProfileLabelOutputWithContext(context.Context) FargateProfileLabelOutput
}

// A key-value pair to associate with a pod.
type FargateProfileLabelArgs struct {
	// The key name of the label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FargateProfileLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileLabel)(nil)).Elem()
}

func (i FargateProfileLabelArgs) ToFargateProfileLabelOutput() FargateProfileLabelOutput {
	return i.ToFargateProfileLabelOutputWithContext(context.Background())
}

func (i FargateProfileLabelArgs) ToFargateProfileLabelOutputWithContext(ctx context.Context) FargateProfileLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileLabelOutput)
}

// FargateProfileLabelArrayInput is an input type that accepts FargateProfileLabelArray and FargateProfileLabelArrayOutput values.
// You can construct a concrete instance of `FargateProfileLabelArrayInput` via:
//
//          FargateProfileLabelArray{ FargateProfileLabelArgs{...} }
type FargateProfileLabelArrayInput interface {
	pulumi.Input

	ToFargateProfileLabelArrayOutput() FargateProfileLabelArrayOutput
	ToFargateProfileLabelArrayOutputWithContext(context.Context) FargateProfileLabelArrayOutput
}

type FargateProfileLabelArray []FargateProfileLabelInput

func (FargateProfileLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileLabel)(nil)).Elem()
}

func (i FargateProfileLabelArray) ToFargateProfileLabelArrayOutput() FargateProfileLabelArrayOutput {
	return i.ToFargateProfileLabelArrayOutputWithContext(context.Background())
}

func (i FargateProfileLabelArray) ToFargateProfileLabelArrayOutputWithContext(ctx context.Context) FargateProfileLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileLabelArrayOutput)
}

// A key-value pair to associate with a pod.
type FargateProfileLabelOutput struct{ *pulumi.OutputState }

func (FargateProfileLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileLabel)(nil)).Elem()
}

func (o FargateProfileLabelOutput) ToFargateProfileLabelOutput() FargateProfileLabelOutput {
	return o
}

func (o FargateProfileLabelOutput) ToFargateProfileLabelOutputWithContext(ctx context.Context) FargateProfileLabelOutput {
	return o
}

// The key name of the label.
func (o FargateProfileLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the label.
func (o FargateProfileLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileLabel) string { return v.Value }).(pulumi.StringOutput)
}

type FargateProfileLabelArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileLabel)(nil)).Elem()
}

func (o FargateProfileLabelArrayOutput) ToFargateProfileLabelArrayOutput() FargateProfileLabelArrayOutput {
	return o
}

func (o FargateProfileLabelArrayOutput) ToFargateProfileLabelArrayOutputWithContext(ctx context.Context) FargateProfileLabelArrayOutput {
	return o
}

func (o FargateProfileLabelArrayOutput) Index(i pulumi.IntInput) FargateProfileLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileLabel {
		return vs[0].([]FargateProfileLabel)[vs[1].(int)]
	}).(FargateProfileLabelOutput)
}

type FargateProfileSelector struct {
	Labels    []FargateProfileLabel `pulumi:"labels"`
	Namespace string                `pulumi:"namespace"`
}

// FargateProfileSelectorInput is an input type that accepts FargateProfileSelectorArgs and FargateProfileSelectorOutput values.
// You can construct a concrete instance of `FargateProfileSelectorInput` via:
//
//          FargateProfileSelectorArgs{...}
type FargateProfileSelectorInput interface {
	pulumi.Input

	ToFargateProfileSelectorOutput() FargateProfileSelectorOutput
	ToFargateProfileSelectorOutputWithContext(context.Context) FargateProfileSelectorOutput
}

type FargateProfileSelectorArgs struct {
	Labels    FargateProfileLabelArrayInput `pulumi:"labels"`
	Namespace pulumi.StringInput            `pulumi:"namespace"`
}

func (FargateProfileSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return i.ToFargateProfileSelectorOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorOutput)
}

// FargateProfileSelectorArrayInput is an input type that accepts FargateProfileSelectorArray and FargateProfileSelectorArrayOutput values.
// You can construct a concrete instance of `FargateProfileSelectorArrayInput` via:
//
//          FargateProfileSelectorArray{ FargateProfileSelectorArgs{...} }
type FargateProfileSelectorArrayInput interface {
	pulumi.Input

	ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput
	ToFargateProfileSelectorArrayOutputWithContext(context.Context) FargateProfileSelectorArrayOutput
}

type FargateProfileSelectorArray []FargateProfileSelectorInput

func (FargateProfileSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return i.ToFargateProfileSelectorArrayOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorArrayOutput)
}

type FargateProfileSelectorOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return o
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return o
}

func (o FargateProfileSelectorOutput) Labels() FargateProfileLabelArrayOutput {
	return o.ApplyT(func(v FargateProfileSelector) []FargateProfileLabel { return v.Labels }).(FargateProfileLabelArrayOutput)
}

func (o FargateProfileSelectorOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileSelector) string { return v.Namespace }).(pulumi.StringOutput)
}

type FargateProfileSelectorArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) Index(i pulumi.IntInput) FargateProfileSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileSelector {
		return vs[0].([]FargateProfileSelector)[vs[1].(int)]
	}).(FargateProfileSelectorOutput)
}

// A key-value pair to associate with a resource.
type FargateProfileTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// FargateProfileTagInput is an input type that accepts FargateProfileTagArgs and FargateProfileTagOutput values.
// You can construct a concrete instance of `FargateProfileTagInput` via:
//
//          FargateProfileTagArgs{...}
type FargateProfileTagInput interface {
	pulumi.Input

	ToFargateProfileTagOutput() FargateProfileTagOutput
	ToFargateProfileTagOutputWithContext(context.Context) FargateProfileTagOutput
}

// A key-value pair to associate with a resource.
type FargateProfileTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FargateProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileTag)(nil)).Elem()
}

func (i FargateProfileTagArgs) ToFargateProfileTagOutput() FargateProfileTagOutput {
	return i.ToFargateProfileTagOutputWithContext(context.Background())
}

func (i FargateProfileTagArgs) ToFargateProfileTagOutputWithContext(ctx context.Context) FargateProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileTagOutput)
}

// FargateProfileTagArrayInput is an input type that accepts FargateProfileTagArray and FargateProfileTagArrayOutput values.
// You can construct a concrete instance of `FargateProfileTagArrayInput` via:
//
//          FargateProfileTagArray{ FargateProfileTagArgs{...} }
type FargateProfileTagArrayInput interface {
	pulumi.Input

	ToFargateProfileTagArrayOutput() FargateProfileTagArrayOutput
	ToFargateProfileTagArrayOutputWithContext(context.Context) FargateProfileTagArrayOutput
}

type FargateProfileTagArray []FargateProfileTagInput

func (FargateProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileTag)(nil)).Elem()
}

func (i FargateProfileTagArray) ToFargateProfileTagArrayOutput() FargateProfileTagArrayOutput {
	return i.ToFargateProfileTagArrayOutputWithContext(context.Background())
}

func (i FargateProfileTagArray) ToFargateProfileTagArrayOutputWithContext(ctx context.Context) FargateProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileTagArrayOutput)
}

// A key-value pair to associate with a resource.
type FargateProfileTagOutput struct{ *pulumi.OutputState }

func (FargateProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileTag)(nil)).Elem()
}

func (o FargateProfileTagOutput) ToFargateProfileTagOutput() FargateProfileTagOutput {
	return o
}

func (o FargateProfileTagOutput) ToFargateProfileTagOutputWithContext(ctx context.Context) FargateProfileTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o FargateProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o FargateProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type FargateProfileTagArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileTag)(nil)).Elem()
}

func (o FargateProfileTagArrayOutput) ToFargateProfileTagArrayOutput() FargateProfileTagArrayOutput {
	return o
}

func (o FargateProfileTagArrayOutput) ToFargateProfileTagArrayOutputWithContext(ctx context.Context) FargateProfileTagArrayOutput {
	return o
}

func (o FargateProfileTagArrayOutput) Index(i pulumi.IntInput) FargateProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileTag {
		return vs[0].([]FargateProfileTag)[vs[1].(int)]
	}).(FargateProfileTagOutput)
}

// An object representing an OpenID Connect (OIDC) configuration.
type IdentityProviderConfigOidcIdentityProviderConfig struct {
	// This is also known as audience. The ID for the client application that makes authentication requests to the OpenID identity provider.
	ClientId string `pulumi:"clientId"`
	// The JWT claim that the provider uses to return your groups.
	GroupsClaim *string `pulumi:"groupsClaim"`
	// The prefix that is prepended to group claims to prevent clashes with existing names (such as system: groups).
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens.
	IssuerUrl      string                                `pulumi:"issuerUrl"`
	RequiredClaims []IdentityProviderConfigRequiredClaim `pulumi:"requiredClaims"`
	// The JSON Web Token (JWT) claim to use as the username. The default is sub, which is expected to be a unique identifier of the end user. You can choose other claims, such as email or name, depending on the OpenID identity provider. Claims other than email are prefixed with the issuer URL to prevent naming clashes with other plug-ins.
	UsernameClaim *string `pulumi:"usernameClaim"`
	// The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and username is a value other than email, the prefix defaults to issuerurl#. You can use the value - to disable all prefixing.
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// IdentityProviderConfigOidcIdentityProviderConfigInput is an input type that accepts IdentityProviderConfigOidcIdentityProviderConfigArgs and IdentityProviderConfigOidcIdentityProviderConfigOutput values.
// You can construct a concrete instance of `IdentityProviderConfigOidcIdentityProviderConfigInput` via:
//
//          IdentityProviderConfigOidcIdentityProviderConfigArgs{...}
type IdentityProviderConfigOidcIdentityProviderConfigInput interface {
	pulumi.Input

	ToIdentityProviderConfigOidcIdentityProviderConfigOutput() IdentityProviderConfigOidcIdentityProviderConfigOutput
	ToIdentityProviderConfigOidcIdentityProviderConfigOutputWithContext(context.Context) IdentityProviderConfigOidcIdentityProviderConfigOutput
}

// An object representing an OpenID Connect (OIDC) configuration.
type IdentityProviderConfigOidcIdentityProviderConfigArgs struct {
	// This is also known as audience. The ID for the client application that makes authentication requests to the OpenID identity provider.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The JWT claim that the provider uses to return your groups.
	GroupsClaim pulumi.StringPtrInput `pulumi:"groupsClaim"`
	// The prefix that is prepended to group claims to prevent clashes with existing names (such as system: groups).
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens.
	IssuerUrl      pulumi.StringInput                            `pulumi:"issuerUrl"`
	RequiredClaims IdentityProviderConfigRequiredClaimArrayInput `pulumi:"requiredClaims"`
	// The JSON Web Token (JWT) claim to use as the username. The default is sub, which is expected to be a unique identifier of the end user. You can choose other claims, such as email or name, depending on the OpenID identity provider. Claims other than email are prefixed with the issuer URL to prevent naming clashes with other plug-ins.
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and username is a value other than email, the prefix defaults to issuerurl#. You can use the value - to disable all prefixing.
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (IdentityProviderConfigOidcIdentityProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigOidcIdentityProviderConfig)(nil)).Elem()
}

func (i IdentityProviderConfigOidcIdentityProviderConfigArgs) ToIdentityProviderConfigOidcIdentityProviderConfigOutput() IdentityProviderConfigOidcIdentityProviderConfigOutput {
	return i.ToIdentityProviderConfigOidcIdentityProviderConfigOutputWithContext(context.Background())
}

func (i IdentityProviderConfigOidcIdentityProviderConfigArgs) ToIdentityProviderConfigOidcIdentityProviderConfigOutputWithContext(ctx context.Context) IdentityProviderConfigOidcIdentityProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcIdentityProviderConfigOutput)
}

func (i IdentityProviderConfigOidcIdentityProviderConfigArgs) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutput() IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return i.ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(context.Background())
}

func (i IdentityProviderConfigOidcIdentityProviderConfigArgs) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcIdentityProviderConfigOutput).ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(ctx)
}

// IdentityProviderConfigOidcIdentityProviderConfigPtrInput is an input type that accepts IdentityProviderConfigOidcIdentityProviderConfigArgs, IdentityProviderConfigOidcIdentityProviderConfigPtr and IdentityProviderConfigOidcIdentityProviderConfigPtrOutput values.
// You can construct a concrete instance of `IdentityProviderConfigOidcIdentityProviderConfigPtrInput` via:
//
//          IdentityProviderConfigOidcIdentityProviderConfigArgs{...}
//
//  or:
//
//          nil
type IdentityProviderConfigOidcIdentityProviderConfigPtrInput interface {
	pulumi.Input

	ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutput() IdentityProviderConfigOidcIdentityProviderConfigPtrOutput
	ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(context.Context) IdentityProviderConfigOidcIdentityProviderConfigPtrOutput
}

type identityProviderConfigOidcIdentityProviderConfigPtrType IdentityProviderConfigOidcIdentityProviderConfigArgs

func IdentityProviderConfigOidcIdentityProviderConfigPtr(v *IdentityProviderConfigOidcIdentityProviderConfigArgs) IdentityProviderConfigOidcIdentityProviderConfigPtrInput {
	return (*identityProviderConfigOidcIdentityProviderConfigPtrType)(v)
}

func (*identityProviderConfigOidcIdentityProviderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderConfigOidcIdentityProviderConfig)(nil)).Elem()
}

func (i *identityProviderConfigOidcIdentityProviderConfigPtrType) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutput() IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return i.ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(context.Background())
}

func (i *identityProviderConfigOidcIdentityProviderConfigPtrType) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcIdentityProviderConfigPtrOutput)
}

// An object representing an OpenID Connect (OIDC) configuration.
type IdentityProviderConfigOidcIdentityProviderConfigOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOidcIdentityProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigOidcIdentityProviderConfig)(nil)).Elem()
}

func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) ToIdentityProviderConfigOidcIdentityProviderConfigOutput() IdentityProviderConfigOidcIdentityProviderConfigOutput {
	return o
}

func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) ToIdentityProviderConfigOidcIdentityProviderConfigOutputWithContext(ctx context.Context) IdentityProviderConfigOidcIdentityProviderConfigOutput {
	return o
}

func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutput() IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return o.ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(context.Background())
}

func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProviderConfigOidcIdentityProviderConfig) *IdentityProviderConfigOidcIdentityProviderConfig {
		return &v
	}).(IdentityProviderConfigOidcIdentityProviderConfigPtrOutput)
}

// This is also known as audience. The ID for the client application that makes authentication requests to the OpenID identity provider.
func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// The JWT claim that the provider uses to return your groups.
func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) *string { return v.GroupsClaim }).(pulumi.StringPtrOutput)
}

// The prefix that is prepended to group claims to prevent clashes with existing names (such as system: groups).
func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens.
func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) RequiredClaims() IdentityProviderConfigRequiredClaimArrayOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) []IdentityProviderConfigRequiredClaim {
		return v.RequiredClaims
	}).(IdentityProviderConfigRequiredClaimArrayOutput)
}

// The JSON Web Token (JWT) claim to use as the username. The default is sub, which is expected to be a unique identifier of the end user. You can choose other claims, such as email or name, depending on the OpenID identity provider. Claims other than email are prefixed with the issuer URL to prevent naming clashes with other plug-ins.
func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and username is a value other than email, the prefix defaults to issuerurl#. You can use the value - to disable all prefixing.
func (o IdentityProviderConfigOidcIdentityProviderConfigOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidcIdentityProviderConfig) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type IdentityProviderConfigOidcIdentityProviderConfigPtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderConfigOidcIdentityProviderConfig)(nil)).Elem()
}

func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutput() IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return o
}

func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) ToIdentityProviderConfigOidcIdentityProviderConfigPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcIdentityProviderConfigPtrOutput {
	return o
}

func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) Elem() IdentityProviderConfigOidcIdentityProviderConfigOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) IdentityProviderConfigOidcIdentityProviderConfig {
		if v != nil {
			return *v
		}
		var ret IdentityProviderConfigOidcIdentityProviderConfig
		return ret
	}).(IdentityProviderConfigOidcIdentityProviderConfigOutput)
}

// This is also known as audience. The ID for the client application that makes authentication requests to the OpenID identity provider.
func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The JWT claim that the provider uses to return your groups.
func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) *string {
		if v == nil {
			return nil
		}
		return v.GroupsClaim
	}).(pulumi.StringPtrOutput)
}

// The prefix that is prepended to group claims to prevent clashes with existing names (such as system: groups).
func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens.
func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) RequiredClaims() IdentityProviderConfigRequiredClaimArrayOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) []IdentityProviderConfigRequiredClaim {
		if v == nil {
			return nil
		}
		return v.RequiredClaims
	}).(IdentityProviderConfigRequiredClaimArrayOutput)
}

// The JSON Web Token (JWT) claim to use as the username. The default is sub, which is expected to be a unique identifier of the end user. You can choose other claims, such as email or name, depending on the OpenID identity provider. Claims other than email are prefixed with the issuer URL to prevent naming clashes with other plug-ins.
func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and username is a value other than email, the prefix defaults to issuerurl#. You can use the value - to disable all prefixing.
func (o IdentityProviderConfigOidcIdentityProviderConfigPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidcIdentityProviderConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

// The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value.
type IdentityProviderConfigRequiredClaim struct {
	// The key of the requiredClaims.
	Key string `pulumi:"key"`
	// The value for the requiredClaims.
	Value string `pulumi:"value"`
}

// IdentityProviderConfigRequiredClaimInput is an input type that accepts IdentityProviderConfigRequiredClaimArgs and IdentityProviderConfigRequiredClaimOutput values.
// You can construct a concrete instance of `IdentityProviderConfigRequiredClaimInput` via:
//
//          IdentityProviderConfigRequiredClaimArgs{...}
type IdentityProviderConfigRequiredClaimInput interface {
	pulumi.Input

	ToIdentityProviderConfigRequiredClaimOutput() IdentityProviderConfigRequiredClaimOutput
	ToIdentityProviderConfigRequiredClaimOutputWithContext(context.Context) IdentityProviderConfigRequiredClaimOutput
}

// The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value.
type IdentityProviderConfigRequiredClaimArgs struct {
	// The key of the requiredClaims.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the requiredClaims.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IdentityProviderConfigRequiredClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigRequiredClaim)(nil)).Elem()
}

func (i IdentityProviderConfigRequiredClaimArgs) ToIdentityProviderConfigRequiredClaimOutput() IdentityProviderConfigRequiredClaimOutput {
	return i.ToIdentityProviderConfigRequiredClaimOutputWithContext(context.Background())
}

func (i IdentityProviderConfigRequiredClaimArgs) ToIdentityProviderConfigRequiredClaimOutputWithContext(ctx context.Context) IdentityProviderConfigRequiredClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigRequiredClaimOutput)
}

// IdentityProviderConfigRequiredClaimArrayInput is an input type that accepts IdentityProviderConfigRequiredClaimArray and IdentityProviderConfigRequiredClaimArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConfigRequiredClaimArrayInput` via:
//
//          IdentityProviderConfigRequiredClaimArray{ IdentityProviderConfigRequiredClaimArgs{...} }
type IdentityProviderConfigRequiredClaimArrayInput interface {
	pulumi.Input

	ToIdentityProviderConfigRequiredClaimArrayOutput() IdentityProviderConfigRequiredClaimArrayOutput
	ToIdentityProviderConfigRequiredClaimArrayOutputWithContext(context.Context) IdentityProviderConfigRequiredClaimArrayOutput
}

type IdentityProviderConfigRequiredClaimArray []IdentityProviderConfigRequiredClaimInput

func (IdentityProviderConfigRequiredClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConfigRequiredClaim)(nil)).Elem()
}

func (i IdentityProviderConfigRequiredClaimArray) ToIdentityProviderConfigRequiredClaimArrayOutput() IdentityProviderConfigRequiredClaimArrayOutput {
	return i.ToIdentityProviderConfigRequiredClaimArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConfigRequiredClaimArray) ToIdentityProviderConfigRequiredClaimArrayOutputWithContext(ctx context.Context) IdentityProviderConfigRequiredClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigRequiredClaimArrayOutput)
}

// The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value.
type IdentityProviderConfigRequiredClaimOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigRequiredClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigRequiredClaim)(nil)).Elem()
}

func (o IdentityProviderConfigRequiredClaimOutput) ToIdentityProviderConfigRequiredClaimOutput() IdentityProviderConfigRequiredClaimOutput {
	return o
}

func (o IdentityProviderConfigRequiredClaimOutput) ToIdentityProviderConfigRequiredClaimOutputWithContext(ctx context.Context) IdentityProviderConfigRequiredClaimOutput {
	return o
}

// The key of the requiredClaims.
func (o IdentityProviderConfigRequiredClaimOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigRequiredClaim) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the requiredClaims.
func (o IdentityProviderConfigRequiredClaimOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigRequiredClaim) string { return v.Value }).(pulumi.StringOutput)
}

type IdentityProviderConfigRequiredClaimArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigRequiredClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConfigRequiredClaim)(nil)).Elem()
}

func (o IdentityProviderConfigRequiredClaimArrayOutput) ToIdentityProviderConfigRequiredClaimArrayOutput() IdentityProviderConfigRequiredClaimArrayOutput {
	return o
}

func (o IdentityProviderConfigRequiredClaimArrayOutput) ToIdentityProviderConfigRequiredClaimArrayOutputWithContext(ctx context.Context) IdentityProviderConfigRequiredClaimArrayOutput {
	return o
}

func (o IdentityProviderConfigRequiredClaimArrayOutput) Index(i pulumi.IntInput) IdentityProviderConfigRequiredClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConfigRequiredClaim {
		return vs[0].([]IdentityProviderConfigRequiredClaim)[vs[1].(int)]
	}).(IdentityProviderConfigRequiredClaimOutput)
}

// A key-value pair to associate with a resource.
type IdentityProviderConfigTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// IdentityProviderConfigTagInput is an input type that accepts IdentityProviderConfigTagArgs and IdentityProviderConfigTagOutput values.
// You can construct a concrete instance of `IdentityProviderConfigTagInput` via:
//
//          IdentityProviderConfigTagArgs{...}
type IdentityProviderConfigTagInput interface {
	pulumi.Input

	ToIdentityProviderConfigTagOutput() IdentityProviderConfigTagOutput
	ToIdentityProviderConfigTagOutputWithContext(context.Context) IdentityProviderConfigTagOutput
}

// A key-value pair to associate with a resource.
type IdentityProviderConfigTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IdentityProviderConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigTag)(nil)).Elem()
}

func (i IdentityProviderConfigTagArgs) ToIdentityProviderConfigTagOutput() IdentityProviderConfigTagOutput {
	return i.ToIdentityProviderConfigTagOutputWithContext(context.Background())
}

func (i IdentityProviderConfigTagArgs) ToIdentityProviderConfigTagOutputWithContext(ctx context.Context) IdentityProviderConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigTagOutput)
}

// IdentityProviderConfigTagArrayInput is an input type that accepts IdentityProviderConfigTagArray and IdentityProviderConfigTagArrayOutput values.
// You can construct a concrete instance of `IdentityProviderConfigTagArrayInput` via:
//
//          IdentityProviderConfigTagArray{ IdentityProviderConfigTagArgs{...} }
type IdentityProviderConfigTagArrayInput interface {
	pulumi.Input

	ToIdentityProviderConfigTagArrayOutput() IdentityProviderConfigTagArrayOutput
	ToIdentityProviderConfigTagArrayOutputWithContext(context.Context) IdentityProviderConfigTagArrayOutput
}

type IdentityProviderConfigTagArray []IdentityProviderConfigTagInput

func (IdentityProviderConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConfigTag)(nil)).Elem()
}

func (i IdentityProviderConfigTagArray) ToIdentityProviderConfigTagArrayOutput() IdentityProviderConfigTagArrayOutput {
	return i.ToIdentityProviderConfigTagArrayOutputWithContext(context.Background())
}

func (i IdentityProviderConfigTagArray) ToIdentityProviderConfigTagArrayOutputWithContext(ctx context.Context) IdentityProviderConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigTagArrayOutput)
}

// A key-value pair to associate with a resource.
type IdentityProviderConfigTagOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigTag)(nil)).Elem()
}

func (o IdentityProviderConfigTagOutput) ToIdentityProviderConfigTagOutput() IdentityProviderConfigTagOutput {
	return o
}

func (o IdentityProviderConfigTagOutput) ToIdentityProviderConfigTagOutputWithContext(ctx context.Context) IdentityProviderConfigTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o IdentityProviderConfigTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o IdentityProviderConfigTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigTag) string { return v.Value }).(pulumi.StringOutput)
}

type IdentityProviderConfigTagArrayOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityProviderConfigTag)(nil)).Elem()
}

func (o IdentityProviderConfigTagArrayOutput) ToIdentityProviderConfigTagArrayOutput() IdentityProviderConfigTagArrayOutput {
	return o
}

func (o IdentityProviderConfigTagArrayOutput) ToIdentityProviderConfigTagArrayOutputWithContext(ctx context.Context) IdentityProviderConfigTagArrayOutput {
	return o
}

func (o IdentityProviderConfigTagArrayOutput) Index(i pulumi.IntInput) IdentityProviderConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityProviderConfigTag {
		return vs[0].([]IdentityProviderConfigTag)[vs[1].(int)]
	}).(IdentityProviderConfigTagOutput)
}

// An object representing a launch template specification for AWS EKS Nodegroup.
type NodegroupLaunchTemplateSpecification struct {
	Id      *string `pulumi:"id"`
	Name    *string `pulumi:"name"`
	Version *string `pulumi:"version"`
}

// NodegroupLaunchTemplateSpecificationInput is an input type that accepts NodegroupLaunchTemplateSpecificationArgs and NodegroupLaunchTemplateSpecificationOutput values.
// You can construct a concrete instance of `NodegroupLaunchTemplateSpecificationInput` via:
//
//          NodegroupLaunchTemplateSpecificationArgs{...}
type NodegroupLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToNodegroupLaunchTemplateSpecificationOutput() NodegroupLaunchTemplateSpecificationOutput
	ToNodegroupLaunchTemplateSpecificationOutputWithContext(context.Context) NodegroupLaunchTemplateSpecificationOutput
}

// An object representing a launch template specification for AWS EKS Nodegroup.
type NodegroupLaunchTemplateSpecificationArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (NodegroupLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationOutput() NodegroupLaunchTemplateSpecificationOutput {
	return i.ToNodegroupLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupLaunchTemplateSpecificationOutput)
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return i.ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupLaunchTemplateSpecificationOutput).ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx)
}

// NodegroupLaunchTemplateSpecificationPtrInput is an input type that accepts NodegroupLaunchTemplateSpecificationArgs, NodegroupLaunchTemplateSpecificationPtr and NodegroupLaunchTemplateSpecificationPtrOutput values.
// You can construct a concrete instance of `NodegroupLaunchTemplateSpecificationPtrInput` via:
//
//          NodegroupLaunchTemplateSpecificationArgs{...}
//
//  or:
//
//          nil
type NodegroupLaunchTemplateSpecificationPtrInput interface {
	pulumi.Input

	ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput
	ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Context) NodegroupLaunchTemplateSpecificationPtrOutput
}

type nodegroupLaunchTemplateSpecificationPtrType NodegroupLaunchTemplateSpecificationArgs

func NodegroupLaunchTemplateSpecificationPtr(v *NodegroupLaunchTemplateSpecificationArgs) NodegroupLaunchTemplateSpecificationPtrInput {
	return (*nodegroupLaunchTemplateSpecificationPtrType)(v)
}

func (*nodegroupLaunchTemplateSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (i *nodegroupLaunchTemplateSpecificationPtrType) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return i.ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (i *nodegroupLaunchTemplateSpecificationPtrType) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupLaunchTemplateSpecificationPtrOutput)
}

// An object representing a launch template specification for AWS EKS Nodegroup.
type NodegroupLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (NodegroupLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationOutput() NodegroupLaunchTemplateSpecificationOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return o.ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupLaunchTemplateSpecification) *NodegroupLaunchTemplateSpecification {
		return &v
	}).(NodegroupLaunchTemplateSpecificationPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupLaunchTemplateSpecification) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupLaunchTemplateSpecification) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupLaunchTemplateSpecification) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type NodegroupLaunchTemplateSpecificationPtrOutput struct{ *pulumi.OutputState }

func (NodegroupLaunchTemplateSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Elem() NodegroupLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) NodegroupLaunchTemplateSpecification {
		if v != nil {
			return *v
		}
		var ret NodegroupLaunchTemplateSpecification
		return ret
	}).(NodegroupLaunchTemplateSpecificationOutput)
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// An object representing a remote access configuration specification for AWS EKS Nodegroup.
type NodegroupRemoteAccess struct {
	Ec2SshKey            string   `pulumi:"ec2SshKey"`
	SourceSecurityGroups []string `pulumi:"sourceSecurityGroups"`
}

// NodegroupRemoteAccessInput is an input type that accepts NodegroupRemoteAccessArgs and NodegroupRemoteAccessOutput values.
// You can construct a concrete instance of `NodegroupRemoteAccessInput` via:
//
//          NodegroupRemoteAccessArgs{...}
type NodegroupRemoteAccessInput interface {
	pulumi.Input

	ToNodegroupRemoteAccessOutput() NodegroupRemoteAccessOutput
	ToNodegroupRemoteAccessOutputWithContext(context.Context) NodegroupRemoteAccessOutput
}

// An object representing a remote access configuration specification for AWS EKS Nodegroup.
type NodegroupRemoteAccessArgs struct {
	Ec2SshKey            pulumi.StringInput      `pulumi:"ec2SshKey"`
	SourceSecurityGroups pulumi.StringArrayInput `pulumi:"sourceSecurityGroups"`
}

func (NodegroupRemoteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupRemoteAccess)(nil)).Elem()
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessOutput() NodegroupRemoteAccessOutput {
	return i.ToNodegroupRemoteAccessOutputWithContext(context.Background())
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessOutputWithContext(ctx context.Context) NodegroupRemoteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupRemoteAccessOutput)
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return i.ToNodegroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupRemoteAccessOutput).ToNodegroupRemoteAccessPtrOutputWithContext(ctx)
}

// NodegroupRemoteAccessPtrInput is an input type that accepts NodegroupRemoteAccessArgs, NodegroupRemoteAccessPtr and NodegroupRemoteAccessPtrOutput values.
// You can construct a concrete instance of `NodegroupRemoteAccessPtrInput` via:
//
//          NodegroupRemoteAccessArgs{...}
//
//  or:
//
//          nil
type NodegroupRemoteAccessPtrInput interface {
	pulumi.Input

	ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput
	ToNodegroupRemoteAccessPtrOutputWithContext(context.Context) NodegroupRemoteAccessPtrOutput
}

type nodegroupRemoteAccessPtrType NodegroupRemoteAccessArgs

func NodegroupRemoteAccessPtr(v *NodegroupRemoteAccessArgs) NodegroupRemoteAccessPtrInput {
	return (*nodegroupRemoteAccessPtrType)(v)
}

func (*nodegroupRemoteAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupRemoteAccess)(nil)).Elem()
}

func (i *nodegroupRemoteAccessPtrType) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return i.ToNodegroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i *nodegroupRemoteAccessPtrType) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupRemoteAccessPtrOutput)
}

// An object representing a remote access configuration specification for AWS EKS Nodegroup.
type NodegroupRemoteAccessOutput struct{ *pulumi.OutputState }

func (NodegroupRemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupRemoteAccess)(nil)).Elem()
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessOutput() NodegroupRemoteAccessOutput {
	return o
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessOutputWithContext(ctx context.Context) NodegroupRemoteAccessOutput {
	return o
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return o.ToNodegroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupRemoteAccess) *NodegroupRemoteAccess {
		return &v
	}).(NodegroupRemoteAccessPtrOutput)
}

func (o NodegroupRemoteAccessOutput) Ec2SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v NodegroupRemoteAccess) string { return v.Ec2SshKey }).(pulumi.StringOutput)
}

func (o NodegroupRemoteAccessOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodegroupRemoteAccess) []string { return v.SourceSecurityGroups }).(pulumi.StringArrayOutput)
}

type NodegroupRemoteAccessPtrOutput struct{ *pulumi.OutputState }

func (NodegroupRemoteAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupRemoteAccess)(nil)).Elem()
}

func (o NodegroupRemoteAccessPtrOutput) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return o
}

func (o NodegroupRemoteAccessPtrOutput) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return o
}

func (o NodegroupRemoteAccessPtrOutput) Elem() NodegroupRemoteAccessOutput {
	return o.ApplyT(func(v *NodegroupRemoteAccess) NodegroupRemoteAccess {
		if v != nil {
			return *v
		}
		var ret NodegroupRemoteAccess
		return ret
	}).(NodegroupRemoteAccessOutput)
}

func (o NodegroupRemoteAccessPtrOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupRemoteAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Ec2SshKey
	}).(pulumi.StringPtrOutput)
}

func (o NodegroupRemoteAccessPtrOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodegroupRemoteAccess) []string {
		if v == nil {
			return nil
		}
		return v.SourceSecurityGroups
	}).(pulumi.StringArrayOutput)
}

// An object representing a auto scaling group specification for AWS EKS Nodegroup.
type NodegroupScalingConfig struct {
	DesiredSize *int `pulumi:"desiredSize"`
	MaxSize     *int `pulumi:"maxSize"`
	MinSize     *int `pulumi:"minSize"`
}

// NodegroupScalingConfigInput is an input type that accepts NodegroupScalingConfigArgs and NodegroupScalingConfigOutput values.
// You can construct a concrete instance of `NodegroupScalingConfigInput` via:
//
//          NodegroupScalingConfigArgs{...}
type NodegroupScalingConfigInput interface {
	pulumi.Input

	ToNodegroupScalingConfigOutput() NodegroupScalingConfigOutput
	ToNodegroupScalingConfigOutputWithContext(context.Context) NodegroupScalingConfigOutput
}

// An object representing a auto scaling group specification for AWS EKS Nodegroup.
type NodegroupScalingConfigArgs struct {
	DesiredSize pulumi.IntPtrInput `pulumi:"desiredSize"`
	MaxSize     pulumi.IntPtrInput `pulumi:"maxSize"`
	MinSize     pulumi.IntPtrInput `pulumi:"minSize"`
}

func (NodegroupScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupScalingConfig)(nil)).Elem()
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigOutput() NodegroupScalingConfigOutput {
	return i.ToNodegroupScalingConfigOutputWithContext(context.Background())
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigOutputWithContext(ctx context.Context) NodegroupScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupScalingConfigOutput)
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return i.ToNodegroupScalingConfigPtrOutputWithContext(context.Background())
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupScalingConfigOutput).ToNodegroupScalingConfigPtrOutputWithContext(ctx)
}

// NodegroupScalingConfigPtrInput is an input type that accepts NodegroupScalingConfigArgs, NodegroupScalingConfigPtr and NodegroupScalingConfigPtrOutput values.
// You can construct a concrete instance of `NodegroupScalingConfigPtrInput` via:
//
//          NodegroupScalingConfigArgs{...}
//
//  or:
//
//          nil
type NodegroupScalingConfigPtrInput interface {
	pulumi.Input

	ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput
	ToNodegroupScalingConfigPtrOutputWithContext(context.Context) NodegroupScalingConfigPtrOutput
}

type nodegroupScalingConfigPtrType NodegroupScalingConfigArgs

func NodegroupScalingConfigPtr(v *NodegroupScalingConfigArgs) NodegroupScalingConfigPtrInput {
	return (*nodegroupScalingConfigPtrType)(v)
}

func (*nodegroupScalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupScalingConfig)(nil)).Elem()
}

func (i *nodegroupScalingConfigPtrType) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return i.ToNodegroupScalingConfigPtrOutputWithContext(context.Background())
}

func (i *nodegroupScalingConfigPtrType) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupScalingConfigPtrOutput)
}

// An object representing a auto scaling group specification for AWS EKS Nodegroup.
type NodegroupScalingConfigOutput struct{ *pulumi.OutputState }

func (NodegroupScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupScalingConfig)(nil)).Elem()
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigOutput() NodegroupScalingConfigOutput {
	return o
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigOutputWithContext(ctx context.Context) NodegroupScalingConfigOutput {
	return o
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return o.ToNodegroupScalingConfigPtrOutputWithContext(context.Background())
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupScalingConfig) *NodegroupScalingConfig {
		return &v
	}).(NodegroupScalingConfigPtrOutput)
}

func (o NodegroupScalingConfigOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodegroupScalingConfig) *int { return v.DesiredSize }).(pulumi.IntPtrOutput)
}

func (o NodegroupScalingConfigOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodegroupScalingConfig) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o NodegroupScalingConfigOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodegroupScalingConfig) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

type NodegroupScalingConfigPtrOutput struct{ *pulumi.OutputState }

func (NodegroupScalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupScalingConfig)(nil)).Elem()
}

func (o NodegroupScalingConfigPtrOutput) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return o
}

func (o NodegroupScalingConfigPtrOutput) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return o
}

func (o NodegroupScalingConfigPtrOutput) Elem() NodegroupScalingConfigOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) NodegroupScalingConfig {
		if v != nil {
			return *v
		}
		var ret NodegroupScalingConfig
		return ret
	}).(NodegroupScalingConfigOutput)
}

func (o NodegroupScalingConfigPtrOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.DesiredSize
	}).(pulumi.IntPtrOutput)
}

func (o NodegroupScalingConfigPtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

func (o NodegroupScalingConfigPtrOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.IntPtrOutput)
}

// An object representing a Taint specification for AWS EKS Nodegroup.
type NodegroupTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// NodegroupTaintInput is an input type that accepts NodegroupTaintArgs and NodegroupTaintOutput values.
// You can construct a concrete instance of `NodegroupTaintInput` via:
//
//          NodegroupTaintArgs{...}
type NodegroupTaintInput interface {
	pulumi.Input

	ToNodegroupTaintOutput() NodegroupTaintOutput
	ToNodegroupTaintOutputWithContext(context.Context) NodegroupTaintOutput
}

// An object representing a Taint specification for AWS EKS Nodegroup.
type NodegroupTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NodegroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupTaint)(nil)).Elem()
}

func (i NodegroupTaintArgs) ToNodegroupTaintOutput() NodegroupTaintOutput {
	return i.ToNodegroupTaintOutputWithContext(context.Background())
}

func (i NodegroupTaintArgs) ToNodegroupTaintOutputWithContext(ctx context.Context) NodegroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupTaintOutput)
}

// NodegroupTaintArrayInput is an input type that accepts NodegroupTaintArray and NodegroupTaintArrayOutput values.
// You can construct a concrete instance of `NodegroupTaintArrayInput` via:
//
//          NodegroupTaintArray{ NodegroupTaintArgs{...} }
type NodegroupTaintArrayInput interface {
	pulumi.Input

	ToNodegroupTaintArrayOutput() NodegroupTaintArrayOutput
	ToNodegroupTaintArrayOutputWithContext(context.Context) NodegroupTaintArrayOutput
}

type NodegroupTaintArray []NodegroupTaintInput

func (NodegroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodegroupTaint)(nil)).Elem()
}

func (i NodegroupTaintArray) ToNodegroupTaintArrayOutput() NodegroupTaintArrayOutput {
	return i.ToNodegroupTaintArrayOutputWithContext(context.Background())
}

func (i NodegroupTaintArray) ToNodegroupTaintArrayOutputWithContext(ctx context.Context) NodegroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupTaintArrayOutput)
}

// An object representing a Taint specification for AWS EKS Nodegroup.
type NodegroupTaintOutput struct{ *pulumi.OutputState }

func (NodegroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupTaint)(nil)).Elem()
}

func (o NodegroupTaintOutput) ToNodegroupTaintOutput() NodegroupTaintOutput {
	return o
}

func (o NodegroupTaintOutput) ToNodegroupTaintOutputWithContext(ctx context.Context) NodegroupTaintOutput {
	return o
}

func (o NodegroupTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o NodegroupTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o NodegroupTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodegroupTaintArrayOutput struct{ *pulumi.OutputState }

func (NodegroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodegroupTaint)(nil)).Elem()
}

func (o NodegroupTaintArrayOutput) ToNodegroupTaintArrayOutput() NodegroupTaintArrayOutput {
	return o
}

func (o NodegroupTaintArrayOutput) ToNodegroupTaintArrayOutputWithContext(ctx context.Context) NodegroupTaintArrayOutput {
	return o
}

func (o NodegroupTaintArrayOutput) Index(i pulumi.IntInput) NodegroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodegroupTaint {
		return vs[0].([]NodegroupTaint)[vs[1].(int)]
	}).(NodegroupTaintOutput)
}

// The node group update configuration.
type NodegroupUpdateConfig struct {
	// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
	MaxUnavailable *float64 `pulumi:"maxUnavailable"`
	// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
	MaxUnavailablePercentage *float64 `pulumi:"maxUnavailablePercentage"`
}

// NodegroupUpdateConfigInput is an input type that accepts NodegroupUpdateConfigArgs and NodegroupUpdateConfigOutput values.
// You can construct a concrete instance of `NodegroupUpdateConfigInput` via:
//
//          NodegroupUpdateConfigArgs{...}
type NodegroupUpdateConfigInput interface {
	pulumi.Input

	ToNodegroupUpdateConfigOutput() NodegroupUpdateConfigOutput
	ToNodegroupUpdateConfigOutputWithContext(context.Context) NodegroupUpdateConfigOutput
}

// The node group update configuration.
type NodegroupUpdateConfigArgs struct {
	// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
	MaxUnavailable pulumi.Float64PtrInput `pulumi:"maxUnavailable"`
	// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
	MaxUnavailablePercentage pulumi.Float64PtrInput `pulumi:"maxUnavailablePercentage"`
}

func (NodegroupUpdateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupUpdateConfig)(nil)).Elem()
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigOutput() NodegroupUpdateConfigOutput {
	return i.ToNodegroupUpdateConfigOutputWithContext(context.Background())
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigOutputWithContext(ctx context.Context) NodegroupUpdateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupUpdateConfigOutput)
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return i.ToNodegroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupUpdateConfigOutput).ToNodegroupUpdateConfigPtrOutputWithContext(ctx)
}

// NodegroupUpdateConfigPtrInput is an input type that accepts NodegroupUpdateConfigArgs, NodegroupUpdateConfigPtr and NodegroupUpdateConfigPtrOutput values.
// You can construct a concrete instance of `NodegroupUpdateConfigPtrInput` via:
//
//          NodegroupUpdateConfigArgs{...}
//
//  or:
//
//          nil
type NodegroupUpdateConfigPtrInput interface {
	pulumi.Input

	ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput
	ToNodegroupUpdateConfigPtrOutputWithContext(context.Context) NodegroupUpdateConfigPtrOutput
}

type nodegroupUpdateConfigPtrType NodegroupUpdateConfigArgs

func NodegroupUpdateConfigPtr(v *NodegroupUpdateConfigArgs) NodegroupUpdateConfigPtrInput {
	return (*nodegroupUpdateConfigPtrType)(v)
}

func (*nodegroupUpdateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupUpdateConfig)(nil)).Elem()
}

func (i *nodegroupUpdateConfigPtrType) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return i.ToNodegroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i *nodegroupUpdateConfigPtrType) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupUpdateConfigPtrOutput)
}

// The node group update configuration.
type NodegroupUpdateConfigOutput struct{ *pulumi.OutputState }

func (NodegroupUpdateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupUpdateConfig)(nil)).Elem()
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigOutput() NodegroupUpdateConfigOutput {
	return o
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigOutputWithContext(ctx context.Context) NodegroupUpdateConfigOutput {
	return o
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return o.ToNodegroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupUpdateConfig) *NodegroupUpdateConfig {
		return &v
	}).(NodegroupUpdateConfigPtrOutput)
}

// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
func (o NodegroupUpdateConfigOutput) MaxUnavailable() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupUpdateConfig) *float64 { return v.MaxUnavailable }).(pulumi.Float64PtrOutput)
}

// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
func (o NodegroupUpdateConfigOutput) MaxUnavailablePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupUpdateConfig) *float64 { return v.MaxUnavailablePercentage }).(pulumi.Float64PtrOutput)
}

type NodegroupUpdateConfigPtrOutput struct{ *pulumi.OutputState }

func (NodegroupUpdateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupUpdateConfig)(nil)).Elem()
}

func (o NodegroupUpdateConfigPtrOutput) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return o
}

func (o NodegroupUpdateConfigPtrOutput) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return o
}

func (o NodegroupUpdateConfigPtrOutput) Elem() NodegroupUpdateConfigOutput {
	return o.ApplyT(func(v *NodegroupUpdateConfig) NodegroupUpdateConfig {
		if v != nil {
			return *v
		}
		var ret NodegroupUpdateConfig
		return ret
	}).(NodegroupUpdateConfigOutput)
}

// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.
func (o NodegroupUpdateConfigPtrOutput) MaxUnavailable() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupUpdateConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.Float64PtrOutput)
}

// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.
func (o NodegroupUpdateConfigPtrOutput) MaxUnavailablePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupUpdateConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxUnavailablePercentage
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddonTagInput)(nil)).Elem(), AddonTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddonTagArrayInput)(nil)).Elem(), AddonTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigArrayInput)(nil)).Elem(), ClusterEncryptionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigPtrInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInput)(nil)).Elem(), ClusterLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingPtrInput)(nil)).Elem(), ClusterLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterProviderInput)(nil)).Elem(), ClusterProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterProviderPtrInput)(nil)).Elem(), ClusterProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourcesVpcConfigInput)(nil)).Elem(), ClusterResourcesVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagInput)(nil)).Elem(), ClusterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagArrayInput)(nil)).Elem(), ClusterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileLabelInput)(nil)).Elem(), FargateProfileLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileLabelArrayInput)(nil)).Elem(), FargateProfileLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorInput)(nil)).Elem(), FargateProfileSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorArrayInput)(nil)).Elem(), FargateProfileSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileTagInput)(nil)).Elem(), FargateProfileTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileTagArrayInput)(nil)).Elem(), FargateProfileTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigOidcIdentityProviderConfigInput)(nil)).Elem(), IdentityProviderConfigOidcIdentityProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigOidcIdentityProviderConfigPtrInput)(nil)).Elem(), IdentityProviderConfigOidcIdentityProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigRequiredClaimInput)(nil)).Elem(), IdentityProviderConfigRequiredClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigRequiredClaimArrayInput)(nil)).Elem(), IdentityProviderConfigRequiredClaimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigTagInput)(nil)).Elem(), IdentityProviderConfigTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigTagArrayInput)(nil)).Elem(), IdentityProviderConfigTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupLaunchTemplateSpecificationInput)(nil)).Elem(), NodegroupLaunchTemplateSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupLaunchTemplateSpecificationPtrInput)(nil)).Elem(), NodegroupLaunchTemplateSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupRemoteAccessInput)(nil)).Elem(), NodegroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupRemoteAccessPtrInput)(nil)).Elem(), NodegroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupScalingConfigInput)(nil)).Elem(), NodegroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupScalingConfigPtrInput)(nil)).Elem(), NodegroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupTaintInput)(nil)).Elem(), NodegroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupTaintArrayInput)(nil)).Elem(), NodegroupTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupUpdateConfigInput)(nil)).Elem(), NodegroupUpdateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupUpdateConfigPtrInput)(nil)).Elem(), NodegroupUpdateConfigArgs{})
	pulumi.RegisterOutputType(AddonTagOutput{})
	pulumi.RegisterOutputType(AddonTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingOutput{})
	pulumi.RegisterOutputType(ClusterLoggingPtrOutput{})
	pulumi.RegisterOutputType(ClusterProviderOutput{})
	pulumi.RegisterOutputType(ClusterProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourcesVpcConfigOutput{})
	pulumi.RegisterOutputType(ClusterResourcesVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterTagOutput{})
	pulumi.RegisterOutputType(ClusterTagArrayOutput{})
	pulumi.RegisterOutputType(FargateProfileLabelOutput{})
	pulumi.RegisterOutputType(FargateProfileLabelArrayOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorArrayOutput{})
	pulumi.RegisterOutputType(FargateProfileTagOutput{})
	pulumi.RegisterOutputType(FargateProfileTagArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigOidcIdentityProviderConfigOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigOidcIdentityProviderConfigPtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigRequiredClaimOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigRequiredClaimArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigTagOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigTagArrayOutput{})
	pulumi.RegisterOutputType(NodegroupLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(NodegroupLaunchTemplateSpecificationPtrOutput{})
	pulumi.RegisterOutputType(NodegroupRemoteAccessOutput{})
	pulumi.RegisterOutputType(NodegroupRemoteAccessPtrOutput{})
	pulumi.RegisterOutputType(NodegroupScalingConfigOutput{})
	pulumi.RegisterOutputType(NodegroupScalingConfigPtrOutput{})
	pulumi.RegisterOutputType(NodegroupTaintOutput{})
	pulumi.RegisterOutputType(NodegroupTaintArrayOutput{})
	pulumi.RegisterOutputType(NodegroupUpdateConfigOutput{})
	pulumi.RegisterOutputType(NodegroupUpdateConfigPtrOutput{})
}
