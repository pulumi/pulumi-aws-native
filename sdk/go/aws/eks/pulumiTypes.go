// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type AddonTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// AddonTagInput is an input type that accepts AddonTagArgs and AddonTagOutput values.
// You can construct a concrete instance of `AddonTagInput` via:
//
//          AddonTagArgs{...}
type AddonTagInput interface {
	pulumi.Input

	ToAddonTagOutput() AddonTagOutput
	ToAddonTagOutputWithContext(context.Context) AddonTagOutput
}

// A key-value pair to associate with a resource.
type AddonTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AddonTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonTag)(nil)).Elem()
}

func (i AddonTagArgs) ToAddonTagOutput() AddonTagOutput {
	return i.ToAddonTagOutputWithContext(context.Background())
}

func (i AddonTagArgs) ToAddonTagOutputWithContext(ctx context.Context) AddonTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonTagOutput)
}

// AddonTagArrayInput is an input type that accepts AddonTagArray and AddonTagArrayOutput values.
// You can construct a concrete instance of `AddonTagArrayInput` via:
//
//          AddonTagArray{ AddonTagArgs{...} }
type AddonTagArrayInput interface {
	pulumi.Input

	ToAddonTagArrayOutput() AddonTagArrayOutput
	ToAddonTagArrayOutputWithContext(context.Context) AddonTagArrayOutput
}

type AddonTagArray []AddonTagInput

func (AddonTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddonTag)(nil)).Elem()
}

func (i AddonTagArray) ToAddonTagArrayOutput() AddonTagArrayOutput {
	return i.ToAddonTagArrayOutputWithContext(context.Background())
}

func (i AddonTagArray) ToAddonTagArrayOutputWithContext(ctx context.Context) AddonTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonTagArrayOutput)
}

// A key-value pair to associate with a resource.
type AddonTagOutput struct{ *pulumi.OutputState }

func (AddonTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonTag)(nil)).Elem()
}

func (o AddonTagOutput) ToAddonTagOutput() AddonTagOutput {
	return o
}

func (o AddonTagOutput) ToAddonTagOutputWithContext(ctx context.Context) AddonTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o AddonTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AddonTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o AddonTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AddonTag) string { return v.Value }).(pulumi.StringOutput)
}

type AddonTagArrayOutput struct{ *pulumi.OutputState }

func (AddonTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddonTag)(nil)).Elem()
}

func (o AddonTagArrayOutput) ToAddonTagArrayOutput() AddonTagArrayOutput {
	return o
}

func (o AddonTagArrayOutput) ToAddonTagArrayOutputWithContext(ctx context.Context) AddonTagArrayOutput {
	return o
}

func (o AddonTagArrayOutput) Index(i pulumi.IntInput) AddonTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddonTag {
		return vs[0].([]AddonTag)[vs[1].(int)]
	}).(AddonTagOutput)
}

// The encryption configuration for the cluster
type ClusterEncryptionConfig struct {
	// The encryption provider for the cluster.
	Provider *ClusterEncryptionConfigProviderProperties `pulumi:"provider"`
	// Specifies the resources to be encrypted. The only supported value is "secrets".
	Resources []string `pulumi:"resources"`
}

// ClusterEncryptionConfigInput is an input type that accepts ClusterEncryptionConfigArgs and ClusterEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigInput` via:
//
//          ClusterEncryptionConfigArgs{...}
type ClusterEncryptionConfigInput interface {
	pulumi.Input

	ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput
	ToClusterEncryptionConfigOutputWithContext(context.Context) ClusterEncryptionConfigOutput
}

// The encryption configuration for the cluster
type ClusterEncryptionConfigArgs struct {
	// The encryption provider for the cluster.
	Provider ClusterEncryptionConfigProviderPropertiesPtrInput `pulumi:"provider"`
	// Specifies the resources to be encrypted. The only supported value is "secrets".
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (ClusterEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return i.ToClusterEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput)
}

// ClusterEncryptionConfigArrayInput is an input type that accepts ClusterEncryptionConfigArray and ClusterEncryptionConfigArrayOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigArrayInput` via:
//
//          ClusterEncryptionConfigArray{ ClusterEncryptionConfigArgs{...} }
type ClusterEncryptionConfigArrayInput interface {
	pulumi.Input

	ToClusterEncryptionConfigArrayOutput() ClusterEncryptionConfigArrayOutput
	ToClusterEncryptionConfigArrayOutputWithContext(context.Context) ClusterEncryptionConfigArrayOutput
}

type ClusterEncryptionConfigArray []ClusterEncryptionConfigInput

func (ClusterEncryptionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArray) ToClusterEncryptionConfigArrayOutput() ClusterEncryptionConfigArrayOutput {
	return i.ToClusterEncryptionConfigArrayOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArray) ToClusterEncryptionConfigArrayOutputWithContext(ctx context.Context) ClusterEncryptionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigArrayOutput)
}

// The encryption configuration for the cluster
type ClusterEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return o
}

// The encryption provider for the cluster.
func (o ClusterEncryptionConfigOutput) Provider() ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) *ClusterEncryptionConfigProviderProperties { return v.Provider }).(ClusterEncryptionConfigProviderPropertiesPtrOutput)
}

// Specifies the resources to be encrypted. The only supported value is "secrets".
func (o ClusterEncryptionConfigOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type ClusterEncryptionConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigArrayOutput) ToClusterEncryptionConfigArrayOutput() ClusterEncryptionConfigArrayOutput {
	return o
}

func (o ClusterEncryptionConfigArrayOutput) ToClusterEncryptionConfigArrayOutputWithContext(ctx context.Context) ClusterEncryptionConfigArrayOutput {
	return o
}

func (o ClusterEncryptionConfigArrayOutput) Index(i pulumi.IntInput) ClusterEncryptionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterEncryptionConfig {
		return vs[0].([]ClusterEncryptionConfig)[vs[1].(int)]
	}).(ClusterEncryptionConfigOutput)
}

// The encryption provider for the cluster.
type ClusterEncryptionConfigProviderProperties struct {
	// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
	KeyArn *string `pulumi:"keyArn"`
}

// ClusterEncryptionConfigProviderPropertiesInput is an input type that accepts ClusterEncryptionConfigProviderPropertiesArgs and ClusterEncryptionConfigProviderPropertiesOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigProviderPropertiesInput` via:
//
//          ClusterEncryptionConfigProviderPropertiesArgs{...}
type ClusterEncryptionConfigProviderPropertiesInput interface {
	pulumi.Input

	ToClusterEncryptionConfigProviderPropertiesOutput() ClusterEncryptionConfigProviderPropertiesOutput
	ToClusterEncryptionConfigProviderPropertiesOutputWithContext(context.Context) ClusterEncryptionConfigProviderPropertiesOutput
}

// The encryption provider for the cluster.
type ClusterEncryptionConfigProviderPropertiesArgs struct {
	// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
	KeyArn pulumi.StringPtrInput `pulumi:"keyArn"`
}

func (ClusterEncryptionConfigProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfigProviderProperties)(nil)).Elem()
}

func (i ClusterEncryptionConfigProviderPropertiesArgs) ToClusterEncryptionConfigProviderPropertiesOutput() ClusterEncryptionConfigProviderPropertiesOutput {
	return i.ToClusterEncryptionConfigProviderPropertiesOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigProviderPropertiesArgs) ToClusterEncryptionConfigProviderPropertiesOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderPropertiesOutput)
}

func (i ClusterEncryptionConfigProviderPropertiesArgs) ToClusterEncryptionConfigProviderPropertiesPtrOutput() ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return i.ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigProviderPropertiesArgs) ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderPropertiesOutput).ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(ctx)
}

// ClusterEncryptionConfigProviderPropertiesPtrInput is an input type that accepts ClusterEncryptionConfigProviderPropertiesArgs, ClusterEncryptionConfigProviderPropertiesPtr and ClusterEncryptionConfigProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigProviderPropertiesPtrInput` via:
//
//          ClusterEncryptionConfigProviderPropertiesArgs{...}
//
//  or:
//
//          nil
type ClusterEncryptionConfigProviderPropertiesPtrInput interface {
	pulumi.Input

	ToClusterEncryptionConfigProviderPropertiesPtrOutput() ClusterEncryptionConfigProviderPropertiesPtrOutput
	ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(context.Context) ClusterEncryptionConfigProviderPropertiesPtrOutput
}

type clusterEncryptionConfigProviderPropertiesPtrType ClusterEncryptionConfigProviderPropertiesArgs

func ClusterEncryptionConfigProviderPropertiesPtr(v *ClusterEncryptionConfigProviderPropertiesArgs) ClusterEncryptionConfigProviderPropertiesPtrInput {
	return (*clusterEncryptionConfigProviderPropertiesPtrType)(v)
}

func (*clusterEncryptionConfigProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfigProviderProperties)(nil)).Elem()
}

func (i *clusterEncryptionConfigProviderPropertiesPtrType) ToClusterEncryptionConfigProviderPropertiesPtrOutput() ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return i.ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionConfigProviderPropertiesPtrType) ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderPropertiesPtrOutput)
}

// The encryption provider for the cluster.
type ClusterEncryptionConfigProviderPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfigProviderProperties)(nil)).Elem()
}

func (o ClusterEncryptionConfigProviderPropertiesOutput) ToClusterEncryptionConfigProviderPropertiesOutput() ClusterEncryptionConfigProviderPropertiesOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPropertiesOutput) ToClusterEncryptionConfigProviderPropertiesOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPropertiesOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPropertiesOutput) ToClusterEncryptionConfigProviderPropertiesPtrOutput() ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return o.ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionConfigProviderPropertiesOutput) ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionConfigProviderProperties) *ClusterEncryptionConfigProviderProperties {
		return &v
	}).(ClusterEncryptionConfigProviderPropertiesPtrOutput)
}

// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
func (o ClusterEncryptionConfigProviderPropertiesOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionConfigProviderProperties) *string { return v.KeyArn }).(pulumi.StringPtrOutput)
}

type ClusterEncryptionConfigProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfigProviderProperties)(nil)).Elem()
}

func (o ClusterEncryptionConfigProviderPropertiesPtrOutput) ToClusterEncryptionConfigProviderPropertiesPtrOutput() ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPropertiesPtrOutput) ToClusterEncryptionConfigProviderPropertiesPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPropertiesPtrOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPropertiesPtrOutput) Elem() ClusterEncryptionConfigProviderPropertiesOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfigProviderProperties) ClusterEncryptionConfigProviderProperties {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionConfigProviderProperties
		return ret
	}).(ClusterEncryptionConfigProviderPropertiesOutput)
}

// Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key.
func (o ClusterEncryptionConfigProviderPropertiesPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfigProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// The Kubernetes network configuration for the cluster.
type ClusterKubernetesNetworkConfig struct {
	// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
	ServiceIpv4Cidr *string `pulumi:"serviceIpv4Cidr"`
}

// ClusterKubernetesNetworkConfigInput is an input type that accepts ClusterKubernetesNetworkConfigArgs and ClusterKubernetesNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigInput` via:
//
//          ClusterKubernetesNetworkConfigArgs{...}
type ClusterKubernetesNetworkConfigInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput
	ToClusterKubernetesNetworkConfigOutputWithContext(context.Context) ClusterKubernetesNetworkConfigOutput
}

// The Kubernetes network configuration for the cluster.
type ClusterKubernetesNetworkConfigArgs struct {
	// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
	ServiceIpv4Cidr pulumi.StringPtrInput `pulumi:"serviceIpv4Cidr"`
}

func (ClusterKubernetesNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return i.ToClusterKubernetesNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput)
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput).ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx)
}

// ClusterKubernetesNetworkConfigPtrInput is an input type that accepts ClusterKubernetesNetworkConfigArgs, ClusterKubernetesNetworkConfigPtr and ClusterKubernetesNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigPtrInput` via:
//
//          ClusterKubernetesNetworkConfigArgs{...}
//
//  or:
//
//          nil
type ClusterKubernetesNetworkConfigPtrInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput
	ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Context) ClusterKubernetesNetworkConfigPtrOutput
}

type clusterKubernetesNetworkConfigPtrType ClusterKubernetesNetworkConfigArgs

func ClusterKubernetesNetworkConfigPtr(v *ClusterKubernetesNetworkConfigArgs) ClusterKubernetesNetworkConfigPtrInput {
	return (*clusterKubernetesNetworkConfigPtrType)(v)
}

func (*clusterKubernetesNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigPtrOutput)
}

// The Kubernetes network configuration for the cluster.
type ClusterKubernetesNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubernetesNetworkConfig) *ClusterKubernetesNetworkConfig {
		return &v
	}).(ClusterKubernetesNetworkConfigPtrOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
func (o ClusterKubernetesNetworkConfigOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.ServiceIpv4Cidr }).(pulumi.StringPtrOutput)
}

type ClusterKubernetesNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) Elem() ClusterKubernetesNetworkConfigOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) ClusterKubernetesNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ClusterKubernetesNetworkConfig
		return ret
	}).(ClusterKubernetesNetworkConfigOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC.
func (o ClusterKubernetesNetworkConfigPtrOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv4Cidr
	}).(pulumi.StringPtrOutput)
}

// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
type ClusterLogging struct {
	// The cluster control plane logging configuration for your cluster.
	ClusterLogging *ClusterLogging `pulumi:"clusterLogging"`
}

// ClusterLoggingInput is an input type that accepts ClusterLoggingArgs and ClusterLoggingOutput values.
// You can construct a concrete instance of `ClusterLoggingInput` via:
//
//          ClusterLoggingArgs{...}
type ClusterLoggingInput interface {
	pulumi.Input

	ToClusterLoggingOutput() ClusterLoggingOutput
	ToClusterLoggingOutputWithContext(context.Context) ClusterLoggingOutput
}

// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
type ClusterLoggingArgs struct {
	// The cluster control plane logging configuration for your cluster.
	ClusterLogging ClusterLoggingPtrInput `pulumi:"clusterLogging"`
}

func (ClusterLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogging)(nil)).Elem()
}

func (i ClusterLoggingArgs) ToClusterLoggingOutput() ClusterLoggingOutput {
	return i.ToClusterLoggingOutputWithContext(context.Background())
}

func (i ClusterLoggingArgs) ToClusterLoggingOutputWithContext(ctx context.Context) ClusterLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingOutput)
}

func (i ClusterLoggingArgs) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return i.ToClusterLoggingPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingArgs) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingOutput).ToClusterLoggingPtrOutputWithContext(ctx)
}

// ClusterLoggingPtrInput is an input type that accepts ClusterLoggingArgs, ClusterLoggingPtr and ClusterLoggingPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingPtrInput` via:
//
//          ClusterLoggingArgs{...}
//
//  or:
//
//          nil
type ClusterLoggingPtrInput interface {
	pulumi.Input

	ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput
	ToClusterLoggingPtrOutputWithContext(context.Context) ClusterLoggingPtrOutput
}

type clusterLoggingPtrType ClusterLoggingArgs

func ClusterLoggingPtr(v *ClusterLoggingArgs) ClusterLoggingPtrInput {
	return (*clusterLoggingPtrType)(v)
}

func (*clusterLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLogging)(nil)).Elem()
}

func (i *clusterLoggingPtrType) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return i.ToClusterLoggingPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingPtrType) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingPtrOutput)
}

// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
type ClusterLoggingOutput struct{ *pulumi.OutputState }

func (ClusterLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogging)(nil)).Elem()
}

func (o ClusterLoggingOutput) ToClusterLoggingOutput() ClusterLoggingOutput {
	return o
}

func (o ClusterLoggingOutput) ToClusterLoggingOutputWithContext(ctx context.Context) ClusterLoggingOutput {
	return o
}

func (o ClusterLoggingOutput) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return o.ToClusterLoggingPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingOutput) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLogging) *ClusterLogging {
		return &v
	}).(ClusterLoggingPtrOutput)
}

// The cluster control plane logging configuration for your cluster.
func (o ClusterLoggingOutput) ClusterLogging() ClusterLoggingPtrOutput {
	return o.ApplyT(func(v ClusterLogging) *ClusterLogging { return v.ClusterLogging }).(ClusterLoggingPtrOutput)
}

type ClusterLoggingPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLogging)(nil)).Elem()
}

func (o ClusterLoggingPtrOutput) ToClusterLoggingPtrOutput() ClusterLoggingPtrOutput {
	return o
}

func (o ClusterLoggingPtrOutput) ToClusterLoggingPtrOutputWithContext(ctx context.Context) ClusterLoggingPtrOutput {
	return o
}

func (o ClusterLoggingPtrOutput) Elem() ClusterLoggingOutput {
	return o.ApplyT(func(v *ClusterLogging) ClusterLogging {
		if v != nil {
			return *v
		}
		var ret ClusterLogging
		return ret
	}).(ClusterLoggingOutput)
}

// The cluster control plane logging configuration for your cluster.
func (o ClusterLoggingPtrOutput) ClusterLogging() ClusterLoggingPtrOutput {
	return o.ApplyT(func(v *ClusterLogging) *ClusterLogging {
		if v == nil {
			return nil
		}
		return v.ClusterLogging
	}).(ClusterLoggingPtrOutput)
}

// An object representing the VPC configuration to use for an Amazon EKS cluster.
type ClusterResourcesVpcConfig struct {
	// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
	EndpointPrivateAccess *bool `pulumi:"endpointPrivateAccess"`
	// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
	EndpointPublicAccess *bool `pulumi:"endpointPublicAccess"`
	// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ClusterResourcesVpcConfigInput is an input type that accepts ClusterResourcesVpcConfigArgs and ClusterResourcesVpcConfigOutput values.
// You can construct a concrete instance of `ClusterResourcesVpcConfigInput` via:
//
//          ClusterResourcesVpcConfigArgs{...}
type ClusterResourcesVpcConfigInput interface {
	pulumi.Input

	ToClusterResourcesVpcConfigOutput() ClusterResourcesVpcConfigOutput
	ToClusterResourcesVpcConfigOutputWithContext(context.Context) ClusterResourcesVpcConfigOutput
}

// An object representing the VPC configuration to use for an Amazon EKS cluster.
type ClusterResourcesVpcConfigArgs struct {
	// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
	EndpointPrivateAccess pulumi.BoolPtrInput `pulumi:"endpointPrivateAccess"`
	// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
	EndpointPublicAccess pulumi.BoolPtrInput `pulumi:"endpointPublicAccess"`
	// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
	PublicAccessCidrs pulumi.StringArrayInput `pulumi:"publicAccessCidrs"`
	// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ClusterResourcesVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourcesVpcConfig)(nil)).Elem()
}

func (i ClusterResourcesVpcConfigArgs) ToClusterResourcesVpcConfigOutput() ClusterResourcesVpcConfigOutput {
	return i.ToClusterResourcesVpcConfigOutputWithContext(context.Background())
}

func (i ClusterResourcesVpcConfigArgs) ToClusterResourcesVpcConfigOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcesVpcConfigOutput)
}

func (i ClusterResourcesVpcConfigArgs) ToClusterResourcesVpcConfigPtrOutput() ClusterResourcesVpcConfigPtrOutput {
	return i.ToClusterResourcesVpcConfigPtrOutputWithContext(context.Background())
}

func (i ClusterResourcesVpcConfigArgs) ToClusterResourcesVpcConfigPtrOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcesVpcConfigOutput).ToClusterResourcesVpcConfigPtrOutputWithContext(ctx)
}

// ClusterResourcesVpcConfigPtrInput is an input type that accepts ClusterResourcesVpcConfigArgs, ClusterResourcesVpcConfigPtr and ClusterResourcesVpcConfigPtrOutput values.
// You can construct a concrete instance of `ClusterResourcesVpcConfigPtrInput` via:
//
//          ClusterResourcesVpcConfigArgs{...}
//
//  or:
//
//          nil
type ClusterResourcesVpcConfigPtrInput interface {
	pulumi.Input

	ToClusterResourcesVpcConfigPtrOutput() ClusterResourcesVpcConfigPtrOutput
	ToClusterResourcesVpcConfigPtrOutputWithContext(context.Context) ClusterResourcesVpcConfigPtrOutput
}

type clusterResourcesVpcConfigPtrType ClusterResourcesVpcConfigArgs

func ClusterResourcesVpcConfigPtr(v *ClusterResourcesVpcConfigArgs) ClusterResourcesVpcConfigPtrInput {
	return (*clusterResourcesVpcConfigPtrType)(v)
}

func (*clusterResourcesVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourcesVpcConfig)(nil)).Elem()
}

func (i *clusterResourcesVpcConfigPtrType) ToClusterResourcesVpcConfigPtrOutput() ClusterResourcesVpcConfigPtrOutput {
	return i.ToClusterResourcesVpcConfigPtrOutputWithContext(context.Background())
}

func (i *clusterResourcesVpcConfigPtrType) ToClusterResourcesVpcConfigPtrOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcesVpcConfigPtrOutput)
}

// An object representing the VPC configuration to use for an Amazon EKS cluster.
type ClusterResourcesVpcConfigOutput struct{ *pulumi.OutputState }

func (ClusterResourcesVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourcesVpcConfig)(nil)).Elem()
}

func (o ClusterResourcesVpcConfigOutput) ToClusterResourcesVpcConfigOutput() ClusterResourcesVpcConfigOutput {
	return o
}

func (o ClusterResourcesVpcConfigOutput) ToClusterResourcesVpcConfigOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigOutput {
	return o
}

func (o ClusterResourcesVpcConfigOutput) ToClusterResourcesVpcConfigPtrOutput() ClusterResourcesVpcConfigPtrOutput {
	return o.ToClusterResourcesVpcConfigPtrOutputWithContext(context.Background())
}

func (o ClusterResourcesVpcConfigOutput) ToClusterResourcesVpcConfigPtrOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourcesVpcConfig) *ClusterResourcesVpcConfig {
		return &v
	}).(ClusterResourcesVpcConfigPtrOutput)
}

// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
func (o ClusterResourcesVpcConfigOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) *bool { return v.EndpointPrivateAccess }).(pulumi.BoolPtrOutput)
}

// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
func (o ClusterResourcesVpcConfigOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) *bool { return v.EndpointPublicAccess }).(pulumi.BoolPtrOutput)
}

// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
func (o ClusterResourcesVpcConfigOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
func (o ClusterResourcesVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
func (o ClusterResourcesVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterResourcesVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ClusterResourcesVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourcesVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourcesVpcConfig)(nil)).Elem()
}

func (o ClusterResourcesVpcConfigPtrOutput) ToClusterResourcesVpcConfigPtrOutput() ClusterResourcesVpcConfigPtrOutput {
	return o
}

func (o ClusterResourcesVpcConfigPtrOutput) ToClusterResourcesVpcConfigPtrOutputWithContext(ctx context.Context) ClusterResourcesVpcConfigPtrOutput {
	return o
}

func (o ClusterResourcesVpcConfigPtrOutput) Elem() ClusterResourcesVpcConfigOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) ClusterResourcesVpcConfig {
		if v != nil {
			return *v
		}
		var ret ClusterResourcesVpcConfig
		return ret
	}).(ClusterResourcesVpcConfigOutput)
}

// Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods.
func (o ClusterResourcesVpcConfigPtrOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPrivateAccess
	}).(pulumi.BoolPtrOutput)
}

// Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server.
func (o ClusterResourcesVpcConfigPtrOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks.
func (o ClusterResourcesVpcConfigPtrOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.PublicAccessCidrs
	}).(pulumi.StringArrayOutput)
}

// Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you don't specify a security group, the default security group for your VPC is used.
func (o ClusterResourcesVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.
func (o ClusterResourcesVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterResourcesVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type ClusterTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ClusterTagInput is an input type that accepts ClusterTagArgs and ClusterTagOutput values.
// You can construct a concrete instance of `ClusterTagInput` via:
//
//          ClusterTagArgs{...}
type ClusterTagInput interface {
	pulumi.Input

	ToClusterTagOutput() ClusterTagOutput
	ToClusterTagOutputWithContext(context.Context) ClusterTagOutput
}

// A key-value pair to associate with a resource.
type ClusterTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (i ClusterTagArgs) ToClusterTagOutput() ClusterTagOutput {
	return i.ToClusterTagOutputWithContext(context.Background())
}

func (i ClusterTagArgs) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagOutput)
}

// ClusterTagArrayInput is an input type that accepts ClusterTagArray and ClusterTagArrayOutput values.
// You can construct a concrete instance of `ClusterTagArrayInput` via:
//
//          ClusterTagArray{ ClusterTagArgs{...} }
type ClusterTagArrayInput interface {
	pulumi.Input

	ToClusterTagArrayOutput() ClusterTagArrayOutput
	ToClusterTagArrayOutputWithContext(context.Context) ClusterTagArrayOutput
}

type ClusterTagArray []ClusterTagInput

func (ClusterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (i ClusterTagArray) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return i.ToClusterTagArrayOutputWithContext(context.Background())
}

func (i ClusterTagArray) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ClusterTagOutput struct{ *pulumi.OutputState }

func (ClusterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (o ClusterTagOutput) ToClusterTagOutput() ClusterTagOutput {
	return o
}

func (o ClusterTagOutput) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ClusterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ClusterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) Index(i pulumi.IntInput) ClusterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterTag {
		return vs[0].([]ClusterTag)[vs[1].(int)]
	}).(ClusterTagOutput)
}

// A key-value pair to associate with a pod.
type FargateProfileLabel struct {
	// The key name of the label.
	Key string `pulumi:"key"`
	// The value for the label.
	Value string `pulumi:"value"`
}

// FargateProfileLabelInput is an input type that accepts FargateProfileLabelArgs and FargateProfileLabelOutput values.
// You can construct a concrete instance of `FargateProfileLabelInput` via:
//
//          FargateProfileLabelArgs{...}
type FargateProfileLabelInput interface {
	pulumi.Input

	ToFargateProfileLabelOutput() FargateProfileLabelOutput
	ToFargateProfileLabelOutputWithContext(context.Context) FargateProfileLabelOutput
}

// A key-value pair to associate with a pod.
type FargateProfileLabelArgs struct {
	// The key name of the label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FargateProfileLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileLabel)(nil)).Elem()
}

func (i FargateProfileLabelArgs) ToFargateProfileLabelOutput() FargateProfileLabelOutput {
	return i.ToFargateProfileLabelOutputWithContext(context.Background())
}

func (i FargateProfileLabelArgs) ToFargateProfileLabelOutputWithContext(ctx context.Context) FargateProfileLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileLabelOutput)
}

// FargateProfileLabelArrayInput is an input type that accepts FargateProfileLabelArray and FargateProfileLabelArrayOutput values.
// You can construct a concrete instance of `FargateProfileLabelArrayInput` via:
//
//          FargateProfileLabelArray{ FargateProfileLabelArgs{...} }
type FargateProfileLabelArrayInput interface {
	pulumi.Input

	ToFargateProfileLabelArrayOutput() FargateProfileLabelArrayOutput
	ToFargateProfileLabelArrayOutputWithContext(context.Context) FargateProfileLabelArrayOutput
}

type FargateProfileLabelArray []FargateProfileLabelInput

func (FargateProfileLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileLabel)(nil)).Elem()
}

func (i FargateProfileLabelArray) ToFargateProfileLabelArrayOutput() FargateProfileLabelArrayOutput {
	return i.ToFargateProfileLabelArrayOutputWithContext(context.Background())
}

func (i FargateProfileLabelArray) ToFargateProfileLabelArrayOutputWithContext(ctx context.Context) FargateProfileLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileLabelArrayOutput)
}

// A key-value pair to associate with a pod.
type FargateProfileLabelOutput struct{ *pulumi.OutputState }

func (FargateProfileLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileLabel)(nil)).Elem()
}

func (o FargateProfileLabelOutput) ToFargateProfileLabelOutput() FargateProfileLabelOutput {
	return o
}

func (o FargateProfileLabelOutput) ToFargateProfileLabelOutputWithContext(ctx context.Context) FargateProfileLabelOutput {
	return o
}

// The key name of the label.
func (o FargateProfileLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the label.
func (o FargateProfileLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileLabel) string { return v.Value }).(pulumi.StringOutput)
}

type FargateProfileLabelArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileLabel)(nil)).Elem()
}

func (o FargateProfileLabelArrayOutput) ToFargateProfileLabelArrayOutput() FargateProfileLabelArrayOutput {
	return o
}

func (o FargateProfileLabelArrayOutput) ToFargateProfileLabelArrayOutputWithContext(ctx context.Context) FargateProfileLabelArrayOutput {
	return o
}

func (o FargateProfileLabelArrayOutput) Index(i pulumi.IntInput) FargateProfileLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileLabel {
		return vs[0].([]FargateProfileLabel)[vs[1].(int)]
	}).(FargateProfileLabelOutput)
}

type FargateProfileSelector struct {
	Labels    []FargateProfileLabel `pulumi:"labels"`
	Namespace string                `pulumi:"namespace"`
}

// FargateProfileSelectorInput is an input type that accepts FargateProfileSelectorArgs and FargateProfileSelectorOutput values.
// You can construct a concrete instance of `FargateProfileSelectorInput` via:
//
//          FargateProfileSelectorArgs{...}
type FargateProfileSelectorInput interface {
	pulumi.Input

	ToFargateProfileSelectorOutput() FargateProfileSelectorOutput
	ToFargateProfileSelectorOutputWithContext(context.Context) FargateProfileSelectorOutput
}

type FargateProfileSelectorArgs struct {
	Labels    FargateProfileLabelArrayInput `pulumi:"labels"`
	Namespace pulumi.StringInput            `pulumi:"namespace"`
}

func (FargateProfileSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return i.ToFargateProfileSelectorOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorOutput)
}

// FargateProfileSelectorArrayInput is an input type that accepts FargateProfileSelectorArray and FargateProfileSelectorArrayOutput values.
// You can construct a concrete instance of `FargateProfileSelectorArrayInput` via:
//
//          FargateProfileSelectorArray{ FargateProfileSelectorArgs{...} }
type FargateProfileSelectorArrayInput interface {
	pulumi.Input

	ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput
	ToFargateProfileSelectorArrayOutputWithContext(context.Context) FargateProfileSelectorArrayOutput
}

type FargateProfileSelectorArray []FargateProfileSelectorInput

func (FargateProfileSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return i.ToFargateProfileSelectorArrayOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorArrayOutput)
}

type FargateProfileSelectorOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return o
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return o
}

func (o FargateProfileSelectorOutput) Labels() FargateProfileLabelArrayOutput {
	return o.ApplyT(func(v FargateProfileSelector) []FargateProfileLabel { return v.Labels }).(FargateProfileLabelArrayOutput)
}

func (o FargateProfileSelectorOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileSelector) string { return v.Namespace }).(pulumi.StringOutput)
}

type FargateProfileSelectorArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) Index(i pulumi.IntInput) FargateProfileSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileSelector {
		return vs[0].([]FargateProfileSelector)[vs[1].(int)]
	}).(FargateProfileSelectorOutput)
}

// A key-value pair to associate with a resource.
type FargateProfileTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// FargateProfileTagInput is an input type that accepts FargateProfileTagArgs and FargateProfileTagOutput values.
// You can construct a concrete instance of `FargateProfileTagInput` via:
//
//          FargateProfileTagArgs{...}
type FargateProfileTagInput interface {
	pulumi.Input

	ToFargateProfileTagOutput() FargateProfileTagOutput
	ToFargateProfileTagOutputWithContext(context.Context) FargateProfileTagOutput
}

// A key-value pair to associate with a resource.
type FargateProfileTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FargateProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileTag)(nil)).Elem()
}

func (i FargateProfileTagArgs) ToFargateProfileTagOutput() FargateProfileTagOutput {
	return i.ToFargateProfileTagOutputWithContext(context.Background())
}

func (i FargateProfileTagArgs) ToFargateProfileTagOutputWithContext(ctx context.Context) FargateProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileTagOutput)
}

// FargateProfileTagArrayInput is an input type that accepts FargateProfileTagArray and FargateProfileTagArrayOutput values.
// You can construct a concrete instance of `FargateProfileTagArrayInput` via:
//
//          FargateProfileTagArray{ FargateProfileTagArgs{...} }
type FargateProfileTagArrayInput interface {
	pulumi.Input

	ToFargateProfileTagArrayOutput() FargateProfileTagArrayOutput
	ToFargateProfileTagArrayOutputWithContext(context.Context) FargateProfileTagArrayOutput
}

type FargateProfileTagArray []FargateProfileTagInput

func (FargateProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileTag)(nil)).Elem()
}

func (i FargateProfileTagArray) ToFargateProfileTagArrayOutput() FargateProfileTagArrayOutput {
	return i.ToFargateProfileTagArrayOutputWithContext(context.Background())
}

func (i FargateProfileTagArray) ToFargateProfileTagArrayOutputWithContext(ctx context.Context) FargateProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileTagArrayOutput)
}

// A key-value pair to associate with a resource.
type FargateProfileTagOutput struct{ *pulumi.OutputState }

func (FargateProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileTag)(nil)).Elem()
}

func (o FargateProfileTagOutput) ToFargateProfileTagOutput() FargateProfileTagOutput {
	return o
}

func (o FargateProfileTagOutput) ToFargateProfileTagOutputWithContext(ctx context.Context) FargateProfileTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o FargateProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o FargateProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type FargateProfileTagArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileTag)(nil)).Elem()
}

func (o FargateProfileTagArrayOutput) ToFargateProfileTagArrayOutput() FargateProfileTagArrayOutput {
	return o
}

func (o FargateProfileTagArrayOutput) ToFargateProfileTagArrayOutputWithContext(ctx context.Context) FargateProfileTagArrayOutput {
	return o
}

func (o FargateProfileTagArrayOutput) Index(i pulumi.IntInput) FargateProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileTag {
		return vs[0].([]FargateProfileTag)[vs[1].(int)]
	}).(FargateProfileTagOutput)
}

type NodegroupLaunchTemplateSpecification struct {
	Id      *string `pulumi:"id"`
	Name    *string `pulumi:"name"`
	Version *string `pulumi:"version"`
}

// NodegroupLaunchTemplateSpecificationInput is an input type that accepts NodegroupLaunchTemplateSpecificationArgs and NodegroupLaunchTemplateSpecificationOutput values.
// You can construct a concrete instance of `NodegroupLaunchTemplateSpecificationInput` via:
//
//          NodegroupLaunchTemplateSpecificationArgs{...}
type NodegroupLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToNodegroupLaunchTemplateSpecificationOutput() NodegroupLaunchTemplateSpecificationOutput
	ToNodegroupLaunchTemplateSpecificationOutputWithContext(context.Context) NodegroupLaunchTemplateSpecificationOutput
}

type NodegroupLaunchTemplateSpecificationArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (NodegroupLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationOutput() NodegroupLaunchTemplateSpecificationOutput {
	return i.ToNodegroupLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupLaunchTemplateSpecificationOutput)
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return i.ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (i NodegroupLaunchTemplateSpecificationArgs) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupLaunchTemplateSpecificationOutput).ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx)
}

// NodegroupLaunchTemplateSpecificationPtrInput is an input type that accepts NodegroupLaunchTemplateSpecificationArgs, NodegroupLaunchTemplateSpecificationPtr and NodegroupLaunchTemplateSpecificationPtrOutput values.
// You can construct a concrete instance of `NodegroupLaunchTemplateSpecificationPtrInput` via:
//
//          NodegroupLaunchTemplateSpecificationArgs{...}
//
//  or:
//
//          nil
type NodegroupLaunchTemplateSpecificationPtrInput interface {
	pulumi.Input

	ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput
	ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Context) NodegroupLaunchTemplateSpecificationPtrOutput
}

type nodegroupLaunchTemplateSpecificationPtrType NodegroupLaunchTemplateSpecificationArgs

func NodegroupLaunchTemplateSpecificationPtr(v *NodegroupLaunchTemplateSpecificationArgs) NodegroupLaunchTemplateSpecificationPtrInput {
	return (*nodegroupLaunchTemplateSpecificationPtrType)(v)
}

func (*nodegroupLaunchTemplateSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (i *nodegroupLaunchTemplateSpecificationPtrType) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return i.ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (i *nodegroupLaunchTemplateSpecificationPtrType) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupLaunchTemplateSpecificationPtrOutput)
}

type NodegroupLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (NodegroupLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationOutput() NodegroupLaunchTemplateSpecificationOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return o.ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (o NodegroupLaunchTemplateSpecificationOutput) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupLaunchTemplateSpecification) *NodegroupLaunchTemplateSpecification {
		return &v
	}).(NodegroupLaunchTemplateSpecificationPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupLaunchTemplateSpecification) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupLaunchTemplateSpecification) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupLaunchTemplateSpecification) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type NodegroupLaunchTemplateSpecificationPtrOutput struct{ *pulumi.OutputState }

func (NodegroupLaunchTemplateSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupLaunchTemplateSpecification)(nil)).Elem()
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) ToNodegroupLaunchTemplateSpecificationPtrOutput() NodegroupLaunchTemplateSpecificationPtrOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) ToNodegroupLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) NodegroupLaunchTemplateSpecificationPtrOutput {
	return o
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Elem() NodegroupLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) NodegroupLaunchTemplateSpecification {
		if v != nil {
			return *v
		}
		var ret NodegroupLaunchTemplateSpecification
		return ret
	}).(NodegroupLaunchTemplateSpecificationOutput)
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o NodegroupLaunchTemplateSpecificationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type NodegroupRemoteAccess struct {
	Ec2SshKey            string   `pulumi:"ec2SshKey"`
	SourceSecurityGroups []string `pulumi:"sourceSecurityGroups"`
}

// NodegroupRemoteAccessInput is an input type that accepts NodegroupRemoteAccessArgs and NodegroupRemoteAccessOutput values.
// You can construct a concrete instance of `NodegroupRemoteAccessInput` via:
//
//          NodegroupRemoteAccessArgs{...}
type NodegroupRemoteAccessInput interface {
	pulumi.Input

	ToNodegroupRemoteAccessOutput() NodegroupRemoteAccessOutput
	ToNodegroupRemoteAccessOutputWithContext(context.Context) NodegroupRemoteAccessOutput
}

type NodegroupRemoteAccessArgs struct {
	Ec2SshKey            pulumi.StringInput      `pulumi:"ec2SshKey"`
	SourceSecurityGroups pulumi.StringArrayInput `pulumi:"sourceSecurityGroups"`
}

func (NodegroupRemoteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupRemoteAccess)(nil)).Elem()
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessOutput() NodegroupRemoteAccessOutput {
	return i.ToNodegroupRemoteAccessOutputWithContext(context.Background())
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessOutputWithContext(ctx context.Context) NodegroupRemoteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupRemoteAccessOutput)
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return i.ToNodegroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i NodegroupRemoteAccessArgs) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupRemoteAccessOutput).ToNodegroupRemoteAccessPtrOutputWithContext(ctx)
}

// NodegroupRemoteAccessPtrInput is an input type that accepts NodegroupRemoteAccessArgs, NodegroupRemoteAccessPtr and NodegroupRemoteAccessPtrOutput values.
// You can construct a concrete instance of `NodegroupRemoteAccessPtrInput` via:
//
//          NodegroupRemoteAccessArgs{...}
//
//  or:
//
//          nil
type NodegroupRemoteAccessPtrInput interface {
	pulumi.Input

	ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput
	ToNodegroupRemoteAccessPtrOutputWithContext(context.Context) NodegroupRemoteAccessPtrOutput
}

type nodegroupRemoteAccessPtrType NodegroupRemoteAccessArgs

func NodegroupRemoteAccessPtr(v *NodegroupRemoteAccessArgs) NodegroupRemoteAccessPtrInput {
	return (*nodegroupRemoteAccessPtrType)(v)
}

func (*nodegroupRemoteAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupRemoteAccess)(nil)).Elem()
}

func (i *nodegroupRemoteAccessPtrType) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return i.ToNodegroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i *nodegroupRemoteAccessPtrType) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupRemoteAccessPtrOutput)
}

type NodegroupRemoteAccessOutput struct{ *pulumi.OutputState }

func (NodegroupRemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupRemoteAccess)(nil)).Elem()
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessOutput() NodegroupRemoteAccessOutput {
	return o
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessOutputWithContext(ctx context.Context) NodegroupRemoteAccessOutput {
	return o
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return o.ToNodegroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (o NodegroupRemoteAccessOutput) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupRemoteAccess) *NodegroupRemoteAccess {
		return &v
	}).(NodegroupRemoteAccessPtrOutput)
}

func (o NodegroupRemoteAccessOutput) Ec2SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v NodegroupRemoteAccess) string { return v.Ec2SshKey }).(pulumi.StringOutput)
}

func (o NodegroupRemoteAccessOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodegroupRemoteAccess) []string { return v.SourceSecurityGroups }).(pulumi.StringArrayOutput)
}

type NodegroupRemoteAccessPtrOutput struct{ *pulumi.OutputState }

func (NodegroupRemoteAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupRemoteAccess)(nil)).Elem()
}

func (o NodegroupRemoteAccessPtrOutput) ToNodegroupRemoteAccessPtrOutput() NodegroupRemoteAccessPtrOutput {
	return o
}

func (o NodegroupRemoteAccessPtrOutput) ToNodegroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodegroupRemoteAccessPtrOutput {
	return o
}

func (o NodegroupRemoteAccessPtrOutput) Elem() NodegroupRemoteAccessOutput {
	return o.ApplyT(func(v *NodegroupRemoteAccess) NodegroupRemoteAccess {
		if v != nil {
			return *v
		}
		var ret NodegroupRemoteAccess
		return ret
	}).(NodegroupRemoteAccessOutput)
}

func (o NodegroupRemoteAccessPtrOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodegroupRemoteAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Ec2SshKey
	}).(pulumi.StringPtrOutput)
}

func (o NodegroupRemoteAccessPtrOutput) SourceSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodegroupRemoteAccess) []string {
		if v == nil {
			return nil
		}
		return v.SourceSecurityGroups
	}).(pulumi.StringArrayOutput)
}

type NodegroupScalingConfig struct {
	DesiredSize *float64 `pulumi:"desiredSize"`
	MaxSize     *float64 `pulumi:"maxSize"`
	MinSize     *float64 `pulumi:"minSize"`
}

// NodegroupScalingConfigInput is an input type that accepts NodegroupScalingConfigArgs and NodegroupScalingConfigOutput values.
// You can construct a concrete instance of `NodegroupScalingConfigInput` via:
//
//          NodegroupScalingConfigArgs{...}
type NodegroupScalingConfigInput interface {
	pulumi.Input

	ToNodegroupScalingConfigOutput() NodegroupScalingConfigOutput
	ToNodegroupScalingConfigOutputWithContext(context.Context) NodegroupScalingConfigOutput
}

type NodegroupScalingConfigArgs struct {
	DesiredSize pulumi.Float64PtrInput `pulumi:"desiredSize"`
	MaxSize     pulumi.Float64PtrInput `pulumi:"maxSize"`
	MinSize     pulumi.Float64PtrInput `pulumi:"minSize"`
}

func (NodegroupScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupScalingConfig)(nil)).Elem()
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigOutput() NodegroupScalingConfigOutput {
	return i.ToNodegroupScalingConfigOutputWithContext(context.Background())
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigOutputWithContext(ctx context.Context) NodegroupScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupScalingConfigOutput)
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return i.ToNodegroupScalingConfigPtrOutputWithContext(context.Background())
}

func (i NodegroupScalingConfigArgs) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupScalingConfigOutput).ToNodegroupScalingConfigPtrOutputWithContext(ctx)
}

// NodegroupScalingConfigPtrInput is an input type that accepts NodegroupScalingConfigArgs, NodegroupScalingConfigPtr and NodegroupScalingConfigPtrOutput values.
// You can construct a concrete instance of `NodegroupScalingConfigPtrInput` via:
//
//          NodegroupScalingConfigArgs{...}
//
//  or:
//
//          nil
type NodegroupScalingConfigPtrInput interface {
	pulumi.Input

	ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput
	ToNodegroupScalingConfigPtrOutputWithContext(context.Context) NodegroupScalingConfigPtrOutput
}

type nodegroupScalingConfigPtrType NodegroupScalingConfigArgs

func NodegroupScalingConfigPtr(v *NodegroupScalingConfigArgs) NodegroupScalingConfigPtrInput {
	return (*nodegroupScalingConfigPtrType)(v)
}

func (*nodegroupScalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupScalingConfig)(nil)).Elem()
}

func (i *nodegroupScalingConfigPtrType) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return i.ToNodegroupScalingConfigPtrOutputWithContext(context.Background())
}

func (i *nodegroupScalingConfigPtrType) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupScalingConfigPtrOutput)
}

type NodegroupScalingConfigOutput struct{ *pulumi.OutputState }

func (NodegroupScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupScalingConfig)(nil)).Elem()
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigOutput() NodegroupScalingConfigOutput {
	return o
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigOutputWithContext(ctx context.Context) NodegroupScalingConfigOutput {
	return o
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return o.ToNodegroupScalingConfigPtrOutputWithContext(context.Background())
}

func (o NodegroupScalingConfigOutput) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupScalingConfig) *NodegroupScalingConfig {
		return &v
	}).(NodegroupScalingConfigPtrOutput)
}

func (o NodegroupScalingConfigOutput) DesiredSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupScalingConfig) *float64 { return v.DesiredSize }).(pulumi.Float64PtrOutput)
}

func (o NodegroupScalingConfigOutput) MaxSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupScalingConfig) *float64 { return v.MaxSize }).(pulumi.Float64PtrOutput)
}

func (o NodegroupScalingConfigOutput) MinSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupScalingConfig) *float64 { return v.MinSize }).(pulumi.Float64PtrOutput)
}

type NodegroupScalingConfigPtrOutput struct{ *pulumi.OutputState }

func (NodegroupScalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupScalingConfig)(nil)).Elem()
}

func (o NodegroupScalingConfigPtrOutput) ToNodegroupScalingConfigPtrOutput() NodegroupScalingConfigPtrOutput {
	return o
}

func (o NodegroupScalingConfigPtrOutput) ToNodegroupScalingConfigPtrOutputWithContext(ctx context.Context) NodegroupScalingConfigPtrOutput {
	return o
}

func (o NodegroupScalingConfigPtrOutput) Elem() NodegroupScalingConfigOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) NodegroupScalingConfig {
		if v != nil {
			return *v
		}
		var ret NodegroupScalingConfig
		return ret
	}).(NodegroupScalingConfigOutput)
}

func (o NodegroupScalingConfigPtrOutput) DesiredSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.DesiredSize
	}).(pulumi.Float64PtrOutput)
}

func (o NodegroupScalingConfigPtrOutput) MaxSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.Float64PtrOutput)
}

func (o NodegroupScalingConfigPtrOutput) MinSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupScalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.Float64PtrOutput)
}

type NodegroupTaint struct {
	Effect *string `pulumi:"effect"`
	Key    *string `pulumi:"key"`
	Value  *string `pulumi:"value"`
}

// NodegroupTaintInput is an input type that accepts NodegroupTaintArgs and NodegroupTaintOutput values.
// You can construct a concrete instance of `NodegroupTaintInput` via:
//
//          NodegroupTaintArgs{...}
type NodegroupTaintInput interface {
	pulumi.Input

	ToNodegroupTaintOutput() NodegroupTaintOutput
	ToNodegroupTaintOutputWithContext(context.Context) NodegroupTaintOutput
}

type NodegroupTaintArgs struct {
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	Key    pulumi.StringPtrInput `pulumi:"key"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NodegroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupTaint)(nil)).Elem()
}

func (i NodegroupTaintArgs) ToNodegroupTaintOutput() NodegroupTaintOutput {
	return i.ToNodegroupTaintOutputWithContext(context.Background())
}

func (i NodegroupTaintArgs) ToNodegroupTaintOutputWithContext(ctx context.Context) NodegroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupTaintOutput)
}

// NodegroupTaintArrayInput is an input type that accepts NodegroupTaintArray and NodegroupTaintArrayOutput values.
// You can construct a concrete instance of `NodegroupTaintArrayInput` via:
//
//          NodegroupTaintArray{ NodegroupTaintArgs{...} }
type NodegroupTaintArrayInput interface {
	pulumi.Input

	ToNodegroupTaintArrayOutput() NodegroupTaintArrayOutput
	ToNodegroupTaintArrayOutputWithContext(context.Context) NodegroupTaintArrayOutput
}

type NodegroupTaintArray []NodegroupTaintInput

func (NodegroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodegroupTaint)(nil)).Elem()
}

func (i NodegroupTaintArray) ToNodegroupTaintArrayOutput() NodegroupTaintArrayOutput {
	return i.ToNodegroupTaintArrayOutputWithContext(context.Background())
}

func (i NodegroupTaintArray) ToNodegroupTaintArrayOutputWithContext(ctx context.Context) NodegroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupTaintArrayOutput)
}

type NodegroupTaintOutput struct{ *pulumi.OutputState }

func (NodegroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupTaint)(nil)).Elem()
}

func (o NodegroupTaintOutput) ToNodegroupTaintOutput() NodegroupTaintOutput {
	return o
}

func (o NodegroupTaintOutput) ToNodegroupTaintOutputWithContext(ctx context.Context) NodegroupTaintOutput {
	return o
}

func (o NodegroupTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o NodegroupTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o NodegroupTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodegroupTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodegroupTaintArrayOutput struct{ *pulumi.OutputState }

func (NodegroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodegroupTaint)(nil)).Elem()
}

func (o NodegroupTaintArrayOutput) ToNodegroupTaintArrayOutput() NodegroupTaintArrayOutput {
	return o
}

func (o NodegroupTaintArrayOutput) ToNodegroupTaintArrayOutputWithContext(ctx context.Context) NodegroupTaintArrayOutput {
	return o
}

func (o NodegroupTaintArrayOutput) Index(i pulumi.IntInput) NodegroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodegroupTaint {
		return vs[0].([]NodegroupTaint)[vs[1].(int)]
	}).(NodegroupTaintOutput)
}

type NodegroupUpdateConfig struct {
	MaxUnavailable           *float64 `pulumi:"maxUnavailable"`
	MaxUnavailablePercentage *float64 `pulumi:"maxUnavailablePercentage"`
}

// NodegroupUpdateConfigInput is an input type that accepts NodegroupUpdateConfigArgs and NodegroupUpdateConfigOutput values.
// You can construct a concrete instance of `NodegroupUpdateConfigInput` via:
//
//          NodegroupUpdateConfigArgs{...}
type NodegroupUpdateConfigInput interface {
	pulumi.Input

	ToNodegroupUpdateConfigOutput() NodegroupUpdateConfigOutput
	ToNodegroupUpdateConfigOutputWithContext(context.Context) NodegroupUpdateConfigOutput
}

type NodegroupUpdateConfigArgs struct {
	MaxUnavailable           pulumi.Float64PtrInput `pulumi:"maxUnavailable"`
	MaxUnavailablePercentage pulumi.Float64PtrInput `pulumi:"maxUnavailablePercentage"`
}

func (NodegroupUpdateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupUpdateConfig)(nil)).Elem()
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigOutput() NodegroupUpdateConfigOutput {
	return i.ToNodegroupUpdateConfigOutputWithContext(context.Background())
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigOutputWithContext(ctx context.Context) NodegroupUpdateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupUpdateConfigOutput)
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return i.ToNodegroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i NodegroupUpdateConfigArgs) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupUpdateConfigOutput).ToNodegroupUpdateConfigPtrOutputWithContext(ctx)
}

// NodegroupUpdateConfigPtrInput is an input type that accepts NodegroupUpdateConfigArgs, NodegroupUpdateConfigPtr and NodegroupUpdateConfigPtrOutput values.
// You can construct a concrete instance of `NodegroupUpdateConfigPtrInput` via:
//
//          NodegroupUpdateConfigArgs{...}
//
//  or:
//
//          nil
type NodegroupUpdateConfigPtrInput interface {
	pulumi.Input

	ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput
	ToNodegroupUpdateConfigPtrOutputWithContext(context.Context) NodegroupUpdateConfigPtrOutput
}

type nodegroupUpdateConfigPtrType NodegroupUpdateConfigArgs

func NodegroupUpdateConfigPtr(v *NodegroupUpdateConfigArgs) NodegroupUpdateConfigPtrInput {
	return (*nodegroupUpdateConfigPtrType)(v)
}

func (*nodegroupUpdateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupUpdateConfig)(nil)).Elem()
}

func (i *nodegroupUpdateConfigPtrType) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return i.ToNodegroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i *nodegroupUpdateConfigPtrType) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodegroupUpdateConfigPtrOutput)
}

type NodegroupUpdateConfigOutput struct{ *pulumi.OutputState }

func (NodegroupUpdateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodegroupUpdateConfig)(nil)).Elem()
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigOutput() NodegroupUpdateConfigOutput {
	return o
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigOutputWithContext(ctx context.Context) NodegroupUpdateConfigOutput {
	return o
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return o.ToNodegroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (o NodegroupUpdateConfigOutput) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodegroupUpdateConfig) *NodegroupUpdateConfig {
		return &v
	}).(NodegroupUpdateConfigPtrOutput)
}

func (o NodegroupUpdateConfigOutput) MaxUnavailable() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupUpdateConfig) *float64 { return v.MaxUnavailable }).(pulumi.Float64PtrOutput)
}

func (o NodegroupUpdateConfigOutput) MaxUnavailablePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodegroupUpdateConfig) *float64 { return v.MaxUnavailablePercentage }).(pulumi.Float64PtrOutput)
}

type NodegroupUpdateConfigPtrOutput struct{ *pulumi.OutputState }

func (NodegroupUpdateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodegroupUpdateConfig)(nil)).Elem()
}

func (o NodegroupUpdateConfigPtrOutput) ToNodegroupUpdateConfigPtrOutput() NodegroupUpdateConfigPtrOutput {
	return o
}

func (o NodegroupUpdateConfigPtrOutput) ToNodegroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodegroupUpdateConfigPtrOutput {
	return o
}

func (o NodegroupUpdateConfigPtrOutput) Elem() NodegroupUpdateConfigOutput {
	return o.ApplyT(func(v *NodegroupUpdateConfig) NodegroupUpdateConfig {
		if v != nil {
			return *v
		}
		var ret NodegroupUpdateConfig
		return ret
	}).(NodegroupUpdateConfigOutput)
}

func (o NodegroupUpdateConfigPtrOutput) MaxUnavailable() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupUpdateConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.Float64PtrOutput)
}

func (o NodegroupUpdateConfigPtrOutput) MaxUnavailablePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodegroupUpdateConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxUnavailablePercentage
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddonTagInput)(nil)).Elem(), AddonTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddonTagArrayInput)(nil)).Elem(), AddonTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigArrayInput)(nil)).Elem(), ClusterEncryptionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigProviderPropertiesInput)(nil)).Elem(), ClusterEncryptionConfigProviderPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigProviderPropertiesPtrInput)(nil)).Elem(), ClusterEncryptionConfigProviderPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigPtrInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInput)(nil)).Elem(), ClusterLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingPtrInput)(nil)).Elem(), ClusterLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourcesVpcConfigInput)(nil)).Elem(), ClusterResourcesVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourcesVpcConfigPtrInput)(nil)).Elem(), ClusterResourcesVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagInput)(nil)).Elem(), ClusterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagArrayInput)(nil)).Elem(), ClusterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileLabelInput)(nil)).Elem(), FargateProfileLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileLabelArrayInput)(nil)).Elem(), FargateProfileLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorInput)(nil)).Elem(), FargateProfileSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorArrayInput)(nil)).Elem(), FargateProfileSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileTagInput)(nil)).Elem(), FargateProfileTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileTagArrayInput)(nil)).Elem(), FargateProfileTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupLaunchTemplateSpecificationInput)(nil)).Elem(), NodegroupLaunchTemplateSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupLaunchTemplateSpecificationPtrInput)(nil)).Elem(), NodegroupLaunchTemplateSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupRemoteAccessInput)(nil)).Elem(), NodegroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupRemoteAccessPtrInput)(nil)).Elem(), NodegroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupScalingConfigInput)(nil)).Elem(), NodegroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupScalingConfigPtrInput)(nil)).Elem(), NodegroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupTaintInput)(nil)).Elem(), NodegroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupTaintArrayInput)(nil)).Elem(), NodegroupTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupUpdateConfigInput)(nil)).Elem(), NodegroupUpdateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodegroupUpdateConfigPtrInput)(nil)).Elem(), NodegroupUpdateConfigArgs{})
	pulumi.RegisterOutputType(AddonTagOutput{})
	pulumi.RegisterOutputType(AddonTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigProviderPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingOutput{})
	pulumi.RegisterOutputType(ClusterLoggingPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourcesVpcConfigOutput{})
	pulumi.RegisterOutputType(ClusterResourcesVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterTagOutput{})
	pulumi.RegisterOutputType(ClusterTagArrayOutput{})
	pulumi.RegisterOutputType(FargateProfileLabelOutput{})
	pulumi.RegisterOutputType(FargateProfileLabelArrayOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorArrayOutput{})
	pulumi.RegisterOutputType(FargateProfileTagOutput{})
	pulumi.RegisterOutputType(FargateProfileTagArrayOutput{})
	pulumi.RegisterOutputType(NodegroupLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(NodegroupLaunchTemplateSpecificationPtrOutput{})
	pulumi.RegisterOutputType(NodegroupRemoteAccessOutput{})
	pulumi.RegisterOutputType(NodegroupRemoteAccessPtrOutput{})
	pulumi.RegisterOutputType(NodegroupScalingConfigOutput{})
	pulumi.RegisterOutputType(NodegroupScalingConfigPtrOutput{})
	pulumi.RegisterOutputType(NodegroupTaintOutput{})
	pulumi.RegisterOutputType(NodegroupTaintArrayOutput{})
	pulumi.RegisterOutputType(NodegroupUpdateConfigOutput{})
	pulumi.RegisterOutputType(NodegroupUpdateConfigPtrOutput{})
}
