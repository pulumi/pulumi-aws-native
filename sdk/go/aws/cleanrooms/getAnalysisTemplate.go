// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Represents a stored analysis within a collaboration
func LookupAnalysisTemplate(ctx *pulumi.Context, args *LookupAnalysisTemplateArgs, opts ...pulumi.InvokeOption) (*LookupAnalysisTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAnalysisTemplateResult
	err := ctx.Invoke("aws-native:cleanrooms:getAnalysisTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAnalysisTemplateArgs struct {
	AnalysisTemplateIdentifier string `pulumi:"analysisTemplateIdentifier"`
	MembershipIdentifier       string `pulumi:"membershipIdentifier"`
}

type LookupAnalysisTemplateResult struct {
	AnalysisTemplateIdentifier *string                         `pulumi:"analysisTemplateIdentifier"`
	Arn                        *string                         `pulumi:"arn"`
	CollaborationArn           *string                         `pulumi:"collaborationArn"`
	CollaborationIdentifier    *string                         `pulumi:"collaborationIdentifier"`
	Description                *string                         `pulumi:"description"`
	MembershipArn              *string                         `pulumi:"membershipArn"`
	Schema                     *AnalysisTemplateAnalysisSchema `pulumi:"schema"`
	// An arbitrary set of tags (key-value pairs) for this cleanrooms analysis template.
	Tags []AnalysisTemplateTag `pulumi:"tags"`
}

func LookupAnalysisTemplateOutput(ctx *pulumi.Context, args LookupAnalysisTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupAnalysisTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAnalysisTemplateResult, error) {
			args := v.(LookupAnalysisTemplateArgs)
			r, err := LookupAnalysisTemplate(ctx, &args, opts...)
			var s LookupAnalysisTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAnalysisTemplateResultOutput)
}

type LookupAnalysisTemplateOutputArgs struct {
	AnalysisTemplateIdentifier pulumi.StringInput `pulumi:"analysisTemplateIdentifier"`
	MembershipIdentifier       pulumi.StringInput `pulumi:"membershipIdentifier"`
}

func (LookupAnalysisTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAnalysisTemplateArgs)(nil)).Elem()
}

type LookupAnalysisTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupAnalysisTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAnalysisTemplateResult)(nil)).Elem()
}

func (o LookupAnalysisTemplateResultOutput) ToLookupAnalysisTemplateResultOutput() LookupAnalysisTemplateResultOutput {
	return o
}

func (o LookupAnalysisTemplateResultOutput) ToLookupAnalysisTemplateResultOutputWithContext(ctx context.Context) LookupAnalysisTemplateResultOutput {
	return o
}

func (o LookupAnalysisTemplateResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAnalysisTemplateResult] {
	return pulumix.Output[LookupAnalysisTemplateResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupAnalysisTemplateResultOutput) AnalysisTemplateIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *string { return v.AnalysisTemplateIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupAnalysisTemplateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupAnalysisTemplateResultOutput) CollaborationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *string { return v.CollaborationArn }).(pulumi.StringPtrOutput)
}

func (o LookupAnalysisTemplateResultOutput) CollaborationIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *string { return v.CollaborationIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupAnalysisTemplateResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupAnalysisTemplateResultOutput) MembershipArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *string { return v.MembershipArn }).(pulumi.StringPtrOutput)
}

func (o LookupAnalysisTemplateResultOutput) Schema() AnalysisTemplateAnalysisSchemaPtrOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) *AnalysisTemplateAnalysisSchema { return v.Schema }).(AnalysisTemplateAnalysisSchemaPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this cleanrooms analysis template.
func (o LookupAnalysisTemplateResultOutput) Tags() AnalysisTemplateTagArrayOutput {
	return o.ApplyT(func(v LookupAnalysisTemplateResult) []AnalysisTemplateTag { return v.Tags }).(AnalysisTemplateTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAnalysisTemplateResultOutput{})
}
