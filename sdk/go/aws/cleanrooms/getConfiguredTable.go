// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a table that can be associated with collaborations
func LookupConfiguredTable(ctx *pulumi.Context, args *LookupConfiguredTableArgs, opts ...pulumi.InvokeOption) (*LookupConfiguredTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfiguredTableResult
	err := ctx.Invoke("aws-native:cleanrooms:getConfiguredTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfiguredTableArgs struct {
	// Returns the unique identifier of the specified configured table.
	//
	// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
	ConfiguredTableIdentifier string `pulumi:"configuredTableIdentifier"`
}

type LookupConfiguredTableResult struct {
	// The analysis method for the configured table.
	//
	// `DIRECT_QUERY` allows SQL queries to be run directly on this table.
	//
	// `DIRECT_JOB` allows PySpark jobs to be run directly on this table.
	//
	// `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly on this table.
	AnalysisMethod *ConfiguredTableAnalysisMethod `pulumi:"analysisMethod"`
	// The analysis rule that was created for the configured table.
	AnalysisRules []ConfiguredTableAnalysisRule `pulumi:"analysisRules"`
	// Returns the Amazon Resource Name (ARN) of the specified configured table.
	//
	// Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111`
	Arn *string `pulumi:"arn"`
	// Returns the unique identifier of the specified configured table.
	//
	// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
	ConfiguredTableIdentifier *string `pulumi:"configuredTableIdentifier"`
	// A description for the configured table.
	Description *string `pulumi:"description"`
	// A name for the configured table.
	Name *string `pulumi:"name"`
	// The selected analysis methods for the configured table.
	SelectedAnalysisMethods []ConfiguredTableSelectedAnalysisMethod `pulumi:"selectedAnalysisMethods"`
	// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupConfiguredTableOutput(ctx *pulumi.Context, args LookupConfiguredTableOutputArgs, opts ...pulumi.InvokeOption) LookupConfiguredTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfiguredTableResultOutput, error) {
			args := v.(LookupConfiguredTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:cleanrooms:getConfiguredTable", args, LookupConfiguredTableResultOutput{}, options).(LookupConfiguredTableResultOutput), nil
		}).(LookupConfiguredTableResultOutput)
}

type LookupConfiguredTableOutputArgs struct {
	// Returns the unique identifier of the specified configured table.
	//
	// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
	ConfiguredTableIdentifier pulumi.StringInput `pulumi:"configuredTableIdentifier"`
}

func (LookupConfiguredTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfiguredTableArgs)(nil)).Elem()
}

type LookupConfiguredTableResultOutput struct{ *pulumi.OutputState }

func (LookupConfiguredTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfiguredTableResult)(nil)).Elem()
}

func (o LookupConfiguredTableResultOutput) ToLookupConfiguredTableResultOutput() LookupConfiguredTableResultOutput {
	return o
}

func (o LookupConfiguredTableResultOutput) ToLookupConfiguredTableResultOutputWithContext(ctx context.Context) LookupConfiguredTableResultOutput {
	return o
}

// The analysis method for the configured table.
//
// `DIRECT_QUERY` allows SQL queries to be run directly on this table.
//
// `DIRECT_JOB` allows PySpark jobs to be run directly on this table.
//
// `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly on this table.
func (o LookupConfiguredTableResultOutput) AnalysisMethod() ConfiguredTableAnalysisMethodPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) *ConfiguredTableAnalysisMethod { return v.AnalysisMethod }).(ConfiguredTableAnalysisMethodPtrOutput)
}

// The analysis rule that was created for the configured table.
func (o LookupConfiguredTableResultOutput) AnalysisRules() ConfiguredTableAnalysisRuleArrayOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) []ConfiguredTableAnalysisRule { return v.AnalysisRules }).(ConfiguredTableAnalysisRuleArrayOutput)
}

// Returns the Amazon Resource Name (ARN) of the specified configured table.
//
// Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111`
func (o LookupConfiguredTableResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Returns the unique identifier of the specified configured table.
//
// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
func (o LookupConfiguredTableResultOutput) ConfiguredTableIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) *string { return v.ConfiguredTableIdentifier }).(pulumi.StringPtrOutput)
}

// A description for the configured table.
func (o LookupConfiguredTableResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A name for the configured table.
func (o LookupConfiguredTableResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The selected analysis methods for the configured table.
func (o LookupConfiguredTableResultOutput) SelectedAnalysisMethods() ConfiguredTableSelectedAnalysisMethodArrayOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) []ConfiguredTableSelectedAnalysisMethod {
		return v.SelectedAnalysisMethods
	}).(ConfiguredTableSelectedAnalysisMethodArrayOutput)
}

// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
func (o LookupConfiguredTableResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupConfiguredTableResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfiguredTableResultOutput{})
}
