// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an association between an ID mapping workflow and a collaboration
func LookupIdMappingTable(ctx *pulumi.Context, args *LookupIdMappingTableArgs, opts ...pulumi.InvokeOption) (*LookupIdMappingTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdMappingTableResult
	err := ctx.Invoke("aws-native:cleanrooms:getIdMappingTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdMappingTableArgs struct {
	IdMappingTableIdentifier string `pulumi:"idMappingTableIdentifier"`
	// The unique identifier of the membership resource for the ID mapping table.
	MembershipIdentifier string `pulumi:"membershipIdentifier"`
}

type LookupIdMappingTableResult struct {
	// The Amazon Resource Name (ARN) of the ID mapping table.
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the collaboration that contains this ID mapping table.
	CollaborationArn        *string `pulumi:"collaborationArn"`
	CollaborationIdentifier *string `pulumi:"collaborationIdentifier"`
	// The description of the ID mapping table.
	Description              *string                                 `pulumi:"description"`
	IdMappingTableIdentifier *string                                 `pulumi:"idMappingTableIdentifier"`
	InputReferenceProperties *IdMappingTableInputReferenceProperties `pulumi:"inputReferenceProperties"`
	// The Amazon Resource Name (ARN) of the AWS KMS key.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The Amazon Resource Name (ARN) of the membership resource for the ID mapping table.
	MembershipArn *string `pulumi:"membershipArn"`
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupIdMappingTableOutput(ctx *pulumi.Context, args LookupIdMappingTableOutputArgs, opts ...pulumi.InvokeOption) LookupIdMappingTableResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdMappingTableResult, error) {
			args := v.(LookupIdMappingTableArgs)
			r, err := LookupIdMappingTable(ctx, &args, opts...)
			var s LookupIdMappingTableResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIdMappingTableResultOutput)
}

type LookupIdMappingTableOutputArgs struct {
	IdMappingTableIdentifier pulumi.StringInput `pulumi:"idMappingTableIdentifier"`
	// The unique identifier of the membership resource for the ID mapping table.
	MembershipIdentifier pulumi.StringInput `pulumi:"membershipIdentifier"`
}

func (LookupIdMappingTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdMappingTableArgs)(nil)).Elem()
}

type LookupIdMappingTableResultOutput struct{ *pulumi.OutputState }

func (LookupIdMappingTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdMappingTableResult)(nil)).Elem()
}

func (o LookupIdMappingTableResultOutput) ToLookupIdMappingTableResultOutput() LookupIdMappingTableResultOutput {
	return o
}

func (o LookupIdMappingTableResultOutput) ToLookupIdMappingTableResultOutputWithContext(ctx context.Context) LookupIdMappingTableResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the ID mapping table.
func (o LookupIdMappingTableResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the collaboration that contains this ID mapping table.
func (o LookupIdMappingTableResultOutput) CollaborationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.CollaborationArn }).(pulumi.StringPtrOutput)
}

func (o LookupIdMappingTableResultOutput) CollaborationIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.CollaborationIdentifier }).(pulumi.StringPtrOutput)
}

// The description of the ID mapping table.
func (o LookupIdMappingTableResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupIdMappingTableResultOutput) IdMappingTableIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.IdMappingTableIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupIdMappingTableResultOutput) InputReferenceProperties() IdMappingTableInputReferencePropertiesPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *IdMappingTableInputReferenceProperties {
		return v.InputReferenceProperties
	}).(IdMappingTableInputReferencePropertiesPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS KMS key.
func (o LookupIdMappingTableResultOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the membership resource for the ID mapping table.
func (o LookupIdMappingTableResultOutput) MembershipArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) *string { return v.MembershipArn }).(pulumi.StringPtrOutput)
}

// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
func (o LookupIdMappingTableResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupIdMappingTableResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdMappingTableResultOutput{})
}
