// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a table that can be queried within a collaboration
func LookupConfiguredTableAssociation(ctx *pulumi.Context, args *LookupConfiguredTableAssociationArgs, opts ...pulumi.InvokeOption) (*LookupConfiguredTableAssociationResult, error) {
	var rv LookupConfiguredTableAssociationResult
	err := ctx.Invoke("aws-native:cleanrooms:getConfiguredTableAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfiguredTableAssociationArgs struct {
	ConfiguredTableAssociationIdentifier string `pulumi:"configuredTableAssociationIdentifier"`
	MembershipIdentifier                 string `pulumi:"membershipIdentifier"`
}

type LookupConfiguredTableAssociationResult struct {
	Arn                                  *string `pulumi:"arn"`
	ConfiguredTableAssociationIdentifier *string `pulumi:"configuredTableAssociationIdentifier"`
	Description                          *string `pulumi:"description"`
	RoleArn                              *string `pulumi:"roleArn"`
	// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
	Tags []ConfiguredTableAssociationTag `pulumi:"tags"`
}

func LookupConfiguredTableAssociationOutput(ctx *pulumi.Context, args LookupConfiguredTableAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupConfiguredTableAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfiguredTableAssociationResult, error) {
			args := v.(LookupConfiguredTableAssociationArgs)
			r, err := LookupConfiguredTableAssociation(ctx, &args, opts...)
			var s LookupConfiguredTableAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfiguredTableAssociationResultOutput)
}

type LookupConfiguredTableAssociationOutputArgs struct {
	ConfiguredTableAssociationIdentifier pulumi.StringInput `pulumi:"configuredTableAssociationIdentifier"`
	MembershipIdentifier                 pulumi.StringInput `pulumi:"membershipIdentifier"`
}

func (LookupConfiguredTableAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfiguredTableAssociationArgs)(nil)).Elem()
}

type LookupConfiguredTableAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupConfiguredTableAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfiguredTableAssociationResult)(nil)).Elem()
}

func (o LookupConfiguredTableAssociationResultOutput) ToLookupConfiguredTableAssociationResultOutput() LookupConfiguredTableAssociationResultOutput {
	return o
}

func (o LookupConfiguredTableAssociationResultOutput) ToLookupConfiguredTableAssociationResultOutputWithContext(ctx context.Context) LookupConfiguredTableAssociationResultOutput {
	return o
}

func (o LookupConfiguredTableAssociationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableAssociationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupConfiguredTableAssociationResultOutput) ConfiguredTableAssociationIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableAssociationResult) *string { return v.ConfiguredTableAssociationIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupConfiguredTableAssociationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableAssociationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupConfiguredTableAssociationResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfiguredTableAssociationResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
func (o LookupConfiguredTableAssociationResultOutput) Tags() ConfiguredTableAssociationTagArrayOutput {
	return o.ApplyT(func(v LookupConfiguredTableAssociationResult) []ConfiguredTableAssociationTag { return v.Tags }).(ConfiguredTableAssociationTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfiguredTableAssociationResultOutput{})
}
