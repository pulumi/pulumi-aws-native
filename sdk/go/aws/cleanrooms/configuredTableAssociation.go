// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a table that can be queried within a collaboration
type ConfiguredTableAssociation struct {
	pulumi.CustomResourceState

	// Returns the Amazon Resource Name (ARN) of the specified configured table association.
	//
	// Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
	Arn pulumi.StringOutput `pulumi:"arn"`
	// An analysis rule for a configured table association. This analysis rule specifies how data from the table can be used within its associated collaboration. In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to as the *collaboration analysis rule* .
	ConfiguredTableAssociationAnalysisRules ConfiguredTableAssociationAnalysisRuleArrayOutput `pulumi:"configuredTableAssociationAnalysisRules"`
	// Returns the unique identifier of the specified configured table association.
	//
	// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
	ConfiguredTableAssociationIdentifier pulumi.StringOutput `pulumi:"configuredTableAssociationIdentifier"`
	// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
	ConfiguredTableIdentifier pulumi.StringOutput `pulumi:"configuredTableIdentifier"`
	// A description of the configured table association.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The unique ID for the membership this configured table association belongs to.
	MembershipIdentifier pulumi.StringOutput `pulumi:"membershipIdentifier"`
	// The name of the configured table association, in lowercase. The table is identified by this name when running protected queries against the underlying data.
	Name pulumi.StringOutput `pulumi:"name"`
	// The service will assume this role to access catalog metadata and query the table.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewConfiguredTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewConfiguredTableAssociation(ctx *pulumi.Context,
	name string, args *ConfiguredTableAssociationArgs, opts ...pulumi.ResourceOption) (*ConfiguredTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfiguredTableIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ConfiguredTableIdentifier'")
	}
	if args.MembershipIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'MembershipIdentifier'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"configuredTableIdentifier",
		"membershipIdentifier",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfiguredTableAssociation
	err := ctx.RegisterResource("aws-native:cleanrooms:ConfiguredTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfiguredTableAssociation gets an existing ConfiguredTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfiguredTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfiguredTableAssociationState, opts ...pulumi.ResourceOption) (*ConfiguredTableAssociation, error) {
	var resource ConfiguredTableAssociation
	err := ctx.ReadResource("aws-native:cleanrooms:ConfiguredTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfiguredTableAssociation resources.
type configuredTableAssociationState struct {
}

type ConfiguredTableAssociationState struct {
}

func (ConfiguredTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*configuredTableAssociationState)(nil)).Elem()
}

type configuredTableAssociationArgs struct {
	// An analysis rule for a configured table association. This analysis rule specifies how data from the table can be used within its associated collaboration. In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to as the *collaboration analysis rule* .
	ConfiguredTableAssociationAnalysisRules []ConfiguredTableAssociationAnalysisRule `pulumi:"configuredTableAssociationAnalysisRules"`
	// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
	ConfiguredTableIdentifier string `pulumi:"configuredTableIdentifier"`
	// A description of the configured table association.
	Description *string `pulumi:"description"`
	// The unique ID for the membership this configured table association belongs to.
	MembershipIdentifier string `pulumi:"membershipIdentifier"`
	// The name of the configured table association, in lowercase. The table is identified by this name when running protected queries against the underlying data.
	Name *string `pulumi:"name"`
	// The service will assume this role to access catalog metadata and query the table.
	RoleArn string `pulumi:"roleArn"`
	// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ConfiguredTableAssociation resource.
type ConfiguredTableAssociationArgs struct {
	// An analysis rule for a configured table association. This analysis rule specifies how data from the table can be used within its associated collaboration. In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to as the *collaboration analysis rule* .
	ConfiguredTableAssociationAnalysisRules ConfiguredTableAssociationAnalysisRuleArrayInput
	// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
	ConfiguredTableIdentifier pulumi.StringInput
	// A description of the configured table association.
	Description pulumi.StringPtrInput
	// The unique ID for the membership this configured table association belongs to.
	MembershipIdentifier pulumi.StringInput
	// The name of the configured table association, in lowercase. The table is identified by this name when running protected queries against the underlying data.
	Name pulumi.StringPtrInput
	// The service will assume this role to access catalog metadata and query the table.
	RoleArn pulumi.StringInput
	// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
	Tags aws.TagArrayInput
}

func (ConfiguredTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configuredTableAssociationArgs)(nil)).Elem()
}

type ConfiguredTableAssociationInput interface {
	pulumi.Input

	ToConfiguredTableAssociationOutput() ConfiguredTableAssociationOutput
	ToConfiguredTableAssociationOutputWithContext(ctx context.Context) ConfiguredTableAssociationOutput
}

func (*ConfiguredTableAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfiguredTableAssociation)(nil)).Elem()
}

func (i *ConfiguredTableAssociation) ToConfiguredTableAssociationOutput() ConfiguredTableAssociationOutput {
	return i.ToConfiguredTableAssociationOutputWithContext(context.Background())
}

func (i *ConfiguredTableAssociation) ToConfiguredTableAssociationOutputWithContext(ctx context.Context) ConfiguredTableAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfiguredTableAssociationOutput)
}

type ConfiguredTableAssociationOutput struct{ *pulumi.OutputState }

func (ConfiguredTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfiguredTableAssociation)(nil)).Elem()
}

func (o ConfiguredTableAssociationOutput) ToConfiguredTableAssociationOutput() ConfiguredTableAssociationOutput {
	return o
}

func (o ConfiguredTableAssociationOutput) ToConfiguredTableAssociationOutputWithContext(ctx context.Context) ConfiguredTableAssociationOutput {
	return o
}

// Returns the Amazon Resource Name (ARN) of the specified configured table association.
//
// Example: `arn:aws:cleanrooms:us-east-1:111122223333:configuredtable/a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
func (o ConfiguredTableAssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// An analysis rule for a configured table association. This analysis rule specifies how data from the table can be used within its associated collaboration. In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to as the *collaboration analysis rule* .
func (o ConfiguredTableAssociationOutput) ConfiguredTableAssociationAnalysisRules() ConfiguredTableAssociationAnalysisRuleArrayOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) ConfiguredTableAssociationAnalysisRuleArrayOutput {
		return v.ConfiguredTableAssociationAnalysisRules
	}).(ConfiguredTableAssociationAnalysisRuleArrayOutput)
}

// Returns the unique identifier of the specified configured table association.
//
// Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE33333`
func (o ConfiguredTableAssociationOutput) ConfiguredTableAssociationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringOutput { return v.ConfiguredTableAssociationIdentifier }).(pulumi.StringOutput)
}

// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
func (o ConfiguredTableAssociationOutput) ConfiguredTableIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringOutput { return v.ConfiguredTableIdentifier }).(pulumi.StringOutput)
}

// A description of the configured table association.
func (o ConfiguredTableAssociationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique ID for the membership this configured table association belongs to.
func (o ConfiguredTableAssociationOutput) MembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringOutput { return v.MembershipIdentifier }).(pulumi.StringOutput)
}

// The name of the configured table association, in lowercase. The table is identified by this name when running protected queries against the underlying data.
func (o ConfiguredTableAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The service will assume this role to access catalog metadata and query the table.
func (o ConfiguredTableAssociationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
func (o ConfiguredTableAssociationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ConfiguredTableAssociation) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfiguredTableAssociationInput)(nil)).Elem(), &ConfiguredTableAssociation{})
	pulumi.RegisterOutputType(ConfiguredTableAssociationOutput{})
}
