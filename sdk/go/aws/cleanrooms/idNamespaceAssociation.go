// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an association between an ID namespace and a collaboration
type IdNamespaceAssociation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the ID namespace association.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the collaboration that contains this ID namespace association.
	CollaborationArn pulumi.StringOutput `pulumi:"collaborationArn"`
	// The unique identifier of the collaboration that contains this ID namespace association.
	CollaborationIdentifier pulumi.StringOutput `pulumi:"collaborationIdentifier"`
	// The description of the ID namespace association.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The configuration settings for the ID mapping table.
	IdMappingConfig IdNamespaceAssociationIdMappingConfigPtrOutput `pulumi:"idMappingConfig"`
	// The unique identifier of the ID namespace association that you want to retrieve.
	IdNamespaceAssociationIdentifier pulumi.StringOutput `pulumi:"idNamespaceAssociationIdentifier"`
	// The input reference configuration for the ID namespace association.
	InputReferenceConfig     IdNamespaceAssociationInputReferenceConfigOutput     `pulumi:"inputReferenceConfig"`
	InputReferenceProperties IdNamespaceAssociationInputReferencePropertiesOutput `pulumi:"inputReferenceProperties"`
	// The Amazon Resource Name (ARN) of the membership resource for this ID namespace association.
	MembershipArn pulumi.StringOutput `pulumi:"membershipArn"`
	// The unique identifier of the membership that contains the ID namespace association.
	MembershipIdentifier pulumi.StringOutput `pulumi:"membershipIdentifier"`
	// The name of this ID namespace association.
	Name pulumi.StringOutput `pulumi:"name"`
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewIdNamespaceAssociation registers a new resource with the given unique name, arguments, and options.
func NewIdNamespaceAssociation(ctx *pulumi.Context,
	name string, args *IdNamespaceAssociationArgs, opts ...pulumi.ResourceOption) (*IdNamespaceAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputReferenceConfig == nil {
		return nil, errors.New("invalid value for required argument 'InputReferenceConfig'")
	}
	if args.MembershipIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'MembershipIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"inputReferenceConfig",
		"membershipIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdNamespaceAssociation
	err := ctx.RegisterResource("aws-native:cleanrooms:IdNamespaceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdNamespaceAssociation gets an existing IdNamespaceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdNamespaceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdNamespaceAssociationState, opts ...pulumi.ResourceOption) (*IdNamespaceAssociation, error) {
	var resource IdNamespaceAssociation
	err := ctx.ReadResource("aws-native:cleanrooms:IdNamespaceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdNamespaceAssociation resources.
type idNamespaceAssociationState struct {
}

type IdNamespaceAssociationState struct {
}

func (IdNamespaceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*idNamespaceAssociationState)(nil)).Elem()
}

type idNamespaceAssociationArgs struct {
	// The description of the ID namespace association.
	Description *string `pulumi:"description"`
	// The configuration settings for the ID mapping table.
	IdMappingConfig *IdNamespaceAssociationIdMappingConfig `pulumi:"idMappingConfig"`
	// The input reference configuration for the ID namespace association.
	InputReferenceConfig IdNamespaceAssociationInputReferenceConfig `pulumi:"inputReferenceConfig"`
	// The unique identifier of the membership that contains the ID namespace association.
	MembershipIdentifier string `pulumi:"membershipIdentifier"`
	// The name of this ID namespace association.
	Name *string `pulumi:"name"`
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a IdNamespaceAssociation resource.
type IdNamespaceAssociationArgs struct {
	// The description of the ID namespace association.
	Description pulumi.StringPtrInput
	// The configuration settings for the ID mapping table.
	IdMappingConfig IdNamespaceAssociationIdMappingConfigPtrInput
	// The input reference configuration for the ID namespace association.
	InputReferenceConfig IdNamespaceAssociationInputReferenceConfigInput
	// The unique identifier of the membership that contains the ID namespace association.
	MembershipIdentifier pulumi.StringInput
	// The name of this ID namespace association.
	Name pulumi.StringPtrInput
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags aws.TagArrayInput
}

func (IdNamespaceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*idNamespaceAssociationArgs)(nil)).Elem()
}

type IdNamespaceAssociationInput interface {
	pulumi.Input

	ToIdNamespaceAssociationOutput() IdNamespaceAssociationOutput
	ToIdNamespaceAssociationOutputWithContext(ctx context.Context) IdNamespaceAssociationOutput
}

func (*IdNamespaceAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceAssociation)(nil)).Elem()
}

func (i *IdNamespaceAssociation) ToIdNamespaceAssociationOutput() IdNamespaceAssociationOutput {
	return i.ToIdNamespaceAssociationOutputWithContext(context.Background())
}

func (i *IdNamespaceAssociation) ToIdNamespaceAssociationOutputWithContext(ctx context.Context) IdNamespaceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdNamespaceAssociationOutput)
}

type IdNamespaceAssociationOutput struct{ *pulumi.OutputState }

func (IdNamespaceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceAssociation)(nil)).Elem()
}

func (o IdNamespaceAssociationOutput) ToIdNamespaceAssociationOutput() IdNamespaceAssociationOutput {
	return o
}

func (o IdNamespaceAssociationOutput) ToIdNamespaceAssociationOutputWithContext(ctx context.Context) IdNamespaceAssociationOutput {
	return o
}

// The Amazon Resource Name (ARN) of the ID namespace association.
func (o IdNamespaceAssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the collaboration that contains this ID namespace association.
func (o IdNamespaceAssociationOutput) CollaborationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.CollaborationArn }).(pulumi.StringOutput)
}

// The unique identifier of the collaboration that contains this ID namespace association.
func (o IdNamespaceAssociationOutput) CollaborationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.CollaborationIdentifier }).(pulumi.StringOutput)
}

// The description of the ID namespace association.
func (o IdNamespaceAssociationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The configuration settings for the ID mapping table.
func (o IdNamespaceAssociationOutput) IdMappingConfig() IdNamespaceAssociationIdMappingConfigPtrOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) IdNamespaceAssociationIdMappingConfigPtrOutput {
		return v.IdMappingConfig
	}).(IdNamespaceAssociationIdMappingConfigPtrOutput)
}

// The unique identifier of the ID namespace association that you want to retrieve.
func (o IdNamespaceAssociationOutput) IdNamespaceAssociationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.IdNamespaceAssociationIdentifier }).(pulumi.StringOutput)
}

// The input reference configuration for the ID namespace association.
func (o IdNamespaceAssociationOutput) InputReferenceConfig() IdNamespaceAssociationInputReferenceConfigOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) IdNamespaceAssociationInputReferenceConfigOutput {
		return v.InputReferenceConfig
	}).(IdNamespaceAssociationInputReferenceConfigOutput)
}

func (o IdNamespaceAssociationOutput) InputReferenceProperties() IdNamespaceAssociationInputReferencePropertiesOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) IdNamespaceAssociationInputReferencePropertiesOutput {
		return v.InputReferenceProperties
	}).(IdNamespaceAssociationInputReferencePropertiesOutput)
}

// The Amazon Resource Name (ARN) of the membership resource for this ID namespace association.
func (o IdNamespaceAssociationOutput) MembershipArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.MembershipArn }).(pulumi.StringOutput)
}

// The unique identifier of the membership that contains the ID namespace association.
func (o IdNamespaceAssociationOutput) MembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.MembershipIdentifier }).(pulumi.StringOutput)
}

// The name of this ID namespace association.
func (o IdNamespaceAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
func (o IdNamespaceAssociationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *IdNamespaceAssociation) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceAssociationInput)(nil)).Elem(), &IdNamespaceAssociation{})
	pulumi.RegisterOutputType(IdNamespaceAssociationOutput{})
}
