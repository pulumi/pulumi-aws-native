// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cleanrooms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an association between an ID mapping workflow and a collaboration
type IdMappingTable struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the ID mapping table.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the collaboration that contains this ID mapping table.
	CollaborationArn        pulumi.StringOutput `pulumi:"collaborationArn"`
	CollaborationIdentifier pulumi.StringOutput `pulumi:"collaborationIdentifier"`
	// The description of the ID mapping table.
	Description              pulumi.StringPtrOutput `pulumi:"description"`
	IdMappingTableIdentifier pulumi.StringOutput    `pulumi:"idMappingTableIdentifier"`
	// The input reference configuration for the ID mapping table.
	InputReferenceConfig     IdMappingTableInputReferenceConfigOutput     `pulumi:"inputReferenceConfig"`
	InputReferenceProperties IdMappingTableInputReferencePropertiesOutput `pulumi:"inputReferenceProperties"`
	// The Amazon Resource Name (ARN) of the AWS KMS key.
	KmsKeyArn pulumi.StringPtrOutput `pulumi:"kmsKeyArn"`
	// The Amazon Resource Name (ARN) of the membership resource for the ID mapping table.
	MembershipArn pulumi.StringOutput `pulumi:"membershipArn"`
	// The unique identifier of the membership resource for the ID mapping table.
	MembershipIdentifier pulumi.StringOutput `pulumi:"membershipIdentifier"`
	// The name of the ID mapping table.
	Name pulumi.StringOutput `pulumi:"name"`
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewIdMappingTable registers a new resource with the given unique name, arguments, and options.
func NewIdMappingTable(ctx *pulumi.Context,
	name string, args *IdMappingTableArgs, opts ...pulumi.ResourceOption) (*IdMappingTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputReferenceConfig == nil {
		return nil, errors.New("invalid value for required argument 'InputReferenceConfig'")
	}
	if args.MembershipIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'MembershipIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"inputReferenceConfig",
		"membershipIdentifier",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdMappingTable
	err := ctx.RegisterResource("aws-native:cleanrooms:IdMappingTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdMappingTable gets an existing IdMappingTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdMappingTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdMappingTableState, opts ...pulumi.ResourceOption) (*IdMappingTable, error) {
	var resource IdMappingTable
	err := ctx.ReadResource("aws-native:cleanrooms:IdMappingTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdMappingTable resources.
type idMappingTableState struct {
}

type IdMappingTableState struct {
}

func (IdMappingTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*idMappingTableState)(nil)).Elem()
}

type idMappingTableArgs struct {
	// The description of the ID mapping table.
	Description *string `pulumi:"description"`
	// The input reference configuration for the ID mapping table.
	InputReferenceConfig IdMappingTableInputReferenceConfig `pulumi:"inputReferenceConfig"`
	// The Amazon Resource Name (ARN) of the AWS KMS key.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The unique identifier of the membership resource for the ID mapping table.
	MembershipIdentifier string `pulumi:"membershipIdentifier"`
	// The name of the ID mapping table.
	Name *string `pulumi:"name"`
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a IdMappingTable resource.
type IdMappingTableArgs struct {
	// The description of the ID mapping table.
	Description pulumi.StringPtrInput
	// The input reference configuration for the ID mapping table.
	InputReferenceConfig IdMappingTableInputReferenceConfigInput
	// The Amazon Resource Name (ARN) of the AWS KMS key.
	KmsKeyArn pulumi.StringPtrInput
	// The unique identifier of the membership resource for the ID mapping table.
	MembershipIdentifier pulumi.StringInput
	// The name of the ID mapping table.
	Name pulumi.StringPtrInput
	// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
	Tags aws.TagArrayInput
}

func (IdMappingTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*idMappingTableArgs)(nil)).Elem()
}

type IdMappingTableInput interface {
	pulumi.Input

	ToIdMappingTableOutput() IdMappingTableOutput
	ToIdMappingTableOutputWithContext(ctx context.Context) IdMappingTableOutput
}

func (*IdMappingTable) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingTable)(nil)).Elem()
}

func (i *IdMappingTable) ToIdMappingTableOutput() IdMappingTableOutput {
	return i.ToIdMappingTableOutputWithContext(context.Background())
}

func (i *IdMappingTable) ToIdMappingTableOutputWithContext(ctx context.Context) IdMappingTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdMappingTableOutput)
}

type IdMappingTableOutput struct{ *pulumi.OutputState }

func (IdMappingTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingTable)(nil)).Elem()
}

func (o IdMappingTableOutput) ToIdMappingTableOutput() IdMappingTableOutput {
	return o
}

func (o IdMappingTableOutput) ToIdMappingTableOutputWithContext(ctx context.Context) IdMappingTableOutput {
	return o
}

// The Amazon Resource Name (ARN) of the ID mapping table.
func (o IdMappingTableOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the collaboration that contains this ID mapping table.
func (o IdMappingTableOutput) CollaborationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.CollaborationArn }).(pulumi.StringOutput)
}

func (o IdMappingTableOutput) CollaborationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.CollaborationIdentifier }).(pulumi.StringOutput)
}

// The description of the ID mapping table.
func (o IdMappingTableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IdMappingTableOutput) IdMappingTableIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.IdMappingTableIdentifier }).(pulumi.StringOutput)
}

// The input reference configuration for the ID mapping table.
func (o IdMappingTableOutput) InputReferenceConfig() IdMappingTableInputReferenceConfigOutput {
	return o.ApplyT(func(v *IdMappingTable) IdMappingTableInputReferenceConfigOutput { return v.InputReferenceConfig }).(IdMappingTableInputReferenceConfigOutput)
}

func (o IdMappingTableOutput) InputReferenceProperties() IdMappingTableInputReferencePropertiesOutput {
	return o.ApplyT(func(v *IdMappingTable) IdMappingTableInputReferencePropertiesOutput {
		return v.InputReferenceProperties
	}).(IdMappingTableInputReferencePropertiesOutput)
}

// The Amazon Resource Name (ARN) of the AWS KMS key.
func (o IdMappingTableOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the membership resource for the ID mapping table.
func (o IdMappingTableOutput) MembershipArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.MembershipArn }).(pulumi.StringOutput)
}

// The unique identifier of the membership resource for the ID mapping table.
func (o IdMappingTableOutput) MembershipIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.MembershipIdentifier }).(pulumi.StringOutput)
}

// The name of the ID mapping table.
func (o IdMappingTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.
func (o IdMappingTableOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *IdMappingTable) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingTableInput)(nil)).Elem(), &IdMappingTable{})
	pulumi.RegisterOutputType(IdMappingTableOutput{})
}
