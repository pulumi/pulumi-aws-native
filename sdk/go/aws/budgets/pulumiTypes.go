// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package budgets

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BudgetCostTypes struct {
	IncludeCredit            *bool `pulumi:"includeCredit"`
	IncludeDiscount          *bool `pulumi:"includeDiscount"`
	IncludeOtherSubscription *bool `pulumi:"includeOtherSubscription"`
	IncludeRecurring         *bool `pulumi:"includeRecurring"`
	IncludeRefund            *bool `pulumi:"includeRefund"`
	IncludeSubscription      *bool `pulumi:"includeSubscription"`
	IncludeSupport           *bool `pulumi:"includeSupport"`
	IncludeTax               *bool `pulumi:"includeTax"`
	IncludeUpfront           *bool `pulumi:"includeUpfront"`
	UseAmortized             *bool `pulumi:"useAmortized"`
	UseBlended               *bool `pulumi:"useBlended"`
}

// BudgetCostTypesInput is an input type that accepts BudgetCostTypesArgs and BudgetCostTypesOutput values.
// You can construct a concrete instance of `BudgetCostTypesInput` via:
//
//          BudgetCostTypesArgs{...}
type BudgetCostTypesInput interface {
	pulumi.Input

	ToBudgetCostTypesOutput() BudgetCostTypesOutput
	ToBudgetCostTypesOutputWithContext(context.Context) BudgetCostTypesOutput
}

type BudgetCostTypesArgs struct {
	IncludeCredit            pulumi.BoolPtrInput `pulumi:"includeCredit"`
	IncludeDiscount          pulumi.BoolPtrInput `pulumi:"includeDiscount"`
	IncludeOtherSubscription pulumi.BoolPtrInput `pulumi:"includeOtherSubscription"`
	IncludeRecurring         pulumi.BoolPtrInput `pulumi:"includeRecurring"`
	IncludeRefund            pulumi.BoolPtrInput `pulumi:"includeRefund"`
	IncludeSubscription      pulumi.BoolPtrInput `pulumi:"includeSubscription"`
	IncludeSupport           pulumi.BoolPtrInput `pulumi:"includeSupport"`
	IncludeTax               pulumi.BoolPtrInput `pulumi:"includeTax"`
	IncludeUpfront           pulumi.BoolPtrInput `pulumi:"includeUpfront"`
	UseAmortized             pulumi.BoolPtrInput `pulumi:"useAmortized"`
	UseBlended               pulumi.BoolPtrInput `pulumi:"useBlended"`
}

func (BudgetCostTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetCostTypes)(nil)).Elem()
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesOutput() BudgetCostTypesOutput {
	return i.ToBudgetCostTypesOutputWithContext(context.Background())
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesOutputWithContext(ctx context.Context) BudgetCostTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostTypesOutput)
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return i.ToBudgetCostTypesPtrOutputWithContext(context.Background())
}

func (i BudgetCostTypesArgs) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostTypesOutput).ToBudgetCostTypesPtrOutputWithContext(ctx)
}

// BudgetCostTypesPtrInput is an input type that accepts BudgetCostTypesArgs, BudgetCostTypesPtr and BudgetCostTypesPtrOutput values.
// You can construct a concrete instance of `BudgetCostTypesPtrInput` via:
//
//          BudgetCostTypesArgs{...}
//
//  or:
//
//          nil
type BudgetCostTypesPtrInput interface {
	pulumi.Input

	ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput
	ToBudgetCostTypesPtrOutputWithContext(context.Context) BudgetCostTypesPtrOutput
}

type budgetCostTypesPtrType BudgetCostTypesArgs

func BudgetCostTypesPtr(v *BudgetCostTypesArgs) BudgetCostTypesPtrInput {
	return (*budgetCostTypesPtrType)(v)
}

func (*budgetCostTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetCostTypes)(nil)).Elem()
}

func (i *budgetCostTypesPtrType) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return i.ToBudgetCostTypesPtrOutputWithContext(context.Background())
}

func (i *budgetCostTypesPtrType) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetCostTypesPtrOutput)
}

type BudgetCostTypesOutput struct{ *pulumi.OutputState }

func (BudgetCostTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetCostTypes)(nil)).Elem()
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesOutput() BudgetCostTypesOutput {
	return o
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesOutputWithContext(ctx context.Context) BudgetCostTypesOutput {
	return o
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return o.ToBudgetCostTypesPtrOutputWithContext(context.Background())
}

func (o BudgetCostTypesOutput) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetCostTypes) *BudgetCostTypes {
		return &v
	}).(BudgetCostTypesPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeCredit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeCredit }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeDiscount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeDiscount }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeOtherSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeOtherSubscription }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeRecurring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeRecurring }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeRefund() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeRefund }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeSubscription }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeSupport }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeTax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeTax }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) IncludeUpfront() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.IncludeUpfront }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) UseAmortized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.UseAmortized }).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesOutput) UseBlended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetCostTypes) *bool { return v.UseBlended }).(pulumi.BoolPtrOutput)
}

type BudgetCostTypesPtrOutput struct{ *pulumi.OutputState }

func (BudgetCostTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetCostTypes)(nil)).Elem()
}

func (o BudgetCostTypesPtrOutput) ToBudgetCostTypesPtrOutput() BudgetCostTypesPtrOutput {
	return o
}

func (o BudgetCostTypesPtrOutput) ToBudgetCostTypesPtrOutputWithContext(ctx context.Context) BudgetCostTypesPtrOutput {
	return o
}

func (o BudgetCostTypesPtrOutput) Elem() BudgetCostTypesOutput {
	return o.ApplyT(func(v *BudgetCostTypes) BudgetCostTypes {
		if v != nil {
			return *v
		}
		var ret BudgetCostTypes
		return ret
	}).(BudgetCostTypesOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeCredit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCredit
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeDiscount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeDiscount
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeOtherSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeOtherSubscription
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeRecurring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeRecurring
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeRefund() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeRefund
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSubscription
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSupport
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeTax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTax
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) IncludeUpfront() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeUpfront
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) UseAmortized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.UseAmortized
	}).(pulumi.BoolPtrOutput)
}

func (o BudgetCostTypesPtrOutput) UseBlended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BudgetCostTypes) *bool {
		if v == nil {
			return nil
		}
		return v.UseBlended
	}).(pulumi.BoolPtrOutput)
}

type BudgetData struct {
	BudgetLimit         *BudgetSpend      `pulumi:"budgetLimit"`
	BudgetName          *string           `pulumi:"budgetName"`
	BudgetType          string            `pulumi:"budgetType"`
	CostFilters         interface{}       `pulumi:"costFilters"`
	CostTypes           *BudgetCostTypes  `pulumi:"costTypes"`
	PlannedBudgetLimits interface{}       `pulumi:"plannedBudgetLimits"`
	TimePeriod          *BudgetTimePeriod `pulumi:"timePeriod"`
	TimeUnit            string            `pulumi:"timeUnit"`
}

// BudgetDataInput is an input type that accepts BudgetDataArgs and BudgetDataOutput values.
// You can construct a concrete instance of `BudgetDataInput` via:
//
//          BudgetDataArgs{...}
type BudgetDataInput interface {
	pulumi.Input

	ToBudgetDataOutput() BudgetDataOutput
	ToBudgetDataOutputWithContext(context.Context) BudgetDataOutput
}

type BudgetDataArgs struct {
	BudgetLimit         BudgetSpendPtrInput      `pulumi:"budgetLimit"`
	BudgetName          pulumi.StringPtrInput    `pulumi:"budgetName"`
	BudgetType          pulumi.StringInput       `pulumi:"budgetType"`
	CostFilters         pulumi.Input             `pulumi:"costFilters"`
	CostTypes           BudgetCostTypesPtrInput  `pulumi:"costTypes"`
	PlannedBudgetLimits pulumi.Input             `pulumi:"plannedBudgetLimits"`
	TimePeriod          BudgetTimePeriodPtrInput `pulumi:"timePeriod"`
	TimeUnit            pulumi.StringInput       `pulumi:"timeUnit"`
}

func (BudgetDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetData)(nil)).Elem()
}

func (i BudgetDataArgs) ToBudgetDataOutput() BudgetDataOutput {
	return i.ToBudgetDataOutputWithContext(context.Background())
}

func (i BudgetDataArgs) ToBudgetDataOutputWithContext(ctx context.Context) BudgetDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetDataOutput)
}

func (i BudgetDataArgs) ToBudgetDataPtrOutput() BudgetDataPtrOutput {
	return i.ToBudgetDataPtrOutputWithContext(context.Background())
}

func (i BudgetDataArgs) ToBudgetDataPtrOutputWithContext(ctx context.Context) BudgetDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetDataOutput).ToBudgetDataPtrOutputWithContext(ctx)
}

// BudgetDataPtrInput is an input type that accepts BudgetDataArgs, BudgetDataPtr and BudgetDataPtrOutput values.
// You can construct a concrete instance of `BudgetDataPtrInput` via:
//
//          BudgetDataArgs{...}
//
//  or:
//
//          nil
type BudgetDataPtrInput interface {
	pulumi.Input

	ToBudgetDataPtrOutput() BudgetDataPtrOutput
	ToBudgetDataPtrOutputWithContext(context.Context) BudgetDataPtrOutput
}

type budgetDataPtrType BudgetDataArgs

func BudgetDataPtr(v *BudgetDataArgs) BudgetDataPtrInput {
	return (*budgetDataPtrType)(v)
}

func (*budgetDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetData)(nil)).Elem()
}

func (i *budgetDataPtrType) ToBudgetDataPtrOutput() BudgetDataPtrOutput {
	return i.ToBudgetDataPtrOutputWithContext(context.Background())
}

func (i *budgetDataPtrType) ToBudgetDataPtrOutputWithContext(ctx context.Context) BudgetDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetDataPtrOutput)
}

type BudgetDataOutput struct{ *pulumi.OutputState }

func (BudgetDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetData)(nil)).Elem()
}

func (o BudgetDataOutput) ToBudgetDataOutput() BudgetDataOutput {
	return o
}

func (o BudgetDataOutput) ToBudgetDataOutputWithContext(ctx context.Context) BudgetDataOutput {
	return o
}

func (o BudgetDataOutput) ToBudgetDataPtrOutput() BudgetDataPtrOutput {
	return o.ToBudgetDataPtrOutputWithContext(context.Background())
}

func (o BudgetDataOutput) ToBudgetDataPtrOutputWithContext(ctx context.Context) BudgetDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetData) *BudgetData {
		return &v
	}).(BudgetDataPtrOutput)
}

func (o BudgetDataOutput) BudgetLimit() BudgetSpendPtrOutput {
	return o.ApplyT(func(v BudgetData) *BudgetSpend { return v.BudgetLimit }).(BudgetSpendPtrOutput)
}

func (o BudgetDataOutput) BudgetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetData) *string { return v.BudgetName }).(pulumi.StringPtrOutput)
}

func (o BudgetDataOutput) BudgetType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetData) string { return v.BudgetType }).(pulumi.StringOutput)
}

func (o BudgetDataOutput) CostFilters() pulumi.AnyOutput {
	return o.ApplyT(func(v BudgetData) interface{} { return v.CostFilters }).(pulumi.AnyOutput)
}

func (o BudgetDataOutput) CostTypes() BudgetCostTypesPtrOutput {
	return o.ApplyT(func(v BudgetData) *BudgetCostTypes { return v.CostTypes }).(BudgetCostTypesPtrOutput)
}

func (o BudgetDataOutput) PlannedBudgetLimits() pulumi.AnyOutput {
	return o.ApplyT(func(v BudgetData) interface{} { return v.PlannedBudgetLimits }).(pulumi.AnyOutput)
}

func (o BudgetDataOutput) TimePeriod() BudgetTimePeriodPtrOutput {
	return o.ApplyT(func(v BudgetData) *BudgetTimePeriod { return v.TimePeriod }).(BudgetTimePeriodPtrOutput)
}

func (o BudgetDataOutput) TimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetData) string { return v.TimeUnit }).(pulumi.StringOutput)
}

type BudgetDataPtrOutput struct{ *pulumi.OutputState }

func (BudgetDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetData)(nil)).Elem()
}

func (o BudgetDataPtrOutput) ToBudgetDataPtrOutput() BudgetDataPtrOutput {
	return o
}

func (o BudgetDataPtrOutput) ToBudgetDataPtrOutputWithContext(ctx context.Context) BudgetDataPtrOutput {
	return o
}

func (o BudgetDataPtrOutput) Elem() BudgetDataOutput {
	return o.ApplyT(func(v *BudgetData) BudgetData {
		if v != nil {
			return *v
		}
		var ret BudgetData
		return ret
	}).(BudgetDataOutput)
}

func (o BudgetDataPtrOutput) BudgetLimit() BudgetSpendPtrOutput {
	return o.ApplyT(func(v *BudgetData) *BudgetSpend {
		if v == nil {
			return nil
		}
		return v.BudgetLimit
	}).(BudgetSpendPtrOutput)
}

func (o BudgetDataPtrOutput) BudgetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetData) *string {
		if v == nil {
			return nil
		}
		return v.BudgetName
	}).(pulumi.StringPtrOutput)
}

func (o BudgetDataPtrOutput) BudgetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetData) *string {
		if v == nil {
			return nil
		}
		return &v.BudgetType
	}).(pulumi.StringPtrOutput)
}

func (o BudgetDataPtrOutput) CostFilters() pulumi.AnyOutput {
	return o.ApplyT(func(v *BudgetData) interface{} {
		if v == nil {
			return nil
		}
		return v.CostFilters
	}).(pulumi.AnyOutput)
}

func (o BudgetDataPtrOutput) CostTypes() BudgetCostTypesPtrOutput {
	return o.ApplyT(func(v *BudgetData) *BudgetCostTypes {
		if v == nil {
			return nil
		}
		return v.CostTypes
	}).(BudgetCostTypesPtrOutput)
}

func (o BudgetDataPtrOutput) PlannedBudgetLimits() pulumi.AnyOutput {
	return o.ApplyT(func(v *BudgetData) interface{} {
		if v == nil {
			return nil
		}
		return v.PlannedBudgetLimits
	}).(pulumi.AnyOutput)
}

func (o BudgetDataPtrOutput) TimePeriod() BudgetTimePeriodPtrOutput {
	return o.ApplyT(func(v *BudgetData) *BudgetTimePeriod {
		if v == nil {
			return nil
		}
		return v.TimePeriod
	}).(BudgetTimePeriodPtrOutput)
}

func (o BudgetDataPtrOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetData) *string {
		if v == nil {
			return nil
		}
		return &v.TimeUnit
	}).(pulumi.StringPtrOutput)
}

type BudgetNotification struct {
	ComparisonOperator string  `pulumi:"comparisonOperator"`
	NotificationType   string  `pulumi:"notificationType"`
	Threshold          float64 `pulumi:"threshold"`
	ThresholdType      *string `pulumi:"thresholdType"`
}

// BudgetNotificationInput is an input type that accepts BudgetNotificationArgs and BudgetNotificationOutput values.
// You can construct a concrete instance of `BudgetNotificationInput` via:
//
//          BudgetNotificationArgs{...}
type BudgetNotificationInput interface {
	pulumi.Input

	ToBudgetNotificationOutput() BudgetNotificationOutput
	ToBudgetNotificationOutputWithContext(context.Context) BudgetNotificationOutput
}

type BudgetNotificationArgs struct {
	ComparisonOperator pulumi.StringInput    `pulumi:"comparisonOperator"`
	NotificationType   pulumi.StringInput    `pulumi:"notificationType"`
	Threshold          pulumi.Float64Input   `pulumi:"threshold"`
	ThresholdType      pulumi.StringPtrInput `pulumi:"thresholdType"`
}

func (BudgetNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetNotification)(nil)).Elem()
}

func (i BudgetNotificationArgs) ToBudgetNotificationOutput() BudgetNotificationOutput {
	return i.ToBudgetNotificationOutputWithContext(context.Background())
}

func (i BudgetNotificationArgs) ToBudgetNotificationOutputWithContext(ctx context.Context) BudgetNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetNotificationOutput)
}

type BudgetNotificationOutput struct{ *pulumi.OutputState }

func (BudgetNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetNotification)(nil)).Elem()
}

func (o BudgetNotificationOutput) ToBudgetNotificationOutput() BudgetNotificationOutput {
	return o
}

func (o BudgetNotificationOutput) ToBudgetNotificationOutputWithContext(ctx context.Context) BudgetNotificationOutput {
	return o
}

func (o BudgetNotificationOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetNotification) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

func (o BudgetNotificationOutput) NotificationType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetNotification) string { return v.NotificationType }).(pulumi.StringOutput)
}

func (o BudgetNotificationOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v BudgetNotification) float64 { return v.Threshold }).(pulumi.Float64Output)
}

func (o BudgetNotificationOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetNotification) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type BudgetNotificationWithSubscribers struct {
	Notification BudgetNotification `pulumi:"notification"`
	Subscribers  []BudgetSubscriber `pulumi:"subscribers"`
}

// BudgetNotificationWithSubscribersInput is an input type that accepts BudgetNotificationWithSubscribersArgs and BudgetNotificationWithSubscribersOutput values.
// You can construct a concrete instance of `BudgetNotificationWithSubscribersInput` via:
//
//          BudgetNotificationWithSubscribersArgs{...}
type BudgetNotificationWithSubscribersInput interface {
	pulumi.Input

	ToBudgetNotificationWithSubscribersOutput() BudgetNotificationWithSubscribersOutput
	ToBudgetNotificationWithSubscribersOutputWithContext(context.Context) BudgetNotificationWithSubscribersOutput
}

type BudgetNotificationWithSubscribersArgs struct {
	Notification BudgetNotificationInput    `pulumi:"notification"`
	Subscribers  BudgetSubscriberArrayInput `pulumi:"subscribers"`
}

func (BudgetNotificationWithSubscribersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetNotificationWithSubscribers)(nil)).Elem()
}

func (i BudgetNotificationWithSubscribersArgs) ToBudgetNotificationWithSubscribersOutput() BudgetNotificationWithSubscribersOutput {
	return i.ToBudgetNotificationWithSubscribersOutputWithContext(context.Background())
}

func (i BudgetNotificationWithSubscribersArgs) ToBudgetNotificationWithSubscribersOutputWithContext(ctx context.Context) BudgetNotificationWithSubscribersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetNotificationWithSubscribersOutput)
}

// BudgetNotificationWithSubscribersArrayInput is an input type that accepts BudgetNotificationWithSubscribersArray and BudgetNotificationWithSubscribersArrayOutput values.
// You can construct a concrete instance of `BudgetNotificationWithSubscribersArrayInput` via:
//
//          BudgetNotificationWithSubscribersArray{ BudgetNotificationWithSubscribersArgs{...} }
type BudgetNotificationWithSubscribersArrayInput interface {
	pulumi.Input

	ToBudgetNotificationWithSubscribersArrayOutput() BudgetNotificationWithSubscribersArrayOutput
	ToBudgetNotificationWithSubscribersArrayOutputWithContext(context.Context) BudgetNotificationWithSubscribersArrayOutput
}

type BudgetNotificationWithSubscribersArray []BudgetNotificationWithSubscribersInput

func (BudgetNotificationWithSubscribersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetNotificationWithSubscribers)(nil)).Elem()
}

func (i BudgetNotificationWithSubscribersArray) ToBudgetNotificationWithSubscribersArrayOutput() BudgetNotificationWithSubscribersArrayOutput {
	return i.ToBudgetNotificationWithSubscribersArrayOutputWithContext(context.Background())
}

func (i BudgetNotificationWithSubscribersArray) ToBudgetNotificationWithSubscribersArrayOutputWithContext(ctx context.Context) BudgetNotificationWithSubscribersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetNotificationWithSubscribersArrayOutput)
}

type BudgetNotificationWithSubscribersOutput struct{ *pulumi.OutputState }

func (BudgetNotificationWithSubscribersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetNotificationWithSubscribers)(nil)).Elem()
}

func (o BudgetNotificationWithSubscribersOutput) ToBudgetNotificationWithSubscribersOutput() BudgetNotificationWithSubscribersOutput {
	return o
}

func (o BudgetNotificationWithSubscribersOutput) ToBudgetNotificationWithSubscribersOutputWithContext(ctx context.Context) BudgetNotificationWithSubscribersOutput {
	return o
}

func (o BudgetNotificationWithSubscribersOutput) Notification() BudgetNotificationOutput {
	return o.ApplyT(func(v BudgetNotificationWithSubscribers) BudgetNotification { return v.Notification }).(BudgetNotificationOutput)
}

func (o BudgetNotificationWithSubscribersOutput) Subscribers() BudgetSubscriberArrayOutput {
	return o.ApplyT(func(v BudgetNotificationWithSubscribers) []BudgetSubscriber { return v.Subscribers }).(BudgetSubscriberArrayOutput)
}

type BudgetNotificationWithSubscribersArrayOutput struct{ *pulumi.OutputState }

func (BudgetNotificationWithSubscribersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetNotificationWithSubscribers)(nil)).Elem()
}

func (o BudgetNotificationWithSubscribersArrayOutput) ToBudgetNotificationWithSubscribersArrayOutput() BudgetNotificationWithSubscribersArrayOutput {
	return o
}

func (o BudgetNotificationWithSubscribersArrayOutput) ToBudgetNotificationWithSubscribersArrayOutputWithContext(ctx context.Context) BudgetNotificationWithSubscribersArrayOutput {
	return o
}

func (o BudgetNotificationWithSubscribersArrayOutput) Index(i pulumi.IntInput) BudgetNotificationWithSubscribersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetNotificationWithSubscribers {
		return vs[0].([]BudgetNotificationWithSubscribers)[vs[1].(int)]
	}).(BudgetNotificationWithSubscribersOutput)
}

type BudgetSpend struct {
	Amount float64 `pulumi:"amount"`
	Unit   string  `pulumi:"unit"`
}

// BudgetSpendInput is an input type that accepts BudgetSpendArgs and BudgetSpendOutput values.
// You can construct a concrete instance of `BudgetSpendInput` via:
//
//          BudgetSpendArgs{...}
type BudgetSpendInput interface {
	pulumi.Input

	ToBudgetSpendOutput() BudgetSpendOutput
	ToBudgetSpendOutputWithContext(context.Context) BudgetSpendOutput
}

type BudgetSpendArgs struct {
	Amount pulumi.Float64Input `pulumi:"amount"`
	Unit   pulumi.StringInput  `pulumi:"unit"`
}

func (BudgetSpendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSpend)(nil)).Elem()
}

func (i BudgetSpendArgs) ToBudgetSpendOutput() BudgetSpendOutput {
	return i.ToBudgetSpendOutputWithContext(context.Background())
}

func (i BudgetSpendArgs) ToBudgetSpendOutputWithContext(ctx context.Context) BudgetSpendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSpendOutput)
}

func (i BudgetSpendArgs) ToBudgetSpendPtrOutput() BudgetSpendPtrOutput {
	return i.ToBudgetSpendPtrOutputWithContext(context.Background())
}

func (i BudgetSpendArgs) ToBudgetSpendPtrOutputWithContext(ctx context.Context) BudgetSpendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSpendOutput).ToBudgetSpendPtrOutputWithContext(ctx)
}

// BudgetSpendPtrInput is an input type that accepts BudgetSpendArgs, BudgetSpendPtr and BudgetSpendPtrOutput values.
// You can construct a concrete instance of `BudgetSpendPtrInput` via:
//
//          BudgetSpendArgs{...}
//
//  or:
//
//          nil
type BudgetSpendPtrInput interface {
	pulumi.Input

	ToBudgetSpendPtrOutput() BudgetSpendPtrOutput
	ToBudgetSpendPtrOutputWithContext(context.Context) BudgetSpendPtrOutput
}

type budgetSpendPtrType BudgetSpendArgs

func BudgetSpendPtr(v *BudgetSpendArgs) BudgetSpendPtrInput {
	return (*budgetSpendPtrType)(v)
}

func (*budgetSpendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetSpend)(nil)).Elem()
}

func (i *budgetSpendPtrType) ToBudgetSpendPtrOutput() BudgetSpendPtrOutput {
	return i.ToBudgetSpendPtrOutputWithContext(context.Background())
}

func (i *budgetSpendPtrType) ToBudgetSpendPtrOutputWithContext(ctx context.Context) BudgetSpendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSpendPtrOutput)
}

type BudgetSpendOutput struct{ *pulumi.OutputState }

func (BudgetSpendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSpend)(nil)).Elem()
}

func (o BudgetSpendOutput) ToBudgetSpendOutput() BudgetSpendOutput {
	return o
}

func (o BudgetSpendOutput) ToBudgetSpendOutputWithContext(ctx context.Context) BudgetSpendOutput {
	return o
}

func (o BudgetSpendOutput) ToBudgetSpendPtrOutput() BudgetSpendPtrOutput {
	return o.ToBudgetSpendPtrOutputWithContext(context.Background())
}

func (o BudgetSpendOutput) ToBudgetSpendPtrOutputWithContext(ctx context.Context) BudgetSpendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetSpend) *BudgetSpend {
		return &v
	}).(BudgetSpendPtrOutput)
}

func (o BudgetSpendOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v BudgetSpend) float64 { return v.Amount }).(pulumi.Float64Output)
}

func (o BudgetSpendOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSpend) string { return v.Unit }).(pulumi.StringOutput)
}

type BudgetSpendPtrOutput struct{ *pulumi.OutputState }

func (BudgetSpendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetSpend)(nil)).Elem()
}

func (o BudgetSpendPtrOutput) ToBudgetSpendPtrOutput() BudgetSpendPtrOutput {
	return o
}

func (o BudgetSpendPtrOutput) ToBudgetSpendPtrOutputWithContext(ctx context.Context) BudgetSpendPtrOutput {
	return o
}

func (o BudgetSpendPtrOutput) Elem() BudgetSpendOutput {
	return o.ApplyT(func(v *BudgetSpend) BudgetSpend {
		if v != nil {
			return *v
		}
		var ret BudgetSpend
		return ret
	}).(BudgetSpendOutput)
}

func (o BudgetSpendPtrOutput) Amount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BudgetSpend) *float64 {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.Float64PtrOutput)
}

func (o BudgetSpendPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetSpend) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

type BudgetSubscriber struct {
	Address          string `pulumi:"address"`
	SubscriptionType string `pulumi:"subscriptionType"`
}

// BudgetSubscriberInput is an input type that accepts BudgetSubscriberArgs and BudgetSubscriberOutput values.
// You can construct a concrete instance of `BudgetSubscriberInput` via:
//
//          BudgetSubscriberArgs{...}
type BudgetSubscriberInput interface {
	pulumi.Input

	ToBudgetSubscriberOutput() BudgetSubscriberOutput
	ToBudgetSubscriberOutputWithContext(context.Context) BudgetSubscriberOutput
}

type BudgetSubscriberArgs struct {
	Address          pulumi.StringInput `pulumi:"address"`
	SubscriptionType pulumi.StringInput `pulumi:"subscriptionType"`
}

func (BudgetSubscriberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriber)(nil)).Elem()
}

func (i BudgetSubscriberArgs) ToBudgetSubscriberOutput() BudgetSubscriberOutput {
	return i.ToBudgetSubscriberOutputWithContext(context.Background())
}

func (i BudgetSubscriberArgs) ToBudgetSubscriberOutputWithContext(ctx context.Context) BudgetSubscriberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriberOutput)
}

// BudgetSubscriberArrayInput is an input type that accepts BudgetSubscriberArray and BudgetSubscriberArrayOutput values.
// You can construct a concrete instance of `BudgetSubscriberArrayInput` via:
//
//          BudgetSubscriberArray{ BudgetSubscriberArgs{...} }
type BudgetSubscriberArrayInput interface {
	pulumi.Input

	ToBudgetSubscriberArrayOutput() BudgetSubscriberArrayOutput
	ToBudgetSubscriberArrayOutputWithContext(context.Context) BudgetSubscriberArrayOutput
}

type BudgetSubscriberArray []BudgetSubscriberInput

func (BudgetSubscriberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriber)(nil)).Elem()
}

func (i BudgetSubscriberArray) ToBudgetSubscriberArrayOutput() BudgetSubscriberArrayOutput {
	return i.ToBudgetSubscriberArrayOutputWithContext(context.Background())
}

func (i BudgetSubscriberArray) ToBudgetSubscriberArrayOutputWithContext(ctx context.Context) BudgetSubscriberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriberArrayOutput)
}

type BudgetSubscriberOutput struct{ *pulumi.OutputState }

func (BudgetSubscriberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriber)(nil)).Elem()
}

func (o BudgetSubscriberOutput) ToBudgetSubscriberOutput() BudgetSubscriberOutput {
	return o
}

func (o BudgetSubscriberOutput) ToBudgetSubscriberOutputWithContext(ctx context.Context) BudgetSubscriberOutput {
	return o
}

func (o BudgetSubscriberOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSubscriber) string { return v.Address }).(pulumi.StringOutput)
}

func (o BudgetSubscriberOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSubscriber) string { return v.SubscriptionType }).(pulumi.StringOutput)
}

type BudgetSubscriberArrayOutput struct{ *pulumi.OutputState }

func (BudgetSubscriberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriber)(nil)).Elem()
}

func (o BudgetSubscriberArrayOutput) ToBudgetSubscriberArrayOutput() BudgetSubscriberArrayOutput {
	return o
}

func (o BudgetSubscriberArrayOutput) ToBudgetSubscriberArrayOutputWithContext(ctx context.Context) BudgetSubscriberArrayOutput {
	return o
}

func (o BudgetSubscriberArrayOutput) Index(i pulumi.IntInput) BudgetSubscriberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetSubscriber {
		return vs[0].([]BudgetSubscriber)[vs[1].(int)]
	}).(BudgetSubscriberOutput)
}

type BudgetTimePeriod struct {
	End   *string `pulumi:"end"`
	Start *string `pulumi:"start"`
}

// BudgetTimePeriodInput is an input type that accepts BudgetTimePeriodArgs and BudgetTimePeriodOutput values.
// You can construct a concrete instance of `BudgetTimePeriodInput` via:
//
//          BudgetTimePeriodArgs{...}
type BudgetTimePeriodInput interface {
	pulumi.Input

	ToBudgetTimePeriodOutput() BudgetTimePeriodOutput
	ToBudgetTimePeriodOutputWithContext(context.Context) BudgetTimePeriodOutput
}

type BudgetTimePeriodArgs struct {
	End   pulumi.StringPtrInput `pulumi:"end"`
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (BudgetTimePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetTimePeriod)(nil)).Elem()
}

func (i BudgetTimePeriodArgs) ToBudgetTimePeriodOutput() BudgetTimePeriodOutput {
	return i.ToBudgetTimePeriodOutputWithContext(context.Background())
}

func (i BudgetTimePeriodArgs) ToBudgetTimePeriodOutputWithContext(ctx context.Context) BudgetTimePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetTimePeriodOutput)
}

func (i BudgetTimePeriodArgs) ToBudgetTimePeriodPtrOutput() BudgetTimePeriodPtrOutput {
	return i.ToBudgetTimePeriodPtrOutputWithContext(context.Background())
}

func (i BudgetTimePeriodArgs) ToBudgetTimePeriodPtrOutputWithContext(ctx context.Context) BudgetTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetTimePeriodOutput).ToBudgetTimePeriodPtrOutputWithContext(ctx)
}

// BudgetTimePeriodPtrInput is an input type that accepts BudgetTimePeriodArgs, BudgetTimePeriodPtr and BudgetTimePeriodPtrOutput values.
// You can construct a concrete instance of `BudgetTimePeriodPtrInput` via:
//
//          BudgetTimePeriodArgs{...}
//
//  or:
//
//          nil
type BudgetTimePeriodPtrInput interface {
	pulumi.Input

	ToBudgetTimePeriodPtrOutput() BudgetTimePeriodPtrOutput
	ToBudgetTimePeriodPtrOutputWithContext(context.Context) BudgetTimePeriodPtrOutput
}

type budgetTimePeriodPtrType BudgetTimePeriodArgs

func BudgetTimePeriodPtr(v *BudgetTimePeriodArgs) BudgetTimePeriodPtrInput {
	return (*budgetTimePeriodPtrType)(v)
}

func (*budgetTimePeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetTimePeriod)(nil)).Elem()
}

func (i *budgetTimePeriodPtrType) ToBudgetTimePeriodPtrOutput() BudgetTimePeriodPtrOutput {
	return i.ToBudgetTimePeriodPtrOutputWithContext(context.Background())
}

func (i *budgetTimePeriodPtrType) ToBudgetTimePeriodPtrOutputWithContext(ctx context.Context) BudgetTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetTimePeriodPtrOutput)
}

type BudgetTimePeriodOutput struct{ *pulumi.OutputState }

func (BudgetTimePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetTimePeriod)(nil)).Elem()
}

func (o BudgetTimePeriodOutput) ToBudgetTimePeriodOutput() BudgetTimePeriodOutput {
	return o
}

func (o BudgetTimePeriodOutput) ToBudgetTimePeriodOutputWithContext(ctx context.Context) BudgetTimePeriodOutput {
	return o
}

func (o BudgetTimePeriodOutput) ToBudgetTimePeriodPtrOutput() BudgetTimePeriodPtrOutput {
	return o.ToBudgetTimePeriodPtrOutputWithContext(context.Background())
}

func (o BudgetTimePeriodOutput) ToBudgetTimePeriodPtrOutputWithContext(ctx context.Context) BudgetTimePeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetTimePeriod) *BudgetTimePeriod {
		return &v
	}).(BudgetTimePeriodPtrOutput)
}

func (o BudgetTimePeriodOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetTimePeriod) *string { return v.End }).(pulumi.StringPtrOutput)
}

func (o BudgetTimePeriodOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetTimePeriod) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type BudgetTimePeriodPtrOutput struct{ *pulumi.OutputState }

func (BudgetTimePeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetTimePeriod)(nil)).Elem()
}

func (o BudgetTimePeriodPtrOutput) ToBudgetTimePeriodPtrOutput() BudgetTimePeriodPtrOutput {
	return o
}

func (o BudgetTimePeriodPtrOutput) ToBudgetTimePeriodPtrOutputWithContext(ctx context.Context) BudgetTimePeriodPtrOutput {
	return o
}

func (o BudgetTimePeriodPtrOutput) Elem() BudgetTimePeriodOutput {
	return o.ApplyT(func(v *BudgetTimePeriod) BudgetTimePeriod {
		if v != nil {
			return *v
		}
		var ret BudgetTimePeriod
		return ret
	}).(BudgetTimePeriodOutput)
}

func (o BudgetTimePeriodPtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetTimePeriod) *string {
		if v == nil {
			return nil
		}
		return v.End
	}).(pulumi.StringPtrOutput)
}

func (o BudgetTimePeriodPtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetTimePeriod) *string {
		if v == nil {
			return nil
		}
		return v.Start
	}).(pulumi.StringPtrOutput)
}

type BudgetsActionActionThreshold struct {
	Type  BudgetsActionActionThresholdType `pulumi:"type"`
	Value float64                          `pulumi:"value"`
}

// BudgetsActionActionThresholdInput is an input type that accepts BudgetsActionActionThresholdArgs and BudgetsActionActionThresholdOutput values.
// You can construct a concrete instance of `BudgetsActionActionThresholdInput` via:
//
//          BudgetsActionActionThresholdArgs{...}
type BudgetsActionActionThresholdInput interface {
	pulumi.Input

	ToBudgetsActionActionThresholdOutput() BudgetsActionActionThresholdOutput
	ToBudgetsActionActionThresholdOutputWithContext(context.Context) BudgetsActionActionThresholdOutput
}

type BudgetsActionActionThresholdArgs struct {
	Type  BudgetsActionActionThresholdTypeInput `pulumi:"type"`
	Value pulumi.Float64Input                   `pulumi:"value"`
}

func (BudgetsActionActionThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionActionThreshold)(nil)).Elem()
}

func (i BudgetsActionActionThresholdArgs) ToBudgetsActionActionThresholdOutput() BudgetsActionActionThresholdOutput {
	return i.ToBudgetsActionActionThresholdOutputWithContext(context.Background())
}

func (i BudgetsActionActionThresholdArgs) ToBudgetsActionActionThresholdOutputWithContext(ctx context.Context) BudgetsActionActionThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionActionThresholdOutput)
}

func (i BudgetsActionActionThresholdArgs) ToBudgetsActionActionThresholdPtrOutput() BudgetsActionActionThresholdPtrOutput {
	return i.ToBudgetsActionActionThresholdPtrOutputWithContext(context.Background())
}

func (i BudgetsActionActionThresholdArgs) ToBudgetsActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetsActionActionThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionActionThresholdOutput).ToBudgetsActionActionThresholdPtrOutputWithContext(ctx)
}

// BudgetsActionActionThresholdPtrInput is an input type that accepts BudgetsActionActionThresholdArgs, BudgetsActionActionThresholdPtr and BudgetsActionActionThresholdPtrOutput values.
// You can construct a concrete instance of `BudgetsActionActionThresholdPtrInput` via:
//
//          BudgetsActionActionThresholdArgs{...}
//
//  or:
//
//          nil
type BudgetsActionActionThresholdPtrInput interface {
	pulumi.Input

	ToBudgetsActionActionThresholdPtrOutput() BudgetsActionActionThresholdPtrOutput
	ToBudgetsActionActionThresholdPtrOutputWithContext(context.Context) BudgetsActionActionThresholdPtrOutput
}

type budgetsActionActionThresholdPtrType BudgetsActionActionThresholdArgs

func BudgetsActionActionThresholdPtr(v *BudgetsActionActionThresholdArgs) BudgetsActionActionThresholdPtrInput {
	return (*budgetsActionActionThresholdPtrType)(v)
}

func (*budgetsActionActionThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionActionThreshold)(nil)).Elem()
}

func (i *budgetsActionActionThresholdPtrType) ToBudgetsActionActionThresholdPtrOutput() BudgetsActionActionThresholdPtrOutput {
	return i.ToBudgetsActionActionThresholdPtrOutputWithContext(context.Background())
}

func (i *budgetsActionActionThresholdPtrType) ToBudgetsActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetsActionActionThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionActionThresholdPtrOutput)
}

type BudgetsActionActionThresholdOutput struct{ *pulumi.OutputState }

func (BudgetsActionActionThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionActionThreshold)(nil)).Elem()
}

func (o BudgetsActionActionThresholdOutput) ToBudgetsActionActionThresholdOutput() BudgetsActionActionThresholdOutput {
	return o
}

func (o BudgetsActionActionThresholdOutput) ToBudgetsActionActionThresholdOutputWithContext(ctx context.Context) BudgetsActionActionThresholdOutput {
	return o
}

func (o BudgetsActionActionThresholdOutput) ToBudgetsActionActionThresholdPtrOutput() BudgetsActionActionThresholdPtrOutput {
	return o.ToBudgetsActionActionThresholdPtrOutputWithContext(context.Background())
}

func (o BudgetsActionActionThresholdOutput) ToBudgetsActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetsActionActionThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetsActionActionThreshold) *BudgetsActionActionThreshold {
		return &v
	}).(BudgetsActionActionThresholdPtrOutput)
}

func (o BudgetsActionActionThresholdOutput) Type() BudgetsActionActionThresholdTypeOutput {
	return o.ApplyT(func(v BudgetsActionActionThreshold) BudgetsActionActionThresholdType { return v.Type }).(BudgetsActionActionThresholdTypeOutput)
}

func (o BudgetsActionActionThresholdOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v BudgetsActionActionThreshold) float64 { return v.Value }).(pulumi.Float64Output)
}

type BudgetsActionActionThresholdPtrOutput struct{ *pulumi.OutputState }

func (BudgetsActionActionThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionActionThreshold)(nil)).Elem()
}

func (o BudgetsActionActionThresholdPtrOutput) ToBudgetsActionActionThresholdPtrOutput() BudgetsActionActionThresholdPtrOutput {
	return o
}

func (o BudgetsActionActionThresholdPtrOutput) ToBudgetsActionActionThresholdPtrOutputWithContext(ctx context.Context) BudgetsActionActionThresholdPtrOutput {
	return o
}

func (o BudgetsActionActionThresholdPtrOutput) Elem() BudgetsActionActionThresholdOutput {
	return o.ApplyT(func(v *BudgetsActionActionThreshold) BudgetsActionActionThreshold {
		if v != nil {
			return *v
		}
		var ret BudgetsActionActionThreshold
		return ret
	}).(BudgetsActionActionThresholdOutput)
}

func (o BudgetsActionActionThresholdPtrOutput) Type() BudgetsActionActionThresholdTypePtrOutput {
	return o.ApplyT(func(v *BudgetsActionActionThreshold) *BudgetsActionActionThresholdType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(BudgetsActionActionThresholdTypePtrOutput)
}

func (o BudgetsActionActionThresholdPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BudgetsActionActionThreshold) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type BudgetsActionDefinition struct {
	IamActionDefinition *BudgetsActionIamActionDefinition `pulumi:"iamActionDefinition"`
	ScpActionDefinition *BudgetsActionScpActionDefinition `pulumi:"scpActionDefinition"`
	SsmActionDefinition *BudgetsActionSsmActionDefinition `pulumi:"ssmActionDefinition"`
}

// BudgetsActionDefinitionInput is an input type that accepts BudgetsActionDefinitionArgs and BudgetsActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetsActionDefinitionInput` via:
//
//          BudgetsActionDefinitionArgs{...}
type BudgetsActionDefinitionInput interface {
	pulumi.Input

	ToBudgetsActionDefinitionOutput() BudgetsActionDefinitionOutput
	ToBudgetsActionDefinitionOutputWithContext(context.Context) BudgetsActionDefinitionOutput
}

type BudgetsActionDefinitionArgs struct {
	IamActionDefinition BudgetsActionIamActionDefinitionPtrInput `pulumi:"iamActionDefinition"`
	ScpActionDefinition BudgetsActionScpActionDefinitionPtrInput `pulumi:"scpActionDefinition"`
	SsmActionDefinition BudgetsActionSsmActionDefinitionPtrInput `pulumi:"ssmActionDefinition"`
}

func (BudgetsActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionDefinition)(nil)).Elem()
}

func (i BudgetsActionDefinitionArgs) ToBudgetsActionDefinitionOutput() BudgetsActionDefinitionOutput {
	return i.ToBudgetsActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetsActionDefinitionArgs) ToBudgetsActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionDefinitionOutput)
}

func (i BudgetsActionDefinitionArgs) ToBudgetsActionDefinitionPtrOutput() BudgetsActionDefinitionPtrOutput {
	return i.ToBudgetsActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetsActionDefinitionArgs) ToBudgetsActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionDefinitionOutput).ToBudgetsActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetsActionDefinitionPtrInput is an input type that accepts BudgetsActionDefinitionArgs, BudgetsActionDefinitionPtr and BudgetsActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetsActionDefinitionPtrInput` via:
//
//          BudgetsActionDefinitionArgs{...}
//
//  or:
//
//          nil
type BudgetsActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetsActionDefinitionPtrOutput() BudgetsActionDefinitionPtrOutput
	ToBudgetsActionDefinitionPtrOutputWithContext(context.Context) BudgetsActionDefinitionPtrOutput
}

type budgetsActionDefinitionPtrType BudgetsActionDefinitionArgs

func BudgetsActionDefinitionPtr(v *BudgetsActionDefinitionArgs) BudgetsActionDefinitionPtrInput {
	return (*budgetsActionDefinitionPtrType)(v)
}

func (*budgetsActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionDefinition)(nil)).Elem()
}

func (i *budgetsActionDefinitionPtrType) ToBudgetsActionDefinitionPtrOutput() BudgetsActionDefinitionPtrOutput {
	return i.ToBudgetsActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetsActionDefinitionPtrType) ToBudgetsActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionDefinitionPtrOutput)
}

type BudgetsActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetsActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionDefinition)(nil)).Elem()
}

func (o BudgetsActionDefinitionOutput) ToBudgetsActionDefinitionOutput() BudgetsActionDefinitionOutput {
	return o
}

func (o BudgetsActionDefinitionOutput) ToBudgetsActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionDefinitionOutput {
	return o
}

func (o BudgetsActionDefinitionOutput) ToBudgetsActionDefinitionPtrOutput() BudgetsActionDefinitionPtrOutput {
	return o.ToBudgetsActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetsActionDefinitionOutput) ToBudgetsActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetsActionDefinition) *BudgetsActionDefinition {
		return &v
	}).(BudgetsActionDefinitionPtrOutput)
}

func (o BudgetsActionDefinitionOutput) IamActionDefinition() BudgetsActionIamActionDefinitionPtrOutput {
	return o.ApplyT(func(v BudgetsActionDefinition) *BudgetsActionIamActionDefinition { return v.IamActionDefinition }).(BudgetsActionIamActionDefinitionPtrOutput)
}

func (o BudgetsActionDefinitionOutput) ScpActionDefinition() BudgetsActionScpActionDefinitionPtrOutput {
	return o.ApplyT(func(v BudgetsActionDefinition) *BudgetsActionScpActionDefinition { return v.ScpActionDefinition }).(BudgetsActionScpActionDefinitionPtrOutput)
}

func (o BudgetsActionDefinitionOutput) SsmActionDefinition() BudgetsActionSsmActionDefinitionPtrOutput {
	return o.ApplyT(func(v BudgetsActionDefinition) *BudgetsActionSsmActionDefinition { return v.SsmActionDefinition }).(BudgetsActionSsmActionDefinitionPtrOutput)
}

type BudgetsActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetsActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionDefinition)(nil)).Elem()
}

func (o BudgetsActionDefinitionPtrOutput) ToBudgetsActionDefinitionPtrOutput() BudgetsActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionDefinitionPtrOutput) ToBudgetsActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionDefinitionPtrOutput) Elem() BudgetsActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetsActionDefinition) BudgetsActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetsActionDefinition
		return ret
	}).(BudgetsActionDefinitionOutput)
}

func (o BudgetsActionDefinitionPtrOutput) IamActionDefinition() BudgetsActionIamActionDefinitionPtrOutput {
	return o.ApplyT(func(v *BudgetsActionDefinition) *BudgetsActionIamActionDefinition {
		if v == nil {
			return nil
		}
		return v.IamActionDefinition
	}).(BudgetsActionIamActionDefinitionPtrOutput)
}

func (o BudgetsActionDefinitionPtrOutput) ScpActionDefinition() BudgetsActionScpActionDefinitionPtrOutput {
	return o.ApplyT(func(v *BudgetsActionDefinition) *BudgetsActionScpActionDefinition {
		if v == nil {
			return nil
		}
		return v.ScpActionDefinition
	}).(BudgetsActionScpActionDefinitionPtrOutput)
}

func (o BudgetsActionDefinitionPtrOutput) SsmActionDefinition() BudgetsActionSsmActionDefinitionPtrOutput {
	return o.ApplyT(func(v *BudgetsActionDefinition) *BudgetsActionSsmActionDefinition {
		if v == nil {
			return nil
		}
		return v.SsmActionDefinition
	}).(BudgetsActionSsmActionDefinitionPtrOutput)
}

type BudgetsActionIamActionDefinition struct {
	Groups    []string `pulumi:"groups"`
	PolicyArn string   `pulumi:"policyArn"`
	Roles     []string `pulumi:"roles"`
	Users     []string `pulumi:"users"`
}

// BudgetsActionIamActionDefinitionInput is an input type that accepts BudgetsActionIamActionDefinitionArgs and BudgetsActionIamActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetsActionIamActionDefinitionInput` via:
//
//          BudgetsActionIamActionDefinitionArgs{...}
type BudgetsActionIamActionDefinitionInput interface {
	pulumi.Input

	ToBudgetsActionIamActionDefinitionOutput() BudgetsActionIamActionDefinitionOutput
	ToBudgetsActionIamActionDefinitionOutputWithContext(context.Context) BudgetsActionIamActionDefinitionOutput
}

type BudgetsActionIamActionDefinitionArgs struct {
	Groups    pulumi.StringArrayInput `pulumi:"groups"`
	PolicyArn pulumi.StringInput      `pulumi:"policyArn"`
	Roles     pulumi.StringArrayInput `pulumi:"roles"`
	Users     pulumi.StringArrayInput `pulumi:"users"`
}

func (BudgetsActionIamActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionIamActionDefinition)(nil)).Elem()
}

func (i BudgetsActionIamActionDefinitionArgs) ToBudgetsActionIamActionDefinitionOutput() BudgetsActionIamActionDefinitionOutput {
	return i.ToBudgetsActionIamActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetsActionIamActionDefinitionArgs) ToBudgetsActionIamActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionIamActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionIamActionDefinitionOutput)
}

func (i BudgetsActionIamActionDefinitionArgs) ToBudgetsActionIamActionDefinitionPtrOutput() BudgetsActionIamActionDefinitionPtrOutput {
	return i.ToBudgetsActionIamActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetsActionIamActionDefinitionArgs) ToBudgetsActionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionIamActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionIamActionDefinitionOutput).ToBudgetsActionIamActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetsActionIamActionDefinitionPtrInput is an input type that accepts BudgetsActionIamActionDefinitionArgs, BudgetsActionIamActionDefinitionPtr and BudgetsActionIamActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetsActionIamActionDefinitionPtrInput` via:
//
//          BudgetsActionIamActionDefinitionArgs{...}
//
//  or:
//
//          nil
type BudgetsActionIamActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetsActionIamActionDefinitionPtrOutput() BudgetsActionIamActionDefinitionPtrOutput
	ToBudgetsActionIamActionDefinitionPtrOutputWithContext(context.Context) BudgetsActionIamActionDefinitionPtrOutput
}

type budgetsActionIamActionDefinitionPtrType BudgetsActionIamActionDefinitionArgs

func BudgetsActionIamActionDefinitionPtr(v *BudgetsActionIamActionDefinitionArgs) BudgetsActionIamActionDefinitionPtrInput {
	return (*budgetsActionIamActionDefinitionPtrType)(v)
}

func (*budgetsActionIamActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionIamActionDefinition)(nil)).Elem()
}

func (i *budgetsActionIamActionDefinitionPtrType) ToBudgetsActionIamActionDefinitionPtrOutput() BudgetsActionIamActionDefinitionPtrOutput {
	return i.ToBudgetsActionIamActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetsActionIamActionDefinitionPtrType) ToBudgetsActionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionIamActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionIamActionDefinitionPtrOutput)
}

type BudgetsActionIamActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetsActionIamActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionIamActionDefinition)(nil)).Elem()
}

func (o BudgetsActionIamActionDefinitionOutput) ToBudgetsActionIamActionDefinitionOutput() BudgetsActionIamActionDefinitionOutput {
	return o
}

func (o BudgetsActionIamActionDefinitionOutput) ToBudgetsActionIamActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionIamActionDefinitionOutput {
	return o
}

func (o BudgetsActionIamActionDefinitionOutput) ToBudgetsActionIamActionDefinitionPtrOutput() BudgetsActionIamActionDefinitionPtrOutput {
	return o.ToBudgetsActionIamActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetsActionIamActionDefinitionOutput) ToBudgetsActionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionIamActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetsActionIamActionDefinition) *BudgetsActionIamActionDefinition {
		return &v
	}).(BudgetsActionIamActionDefinitionPtrOutput)
}

func (o BudgetsActionIamActionDefinitionOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetsActionIamActionDefinition) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o BudgetsActionIamActionDefinitionOutput) PolicyArn() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetsActionIamActionDefinition) string { return v.PolicyArn }).(pulumi.StringOutput)
}

func (o BudgetsActionIamActionDefinitionOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetsActionIamActionDefinition) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o BudgetsActionIamActionDefinitionOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetsActionIamActionDefinition) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type BudgetsActionIamActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetsActionIamActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionIamActionDefinition)(nil)).Elem()
}

func (o BudgetsActionIamActionDefinitionPtrOutput) ToBudgetsActionIamActionDefinitionPtrOutput() BudgetsActionIamActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionIamActionDefinitionPtrOutput) ToBudgetsActionIamActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionIamActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionIamActionDefinitionPtrOutput) Elem() BudgetsActionIamActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetsActionIamActionDefinition) BudgetsActionIamActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetsActionIamActionDefinition
		return ret
	}).(BudgetsActionIamActionDefinitionOutput)
}

func (o BudgetsActionIamActionDefinitionPtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetsActionIamActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

func (o BudgetsActionIamActionDefinitionPtrOutput) PolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetsActionIamActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyArn
	}).(pulumi.StringPtrOutput)
}

func (o BudgetsActionIamActionDefinitionPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetsActionIamActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

func (o BudgetsActionIamActionDefinitionPtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetsActionIamActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

type BudgetsActionScpActionDefinition struct {
	PolicyId  string   `pulumi:"policyId"`
	TargetIds []string `pulumi:"targetIds"`
}

// BudgetsActionScpActionDefinitionInput is an input type that accepts BudgetsActionScpActionDefinitionArgs and BudgetsActionScpActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetsActionScpActionDefinitionInput` via:
//
//          BudgetsActionScpActionDefinitionArgs{...}
type BudgetsActionScpActionDefinitionInput interface {
	pulumi.Input

	ToBudgetsActionScpActionDefinitionOutput() BudgetsActionScpActionDefinitionOutput
	ToBudgetsActionScpActionDefinitionOutputWithContext(context.Context) BudgetsActionScpActionDefinitionOutput
}

type BudgetsActionScpActionDefinitionArgs struct {
	PolicyId  pulumi.StringInput      `pulumi:"policyId"`
	TargetIds pulumi.StringArrayInput `pulumi:"targetIds"`
}

func (BudgetsActionScpActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionScpActionDefinition)(nil)).Elem()
}

func (i BudgetsActionScpActionDefinitionArgs) ToBudgetsActionScpActionDefinitionOutput() BudgetsActionScpActionDefinitionOutput {
	return i.ToBudgetsActionScpActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetsActionScpActionDefinitionArgs) ToBudgetsActionScpActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionScpActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionScpActionDefinitionOutput)
}

func (i BudgetsActionScpActionDefinitionArgs) ToBudgetsActionScpActionDefinitionPtrOutput() BudgetsActionScpActionDefinitionPtrOutput {
	return i.ToBudgetsActionScpActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetsActionScpActionDefinitionArgs) ToBudgetsActionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionScpActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionScpActionDefinitionOutput).ToBudgetsActionScpActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetsActionScpActionDefinitionPtrInput is an input type that accepts BudgetsActionScpActionDefinitionArgs, BudgetsActionScpActionDefinitionPtr and BudgetsActionScpActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetsActionScpActionDefinitionPtrInput` via:
//
//          BudgetsActionScpActionDefinitionArgs{...}
//
//  or:
//
//          nil
type BudgetsActionScpActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetsActionScpActionDefinitionPtrOutput() BudgetsActionScpActionDefinitionPtrOutput
	ToBudgetsActionScpActionDefinitionPtrOutputWithContext(context.Context) BudgetsActionScpActionDefinitionPtrOutput
}

type budgetsActionScpActionDefinitionPtrType BudgetsActionScpActionDefinitionArgs

func BudgetsActionScpActionDefinitionPtr(v *BudgetsActionScpActionDefinitionArgs) BudgetsActionScpActionDefinitionPtrInput {
	return (*budgetsActionScpActionDefinitionPtrType)(v)
}

func (*budgetsActionScpActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionScpActionDefinition)(nil)).Elem()
}

func (i *budgetsActionScpActionDefinitionPtrType) ToBudgetsActionScpActionDefinitionPtrOutput() BudgetsActionScpActionDefinitionPtrOutput {
	return i.ToBudgetsActionScpActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetsActionScpActionDefinitionPtrType) ToBudgetsActionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionScpActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionScpActionDefinitionPtrOutput)
}

type BudgetsActionScpActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetsActionScpActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionScpActionDefinition)(nil)).Elem()
}

func (o BudgetsActionScpActionDefinitionOutput) ToBudgetsActionScpActionDefinitionOutput() BudgetsActionScpActionDefinitionOutput {
	return o
}

func (o BudgetsActionScpActionDefinitionOutput) ToBudgetsActionScpActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionScpActionDefinitionOutput {
	return o
}

func (o BudgetsActionScpActionDefinitionOutput) ToBudgetsActionScpActionDefinitionPtrOutput() BudgetsActionScpActionDefinitionPtrOutput {
	return o.ToBudgetsActionScpActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetsActionScpActionDefinitionOutput) ToBudgetsActionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionScpActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetsActionScpActionDefinition) *BudgetsActionScpActionDefinition {
		return &v
	}).(BudgetsActionScpActionDefinitionPtrOutput)
}

func (o BudgetsActionScpActionDefinitionOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetsActionScpActionDefinition) string { return v.PolicyId }).(pulumi.StringOutput)
}

func (o BudgetsActionScpActionDefinitionOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetsActionScpActionDefinition) []string { return v.TargetIds }).(pulumi.StringArrayOutput)
}

type BudgetsActionScpActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetsActionScpActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionScpActionDefinition)(nil)).Elem()
}

func (o BudgetsActionScpActionDefinitionPtrOutput) ToBudgetsActionScpActionDefinitionPtrOutput() BudgetsActionScpActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionScpActionDefinitionPtrOutput) ToBudgetsActionScpActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionScpActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionScpActionDefinitionPtrOutput) Elem() BudgetsActionScpActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetsActionScpActionDefinition) BudgetsActionScpActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetsActionScpActionDefinition
		return ret
	}).(BudgetsActionScpActionDefinitionOutput)
}

func (o BudgetsActionScpActionDefinitionPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetsActionScpActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyId
	}).(pulumi.StringPtrOutput)
}

func (o BudgetsActionScpActionDefinitionPtrOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetsActionScpActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.TargetIds
	}).(pulumi.StringArrayOutput)
}

type BudgetsActionSsmActionDefinition struct {
	InstanceIds []string                                `pulumi:"instanceIds"`
	Region      string                                  `pulumi:"region"`
	Subtype     BudgetsActionSsmActionDefinitionSubtype `pulumi:"subtype"`
}

// BudgetsActionSsmActionDefinitionInput is an input type that accepts BudgetsActionSsmActionDefinitionArgs and BudgetsActionSsmActionDefinitionOutput values.
// You can construct a concrete instance of `BudgetsActionSsmActionDefinitionInput` via:
//
//          BudgetsActionSsmActionDefinitionArgs{...}
type BudgetsActionSsmActionDefinitionInput interface {
	pulumi.Input

	ToBudgetsActionSsmActionDefinitionOutput() BudgetsActionSsmActionDefinitionOutput
	ToBudgetsActionSsmActionDefinitionOutputWithContext(context.Context) BudgetsActionSsmActionDefinitionOutput
}

type BudgetsActionSsmActionDefinitionArgs struct {
	InstanceIds pulumi.StringArrayInput                      `pulumi:"instanceIds"`
	Region      pulumi.StringInput                           `pulumi:"region"`
	Subtype     BudgetsActionSsmActionDefinitionSubtypeInput `pulumi:"subtype"`
}

func (BudgetsActionSsmActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionSsmActionDefinition)(nil)).Elem()
}

func (i BudgetsActionSsmActionDefinitionArgs) ToBudgetsActionSsmActionDefinitionOutput() BudgetsActionSsmActionDefinitionOutput {
	return i.ToBudgetsActionSsmActionDefinitionOutputWithContext(context.Background())
}

func (i BudgetsActionSsmActionDefinitionArgs) ToBudgetsActionSsmActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionSsmActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionSsmActionDefinitionOutput)
}

func (i BudgetsActionSsmActionDefinitionArgs) ToBudgetsActionSsmActionDefinitionPtrOutput() BudgetsActionSsmActionDefinitionPtrOutput {
	return i.ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(context.Background())
}

func (i BudgetsActionSsmActionDefinitionArgs) ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionSsmActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionSsmActionDefinitionOutput).ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(ctx)
}

// BudgetsActionSsmActionDefinitionPtrInput is an input type that accepts BudgetsActionSsmActionDefinitionArgs, BudgetsActionSsmActionDefinitionPtr and BudgetsActionSsmActionDefinitionPtrOutput values.
// You can construct a concrete instance of `BudgetsActionSsmActionDefinitionPtrInput` via:
//
//          BudgetsActionSsmActionDefinitionArgs{...}
//
//  or:
//
//          nil
type BudgetsActionSsmActionDefinitionPtrInput interface {
	pulumi.Input

	ToBudgetsActionSsmActionDefinitionPtrOutput() BudgetsActionSsmActionDefinitionPtrOutput
	ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(context.Context) BudgetsActionSsmActionDefinitionPtrOutput
}

type budgetsActionSsmActionDefinitionPtrType BudgetsActionSsmActionDefinitionArgs

func BudgetsActionSsmActionDefinitionPtr(v *BudgetsActionSsmActionDefinitionArgs) BudgetsActionSsmActionDefinitionPtrInput {
	return (*budgetsActionSsmActionDefinitionPtrType)(v)
}

func (*budgetsActionSsmActionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionSsmActionDefinition)(nil)).Elem()
}

func (i *budgetsActionSsmActionDefinitionPtrType) ToBudgetsActionSsmActionDefinitionPtrOutput() BudgetsActionSsmActionDefinitionPtrOutput {
	return i.ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(context.Background())
}

func (i *budgetsActionSsmActionDefinitionPtrType) ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionSsmActionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionSsmActionDefinitionPtrOutput)
}

type BudgetsActionSsmActionDefinitionOutput struct{ *pulumi.OutputState }

func (BudgetsActionSsmActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionSsmActionDefinition)(nil)).Elem()
}

func (o BudgetsActionSsmActionDefinitionOutput) ToBudgetsActionSsmActionDefinitionOutput() BudgetsActionSsmActionDefinitionOutput {
	return o
}

func (o BudgetsActionSsmActionDefinitionOutput) ToBudgetsActionSsmActionDefinitionOutputWithContext(ctx context.Context) BudgetsActionSsmActionDefinitionOutput {
	return o
}

func (o BudgetsActionSsmActionDefinitionOutput) ToBudgetsActionSsmActionDefinitionPtrOutput() BudgetsActionSsmActionDefinitionPtrOutput {
	return o.ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(context.Background())
}

func (o BudgetsActionSsmActionDefinitionOutput) ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionSsmActionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetsActionSsmActionDefinition) *BudgetsActionSsmActionDefinition {
		return &v
	}).(BudgetsActionSsmActionDefinitionPtrOutput)
}

func (o BudgetsActionSsmActionDefinitionOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetsActionSsmActionDefinition) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o BudgetsActionSsmActionDefinitionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetsActionSsmActionDefinition) string { return v.Region }).(pulumi.StringOutput)
}

func (o BudgetsActionSsmActionDefinitionOutput) Subtype() BudgetsActionSsmActionDefinitionSubtypeOutput {
	return o.ApplyT(func(v BudgetsActionSsmActionDefinition) BudgetsActionSsmActionDefinitionSubtype { return v.Subtype }).(BudgetsActionSsmActionDefinitionSubtypeOutput)
}

type BudgetsActionSsmActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BudgetsActionSsmActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetsActionSsmActionDefinition)(nil)).Elem()
}

func (o BudgetsActionSsmActionDefinitionPtrOutput) ToBudgetsActionSsmActionDefinitionPtrOutput() BudgetsActionSsmActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionSsmActionDefinitionPtrOutput) ToBudgetsActionSsmActionDefinitionPtrOutputWithContext(ctx context.Context) BudgetsActionSsmActionDefinitionPtrOutput {
	return o
}

func (o BudgetsActionSsmActionDefinitionPtrOutput) Elem() BudgetsActionSsmActionDefinitionOutput {
	return o.ApplyT(func(v *BudgetsActionSsmActionDefinition) BudgetsActionSsmActionDefinition {
		if v != nil {
			return *v
		}
		var ret BudgetsActionSsmActionDefinition
		return ret
	}).(BudgetsActionSsmActionDefinitionOutput)
}

func (o BudgetsActionSsmActionDefinitionPtrOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BudgetsActionSsmActionDefinition) []string {
		if v == nil {
			return nil
		}
		return v.InstanceIds
	}).(pulumi.StringArrayOutput)
}

func (o BudgetsActionSsmActionDefinitionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetsActionSsmActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o BudgetsActionSsmActionDefinitionPtrOutput) Subtype() BudgetsActionSsmActionDefinitionSubtypePtrOutput {
	return o.ApplyT(func(v *BudgetsActionSsmActionDefinition) *BudgetsActionSsmActionDefinitionSubtype {
		if v == nil {
			return nil
		}
		return &v.Subtype
	}).(BudgetsActionSsmActionDefinitionSubtypePtrOutput)
}

type BudgetsActionSubscriber struct {
	Address string                      `pulumi:"address"`
	Type    BudgetsActionSubscriberType `pulumi:"type"`
}

// BudgetsActionSubscriberInput is an input type that accepts BudgetsActionSubscriberArgs and BudgetsActionSubscriberOutput values.
// You can construct a concrete instance of `BudgetsActionSubscriberInput` via:
//
//          BudgetsActionSubscriberArgs{...}
type BudgetsActionSubscriberInput interface {
	pulumi.Input

	ToBudgetsActionSubscriberOutput() BudgetsActionSubscriberOutput
	ToBudgetsActionSubscriberOutputWithContext(context.Context) BudgetsActionSubscriberOutput
}

type BudgetsActionSubscriberArgs struct {
	Address pulumi.StringInput               `pulumi:"address"`
	Type    BudgetsActionSubscriberTypeInput `pulumi:"type"`
}

func (BudgetsActionSubscriberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionSubscriber)(nil)).Elem()
}

func (i BudgetsActionSubscriberArgs) ToBudgetsActionSubscriberOutput() BudgetsActionSubscriberOutput {
	return i.ToBudgetsActionSubscriberOutputWithContext(context.Background())
}

func (i BudgetsActionSubscriberArgs) ToBudgetsActionSubscriberOutputWithContext(ctx context.Context) BudgetsActionSubscriberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionSubscriberOutput)
}

// BudgetsActionSubscriberArrayInput is an input type that accepts BudgetsActionSubscriberArray and BudgetsActionSubscriberArrayOutput values.
// You can construct a concrete instance of `BudgetsActionSubscriberArrayInput` via:
//
//          BudgetsActionSubscriberArray{ BudgetsActionSubscriberArgs{...} }
type BudgetsActionSubscriberArrayInput interface {
	pulumi.Input

	ToBudgetsActionSubscriberArrayOutput() BudgetsActionSubscriberArrayOutput
	ToBudgetsActionSubscriberArrayOutputWithContext(context.Context) BudgetsActionSubscriberArrayOutput
}

type BudgetsActionSubscriberArray []BudgetsActionSubscriberInput

func (BudgetsActionSubscriberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetsActionSubscriber)(nil)).Elem()
}

func (i BudgetsActionSubscriberArray) ToBudgetsActionSubscriberArrayOutput() BudgetsActionSubscriberArrayOutput {
	return i.ToBudgetsActionSubscriberArrayOutputWithContext(context.Background())
}

func (i BudgetsActionSubscriberArray) ToBudgetsActionSubscriberArrayOutputWithContext(ctx context.Context) BudgetsActionSubscriberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetsActionSubscriberArrayOutput)
}

type BudgetsActionSubscriberOutput struct{ *pulumi.OutputState }

func (BudgetsActionSubscriberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetsActionSubscriber)(nil)).Elem()
}

func (o BudgetsActionSubscriberOutput) ToBudgetsActionSubscriberOutput() BudgetsActionSubscriberOutput {
	return o
}

func (o BudgetsActionSubscriberOutput) ToBudgetsActionSubscriberOutputWithContext(ctx context.Context) BudgetsActionSubscriberOutput {
	return o
}

func (o BudgetsActionSubscriberOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetsActionSubscriber) string { return v.Address }).(pulumi.StringOutput)
}

func (o BudgetsActionSubscriberOutput) Type() BudgetsActionSubscriberTypeOutput {
	return o.ApplyT(func(v BudgetsActionSubscriber) BudgetsActionSubscriberType { return v.Type }).(BudgetsActionSubscriberTypeOutput)
}

type BudgetsActionSubscriberArrayOutput struct{ *pulumi.OutputState }

func (BudgetsActionSubscriberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetsActionSubscriber)(nil)).Elem()
}

func (o BudgetsActionSubscriberArrayOutput) ToBudgetsActionSubscriberArrayOutput() BudgetsActionSubscriberArrayOutput {
	return o
}

func (o BudgetsActionSubscriberArrayOutput) ToBudgetsActionSubscriberArrayOutputWithContext(ctx context.Context) BudgetsActionSubscriberArrayOutput {
	return o
}

func (o BudgetsActionSubscriberArrayOutput) Index(i pulumi.IntInput) BudgetsActionSubscriberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetsActionSubscriber {
		return vs[0].([]BudgetsActionSubscriber)[vs[1].(int)]
	}).(BudgetsActionSubscriberOutput)
}

func init() {
	pulumi.RegisterOutputType(BudgetCostTypesOutput{})
	pulumi.RegisterOutputType(BudgetCostTypesPtrOutput{})
	pulumi.RegisterOutputType(BudgetDataOutput{})
	pulumi.RegisterOutputType(BudgetDataPtrOutput{})
	pulumi.RegisterOutputType(BudgetNotificationOutput{})
	pulumi.RegisterOutputType(BudgetNotificationWithSubscribersOutput{})
	pulumi.RegisterOutputType(BudgetNotificationWithSubscribersArrayOutput{})
	pulumi.RegisterOutputType(BudgetSpendOutput{})
	pulumi.RegisterOutputType(BudgetSpendPtrOutput{})
	pulumi.RegisterOutputType(BudgetSubscriberOutput{})
	pulumi.RegisterOutputType(BudgetSubscriberArrayOutput{})
	pulumi.RegisterOutputType(BudgetTimePeriodOutput{})
	pulumi.RegisterOutputType(BudgetTimePeriodPtrOutput{})
	pulumi.RegisterOutputType(BudgetsActionActionThresholdOutput{})
	pulumi.RegisterOutputType(BudgetsActionActionThresholdPtrOutput{})
	pulumi.RegisterOutputType(BudgetsActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetsActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetsActionIamActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetsActionIamActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetsActionScpActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetsActionScpActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetsActionSsmActionDefinitionOutput{})
	pulumi.RegisterOutputType(BudgetsActionSsmActionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BudgetsActionSubscriberOutput{})
	pulumi.RegisterOutputType(BudgetsActionSubscriberArrayOutput{})
}
