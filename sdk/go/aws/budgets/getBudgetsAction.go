// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package budgets

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
func LookupBudgetsAction(ctx *pulumi.Context, args *LookupBudgetsActionArgs, opts ...pulumi.InvokeOption) (*LookupBudgetsActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBudgetsActionResult
	err := ctx.Invoke("aws-native:budgets:getBudgetsAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBudgetsActionArgs struct {
	// A system-generated universally unique identifier (UUID) for the action.
	ActionId string `pulumi:"actionId"`
	// A string that represents the budget name. ":" and "\" characters aren't allowed.
	BudgetName string `pulumi:"budgetName"`
}

type LookupBudgetsActionResult struct {
	// A system-generated universally unique identifier (UUID) for the action.
	ActionId *string `pulumi:"actionId"`
	// The trigger threshold of the action.
	ActionThreshold *BudgetsActionActionThreshold `pulumi:"actionThreshold"`
	// This specifies if the action needs manual or automatic approval.
	ApprovalModel *BudgetsActionApprovalModel `pulumi:"approvalModel"`
	// The definition is where you specify all of the type-specific parameters.
	Definition *BudgetsActionDefinition `pulumi:"definition"`
	// The role passed for action execution and reversion. Roles and actions must be in the same account.
	ExecutionRoleArn *string `pulumi:"executionRoleArn"`
	// The type of a notification.
	NotificationType *BudgetsActionNotificationType `pulumi:"notificationType"`
	// The tag structure that contains a tag key and value.
	ResourceTags []aws.Tag `pulumi:"resourceTags"`
	// The subscriber to a budget notification. The subscriber consists of a subscription type and either an Amazon SNS topic or an email address.
	//
	// For example, an email subscriber has the following parameters:
	//
	// - A `subscriptionType` of `EMAIL`
	// - An `address` of `example@example.com`
	Subscribers []BudgetsActionSubscriber `pulumi:"subscribers"`
}

func LookupBudgetsActionOutput(ctx *pulumi.Context, args LookupBudgetsActionOutputArgs, opts ...pulumi.InvokeOption) LookupBudgetsActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBudgetsActionResult, error) {
			args := v.(LookupBudgetsActionArgs)
			r, err := LookupBudgetsAction(ctx, &args, opts...)
			var s LookupBudgetsActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBudgetsActionResultOutput)
}

type LookupBudgetsActionOutputArgs struct {
	// A system-generated universally unique identifier (UUID) for the action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
	// A string that represents the budget name. ":" and "\" characters aren't allowed.
	BudgetName pulumi.StringInput `pulumi:"budgetName"`
}

func (LookupBudgetsActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBudgetsActionArgs)(nil)).Elem()
}

type LookupBudgetsActionResultOutput struct{ *pulumi.OutputState }

func (LookupBudgetsActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBudgetsActionResult)(nil)).Elem()
}

func (o LookupBudgetsActionResultOutput) ToLookupBudgetsActionResultOutput() LookupBudgetsActionResultOutput {
	return o
}

func (o LookupBudgetsActionResultOutput) ToLookupBudgetsActionResultOutputWithContext(ctx context.Context) LookupBudgetsActionResultOutput {
	return o
}

// A system-generated universally unique identifier (UUID) for the action.
func (o LookupBudgetsActionResultOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

// The trigger threshold of the action.
func (o LookupBudgetsActionResultOutput) ActionThreshold() BudgetsActionActionThresholdPtrOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) *BudgetsActionActionThreshold { return v.ActionThreshold }).(BudgetsActionActionThresholdPtrOutput)
}

// This specifies if the action needs manual or automatic approval.
func (o LookupBudgetsActionResultOutput) ApprovalModel() BudgetsActionApprovalModelPtrOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) *BudgetsActionApprovalModel { return v.ApprovalModel }).(BudgetsActionApprovalModelPtrOutput)
}

// The definition is where you specify all of the type-specific parameters.
func (o LookupBudgetsActionResultOutput) Definition() BudgetsActionDefinitionPtrOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) *BudgetsActionDefinition { return v.Definition }).(BudgetsActionDefinitionPtrOutput)
}

// The role passed for action execution and reversion. Roles and actions must be in the same account.
func (o LookupBudgetsActionResultOutput) ExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) *string { return v.ExecutionRoleArn }).(pulumi.StringPtrOutput)
}

// The type of a notification.
func (o LookupBudgetsActionResultOutput) NotificationType() BudgetsActionNotificationTypePtrOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) *BudgetsActionNotificationType { return v.NotificationType }).(BudgetsActionNotificationTypePtrOutput)
}

// The tag structure that contains a tag key and value.
func (o LookupBudgetsActionResultOutput) ResourceTags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) []aws.Tag { return v.ResourceTags }).(aws.TagArrayOutput)
}

// The subscriber to a budget notification. The subscriber consists of a subscription type and either an Amazon SNS topic or an email address.
//
// For example, an email subscriber has the following parameters:
//
// - A `subscriptionType` of `EMAIL`
// - An `address` of `example@example.com`
func (o LookupBudgetsActionResultOutput) Subscribers() BudgetsActionSubscriberArrayOutput {
	return o.ApplyT(func(v LookupBudgetsActionResult) []BudgetsActionSubscriber { return v.Subscribers }).(BudgetsActionSubscriberArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBudgetsActionResultOutput{})
}
