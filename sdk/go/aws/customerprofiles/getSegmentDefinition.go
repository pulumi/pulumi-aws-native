// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package customerprofiles

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A segment definition resource of Amazon Connect Customer Profiles
func LookupSegmentDefinition(ctx *pulumi.Context, args *LookupSegmentDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupSegmentDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSegmentDefinitionResult
	err := ctx.Invoke("aws-native:customerprofiles:getSegmentDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSegmentDefinitionArgs struct {
	// The unique name of the domain.
	DomainName string `pulumi:"domainName"`
	// The unique name of the segment definition.
	SegmentDefinitionName string `pulumi:"segmentDefinitionName"`
}

type LookupSegmentDefinitionResult struct {
	// The time of this segment definition got created.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the segment definition.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) of the segment definition.
	SegmentDefinitionArn *string `pulumi:"segmentDefinitionArn"`
	// The tags used to organize, track, or control access for this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupSegmentDefinitionOutput(ctx *pulumi.Context, args LookupSegmentDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupSegmentDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSegmentDefinitionResultOutput, error) {
			args := v.(LookupSegmentDefinitionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSegmentDefinitionResult
			secret, err := ctx.InvokePackageRaw("aws-native:customerprofiles:getSegmentDefinition", args, &rv, "", opts...)
			if err != nil {
				return LookupSegmentDefinitionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSegmentDefinitionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSegmentDefinitionResultOutput), nil
			}
			return output, nil
		}).(LookupSegmentDefinitionResultOutput)
}

type LookupSegmentDefinitionOutputArgs struct {
	// The unique name of the domain.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The unique name of the segment definition.
	SegmentDefinitionName pulumi.StringInput `pulumi:"segmentDefinitionName"`
}

func (LookupSegmentDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentDefinitionArgs)(nil)).Elem()
}

type LookupSegmentDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupSegmentDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentDefinitionResult)(nil)).Elem()
}

func (o LookupSegmentDefinitionResultOutput) ToLookupSegmentDefinitionResultOutput() LookupSegmentDefinitionResultOutput {
	return o
}

func (o LookupSegmentDefinitionResultOutput) ToLookupSegmentDefinitionResultOutputWithContext(ctx context.Context) LookupSegmentDefinitionResultOutput {
	return o
}

// The time of this segment definition got created.
func (o LookupSegmentDefinitionResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentDefinitionResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The description of the segment definition.
func (o LookupSegmentDefinitionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentDefinitionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the segment definition.
func (o LookupSegmentDefinitionResultOutput) SegmentDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSegmentDefinitionResult) *string { return v.SegmentDefinitionArn }).(pulumi.StringPtrOutput)
}

// The tags used to organize, track, or control access for this resource.
func (o LookupSegmentDefinitionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupSegmentDefinitionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSegmentDefinitionResultOutput{})
}
