// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package customerprofiles

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DomainTagInput is an input type that accepts DomainTagArgs and DomainTagOutput values.
// You can construct a concrete instance of `DomainTagInput` via:
//
//          DomainTagArgs{...}
type DomainTagInput interface {
	pulumi.Input

	ToDomainTagOutput() DomainTagOutput
	ToDomainTagOutputWithContext(context.Context) DomainTagOutput
}

type DomainTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DomainTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (i DomainTagArgs) ToDomainTagOutput() DomainTagOutput {
	return i.ToDomainTagOutputWithContext(context.Background())
}

func (i DomainTagArgs) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagOutput)
}

// DomainTagArrayInput is an input type that accepts DomainTagArray and DomainTagArrayOutput values.
// You can construct a concrete instance of `DomainTagArrayInput` via:
//
//          DomainTagArray{ DomainTagArgs{...} }
type DomainTagArrayInput interface {
	pulumi.Input

	ToDomainTagArrayOutput() DomainTagArrayOutput
	ToDomainTagArrayOutputWithContext(context.Context) DomainTagArrayOutput
}

type DomainTagArray []DomainTagInput

func (DomainTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (i DomainTagArray) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return i.ToDomainTagArrayOutputWithContext(context.Background())
}

func (i DomainTagArray) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagArrayOutput)
}

type DomainTagOutput struct{ *pulumi.OutputState }

func (DomainTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (o DomainTagOutput) ToDomainTagOutput() DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return o
}

func (o DomainTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DomainTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Value }).(pulumi.StringOutput)
}

type DomainTagArrayOutput struct{ *pulumi.OutputState }

func (DomainTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) Index(i pulumi.IntInput) DomainTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainTag {
		return vs[0].([]DomainTag)[vs[1].(int)]
	}).(DomainTagOutput)
}

type IntegrationConnectorOperator struct {
	Marketo    *string `pulumi:"marketo"`
	S3         *string `pulumi:"s3"`
	Salesforce *string `pulumi:"salesforce"`
	ServiceNow *string `pulumi:"serviceNow"`
	Zendesk    *string `pulumi:"zendesk"`
}

// IntegrationConnectorOperatorInput is an input type that accepts IntegrationConnectorOperatorArgs and IntegrationConnectorOperatorOutput values.
// You can construct a concrete instance of `IntegrationConnectorOperatorInput` via:
//
//          IntegrationConnectorOperatorArgs{...}
type IntegrationConnectorOperatorInput interface {
	pulumi.Input

	ToIntegrationConnectorOperatorOutput() IntegrationConnectorOperatorOutput
	ToIntegrationConnectorOperatorOutputWithContext(context.Context) IntegrationConnectorOperatorOutput
}

type IntegrationConnectorOperatorArgs struct {
	Marketo    pulumi.StringPtrInput `pulumi:"marketo"`
	S3         pulumi.StringPtrInput `pulumi:"s3"`
	Salesforce pulumi.StringPtrInput `pulumi:"salesforce"`
	ServiceNow pulumi.StringPtrInput `pulumi:"serviceNow"`
	Zendesk    pulumi.StringPtrInput `pulumi:"zendesk"`
}

func (IntegrationConnectorOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationConnectorOperator)(nil)).Elem()
}

func (i IntegrationConnectorOperatorArgs) ToIntegrationConnectorOperatorOutput() IntegrationConnectorOperatorOutput {
	return i.ToIntegrationConnectorOperatorOutputWithContext(context.Background())
}

func (i IntegrationConnectorOperatorArgs) ToIntegrationConnectorOperatorOutputWithContext(ctx context.Context) IntegrationConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationConnectorOperatorOutput)
}

func (i IntegrationConnectorOperatorArgs) ToIntegrationConnectorOperatorPtrOutput() IntegrationConnectorOperatorPtrOutput {
	return i.ToIntegrationConnectorOperatorPtrOutputWithContext(context.Background())
}

func (i IntegrationConnectorOperatorArgs) ToIntegrationConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationConnectorOperatorOutput).ToIntegrationConnectorOperatorPtrOutputWithContext(ctx)
}

// IntegrationConnectorOperatorPtrInput is an input type that accepts IntegrationConnectorOperatorArgs, IntegrationConnectorOperatorPtr and IntegrationConnectorOperatorPtrOutput values.
// You can construct a concrete instance of `IntegrationConnectorOperatorPtrInput` via:
//
//          IntegrationConnectorOperatorArgs{...}
//
//  or:
//
//          nil
type IntegrationConnectorOperatorPtrInput interface {
	pulumi.Input

	ToIntegrationConnectorOperatorPtrOutput() IntegrationConnectorOperatorPtrOutput
	ToIntegrationConnectorOperatorPtrOutputWithContext(context.Context) IntegrationConnectorOperatorPtrOutput
}

type integrationConnectorOperatorPtrType IntegrationConnectorOperatorArgs

func IntegrationConnectorOperatorPtr(v *IntegrationConnectorOperatorArgs) IntegrationConnectorOperatorPtrInput {
	return (*integrationConnectorOperatorPtrType)(v)
}

func (*integrationConnectorOperatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationConnectorOperator)(nil)).Elem()
}

func (i *integrationConnectorOperatorPtrType) ToIntegrationConnectorOperatorPtrOutput() IntegrationConnectorOperatorPtrOutput {
	return i.ToIntegrationConnectorOperatorPtrOutputWithContext(context.Background())
}

func (i *integrationConnectorOperatorPtrType) ToIntegrationConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationConnectorOperatorPtrOutput)
}

type IntegrationConnectorOperatorOutput struct{ *pulumi.OutputState }

func (IntegrationConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationConnectorOperator)(nil)).Elem()
}

func (o IntegrationConnectorOperatorOutput) ToIntegrationConnectorOperatorOutput() IntegrationConnectorOperatorOutput {
	return o
}

func (o IntegrationConnectorOperatorOutput) ToIntegrationConnectorOperatorOutputWithContext(ctx context.Context) IntegrationConnectorOperatorOutput {
	return o
}

func (o IntegrationConnectorOperatorOutput) ToIntegrationConnectorOperatorPtrOutput() IntegrationConnectorOperatorPtrOutput {
	return o.ToIntegrationConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o IntegrationConnectorOperatorOutput) ToIntegrationConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationConnectorOperator) *IntegrationConnectorOperator {
		return &v
	}).(IntegrationConnectorOperatorPtrOutput)
}

func (o IntegrationConnectorOperatorOutput) Marketo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationConnectorOperator) *string { return v.Marketo }).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorOutput) S3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationConnectorOperator) *string { return v.S3 }).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorOutput) Salesforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationConnectorOperator) *string { return v.Salesforce }).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorOutput) ServiceNow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationConnectorOperator) *string { return v.ServiceNow }).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorOutput) Zendesk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationConnectorOperator) *string { return v.Zendesk }).(pulumi.StringPtrOutput)
}

type IntegrationConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (IntegrationConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationConnectorOperator)(nil)).Elem()
}

func (o IntegrationConnectorOperatorPtrOutput) ToIntegrationConnectorOperatorPtrOutput() IntegrationConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationConnectorOperatorPtrOutput) ToIntegrationConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationConnectorOperatorPtrOutput) Elem() IntegrationConnectorOperatorOutput {
	return o.ApplyT(func(v *IntegrationConnectorOperator) IntegrationConnectorOperator {
		if v != nil {
			return *v
		}
		var ret IntegrationConnectorOperator
		return ret
	}).(IntegrationConnectorOperatorOutput)
}

func (o IntegrationConnectorOperatorPtrOutput) Marketo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorPtrOutput) S3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.S3
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorPtrOutput) Salesforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorPtrOutput) ServiceNow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationConnectorOperatorPtrOutput) Zendesk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.StringPtrOutput)
}

type IntegrationFlowDefinition struct {
	Description      *string                     `pulumi:"description"`
	FlowName         string                      `pulumi:"flowName"`
	KmsArn           string                      `pulumi:"kmsArn"`
	SourceFlowConfig IntegrationSourceFlowConfig `pulumi:"sourceFlowConfig"`
	Tasks            []IntegrationTask           `pulumi:"tasks"`
	TriggerConfig    IntegrationTriggerConfig    `pulumi:"triggerConfig"`
}

// IntegrationFlowDefinitionInput is an input type that accepts IntegrationFlowDefinitionArgs and IntegrationFlowDefinitionOutput values.
// You can construct a concrete instance of `IntegrationFlowDefinitionInput` via:
//
//          IntegrationFlowDefinitionArgs{...}
type IntegrationFlowDefinitionInput interface {
	pulumi.Input

	ToIntegrationFlowDefinitionOutput() IntegrationFlowDefinitionOutput
	ToIntegrationFlowDefinitionOutputWithContext(context.Context) IntegrationFlowDefinitionOutput
}

type IntegrationFlowDefinitionArgs struct {
	Description      pulumi.StringPtrInput            `pulumi:"description"`
	FlowName         pulumi.StringInput               `pulumi:"flowName"`
	KmsArn           pulumi.StringInput               `pulumi:"kmsArn"`
	SourceFlowConfig IntegrationSourceFlowConfigInput `pulumi:"sourceFlowConfig"`
	Tasks            IntegrationTaskArrayInput        `pulumi:"tasks"`
	TriggerConfig    IntegrationTriggerConfigInput    `pulumi:"triggerConfig"`
}

func (IntegrationFlowDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationFlowDefinition)(nil)).Elem()
}

func (i IntegrationFlowDefinitionArgs) ToIntegrationFlowDefinitionOutput() IntegrationFlowDefinitionOutput {
	return i.ToIntegrationFlowDefinitionOutputWithContext(context.Background())
}

func (i IntegrationFlowDefinitionArgs) ToIntegrationFlowDefinitionOutputWithContext(ctx context.Context) IntegrationFlowDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationFlowDefinitionOutput)
}

func (i IntegrationFlowDefinitionArgs) ToIntegrationFlowDefinitionPtrOutput() IntegrationFlowDefinitionPtrOutput {
	return i.ToIntegrationFlowDefinitionPtrOutputWithContext(context.Background())
}

func (i IntegrationFlowDefinitionArgs) ToIntegrationFlowDefinitionPtrOutputWithContext(ctx context.Context) IntegrationFlowDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationFlowDefinitionOutput).ToIntegrationFlowDefinitionPtrOutputWithContext(ctx)
}

// IntegrationFlowDefinitionPtrInput is an input type that accepts IntegrationFlowDefinitionArgs, IntegrationFlowDefinitionPtr and IntegrationFlowDefinitionPtrOutput values.
// You can construct a concrete instance of `IntegrationFlowDefinitionPtrInput` via:
//
//          IntegrationFlowDefinitionArgs{...}
//
//  or:
//
//          nil
type IntegrationFlowDefinitionPtrInput interface {
	pulumi.Input

	ToIntegrationFlowDefinitionPtrOutput() IntegrationFlowDefinitionPtrOutput
	ToIntegrationFlowDefinitionPtrOutputWithContext(context.Context) IntegrationFlowDefinitionPtrOutput
}

type integrationFlowDefinitionPtrType IntegrationFlowDefinitionArgs

func IntegrationFlowDefinitionPtr(v *IntegrationFlowDefinitionArgs) IntegrationFlowDefinitionPtrInput {
	return (*integrationFlowDefinitionPtrType)(v)
}

func (*integrationFlowDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationFlowDefinition)(nil)).Elem()
}

func (i *integrationFlowDefinitionPtrType) ToIntegrationFlowDefinitionPtrOutput() IntegrationFlowDefinitionPtrOutput {
	return i.ToIntegrationFlowDefinitionPtrOutputWithContext(context.Background())
}

func (i *integrationFlowDefinitionPtrType) ToIntegrationFlowDefinitionPtrOutputWithContext(ctx context.Context) IntegrationFlowDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationFlowDefinitionPtrOutput)
}

type IntegrationFlowDefinitionOutput struct{ *pulumi.OutputState }

func (IntegrationFlowDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationFlowDefinition)(nil)).Elem()
}

func (o IntegrationFlowDefinitionOutput) ToIntegrationFlowDefinitionOutput() IntegrationFlowDefinitionOutput {
	return o
}

func (o IntegrationFlowDefinitionOutput) ToIntegrationFlowDefinitionOutputWithContext(ctx context.Context) IntegrationFlowDefinitionOutput {
	return o
}

func (o IntegrationFlowDefinitionOutput) ToIntegrationFlowDefinitionPtrOutput() IntegrationFlowDefinitionPtrOutput {
	return o.ToIntegrationFlowDefinitionPtrOutputWithContext(context.Background())
}

func (o IntegrationFlowDefinitionOutput) ToIntegrationFlowDefinitionPtrOutputWithContext(ctx context.Context) IntegrationFlowDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationFlowDefinition) *IntegrationFlowDefinition {
		return &v
	}).(IntegrationFlowDefinitionPtrOutput)
}

func (o IntegrationFlowDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationFlowDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IntegrationFlowDefinitionOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationFlowDefinition) string { return v.FlowName }).(pulumi.StringOutput)
}

func (o IntegrationFlowDefinitionOutput) KmsArn() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationFlowDefinition) string { return v.KmsArn }).(pulumi.StringOutput)
}

func (o IntegrationFlowDefinitionOutput) SourceFlowConfig() IntegrationSourceFlowConfigOutput {
	return o.ApplyT(func(v IntegrationFlowDefinition) IntegrationSourceFlowConfig { return v.SourceFlowConfig }).(IntegrationSourceFlowConfigOutput)
}

func (o IntegrationFlowDefinitionOutput) Tasks() IntegrationTaskArrayOutput {
	return o.ApplyT(func(v IntegrationFlowDefinition) []IntegrationTask { return v.Tasks }).(IntegrationTaskArrayOutput)
}

func (o IntegrationFlowDefinitionOutput) TriggerConfig() IntegrationTriggerConfigOutput {
	return o.ApplyT(func(v IntegrationFlowDefinition) IntegrationTriggerConfig { return v.TriggerConfig }).(IntegrationTriggerConfigOutput)
}

type IntegrationFlowDefinitionPtrOutput struct{ *pulumi.OutputState }

func (IntegrationFlowDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationFlowDefinition)(nil)).Elem()
}

func (o IntegrationFlowDefinitionPtrOutput) ToIntegrationFlowDefinitionPtrOutput() IntegrationFlowDefinitionPtrOutput {
	return o
}

func (o IntegrationFlowDefinitionPtrOutput) ToIntegrationFlowDefinitionPtrOutputWithContext(ctx context.Context) IntegrationFlowDefinitionPtrOutput {
	return o
}

func (o IntegrationFlowDefinitionPtrOutput) Elem() IntegrationFlowDefinitionOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) IntegrationFlowDefinition {
		if v != nil {
			return *v
		}
		var ret IntegrationFlowDefinition
		return ret
	}).(IntegrationFlowDefinitionOutput)
}

func (o IntegrationFlowDefinitionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationFlowDefinitionPtrOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.FlowName
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationFlowDefinitionPtrOutput) KmsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.KmsArn
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationFlowDefinitionPtrOutput) SourceFlowConfig() IntegrationSourceFlowConfigPtrOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) *IntegrationSourceFlowConfig {
		if v == nil {
			return nil
		}
		return &v.SourceFlowConfig
	}).(IntegrationSourceFlowConfigPtrOutput)
}

func (o IntegrationFlowDefinitionPtrOutput) Tasks() IntegrationTaskArrayOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) []IntegrationTask {
		if v == nil {
			return nil
		}
		return v.Tasks
	}).(IntegrationTaskArrayOutput)
}

func (o IntegrationFlowDefinitionPtrOutput) TriggerConfig() IntegrationTriggerConfigPtrOutput {
	return o.ApplyT(func(v *IntegrationFlowDefinition) *IntegrationTriggerConfig {
		if v == nil {
			return nil
		}
		return &v.TriggerConfig
	}).(IntegrationTriggerConfigPtrOutput)
}

type IntegrationIncrementalPullConfig struct {
	DatetimeTypeFieldName *string `pulumi:"datetimeTypeFieldName"`
}

// IntegrationIncrementalPullConfigInput is an input type that accepts IntegrationIncrementalPullConfigArgs and IntegrationIncrementalPullConfigOutput values.
// You can construct a concrete instance of `IntegrationIncrementalPullConfigInput` via:
//
//          IntegrationIncrementalPullConfigArgs{...}
type IntegrationIncrementalPullConfigInput interface {
	pulumi.Input

	ToIntegrationIncrementalPullConfigOutput() IntegrationIncrementalPullConfigOutput
	ToIntegrationIncrementalPullConfigOutputWithContext(context.Context) IntegrationIncrementalPullConfigOutput
}

type IntegrationIncrementalPullConfigArgs struct {
	DatetimeTypeFieldName pulumi.StringPtrInput `pulumi:"datetimeTypeFieldName"`
}

func (IntegrationIncrementalPullConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationIncrementalPullConfig)(nil)).Elem()
}

func (i IntegrationIncrementalPullConfigArgs) ToIntegrationIncrementalPullConfigOutput() IntegrationIncrementalPullConfigOutput {
	return i.ToIntegrationIncrementalPullConfigOutputWithContext(context.Background())
}

func (i IntegrationIncrementalPullConfigArgs) ToIntegrationIncrementalPullConfigOutputWithContext(ctx context.Context) IntegrationIncrementalPullConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationIncrementalPullConfigOutput)
}

func (i IntegrationIncrementalPullConfigArgs) ToIntegrationIncrementalPullConfigPtrOutput() IntegrationIncrementalPullConfigPtrOutput {
	return i.ToIntegrationIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (i IntegrationIncrementalPullConfigArgs) ToIntegrationIncrementalPullConfigPtrOutputWithContext(ctx context.Context) IntegrationIncrementalPullConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationIncrementalPullConfigOutput).ToIntegrationIncrementalPullConfigPtrOutputWithContext(ctx)
}

// IntegrationIncrementalPullConfigPtrInput is an input type that accepts IntegrationIncrementalPullConfigArgs, IntegrationIncrementalPullConfigPtr and IntegrationIncrementalPullConfigPtrOutput values.
// You can construct a concrete instance of `IntegrationIncrementalPullConfigPtrInput` via:
//
//          IntegrationIncrementalPullConfigArgs{...}
//
//  or:
//
//          nil
type IntegrationIncrementalPullConfigPtrInput interface {
	pulumi.Input

	ToIntegrationIncrementalPullConfigPtrOutput() IntegrationIncrementalPullConfigPtrOutput
	ToIntegrationIncrementalPullConfigPtrOutputWithContext(context.Context) IntegrationIncrementalPullConfigPtrOutput
}

type integrationIncrementalPullConfigPtrType IntegrationIncrementalPullConfigArgs

func IntegrationIncrementalPullConfigPtr(v *IntegrationIncrementalPullConfigArgs) IntegrationIncrementalPullConfigPtrInput {
	return (*integrationIncrementalPullConfigPtrType)(v)
}

func (*integrationIncrementalPullConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationIncrementalPullConfig)(nil)).Elem()
}

func (i *integrationIncrementalPullConfigPtrType) ToIntegrationIncrementalPullConfigPtrOutput() IntegrationIncrementalPullConfigPtrOutput {
	return i.ToIntegrationIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (i *integrationIncrementalPullConfigPtrType) ToIntegrationIncrementalPullConfigPtrOutputWithContext(ctx context.Context) IntegrationIncrementalPullConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationIncrementalPullConfigPtrOutput)
}

type IntegrationIncrementalPullConfigOutput struct{ *pulumi.OutputState }

func (IntegrationIncrementalPullConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationIncrementalPullConfig)(nil)).Elem()
}

func (o IntegrationIncrementalPullConfigOutput) ToIntegrationIncrementalPullConfigOutput() IntegrationIncrementalPullConfigOutput {
	return o
}

func (o IntegrationIncrementalPullConfigOutput) ToIntegrationIncrementalPullConfigOutputWithContext(ctx context.Context) IntegrationIncrementalPullConfigOutput {
	return o
}

func (o IntegrationIncrementalPullConfigOutput) ToIntegrationIncrementalPullConfigPtrOutput() IntegrationIncrementalPullConfigPtrOutput {
	return o.ToIntegrationIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (o IntegrationIncrementalPullConfigOutput) ToIntegrationIncrementalPullConfigPtrOutputWithContext(ctx context.Context) IntegrationIncrementalPullConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationIncrementalPullConfig) *IntegrationIncrementalPullConfig {
		return &v
	}).(IntegrationIncrementalPullConfigPtrOutput)
}

func (o IntegrationIncrementalPullConfigOutput) DatetimeTypeFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationIncrementalPullConfig) *string { return v.DatetimeTypeFieldName }).(pulumi.StringPtrOutput)
}

type IntegrationIncrementalPullConfigPtrOutput struct{ *pulumi.OutputState }

func (IntegrationIncrementalPullConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationIncrementalPullConfig)(nil)).Elem()
}

func (o IntegrationIncrementalPullConfigPtrOutput) ToIntegrationIncrementalPullConfigPtrOutput() IntegrationIncrementalPullConfigPtrOutput {
	return o
}

func (o IntegrationIncrementalPullConfigPtrOutput) ToIntegrationIncrementalPullConfigPtrOutputWithContext(ctx context.Context) IntegrationIncrementalPullConfigPtrOutput {
	return o
}

func (o IntegrationIncrementalPullConfigPtrOutput) Elem() IntegrationIncrementalPullConfigOutput {
	return o.ApplyT(func(v *IntegrationIncrementalPullConfig) IntegrationIncrementalPullConfig {
		if v != nil {
			return *v
		}
		var ret IntegrationIncrementalPullConfig
		return ret
	}).(IntegrationIncrementalPullConfigOutput)
}

func (o IntegrationIncrementalPullConfigPtrOutput) DatetimeTypeFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationIncrementalPullConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatetimeTypeFieldName
	}).(pulumi.StringPtrOutput)
}

type IntegrationMarketoSourceProperties struct {
	Object string `pulumi:"object"`
}

// IntegrationMarketoSourcePropertiesInput is an input type that accepts IntegrationMarketoSourcePropertiesArgs and IntegrationMarketoSourcePropertiesOutput values.
// You can construct a concrete instance of `IntegrationMarketoSourcePropertiesInput` via:
//
//          IntegrationMarketoSourcePropertiesArgs{...}
type IntegrationMarketoSourcePropertiesInput interface {
	pulumi.Input

	ToIntegrationMarketoSourcePropertiesOutput() IntegrationMarketoSourcePropertiesOutput
	ToIntegrationMarketoSourcePropertiesOutputWithContext(context.Context) IntegrationMarketoSourcePropertiesOutput
}

type IntegrationMarketoSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (IntegrationMarketoSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMarketoSourceProperties)(nil)).Elem()
}

func (i IntegrationMarketoSourcePropertiesArgs) ToIntegrationMarketoSourcePropertiesOutput() IntegrationMarketoSourcePropertiesOutput {
	return i.ToIntegrationMarketoSourcePropertiesOutputWithContext(context.Background())
}

func (i IntegrationMarketoSourcePropertiesArgs) ToIntegrationMarketoSourcePropertiesOutputWithContext(ctx context.Context) IntegrationMarketoSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMarketoSourcePropertiesOutput)
}

func (i IntegrationMarketoSourcePropertiesArgs) ToIntegrationMarketoSourcePropertiesPtrOutput() IntegrationMarketoSourcePropertiesPtrOutput {
	return i.ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationMarketoSourcePropertiesArgs) ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationMarketoSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMarketoSourcePropertiesOutput).ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(ctx)
}

// IntegrationMarketoSourcePropertiesPtrInput is an input type that accepts IntegrationMarketoSourcePropertiesArgs, IntegrationMarketoSourcePropertiesPtr and IntegrationMarketoSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationMarketoSourcePropertiesPtrInput` via:
//
//          IntegrationMarketoSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationMarketoSourcePropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationMarketoSourcePropertiesPtrOutput() IntegrationMarketoSourcePropertiesPtrOutput
	ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(context.Context) IntegrationMarketoSourcePropertiesPtrOutput
}

type integrationMarketoSourcePropertiesPtrType IntegrationMarketoSourcePropertiesArgs

func IntegrationMarketoSourcePropertiesPtr(v *IntegrationMarketoSourcePropertiesArgs) IntegrationMarketoSourcePropertiesPtrInput {
	return (*integrationMarketoSourcePropertiesPtrType)(v)
}

func (*integrationMarketoSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMarketoSourceProperties)(nil)).Elem()
}

func (i *integrationMarketoSourcePropertiesPtrType) ToIntegrationMarketoSourcePropertiesPtrOutput() IntegrationMarketoSourcePropertiesPtrOutput {
	return i.ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationMarketoSourcePropertiesPtrType) ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationMarketoSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMarketoSourcePropertiesPtrOutput)
}

type IntegrationMarketoSourcePropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationMarketoSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMarketoSourceProperties)(nil)).Elem()
}

func (o IntegrationMarketoSourcePropertiesOutput) ToIntegrationMarketoSourcePropertiesOutput() IntegrationMarketoSourcePropertiesOutput {
	return o
}

func (o IntegrationMarketoSourcePropertiesOutput) ToIntegrationMarketoSourcePropertiesOutputWithContext(ctx context.Context) IntegrationMarketoSourcePropertiesOutput {
	return o
}

func (o IntegrationMarketoSourcePropertiesOutput) ToIntegrationMarketoSourcePropertiesPtrOutput() IntegrationMarketoSourcePropertiesPtrOutput {
	return o.ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationMarketoSourcePropertiesOutput) ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationMarketoSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationMarketoSourceProperties) *IntegrationMarketoSourceProperties {
		return &v
	}).(IntegrationMarketoSourcePropertiesPtrOutput)
}

func (o IntegrationMarketoSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationMarketoSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type IntegrationMarketoSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationMarketoSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMarketoSourceProperties)(nil)).Elem()
}

func (o IntegrationMarketoSourcePropertiesPtrOutput) ToIntegrationMarketoSourcePropertiesPtrOutput() IntegrationMarketoSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationMarketoSourcePropertiesPtrOutput) ToIntegrationMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationMarketoSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationMarketoSourcePropertiesPtrOutput) Elem() IntegrationMarketoSourcePropertiesOutput {
	return o.ApplyT(func(v *IntegrationMarketoSourceProperties) IntegrationMarketoSourceProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationMarketoSourceProperties
		return ret
	}).(IntegrationMarketoSourcePropertiesOutput)
}

func (o IntegrationMarketoSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationMarketoSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type IntegrationS3SourceProperties struct {
	BucketName   string  `pulumi:"bucketName"`
	BucketPrefix *string `pulumi:"bucketPrefix"`
}

// IntegrationS3SourcePropertiesInput is an input type that accepts IntegrationS3SourcePropertiesArgs and IntegrationS3SourcePropertiesOutput values.
// You can construct a concrete instance of `IntegrationS3SourcePropertiesInput` via:
//
//          IntegrationS3SourcePropertiesArgs{...}
type IntegrationS3SourcePropertiesInput interface {
	pulumi.Input

	ToIntegrationS3SourcePropertiesOutput() IntegrationS3SourcePropertiesOutput
	ToIntegrationS3SourcePropertiesOutputWithContext(context.Context) IntegrationS3SourcePropertiesOutput
}

type IntegrationS3SourcePropertiesArgs struct {
	BucketName   pulumi.StringInput    `pulumi:"bucketName"`
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
}

func (IntegrationS3SourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationS3SourceProperties)(nil)).Elem()
}

func (i IntegrationS3SourcePropertiesArgs) ToIntegrationS3SourcePropertiesOutput() IntegrationS3SourcePropertiesOutput {
	return i.ToIntegrationS3SourcePropertiesOutputWithContext(context.Background())
}

func (i IntegrationS3SourcePropertiesArgs) ToIntegrationS3SourcePropertiesOutputWithContext(ctx context.Context) IntegrationS3SourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationS3SourcePropertiesOutput)
}

func (i IntegrationS3SourcePropertiesArgs) ToIntegrationS3SourcePropertiesPtrOutput() IntegrationS3SourcePropertiesPtrOutput {
	return i.ToIntegrationS3SourcePropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationS3SourcePropertiesArgs) ToIntegrationS3SourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationS3SourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationS3SourcePropertiesOutput).ToIntegrationS3SourcePropertiesPtrOutputWithContext(ctx)
}

// IntegrationS3SourcePropertiesPtrInput is an input type that accepts IntegrationS3SourcePropertiesArgs, IntegrationS3SourcePropertiesPtr and IntegrationS3SourcePropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationS3SourcePropertiesPtrInput` via:
//
//          IntegrationS3SourcePropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationS3SourcePropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationS3SourcePropertiesPtrOutput() IntegrationS3SourcePropertiesPtrOutput
	ToIntegrationS3SourcePropertiesPtrOutputWithContext(context.Context) IntegrationS3SourcePropertiesPtrOutput
}

type integrationS3SourcePropertiesPtrType IntegrationS3SourcePropertiesArgs

func IntegrationS3SourcePropertiesPtr(v *IntegrationS3SourcePropertiesArgs) IntegrationS3SourcePropertiesPtrInput {
	return (*integrationS3SourcePropertiesPtrType)(v)
}

func (*integrationS3SourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationS3SourceProperties)(nil)).Elem()
}

func (i *integrationS3SourcePropertiesPtrType) ToIntegrationS3SourcePropertiesPtrOutput() IntegrationS3SourcePropertiesPtrOutput {
	return i.ToIntegrationS3SourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationS3SourcePropertiesPtrType) ToIntegrationS3SourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationS3SourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationS3SourcePropertiesPtrOutput)
}

type IntegrationS3SourcePropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationS3SourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationS3SourceProperties)(nil)).Elem()
}

func (o IntegrationS3SourcePropertiesOutput) ToIntegrationS3SourcePropertiesOutput() IntegrationS3SourcePropertiesOutput {
	return o
}

func (o IntegrationS3SourcePropertiesOutput) ToIntegrationS3SourcePropertiesOutputWithContext(ctx context.Context) IntegrationS3SourcePropertiesOutput {
	return o
}

func (o IntegrationS3SourcePropertiesOutput) ToIntegrationS3SourcePropertiesPtrOutput() IntegrationS3SourcePropertiesPtrOutput {
	return o.ToIntegrationS3SourcePropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationS3SourcePropertiesOutput) ToIntegrationS3SourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationS3SourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationS3SourceProperties) *IntegrationS3SourceProperties {
		return &v
	}).(IntegrationS3SourcePropertiesPtrOutput)
}

func (o IntegrationS3SourcePropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationS3SourceProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o IntegrationS3SourcePropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationS3SourceProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

type IntegrationS3SourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationS3SourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationS3SourceProperties)(nil)).Elem()
}

func (o IntegrationS3SourcePropertiesPtrOutput) ToIntegrationS3SourcePropertiesPtrOutput() IntegrationS3SourcePropertiesPtrOutput {
	return o
}

func (o IntegrationS3SourcePropertiesPtrOutput) ToIntegrationS3SourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationS3SourcePropertiesPtrOutput {
	return o
}

func (o IntegrationS3SourcePropertiesPtrOutput) Elem() IntegrationS3SourcePropertiesOutput {
	return o.ApplyT(func(v *IntegrationS3SourceProperties) IntegrationS3SourceProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationS3SourceProperties
		return ret
	}).(IntegrationS3SourcePropertiesOutput)
}

func (o IntegrationS3SourcePropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationS3SourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationS3SourcePropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationS3SourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

type IntegrationSalesforceSourceProperties struct {
	EnableDynamicFieldUpdate *bool  `pulumi:"enableDynamicFieldUpdate"`
	IncludeDeletedRecords    *bool  `pulumi:"includeDeletedRecords"`
	Object                   string `pulumi:"object"`
}

// IntegrationSalesforceSourcePropertiesInput is an input type that accepts IntegrationSalesforceSourcePropertiesArgs and IntegrationSalesforceSourcePropertiesOutput values.
// You can construct a concrete instance of `IntegrationSalesforceSourcePropertiesInput` via:
//
//          IntegrationSalesforceSourcePropertiesArgs{...}
type IntegrationSalesforceSourcePropertiesInput interface {
	pulumi.Input

	ToIntegrationSalesforceSourcePropertiesOutput() IntegrationSalesforceSourcePropertiesOutput
	ToIntegrationSalesforceSourcePropertiesOutputWithContext(context.Context) IntegrationSalesforceSourcePropertiesOutput
}

type IntegrationSalesforceSourcePropertiesArgs struct {
	EnableDynamicFieldUpdate pulumi.BoolPtrInput `pulumi:"enableDynamicFieldUpdate"`
	IncludeDeletedRecords    pulumi.BoolPtrInput `pulumi:"includeDeletedRecords"`
	Object                   pulumi.StringInput  `pulumi:"object"`
}

func (IntegrationSalesforceSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSalesforceSourceProperties)(nil)).Elem()
}

func (i IntegrationSalesforceSourcePropertiesArgs) ToIntegrationSalesforceSourcePropertiesOutput() IntegrationSalesforceSourcePropertiesOutput {
	return i.ToIntegrationSalesforceSourcePropertiesOutputWithContext(context.Background())
}

func (i IntegrationSalesforceSourcePropertiesArgs) ToIntegrationSalesforceSourcePropertiesOutputWithContext(ctx context.Context) IntegrationSalesforceSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSalesforceSourcePropertiesOutput)
}

func (i IntegrationSalesforceSourcePropertiesArgs) ToIntegrationSalesforceSourcePropertiesPtrOutput() IntegrationSalesforceSourcePropertiesPtrOutput {
	return i.ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationSalesforceSourcePropertiesArgs) ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationSalesforceSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSalesforceSourcePropertiesOutput).ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(ctx)
}

// IntegrationSalesforceSourcePropertiesPtrInput is an input type that accepts IntegrationSalesforceSourcePropertiesArgs, IntegrationSalesforceSourcePropertiesPtr and IntegrationSalesforceSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationSalesforceSourcePropertiesPtrInput` via:
//
//          IntegrationSalesforceSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationSalesforceSourcePropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationSalesforceSourcePropertiesPtrOutput() IntegrationSalesforceSourcePropertiesPtrOutput
	ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(context.Context) IntegrationSalesforceSourcePropertiesPtrOutput
}

type integrationSalesforceSourcePropertiesPtrType IntegrationSalesforceSourcePropertiesArgs

func IntegrationSalesforceSourcePropertiesPtr(v *IntegrationSalesforceSourcePropertiesArgs) IntegrationSalesforceSourcePropertiesPtrInput {
	return (*integrationSalesforceSourcePropertiesPtrType)(v)
}

func (*integrationSalesforceSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSalesforceSourceProperties)(nil)).Elem()
}

func (i *integrationSalesforceSourcePropertiesPtrType) ToIntegrationSalesforceSourcePropertiesPtrOutput() IntegrationSalesforceSourcePropertiesPtrOutput {
	return i.ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationSalesforceSourcePropertiesPtrType) ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationSalesforceSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSalesforceSourcePropertiesPtrOutput)
}

type IntegrationSalesforceSourcePropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationSalesforceSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSalesforceSourceProperties)(nil)).Elem()
}

func (o IntegrationSalesforceSourcePropertiesOutput) ToIntegrationSalesforceSourcePropertiesOutput() IntegrationSalesforceSourcePropertiesOutput {
	return o
}

func (o IntegrationSalesforceSourcePropertiesOutput) ToIntegrationSalesforceSourcePropertiesOutputWithContext(ctx context.Context) IntegrationSalesforceSourcePropertiesOutput {
	return o
}

func (o IntegrationSalesforceSourcePropertiesOutput) ToIntegrationSalesforceSourcePropertiesPtrOutput() IntegrationSalesforceSourcePropertiesPtrOutput {
	return o.ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationSalesforceSourcePropertiesOutput) ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationSalesforceSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationSalesforceSourceProperties) *IntegrationSalesforceSourceProperties {
		return &v
	}).(IntegrationSalesforceSourcePropertiesPtrOutput)
}

func (o IntegrationSalesforceSourcePropertiesOutput) EnableDynamicFieldUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationSalesforceSourceProperties) *bool { return v.EnableDynamicFieldUpdate }).(pulumi.BoolPtrOutput)
}

func (o IntegrationSalesforceSourcePropertiesOutput) IncludeDeletedRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationSalesforceSourceProperties) *bool { return v.IncludeDeletedRecords }).(pulumi.BoolPtrOutput)
}

func (o IntegrationSalesforceSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationSalesforceSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type IntegrationSalesforceSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationSalesforceSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSalesforceSourceProperties)(nil)).Elem()
}

func (o IntegrationSalesforceSourcePropertiesPtrOutput) ToIntegrationSalesforceSourcePropertiesPtrOutput() IntegrationSalesforceSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationSalesforceSourcePropertiesPtrOutput) ToIntegrationSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationSalesforceSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationSalesforceSourcePropertiesPtrOutput) Elem() IntegrationSalesforceSourcePropertiesOutput {
	return o.ApplyT(func(v *IntegrationSalesforceSourceProperties) IntegrationSalesforceSourceProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationSalesforceSourceProperties
		return ret
	}).(IntegrationSalesforceSourcePropertiesOutput)
}

func (o IntegrationSalesforceSourcePropertiesPtrOutput) EnableDynamicFieldUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationSalesforceSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicFieldUpdate
	}).(pulumi.BoolPtrOutput)
}

func (o IntegrationSalesforceSourcePropertiesPtrOutput) IncludeDeletedRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationSalesforceSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeDeletedRecords
	}).(pulumi.BoolPtrOutput)
}

func (o IntegrationSalesforceSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationSalesforceSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type IntegrationScheduledTriggerProperties struct {
	DataPullMode       *string  `pulumi:"dataPullMode"`
	FirstExecutionFrom *float64 `pulumi:"firstExecutionFrom"`
	ScheduleEndTime    *float64 `pulumi:"scheduleEndTime"`
	ScheduleExpression string   `pulumi:"scheduleExpression"`
	ScheduleOffset     *int     `pulumi:"scheduleOffset"`
	ScheduleStartTime  *float64 `pulumi:"scheduleStartTime"`
	Timezone           *string  `pulumi:"timezone"`
}

// IntegrationScheduledTriggerPropertiesInput is an input type that accepts IntegrationScheduledTriggerPropertiesArgs and IntegrationScheduledTriggerPropertiesOutput values.
// You can construct a concrete instance of `IntegrationScheduledTriggerPropertiesInput` via:
//
//          IntegrationScheduledTriggerPropertiesArgs{...}
type IntegrationScheduledTriggerPropertiesInput interface {
	pulumi.Input

	ToIntegrationScheduledTriggerPropertiesOutput() IntegrationScheduledTriggerPropertiesOutput
	ToIntegrationScheduledTriggerPropertiesOutputWithContext(context.Context) IntegrationScheduledTriggerPropertiesOutput
}

type IntegrationScheduledTriggerPropertiesArgs struct {
	DataPullMode       pulumi.StringPtrInput  `pulumi:"dataPullMode"`
	FirstExecutionFrom pulumi.Float64PtrInput `pulumi:"firstExecutionFrom"`
	ScheduleEndTime    pulumi.Float64PtrInput `pulumi:"scheduleEndTime"`
	ScheduleExpression pulumi.StringInput     `pulumi:"scheduleExpression"`
	ScheduleOffset     pulumi.IntPtrInput     `pulumi:"scheduleOffset"`
	ScheduleStartTime  pulumi.Float64PtrInput `pulumi:"scheduleStartTime"`
	Timezone           pulumi.StringPtrInput  `pulumi:"timezone"`
}

func (IntegrationScheduledTriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationScheduledTriggerProperties)(nil)).Elem()
}

func (i IntegrationScheduledTriggerPropertiesArgs) ToIntegrationScheduledTriggerPropertiesOutput() IntegrationScheduledTriggerPropertiesOutput {
	return i.ToIntegrationScheduledTriggerPropertiesOutputWithContext(context.Background())
}

func (i IntegrationScheduledTriggerPropertiesArgs) ToIntegrationScheduledTriggerPropertiesOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationScheduledTriggerPropertiesOutput)
}

func (i IntegrationScheduledTriggerPropertiesArgs) ToIntegrationScheduledTriggerPropertiesPtrOutput() IntegrationScheduledTriggerPropertiesPtrOutput {
	return i.ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationScheduledTriggerPropertiesArgs) ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationScheduledTriggerPropertiesOutput).ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(ctx)
}

// IntegrationScheduledTriggerPropertiesPtrInput is an input type that accepts IntegrationScheduledTriggerPropertiesArgs, IntegrationScheduledTriggerPropertiesPtr and IntegrationScheduledTriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationScheduledTriggerPropertiesPtrInput` via:
//
//          IntegrationScheduledTriggerPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationScheduledTriggerPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationScheduledTriggerPropertiesPtrOutput() IntegrationScheduledTriggerPropertiesPtrOutput
	ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(context.Context) IntegrationScheduledTriggerPropertiesPtrOutput
}

type integrationScheduledTriggerPropertiesPtrType IntegrationScheduledTriggerPropertiesArgs

func IntegrationScheduledTriggerPropertiesPtr(v *IntegrationScheduledTriggerPropertiesArgs) IntegrationScheduledTriggerPropertiesPtrInput {
	return (*integrationScheduledTriggerPropertiesPtrType)(v)
}

func (*integrationScheduledTriggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationScheduledTriggerProperties)(nil)).Elem()
}

func (i *integrationScheduledTriggerPropertiesPtrType) ToIntegrationScheduledTriggerPropertiesPtrOutput() IntegrationScheduledTriggerPropertiesPtrOutput {
	return i.ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationScheduledTriggerPropertiesPtrType) ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationScheduledTriggerPropertiesPtrOutput)
}

type IntegrationScheduledTriggerPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationScheduledTriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationScheduledTriggerProperties)(nil)).Elem()
}

func (o IntegrationScheduledTriggerPropertiesOutput) ToIntegrationScheduledTriggerPropertiesOutput() IntegrationScheduledTriggerPropertiesOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesOutput) ToIntegrationScheduledTriggerPropertiesOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesOutput) ToIntegrationScheduledTriggerPropertiesPtrOutput() IntegrationScheduledTriggerPropertiesPtrOutput {
	return o.ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationScheduledTriggerPropertiesOutput) ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationScheduledTriggerProperties) *IntegrationScheduledTriggerProperties {
		return &v
	}).(IntegrationScheduledTriggerPropertiesPtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) DataPullMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) *string { return v.DataPullMode }).(pulumi.StringPtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) FirstExecutionFrom() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) *float64 { return v.FirstExecutionFrom }).(pulumi.Float64PtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) ScheduleEndTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) *float64 { return v.ScheduleEndTime }).(pulumi.Float64PtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) ScheduleOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) *int { return v.ScheduleOffset }).(pulumi.IntPtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) ScheduleStartTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) *float64 { return v.ScheduleStartTime }).(pulumi.Float64PtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationScheduledTriggerProperties) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type IntegrationScheduledTriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationScheduledTriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationScheduledTriggerProperties)(nil)).Elem()
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) ToIntegrationScheduledTriggerPropertiesPtrOutput() IntegrationScheduledTriggerPropertiesPtrOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) ToIntegrationScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesPtrOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) Elem() IntegrationScheduledTriggerPropertiesOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) IntegrationScheduledTriggerProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationScheduledTriggerProperties
		return ret
	}).(IntegrationScheduledTriggerPropertiesOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) DataPullMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataPullMode
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) FirstExecutionFrom() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.FirstExecutionFrom
	}).(pulumi.Float64PtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) ScheduleEndTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.ScheduleEndTime
	}).(pulumi.Float64PtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) ScheduleOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleOffset
	}).(pulumi.IntPtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) ScheduleStartTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.ScheduleStartTime
	}).(pulumi.Float64PtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

type IntegrationServiceNowSourceProperties struct {
	Object string `pulumi:"object"`
}

// IntegrationServiceNowSourcePropertiesInput is an input type that accepts IntegrationServiceNowSourcePropertiesArgs and IntegrationServiceNowSourcePropertiesOutput values.
// You can construct a concrete instance of `IntegrationServiceNowSourcePropertiesInput` via:
//
//          IntegrationServiceNowSourcePropertiesArgs{...}
type IntegrationServiceNowSourcePropertiesInput interface {
	pulumi.Input

	ToIntegrationServiceNowSourcePropertiesOutput() IntegrationServiceNowSourcePropertiesOutput
	ToIntegrationServiceNowSourcePropertiesOutputWithContext(context.Context) IntegrationServiceNowSourcePropertiesOutput
}

type IntegrationServiceNowSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (IntegrationServiceNowSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceNowSourceProperties)(nil)).Elem()
}

func (i IntegrationServiceNowSourcePropertiesArgs) ToIntegrationServiceNowSourcePropertiesOutput() IntegrationServiceNowSourcePropertiesOutput {
	return i.ToIntegrationServiceNowSourcePropertiesOutputWithContext(context.Background())
}

func (i IntegrationServiceNowSourcePropertiesArgs) ToIntegrationServiceNowSourcePropertiesOutputWithContext(ctx context.Context) IntegrationServiceNowSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceNowSourcePropertiesOutput)
}

func (i IntegrationServiceNowSourcePropertiesArgs) ToIntegrationServiceNowSourcePropertiesPtrOutput() IntegrationServiceNowSourcePropertiesPtrOutput {
	return i.ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationServiceNowSourcePropertiesArgs) ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationServiceNowSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceNowSourcePropertiesOutput).ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(ctx)
}

// IntegrationServiceNowSourcePropertiesPtrInput is an input type that accepts IntegrationServiceNowSourcePropertiesArgs, IntegrationServiceNowSourcePropertiesPtr and IntegrationServiceNowSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationServiceNowSourcePropertiesPtrInput` via:
//
//          IntegrationServiceNowSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationServiceNowSourcePropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationServiceNowSourcePropertiesPtrOutput() IntegrationServiceNowSourcePropertiesPtrOutput
	ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(context.Context) IntegrationServiceNowSourcePropertiesPtrOutput
}

type integrationServiceNowSourcePropertiesPtrType IntegrationServiceNowSourcePropertiesArgs

func IntegrationServiceNowSourcePropertiesPtr(v *IntegrationServiceNowSourcePropertiesArgs) IntegrationServiceNowSourcePropertiesPtrInput {
	return (*integrationServiceNowSourcePropertiesPtrType)(v)
}

func (*integrationServiceNowSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceNowSourceProperties)(nil)).Elem()
}

func (i *integrationServiceNowSourcePropertiesPtrType) ToIntegrationServiceNowSourcePropertiesPtrOutput() IntegrationServiceNowSourcePropertiesPtrOutput {
	return i.ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationServiceNowSourcePropertiesPtrType) ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationServiceNowSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceNowSourcePropertiesPtrOutput)
}

type IntegrationServiceNowSourcePropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationServiceNowSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceNowSourceProperties)(nil)).Elem()
}

func (o IntegrationServiceNowSourcePropertiesOutput) ToIntegrationServiceNowSourcePropertiesOutput() IntegrationServiceNowSourcePropertiesOutput {
	return o
}

func (o IntegrationServiceNowSourcePropertiesOutput) ToIntegrationServiceNowSourcePropertiesOutputWithContext(ctx context.Context) IntegrationServiceNowSourcePropertiesOutput {
	return o
}

func (o IntegrationServiceNowSourcePropertiesOutput) ToIntegrationServiceNowSourcePropertiesPtrOutput() IntegrationServiceNowSourcePropertiesPtrOutput {
	return o.ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationServiceNowSourcePropertiesOutput) ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationServiceNowSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationServiceNowSourceProperties) *IntegrationServiceNowSourceProperties {
		return &v
	}).(IntegrationServiceNowSourcePropertiesPtrOutput)
}

func (o IntegrationServiceNowSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationServiceNowSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type IntegrationServiceNowSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationServiceNowSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceNowSourceProperties)(nil)).Elem()
}

func (o IntegrationServiceNowSourcePropertiesPtrOutput) ToIntegrationServiceNowSourcePropertiesPtrOutput() IntegrationServiceNowSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationServiceNowSourcePropertiesPtrOutput) ToIntegrationServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationServiceNowSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationServiceNowSourcePropertiesPtrOutput) Elem() IntegrationServiceNowSourcePropertiesOutput {
	return o.ApplyT(func(v *IntegrationServiceNowSourceProperties) IntegrationServiceNowSourceProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationServiceNowSourceProperties
		return ret
	}).(IntegrationServiceNowSourcePropertiesOutput)
}

func (o IntegrationServiceNowSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceNowSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type IntegrationSourceConnectorProperties struct {
	Marketo    *IntegrationMarketoSourceProperties    `pulumi:"marketo"`
	S3         *IntegrationS3SourceProperties         `pulumi:"s3"`
	Salesforce *IntegrationSalesforceSourceProperties `pulumi:"salesforce"`
	ServiceNow *IntegrationServiceNowSourceProperties `pulumi:"serviceNow"`
	Zendesk    *IntegrationZendeskSourceProperties    `pulumi:"zendesk"`
}

// IntegrationSourceConnectorPropertiesInput is an input type that accepts IntegrationSourceConnectorPropertiesArgs and IntegrationSourceConnectorPropertiesOutput values.
// You can construct a concrete instance of `IntegrationSourceConnectorPropertiesInput` via:
//
//          IntegrationSourceConnectorPropertiesArgs{...}
type IntegrationSourceConnectorPropertiesInput interface {
	pulumi.Input

	ToIntegrationSourceConnectorPropertiesOutput() IntegrationSourceConnectorPropertiesOutput
	ToIntegrationSourceConnectorPropertiesOutputWithContext(context.Context) IntegrationSourceConnectorPropertiesOutput
}

type IntegrationSourceConnectorPropertiesArgs struct {
	Marketo    IntegrationMarketoSourcePropertiesPtrInput    `pulumi:"marketo"`
	S3         IntegrationS3SourcePropertiesPtrInput         `pulumi:"s3"`
	Salesforce IntegrationSalesforceSourcePropertiesPtrInput `pulumi:"salesforce"`
	ServiceNow IntegrationServiceNowSourcePropertiesPtrInput `pulumi:"serviceNow"`
	Zendesk    IntegrationZendeskSourcePropertiesPtrInput    `pulumi:"zendesk"`
}

func (IntegrationSourceConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSourceConnectorProperties)(nil)).Elem()
}

func (i IntegrationSourceConnectorPropertiesArgs) ToIntegrationSourceConnectorPropertiesOutput() IntegrationSourceConnectorPropertiesOutput {
	return i.ToIntegrationSourceConnectorPropertiesOutputWithContext(context.Background())
}

func (i IntegrationSourceConnectorPropertiesArgs) ToIntegrationSourceConnectorPropertiesOutputWithContext(ctx context.Context) IntegrationSourceConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSourceConnectorPropertiesOutput)
}

func (i IntegrationSourceConnectorPropertiesArgs) ToIntegrationSourceConnectorPropertiesPtrOutput() IntegrationSourceConnectorPropertiesPtrOutput {
	return i.ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationSourceConnectorPropertiesArgs) ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) IntegrationSourceConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSourceConnectorPropertiesOutput).ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(ctx)
}

// IntegrationSourceConnectorPropertiesPtrInput is an input type that accepts IntegrationSourceConnectorPropertiesArgs, IntegrationSourceConnectorPropertiesPtr and IntegrationSourceConnectorPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationSourceConnectorPropertiesPtrInput` via:
//
//          IntegrationSourceConnectorPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationSourceConnectorPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationSourceConnectorPropertiesPtrOutput() IntegrationSourceConnectorPropertiesPtrOutput
	ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(context.Context) IntegrationSourceConnectorPropertiesPtrOutput
}

type integrationSourceConnectorPropertiesPtrType IntegrationSourceConnectorPropertiesArgs

func IntegrationSourceConnectorPropertiesPtr(v *IntegrationSourceConnectorPropertiesArgs) IntegrationSourceConnectorPropertiesPtrInput {
	return (*integrationSourceConnectorPropertiesPtrType)(v)
}

func (*integrationSourceConnectorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSourceConnectorProperties)(nil)).Elem()
}

func (i *integrationSourceConnectorPropertiesPtrType) ToIntegrationSourceConnectorPropertiesPtrOutput() IntegrationSourceConnectorPropertiesPtrOutput {
	return i.ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationSourceConnectorPropertiesPtrType) ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) IntegrationSourceConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSourceConnectorPropertiesPtrOutput)
}

type IntegrationSourceConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationSourceConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSourceConnectorProperties)(nil)).Elem()
}

func (o IntegrationSourceConnectorPropertiesOutput) ToIntegrationSourceConnectorPropertiesOutput() IntegrationSourceConnectorPropertiesOutput {
	return o
}

func (o IntegrationSourceConnectorPropertiesOutput) ToIntegrationSourceConnectorPropertiesOutputWithContext(ctx context.Context) IntegrationSourceConnectorPropertiesOutput {
	return o
}

func (o IntegrationSourceConnectorPropertiesOutput) ToIntegrationSourceConnectorPropertiesPtrOutput() IntegrationSourceConnectorPropertiesPtrOutput {
	return o.ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationSourceConnectorPropertiesOutput) ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) IntegrationSourceConnectorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationSourceConnectorProperties) *IntegrationSourceConnectorProperties {
		return &v
	}).(IntegrationSourceConnectorPropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesOutput) Marketo() IntegrationMarketoSourcePropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationSourceConnectorProperties) *IntegrationMarketoSourceProperties { return v.Marketo }).(IntegrationMarketoSourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesOutput) S3() IntegrationS3SourcePropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationSourceConnectorProperties) *IntegrationS3SourceProperties { return v.S3 }).(IntegrationS3SourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesOutput) Salesforce() IntegrationSalesforceSourcePropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationSourceConnectorProperties) *IntegrationSalesforceSourceProperties {
		return v.Salesforce
	}).(IntegrationSalesforceSourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesOutput) ServiceNow() IntegrationServiceNowSourcePropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationSourceConnectorProperties) *IntegrationServiceNowSourceProperties {
		return v.ServiceNow
	}).(IntegrationServiceNowSourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesOutput) Zendesk() IntegrationZendeskSourcePropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationSourceConnectorProperties) *IntegrationZendeskSourceProperties { return v.Zendesk }).(IntegrationZendeskSourcePropertiesPtrOutput)
}

type IntegrationSourceConnectorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationSourceConnectorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSourceConnectorProperties)(nil)).Elem()
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) ToIntegrationSourceConnectorPropertiesPtrOutput() IntegrationSourceConnectorPropertiesPtrOutput {
	return o
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) ToIntegrationSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) IntegrationSourceConnectorPropertiesPtrOutput {
	return o
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) Elem() IntegrationSourceConnectorPropertiesOutput {
	return o.ApplyT(func(v *IntegrationSourceConnectorProperties) IntegrationSourceConnectorProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationSourceConnectorProperties
		return ret
	}).(IntegrationSourceConnectorPropertiesOutput)
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) Marketo() IntegrationMarketoSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceConnectorProperties) *IntegrationMarketoSourceProperties {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(IntegrationMarketoSourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) S3() IntegrationS3SourcePropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceConnectorProperties) *IntegrationS3SourceProperties {
		if v == nil {
			return nil
		}
		return v.S3
	}).(IntegrationS3SourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) Salesforce() IntegrationSalesforceSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceConnectorProperties) *IntegrationSalesforceSourceProperties {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(IntegrationSalesforceSourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) ServiceNow() IntegrationServiceNowSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceConnectorProperties) *IntegrationServiceNowSourceProperties {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(IntegrationServiceNowSourcePropertiesPtrOutput)
}

func (o IntegrationSourceConnectorPropertiesPtrOutput) Zendesk() IntegrationZendeskSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceConnectorProperties) *IntegrationZendeskSourceProperties {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(IntegrationZendeskSourcePropertiesPtrOutput)
}

type IntegrationSourceFlowConfig struct {
	ConnectorProfileName      *string                              `pulumi:"connectorProfileName"`
	ConnectorType             string                               `pulumi:"connectorType"`
	IncrementalPullConfig     *IntegrationIncrementalPullConfig    `pulumi:"incrementalPullConfig"`
	SourceConnectorProperties IntegrationSourceConnectorProperties `pulumi:"sourceConnectorProperties"`
}

// IntegrationSourceFlowConfigInput is an input type that accepts IntegrationSourceFlowConfigArgs and IntegrationSourceFlowConfigOutput values.
// You can construct a concrete instance of `IntegrationSourceFlowConfigInput` via:
//
//          IntegrationSourceFlowConfigArgs{...}
type IntegrationSourceFlowConfigInput interface {
	pulumi.Input

	ToIntegrationSourceFlowConfigOutput() IntegrationSourceFlowConfigOutput
	ToIntegrationSourceFlowConfigOutputWithContext(context.Context) IntegrationSourceFlowConfigOutput
}

type IntegrationSourceFlowConfigArgs struct {
	ConnectorProfileName      pulumi.StringPtrInput                     `pulumi:"connectorProfileName"`
	ConnectorType             pulumi.StringInput                        `pulumi:"connectorType"`
	IncrementalPullConfig     IntegrationIncrementalPullConfigPtrInput  `pulumi:"incrementalPullConfig"`
	SourceConnectorProperties IntegrationSourceConnectorPropertiesInput `pulumi:"sourceConnectorProperties"`
}

func (IntegrationSourceFlowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSourceFlowConfig)(nil)).Elem()
}

func (i IntegrationSourceFlowConfigArgs) ToIntegrationSourceFlowConfigOutput() IntegrationSourceFlowConfigOutput {
	return i.ToIntegrationSourceFlowConfigOutputWithContext(context.Background())
}

func (i IntegrationSourceFlowConfigArgs) ToIntegrationSourceFlowConfigOutputWithContext(ctx context.Context) IntegrationSourceFlowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSourceFlowConfigOutput)
}

func (i IntegrationSourceFlowConfigArgs) ToIntegrationSourceFlowConfigPtrOutput() IntegrationSourceFlowConfigPtrOutput {
	return i.ToIntegrationSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (i IntegrationSourceFlowConfigArgs) ToIntegrationSourceFlowConfigPtrOutputWithContext(ctx context.Context) IntegrationSourceFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSourceFlowConfigOutput).ToIntegrationSourceFlowConfigPtrOutputWithContext(ctx)
}

// IntegrationSourceFlowConfigPtrInput is an input type that accepts IntegrationSourceFlowConfigArgs, IntegrationSourceFlowConfigPtr and IntegrationSourceFlowConfigPtrOutput values.
// You can construct a concrete instance of `IntegrationSourceFlowConfigPtrInput` via:
//
//          IntegrationSourceFlowConfigArgs{...}
//
//  or:
//
//          nil
type IntegrationSourceFlowConfigPtrInput interface {
	pulumi.Input

	ToIntegrationSourceFlowConfigPtrOutput() IntegrationSourceFlowConfigPtrOutput
	ToIntegrationSourceFlowConfigPtrOutputWithContext(context.Context) IntegrationSourceFlowConfigPtrOutput
}

type integrationSourceFlowConfigPtrType IntegrationSourceFlowConfigArgs

func IntegrationSourceFlowConfigPtr(v *IntegrationSourceFlowConfigArgs) IntegrationSourceFlowConfigPtrInput {
	return (*integrationSourceFlowConfigPtrType)(v)
}

func (*integrationSourceFlowConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSourceFlowConfig)(nil)).Elem()
}

func (i *integrationSourceFlowConfigPtrType) ToIntegrationSourceFlowConfigPtrOutput() IntegrationSourceFlowConfigPtrOutput {
	return i.ToIntegrationSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (i *integrationSourceFlowConfigPtrType) ToIntegrationSourceFlowConfigPtrOutputWithContext(ctx context.Context) IntegrationSourceFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationSourceFlowConfigPtrOutput)
}

type IntegrationSourceFlowConfigOutput struct{ *pulumi.OutputState }

func (IntegrationSourceFlowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSourceFlowConfig)(nil)).Elem()
}

func (o IntegrationSourceFlowConfigOutput) ToIntegrationSourceFlowConfigOutput() IntegrationSourceFlowConfigOutput {
	return o
}

func (o IntegrationSourceFlowConfigOutput) ToIntegrationSourceFlowConfigOutputWithContext(ctx context.Context) IntegrationSourceFlowConfigOutput {
	return o
}

func (o IntegrationSourceFlowConfigOutput) ToIntegrationSourceFlowConfigPtrOutput() IntegrationSourceFlowConfigPtrOutput {
	return o.ToIntegrationSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (o IntegrationSourceFlowConfigOutput) ToIntegrationSourceFlowConfigPtrOutputWithContext(ctx context.Context) IntegrationSourceFlowConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationSourceFlowConfig) *IntegrationSourceFlowConfig {
		return &v
	}).(IntegrationSourceFlowConfigPtrOutput)
}

func (o IntegrationSourceFlowConfigOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationSourceFlowConfig) *string { return v.ConnectorProfileName }).(pulumi.StringPtrOutput)
}

func (o IntegrationSourceFlowConfigOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationSourceFlowConfig) string { return v.ConnectorType }).(pulumi.StringOutput)
}

func (o IntegrationSourceFlowConfigOutput) IncrementalPullConfig() IntegrationIncrementalPullConfigPtrOutput {
	return o.ApplyT(func(v IntegrationSourceFlowConfig) *IntegrationIncrementalPullConfig { return v.IncrementalPullConfig }).(IntegrationIncrementalPullConfigPtrOutput)
}

func (o IntegrationSourceFlowConfigOutput) SourceConnectorProperties() IntegrationSourceConnectorPropertiesOutput {
	return o.ApplyT(func(v IntegrationSourceFlowConfig) IntegrationSourceConnectorProperties {
		return v.SourceConnectorProperties
	}).(IntegrationSourceConnectorPropertiesOutput)
}

type IntegrationSourceFlowConfigPtrOutput struct{ *pulumi.OutputState }

func (IntegrationSourceFlowConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSourceFlowConfig)(nil)).Elem()
}

func (o IntegrationSourceFlowConfigPtrOutput) ToIntegrationSourceFlowConfigPtrOutput() IntegrationSourceFlowConfigPtrOutput {
	return o
}

func (o IntegrationSourceFlowConfigPtrOutput) ToIntegrationSourceFlowConfigPtrOutputWithContext(ctx context.Context) IntegrationSourceFlowConfigPtrOutput {
	return o
}

func (o IntegrationSourceFlowConfigPtrOutput) Elem() IntegrationSourceFlowConfigOutput {
	return o.ApplyT(func(v *IntegrationSourceFlowConfig) IntegrationSourceFlowConfig {
		if v != nil {
			return *v
		}
		var ret IntegrationSourceFlowConfig
		return ret
	}).(IntegrationSourceFlowConfigOutput)
}

func (o IntegrationSourceFlowConfigPtrOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorProfileName
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationSourceFlowConfigPtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

func (o IntegrationSourceFlowConfigPtrOutput) IncrementalPullConfig() IntegrationIncrementalPullConfigPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceFlowConfig) *IntegrationIncrementalPullConfig {
		if v == nil {
			return nil
		}
		return v.IncrementalPullConfig
	}).(IntegrationIncrementalPullConfigPtrOutput)
}

func (o IntegrationSourceFlowConfigPtrOutput) SourceConnectorProperties() IntegrationSourceConnectorPropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationSourceFlowConfig) *IntegrationSourceConnectorProperties {
		if v == nil {
			return nil
		}
		return &v.SourceConnectorProperties
	}).(IntegrationSourceConnectorPropertiesPtrOutput)
}

type IntegrationTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// IntegrationTagInput is an input type that accepts IntegrationTagArgs and IntegrationTagOutput values.
// You can construct a concrete instance of `IntegrationTagInput` via:
//
//          IntegrationTagArgs{...}
type IntegrationTagInput interface {
	pulumi.Input

	ToIntegrationTagOutput() IntegrationTagOutput
	ToIntegrationTagOutputWithContext(context.Context) IntegrationTagOutput
}

type IntegrationTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTag)(nil)).Elem()
}

func (i IntegrationTagArgs) ToIntegrationTagOutput() IntegrationTagOutput {
	return i.ToIntegrationTagOutputWithContext(context.Background())
}

func (i IntegrationTagArgs) ToIntegrationTagOutputWithContext(ctx context.Context) IntegrationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTagOutput)
}

// IntegrationTagArrayInput is an input type that accepts IntegrationTagArray and IntegrationTagArrayOutput values.
// You can construct a concrete instance of `IntegrationTagArrayInput` via:
//
//          IntegrationTagArray{ IntegrationTagArgs{...} }
type IntegrationTagArrayInput interface {
	pulumi.Input

	ToIntegrationTagArrayOutput() IntegrationTagArrayOutput
	ToIntegrationTagArrayOutputWithContext(context.Context) IntegrationTagArrayOutput
}

type IntegrationTagArray []IntegrationTagInput

func (IntegrationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTag)(nil)).Elem()
}

func (i IntegrationTagArray) ToIntegrationTagArrayOutput() IntegrationTagArrayOutput {
	return i.ToIntegrationTagArrayOutputWithContext(context.Background())
}

func (i IntegrationTagArray) ToIntegrationTagArrayOutputWithContext(ctx context.Context) IntegrationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTagArrayOutput)
}

type IntegrationTagOutput struct{ *pulumi.OutputState }

func (IntegrationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTag)(nil)).Elem()
}

func (o IntegrationTagOutput) ToIntegrationTagOutput() IntegrationTagOutput {
	return o
}

func (o IntegrationTagOutput) ToIntegrationTagOutputWithContext(ctx context.Context) IntegrationTagOutput {
	return o
}

func (o IntegrationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o IntegrationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTag) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationTagArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTag)(nil)).Elem()
}

func (o IntegrationTagArrayOutput) ToIntegrationTagArrayOutput() IntegrationTagArrayOutput {
	return o
}

func (o IntegrationTagArrayOutput) ToIntegrationTagArrayOutputWithContext(ctx context.Context) IntegrationTagArrayOutput {
	return o
}

func (o IntegrationTagArrayOutput) Index(i pulumi.IntInput) IntegrationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTag {
		return vs[0].([]IntegrationTag)[vs[1].(int)]
	}).(IntegrationTagOutput)
}

type IntegrationTask struct {
	ConnectorOperator *IntegrationConnectorOperator  `pulumi:"connectorOperator"`
	DestinationField  *string                        `pulumi:"destinationField"`
	SourceFields      []string                       `pulumi:"sourceFields"`
	TaskProperties    []IntegrationTaskPropertiesMap `pulumi:"taskProperties"`
	TaskType          string                         `pulumi:"taskType"`
}

// IntegrationTaskInput is an input type that accepts IntegrationTaskArgs and IntegrationTaskOutput values.
// You can construct a concrete instance of `IntegrationTaskInput` via:
//
//          IntegrationTaskArgs{...}
type IntegrationTaskInput interface {
	pulumi.Input

	ToIntegrationTaskOutput() IntegrationTaskOutput
	ToIntegrationTaskOutputWithContext(context.Context) IntegrationTaskOutput
}

type IntegrationTaskArgs struct {
	ConnectorOperator IntegrationConnectorOperatorPtrInput   `pulumi:"connectorOperator"`
	DestinationField  pulumi.StringPtrInput                  `pulumi:"destinationField"`
	SourceFields      pulumi.StringArrayInput                `pulumi:"sourceFields"`
	TaskProperties    IntegrationTaskPropertiesMapArrayInput `pulumi:"taskProperties"`
	TaskType          pulumi.StringInput                     `pulumi:"taskType"`
}

func (IntegrationTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTask)(nil)).Elem()
}

func (i IntegrationTaskArgs) ToIntegrationTaskOutput() IntegrationTaskOutput {
	return i.ToIntegrationTaskOutputWithContext(context.Background())
}

func (i IntegrationTaskArgs) ToIntegrationTaskOutputWithContext(ctx context.Context) IntegrationTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskOutput)
}

// IntegrationTaskArrayInput is an input type that accepts IntegrationTaskArray and IntegrationTaskArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskArrayInput` via:
//
//          IntegrationTaskArray{ IntegrationTaskArgs{...} }
type IntegrationTaskArrayInput interface {
	pulumi.Input

	ToIntegrationTaskArrayOutput() IntegrationTaskArrayOutput
	ToIntegrationTaskArrayOutputWithContext(context.Context) IntegrationTaskArrayOutput
}

type IntegrationTaskArray []IntegrationTaskInput

func (IntegrationTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTask)(nil)).Elem()
}

func (i IntegrationTaskArray) ToIntegrationTaskArrayOutput() IntegrationTaskArrayOutput {
	return i.ToIntegrationTaskArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskArray) ToIntegrationTaskArrayOutputWithContext(ctx context.Context) IntegrationTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskArrayOutput)
}

type IntegrationTaskOutput struct{ *pulumi.OutputState }

func (IntegrationTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTask)(nil)).Elem()
}

func (o IntegrationTaskOutput) ToIntegrationTaskOutput() IntegrationTaskOutput {
	return o
}

func (o IntegrationTaskOutput) ToIntegrationTaskOutputWithContext(ctx context.Context) IntegrationTaskOutput {
	return o
}

func (o IntegrationTaskOutput) ConnectorOperator() IntegrationConnectorOperatorPtrOutput {
	return o.ApplyT(func(v IntegrationTask) *IntegrationConnectorOperator { return v.ConnectorOperator }).(IntegrationConnectorOperatorPtrOutput)
}

func (o IntegrationTaskOutput) DestinationField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTask) *string { return v.DestinationField }).(pulumi.StringPtrOutput)
}

func (o IntegrationTaskOutput) SourceFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationTask) []string { return v.SourceFields }).(pulumi.StringArrayOutput)
}

func (o IntegrationTaskOutput) TaskProperties() IntegrationTaskPropertiesMapArrayOutput {
	return o.ApplyT(func(v IntegrationTask) []IntegrationTaskPropertiesMap { return v.TaskProperties }).(IntegrationTaskPropertiesMapArrayOutput)
}

func (o IntegrationTaskOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTask) string { return v.TaskType }).(pulumi.StringOutput)
}

type IntegrationTaskArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTask)(nil)).Elem()
}

func (o IntegrationTaskArrayOutput) ToIntegrationTaskArrayOutput() IntegrationTaskArrayOutput {
	return o
}

func (o IntegrationTaskArrayOutput) ToIntegrationTaskArrayOutputWithContext(ctx context.Context) IntegrationTaskArrayOutput {
	return o
}

func (o IntegrationTaskArrayOutput) Index(i pulumi.IntInput) IntegrationTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTask {
		return vs[0].([]IntegrationTask)[vs[1].(int)]
	}).(IntegrationTaskOutput)
}

type IntegrationTaskPropertiesMap struct {
	OperatorPropertyKey string `pulumi:"operatorPropertyKey"`
	Property            string `pulumi:"property"`
}

// IntegrationTaskPropertiesMapInput is an input type that accepts IntegrationTaskPropertiesMap and IntegrationTaskPropertiesMapOutput values.
// You can construct a concrete instance of `IntegrationTaskPropertiesMapInput` via:
//
//          IntegrationTaskPropertiesMap{ "key": IntegrationTaskPropertiesArgs{...} }
type IntegrationTaskPropertiesMapInput interface {
	pulumi.Input

	ToIntegrationTaskPropertiesMapOutput() IntegrationTaskPropertiesMapOutput
	ToIntegrationTaskPropertiesMapOutputWithContext(context.Context) IntegrationTaskPropertiesMapOutput
}

type IntegrationTaskPropertiesMapArgs struct {
	OperatorPropertyKey pulumi.StringInput `pulumi:"operatorPropertyKey"`
	Property            pulumi.StringInput `pulumi:"property"`
}

func (IntegrationTaskPropertiesMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskPropertiesMap)(nil)).Elem()
}

func (i IntegrationTaskPropertiesMapArgs) ToIntegrationTaskPropertiesMapOutput() IntegrationTaskPropertiesMapOutput {
	return i.ToIntegrationTaskPropertiesMapOutputWithContext(context.Background())
}

func (i IntegrationTaskPropertiesMapArgs) ToIntegrationTaskPropertiesMapOutputWithContext(ctx context.Context) IntegrationTaskPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskPropertiesMapOutput)
}

// IntegrationTaskPropertiesMapArrayInput is an input type that accepts IntegrationTaskPropertiesMapArray and IntegrationTaskPropertiesMapArrayOutput values.
// You can construct a concrete instance of `IntegrationTaskPropertiesMapArrayInput` via:
//
//          IntegrationTaskPropertiesMapArray{ IntegrationTaskPropertiesMapArgs{...} }
type IntegrationTaskPropertiesMapArrayInput interface {
	pulumi.Input

	ToIntegrationTaskPropertiesMapArrayOutput() IntegrationTaskPropertiesMapArrayOutput
	ToIntegrationTaskPropertiesMapArrayOutputWithContext(context.Context) IntegrationTaskPropertiesMapArrayOutput
}

type IntegrationTaskPropertiesMapArray []IntegrationTaskPropertiesMapInput

func (IntegrationTaskPropertiesMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskPropertiesMap)(nil)).Elem()
}

func (i IntegrationTaskPropertiesMapArray) ToIntegrationTaskPropertiesMapArrayOutput() IntegrationTaskPropertiesMapArrayOutput {
	return i.ToIntegrationTaskPropertiesMapArrayOutputWithContext(context.Background())
}

func (i IntegrationTaskPropertiesMapArray) ToIntegrationTaskPropertiesMapArrayOutputWithContext(ctx context.Context) IntegrationTaskPropertiesMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTaskPropertiesMapArrayOutput)
}

type IntegrationTaskPropertiesMapOutput struct{ *pulumi.OutputState }

func (IntegrationTaskPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskPropertiesMap)(nil)).Elem()
}

func (o IntegrationTaskPropertiesMapOutput) ToIntegrationTaskPropertiesMapOutput() IntegrationTaskPropertiesMapOutput {
	return o
}

func (o IntegrationTaskPropertiesMapOutput) ToIntegrationTaskPropertiesMapOutputWithContext(ctx context.Context) IntegrationTaskPropertiesMapOutput {
	return o
}

func (o IntegrationTaskPropertiesMapOutput) OperatorPropertyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskPropertiesMap) string { return v.OperatorPropertyKey }).(pulumi.StringOutput)
}

func (o IntegrationTaskPropertiesMapOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTaskPropertiesMap) string { return v.Property }).(pulumi.StringOutput)
}

type IntegrationTaskPropertiesMapArrayOutput struct{ *pulumi.OutputState }

func (IntegrationTaskPropertiesMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationTaskPropertiesMap)(nil)).Elem()
}

func (o IntegrationTaskPropertiesMapArrayOutput) ToIntegrationTaskPropertiesMapArrayOutput() IntegrationTaskPropertiesMapArrayOutput {
	return o
}

func (o IntegrationTaskPropertiesMapArrayOutput) ToIntegrationTaskPropertiesMapArrayOutputWithContext(ctx context.Context) IntegrationTaskPropertiesMapArrayOutput {
	return o
}

func (o IntegrationTaskPropertiesMapArrayOutput) Index(i pulumi.IntInput) IntegrationTaskPropertiesMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationTaskPropertiesMap {
		return vs[0].([]IntegrationTaskPropertiesMap)[vs[1].(int)]
	}).(IntegrationTaskPropertiesMapOutput)
}

type IntegrationTriggerConfig struct {
	TriggerProperties *IntegrationTriggerProperties `pulumi:"triggerProperties"`
	TriggerType       string                        `pulumi:"triggerType"`
}

// IntegrationTriggerConfigInput is an input type that accepts IntegrationTriggerConfigArgs and IntegrationTriggerConfigOutput values.
// You can construct a concrete instance of `IntegrationTriggerConfigInput` via:
//
//          IntegrationTriggerConfigArgs{...}
type IntegrationTriggerConfigInput interface {
	pulumi.Input

	ToIntegrationTriggerConfigOutput() IntegrationTriggerConfigOutput
	ToIntegrationTriggerConfigOutputWithContext(context.Context) IntegrationTriggerConfigOutput
}

type IntegrationTriggerConfigArgs struct {
	TriggerProperties IntegrationTriggerPropertiesPtrInput `pulumi:"triggerProperties"`
	TriggerType       pulumi.StringInput                   `pulumi:"triggerType"`
}

func (IntegrationTriggerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTriggerConfig)(nil)).Elem()
}

func (i IntegrationTriggerConfigArgs) ToIntegrationTriggerConfigOutput() IntegrationTriggerConfigOutput {
	return i.ToIntegrationTriggerConfigOutputWithContext(context.Background())
}

func (i IntegrationTriggerConfigArgs) ToIntegrationTriggerConfigOutputWithContext(ctx context.Context) IntegrationTriggerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTriggerConfigOutput)
}

func (i IntegrationTriggerConfigArgs) ToIntegrationTriggerConfigPtrOutput() IntegrationTriggerConfigPtrOutput {
	return i.ToIntegrationTriggerConfigPtrOutputWithContext(context.Background())
}

func (i IntegrationTriggerConfigArgs) ToIntegrationTriggerConfigPtrOutputWithContext(ctx context.Context) IntegrationTriggerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTriggerConfigOutput).ToIntegrationTriggerConfigPtrOutputWithContext(ctx)
}

// IntegrationTriggerConfigPtrInput is an input type that accepts IntegrationTriggerConfigArgs, IntegrationTriggerConfigPtr and IntegrationTriggerConfigPtrOutput values.
// You can construct a concrete instance of `IntegrationTriggerConfigPtrInput` via:
//
//          IntegrationTriggerConfigArgs{...}
//
//  or:
//
//          nil
type IntegrationTriggerConfigPtrInput interface {
	pulumi.Input

	ToIntegrationTriggerConfigPtrOutput() IntegrationTriggerConfigPtrOutput
	ToIntegrationTriggerConfigPtrOutputWithContext(context.Context) IntegrationTriggerConfigPtrOutput
}

type integrationTriggerConfigPtrType IntegrationTriggerConfigArgs

func IntegrationTriggerConfigPtr(v *IntegrationTriggerConfigArgs) IntegrationTriggerConfigPtrInput {
	return (*integrationTriggerConfigPtrType)(v)
}

func (*integrationTriggerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTriggerConfig)(nil)).Elem()
}

func (i *integrationTriggerConfigPtrType) ToIntegrationTriggerConfigPtrOutput() IntegrationTriggerConfigPtrOutput {
	return i.ToIntegrationTriggerConfigPtrOutputWithContext(context.Background())
}

func (i *integrationTriggerConfigPtrType) ToIntegrationTriggerConfigPtrOutputWithContext(ctx context.Context) IntegrationTriggerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTriggerConfigPtrOutput)
}

type IntegrationTriggerConfigOutput struct{ *pulumi.OutputState }

func (IntegrationTriggerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTriggerConfig)(nil)).Elem()
}

func (o IntegrationTriggerConfigOutput) ToIntegrationTriggerConfigOutput() IntegrationTriggerConfigOutput {
	return o
}

func (o IntegrationTriggerConfigOutput) ToIntegrationTriggerConfigOutputWithContext(ctx context.Context) IntegrationTriggerConfigOutput {
	return o
}

func (o IntegrationTriggerConfigOutput) ToIntegrationTriggerConfigPtrOutput() IntegrationTriggerConfigPtrOutput {
	return o.ToIntegrationTriggerConfigPtrOutputWithContext(context.Background())
}

func (o IntegrationTriggerConfigOutput) ToIntegrationTriggerConfigPtrOutputWithContext(ctx context.Context) IntegrationTriggerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationTriggerConfig) *IntegrationTriggerConfig {
		return &v
	}).(IntegrationTriggerConfigPtrOutput)
}

func (o IntegrationTriggerConfigOutput) TriggerProperties() IntegrationTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationTriggerConfig) *IntegrationTriggerProperties { return v.TriggerProperties }).(IntegrationTriggerPropertiesPtrOutput)
}

func (o IntegrationTriggerConfigOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationTriggerConfig) string { return v.TriggerType }).(pulumi.StringOutput)
}

type IntegrationTriggerConfigPtrOutput struct{ *pulumi.OutputState }

func (IntegrationTriggerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTriggerConfig)(nil)).Elem()
}

func (o IntegrationTriggerConfigPtrOutput) ToIntegrationTriggerConfigPtrOutput() IntegrationTriggerConfigPtrOutput {
	return o
}

func (o IntegrationTriggerConfigPtrOutput) ToIntegrationTriggerConfigPtrOutputWithContext(ctx context.Context) IntegrationTriggerConfigPtrOutput {
	return o
}

func (o IntegrationTriggerConfigPtrOutput) Elem() IntegrationTriggerConfigOutput {
	return o.ApplyT(func(v *IntegrationTriggerConfig) IntegrationTriggerConfig {
		if v != nil {
			return *v
		}
		var ret IntegrationTriggerConfig
		return ret
	}).(IntegrationTriggerConfigOutput)
}

func (o IntegrationTriggerConfigPtrOutput) TriggerProperties() IntegrationTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationTriggerConfig) *IntegrationTriggerProperties {
		if v == nil {
			return nil
		}
		return v.TriggerProperties
	}).(IntegrationTriggerPropertiesPtrOutput)
}

func (o IntegrationTriggerConfigPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTriggerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

type IntegrationTriggerProperties struct {
	Scheduled *IntegrationScheduledTriggerProperties `pulumi:"scheduled"`
}

// IntegrationTriggerPropertiesInput is an input type that accepts IntegrationTriggerPropertiesArgs and IntegrationTriggerPropertiesOutput values.
// You can construct a concrete instance of `IntegrationTriggerPropertiesInput` via:
//
//          IntegrationTriggerPropertiesArgs{...}
type IntegrationTriggerPropertiesInput interface {
	pulumi.Input

	ToIntegrationTriggerPropertiesOutput() IntegrationTriggerPropertiesOutput
	ToIntegrationTriggerPropertiesOutputWithContext(context.Context) IntegrationTriggerPropertiesOutput
}

type IntegrationTriggerPropertiesArgs struct {
	Scheduled IntegrationScheduledTriggerPropertiesPtrInput `pulumi:"scheduled"`
}

func (IntegrationTriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTriggerProperties)(nil)).Elem()
}

func (i IntegrationTriggerPropertiesArgs) ToIntegrationTriggerPropertiesOutput() IntegrationTriggerPropertiesOutput {
	return i.ToIntegrationTriggerPropertiesOutputWithContext(context.Background())
}

func (i IntegrationTriggerPropertiesArgs) ToIntegrationTriggerPropertiesOutputWithContext(ctx context.Context) IntegrationTriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTriggerPropertiesOutput)
}

func (i IntegrationTriggerPropertiesArgs) ToIntegrationTriggerPropertiesPtrOutput() IntegrationTriggerPropertiesPtrOutput {
	return i.ToIntegrationTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationTriggerPropertiesArgs) ToIntegrationTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTriggerPropertiesOutput).ToIntegrationTriggerPropertiesPtrOutputWithContext(ctx)
}

// IntegrationTriggerPropertiesPtrInput is an input type that accepts IntegrationTriggerPropertiesArgs, IntegrationTriggerPropertiesPtr and IntegrationTriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationTriggerPropertiesPtrInput` via:
//
//          IntegrationTriggerPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationTriggerPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationTriggerPropertiesPtrOutput() IntegrationTriggerPropertiesPtrOutput
	ToIntegrationTriggerPropertiesPtrOutputWithContext(context.Context) IntegrationTriggerPropertiesPtrOutput
}

type integrationTriggerPropertiesPtrType IntegrationTriggerPropertiesArgs

func IntegrationTriggerPropertiesPtr(v *IntegrationTriggerPropertiesArgs) IntegrationTriggerPropertiesPtrInput {
	return (*integrationTriggerPropertiesPtrType)(v)
}

func (*integrationTriggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTriggerProperties)(nil)).Elem()
}

func (i *integrationTriggerPropertiesPtrType) ToIntegrationTriggerPropertiesPtrOutput() IntegrationTriggerPropertiesPtrOutput {
	return i.ToIntegrationTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationTriggerPropertiesPtrType) ToIntegrationTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTriggerPropertiesPtrOutput)
}

type IntegrationTriggerPropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationTriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTriggerProperties)(nil)).Elem()
}

func (o IntegrationTriggerPropertiesOutput) ToIntegrationTriggerPropertiesOutput() IntegrationTriggerPropertiesOutput {
	return o
}

func (o IntegrationTriggerPropertiesOutput) ToIntegrationTriggerPropertiesOutputWithContext(ctx context.Context) IntegrationTriggerPropertiesOutput {
	return o
}

func (o IntegrationTriggerPropertiesOutput) ToIntegrationTriggerPropertiesPtrOutput() IntegrationTriggerPropertiesPtrOutput {
	return o.ToIntegrationTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationTriggerPropertiesOutput) ToIntegrationTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationTriggerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationTriggerProperties) *IntegrationTriggerProperties {
		return &v
	}).(IntegrationTriggerPropertiesPtrOutput)
}

func (o IntegrationTriggerPropertiesOutput) Scheduled() IntegrationScheduledTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v IntegrationTriggerProperties) *IntegrationScheduledTriggerProperties { return v.Scheduled }).(IntegrationScheduledTriggerPropertiesPtrOutput)
}

type IntegrationTriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationTriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTriggerProperties)(nil)).Elem()
}

func (o IntegrationTriggerPropertiesPtrOutput) ToIntegrationTriggerPropertiesPtrOutput() IntegrationTriggerPropertiesPtrOutput {
	return o
}

func (o IntegrationTriggerPropertiesPtrOutput) ToIntegrationTriggerPropertiesPtrOutputWithContext(ctx context.Context) IntegrationTriggerPropertiesPtrOutput {
	return o
}

func (o IntegrationTriggerPropertiesPtrOutput) Elem() IntegrationTriggerPropertiesOutput {
	return o.ApplyT(func(v *IntegrationTriggerProperties) IntegrationTriggerProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationTriggerProperties
		return ret
	}).(IntegrationTriggerPropertiesOutput)
}

func (o IntegrationTriggerPropertiesPtrOutput) Scheduled() IntegrationScheduledTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v *IntegrationTriggerProperties) *IntegrationScheduledTriggerProperties {
		if v == nil {
			return nil
		}
		return v.Scheduled
	}).(IntegrationScheduledTriggerPropertiesPtrOutput)
}

type IntegrationZendeskSourceProperties struct {
	Object string `pulumi:"object"`
}

// IntegrationZendeskSourcePropertiesInput is an input type that accepts IntegrationZendeskSourcePropertiesArgs and IntegrationZendeskSourcePropertiesOutput values.
// You can construct a concrete instance of `IntegrationZendeskSourcePropertiesInput` via:
//
//          IntegrationZendeskSourcePropertiesArgs{...}
type IntegrationZendeskSourcePropertiesInput interface {
	pulumi.Input

	ToIntegrationZendeskSourcePropertiesOutput() IntegrationZendeskSourcePropertiesOutput
	ToIntegrationZendeskSourcePropertiesOutputWithContext(context.Context) IntegrationZendeskSourcePropertiesOutput
}

type IntegrationZendeskSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (IntegrationZendeskSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationZendeskSourceProperties)(nil)).Elem()
}

func (i IntegrationZendeskSourcePropertiesArgs) ToIntegrationZendeskSourcePropertiesOutput() IntegrationZendeskSourcePropertiesOutput {
	return i.ToIntegrationZendeskSourcePropertiesOutputWithContext(context.Background())
}

func (i IntegrationZendeskSourcePropertiesArgs) ToIntegrationZendeskSourcePropertiesOutputWithContext(ctx context.Context) IntegrationZendeskSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationZendeskSourcePropertiesOutput)
}

func (i IntegrationZendeskSourcePropertiesArgs) ToIntegrationZendeskSourcePropertiesPtrOutput() IntegrationZendeskSourcePropertiesPtrOutput {
	return i.ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationZendeskSourcePropertiesArgs) ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationZendeskSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationZendeskSourcePropertiesOutput).ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(ctx)
}

// IntegrationZendeskSourcePropertiesPtrInput is an input type that accepts IntegrationZendeskSourcePropertiesArgs, IntegrationZendeskSourcePropertiesPtr and IntegrationZendeskSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationZendeskSourcePropertiesPtrInput` via:
//
//          IntegrationZendeskSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationZendeskSourcePropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationZendeskSourcePropertiesPtrOutput() IntegrationZendeskSourcePropertiesPtrOutput
	ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(context.Context) IntegrationZendeskSourcePropertiesPtrOutput
}

type integrationZendeskSourcePropertiesPtrType IntegrationZendeskSourcePropertiesArgs

func IntegrationZendeskSourcePropertiesPtr(v *IntegrationZendeskSourcePropertiesArgs) IntegrationZendeskSourcePropertiesPtrInput {
	return (*integrationZendeskSourcePropertiesPtrType)(v)
}

func (*integrationZendeskSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationZendeskSourceProperties)(nil)).Elem()
}

func (i *integrationZendeskSourcePropertiesPtrType) ToIntegrationZendeskSourcePropertiesPtrOutput() IntegrationZendeskSourcePropertiesPtrOutput {
	return i.ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationZendeskSourcePropertiesPtrType) ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationZendeskSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationZendeskSourcePropertiesPtrOutput)
}

type IntegrationZendeskSourcePropertiesOutput struct{ *pulumi.OutputState }

func (IntegrationZendeskSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationZendeskSourceProperties)(nil)).Elem()
}

func (o IntegrationZendeskSourcePropertiesOutput) ToIntegrationZendeskSourcePropertiesOutput() IntegrationZendeskSourcePropertiesOutput {
	return o
}

func (o IntegrationZendeskSourcePropertiesOutput) ToIntegrationZendeskSourcePropertiesOutputWithContext(ctx context.Context) IntegrationZendeskSourcePropertiesOutput {
	return o
}

func (o IntegrationZendeskSourcePropertiesOutput) ToIntegrationZendeskSourcePropertiesPtrOutput() IntegrationZendeskSourcePropertiesPtrOutput {
	return o.ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o IntegrationZendeskSourcePropertiesOutput) ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationZendeskSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationZendeskSourceProperties) *IntegrationZendeskSourceProperties {
		return &v
	}).(IntegrationZendeskSourcePropertiesPtrOutput)
}

func (o IntegrationZendeskSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationZendeskSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type IntegrationZendeskSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (IntegrationZendeskSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationZendeskSourceProperties)(nil)).Elem()
}

func (o IntegrationZendeskSourcePropertiesPtrOutput) ToIntegrationZendeskSourcePropertiesPtrOutput() IntegrationZendeskSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationZendeskSourcePropertiesPtrOutput) ToIntegrationZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) IntegrationZendeskSourcePropertiesPtrOutput {
	return o
}

func (o IntegrationZendeskSourcePropertiesPtrOutput) Elem() IntegrationZendeskSourcePropertiesOutput {
	return o.ApplyT(func(v *IntegrationZendeskSourceProperties) IntegrationZendeskSourceProperties {
		if v != nil {
			return *v
		}
		var ret IntegrationZendeskSourceProperties
		return ret
	}).(IntegrationZendeskSourcePropertiesOutput)
}

func (o IntegrationZendeskSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationZendeskSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type ObjectTypeFieldMap struct {
	Name            *string                    `pulumi:"name"`
	ObjectTypeField *ObjectTypeObjectTypeField `pulumi:"objectTypeField"`
}

// ObjectTypeFieldMapInput is an input type that accepts ObjectTypeFieldMap and ObjectTypeFieldMapOutput values.
// You can construct a concrete instance of `ObjectTypeFieldMapInput` via:
//
//          ObjectTypeFieldMap{ "key": ObjectTypeFieldArgs{...} }
type ObjectTypeFieldMapInput interface {
	pulumi.Input

	ToObjectTypeFieldMapOutput() ObjectTypeFieldMapOutput
	ToObjectTypeFieldMapOutputWithContext(context.Context) ObjectTypeFieldMapOutput
}

type ObjectTypeFieldMapArgs struct {
	Name            pulumi.StringPtrInput             `pulumi:"name"`
	ObjectTypeField ObjectTypeObjectTypeFieldPtrInput `pulumi:"objectTypeField"`
}

func (ObjectTypeFieldMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeFieldMap)(nil)).Elem()
}

func (i ObjectTypeFieldMapArgs) ToObjectTypeFieldMapOutput() ObjectTypeFieldMapOutput {
	return i.ToObjectTypeFieldMapOutputWithContext(context.Background())
}

func (i ObjectTypeFieldMapArgs) ToObjectTypeFieldMapOutputWithContext(ctx context.Context) ObjectTypeFieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeFieldMapOutput)
}

// ObjectTypeFieldMapArrayInput is an input type that accepts ObjectTypeFieldMapArray and ObjectTypeFieldMapArrayOutput values.
// You can construct a concrete instance of `ObjectTypeFieldMapArrayInput` via:
//
//          ObjectTypeFieldMapArray{ ObjectTypeFieldMapArgs{...} }
type ObjectTypeFieldMapArrayInput interface {
	pulumi.Input

	ToObjectTypeFieldMapArrayOutput() ObjectTypeFieldMapArrayOutput
	ToObjectTypeFieldMapArrayOutputWithContext(context.Context) ObjectTypeFieldMapArrayOutput
}

type ObjectTypeFieldMapArray []ObjectTypeFieldMapInput

func (ObjectTypeFieldMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeFieldMap)(nil)).Elem()
}

func (i ObjectTypeFieldMapArray) ToObjectTypeFieldMapArrayOutput() ObjectTypeFieldMapArrayOutput {
	return i.ToObjectTypeFieldMapArrayOutputWithContext(context.Background())
}

func (i ObjectTypeFieldMapArray) ToObjectTypeFieldMapArrayOutputWithContext(ctx context.Context) ObjectTypeFieldMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeFieldMapArrayOutput)
}

type ObjectTypeFieldMapOutput struct{ *pulumi.OutputState }

func (ObjectTypeFieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeFieldMap)(nil)).Elem()
}

func (o ObjectTypeFieldMapOutput) ToObjectTypeFieldMapOutput() ObjectTypeFieldMapOutput {
	return o
}

func (o ObjectTypeFieldMapOutput) ToObjectTypeFieldMapOutputWithContext(ctx context.Context) ObjectTypeFieldMapOutput {
	return o
}

func (o ObjectTypeFieldMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectTypeFieldMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ObjectTypeFieldMapOutput) ObjectTypeField() ObjectTypeObjectTypeFieldPtrOutput {
	return o.ApplyT(func(v ObjectTypeFieldMap) *ObjectTypeObjectTypeField { return v.ObjectTypeField }).(ObjectTypeObjectTypeFieldPtrOutput)
}

type ObjectTypeFieldMapArrayOutput struct{ *pulumi.OutputState }

func (ObjectTypeFieldMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeFieldMap)(nil)).Elem()
}

func (o ObjectTypeFieldMapArrayOutput) ToObjectTypeFieldMapArrayOutput() ObjectTypeFieldMapArrayOutput {
	return o
}

func (o ObjectTypeFieldMapArrayOutput) ToObjectTypeFieldMapArrayOutputWithContext(ctx context.Context) ObjectTypeFieldMapArrayOutput {
	return o
}

func (o ObjectTypeFieldMapArrayOutput) Index(i pulumi.IntInput) ObjectTypeFieldMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectTypeFieldMap {
		return vs[0].([]ObjectTypeFieldMap)[vs[1].(int)]
	}).(ObjectTypeFieldMapOutput)
}

type ObjectTypeKeyMap struct {
	Name              *string                   `pulumi:"name"`
	ObjectTypeKeyList []ObjectTypeObjectTypeKey `pulumi:"objectTypeKeyList"`
}

// ObjectTypeKeyMapInput is an input type that accepts ObjectTypeKeyMap and ObjectTypeKeyMapOutput values.
// You can construct a concrete instance of `ObjectTypeKeyMapInput` via:
//
//          ObjectTypeKeyMap{ "key": ObjectTypeKeyArgs{...} }
type ObjectTypeKeyMapInput interface {
	pulumi.Input

	ToObjectTypeKeyMapOutput() ObjectTypeKeyMapOutput
	ToObjectTypeKeyMapOutputWithContext(context.Context) ObjectTypeKeyMapOutput
}

type ObjectTypeKeyMapArgs struct {
	Name              pulumi.StringPtrInput             `pulumi:"name"`
	ObjectTypeKeyList ObjectTypeObjectTypeKeyArrayInput `pulumi:"objectTypeKeyList"`
}

func (ObjectTypeKeyMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeKeyMap)(nil)).Elem()
}

func (i ObjectTypeKeyMapArgs) ToObjectTypeKeyMapOutput() ObjectTypeKeyMapOutput {
	return i.ToObjectTypeKeyMapOutputWithContext(context.Background())
}

func (i ObjectTypeKeyMapArgs) ToObjectTypeKeyMapOutputWithContext(ctx context.Context) ObjectTypeKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeKeyMapOutput)
}

// ObjectTypeKeyMapArrayInput is an input type that accepts ObjectTypeKeyMapArray and ObjectTypeKeyMapArrayOutput values.
// You can construct a concrete instance of `ObjectTypeKeyMapArrayInput` via:
//
//          ObjectTypeKeyMapArray{ ObjectTypeKeyMapArgs{...} }
type ObjectTypeKeyMapArrayInput interface {
	pulumi.Input

	ToObjectTypeKeyMapArrayOutput() ObjectTypeKeyMapArrayOutput
	ToObjectTypeKeyMapArrayOutputWithContext(context.Context) ObjectTypeKeyMapArrayOutput
}

type ObjectTypeKeyMapArray []ObjectTypeKeyMapInput

func (ObjectTypeKeyMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeKeyMap)(nil)).Elem()
}

func (i ObjectTypeKeyMapArray) ToObjectTypeKeyMapArrayOutput() ObjectTypeKeyMapArrayOutput {
	return i.ToObjectTypeKeyMapArrayOutputWithContext(context.Background())
}

func (i ObjectTypeKeyMapArray) ToObjectTypeKeyMapArrayOutputWithContext(ctx context.Context) ObjectTypeKeyMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeKeyMapArrayOutput)
}

type ObjectTypeKeyMapOutput struct{ *pulumi.OutputState }

func (ObjectTypeKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeKeyMap)(nil)).Elem()
}

func (o ObjectTypeKeyMapOutput) ToObjectTypeKeyMapOutput() ObjectTypeKeyMapOutput {
	return o
}

func (o ObjectTypeKeyMapOutput) ToObjectTypeKeyMapOutputWithContext(ctx context.Context) ObjectTypeKeyMapOutput {
	return o
}

func (o ObjectTypeKeyMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectTypeKeyMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ObjectTypeKeyMapOutput) ObjectTypeKeyList() ObjectTypeObjectTypeKeyArrayOutput {
	return o.ApplyT(func(v ObjectTypeKeyMap) []ObjectTypeObjectTypeKey { return v.ObjectTypeKeyList }).(ObjectTypeObjectTypeKeyArrayOutput)
}

type ObjectTypeKeyMapArrayOutput struct{ *pulumi.OutputState }

func (ObjectTypeKeyMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeKeyMap)(nil)).Elem()
}

func (o ObjectTypeKeyMapArrayOutput) ToObjectTypeKeyMapArrayOutput() ObjectTypeKeyMapArrayOutput {
	return o
}

func (o ObjectTypeKeyMapArrayOutput) ToObjectTypeKeyMapArrayOutputWithContext(ctx context.Context) ObjectTypeKeyMapArrayOutput {
	return o
}

func (o ObjectTypeKeyMapArrayOutput) Index(i pulumi.IntInput) ObjectTypeKeyMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectTypeKeyMap {
		return vs[0].([]ObjectTypeKeyMap)[vs[1].(int)]
	}).(ObjectTypeKeyMapOutput)
}

// Represents a field in a ProfileObjectType.
type ObjectTypeObjectTypeField struct {
	// The content type of the field. Used for determining equality when searching.
	ContentType *string `pulumi:"contentType"`
	// A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.
	Source *string `pulumi:"source"`
	// The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.
	Target *string `pulumi:"target"`
}

// ObjectTypeObjectTypeFieldInput is an input type that accepts ObjectTypeObjectTypeFieldArgs and ObjectTypeObjectTypeFieldOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeFieldInput` via:
//
//          ObjectTypeObjectTypeFieldArgs{...}
type ObjectTypeObjectTypeFieldInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeFieldOutput() ObjectTypeObjectTypeFieldOutput
	ToObjectTypeObjectTypeFieldOutputWithContext(context.Context) ObjectTypeObjectTypeFieldOutput
}

// Represents a field in a ProfileObjectType.
type ObjectTypeObjectTypeFieldArgs struct {
	// The content type of the field. Used for determining equality when searching.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ObjectTypeObjectTypeFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeField)(nil)).Elem()
}

func (i ObjectTypeObjectTypeFieldArgs) ToObjectTypeObjectTypeFieldOutput() ObjectTypeObjectTypeFieldOutput {
	return i.ToObjectTypeObjectTypeFieldOutputWithContext(context.Background())
}

func (i ObjectTypeObjectTypeFieldArgs) ToObjectTypeObjectTypeFieldOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeObjectTypeFieldOutput)
}

func (i ObjectTypeObjectTypeFieldArgs) ToObjectTypeObjectTypeFieldPtrOutput() ObjectTypeObjectTypeFieldPtrOutput {
	return i.ToObjectTypeObjectTypeFieldPtrOutputWithContext(context.Background())
}

func (i ObjectTypeObjectTypeFieldArgs) ToObjectTypeObjectTypeFieldPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeObjectTypeFieldOutput).ToObjectTypeObjectTypeFieldPtrOutputWithContext(ctx)
}

// ObjectTypeObjectTypeFieldPtrInput is an input type that accepts ObjectTypeObjectTypeFieldArgs, ObjectTypeObjectTypeFieldPtr and ObjectTypeObjectTypeFieldPtrOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeFieldPtrInput` via:
//
//          ObjectTypeObjectTypeFieldArgs{...}
//
//  or:
//
//          nil
type ObjectTypeObjectTypeFieldPtrInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeFieldPtrOutput() ObjectTypeObjectTypeFieldPtrOutput
	ToObjectTypeObjectTypeFieldPtrOutputWithContext(context.Context) ObjectTypeObjectTypeFieldPtrOutput
}

type objectTypeObjectTypeFieldPtrType ObjectTypeObjectTypeFieldArgs

func ObjectTypeObjectTypeFieldPtr(v *ObjectTypeObjectTypeFieldArgs) ObjectTypeObjectTypeFieldPtrInput {
	return (*objectTypeObjectTypeFieldPtrType)(v)
}

func (*objectTypeObjectTypeFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectTypeObjectTypeField)(nil)).Elem()
}

func (i *objectTypeObjectTypeFieldPtrType) ToObjectTypeObjectTypeFieldPtrOutput() ObjectTypeObjectTypeFieldPtrOutput {
	return i.ToObjectTypeObjectTypeFieldPtrOutputWithContext(context.Background())
}

func (i *objectTypeObjectTypeFieldPtrType) ToObjectTypeObjectTypeFieldPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeObjectTypeFieldPtrOutput)
}

// Represents a field in a ProfileObjectType.
type ObjectTypeObjectTypeFieldOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeField)(nil)).Elem()
}

func (o ObjectTypeObjectTypeFieldOutput) ToObjectTypeObjectTypeFieldOutput() ObjectTypeObjectTypeFieldOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldOutput) ToObjectTypeObjectTypeFieldOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldOutput) ToObjectTypeObjectTypeFieldPtrOutput() ObjectTypeObjectTypeFieldPtrOutput {
	return o.ToObjectTypeObjectTypeFieldPtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeFieldOutput) ToObjectTypeObjectTypeFieldPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectTypeObjectTypeField) *ObjectTypeObjectTypeField {
		return &v
	}).(ObjectTypeObjectTypeFieldPtrOutput)
}

// The content type of the field. Used for determining equality when searching.
func (o ObjectTypeObjectTypeFieldOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectTypeObjectTypeField) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.
func (o ObjectTypeObjectTypeFieldOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectTypeObjectTypeField) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.
func (o ObjectTypeObjectTypeFieldOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectTypeObjectTypeField) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ObjectTypeObjectTypeFieldPtrOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectTypeObjectTypeField)(nil)).Elem()
}

func (o ObjectTypeObjectTypeFieldPtrOutput) ToObjectTypeObjectTypeFieldPtrOutput() ObjectTypeObjectTypeFieldPtrOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldPtrOutput) ToObjectTypeObjectTypeFieldPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldPtrOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldPtrOutput) Elem() ObjectTypeObjectTypeFieldOutput {
	return o.ApplyT(func(v *ObjectTypeObjectTypeField) ObjectTypeObjectTypeField {
		if v != nil {
			return *v
		}
		var ret ObjectTypeObjectTypeField
		return ret
	}).(ObjectTypeObjectTypeFieldOutput)
}

// The content type of the field. Used for determining equality when searching.
func (o ObjectTypeObjectTypeFieldPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectTypeObjectTypeField) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.
func (o ObjectTypeObjectTypeFieldPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectTypeObjectTypeField) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.
func (o ObjectTypeObjectTypeFieldPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectTypeObjectTypeField) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.
type ObjectTypeObjectTypeKey struct {
	// The reference for the key name of the fields map.
	FieldNames []string `pulumi:"fieldNames"`
	// The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.
	StandardIdentifiers []string `pulumi:"standardIdentifiers"`
}

// ObjectTypeObjectTypeKeyInput is an input type that accepts ObjectTypeObjectTypeKeyArgs and ObjectTypeObjectTypeKeyOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeKeyInput` via:
//
//          ObjectTypeObjectTypeKeyArgs{...}
type ObjectTypeObjectTypeKeyInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeKeyOutput() ObjectTypeObjectTypeKeyOutput
	ToObjectTypeObjectTypeKeyOutputWithContext(context.Context) ObjectTypeObjectTypeKeyOutput
}

// An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.
type ObjectTypeObjectTypeKeyArgs struct {
	// The reference for the key name of the fields map.
	FieldNames pulumi.StringArrayInput `pulumi:"fieldNames"`
	// The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.
	StandardIdentifiers pulumi.StringArrayInput `pulumi:"standardIdentifiers"`
}

func (ObjectTypeObjectTypeKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeKey)(nil)).Elem()
}

func (i ObjectTypeObjectTypeKeyArgs) ToObjectTypeObjectTypeKeyOutput() ObjectTypeObjectTypeKeyOutput {
	return i.ToObjectTypeObjectTypeKeyOutputWithContext(context.Background())
}

func (i ObjectTypeObjectTypeKeyArgs) ToObjectTypeObjectTypeKeyOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeObjectTypeKeyOutput)
}

// ObjectTypeObjectTypeKeyArrayInput is an input type that accepts ObjectTypeObjectTypeKeyArray and ObjectTypeObjectTypeKeyArrayOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeKeyArrayInput` via:
//
//          ObjectTypeObjectTypeKeyArray{ ObjectTypeObjectTypeKeyArgs{...} }
type ObjectTypeObjectTypeKeyArrayInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeKeyArrayOutput() ObjectTypeObjectTypeKeyArrayOutput
	ToObjectTypeObjectTypeKeyArrayOutputWithContext(context.Context) ObjectTypeObjectTypeKeyArrayOutput
}

type ObjectTypeObjectTypeKeyArray []ObjectTypeObjectTypeKeyInput

func (ObjectTypeObjectTypeKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeObjectTypeKey)(nil)).Elem()
}

func (i ObjectTypeObjectTypeKeyArray) ToObjectTypeObjectTypeKeyArrayOutput() ObjectTypeObjectTypeKeyArrayOutput {
	return i.ToObjectTypeObjectTypeKeyArrayOutputWithContext(context.Background())
}

func (i ObjectTypeObjectTypeKeyArray) ToObjectTypeObjectTypeKeyArrayOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeObjectTypeKeyArrayOutput)
}

// An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.
type ObjectTypeObjectTypeKeyOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeKey)(nil)).Elem()
}

func (o ObjectTypeObjectTypeKeyOutput) ToObjectTypeObjectTypeKeyOutput() ObjectTypeObjectTypeKeyOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyOutput) ToObjectTypeObjectTypeKeyOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyOutput {
	return o
}

// The reference for the key name of the fields map.
func (o ObjectTypeObjectTypeKeyOutput) FieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectTypeObjectTypeKey) []string { return v.FieldNames }).(pulumi.StringArrayOutput)
}

// The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.
func (o ObjectTypeObjectTypeKeyOutput) StandardIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectTypeObjectTypeKey) []string { return v.StandardIdentifiers }).(pulumi.StringArrayOutput)
}

type ObjectTypeObjectTypeKeyArrayOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeObjectTypeKey)(nil)).Elem()
}

func (o ObjectTypeObjectTypeKeyArrayOutput) ToObjectTypeObjectTypeKeyArrayOutput() ObjectTypeObjectTypeKeyArrayOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyArrayOutput) ToObjectTypeObjectTypeKeyArrayOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyArrayOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyArrayOutput) Index(i pulumi.IntInput) ObjectTypeObjectTypeKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectTypeObjectTypeKey {
		return vs[0].([]ObjectTypeObjectTypeKey)[vs[1].(int)]
	}).(ObjectTypeObjectTypeKeyOutput)
}

type ObjectTypeTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ObjectTypeTagInput is an input type that accepts ObjectTypeTagArgs and ObjectTypeTagOutput values.
// You can construct a concrete instance of `ObjectTypeTagInput` via:
//
//          ObjectTypeTagArgs{...}
type ObjectTypeTagInput interface {
	pulumi.Input

	ToObjectTypeTagOutput() ObjectTypeTagOutput
	ToObjectTypeTagOutputWithContext(context.Context) ObjectTypeTagOutput
}

type ObjectTypeTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ObjectTypeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeTag)(nil)).Elem()
}

func (i ObjectTypeTagArgs) ToObjectTypeTagOutput() ObjectTypeTagOutput {
	return i.ToObjectTypeTagOutputWithContext(context.Background())
}

func (i ObjectTypeTagArgs) ToObjectTypeTagOutputWithContext(ctx context.Context) ObjectTypeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeTagOutput)
}

// ObjectTypeTagArrayInput is an input type that accepts ObjectTypeTagArray and ObjectTypeTagArrayOutput values.
// You can construct a concrete instance of `ObjectTypeTagArrayInput` via:
//
//          ObjectTypeTagArray{ ObjectTypeTagArgs{...} }
type ObjectTypeTagArrayInput interface {
	pulumi.Input

	ToObjectTypeTagArrayOutput() ObjectTypeTagArrayOutput
	ToObjectTypeTagArrayOutputWithContext(context.Context) ObjectTypeTagArrayOutput
}

type ObjectTypeTagArray []ObjectTypeTagInput

func (ObjectTypeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeTag)(nil)).Elem()
}

func (i ObjectTypeTagArray) ToObjectTypeTagArrayOutput() ObjectTypeTagArrayOutput {
	return i.ToObjectTypeTagArrayOutputWithContext(context.Background())
}

func (i ObjectTypeTagArray) ToObjectTypeTagArrayOutputWithContext(ctx context.Context) ObjectTypeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeTagArrayOutput)
}

type ObjectTypeTagOutput struct{ *pulumi.OutputState }

func (ObjectTypeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeTag)(nil)).Elem()
}

func (o ObjectTypeTagOutput) ToObjectTypeTagOutput() ObjectTypeTagOutput {
	return o
}

func (o ObjectTypeTagOutput) ToObjectTypeTagOutputWithContext(ctx context.Context) ObjectTypeTagOutput {
	return o
}

func (o ObjectTypeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectTypeTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ObjectTypeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectTypeTag) string { return v.Value }).(pulumi.StringOutput)
}

type ObjectTypeTagArrayOutput struct{ *pulumi.OutputState }

func (ObjectTypeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeTag)(nil)).Elem()
}

func (o ObjectTypeTagArrayOutput) ToObjectTypeTagArrayOutput() ObjectTypeTagArrayOutput {
	return o
}

func (o ObjectTypeTagArrayOutput) ToObjectTypeTagArrayOutputWithContext(ctx context.Context) ObjectTypeTagArrayOutput {
	return o
}

func (o ObjectTypeTagArrayOutput) Index(i pulumi.IntInput) ObjectTypeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectTypeTag {
		return vs[0].([]ObjectTypeTag)[vs[1].(int)]
	}).(ObjectTypeTagOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainTagOutput{})
	pulumi.RegisterOutputType(DomainTagArrayOutput{})
	pulumi.RegisterOutputType(IntegrationConnectorOperatorOutput{})
	pulumi.RegisterOutputType(IntegrationConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(IntegrationFlowDefinitionOutput{})
	pulumi.RegisterOutputType(IntegrationFlowDefinitionPtrOutput{})
	pulumi.RegisterOutputType(IntegrationIncrementalPullConfigOutput{})
	pulumi.RegisterOutputType(IntegrationIncrementalPullConfigPtrOutput{})
	pulumi.RegisterOutputType(IntegrationMarketoSourcePropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationMarketoSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationS3SourcePropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationS3SourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationSalesforceSourcePropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationSalesforceSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationScheduledTriggerPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationScheduledTriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceNowSourcePropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationServiceNowSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationSourceConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationSourceConnectorPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationSourceFlowConfigOutput{})
	pulumi.RegisterOutputType(IntegrationSourceFlowConfigPtrOutput{})
	pulumi.RegisterOutputType(IntegrationTagOutput{})
	pulumi.RegisterOutputType(IntegrationTagArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskOutput{})
	pulumi.RegisterOutputType(IntegrationTaskArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTaskPropertiesMapOutput{})
	pulumi.RegisterOutputType(IntegrationTaskPropertiesMapArrayOutput{})
	pulumi.RegisterOutputType(IntegrationTriggerConfigOutput{})
	pulumi.RegisterOutputType(IntegrationTriggerConfigPtrOutput{})
	pulumi.RegisterOutputType(IntegrationTriggerPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationTriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationZendeskSourcePropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationZendeskSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ObjectTypeFieldMapOutput{})
	pulumi.RegisterOutputType(ObjectTypeFieldMapArrayOutput{})
	pulumi.RegisterOutputType(ObjectTypeKeyMapOutput{})
	pulumi.RegisterOutputType(ObjectTypeKeyMapArrayOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeFieldOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeFieldPtrOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeKeyOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeKeyArrayOutput{})
	pulumi.RegisterOutputType(ObjectTypeTagOutput{})
	pulumi.RegisterOutputType(ObjectTypeTagArrayOutput{})
}
