// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package customerprofiles

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An ObjectType resource of Amazon Connect Customer Profiles
type ObjectType struct {
	pulumi.CustomResourceState

	// Indicates whether a profile should be created when data is received.
	AllowProfileCreation pulumi.BoolPtrOutput `pulumi:"allowProfileCreation"`
	// The time of this integration got created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the profile object type.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The unique name of the domain.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// The default encryption key
	EncryptionKey pulumi.StringPtrOutput `pulumi:"encryptionKey"`
	// The default number of days until the data within the domain expires.
	ExpirationDays pulumi.IntPtrOutput `pulumi:"expirationDays"`
	// A list of the name and ObjectType field.
	Fields ObjectTypeFieldMapArrayOutput `pulumi:"fields"`
	// A list of unique keys that can be used to map data to the profile.
	Keys ObjectTypeKeyMapArrayOutput `pulumi:"keys"`
	// The time of this integration got last updated at.
	LastUpdatedAt pulumi.StringOutput `pulumi:"lastUpdatedAt"`
	// The name of the profile object type.
	ObjectTypeName pulumi.StringPtrOutput `pulumi:"objectTypeName"`
	// The tags (keys and values) associated with the integration.
	Tags ObjectTypeTagArrayOutput `pulumi:"tags"`
	// A unique identifier for the object template.
	TemplateId pulumi.StringPtrOutput `pulumi:"templateId"`
}

// NewObjectType registers a new resource with the given unique name, arguments, and options.
func NewObjectType(ctx *pulumi.Context,
	name string, args *ObjectTypeArgs, opts ...pulumi.ResourceOption) (*ObjectType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	var resource ObjectType
	err := ctx.RegisterResource("aws-native:customerprofiles:ObjectType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectType gets an existing ObjectType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectTypeState, opts ...pulumi.ResourceOption) (*ObjectType, error) {
	var resource ObjectType
	err := ctx.ReadResource("aws-native:customerprofiles:ObjectType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectType resources.
type objectTypeState struct {
}

type ObjectTypeState struct {
}

func (ObjectTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectTypeState)(nil)).Elem()
}

type objectTypeArgs struct {
	// Indicates whether a profile should be created when data is received.
	AllowProfileCreation *bool `pulumi:"allowProfileCreation"`
	// Description of the profile object type.
	Description *string `pulumi:"description"`
	// The unique name of the domain.
	DomainName string `pulumi:"domainName"`
	// The default encryption key
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The default number of days until the data within the domain expires.
	ExpirationDays *int `pulumi:"expirationDays"`
	// A list of the name and ObjectType field.
	Fields []ObjectTypeFieldMap `pulumi:"fields"`
	// A list of unique keys that can be used to map data to the profile.
	Keys []ObjectTypeKeyMap `pulumi:"keys"`
	// The name of the profile object type.
	ObjectTypeName *string `pulumi:"objectTypeName"`
	// The tags (keys and values) associated with the integration.
	Tags []ObjectTypeTag `pulumi:"tags"`
	// A unique identifier for the object template.
	TemplateId *string `pulumi:"templateId"`
}

// The set of arguments for constructing a ObjectType resource.
type ObjectTypeArgs struct {
	// Indicates whether a profile should be created when data is received.
	AllowProfileCreation pulumi.BoolPtrInput
	// Description of the profile object type.
	Description pulumi.StringPtrInput
	// The unique name of the domain.
	DomainName pulumi.StringInput
	// The default encryption key
	EncryptionKey pulumi.StringPtrInput
	// The default number of days until the data within the domain expires.
	ExpirationDays pulumi.IntPtrInput
	// A list of the name and ObjectType field.
	Fields ObjectTypeFieldMapArrayInput
	// A list of unique keys that can be used to map data to the profile.
	Keys ObjectTypeKeyMapArrayInput
	// The name of the profile object type.
	ObjectTypeName pulumi.StringPtrInput
	// The tags (keys and values) associated with the integration.
	Tags ObjectTypeTagArrayInput
	// A unique identifier for the object template.
	TemplateId pulumi.StringPtrInput
}

func (ObjectTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectTypeArgs)(nil)).Elem()
}

type ObjectTypeInput interface {
	pulumi.Input

	ToObjectTypeOutput() ObjectTypeOutput
	ToObjectTypeOutputWithContext(ctx context.Context) ObjectTypeOutput
}

func (*ObjectType) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectType)(nil))
}

func (i *ObjectType) ToObjectTypeOutput() ObjectTypeOutput {
	return i.ToObjectTypeOutputWithContext(context.Background())
}

func (i *ObjectType) ToObjectTypeOutputWithContext(ctx context.Context) ObjectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeOutput)
}

type ObjectTypeOutput struct{ *pulumi.OutputState }

func (ObjectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectType)(nil))
}

func (o ObjectTypeOutput) ToObjectTypeOutput() ObjectTypeOutput {
	return o
}

func (o ObjectTypeOutput) ToObjectTypeOutputWithContext(ctx context.Context) ObjectTypeOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ObjectTypeOutput{})
}
