// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package customerprofiles

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IntegrationConnectorType string

const (
	IntegrationConnectorTypeSalesforce = IntegrationConnectorType("Salesforce")
	IntegrationConnectorTypeMarketo    = IntegrationConnectorType("Marketo")
	IntegrationConnectorTypeServiceNow = IntegrationConnectorType("ServiceNow")
	IntegrationConnectorTypeZendesk    = IntegrationConnectorType("Zendesk")
	IntegrationConnectorTypeS3         = IntegrationConnectorType("S3")
)

func (IntegrationConnectorType) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationConnectorType)(nil)).Elem()
}

func (e IntegrationConnectorType) ToIntegrationConnectorTypeOutput() IntegrationConnectorTypeOutput {
	return pulumi.ToOutput(e).(IntegrationConnectorTypeOutput)
}

func (e IntegrationConnectorType) ToIntegrationConnectorTypeOutputWithContext(ctx context.Context) IntegrationConnectorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationConnectorTypeOutput)
}

func (e IntegrationConnectorType) ToIntegrationConnectorTypePtrOutput() IntegrationConnectorTypePtrOutput {
	return e.ToIntegrationConnectorTypePtrOutputWithContext(context.Background())
}

func (e IntegrationConnectorType) ToIntegrationConnectorTypePtrOutputWithContext(ctx context.Context) IntegrationConnectorTypePtrOutput {
	return IntegrationConnectorType(e).ToIntegrationConnectorTypeOutputWithContext(ctx).ToIntegrationConnectorTypePtrOutputWithContext(ctx)
}

func (e IntegrationConnectorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationConnectorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationConnectorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationConnectorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationConnectorTypeOutput struct{ *pulumi.OutputState }

func (IntegrationConnectorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationConnectorType)(nil)).Elem()
}

func (o IntegrationConnectorTypeOutput) ToIntegrationConnectorTypeOutput() IntegrationConnectorTypeOutput {
	return o
}

func (o IntegrationConnectorTypeOutput) ToIntegrationConnectorTypeOutputWithContext(ctx context.Context) IntegrationConnectorTypeOutput {
	return o
}

func (o IntegrationConnectorTypeOutput) ToIntegrationConnectorTypePtrOutput() IntegrationConnectorTypePtrOutput {
	return o.ToIntegrationConnectorTypePtrOutputWithContext(context.Background())
}

func (o IntegrationConnectorTypeOutput) ToIntegrationConnectorTypePtrOutputWithContext(ctx context.Context) IntegrationConnectorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationConnectorType) *IntegrationConnectorType {
		return &v
	}).(IntegrationConnectorTypePtrOutput)
}

func (o IntegrationConnectorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationConnectorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationConnectorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationConnectorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationConnectorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationConnectorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationConnectorTypePtrOutput struct{ *pulumi.OutputState }

func (IntegrationConnectorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationConnectorType)(nil)).Elem()
}

func (o IntegrationConnectorTypePtrOutput) ToIntegrationConnectorTypePtrOutput() IntegrationConnectorTypePtrOutput {
	return o
}

func (o IntegrationConnectorTypePtrOutput) ToIntegrationConnectorTypePtrOutputWithContext(ctx context.Context) IntegrationConnectorTypePtrOutput {
	return o
}

func (o IntegrationConnectorTypePtrOutput) Elem() IntegrationConnectorTypeOutput {
	return o.ApplyT(func(v *IntegrationConnectorType) IntegrationConnectorType {
		if v != nil {
			return *v
		}
		var ret IntegrationConnectorType
		return ret
	}).(IntegrationConnectorTypeOutput)
}

func (o IntegrationConnectorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationConnectorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationConnectorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationConnectorTypeInput is an input type that accepts IntegrationConnectorTypeArgs and IntegrationConnectorTypeOutput values.
// You can construct a concrete instance of `IntegrationConnectorTypeInput` via:
//
//          IntegrationConnectorTypeArgs{...}
type IntegrationConnectorTypeInput interface {
	pulumi.Input

	ToIntegrationConnectorTypeOutput() IntegrationConnectorTypeOutput
	ToIntegrationConnectorTypeOutputWithContext(context.Context) IntegrationConnectorTypeOutput
}

var integrationConnectorTypePtrType = reflect.TypeOf((**IntegrationConnectorType)(nil)).Elem()

type IntegrationConnectorTypePtrInput interface {
	pulumi.Input

	ToIntegrationConnectorTypePtrOutput() IntegrationConnectorTypePtrOutput
	ToIntegrationConnectorTypePtrOutputWithContext(context.Context) IntegrationConnectorTypePtrOutput
}

type integrationConnectorTypePtr string

func IntegrationConnectorTypePtr(v string) IntegrationConnectorTypePtrInput {
	return (*integrationConnectorTypePtr)(&v)
}

func (*integrationConnectorTypePtr) ElementType() reflect.Type {
	return integrationConnectorTypePtrType
}

func (in *integrationConnectorTypePtr) ToIntegrationConnectorTypePtrOutput() IntegrationConnectorTypePtrOutput {
	return pulumi.ToOutput(in).(IntegrationConnectorTypePtrOutput)
}

func (in *integrationConnectorTypePtr) ToIntegrationConnectorTypePtrOutputWithContext(ctx context.Context) IntegrationConnectorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationConnectorTypePtrOutput)
}

type IntegrationMarketoConnectorOperator string

const (
	IntegrationMarketoConnectorOperatorProjection          = IntegrationMarketoConnectorOperator("PROJECTION")
	IntegrationMarketoConnectorOperatorLessThan            = IntegrationMarketoConnectorOperator("LESS_THAN")
	IntegrationMarketoConnectorOperatorGreaterThan         = IntegrationMarketoConnectorOperator("GREATER_THAN")
	IntegrationMarketoConnectorOperatorBetween             = IntegrationMarketoConnectorOperator("BETWEEN")
	IntegrationMarketoConnectorOperatorAddition            = IntegrationMarketoConnectorOperator("ADDITION")
	IntegrationMarketoConnectorOperatorMultiplication      = IntegrationMarketoConnectorOperator("MULTIPLICATION")
	IntegrationMarketoConnectorOperatorDivision            = IntegrationMarketoConnectorOperator("DIVISION")
	IntegrationMarketoConnectorOperatorSubtraction         = IntegrationMarketoConnectorOperator("SUBTRACTION")
	IntegrationMarketoConnectorOperatorMaskAll             = IntegrationMarketoConnectorOperator("MASK_ALL")
	IntegrationMarketoConnectorOperatorMaskFirstN          = IntegrationMarketoConnectorOperator("MASK_FIRST_N")
	IntegrationMarketoConnectorOperatorMaskLastN           = IntegrationMarketoConnectorOperator("MASK_LAST_N")
	IntegrationMarketoConnectorOperatorValidateNonNull     = IntegrationMarketoConnectorOperator("VALIDATE_NON_NULL")
	IntegrationMarketoConnectorOperatorValidateNonZero     = IntegrationMarketoConnectorOperator("VALIDATE_NON_ZERO")
	IntegrationMarketoConnectorOperatorValidateNonNegative = IntegrationMarketoConnectorOperator("VALIDATE_NON_NEGATIVE")
	IntegrationMarketoConnectorOperatorValidateNumeric     = IntegrationMarketoConnectorOperator("VALIDATE_NUMERIC")
	IntegrationMarketoConnectorOperatorNoOp                = IntegrationMarketoConnectorOperator("NO_OP")
)

func (IntegrationMarketoConnectorOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMarketoConnectorOperator)(nil)).Elem()
}

func (e IntegrationMarketoConnectorOperator) ToIntegrationMarketoConnectorOperatorOutput() IntegrationMarketoConnectorOperatorOutput {
	return pulumi.ToOutput(e).(IntegrationMarketoConnectorOperatorOutput)
}

func (e IntegrationMarketoConnectorOperator) ToIntegrationMarketoConnectorOperatorOutputWithContext(ctx context.Context) IntegrationMarketoConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationMarketoConnectorOperatorOutput)
}

func (e IntegrationMarketoConnectorOperator) ToIntegrationMarketoConnectorOperatorPtrOutput() IntegrationMarketoConnectorOperatorPtrOutput {
	return e.ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(context.Background())
}

func (e IntegrationMarketoConnectorOperator) ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationMarketoConnectorOperatorPtrOutput {
	return IntegrationMarketoConnectorOperator(e).ToIntegrationMarketoConnectorOperatorOutputWithContext(ctx).ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(ctx)
}

func (e IntegrationMarketoConnectorOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationMarketoConnectorOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationMarketoConnectorOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationMarketoConnectorOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationMarketoConnectorOperatorOutput struct{ *pulumi.OutputState }

func (IntegrationMarketoConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationMarketoConnectorOperator)(nil)).Elem()
}

func (o IntegrationMarketoConnectorOperatorOutput) ToIntegrationMarketoConnectorOperatorOutput() IntegrationMarketoConnectorOperatorOutput {
	return o
}

func (o IntegrationMarketoConnectorOperatorOutput) ToIntegrationMarketoConnectorOperatorOutputWithContext(ctx context.Context) IntegrationMarketoConnectorOperatorOutput {
	return o
}

func (o IntegrationMarketoConnectorOperatorOutput) ToIntegrationMarketoConnectorOperatorPtrOutput() IntegrationMarketoConnectorOperatorPtrOutput {
	return o.ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o IntegrationMarketoConnectorOperatorOutput) ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationMarketoConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationMarketoConnectorOperator) *IntegrationMarketoConnectorOperator {
		return &v
	}).(IntegrationMarketoConnectorOperatorPtrOutput)
}

func (o IntegrationMarketoConnectorOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationMarketoConnectorOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationMarketoConnectorOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationMarketoConnectorOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationMarketoConnectorOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationMarketoConnectorOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationMarketoConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (IntegrationMarketoConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationMarketoConnectorOperator)(nil)).Elem()
}

func (o IntegrationMarketoConnectorOperatorPtrOutput) ToIntegrationMarketoConnectorOperatorPtrOutput() IntegrationMarketoConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationMarketoConnectorOperatorPtrOutput) ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationMarketoConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationMarketoConnectorOperatorPtrOutput) Elem() IntegrationMarketoConnectorOperatorOutput {
	return o.ApplyT(func(v *IntegrationMarketoConnectorOperator) IntegrationMarketoConnectorOperator {
		if v != nil {
			return *v
		}
		var ret IntegrationMarketoConnectorOperator
		return ret
	}).(IntegrationMarketoConnectorOperatorOutput)
}

func (o IntegrationMarketoConnectorOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationMarketoConnectorOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationMarketoConnectorOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationMarketoConnectorOperatorInput is an input type that accepts IntegrationMarketoConnectorOperatorArgs and IntegrationMarketoConnectorOperatorOutput values.
// You can construct a concrete instance of `IntegrationMarketoConnectorOperatorInput` via:
//
//          IntegrationMarketoConnectorOperatorArgs{...}
type IntegrationMarketoConnectorOperatorInput interface {
	pulumi.Input

	ToIntegrationMarketoConnectorOperatorOutput() IntegrationMarketoConnectorOperatorOutput
	ToIntegrationMarketoConnectorOperatorOutputWithContext(context.Context) IntegrationMarketoConnectorOperatorOutput
}

var integrationMarketoConnectorOperatorPtrType = reflect.TypeOf((**IntegrationMarketoConnectorOperator)(nil)).Elem()

type IntegrationMarketoConnectorOperatorPtrInput interface {
	pulumi.Input

	ToIntegrationMarketoConnectorOperatorPtrOutput() IntegrationMarketoConnectorOperatorPtrOutput
	ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(context.Context) IntegrationMarketoConnectorOperatorPtrOutput
}

type integrationMarketoConnectorOperatorPtr string

func IntegrationMarketoConnectorOperatorPtr(v string) IntegrationMarketoConnectorOperatorPtrInput {
	return (*integrationMarketoConnectorOperatorPtr)(&v)
}

func (*integrationMarketoConnectorOperatorPtr) ElementType() reflect.Type {
	return integrationMarketoConnectorOperatorPtrType
}

func (in *integrationMarketoConnectorOperatorPtr) ToIntegrationMarketoConnectorOperatorPtrOutput() IntegrationMarketoConnectorOperatorPtrOutput {
	return pulumi.ToOutput(in).(IntegrationMarketoConnectorOperatorPtrOutput)
}

func (in *integrationMarketoConnectorOperatorPtr) ToIntegrationMarketoConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationMarketoConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationMarketoConnectorOperatorPtrOutput)
}

type IntegrationOperatorPropertiesKeys string

const (
	IntegrationOperatorPropertiesKeysValue                    = IntegrationOperatorPropertiesKeys("VALUE")
	IntegrationOperatorPropertiesKeysValues                   = IntegrationOperatorPropertiesKeys("VALUES")
	IntegrationOperatorPropertiesKeysDataType                 = IntegrationOperatorPropertiesKeys("DATA_TYPE")
	IntegrationOperatorPropertiesKeysUpperBound               = IntegrationOperatorPropertiesKeys("UPPER_BOUND")
	IntegrationOperatorPropertiesKeysLowerBound               = IntegrationOperatorPropertiesKeys("LOWER_BOUND")
	IntegrationOperatorPropertiesKeysSourceDataType           = IntegrationOperatorPropertiesKeys("SOURCE_DATA_TYPE")
	IntegrationOperatorPropertiesKeysDestinationDataType      = IntegrationOperatorPropertiesKeys("DESTINATION_DATA_TYPE")
	IntegrationOperatorPropertiesKeysValidationAction         = IntegrationOperatorPropertiesKeys("VALIDATION_ACTION")
	IntegrationOperatorPropertiesKeysMaskValue                = IntegrationOperatorPropertiesKeys("MASK_VALUE")
	IntegrationOperatorPropertiesKeysMaskLength               = IntegrationOperatorPropertiesKeys("MASK_LENGTH")
	IntegrationOperatorPropertiesKeysTruncateLength           = IntegrationOperatorPropertiesKeys("TRUNCATE_LENGTH")
	IntegrationOperatorPropertiesKeysMathOperationFieldsOrder = IntegrationOperatorPropertiesKeys("MATH_OPERATION_FIELDS_ORDER")
	IntegrationOperatorPropertiesKeysConcatFormat             = IntegrationOperatorPropertiesKeys("CONCAT_FORMAT")
	IntegrationOperatorPropertiesKeysSubfieldCategoryMap      = IntegrationOperatorPropertiesKeys("SUBFIELD_CATEGORY_MAP")
)

func (IntegrationOperatorPropertiesKeys) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOperatorPropertiesKeys)(nil)).Elem()
}

func (e IntegrationOperatorPropertiesKeys) ToIntegrationOperatorPropertiesKeysOutput() IntegrationOperatorPropertiesKeysOutput {
	return pulumi.ToOutput(e).(IntegrationOperatorPropertiesKeysOutput)
}

func (e IntegrationOperatorPropertiesKeys) ToIntegrationOperatorPropertiesKeysOutputWithContext(ctx context.Context) IntegrationOperatorPropertiesKeysOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationOperatorPropertiesKeysOutput)
}

func (e IntegrationOperatorPropertiesKeys) ToIntegrationOperatorPropertiesKeysPtrOutput() IntegrationOperatorPropertiesKeysPtrOutput {
	return e.ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(context.Background())
}

func (e IntegrationOperatorPropertiesKeys) ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(ctx context.Context) IntegrationOperatorPropertiesKeysPtrOutput {
	return IntegrationOperatorPropertiesKeys(e).ToIntegrationOperatorPropertiesKeysOutputWithContext(ctx).ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(ctx)
}

func (e IntegrationOperatorPropertiesKeys) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationOperatorPropertiesKeys) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationOperatorPropertiesKeys) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationOperatorPropertiesKeys) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationOperatorPropertiesKeysOutput struct{ *pulumi.OutputState }

func (IntegrationOperatorPropertiesKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationOperatorPropertiesKeys)(nil)).Elem()
}

func (o IntegrationOperatorPropertiesKeysOutput) ToIntegrationOperatorPropertiesKeysOutput() IntegrationOperatorPropertiesKeysOutput {
	return o
}

func (o IntegrationOperatorPropertiesKeysOutput) ToIntegrationOperatorPropertiesKeysOutputWithContext(ctx context.Context) IntegrationOperatorPropertiesKeysOutput {
	return o
}

func (o IntegrationOperatorPropertiesKeysOutput) ToIntegrationOperatorPropertiesKeysPtrOutput() IntegrationOperatorPropertiesKeysPtrOutput {
	return o.ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(context.Background())
}

func (o IntegrationOperatorPropertiesKeysOutput) ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(ctx context.Context) IntegrationOperatorPropertiesKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationOperatorPropertiesKeys) *IntegrationOperatorPropertiesKeys {
		return &v
	}).(IntegrationOperatorPropertiesKeysPtrOutput)
}

func (o IntegrationOperatorPropertiesKeysOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationOperatorPropertiesKeysOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationOperatorPropertiesKeys) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationOperatorPropertiesKeysOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationOperatorPropertiesKeysOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationOperatorPropertiesKeys) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationOperatorPropertiesKeysPtrOutput struct{ *pulumi.OutputState }

func (IntegrationOperatorPropertiesKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationOperatorPropertiesKeys)(nil)).Elem()
}

func (o IntegrationOperatorPropertiesKeysPtrOutput) ToIntegrationOperatorPropertiesKeysPtrOutput() IntegrationOperatorPropertiesKeysPtrOutput {
	return o
}

func (o IntegrationOperatorPropertiesKeysPtrOutput) ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(ctx context.Context) IntegrationOperatorPropertiesKeysPtrOutput {
	return o
}

func (o IntegrationOperatorPropertiesKeysPtrOutput) Elem() IntegrationOperatorPropertiesKeysOutput {
	return o.ApplyT(func(v *IntegrationOperatorPropertiesKeys) IntegrationOperatorPropertiesKeys {
		if v != nil {
			return *v
		}
		var ret IntegrationOperatorPropertiesKeys
		return ret
	}).(IntegrationOperatorPropertiesKeysOutput)
}

func (o IntegrationOperatorPropertiesKeysPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationOperatorPropertiesKeysPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationOperatorPropertiesKeys) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationOperatorPropertiesKeysInput is an input type that accepts IntegrationOperatorPropertiesKeysArgs and IntegrationOperatorPropertiesKeysOutput values.
// You can construct a concrete instance of `IntegrationOperatorPropertiesKeysInput` via:
//
//          IntegrationOperatorPropertiesKeysArgs{...}
type IntegrationOperatorPropertiesKeysInput interface {
	pulumi.Input

	ToIntegrationOperatorPropertiesKeysOutput() IntegrationOperatorPropertiesKeysOutput
	ToIntegrationOperatorPropertiesKeysOutputWithContext(context.Context) IntegrationOperatorPropertiesKeysOutput
}

var integrationOperatorPropertiesKeysPtrType = reflect.TypeOf((**IntegrationOperatorPropertiesKeys)(nil)).Elem()

type IntegrationOperatorPropertiesKeysPtrInput interface {
	pulumi.Input

	ToIntegrationOperatorPropertiesKeysPtrOutput() IntegrationOperatorPropertiesKeysPtrOutput
	ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(context.Context) IntegrationOperatorPropertiesKeysPtrOutput
}

type integrationOperatorPropertiesKeysPtr string

func IntegrationOperatorPropertiesKeysPtr(v string) IntegrationOperatorPropertiesKeysPtrInput {
	return (*integrationOperatorPropertiesKeysPtr)(&v)
}

func (*integrationOperatorPropertiesKeysPtr) ElementType() reflect.Type {
	return integrationOperatorPropertiesKeysPtrType
}

func (in *integrationOperatorPropertiesKeysPtr) ToIntegrationOperatorPropertiesKeysPtrOutput() IntegrationOperatorPropertiesKeysPtrOutput {
	return pulumi.ToOutput(in).(IntegrationOperatorPropertiesKeysPtrOutput)
}

func (in *integrationOperatorPropertiesKeysPtr) ToIntegrationOperatorPropertiesKeysPtrOutputWithContext(ctx context.Context) IntegrationOperatorPropertiesKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationOperatorPropertiesKeysPtrOutput)
}

type IntegrationS3ConnectorOperator string

const (
	IntegrationS3ConnectorOperatorProjection           = IntegrationS3ConnectorOperator("PROJECTION")
	IntegrationS3ConnectorOperatorLessThan             = IntegrationS3ConnectorOperator("LESS_THAN")
	IntegrationS3ConnectorOperatorGreaterThan          = IntegrationS3ConnectorOperator("GREATER_THAN")
	IntegrationS3ConnectorOperatorBetween              = IntegrationS3ConnectorOperator("BETWEEN")
	IntegrationS3ConnectorOperatorLessThanOrEqualTo    = IntegrationS3ConnectorOperator("LESS_THAN_OR_EQUAL_TO")
	IntegrationS3ConnectorOperatorGreaterThanOrEqualTo = IntegrationS3ConnectorOperator("GREATER_THAN_OR_EQUAL_TO")
	IntegrationS3ConnectorOperatorEqualTo              = IntegrationS3ConnectorOperator("EQUAL_TO")
	IntegrationS3ConnectorOperatorNotEqualTo           = IntegrationS3ConnectorOperator("NOT_EQUAL_TO")
	IntegrationS3ConnectorOperatorAddition             = IntegrationS3ConnectorOperator("ADDITION")
	IntegrationS3ConnectorOperatorMultiplication       = IntegrationS3ConnectorOperator("MULTIPLICATION")
	IntegrationS3ConnectorOperatorDivision             = IntegrationS3ConnectorOperator("DIVISION")
	IntegrationS3ConnectorOperatorSubtraction          = IntegrationS3ConnectorOperator("SUBTRACTION")
	IntegrationS3ConnectorOperatorMaskAll              = IntegrationS3ConnectorOperator("MASK_ALL")
	IntegrationS3ConnectorOperatorMaskFirstN           = IntegrationS3ConnectorOperator("MASK_FIRST_N")
	IntegrationS3ConnectorOperatorMaskLastN            = IntegrationS3ConnectorOperator("MASK_LAST_N")
	IntegrationS3ConnectorOperatorValidateNonNull      = IntegrationS3ConnectorOperator("VALIDATE_NON_NULL")
	IntegrationS3ConnectorOperatorValidateNonZero      = IntegrationS3ConnectorOperator("VALIDATE_NON_ZERO")
	IntegrationS3ConnectorOperatorValidateNonNegative  = IntegrationS3ConnectorOperator("VALIDATE_NON_NEGATIVE")
	IntegrationS3ConnectorOperatorValidateNumeric      = IntegrationS3ConnectorOperator("VALIDATE_NUMERIC")
	IntegrationS3ConnectorOperatorNoOp                 = IntegrationS3ConnectorOperator("NO_OP")
)

func (IntegrationS3ConnectorOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationS3ConnectorOperator)(nil)).Elem()
}

func (e IntegrationS3ConnectorOperator) ToIntegrationS3ConnectorOperatorOutput() IntegrationS3ConnectorOperatorOutput {
	return pulumi.ToOutput(e).(IntegrationS3ConnectorOperatorOutput)
}

func (e IntegrationS3ConnectorOperator) ToIntegrationS3ConnectorOperatorOutputWithContext(ctx context.Context) IntegrationS3ConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationS3ConnectorOperatorOutput)
}

func (e IntegrationS3ConnectorOperator) ToIntegrationS3ConnectorOperatorPtrOutput() IntegrationS3ConnectorOperatorPtrOutput {
	return e.ToIntegrationS3ConnectorOperatorPtrOutputWithContext(context.Background())
}

func (e IntegrationS3ConnectorOperator) ToIntegrationS3ConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationS3ConnectorOperatorPtrOutput {
	return IntegrationS3ConnectorOperator(e).ToIntegrationS3ConnectorOperatorOutputWithContext(ctx).ToIntegrationS3ConnectorOperatorPtrOutputWithContext(ctx)
}

func (e IntegrationS3ConnectorOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationS3ConnectorOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationS3ConnectorOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationS3ConnectorOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationS3ConnectorOperatorOutput struct{ *pulumi.OutputState }

func (IntegrationS3ConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationS3ConnectorOperator)(nil)).Elem()
}

func (o IntegrationS3ConnectorOperatorOutput) ToIntegrationS3ConnectorOperatorOutput() IntegrationS3ConnectorOperatorOutput {
	return o
}

func (o IntegrationS3ConnectorOperatorOutput) ToIntegrationS3ConnectorOperatorOutputWithContext(ctx context.Context) IntegrationS3ConnectorOperatorOutput {
	return o
}

func (o IntegrationS3ConnectorOperatorOutput) ToIntegrationS3ConnectorOperatorPtrOutput() IntegrationS3ConnectorOperatorPtrOutput {
	return o.ToIntegrationS3ConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o IntegrationS3ConnectorOperatorOutput) ToIntegrationS3ConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationS3ConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationS3ConnectorOperator) *IntegrationS3ConnectorOperator {
		return &v
	}).(IntegrationS3ConnectorOperatorPtrOutput)
}

func (o IntegrationS3ConnectorOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationS3ConnectorOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationS3ConnectorOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationS3ConnectorOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationS3ConnectorOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationS3ConnectorOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationS3ConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (IntegrationS3ConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationS3ConnectorOperator)(nil)).Elem()
}

func (o IntegrationS3ConnectorOperatorPtrOutput) ToIntegrationS3ConnectorOperatorPtrOutput() IntegrationS3ConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationS3ConnectorOperatorPtrOutput) ToIntegrationS3ConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationS3ConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationS3ConnectorOperatorPtrOutput) Elem() IntegrationS3ConnectorOperatorOutput {
	return o.ApplyT(func(v *IntegrationS3ConnectorOperator) IntegrationS3ConnectorOperator {
		if v != nil {
			return *v
		}
		var ret IntegrationS3ConnectorOperator
		return ret
	}).(IntegrationS3ConnectorOperatorOutput)
}

func (o IntegrationS3ConnectorOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationS3ConnectorOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationS3ConnectorOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationS3ConnectorOperatorInput is an input type that accepts IntegrationS3ConnectorOperatorArgs and IntegrationS3ConnectorOperatorOutput values.
// You can construct a concrete instance of `IntegrationS3ConnectorOperatorInput` via:
//
//          IntegrationS3ConnectorOperatorArgs{...}
type IntegrationS3ConnectorOperatorInput interface {
	pulumi.Input

	ToIntegrationS3ConnectorOperatorOutput() IntegrationS3ConnectorOperatorOutput
	ToIntegrationS3ConnectorOperatorOutputWithContext(context.Context) IntegrationS3ConnectorOperatorOutput
}

var integrationS3ConnectorOperatorPtrType = reflect.TypeOf((**IntegrationS3ConnectorOperator)(nil)).Elem()

type IntegrationS3ConnectorOperatorPtrInput interface {
	pulumi.Input

	ToIntegrationS3ConnectorOperatorPtrOutput() IntegrationS3ConnectorOperatorPtrOutput
	ToIntegrationS3ConnectorOperatorPtrOutputWithContext(context.Context) IntegrationS3ConnectorOperatorPtrOutput
}

type integrationS3ConnectorOperatorPtr string

func IntegrationS3ConnectorOperatorPtr(v string) IntegrationS3ConnectorOperatorPtrInput {
	return (*integrationS3ConnectorOperatorPtr)(&v)
}

func (*integrationS3ConnectorOperatorPtr) ElementType() reflect.Type {
	return integrationS3ConnectorOperatorPtrType
}

func (in *integrationS3ConnectorOperatorPtr) ToIntegrationS3ConnectorOperatorPtrOutput() IntegrationS3ConnectorOperatorPtrOutput {
	return pulumi.ToOutput(in).(IntegrationS3ConnectorOperatorPtrOutput)
}

func (in *integrationS3ConnectorOperatorPtr) ToIntegrationS3ConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationS3ConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationS3ConnectorOperatorPtrOutput)
}

type IntegrationSalesforceConnectorOperator string

const (
	IntegrationSalesforceConnectorOperatorProjection           = IntegrationSalesforceConnectorOperator("PROJECTION")
	IntegrationSalesforceConnectorOperatorLessThan             = IntegrationSalesforceConnectorOperator("LESS_THAN")
	IntegrationSalesforceConnectorOperatorGreaterThan          = IntegrationSalesforceConnectorOperator("GREATER_THAN")
	IntegrationSalesforceConnectorOperatorContains             = IntegrationSalesforceConnectorOperator("CONTAINS")
	IntegrationSalesforceConnectorOperatorBetween              = IntegrationSalesforceConnectorOperator("BETWEEN")
	IntegrationSalesforceConnectorOperatorLessThanOrEqualTo    = IntegrationSalesforceConnectorOperator("LESS_THAN_OR_EQUAL_TO")
	IntegrationSalesforceConnectorOperatorGreaterThanOrEqualTo = IntegrationSalesforceConnectorOperator("GREATER_THAN_OR_EQUAL_TO")
	IntegrationSalesforceConnectorOperatorEqualTo              = IntegrationSalesforceConnectorOperator("EQUAL_TO")
	IntegrationSalesforceConnectorOperatorNotEqualTo           = IntegrationSalesforceConnectorOperator("NOT_EQUAL_TO")
	IntegrationSalesforceConnectorOperatorAddition             = IntegrationSalesforceConnectorOperator("ADDITION")
	IntegrationSalesforceConnectorOperatorMultiplication       = IntegrationSalesforceConnectorOperator("MULTIPLICATION")
	IntegrationSalesforceConnectorOperatorDivision             = IntegrationSalesforceConnectorOperator("DIVISION")
	IntegrationSalesforceConnectorOperatorSubtraction          = IntegrationSalesforceConnectorOperator("SUBTRACTION")
	IntegrationSalesforceConnectorOperatorMaskAll              = IntegrationSalesforceConnectorOperator("MASK_ALL")
	IntegrationSalesforceConnectorOperatorMaskFirstN           = IntegrationSalesforceConnectorOperator("MASK_FIRST_N")
	IntegrationSalesforceConnectorOperatorMaskLastN            = IntegrationSalesforceConnectorOperator("MASK_LAST_N")
	IntegrationSalesforceConnectorOperatorValidateNonNull      = IntegrationSalesforceConnectorOperator("VALIDATE_NON_NULL")
	IntegrationSalesforceConnectorOperatorValidateNonZero      = IntegrationSalesforceConnectorOperator("VALIDATE_NON_ZERO")
	IntegrationSalesforceConnectorOperatorValidateNonNegative  = IntegrationSalesforceConnectorOperator("VALIDATE_NON_NEGATIVE")
	IntegrationSalesforceConnectorOperatorValidateNumeric      = IntegrationSalesforceConnectorOperator("VALIDATE_NUMERIC")
	IntegrationSalesforceConnectorOperatorNoOp                 = IntegrationSalesforceConnectorOperator("NO_OP")
)

func (IntegrationSalesforceConnectorOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSalesforceConnectorOperator)(nil)).Elem()
}

func (e IntegrationSalesforceConnectorOperator) ToIntegrationSalesforceConnectorOperatorOutput() IntegrationSalesforceConnectorOperatorOutput {
	return pulumi.ToOutput(e).(IntegrationSalesforceConnectorOperatorOutput)
}

func (e IntegrationSalesforceConnectorOperator) ToIntegrationSalesforceConnectorOperatorOutputWithContext(ctx context.Context) IntegrationSalesforceConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationSalesforceConnectorOperatorOutput)
}

func (e IntegrationSalesforceConnectorOperator) ToIntegrationSalesforceConnectorOperatorPtrOutput() IntegrationSalesforceConnectorOperatorPtrOutput {
	return e.ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(context.Background())
}

func (e IntegrationSalesforceConnectorOperator) ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationSalesforceConnectorOperatorPtrOutput {
	return IntegrationSalesforceConnectorOperator(e).ToIntegrationSalesforceConnectorOperatorOutputWithContext(ctx).ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(ctx)
}

func (e IntegrationSalesforceConnectorOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationSalesforceConnectorOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationSalesforceConnectorOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationSalesforceConnectorOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationSalesforceConnectorOperatorOutput struct{ *pulumi.OutputState }

func (IntegrationSalesforceConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationSalesforceConnectorOperator)(nil)).Elem()
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToIntegrationSalesforceConnectorOperatorOutput() IntegrationSalesforceConnectorOperatorOutput {
	return o
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToIntegrationSalesforceConnectorOperatorOutputWithContext(ctx context.Context) IntegrationSalesforceConnectorOperatorOutput {
	return o
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToIntegrationSalesforceConnectorOperatorPtrOutput() IntegrationSalesforceConnectorOperatorPtrOutput {
	return o.ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationSalesforceConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationSalesforceConnectorOperator) *IntegrationSalesforceConnectorOperator {
		return &v
	}).(IntegrationSalesforceConnectorOperatorPtrOutput)
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationSalesforceConnectorOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationSalesforceConnectorOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationSalesforceConnectorOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationSalesforceConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (IntegrationSalesforceConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationSalesforceConnectorOperator)(nil)).Elem()
}

func (o IntegrationSalesforceConnectorOperatorPtrOutput) ToIntegrationSalesforceConnectorOperatorPtrOutput() IntegrationSalesforceConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationSalesforceConnectorOperatorPtrOutput) ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationSalesforceConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationSalesforceConnectorOperatorPtrOutput) Elem() IntegrationSalesforceConnectorOperatorOutput {
	return o.ApplyT(func(v *IntegrationSalesforceConnectorOperator) IntegrationSalesforceConnectorOperator {
		if v != nil {
			return *v
		}
		var ret IntegrationSalesforceConnectorOperator
		return ret
	}).(IntegrationSalesforceConnectorOperatorOutput)
}

func (o IntegrationSalesforceConnectorOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationSalesforceConnectorOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationSalesforceConnectorOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationSalesforceConnectorOperatorInput is an input type that accepts IntegrationSalesforceConnectorOperatorArgs and IntegrationSalesforceConnectorOperatorOutput values.
// You can construct a concrete instance of `IntegrationSalesforceConnectorOperatorInput` via:
//
//          IntegrationSalesforceConnectorOperatorArgs{...}
type IntegrationSalesforceConnectorOperatorInput interface {
	pulumi.Input

	ToIntegrationSalesforceConnectorOperatorOutput() IntegrationSalesforceConnectorOperatorOutput
	ToIntegrationSalesforceConnectorOperatorOutputWithContext(context.Context) IntegrationSalesforceConnectorOperatorOutput
}

var integrationSalesforceConnectorOperatorPtrType = reflect.TypeOf((**IntegrationSalesforceConnectorOperator)(nil)).Elem()

type IntegrationSalesforceConnectorOperatorPtrInput interface {
	pulumi.Input

	ToIntegrationSalesforceConnectorOperatorPtrOutput() IntegrationSalesforceConnectorOperatorPtrOutput
	ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(context.Context) IntegrationSalesforceConnectorOperatorPtrOutput
}

type integrationSalesforceConnectorOperatorPtr string

func IntegrationSalesforceConnectorOperatorPtr(v string) IntegrationSalesforceConnectorOperatorPtrInput {
	return (*integrationSalesforceConnectorOperatorPtr)(&v)
}

func (*integrationSalesforceConnectorOperatorPtr) ElementType() reflect.Type {
	return integrationSalesforceConnectorOperatorPtrType
}

func (in *integrationSalesforceConnectorOperatorPtr) ToIntegrationSalesforceConnectorOperatorPtrOutput() IntegrationSalesforceConnectorOperatorPtrOutput {
	return pulumi.ToOutput(in).(IntegrationSalesforceConnectorOperatorPtrOutput)
}

func (in *integrationSalesforceConnectorOperatorPtr) ToIntegrationSalesforceConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationSalesforceConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationSalesforceConnectorOperatorPtrOutput)
}

type IntegrationScheduledTriggerPropertiesDataPullMode string

const (
	IntegrationScheduledTriggerPropertiesDataPullModeIncremental = IntegrationScheduledTriggerPropertiesDataPullMode("Incremental")
	IntegrationScheduledTriggerPropertiesDataPullModeComplete    = IntegrationScheduledTriggerPropertiesDataPullMode("Complete")
)

func (IntegrationScheduledTriggerPropertiesDataPullMode) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationScheduledTriggerPropertiesDataPullMode)(nil)).Elem()
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToIntegrationScheduledTriggerPropertiesDataPullModeOutput() IntegrationScheduledTriggerPropertiesDataPullModeOutput {
	return pulumi.ToOutput(e).(IntegrationScheduledTriggerPropertiesDataPullModeOutput)
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToIntegrationScheduledTriggerPropertiesDataPullModeOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesDataPullModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationScheduledTriggerPropertiesDataPullModeOutput)
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutput() IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return e.ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(context.Background())
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return IntegrationScheduledTriggerPropertiesDataPullMode(e).ToIntegrationScheduledTriggerPropertiesDataPullModeOutputWithContext(ctx).ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(ctx)
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationScheduledTriggerPropertiesDataPullMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationScheduledTriggerPropertiesDataPullModeOutput struct{ *pulumi.OutputState }

func (IntegrationScheduledTriggerPropertiesDataPullModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationScheduledTriggerPropertiesDataPullMode)(nil)).Elem()
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToIntegrationScheduledTriggerPropertiesDataPullModeOutput() IntegrationScheduledTriggerPropertiesDataPullModeOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToIntegrationScheduledTriggerPropertiesDataPullModeOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesDataPullModeOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutput() IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return o.ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(context.Background())
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationScheduledTriggerPropertiesDataPullMode) *IntegrationScheduledTriggerPropertiesDataPullMode {
		return &v
	}).(IntegrationScheduledTriggerPropertiesDataPullModePtrOutput)
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationScheduledTriggerPropertiesDataPullMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationScheduledTriggerPropertiesDataPullModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationScheduledTriggerPropertiesDataPullMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationScheduledTriggerPropertiesDataPullModePtrOutput struct{ *pulumi.OutputState }

func (IntegrationScheduledTriggerPropertiesDataPullModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationScheduledTriggerPropertiesDataPullMode)(nil)).Elem()
}

func (o IntegrationScheduledTriggerPropertiesDataPullModePtrOutput) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutput() IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesDataPullModePtrOutput) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return o
}

func (o IntegrationScheduledTriggerPropertiesDataPullModePtrOutput) Elem() IntegrationScheduledTriggerPropertiesDataPullModeOutput {
	return o.ApplyT(func(v *IntegrationScheduledTriggerPropertiesDataPullMode) IntegrationScheduledTriggerPropertiesDataPullMode {
		if v != nil {
			return *v
		}
		var ret IntegrationScheduledTriggerPropertiesDataPullMode
		return ret
	}).(IntegrationScheduledTriggerPropertiesDataPullModeOutput)
}

func (o IntegrationScheduledTriggerPropertiesDataPullModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationScheduledTriggerPropertiesDataPullModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationScheduledTriggerPropertiesDataPullMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationScheduledTriggerPropertiesDataPullModeInput is an input type that accepts IntegrationScheduledTriggerPropertiesDataPullModeArgs and IntegrationScheduledTriggerPropertiesDataPullModeOutput values.
// You can construct a concrete instance of `IntegrationScheduledTriggerPropertiesDataPullModeInput` via:
//
//          IntegrationScheduledTriggerPropertiesDataPullModeArgs{...}
type IntegrationScheduledTriggerPropertiesDataPullModeInput interface {
	pulumi.Input

	ToIntegrationScheduledTriggerPropertiesDataPullModeOutput() IntegrationScheduledTriggerPropertiesDataPullModeOutput
	ToIntegrationScheduledTriggerPropertiesDataPullModeOutputWithContext(context.Context) IntegrationScheduledTriggerPropertiesDataPullModeOutput
}

var integrationScheduledTriggerPropertiesDataPullModePtrType = reflect.TypeOf((**IntegrationScheduledTriggerPropertiesDataPullMode)(nil)).Elem()

type IntegrationScheduledTriggerPropertiesDataPullModePtrInput interface {
	pulumi.Input

	ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutput() IntegrationScheduledTriggerPropertiesDataPullModePtrOutput
	ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(context.Context) IntegrationScheduledTriggerPropertiesDataPullModePtrOutput
}

type integrationScheduledTriggerPropertiesDataPullModePtr string

func IntegrationScheduledTriggerPropertiesDataPullModePtr(v string) IntegrationScheduledTriggerPropertiesDataPullModePtrInput {
	return (*integrationScheduledTriggerPropertiesDataPullModePtr)(&v)
}

func (*integrationScheduledTriggerPropertiesDataPullModePtr) ElementType() reflect.Type {
	return integrationScheduledTriggerPropertiesDataPullModePtrType
}

func (in *integrationScheduledTriggerPropertiesDataPullModePtr) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutput() IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return pulumi.ToOutput(in).(IntegrationScheduledTriggerPropertiesDataPullModePtrOutput)
}

func (in *integrationScheduledTriggerPropertiesDataPullModePtr) ToIntegrationScheduledTriggerPropertiesDataPullModePtrOutputWithContext(ctx context.Context) IntegrationScheduledTriggerPropertiesDataPullModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationScheduledTriggerPropertiesDataPullModePtrOutput)
}

type IntegrationServiceNowConnectorOperator string

const (
	IntegrationServiceNowConnectorOperatorProjection           = IntegrationServiceNowConnectorOperator("PROJECTION")
	IntegrationServiceNowConnectorOperatorLessThan             = IntegrationServiceNowConnectorOperator("LESS_THAN")
	IntegrationServiceNowConnectorOperatorGreaterThan          = IntegrationServiceNowConnectorOperator("GREATER_THAN")
	IntegrationServiceNowConnectorOperatorContains             = IntegrationServiceNowConnectorOperator("CONTAINS")
	IntegrationServiceNowConnectorOperatorBetween              = IntegrationServiceNowConnectorOperator("BETWEEN")
	IntegrationServiceNowConnectorOperatorLessThanOrEqualTo    = IntegrationServiceNowConnectorOperator("LESS_THAN_OR_EQUAL_TO")
	IntegrationServiceNowConnectorOperatorGreaterThanOrEqualTo = IntegrationServiceNowConnectorOperator("GREATER_THAN_OR_EQUAL_TO")
	IntegrationServiceNowConnectorOperatorEqualTo              = IntegrationServiceNowConnectorOperator("EQUAL_TO")
	IntegrationServiceNowConnectorOperatorNotEqualTo           = IntegrationServiceNowConnectorOperator("NOT_EQUAL_TO")
	IntegrationServiceNowConnectorOperatorAddition             = IntegrationServiceNowConnectorOperator("ADDITION")
	IntegrationServiceNowConnectorOperatorMultiplication       = IntegrationServiceNowConnectorOperator("MULTIPLICATION")
	IntegrationServiceNowConnectorOperatorDivision             = IntegrationServiceNowConnectorOperator("DIVISION")
	IntegrationServiceNowConnectorOperatorSubtraction          = IntegrationServiceNowConnectorOperator("SUBTRACTION")
	IntegrationServiceNowConnectorOperatorMaskAll              = IntegrationServiceNowConnectorOperator("MASK_ALL")
	IntegrationServiceNowConnectorOperatorMaskFirstN           = IntegrationServiceNowConnectorOperator("MASK_FIRST_N")
	IntegrationServiceNowConnectorOperatorMaskLastN            = IntegrationServiceNowConnectorOperator("MASK_LAST_N")
	IntegrationServiceNowConnectorOperatorValidateNonNull      = IntegrationServiceNowConnectorOperator("VALIDATE_NON_NULL")
	IntegrationServiceNowConnectorOperatorValidateNonZero      = IntegrationServiceNowConnectorOperator("VALIDATE_NON_ZERO")
	IntegrationServiceNowConnectorOperatorValidateNonNegative  = IntegrationServiceNowConnectorOperator("VALIDATE_NON_NEGATIVE")
	IntegrationServiceNowConnectorOperatorValidateNumeric      = IntegrationServiceNowConnectorOperator("VALIDATE_NUMERIC")
	IntegrationServiceNowConnectorOperatorNoOp                 = IntegrationServiceNowConnectorOperator("NO_OP")
)

func (IntegrationServiceNowConnectorOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceNowConnectorOperator)(nil)).Elem()
}

func (e IntegrationServiceNowConnectorOperator) ToIntegrationServiceNowConnectorOperatorOutput() IntegrationServiceNowConnectorOperatorOutput {
	return pulumi.ToOutput(e).(IntegrationServiceNowConnectorOperatorOutput)
}

func (e IntegrationServiceNowConnectorOperator) ToIntegrationServiceNowConnectorOperatorOutputWithContext(ctx context.Context) IntegrationServiceNowConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationServiceNowConnectorOperatorOutput)
}

func (e IntegrationServiceNowConnectorOperator) ToIntegrationServiceNowConnectorOperatorPtrOutput() IntegrationServiceNowConnectorOperatorPtrOutput {
	return e.ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(context.Background())
}

func (e IntegrationServiceNowConnectorOperator) ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationServiceNowConnectorOperatorPtrOutput {
	return IntegrationServiceNowConnectorOperator(e).ToIntegrationServiceNowConnectorOperatorOutputWithContext(ctx).ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(ctx)
}

func (e IntegrationServiceNowConnectorOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationServiceNowConnectorOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationServiceNowConnectorOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationServiceNowConnectorOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationServiceNowConnectorOperatorOutput struct{ *pulumi.OutputState }

func (IntegrationServiceNowConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceNowConnectorOperator)(nil)).Elem()
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToIntegrationServiceNowConnectorOperatorOutput() IntegrationServiceNowConnectorOperatorOutput {
	return o
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToIntegrationServiceNowConnectorOperatorOutputWithContext(ctx context.Context) IntegrationServiceNowConnectorOperatorOutput {
	return o
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToIntegrationServiceNowConnectorOperatorPtrOutput() IntegrationServiceNowConnectorOperatorPtrOutput {
	return o.ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationServiceNowConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationServiceNowConnectorOperator) *IntegrationServiceNowConnectorOperator {
		return &v
	}).(IntegrationServiceNowConnectorOperatorPtrOutput)
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationServiceNowConnectorOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationServiceNowConnectorOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationServiceNowConnectorOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationServiceNowConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (IntegrationServiceNowConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceNowConnectorOperator)(nil)).Elem()
}

func (o IntegrationServiceNowConnectorOperatorPtrOutput) ToIntegrationServiceNowConnectorOperatorPtrOutput() IntegrationServiceNowConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationServiceNowConnectorOperatorPtrOutput) ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationServiceNowConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationServiceNowConnectorOperatorPtrOutput) Elem() IntegrationServiceNowConnectorOperatorOutput {
	return o.ApplyT(func(v *IntegrationServiceNowConnectorOperator) IntegrationServiceNowConnectorOperator {
		if v != nil {
			return *v
		}
		var ret IntegrationServiceNowConnectorOperator
		return ret
	}).(IntegrationServiceNowConnectorOperatorOutput)
}

func (o IntegrationServiceNowConnectorOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationServiceNowConnectorOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationServiceNowConnectorOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationServiceNowConnectorOperatorInput is an input type that accepts IntegrationServiceNowConnectorOperatorArgs and IntegrationServiceNowConnectorOperatorOutput values.
// You can construct a concrete instance of `IntegrationServiceNowConnectorOperatorInput` via:
//
//          IntegrationServiceNowConnectorOperatorArgs{...}
type IntegrationServiceNowConnectorOperatorInput interface {
	pulumi.Input

	ToIntegrationServiceNowConnectorOperatorOutput() IntegrationServiceNowConnectorOperatorOutput
	ToIntegrationServiceNowConnectorOperatorOutputWithContext(context.Context) IntegrationServiceNowConnectorOperatorOutput
}

var integrationServiceNowConnectorOperatorPtrType = reflect.TypeOf((**IntegrationServiceNowConnectorOperator)(nil)).Elem()

type IntegrationServiceNowConnectorOperatorPtrInput interface {
	pulumi.Input

	ToIntegrationServiceNowConnectorOperatorPtrOutput() IntegrationServiceNowConnectorOperatorPtrOutput
	ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(context.Context) IntegrationServiceNowConnectorOperatorPtrOutput
}

type integrationServiceNowConnectorOperatorPtr string

func IntegrationServiceNowConnectorOperatorPtr(v string) IntegrationServiceNowConnectorOperatorPtrInput {
	return (*integrationServiceNowConnectorOperatorPtr)(&v)
}

func (*integrationServiceNowConnectorOperatorPtr) ElementType() reflect.Type {
	return integrationServiceNowConnectorOperatorPtrType
}

func (in *integrationServiceNowConnectorOperatorPtr) ToIntegrationServiceNowConnectorOperatorPtrOutput() IntegrationServiceNowConnectorOperatorPtrOutput {
	return pulumi.ToOutput(in).(IntegrationServiceNowConnectorOperatorPtrOutput)
}

func (in *integrationServiceNowConnectorOperatorPtr) ToIntegrationServiceNowConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationServiceNowConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationServiceNowConnectorOperatorPtrOutput)
}

type IntegrationTaskType string

const (
	IntegrationTaskTypeArithmetic = IntegrationTaskType("Arithmetic")
	IntegrationTaskTypeFilter     = IntegrationTaskType("Filter")
	IntegrationTaskTypeMap        = IntegrationTaskType("Map")
	IntegrationTaskTypeMask       = IntegrationTaskType("Mask")
	IntegrationTaskTypeMerge      = IntegrationTaskType("Merge")
	IntegrationTaskTypeTruncate   = IntegrationTaskType("Truncate")
	IntegrationTaskTypeValidate   = IntegrationTaskType("Validate")
)

func (IntegrationTaskType) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskType)(nil)).Elem()
}

func (e IntegrationTaskType) ToIntegrationTaskTypeOutput() IntegrationTaskTypeOutput {
	return pulumi.ToOutput(e).(IntegrationTaskTypeOutput)
}

func (e IntegrationTaskType) ToIntegrationTaskTypeOutputWithContext(ctx context.Context) IntegrationTaskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationTaskTypeOutput)
}

func (e IntegrationTaskType) ToIntegrationTaskTypePtrOutput() IntegrationTaskTypePtrOutput {
	return e.ToIntegrationTaskTypePtrOutputWithContext(context.Background())
}

func (e IntegrationTaskType) ToIntegrationTaskTypePtrOutputWithContext(ctx context.Context) IntegrationTaskTypePtrOutput {
	return IntegrationTaskType(e).ToIntegrationTaskTypeOutputWithContext(ctx).ToIntegrationTaskTypePtrOutputWithContext(ctx)
}

func (e IntegrationTaskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationTaskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationTaskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationTaskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationTaskTypeOutput struct{ *pulumi.OutputState }

func (IntegrationTaskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTaskType)(nil)).Elem()
}

func (o IntegrationTaskTypeOutput) ToIntegrationTaskTypeOutput() IntegrationTaskTypeOutput {
	return o
}

func (o IntegrationTaskTypeOutput) ToIntegrationTaskTypeOutputWithContext(ctx context.Context) IntegrationTaskTypeOutput {
	return o
}

func (o IntegrationTaskTypeOutput) ToIntegrationTaskTypePtrOutput() IntegrationTaskTypePtrOutput {
	return o.ToIntegrationTaskTypePtrOutputWithContext(context.Background())
}

func (o IntegrationTaskTypeOutput) ToIntegrationTaskTypePtrOutputWithContext(ctx context.Context) IntegrationTaskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationTaskType) *IntegrationTaskType {
		return &v
	}).(IntegrationTaskTypePtrOutput)
}

func (o IntegrationTaskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationTaskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationTaskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationTaskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationTaskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationTaskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationTaskTypePtrOutput struct{ *pulumi.OutputState }

func (IntegrationTaskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTaskType)(nil)).Elem()
}

func (o IntegrationTaskTypePtrOutput) ToIntegrationTaskTypePtrOutput() IntegrationTaskTypePtrOutput {
	return o
}

func (o IntegrationTaskTypePtrOutput) ToIntegrationTaskTypePtrOutputWithContext(ctx context.Context) IntegrationTaskTypePtrOutput {
	return o
}

func (o IntegrationTaskTypePtrOutput) Elem() IntegrationTaskTypeOutput {
	return o.ApplyT(func(v *IntegrationTaskType) IntegrationTaskType {
		if v != nil {
			return *v
		}
		var ret IntegrationTaskType
		return ret
	}).(IntegrationTaskTypeOutput)
}

func (o IntegrationTaskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationTaskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationTaskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationTaskTypeInput is an input type that accepts IntegrationTaskTypeArgs and IntegrationTaskTypeOutput values.
// You can construct a concrete instance of `IntegrationTaskTypeInput` via:
//
//          IntegrationTaskTypeArgs{...}
type IntegrationTaskTypeInput interface {
	pulumi.Input

	ToIntegrationTaskTypeOutput() IntegrationTaskTypeOutput
	ToIntegrationTaskTypeOutputWithContext(context.Context) IntegrationTaskTypeOutput
}

var integrationTaskTypePtrType = reflect.TypeOf((**IntegrationTaskType)(nil)).Elem()

type IntegrationTaskTypePtrInput interface {
	pulumi.Input

	ToIntegrationTaskTypePtrOutput() IntegrationTaskTypePtrOutput
	ToIntegrationTaskTypePtrOutputWithContext(context.Context) IntegrationTaskTypePtrOutput
}

type integrationTaskTypePtr string

func IntegrationTaskTypePtr(v string) IntegrationTaskTypePtrInput {
	return (*integrationTaskTypePtr)(&v)
}

func (*integrationTaskTypePtr) ElementType() reflect.Type {
	return integrationTaskTypePtrType
}

func (in *integrationTaskTypePtr) ToIntegrationTaskTypePtrOutput() IntegrationTaskTypePtrOutput {
	return pulumi.ToOutput(in).(IntegrationTaskTypePtrOutput)
}

func (in *integrationTaskTypePtr) ToIntegrationTaskTypePtrOutputWithContext(ctx context.Context) IntegrationTaskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationTaskTypePtrOutput)
}

type IntegrationTriggerType string

const (
	IntegrationTriggerTypeScheduled = IntegrationTriggerType("Scheduled")
	IntegrationTriggerTypeEvent     = IntegrationTriggerType("Event")
	IntegrationTriggerTypeOnDemand  = IntegrationTriggerType("OnDemand")
)

func (IntegrationTriggerType) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTriggerType)(nil)).Elem()
}

func (e IntegrationTriggerType) ToIntegrationTriggerTypeOutput() IntegrationTriggerTypeOutput {
	return pulumi.ToOutput(e).(IntegrationTriggerTypeOutput)
}

func (e IntegrationTriggerType) ToIntegrationTriggerTypeOutputWithContext(ctx context.Context) IntegrationTriggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationTriggerTypeOutput)
}

func (e IntegrationTriggerType) ToIntegrationTriggerTypePtrOutput() IntegrationTriggerTypePtrOutput {
	return e.ToIntegrationTriggerTypePtrOutputWithContext(context.Background())
}

func (e IntegrationTriggerType) ToIntegrationTriggerTypePtrOutputWithContext(ctx context.Context) IntegrationTriggerTypePtrOutput {
	return IntegrationTriggerType(e).ToIntegrationTriggerTypeOutputWithContext(ctx).ToIntegrationTriggerTypePtrOutputWithContext(ctx)
}

func (e IntegrationTriggerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationTriggerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationTriggerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationTriggerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationTriggerTypeOutput struct{ *pulumi.OutputState }

func (IntegrationTriggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTriggerType)(nil)).Elem()
}

func (o IntegrationTriggerTypeOutput) ToIntegrationTriggerTypeOutput() IntegrationTriggerTypeOutput {
	return o
}

func (o IntegrationTriggerTypeOutput) ToIntegrationTriggerTypeOutputWithContext(ctx context.Context) IntegrationTriggerTypeOutput {
	return o
}

func (o IntegrationTriggerTypeOutput) ToIntegrationTriggerTypePtrOutput() IntegrationTriggerTypePtrOutput {
	return o.ToIntegrationTriggerTypePtrOutputWithContext(context.Background())
}

func (o IntegrationTriggerTypeOutput) ToIntegrationTriggerTypePtrOutputWithContext(ctx context.Context) IntegrationTriggerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationTriggerType) *IntegrationTriggerType {
		return &v
	}).(IntegrationTriggerTypePtrOutput)
}

func (o IntegrationTriggerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationTriggerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationTriggerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationTriggerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationTriggerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationTriggerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationTriggerTypePtrOutput struct{ *pulumi.OutputState }

func (IntegrationTriggerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTriggerType)(nil)).Elem()
}

func (o IntegrationTriggerTypePtrOutput) ToIntegrationTriggerTypePtrOutput() IntegrationTriggerTypePtrOutput {
	return o
}

func (o IntegrationTriggerTypePtrOutput) ToIntegrationTriggerTypePtrOutputWithContext(ctx context.Context) IntegrationTriggerTypePtrOutput {
	return o
}

func (o IntegrationTriggerTypePtrOutput) Elem() IntegrationTriggerTypeOutput {
	return o.ApplyT(func(v *IntegrationTriggerType) IntegrationTriggerType {
		if v != nil {
			return *v
		}
		var ret IntegrationTriggerType
		return ret
	}).(IntegrationTriggerTypeOutput)
}

func (o IntegrationTriggerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationTriggerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationTriggerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationTriggerTypeInput is an input type that accepts IntegrationTriggerTypeArgs and IntegrationTriggerTypeOutput values.
// You can construct a concrete instance of `IntegrationTriggerTypeInput` via:
//
//          IntegrationTriggerTypeArgs{...}
type IntegrationTriggerTypeInput interface {
	pulumi.Input

	ToIntegrationTriggerTypeOutput() IntegrationTriggerTypeOutput
	ToIntegrationTriggerTypeOutputWithContext(context.Context) IntegrationTriggerTypeOutput
}

var integrationTriggerTypePtrType = reflect.TypeOf((**IntegrationTriggerType)(nil)).Elem()

type IntegrationTriggerTypePtrInput interface {
	pulumi.Input

	ToIntegrationTriggerTypePtrOutput() IntegrationTriggerTypePtrOutput
	ToIntegrationTriggerTypePtrOutputWithContext(context.Context) IntegrationTriggerTypePtrOutput
}

type integrationTriggerTypePtr string

func IntegrationTriggerTypePtr(v string) IntegrationTriggerTypePtrInput {
	return (*integrationTriggerTypePtr)(&v)
}

func (*integrationTriggerTypePtr) ElementType() reflect.Type {
	return integrationTriggerTypePtrType
}

func (in *integrationTriggerTypePtr) ToIntegrationTriggerTypePtrOutput() IntegrationTriggerTypePtrOutput {
	return pulumi.ToOutput(in).(IntegrationTriggerTypePtrOutput)
}

func (in *integrationTriggerTypePtr) ToIntegrationTriggerTypePtrOutputWithContext(ctx context.Context) IntegrationTriggerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationTriggerTypePtrOutput)
}

type IntegrationZendeskConnectorOperator string

const (
	IntegrationZendeskConnectorOperatorProjection          = IntegrationZendeskConnectorOperator("PROJECTION")
	IntegrationZendeskConnectorOperatorGreaterThan         = IntegrationZendeskConnectorOperator("GREATER_THAN")
	IntegrationZendeskConnectorOperatorAddition            = IntegrationZendeskConnectorOperator("ADDITION")
	IntegrationZendeskConnectorOperatorMultiplication      = IntegrationZendeskConnectorOperator("MULTIPLICATION")
	IntegrationZendeskConnectorOperatorDivision            = IntegrationZendeskConnectorOperator("DIVISION")
	IntegrationZendeskConnectorOperatorSubtraction         = IntegrationZendeskConnectorOperator("SUBTRACTION")
	IntegrationZendeskConnectorOperatorMaskAll             = IntegrationZendeskConnectorOperator("MASK_ALL")
	IntegrationZendeskConnectorOperatorMaskFirstN          = IntegrationZendeskConnectorOperator("MASK_FIRST_N")
	IntegrationZendeskConnectorOperatorMaskLastN           = IntegrationZendeskConnectorOperator("MASK_LAST_N")
	IntegrationZendeskConnectorOperatorValidateNonNull     = IntegrationZendeskConnectorOperator("VALIDATE_NON_NULL")
	IntegrationZendeskConnectorOperatorValidateNonZero     = IntegrationZendeskConnectorOperator("VALIDATE_NON_ZERO")
	IntegrationZendeskConnectorOperatorValidateNonNegative = IntegrationZendeskConnectorOperator("VALIDATE_NON_NEGATIVE")
	IntegrationZendeskConnectorOperatorValidateNumeric     = IntegrationZendeskConnectorOperator("VALIDATE_NUMERIC")
	IntegrationZendeskConnectorOperatorNoOp                = IntegrationZendeskConnectorOperator("NO_OP")
)

func (IntegrationZendeskConnectorOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationZendeskConnectorOperator)(nil)).Elem()
}

func (e IntegrationZendeskConnectorOperator) ToIntegrationZendeskConnectorOperatorOutput() IntegrationZendeskConnectorOperatorOutput {
	return pulumi.ToOutput(e).(IntegrationZendeskConnectorOperatorOutput)
}

func (e IntegrationZendeskConnectorOperator) ToIntegrationZendeskConnectorOperatorOutputWithContext(ctx context.Context) IntegrationZendeskConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationZendeskConnectorOperatorOutput)
}

func (e IntegrationZendeskConnectorOperator) ToIntegrationZendeskConnectorOperatorPtrOutput() IntegrationZendeskConnectorOperatorPtrOutput {
	return e.ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(context.Background())
}

func (e IntegrationZendeskConnectorOperator) ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationZendeskConnectorOperatorPtrOutput {
	return IntegrationZendeskConnectorOperator(e).ToIntegrationZendeskConnectorOperatorOutputWithContext(ctx).ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(ctx)
}

func (e IntegrationZendeskConnectorOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationZendeskConnectorOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationZendeskConnectorOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationZendeskConnectorOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationZendeskConnectorOperatorOutput struct{ *pulumi.OutputState }

func (IntegrationZendeskConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationZendeskConnectorOperator)(nil)).Elem()
}

func (o IntegrationZendeskConnectorOperatorOutput) ToIntegrationZendeskConnectorOperatorOutput() IntegrationZendeskConnectorOperatorOutput {
	return o
}

func (o IntegrationZendeskConnectorOperatorOutput) ToIntegrationZendeskConnectorOperatorOutputWithContext(ctx context.Context) IntegrationZendeskConnectorOperatorOutput {
	return o
}

func (o IntegrationZendeskConnectorOperatorOutput) ToIntegrationZendeskConnectorOperatorPtrOutput() IntegrationZendeskConnectorOperatorPtrOutput {
	return o.ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o IntegrationZendeskConnectorOperatorOutput) ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationZendeskConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationZendeskConnectorOperator) *IntegrationZendeskConnectorOperator {
		return &v
	}).(IntegrationZendeskConnectorOperatorPtrOutput)
}

func (o IntegrationZendeskConnectorOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationZendeskConnectorOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationZendeskConnectorOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationZendeskConnectorOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationZendeskConnectorOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationZendeskConnectorOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationZendeskConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (IntegrationZendeskConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationZendeskConnectorOperator)(nil)).Elem()
}

func (o IntegrationZendeskConnectorOperatorPtrOutput) ToIntegrationZendeskConnectorOperatorPtrOutput() IntegrationZendeskConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationZendeskConnectorOperatorPtrOutput) ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationZendeskConnectorOperatorPtrOutput {
	return o
}

func (o IntegrationZendeskConnectorOperatorPtrOutput) Elem() IntegrationZendeskConnectorOperatorOutput {
	return o.ApplyT(func(v *IntegrationZendeskConnectorOperator) IntegrationZendeskConnectorOperator {
		if v != nil {
			return *v
		}
		var ret IntegrationZendeskConnectorOperator
		return ret
	}).(IntegrationZendeskConnectorOperatorOutput)
}

func (o IntegrationZendeskConnectorOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationZendeskConnectorOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationZendeskConnectorOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationZendeskConnectorOperatorInput is an input type that accepts IntegrationZendeskConnectorOperatorArgs and IntegrationZendeskConnectorOperatorOutput values.
// You can construct a concrete instance of `IntegrationZendeskConnectorOperatorInput` via:
//
//          IntegrationZendeskConnectorOperatorArgs{...}
type IntegrationZendeskConnectorOperatorInput interface {
	pulumi.Input

	ToIntegrationZendeskConnectorOperatorOutput() IntegrationZendeskConnectorOperatorOutput
	ToIntegrationZendeskConnectorOperatorOutputWithContext(context.Context) IntegrationZendeskConnectorOperatorOutput
}

var integrationZendeskConnectorOperatorPtrType = reflect.TypeOf((**IntegrationZendeskConnectorOperator)(nil)).Elem()

type IntegrationZendeskConnectorOperatorPtrInput interface {
	pulumi.Input

	ToIntegrationZendeskConnectorOperatorPtrOutput() IntegrationZendeskConnectorOperatorPtrOutput
	ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(context.Context) IntegrationZendeskConnectorOperatorPtrOutput
}

type integrationZendeskConnectorOperatorPtr string

func IntegrationZendeskConnectorOperatorPtr(v string) IntegrationZendeskConnectorOperatorPtrInput {
	return (*integrationZendeskConnectorOperatorPtr)(&v)
}

func (*integrationZendeskConnectorOperatorPtr) ElementType() reflect.Type {
	return integrationZendeskConnectorOperatorPtrType
}

func (in *integrationZendeskConnectorOperatorPtr) ToIntegrationZendeskConnectorOperatorPtrOutput() IntegrationZendeskConnectorOperatorPtrOutput {
	return pulumi.ToOutput(in).(IntegrationZendeskConnectorOperatorPtrOutput)
}

func (in *integrationZendeskConnectorOperatorPtr) ToIntegrationZendeskConnectorOperatorPtrOutputWithContext(ctx context.Context) IntegrationZendeskConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationZendeskConnectorOperatorPtrOutput)
}

// The content type of the field. Used for determining equality when searching.
type ObjectTypeObjectTypeFieldContentType string

const (
	ObjectTypeObjectTypeFieldContentTypeString       = ObjectTypeObjectTypeFieldContentType("STRING")
	ObjectTypeObjectTypeFieldContentTypeNumber       = ObjectTypeObjectTypeFieldContentType("NUMBER")
	ObjectTypeObjectTypeFieldContentTypePhoneNumber  = ObjectTypeObjectTypeFieldContentType("PHONE_NUMBER")
	ObjectTypeObjectTypeFieldContentTypeEmailAddress = ObjectTypeObjectTypeFieldContentType("EMAIL_ADDRESS")
	ObjectTypeObjectTypeFieldContentTypeName         = ObjectTypeObjectTypeFieldContentType("NAME")
)

func (ObjectTypeObjectTypeFieldContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeFieldContentType)(nil)).Elem()
}

func (e ObjectTypeObjectTypeFieldContentType) ToObjectTypeObjectTypeFieldContentTypeOutput() ObjectTypeObjectTypeFieldContentTypeOutput {
	return pulumi.ToOutput(e).(ObjectTypeObjectTypeFieldContentTypeOutput)
}

func (e ObjectTypeObjectTypeFieldContentType) ToObjectTypeObjectTypeFieldContentTypeOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ObjectTypeObjectTypeFieldContentTypeOutput)
}

func (e ObjectTypeObjectTypeFieldContentType) ToObjectTypeObjectTypeFieldContentTypePtrOutput() ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return e.ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(context.Background())
}

func (e ObjectTypeObjectTypeFieldContentType) ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return ObjectTypeObjectTypeFieldContentType(e).ToObjectTypeObjectTypeFieldContentTypeOutputWithContext(ctx).ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(ctx)
}

func (e ObjectTypeObjectTypeFieldContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ObjectTypeObjectTypeFieldContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ObjectTypeObjectTypeFieldContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ObjectTypeObjectTypeFieldContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ObjectTypeObjectTypeFieldContentTypeOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeFieldContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeFieldContentType)(nil)).Elem()
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToObjectTypeObjectTypeFieldContentTypeOutput() ObjectTypeObjectTypeFieldContentTypeOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToObjectTypeObjectTypeFieldContentTypeOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldContentTypeOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToObjectTypeObjectTypeFieldContentTypePtrOutput() ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return o.ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectTypeObjectTypeFieldContentType) *ObjectTypeObjectTypeFieldContentType {
		return &v
	}).(ObjectTypeObjectTypeFieldContentTypePtrOutput)
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ObjectTypeObjectTypeFieldContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeFieldContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ObjectTypeObjectTypeFieldContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ObjectTypeObjectTypeFieldContentTypePtrOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeFieldContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectTypeObjectTypeFieldContentType)(nil)).Elem()
}

func (o ObjectTypeObjectTypeFieldContentTypePtrOutput) ToObjectTypeObjectTypeFieldContentTypePtrOutput() ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldContentTypePtrOutput) ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return o
}

func (o ObjectTypeObjectTypeFieldContentTypePtrOutput) Elem() ObjectTypeObjectTypeFieldContentTypeOutput {
	return o.ApplyT(func(v *ObjectTypeObjectTypeFieldContentType) ObjectTypeObjectTypeFieldContentType {
		if v != nil {
			return *v
		}
		var ret ObjectTypeObjectTypeFieldContentType
		return ret
	}).(ObjectTypeObjectTypeFieldContentTypeOutput)
}

func (o ObjectTypeObjectTypeFieldContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeFieldContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ObjectTypeObjectTypeFieldContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ObjectTypeObjectTypeFieldContentTypeInput is an input type that accepts ObjectTypeObjectTypeFieldContentTypeArgs and ObjectTypeObjectTypeFieldContentTypeOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeFieldContentTypeInput` via:
//
//          ObjectTypeObjectTypeFieldContentTypeArgs{...}
type ObjectTypeObjectTypeFieldContentTypeInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeFieldContentTypeOutput() ObjectTypeObjectTypeFieldContentTypeOutput
	ToObjectTypeObjectTypeFieldContentTypeOutputWithContext(context.Context) ObjectTypeObjectTypeFieldContentTypeOutput
}

var objectTypeObjectTypeFieldContentTypePtrType = reflect.TypeOf((**ObjectTypeObjectTypeFieldContentType)(nil)).Elem()

type ObjectTypeObjectTypeFieldContentTypePtrInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeFieldContentTypePtrOutput() ObjectTypeObjectTypeFieldContentTypePtrOutput
	ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(context.Context) ObjectTypeObjectTypeFieldContentTypePtrOutput
}

type objectTypeObjectTypeFieldContentTypePtr string

func ObjectTypeObjectTypeFieldContentTypePtr(v string) ObjectTypeObjectTypeFieldContentTypePtrInput {
	return (*objectTypeObjectTypeFieldContentTypePtr)(&v)
}

func (*objectTypeObjectTypeFieldContentTypePtr) ElementType() reflect.Type {
	return objectTypeObjectTypeFieldContentTypePtrType
}

func (in *objectTypeObjectTypeFieldContentTypePtr) ToObjectTypeObjectTypeFieldContentTypePtrOutput() ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return pulumi.ToOutput(in).(ObjectTypeObjectTypeFieldContentTypePtrOutput)
}

func (in *objectTypeObjectTypeFieldContentTypePtr) ToObjectTypeObjectTypeFieldContentTypePtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeFieldContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ObjectTypeObjectTypeFieldContentTypePtrOutput)
}

type ObjectTypeObjectTypeKeyStandardIdentifiersItem string

const (
	ObjectTypeObjectTypeKeyStandardIdentifiersItemProfile    = ObjectTypeObjectTypeKeyStandardIdentifiersItem("PROFILE")
	ObjectTypeObjectTypeKeyStandardIdentifiersItemUnique     = ObjectTypeObjectTypeKeyStandardIdentifiersItem("UNIQUE")
	ObjectTypeObjectTypeKeyStandardIdentifiersItemSecondary  = ObjectTypeObjectTypeKeyStandardIdentifiersItem("SECONDARY")
	ObjectTypeObjectTypeKeyStandardIdentifiersItemLookupOnly = ObjectTypeObjectTypeKeyStandardIdentifiersItem("LOOKUP_ONLY")
	ObjectTypeObjectTypeKeyStandardIdentifiersItemNewOnly    = ObjectTypeObjectTypeKeyStandardIdentifiersItem("NEW_ONLY")
)

func (ObjectTypeObjectTypeKeyStandardIdentifiersItem) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeKeyStandardIdentifiersItem)(nil)).Elem()
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput {
	return pulumi.ToOutput(e).(ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput)
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput)
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return e.ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(context.Background())
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return ObjectTypeObjectTypeKeyStandardIdentifiersItem(e).ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutputWithContext(ctx).ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(ctx)
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ObjectTypeObjectTypeKeyStandardIdentifiersItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectTypeObjectTypeKeyStandardIdentifiersItem)(nil)).Elem()
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return o.ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectTypeObjectTypeKeyStandardIdentifiersItem) *ObjectTypeObjectTypeKeyStandardIdentifiersItem {
		return &v
	}).(ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput)
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ObjectTypeObjectTypeKeyStandardIdentifiersItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ObjectTypeObjectTypeKeyStandardIdentifiersItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectTypeObjectTypeKeyStandardIdentifiersItem)(nil)).Elem()
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput) Elem() ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput {
	return o.ApplyT(func(v *ObjectTypeObjectTypeKeyStandardIdentifiersItem) ObjectTypeObjectTypeKeyStandardIdentifiersItem {
		if v != nil {
			return *v
		}
		var ret ObjectTypeObjectTypeKeyStandardIdentifiersItem
		return ret
	}).(ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput)
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ObjectTypeObjectTypeKeyStandardIdentifiersItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ObjectTypeObjectTypeKeyStandardIdentifiersItemInput is an input type that accepts ObjectTypeObjectTypeKeyStandardIdentifiersItemArgs and ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeKeyStandardIdentifiersItemInput` via:
//
//          ObjectTypeObjectTypeKeyStandardIdentifiersItemArgs{...}
type ObjectTypeObjectTypeKeyStandardIdentifiersItemInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput
	ToObjectTypeObjectTypeKeyStandardIdentifiersItemOutputWithContext(context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput
}

var objectTypeObjectTypeKeyStandardIdentifiersItemPtrType = reflect.TypeOf((**ObjectTypeObjectTypeKeyStandardIdentifiersItem)(nil)).Elem()

type ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput
	ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput
}

type objectTypeObjectTypeKeyStandardIdentifiersItemPtr string

func ObjectTypeObjectTypeKeyStandardIdentifiersItemPtr(v string) ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrInput {
	return (*objectTypeObjectTypeKeyStandardIdentifiersItemPtr)(&v)
}

func (*objectTypeObjectTypeKeyStandardIdentifiersItemPtr) ElementType() reflect.Type {
	return objectTypeObjectTypeKeyStandardIdentifiersItemPtrType
}

func (in *objectTypeObjectTypeKeyStandardIdentifiersItemPtr) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return pulumi.ToOutput(in).(ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput)
}

func (in *objectTypeObjectTypeKeyStandardIdentifiersItemPtr) ToObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput)
}

// ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayInput is an input type that accepts ObjectTypeObjectTypeKeyStandardIdentifiersItemArray and ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput values.
// You can construct a concrete instance of `ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayInput` via:
//
//          ObjectTypeObjectTypeKeyStandardIdentifiersItemArray{ ObjectTypeObjectTypeKeyStandardIdentifiersItemArgs{...} }
type ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayInput interface {
	pulumi.Input

	ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput
	ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutputWithContext(context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput
}

type ObjectTypeObjectTypeKeyStandardIdentifiersItemArray []ObjectTypeObjectTypeKeyStandardIdentifiersItem

func (ObjectTypeObjectTypeKeyStandardIdentifiersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeObjectTypeKeyStandardIdentifiersItem)(nil)).Elem()
}

func (i ObjectTypeObjectTypeKeyStandardIdentifiersItemArray) ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput {
	return i.ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutputWithContext(context.Background())
}

func (i ObjectTypeObjectTypeKeyStandardIdentifiersItemArray) ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput)
}

type ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput struct{ *pulumi.OutputState }

func (ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectTypeObjectTypeKeyStandardIdentifiersItem)(nil)).Elem()
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput() ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput) ToObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutputWithContext(ctx context.Context) ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput {
	return o
}

func (o ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput) Index(i pulumi.IntInput) ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectTypeObjectTypeKeyStandardIdentifiersItem {
		return vs[0].([]ObjectTypeObjectTypeKeyStandardIdentifiersItem)[vs[1].(int)]
	}).(ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput)
}

func init() {
	pulumi.RegisterOutputType(IntegrationConnectorTypeOutput{})
	pulumi.RegisterOutputType(IntegrationConnectorTypePtrOutput{})
	pulumi.RegisterOutputType(IntegrationMarketoConnectorOperatorOutput{})
	pulumi.RegisterOutputType(IntegrationMarketoConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(IntegrationOperatorPropertiesKeysOutput{})
	pulumi.RegisterOutputType(IntegrationOperatorPropertiesKeysPtrOutput{})
	pulumi.RegisterOutputType(IntegrationS3ConnectorOperatorOutput{})
	pulumi.RegisterOutputType(IntegrationS3ConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(IntegrationSalesforceConnectorOperatorOutput{})
	pulumi.RegisterOutputType(IntegrationSalesforceConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(IntegrationScheduledTriggerPropertiesDataPullModeOutput{})
	pulumi.RegisterOutputType(IntegrationScheduledTriggerPropertiesDataPullModePtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceNowConnectorOperatorOutput{})
	pulumi.RegisterOutputType(IntegrationServiceNowConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(IntegrationTaskTypeOutput{})
	pulumi.RegisterOutputType(IntegrationTaskTypePtrOutput{})
	pulumi.RegisterOutputType(IntegrationTriggerTypeOutput{})
	pulumi.RegisterOutputType(IntegrationTriggerTypePtrOutput{})
	pulumi.RegisterOutputType(IntegrationZendeskConnectorOperatorOutput{})
	pulumi.RegisterOutputType(IntegrationZendeskConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeFieldContentTypeOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeFieldContentTypePtrOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeKeyStandardIdentifiersItemOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeKeyStandardIdentifiersItemPtrOutput{})
	pulumi.RegisterOutputType(ObjectTypeObjectTypeKeyStandardIdentifiersItemArrayOutput{})
}
