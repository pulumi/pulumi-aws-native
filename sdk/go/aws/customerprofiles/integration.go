// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package customerprofiles

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The resource schema for creating an Amazon Connect Customer Profiles Integration.
type Integration struct {
	pulumi.CustomResourceState

	// The time of this integration got created
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The unique name of the domain.
	DomainName     pulumi.StringOutput                `pulumi:"domainName"`
	FlowDefinition IntegrationFlowDefinitionPtrOutput `pulumi:"flowDefinition"`
	// The time of this integration got last updated at
	LastUpdatedAt pulumi.StringOutput `pulumi:"lastUpdatedAt"`
	// The name of the ObjectType defined for the 3rd party data in Profile Service
	ObjectTypeName pulumi.StringOutput `pulumi:"objectTypeName"`
	// The tags (keys and values) associated with the integration
	Tags IntegrationTagArrayOutput `pulumi:"tags"`
	// The URI of the S3 bucket or any other type of data source.
	Uri pulumi.StringPtrOutput `pulumi:"uri"`
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOption) (*Integration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.ObjectTypeName == nil {
		return nil, errors.New("invalid value for required argument 'ObjectTypeName'")
	}
	var resource Integration
	err := ctx.RegisterResource("aws-native:customerprofiles:Integration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationState, opts ...pulumi.ResourceOption) (*Integration, error) {
	var resource Integration
	err := ctx.ReadResource("aws-native:customerprofiles:Integration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Integration resources.
type integrationState struct {
}

type IntegrationState struct {
}

func (IntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationState)(nil)).Elem()
}

type integrationArgs struct {
	// The unique name of the domain.
	DomainName     string                     `pulumi:"domainName"`
	FlowDefinition *IntegrationFlowDefinition `pulumi:"flowDefinition"`
	// The name of the ObjectType defined for the 3rd party data in Profile Service
	ObjectTypeName string `pulumi:"objectTypeName"`
	// The tags (keys and values) associated with the integration
	Tags []IntegrationTag `pulumi:"tags"`
	// The URI of the S3 bucket or any other type of data source.
	Uri *string `pulumi:"uri"`
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	// The unique name of the domain.
	DomainName     pulumi.StringInput
	FlowDefinition IntegrationFlowDefinitionPtrInput
	// The name of the ObjectType defined for the 3rd party data in Profile Service
	ObjectTypeName pulumi.StringInput
	// The tags (keys and values) associated with the integration
	Tags IntegrationTagArrayInput
	// The URI of the S3 bucket or any other type of data source.
	Uri pulumi.StringPtrInput
}

func (IntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationArgs)(nil)).Elem()
}

type IntegrationInput interface {
	pulumi.Input

	ToIntegrationOutput() IntegrationOutput
	ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput
}

func (*Integration) ElementType() reflect.Type {
	return reflect.TypeOf((*Integration)(nil))
}

func (i *Integration) ToIntegrationOutput() IntegrationOutput {
	return i.ToIntegrationOutputWithContext(context.Background())
}

func (i *Integration) ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOutput)
}

type IntegrationOutput struct{ *pulumi.OutputState }

func (IntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Integration)(nil))
}

func (o IntegrationOutput) ToIntegrationOutput() IntegrationOutput {
	return o
}

func (o IntegrationOutput) ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationInput)(nil)).Elem(), &Integration{})
	pulumi.RegisterOutputType(IntegrationOutput{})
}
