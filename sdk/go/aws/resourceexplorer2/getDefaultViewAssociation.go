// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourceexplorer2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::ResourceExplorer2::DefaultViewAssociation Resource Type
func LookupDefaultViewAssociation(ctx *pulumi.Context, args *LookupDefaultViewAssociationArgs, opts ...pulumi.InvokeOption) (*LookupDefaultViewAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDefaultViewAssociationResult
	err := ctx.Invoke("aws-native:resourceexplorer2:getDefaultViewAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDefaultViewAssociationArgs struct {
	// The AWS principal that the default view is associated with, used as the unique identifier for this resource.
	AssociatedAwsPrincipal string `pulumi:"associatedAwsPrincipal"`
}

type LookupDefaultViewAssociationResult struct {
	// The AWS principal that the default view is associated with, used as the unique identifier for this resource.
	AssociatedAwsPrincipal *string `pulumi:"associatedAwsPrincipal"`
	ViewArn                *string `pulumi:"viewArn"`
}

func LookupDefaultViewAssociationOutput(ctx *pulumi.Context, args LookupDefaultViewAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupDefaultViewAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDefaultViewAssociationResult, error) {
			args := v.(LookupDefaultViewAssociationArgs)
			r, err := LookupDefaultViewAssociation(ctx, &args, opts...)
			var s LookupDefaultViewAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDefaultViewAssociationResultOutput)
}

type LookupDefaultViewAssociationOutputArgs struct {
	// The AWS principal that the default view is associated with, used as the unique identifier for this resource.
	AssociatedAwsPrincipal pulumi.StringInput `pulumi:"associatedAwsPrincipal"`
}

func (LookupDefaultViewAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultViewAssociationArgs)(nil)).Elem()
}

type LookupDefaultViewAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupDefaultViewAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultViewAssociationResult)(nil)).Elem()
}

func (o LookupDefaultViewAssociationResultOutput) ToLookupDefaultViewAssociationResultOutput() LookupDefaultViewAssociationResultOutput {
	return o
}

func (o LookupDefaultViewAssociationResultOutput) ToLookupDefaultViewAssociationResultOutputWithContext(ctx context.Context) LookupDefaultViewAssociationResultOutput {
	return o
}

func (o LookupDefaultViewAssociationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDefaultViewAssociationResult] {
	return pulumix.Output[LookupDefaultViewAssociationResult]{
		OutputState: o.OutputState,
	}
}

// The AWS principal that the default view is associated with, used as the unique identifier for this resource.
func (o LookupDefaultViewAssociationResultOutput) AssociatedAwsPrincipal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDefaultViewAssociationResult) *string { return v.AssociatedAwsPrincipal }).(pulumi.StringPtrOutput)
}

func (o LookupDefaultViewAssociationResultOutput) ViewArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDefaultViewAssociationResult) *string { return v.ViewArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDefaultViewAssociationResultOutput{})
}
