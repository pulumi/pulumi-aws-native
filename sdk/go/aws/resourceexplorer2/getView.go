// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourceexplorer2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ResourceExplorer2::View Resource Type
func LookupView(ctx *pulumi.Context, args *LookupViewArgs, opts ...pulumi.InvokeOption) (*LookupViewResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupViewResult
	err := ctx.Invoke("aws-native:resourceexplorer2:getView", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupViewArgs struct {
	// The ARN of the new view. For example:
	//
	// `arn:aws:resource-explorer-2:us-east-1:123456789012:view/MyView/EXAMPLE8-90ab-cdef-fedc-EXAMPLE22222`
	ViewArn string `pulumi:"viewArn"`
}

type LookupViewResult struct {
	// An array of strings that include search keywords, prefixes, and operators that filter the results that are returned for queries made using this view. When you use this view in a [Search](https://docs.aws.amazon.com/resource-explorer/latest/apireference/API_Search.html) operation, the filter string is combined with the search's `QueryString` parameter using a logical `AND` operator.
	//
	// For information about the supported syntax, see [Search query reference for Resource Explorer](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html) in the *AWS Resource Explorer User Guide* .
	//
	// > This query string in the context of this operation supports only [filter prefixes](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-filters) with optional [operators](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-operators) . It doesn't support free-form text. For example, the string `region:us* service:ec2 -tag:stage=prod` includes all Amazon EC2 resources in any AWS Region that begin with the letters `us` and are *not* tagged with a key `Stage` that has the value `prod` .
	Filters *ViewSearchFilter `pulumi:"filters"`
	// A list of fields that provide additional information about the view.
	IncludedProperties []ViewIncludedProperty `pulumi:"includedProperties"`
	// Tag key and value pairs that are attached to the view.
	Tags map[string]string `pulumi:"tags"`
	// The ARN of the new view. For example:
	//
	// `arn:aws:resource-explorer-2:us-east-1:123456789012:view/MyView/EXAMPLE8-90ab-cdef-fedc-EXAMPLE22222`
	ViewArn *string `pulumi:"viewArn"`
}

func LookupViewOutput(ctx *pulumi.Context, args LookupViewOutputArgs, opts ...pulumi.InvokeOption) LookupViewResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupViewResultOutput, error) {
			args := v.(LookupViewArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupViewResult
			secret, err := ctx.InvokePackageRaw("aws-native:resourceexplorer2:getView", args, &rv, "", opts...)
			if err != nil {
				return LookupViewResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupViewResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupViewResultOutput), nil
			}
			return output, nil
		}).(LookupViewResultOutput)
}

type LookupViewOutputArgs struct {
	// The ARN of the new view. For example:
	//
	// `arn:aws:resource-explorer-2:us-east-1:123456789012:view/MyView/EXAMPLE8-90ab-cdef-fedc-EXAMPLE22222`
	ViewArn pulumi.StringInput `pulumi:"viewArn"`
}

func (LookupViewOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupViewArgs)(nil)).Elem()
}

type LookupViewResultOutput struct{ *pulumi.OutputState }

func (LookupViewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupViewResult)(nil)).Elem()
}

func (o LookupViewResultOutput) ToLookupViewResultOutput() LookupViewResultOutput {
	return o
}

func (o LookupViewResultOutput) ToLookupViewResultOutputWithContext(ctx context.Context) LookupViewResultOutput {
	return o
}

// An array of strings that include search keywords, prefixes, and operators that filter the results that are returned for queries made using this view. When you use this view in a [Search](https://docs.aws.amazon.com/resource-explorer/latest/apireference/API_Search.html) operation, the filter string is combined with the search's `QueryString` parameter using a logical `AND` operator.
//
// For information about the supported syntax, see [Search query reference for Resource Explorer](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html) in the *AWS Resource Explorer User Guide* .
//
// > This query string in the context of this operation supports only [filter prefixes](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-filters) with optional [operators](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-operators) . It doesn't support free-form text. For example, the string `region:us* service:ec2 -tag:stage=prod` includes all Amazon EC2 resources in any AWS Region that begin with the letters `us` and are *not* tagged with a key `Stage` that has the value `prod` .
func (o LookupViewResultOutput) Filters() ViewSearchFilterPtrOutput {
	return o.ApplyT(func(v LookupViewResult) *ViewSearchFilter { return v.Filters }).(ViewSearchFilterPtrOutput)
}

// A list of fields that provide additional information about the view.
func (o LookupViewResultOutput) IncludedProperties() ViewIncludedPropertyArrayOutput {
	return o.ApplyT(func(v LookupViewResult) []ViewIncludedProperty { return v.IncludedProperties }).(ViewIncludedPropertyArrayOutput)
}

// Tag key and value pairs that are attached to the view.
func (o LookupViewResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupViewResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The ARN of the new view. For example:
//
// `arn:aws:resource-explorer-2:us-east-1:123456789012:view/MyView/EXAMPLE8-90ab-cdef-fedc-EXAMPLE22222`
func (o LookupViewResultOutput) ViewArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupViewResult) *string { return v.ViewArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupViewResultOutput{})
}
