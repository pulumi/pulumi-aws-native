// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourceexplorer2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ResourceExplorer2::DefaultViewAssociation Resource Type
type DefaultViewAssociation struct {
	pulumi.CustomResourceState

	// The AWS principal that the default view is associated with, used as the unique identifier for this resource.
	AssociatedAwsPrincipal pulumi.StringOutput `pulumi:"associatedAwsPrincipal"`
	ViewArn                pulumi.StringOutput `pulumi:"viewArn"`
}

// NewDefaultViewAssociation registers a new resource with the given unique name, arguments, and options.
func NewDefaultViewAssociation(ctx *pulumi.Context,
	name string, args *DefaultViewAssociationArgs, opts ...pulumi.ResourceOption) (*DefaultViewAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ViewArn == nil {
		return nil, errors.New("invalid value for required argument 'ViewArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultViewAssociation
	err := ctx.RegisterResource("aws-native:resourceexplorer2:DefaultViewAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultViewAssociation gets an existing DefaultViewAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultViewAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultViewAssociationState, opts ...pulumi.ResourceOption) (*DefaultViewAssociation, error) {
	var resource DefaultViewAssociation
	err := ctx.ReadResource("aws-native:resourceexplorer2:DefaultViewAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultViewAssociation resources.
type defaultViewAssociationState struct {
}

type DefaultViewAssociationState struct {
}

func (DefaultViewAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultViewAssociationState)(nil)).Elem()
}

type defaultViewAssociationArgs struct {
	ViewArn string `pulumi:"viewArn"`
}

// The set of arguments for constructing a DefaultViewAssociation resource.
type DefaultViewAssociationArgs struct {
	ViewArn pulumi.StringInput
}

func (DefaultViewAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultViewAssociationArgs)(nil)).Elem()
}

type DefaultViewAssociationInput interface {
	pulumi.Input

	ToDefaultViewAssociationOutput() DefaultViewAssociationOutput
	ToDefaultViewAssociationOutputWithContext(ctx context.Context) DefaultViewAssociationOutput
}

func (*DefaultViewAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultViewAssociation)(nil)).Elem()
}

func (i *DefaultViewAssociation) ToDefaultViewAssociationOutput() DefaultViewAssociationOutput {
	return i.ToDefaultViewAssociationOutputWithContext(context.Background())
}

func (i *DefaultViewAssociation) ToDefaultViewAssociationOutputWithContext(ctx context.Context) DefaultViewAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultViewAssociationOutput)
}

type DefaultViewAssociationOutput struct{ *pulumi.OutputState }

func (DefaultViewAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultViewAssociation)(nil)).Elem()
}

func (o DefaultViewAssociationOutput) ToDefaultViewAssociationOutput() DefaultViewAssociationOutput {
	return o
}

func (o DefaultViewAssociationOutput) ToDefaultViewAssociationOutputWithContext(ctx context.Context) DefaultViewAssociationOutput {
	return o
}

// The AWS principal that the default view is associated with, used as the unique identifier for this resource.
func (o DefaultViewAssociationOutput) AssociatedAwsPrincipal() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultViewAssociation) pulumi.StringOutput { return v.AssociatedAwsPrincipal }).(pulumi.StringOutput)
}

func (o DefaultViewAssociationOutput) ViewArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultViewAssociation) pulumi.StringOutput { return v.ViewArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultViewAssociationInput)(nil)).Elem(), &DefaultViewAssociation{})
	pulumi.RegisterOutputType(DefaultViewAssociationOutput{})
}
