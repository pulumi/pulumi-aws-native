// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::DataSync::StorageSystem
type StorageSystem struct {
	pulumi.CustomResourceState

	AgentArns             pulumi.StringArrayOutput                `pulumi:"agentArns"`
	AwsId                 pulumi.StringOutput                     `pulumi:"awsId"`
	CloudWatchLogGroupArn pulumi.StringPtrOutput                  `pulumi:"cloudWatchLogGroupArn"`
	ConnectivityStatus    pulumi.StringOutput                     `pulumi:"connectivityStatus"`
	Name                  pulumi.StringPtrOutput                  `pulumi:"name"`
	SecretsManagerArn     pulumi.StringOutput                     `pulumi:"secretsManagerArn"`
	ServerConfiguration   StorageSystemServerConfigurationOutput  `pulumi:"serverConfiguration"`
	ServerCredentials     StorageSystemServerCredentialsPtrOutput `pulumi:"serverCredentials"`
	StorageSystemArn      pulumi.StringOutput                     `pulumi:"storageSystemArn"`
	SystemType            pulumi.StringOutput                     `pulumi:"systemType"`
	Tags                  aws.TagArrayOutput                      `pulumi:"tags"`
}

// NewStorageSystem registers a new resource with the given unique name, arguments, and options.
func NewStorageSystem(ctx *pulumi.Context,
	name string, args *StorageSystemArgs, opts ...pulumi.ResourceOption) (*StorageSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentArns == nil {
		return nil, errors.New("invalid value for required argument 'AgentArns'")
	}
	if args.ServerConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ServerConfiguration'")
	}
	if args.SystemType == nil {
		return nil, errors.New("invalid value for required argument 'SystemType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StorageSystem
	err := ctx.RegisterResource("aws-native:datasync:StorageSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageSystem gets an existing StorageSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageSystemState, opts ...pulumi.ResourceOption) (*StorageSystem, error) {
	var resource StorageSystem
	err := ctx.ReadResource("aws-native:datasync:StorageSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageSystem resources.
type storageSystemState struct {
}

type StorageSystemState struct {
}

func (StorageSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageSystemState)(nil)).Elem()
}

type storageSystemArgs struct {
	AgentArns             []string                         `pulumi:"agentArns"`
	CloudWatchLogGroupArn *string                          `pulumi:"cloudWatchLogGroupArn"`
	Name                  *string                          `pulumi:"name"`
	ServerConfiguration   StorageSystemServerConfiguration `pulumi:"serverConfiguration"`
	ServerCredentials     *StorageSystemServerCredentials  `pulumi:"serverCredentials"`
	SystemType            string                           `pulumi:"systemType"`
	Tags                  []aws.Tag                        `pulumi:"tags"`
}

// The set of arguments for constructing a StorageSystem resource.
type StorageSystemArgs struct {
	AgentArns             pulumi.StringArrayInput
	CloudWatchLogGroupArn pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	ServerConfiguration   StorageSystemServerConfigurationInput
	ServerCredentials     StorageSystemServerCredentialsPtrInput
	SystemType            pulumi.StringInput
	Tags                  aws.TagArrayInput
}

func (StorageSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageSystemArgs)(nil)).Elem()
}

type StorageSystemInput interface {
	pulumi.Input

	ToStorageSystemOutput() StorageSystemOutput
	ToStorageSystemOutputWithContext(ctx context.Context) StorageSystemOutput
}

func (*StorageSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSystem)(nil)).Elem()
}

func (i *StorageSystem) ToStorageSystemOutput() StorageSystemOutput {
	return i.ToStorageSystemOutputWithContext(context.Background())
}

func (i *StorageSystem) ToStorageSystemOutputWithContext(ctx context.Context) StorageSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageSystemOutput)
}

type StorageSystemOutput struct{ *pulumi.OutputState }

func (StorageSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSystem)(nil)).Elem()
}

func (o StorageSystemOutput) ToStorageSystemOutput() StorageSystemOutput {
	return o
}

func (o StorageSystemOutput) ToStorageSystemOutputWithContext(ctx context.Context) StorageSystemOutput {
	return o
}

func (o StorageSystemOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringArrayOutput { return v.AgentArns }).(pulumi.StringArrayOutput)
}

func (o StorageSystemOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o StorageSystemOutput) CloudWatchLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringPtrOutput { return v.CloudWatchLogGroupArn }).(pulumi.StringPtrOutput)
}

func (o StorageSystemOutput) ConnectivityStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringOutput { return v.ConnectivityStatus }).(pulumi.StringOutput)
}

func (o StorageSystemOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o StorageSystemOutput) SecretsManagerArn() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringOutput { return v.SecretsManagerArn }).(pulumi.StringOutput)
}

func (o StorageSystemOutput) ServerConfiguration() StorageSystemServerConfigurationOutput {
	return o.ApplyT(func(v *StorageSystem) StorageSystemServerConfigurationOutput { return v.ServerConfiguration }).(StorageSystemServerConfigurationOutput)
}

func (o StorageSystemOutput) ServerCredentials() StorageSystemServerCredentialsPtrOutput {
	return o.ApplyT(func(v *StorageSystem) StorageSystemServerCredentialsPtrOutput { return v.ServerCredentials }).(StorageSystemServerCredentialsPtrOutput)
}

func (o StorageSystemOutput) StorageSystemArn() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringOutput { return v.StorageSystemArn }).(pulumi.StringOutput)
}

func (o StorageSystemOutput) SystemType() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageSystem) pulumi.StringOutput { return v.SystemType }).(pulumi.StringOutput)
}

func (o StorageSystemOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *StorageSystem) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageSystemInput)(nil)).Elem(), &StorageSystem{})
	pulumi.RegisterOutputType(StorageSystemOutput{})
}
