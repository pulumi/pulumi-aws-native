// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource schema for AWS::DataSync::LocationAzureBlob.
type LocationAzureBlob struct {
	pulumi.CustomResourceState

	// The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
	AgentArns pulumi.StringArrayOutput `pulumi:"agentArns"`
	// Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
	AzureAccessTier LocationAzureBlobAzureAccessTierPtrOutput `pulumi:"azureAccessTier"`
	// The specific authentication type that you want DataSync to use to access your Azure Blob Container.
	AzureBlobAuthenticationType LocationAzureBlobAzureBlobAuthenticationTypeOutput `pulumi:"azureBlobAuthenticationType"`
	// The URL of the Azure Blob container that was described.
	AzureBlobContainerUrl     pulumi.StringPtrOutput                              `pulumi:"azureBlobContainerUrl"`
	AzureBlobSasConfiguration LocationAzureBlobAzureBlobSasConfigurationPtrOutput `pulumi:"azureBlobSasConfiguration"`
	// Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
	AzureBlobType LocationAzureBlobAzureBlobTypePtrOutput `pulumi:"azureBlobType"`
	// The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
	LocationArn pulumi.StringOutput `pulumi:"locationArn"`
	// The URL of the Azure Blob Location that was described.
	LocationUri pulumi.StringOutput `pulumi:"locationUri"`
	// The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
	Subdirectory pulumi.StringPtrOutput `pulumi:"subdirectory"`
	// An array of key-value pairs to apply to this resource.
	Tags LocationAzureBlobTagArrayOutput `pulumi:"tags"`
}

// NewLocationAzureBlob registers a new resource with the given unique name, arguments, and options.
func NewLocationAzureBlob(ctx *pulumi.Context,
	name string, args *LocationAzureBlobArgs, opts ...pulumi.ResourceOption) (*LocationAzureBlob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentArns == nil {
		return nil, errors.New("invalid value for required argument 'AgentArns'")
	}
	if args.AzureBlobAuthenticationType == nil {
		return nil, errors.New("invalid value for required argument 'AzureBlobAuthenticationType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"azureBlobContainerUrl",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocationAzureBlob
	err := ctx.RegisterResource("aws-native:datasync:LocationAzureBlob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationAzureBlob gets an existing LocationAzureBlob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationAzureBlob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationAzureBlobState, opts ...pulumi.ResourceOption) (*LocationAzureBlob, error) {
	var resource LocationAzureBlob
	err := ctx.ReadResource("aws-native:datasync:LocationAzureBlob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationAzureBlob resources.
type locationAzureBlobState struct {
}

type LocationAzureBlobState struct {
}

func (LocationAzureBlobState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationAzureBlobState)(nil)).Elem()
}

type locationAzureBlobArgs struct {
	// The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
	AgentArns []string `pulumi:"agentArns"`
	// Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
	AzureAccessTier *LocationAzureBlobAzureAccessTier `pulumi:"azureAccessTier"`
	// The specific authentication type that you want DataSync to use to access your Azure Blob Container.
	AzureBlobAuthenticationType LocationAzureBlobAzureBlobAuthenticationType `pulumi:"azureBlobAuthenticationType"`
	// The URL of the Azure Blob container that was described.
	AzureBlobContainerUrl     *string                                     `pulumi:"azureBlobContainerUrl"`
	AzureBlobSasConfiguration *LocationAzureBlobAzureBlobSasConfiguration `pulumi:"azureBlobSasConfiguration"`
	// Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
	AzureBlobType *LocationAzureBlobAzureBlobType `pulumi:"azureBlobType"`
	// The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
	Subdirectory *string `pulumi:"subdirectory"`
	// An array of key-value pairs to apply to this resource.
	Tags []LocationAzureBlobTag `pulumi:"tags"`
}

// The set of arguments for constructing a LocationAzureBlob resource.
type LocationAzureBlobArgs struct {
	// The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
	AgentArns pulumi.StringArrayInput
	// Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
	AzureAccessTier LocationAzureBlobAzureAccessTierPtrInput
	// The specific authentication type that you want DataSync to use to access your Azure Blob Container.
	AzureBlobAuthenticationType LocationAzureBlobAzureBlobAuthenticationTypeInput
	// The URL of the Azure Blob container that was described.
	AzureBlobContainerUrl     pulumi.StringPtrInput
	AzureBlobSasConfiguration LocationAzureBlobAzureBlobSasConfigurationPtrInput
	// Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
	AzureBlobType LocationAzureBlobAzureBlobTypePtrInput
	// The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
	Subdirectory pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags LocationAzureBlobTagArrayInput
}

func (LocationAzureBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationAzureBlobArgs)(nil)).Elem()
}

type LocationAzureBlobInput interface {
	pulumi.Input

	ToLocationAzureBlobOutput() LocationAzureBlobOutput
	ToLocationAzureBlobOutputWithContext(ctx context.Context) LocationAzureBlobOutput
}

func (*LocationAzureBlob) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationAzureBlob)(nil)).Elem()
}

func (i *LocationAzureBlob) ToLocationAzureBlobOutput() LocationAzureBlobOutput {
	return i.ToLocationAzureBlobOutputWithContext(context.Background())
}

func (i *LocationAzureBlob) ToLocationAzureBlobOutputWithContext(ctx context.Context) LocationAzureBlobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationAzureBlobOutput)
}

func (i *LocationAzureBlob) ToOutput(ctx context.Context) pulumix.Output[*LocationAzureBlob] {
	return pulumix.Output[*LocationAzureBlob]{
		OutputState: i.ToLocationAzureBlobOutputWithContext(ctx).OutputState,
	}
}

type LocationAzureBlobOutput struct{ *pulumi.OutputState }

func (LocationAzureBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationAzureBlob)(nil)).Elem()
}

func (o LocationAzureBlobOutput) ToLocationAzureBlobOutput() LocationAzureBlobOutput {
	return o
}

func (o LocationAzureBlobOutput) ToLocationAzureBlobOutputWithContext(ctx context.Context) LocationAzureBlobOutput {
	return o
}

func (o LocationAzureBlobOutput) ToOutput(ctx context.Context) pulumix.Output[*LocationAzureBlob] {
	return pulumix.Output[*LocationAzureBlob]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
func (o LocationAzureBlobOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocationAzureBlob) pulumi.StringArrayOutput { return v.AgentArns }).(pulumi.StringArrayOutput)
}

// Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
func (o LocationAzureBlobOutput) AzureAccessTier() LocationAzureBlobAzureAccessTierPtrOutput {
	return o.ApplyT(func(v *LocationAzureBlob) LocationAzureBlobAzureAccessTierPtrOutput { return v.AzureAccessTier }).(LocationAzureBlobAzureAccessTierPtrOutput)
}

// The specific authentication type that you want DataSync to use to access your Azure Blob Container.
func (o LocationAzureBlobOutput) AzureBlobAuthenticationType() LocationAzureBlobAzureBlobAuthenticationTypeOutput {
	return o.ApplyT(func(v *LocationAzureBlob) LocationAzureBlobAzureBlobAuthenticationTypeOutput {
		return v.AzureBlobAuthenticationType
	}).(LocationAzureBlobAzureBlobAuthenticationTypeOutput)
}

// The URL of the Azure Blob container that was described.
func (o LocationAzureBlobOutput) AzureBlobContainerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationAzureBlob) pulumi.StringPtrOutput { return v.AzureBlobContainerUrl }).(pulumi.StringPtrOutput)
}

func (o LocationAzureBlobOutput) AzureBlobSasConfiguration() LocationAzureBlobAzureBlobSasConfigurationPtrOutput {
	return o.ApplyT(func(v *LocationAzureBlob) LocationAzureBlobAzureBlobSasConfigurationPtrOutput {
		return v.AzureBlobSasConfiguration
	}).(LocationAzureBlobAzureBlobSasConfigurationPtrOutput)
}

// Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
func (o LocationAzureBlobOutput) AzureBlobType() LocationAzureBlobAzureBlobTypePtrOutput {
	return o.ApplyT(func(v *LocationAzureBlob) LocationAzureBlobAzureBlobTypePtrOutput { return v.AzureBlobType }).(LocationAzureBlobAzureBlobTypePtrOutput)
}

// The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
func (o LocationAzureBlobOutput) LocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationAzureBlob) pulumi.StringOutput { return v.LocationArn }).(pulumi.StringOutput)
}

// The URL of the Azure Blob Location that was described.
func (o LocationAzureBlobOutput) LocationUri() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationAzureBlob) pulumi.StringOutput { return v.LocationUri }).(pulumi.StringOutput)
}

// The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
func (o LocationAzureBlobOutput) Subdirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationAzureBlob) pulumi.StringPtrOutput { return v.Subdirectory }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LocationAzureBlobOutput) Tags() LocationAzureBlobTagArrayOutput {
	return o.ApplyT(func(v *LocationAzureBlob) LocationAzureBlobTagArrayOutput { return v.Tags }).(LocationAzureBlobTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocationAzureBlobInput)(nil)).Elem(), &LocationAzureBlob{})
	pulumi.RegisterOutputType(LocationAzureBlobOutput{})
}
