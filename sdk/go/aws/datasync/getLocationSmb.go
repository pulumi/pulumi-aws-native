// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource schema for AWS::DataSync::LocationSMB.
func LookupLocationSmb(ctx *pulumi.Context, args *LookupLocationSmbArgs, opts ...pulumi.InvokeOption) (*LookupLocationSmbResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLocationSmbResult
	err := ctx.Invoke("aws-native:datasync:getLocationSmb", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLocationSmbArgs struct {
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn string `pulumi:"locationArn"`
}

type LookupLocationSmbResult struct {
	// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
	AgentArns []string `pulumi:"agentArns"`
	// The name of the Windows domain that the SMB server belongs to.
	Domain *string `pulumi:"domain"`
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn *string `pulumi:"locationArn"`
	// The URL of the SMB location that was described.
	LocationUri  *string                  `pulumi:"locationUri"`
	MountOptions *LocationSmbMountOptions `pulumi:"mountOptions"`
	// An array of key-value pairs to apply to this resource.
	Tags []LocationSmbTag `pulumi:"tags"`
	// The user who can mount the share, has the permissions to access files and folders in the SMB share.
	User *string `pulumi:"user"`
}

func LookupLocationSmbOutput(ctx *pulumi.Context, args LookupLocationSmbOutputArgs, opts ...pulumi.InvokeOption) LookupLocationSmbResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLocationSmbResult, error) {
			args := v.(LookupLocationSmbArgs)
			r, err := LookupLocationSmb(ctx, &args, opts...)
			var s LookupLocationSmbResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLocationSmbResultOutput)
}

type LookupLocationSmbOutputArgs struct {
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn pulumi.StringInput `pulumi:"locationArn"`
}

func (LookupLocationSmbOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationSmbArgs)(nil)).Elem()
}

type LookupLocationSmbResultOutput struct{ *pulumi.OutputState }

func (LookupLocationSmbResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationSmbResult)(nil)).Elem()
}

func (o LookupLocationSmbResultOutput) ToLookupLocationSmbResultOutput() LookupLocationSmbResultOutput {
	return o
}

func (o LookupLocationSmbResultOutput) ToLookupLocationSmbResultOutputWithContext(ctx context.Context) LookupLocationSmbResultOutput {
	return o
}

func (o LookupLocationSmbResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupLocationSmbResult] {
	return pulumix.Output[LookupLocationSmbResult]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
func (o LookupLocationSmbResultOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) []string { return v.AgentArns }).(pulumi.StringArrayOutput)
}

// The name of the Windows domain that the SMB server belongs to.
func (o LookupLocationSmbResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the SMB location that is created.
func (o LookupLocationSmbResultOutput) LocationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) *string { return v.LocationArn }).(pulumi.StringPtrOutput)
}

// The URL of the SMB location that was described.
func (o LookupLocationSmbResultOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) *string { return v.LocationUri }).(pulumi.StringPtrOutput)
}

func (o LookupLocationSmbResultOutput) MountOptions() LocationSmbMountOptionsPtrOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) *LocationSmbMountOptions { return v.MountOptions }).(LocationSmbMountOptionsPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupLocationSmbResultOutput) Tags() LocationSmbTagArrayOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) []LocationSmbTag { return v.Tags }).(LocationSmbTagArrayOutput)
}

// The user who can mount the share, has the permissions to access files and folders in the SMB share.
func (o LookupLocationSmbResultOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSmbResult) *string { return v.User }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLocationSmbResultOutput{})
}
