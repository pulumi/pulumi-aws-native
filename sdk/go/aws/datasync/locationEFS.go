// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html
type LocationEFS struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-ec2config
	Ec2Config LocationEFSEc2ConfigOutput `pulumi:"ec2Config"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-efsfilesystemarn
	EfsFilesystemArn pulumi.StringOutput `pulumi:"efsFilesystemArn"`
	LocationArn      pulumi.StringOutput `pulumi:"locationArn"`
	LocationUri      pulumi.StringOutput `pulumi:"locationUri"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-subdirectory
	Subdirectory pulumi.StringPtrOutput `pulumi:"subdirectory"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewLocationEFS registers a new resource with the given unique name, arguments, and options.
func NewLocationEFS(ctx *pulumi.Context,
	name string, args *LocationEFSArgs, opts ...pulumi.ResourceOption) (*LocationEFS, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ec2Config == nil {
		return nil, errors.New("invalid value for required argument 'Ec2Config'")
	}
	if args.EfsFilesystemArn == nil {
		return nil, errors.New("invalid value for required argument 'EfsFilesystemArn'")
	}
	var resource LocationEFS
	err := ctx.RegisterResource("aws-native:datasync:LocationEFS", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationEFS gets an existing LocationEFS resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationEFS(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationEFSState, opts ...pulumi.ResourceOption) (*LocationEFS, error) {
	var resource LocationEFS
	err := ctx.ReadResource("aws-native:datasync:LocationEFS", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationEFS resources.
type locationEFSState struct {
}

type LocationEFSState struct {
}

func (LocationEFSState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationEFSState)(nil)).Elem()
}

type locationEFSArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-ec2config
	Ec2Config LocationEFSEc2Config `pulumi:"ec2Config"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-efsfilesystemarn
	EfsFilesystemArn string `pulumi:"efsFilesystemArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-subdirectory
	Subdirectory *string `pulumi:"subdirectory"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a LocationEFS resource.
type LocationEFSArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-ec2config
	Ec2Config LocationEFSEc2ConfigInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-efsfilesystemarn
	EfsFilesystemArn pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-subdirectory
	Subdirectory pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-tags
	Tags aws.TagArrayInput
}

func (LocationEFSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationEFSArgs)(nil)).Elem()
}

type LocationEFSInput interface {
	pulumi.Input

	ToLocationEFSOutput() LocationEFSOutput
	ToLocationEFSOutputWithContext(ctx context.Context) LocationEFSOutput
}

func (*LocationEFS) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationEFS)(nil))
}

func (i *LocationEFS) ToLocationEFSOutput() LocationEFSOutput {
	return i.ToLocationEFSOutputWithContext(context.Background())
}

func (i *LocationEFS) ToLocationEFSOutputWithContext(ctx context.Context) LocationEFSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationEFSOutput)
}

type LocationEFSOutput struct{ *pulumi.OutputState }

func (LocationEFSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationEFS)(nil))
}

func (o LocationEFSOutput) ToLocationEFSOutput() LocationEFSOutput {
	return o
}

func (o LocationEFSOutput) ToLocationEFSOutputWithContext(ctx context.Context) LocationEFSOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LocationEFSOutput{})
}
