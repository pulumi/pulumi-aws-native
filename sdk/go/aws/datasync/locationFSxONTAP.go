// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DataSync::LocationFSxONTAP.
type LocationFSxONTAP struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the FSx ONAP file system.
	FsxFilesystemArn pulumi.StringOutput `pulumi:"fsxFilesystemArn"`
	// The Amazon Resource Name (ARN) of the Amazon FSx ONTAP file system location that is created.
	LocationArn pulumi.StringOutput `pulumi:"locationArn"`
	// The URL of the FSx ONTAP file system that was described.
	LocationUri pulumi.StringOutput               `pulumi:"locationUri"`
	Protocol    LocationFSxONTAPProtocolPtrOutput `pulumi:"protocol"`
	// The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
	SecurityGroupArns pulumi.StringArrayOutput `pulumi:"securityGroupArns"`
	// The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
	StorageVirtualMachineArn pulumi.StringOutput `pulumi:"storageVirtualMachineArn"`
	// A subdirectory in the location's path.
	Subdirectory pulumi.StringPtrOutput `pulumi:"subdirectory"`
	// An array of key-value pairs to apply to this resource.
	Tags LocationFSxONTAPTagArrayOutput `pulumi:"tags"`
}

// NewLocationFSxONTAP registers a new resource with the given unique name, arguments, and options.
func NewLocationFSxONTAP(ctx *pulumi.Context,
	name string, args *LocationFSxONTAPArgs, opts ...pulumi.ResourceOption) (*LocationFSxONTAP, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupArns == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupArns'")
	}
	if args.StorageVirtualMachineArn == nil {
		return nil, errors.New("invalid value for required argument 'StorageVirtualMachineArn'")
	}
	var resource LocationFSxONTAP
	err := ctx.RegisterResource("aws-native:datasync:LocationFSxONTAP", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationFSxONTAP gets an existing LocationFSxONTAP resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationFSxONTAP(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationFSxONTAPState, opts ...pulumi.ResourceOption) (*LocationFSxONTAP, error) {
	var resource LocationFSxONTAP
	err := ctx.ReadResource("aws-native:datasync:LocationFSxONTAP", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationFSxONTAP resources.
type locationFSxONTAPState struct {
}

type LocationFSxONTAPState struct {
}

func (LocationFSxONTAPState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationFSxONTAPState)(nil)).Elem()
}

type locationFSxONTAPArgs struct {
	Protocol *LocationFSxONTAPProtocol `pulumi:"protocol"`
	// The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
	SecurityGroupArns []string `pulumi:"securityGroupArns"`
	// The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
	StorageVirtualMachineArn string `pulumi:"storageVirtualMachineArn"`
	// A subdirectory in the location's path.
	Subdirectory *string `pulumi:"subdirectory"`
	// An array of key-value pairs to apply to this resource.
	Tags []LocationFSxONTAPTag `pulumi:"tags"`
}

// The set of arguments for constructing a LocationFSxONTAP resource.
type LocationFSxONTAPArgs struct {
	Protocol LocationFSxONTAPProtocolPtrInput
	// The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
	SecurityGroupArns pulumi.StringArrayInput
	// The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
	StorageVirtualMachineArn pulumi.StringInput
	// A subdirectory in the location's path.
	Subdirectory pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags LocationFSxONTAPTagArrayInput
}

func (LocationFSxONTAPArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationFSxONTAPArgs)(nil)).Elem()
}

type LocationFSxONTAPInput interface {
	pulumi.Input

	ToLocationFSxONTAPOutput() LocationFSxONTAPOutput
	ToLocationFSxONTAPOutputWithContext(ctx context.Context) LocationFSxONTAPOutput
}

func (*LocationFSxONTAP) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationFSxONTAP)(nil)).Elem()
}

func (i *LocationFSxONTAP) ToLocationFSxONTAPOutput() LocationFSxONTAPOutput {
	return i.ToLocationFSxONTAPOutputWithContext(context.Background())
}

func (i *LocationFSxONTAP) ToLocationFSxONTAPOutputWithContext(ctx context.Context) LocationFSxONTAPOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationFSxONTAPOutput)
}

type LocationFSxONTAPOutput struct{ *pulumi.OutputState }

func (LocationFSxONTAPOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationFSxONTAP)(nil)).Elem()
}

func (o LocationFSxONTAPOutput) ToLocationFSxONTAPOutput() LocationFSxONTAPOutput {
	return o
}

func (o LocationFSxONTAPOutput) ToLocationFSxONTAPOutputWithContext(ctx context.Context) LocationFSxONTAPOutput {
	return o
}

// The Amazon Resource Name (ARN) for the FSx ONAP file system.
func (o LocationFSxONTAPOutput) FsxFilesystemArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) pulumi.StringOutput { return v.FsxFilesystemArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the Amazon FSx ONTAP file system location that is created.
func (o LocationFSxONTAPOutput) LocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) pulumi.StringOutput { return v.LocationArn }).(pulumi.StringOutput)
}

// The URL of the FSx ONTAP file system that was described.
func (o LocationFSxONTAPOutput) LocationUri() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) pulumi.StringOutput { return v.LocationUri }).(pulumi.StringOutput)
}

func (o LocationFSxONTAPOutput) Protocol() LocationFSxONTAPProtocolPtrOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) LocationFSxONTAPProtocolPtrOutput { return v.Protocol }).(LocationFSxONTAPProtocolPtrOutput)
}

// The ARNs of the security groups that are to use to configure the FSx ONTAP file system.
func (o LocationFSxONTAPOutput) SecurityGroupArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) pulumi.StringArrayOutput { return v.SecurityGroupArns }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) for the FSx ONTAP SVM.
func (o LocationFSxONTAPOutput) StorageVirtualMachineArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) pulumi.StringOutput { return v.StorageVirtualMachineArn }).(pulumi.StringOutput)
}

// A subdirectory in the location's path.
func (o LocationFSxONTAPOutput) Subdirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) pulumi.StringPtrOutput { return v.Subdirectory }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LocationFSxONTAPOutput) Tags() LocationFSxONTAPTagArrayOutput {
	return o.ApplyT(func(v *LocationFSxONTAP) LocationFSxONTAPTagArrayOutput { return v.Tags }).(LocationFSxONTAPTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocationFSxONTAPInput)(nil)).Elem(), &LocationFSxONTAP{})
	pulumi.RegisterOutputType(LocationFSxONTAPOutput{})
}
