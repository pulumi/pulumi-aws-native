// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DataSync::LocationSMB.
type LocationSmb struct {
	pulumi.CustomResourceState

	// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
	AgentArns pulumi.StringArrayOutput `pulumi:"agentArns"`
	// The name of the Windows domain that the SMB server belongs to.
	Domain pulumi.StringPtrOutput `pulumi:"domain"`
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn pulumi.StringOutput `pulumi:"locationArn"`
	// The URL of the SMB location that was described.
	LocationUri  pulumi.StringOutput              `pulumi:"locationUri"`
	MountOptions LocationSmbMountOptionsPtrOutput `pulumi:"mountOptions"`
	// The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
	ServerHostname pulumi.StringPtrOutput `pulumi:"serverHostname"`
	// The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
	Subdirectory pulumi.StringPtrOutput `pulumi:"subdirectory"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The user who can mount the share, has the permissions to access files and folders in the SMB share.
	User pulumi.StringOutput `pulumi:"user"`
}

// NewLocationSmb registers a new resource with the given unique name, arguments, and options.
func NewLocationSmb(ctx *pulumi.Context,
	name string, args *LocationSmbArgs, opts ...pulumi.ResourceOption) (*LocationSmb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentArns == nil {
		return nil, errors.New("invalid value for required argument 'AgentArns'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"serverHostname",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocationSmb
	err := ctx.RegisterResource("aws-native:datasync:LocationSmb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationSmb gets an existing LocationSmb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationSmb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationSmbState, opts ...pulumi.ResourceOption) (*LocationSmb, error) {
	var resource LocationSmb
	err := ctx.ReadResource("aws-native:datasync:LocationSmb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationSmb resources.
type locationSmbState struct {
}

type LocationSmbState struct {
}

func (LocationSmbState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationSmbState)(nil)).Elem()
}

type locationSmbArgs struct {
	// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
	AgentArns []string `pulumi:"agentArns"`
	// The name of the Windows domain that the SMB server belongs to.
	Domain       *string                  `pulumi:"domain"`
	MountOptions *LocationSmbMountOptions `pulumi:"mountOptions"`
	// The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
	Password *string `pulumi:"password"`
	// The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
	ServerHostname *string `pulumi:"serverHostname"`
	// The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
	Subdirectory *string `pulumi:"subdirectory"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The user who can mount the share, has the permissions to access files and folders in the SMB share.
	User string `pulumi:"user"`
}

// The set of arguments for constructing a LocationSmb resource.
type LocationSmbArgs struct {
	// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
	AgentArns pulumi.StringArrayInput
	// The name of the Windows domain that the SMB server belongs to.
	Domain       pulumi.StringPtrInput
	MountOptions LocationSmbMountOptionsPtrInput
	// The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
	Password pulumi.StringPtrInput
	// The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
	ServerHostname pulumi.StringPtrInput
	// The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
	Subdirectory pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
	// The user who can mount the share, has the permissions to access files and folders in the SMB share.
	User pulumi.StringInput
}

func (LocationSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationSmbArgs)(nil)).Elem()
}

type LocationSmbInput interface {
	pulumi.Input

	ToLocationSmbOutput() LocationSmbOutput
	ToLocationSmbOutputWithContext(ctx context.Context) LocationSmbOutput
}

func (*LocationSmb) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationSmb)(nil)).Elem()
}

func (i *LocationSmb) ToLocationSmbOutput() LocationSmbOutput {
	return i.ToLocationSmbOutputWithContext(context.Background())
}

func (i *LocationSmb) ToLocationSmbOutputWithContext(ctx context.Context) LocationSmbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationSmbOutput)
}

type LocationSmbOutput struct{ *pulumi.OutputState }

func (LocationSmbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationSmb)(nil)).Elem()
}

func (o LocationSmbOutput) ToLocationSmbOutput() LocationSmbOutput {
	return o
}

func (o LocationSmbOutput) ToLocationSmbOutputWithContext(ctx context.Context) LocationSmbOutput {
	return o
}

// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
func (o LocationSmbOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringArrayOutput { return v.AgentArns }).(pulumi.StringArrayOutput)
}

// The name of the Windows domain that the SMB server belongs to.
func (o LocationSmbOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringPtrOutput { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the SMB location that is created.
func (o LocationSmbOutput) LocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringOutput { return v.LocationArn }).(pulumi.StringOutput)
}

// The URL of the SMB location that was described.
func (o LocationSmbOutput) LocationUri() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringOutput { return v.LocationUri }).(pulumi.StringOutput)
}

func (o LocationSmbOutput) MountOptions() LocationSmbMountOptionsPtrOutput {
	return o.ApplyT(func(v *LocationSmb) LocationSmbMountOptionsPtrOutput { return v.MountOptions }).(LocationSmbMountOptionsPtrOutput)
}

// The password of the user who can mount the share and has the permissions to access files and folders in the SMB share.
func (o LocationSmbOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The name of the SMB server. This value is the IP address or Domain Name Service (DNS) name of the SMB server.
func (o LocationSmbOutput) ServerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringPtrOutput { return v.ServerHostname }).(pulumi.StringPtrOutput)
}

// The subdirectory in the SMB file system that is used to read data from the SMB source location or write data to the SMB destination
func (o LocationSmbOutput) Subdirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringPtrOutput { return v.Subdirectory }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LocationSmbOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *LocationSmb) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The user who can mount the share, has the permissions to access files and folders in the SMB share.
func (o LocationSmbOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationSmb) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocationSmbInput)(nil)).Elem(), &LocationSmb{})
	pulumi.RegisterOutputType(LocationSmbOutput{})
}
