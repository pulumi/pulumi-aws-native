// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The service endpoints that the agent will connect to.
type AgentEndpointType string

const (
	AgentEndpointTypeFips        = AgentEndpointType("FIPS")
	AgentEndpointTypePublic      = AgentEndpointType("PUBLIC")
	AgentEndpointTypePrivateLink = AgentEndpointType("PRIVATE_LINK")
)

func (AgentEndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentEndpointType)(nil)).Elem()
}

func (e AgentEndpointType) ToAgentEndpointTypeOutput() AgentEndpointTypeOutput {
	return pulumi.ToOutput(e).(AgentEndpointTypeOutput)
}

func (e AgentEndpointType) ToAgentEndpointTypeOutputWithContext(ctx context.Context) AgentEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AgentEndpointTypeOutput)
}

func (e AgentEndpointType) ToAgentEndpointTypePtrOutput() AgentEndpointTypePtrOutput {
	return e.ToAgentEndpointTypePtrOutputWithContext(context.Background())
}

func (e AgentEndpointType) ToAgentEndpointTypePtrOutputWithContext(ctx context.Context) AgentEndpointTypePtrOutput {
	return AgentEndpointType(e).ToAgentEndpointTypeOutputWithContext(ctx).ToAgentEndpointTypePtrOutputWithContext(ctx)
}

func (e AgentEndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentEndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgentEndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AgentEndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AgentEndpointTypeOutput struct{ *pulumi.OutputState }

func (AgentEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentEndpointType)(nil)).Elem()
}

func (o AgentEndpointTypeOutput) ToAgentEndpointTypeOutput() AgentEndpointTypeOutput {
	return o
}

func (o AgentEndpointTypeOutput) ToAgentEndpointTypeOutputWithContext(ctx context.Context) AgentEndpointTypeOutput {
	return o
}

func (o AgentEndpointTypeOutput) ToAgentEndpointTypePtrOutput() AgentEndpointTypePtrOutput {
	return o.ToAgentEndpointTypePtrOutputWithContext(context.Background())
}

func (o AgentEndpointTypeOutput) ToAgentEndpointTypePtrOutputWithContext(ctx context.Context) AgentEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentEndpointType) *AgentEndpointType {
		return &v
	}).(AgentEndpointTypePtrOutput)
}

func (o AgentEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AgentEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AgentEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgentEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AgentEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (AgentEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentEndpointType)(nil)).Elem()
}

func (o AgentEndpointTypePtrOutput) ToAgentEndpointTypePtrOutput() AgentEndpointTypePtrOutput {
	return o
}

func (o AgentEndpointTypePtrOutput) ToAgentEndpointTypePtrOutputWithContext(ctx context.Context) AgentEndpointTypePtrOutput {
	return o
}

func (o AgentEndpointTypePtrOutput) Elem() AgentEndpointTypeOutput {
	return o.ApplyT(func(v *AgentEndpointType) AgentEndpointType {
		if v != nil {
			return *v
		}
		var ret AgentEndpointType
		return ret
	}).(AgentEndpointTypeOutput)
}

func (o AgentEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgentEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AgentEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AgentEndpointTypeInput is an input type that accepts AgentEndpointTypeArgs and AgentEndpointTypeOutput values.
// You can construct a concrete instance of `AgentEndpointTypeInput` via:
//
//          AgentEndpointTypeArgs{...}
type AgentEndpointTypeInput interface {
	pulumi.Input

	ToAgentEndpointTypeOutput() AgentEndpointTypeOutput
	ToAgentEndpointTypeOutputWithContext(context.Context) AgentEndpointTypeOutput
}

var agentEndpointTypePtrType = reflect.TypeOf((**AgentEndpointType)(nil)).Elem()

type AgentEndpointTypePtrInput interface {
	pulumi.Input

	ToAgentEndpointTypePtrOutput() AgentEndpointTypePtrOutput
	ToAgentEndpointTypePtrOutputWithContext(context.Context) AgentEndpointTypePtrOutput
}

type agentEndpointTypePtr string

func AgentEndpointTypePtr(v string) AgentEndpointTypePtrInput {
	return (*agentEndpointTypePtr)(&v)
}

func (*agentEndpointTypePtr) ElementType() reflect.Type {
	return agentEndpointTypePtrType
}

func (in *agentEndpointTypePtr) ToAgentEndpointTypePtrOutput() AgentEndpointTypePtrOutput {
	return pulumi.ToOutput(in).(AgentEndpointTypePtrOutput)
}

func (in *agentEndpointTypePtr) ToAgentEndpointTypePtrOutputWithContext(ctx context.Context) AgentEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AgentEndpointTypePtrOutput)
}

// The specific NFS version that you want DataSync to use to mount your NFS share.
type LocationNFSMountOptionsVersion string

const (
	LocationNFSMountOptionsVersionAutomatic = LocationNFSMountOptionsVersion("AUTOMATIC")
	LocationNFSMountOptionsVersionNfs3      = LocationNFSMountOptionsVersion("NFS3")
	LocationNFSMountOptionsVersionNfs40     = LocationNFSMountOptionsVersion("NFS4_0")
	LocationNFSMountOptionsVersionNfs41     = LocationNFSMountOptionsVersion("NFS4_1")
)

func (LocationNFSMountOptionsVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationNFSMountOptionsVersion)(nil)).Elem()
}

func (e LocationNFSMountOptionsVersion) ToLocationNFSMountOptionsVersionOutput() LocationNFSMountOptionsVersionOutput {
	return pulumi.ToOutput(e).(LocationNFSMountOptionsVersionOutput)
}

func (e LocationNFSMountOptionsVersion) ToLocationNFSMountOptionsVersionOutputWithContext(ctx context.Context) LocationNFSMountOptionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LocationNFSMountOptionsVersionOutput)
}

func (e LocationNFSMountOptionsVersion) ToLocationNFSMountOptionsVersionPtrOutput() LocationNFSMountOptionsVersionPtrOutput {
	return e.ToLocationNFSMountOptionsVersionPtrOutputWithContext(context.Background())
}

func (e LocationNFSMountOptionsVersion) ToLocationNFSMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationNFSMountOptionsVersionPtrOutput {
	return LocationNFSMountOptionsVersion(e).ToLocationNFSMountOptionsVersionOutputWithContext(ctx).ToLocationNFSMountOptionsVersionPtrOutputWithContext(ctx)
}

func (e LocationNFSMountOptionsVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationNFSMountOptionsVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationNFSMountOptionsVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LocationNFSMountOptionsVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LocationNFSMountOptionsVersionOutput struct{ *pulumi.OutputState }

func (LocationNFSMountOptionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationNFSMountOptionsVersion)(nil)).Elem()
}

func (o LocationNFSMountOptionsVersionOutput) ToLocationNFSMountOptionsVersionOutput() LocationNFSMountOptionsVersionOutput {
	return o
}

func (o LocationNFSMountOptionsVersionOutput) ToLocationNFSMountOptionsVersionOutputWithContext(ctx context.Context) LocationNFSMountOptionsVersionOutput {
	return o
}

func (o LocationNFSMountOptionsVersionOutput) ToLocationNFSMountOptionsVersionPtrOutput() LocationNFSMountOptionsVersionPtrOutput {
	return o.ToLocationNFSMountOptionsVersionPtrOutputWithContext(context.Background())
}

func (o LocationNFSMountOptionsVersionOutput) ToLocationNFSMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationNFSMountOptionsVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocationNFSMountOptionsVersion) *LocationNFSMountOptionsVersion {
		return &v
	}).(LocationNFSMountOptionsVersionPtrOutput)
}

func (o LocationNFSMountOptionsVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LocationNFSMountOptionsVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationNFSMountOptionsVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LocationNFSMountOptionsVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationNFSMountOptionsVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationNFSMountOptionsVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LocationNFSMountOptionsVersionPtrOutput struct{ *pulumi.OutputState }

func (LocationNFSMountOptionsVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationNFSMountOptionsVersion)(nil)).Elem()
}

func (o LocationNFSMountOptionsVersionPtrOutput) ToLocationNFSMountOptionsVersionPtrOutput() LocationNFSMountOptionsVersionPtrOutput {
	return o
}

func (o LocationNFSMountOptionsVersionPtrOutput) ToLocationNFSMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationNFSMountOptionsVersionPtrOutput {
	return o
}

func (o LocationNFSMountOptionsVersionPtrOutput) Elem() LocationNFSMountOptionsVersionOutput {
	return o.ApplyT(func(v *LocationNFSMountOptionsVersion) LocationNFSMountOptionsVersion {
		if v != nil {
			return *v
		}
		var ret LocationNFSMountOptionsVersion
		return ret
	}).(LocationNFSMountOptionsVersionOutput)
}

func (o LocationNFSMountOptionsVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationNFSMountOptionsVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LocationNFSMountOptionsVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LocationNFSMountOptionsVersionInput is an input type that accepts LocationNFSMountOptionsVersionArgs and LocationNFSMountOptionsVersionOutput values.
// You can construct a concrete instance of `LocationNFSMountOptionsVersionInput` via:
//
//          LocationNFSMountOptionsVersionArgs{...}
type LocationNFSMountOptionsVersionInput interface {
	pulumi.Input

	ToLocationNFSMountOptionsVersionOutput() LocationNFSMountOptionsVersionOutput
	ToLocationNFSMountOptionsVersionOutputWithContext(context.Context) LocationNFSMountOptionsVersionOutput
}

var locationNFSMountOptionsVersionPtrType = reflect.TypeOf((**LocationNFSMountOptionsVersion)(nil)).Elem()

type LocationNFSMountOptionsVersionPtrInput interface {
	pulumi.Input

	ToLocationNFSMountOptionsVersionPtrOutput() LocationNFSMountOptionsVersionPtrOutput
	ToLocationNFSMountOptionsVersionPtrOutputWithContext(context.Context) LocationNFSMountOptionsVersionPtrOutput
}

type locationNFSMountOptionsVersionPtr string

func LocationNFSMountOptionsVersionPtr(v string) LocationNFSMountOptionsVersionPtrInput {
	return (*locationNFSMountOptionsVersionPtr)(&v)
}

func (*locationNFSMountOptionsVersionPtr) ElementType() reflect.Type {
	return locationNFSMountOptionsVersionPtrType
}

func (in *locationNFSMountOptionsVersionPtr) ToLocationNFSMountOptionsVersionPtrOutput() LocationNFSMountOptionsVersionPtrOutput {
	return pulumi.ToOutput(in).(LocationNFSMountOptionsVersionPtrOutput)
}

func (in *locationNFSMountOptionsVersionPtr) ToLocationNFSMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationNFSMountOptionsVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LocationNFSMountOptionsVersionPtrOutput)
}

// The protocol that the object storage server uses to communicate.
type LocationObjectStorageServerProtocol string

const (
	LocationObjectStorageServerProtocolHttps = LocationObjectStorageServerProtocol("HTTPS")
	LocationObjectStorageServerProtocolHttp  = LocationObjectStorageServerProtocol("HTTP")
)

func (LocationObjectStorageServerProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationObjectStorageServerProtocol)(nil)).Elem()
}

func (e LocationObjectStorageServerProtocol) ToLocationObjectStorageServerProtocolOutput() LocationObjectStorageServerProtocolOutput {
	return pulumi.ToOutput(e).(LocationObjectStorageServerProtocolOutput)
}

func (e LocationObjectStorageServerProtocol) ToLocationObjectStorageServerProtocolOutputWithContext(ctx context.Context) LocationObjectStorageServerProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LocationObjectStorageServerProtocolOutput)
}

func (e LocationObjectStorageServerProtocol) ToLocationObjectStorageServerProtocolPtrOutput() LocationObjectStorageServerProtocolPtrOutput {
	return e.ToLocationObjectStorageServerProtocolPtrOutputWithContext(context.Background())
}

func (e LocationObjectStorageServerProtocol) ToLocationObjectStorageServerProtocolPtrOutputWithContext(ctx context.Context) LocationObjectStorageServerProtocolPtrOutput {
	return LocationObjectStorageServerProtocol(e).ToLocationObjectStorageServerProtocolOutputWithContext(ctx).ToLocationObjectStorageServerProtocolPtrOutputWithContext(ctx)
}

func (e LocationObjectStorageServerProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationObjectStorageServerProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationObjectStorageServerProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LocationObjectStorageServerProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LocationObjectStorageServerProtocolOutput struct{ *pulumi.OutputState }

func (LocationObjectStorageServerProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationObjectStorageServerProtocol)(nil)).Elem()
}

func (o LocationObjectStorageServerProtocolOutput) ToLocationObjectStorageServerProtocolOutput() LocationObjectStorageServerProtocolOutput {
	return o
}

func (o LocationObjectStorageServerProtocolOutput) ToLocationObjectStorageServerProtocolOutputWithContext(ctx context.Context) LocationObjectStorageServerProtocolOutput {
	return o
}

func (o LocationObjectStorageServerProtocolOutput) ToLocationObjectStorageServerProtocolPtrOutput() LocationObjectStorageServerProtocolPtrOutput {
	return o.ToLocationObjectStorageServerProtocolPtrOutputWithContext(context.Background())
}

func (o LocationObjectStorageServerProtocolOutput) ToLocationObjectStorageServerProtocolPtrOutputWithContext(ctx context.Context) LocationObjectStorageServerProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocationObjectStorageServerProtocol) *LocationObjectStorageServerProtocol {
		return &v
	}).(LocationObjectStorageServerProtocolPtrOutput)
}

func (o LocationObjectStorageServerProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LocationObjectStorageServerProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationObjectStorageServerProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LocationObjectStorageServerProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationObjectStorageServerProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationObjectStorageServerProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LocationObjectStorageServerProtocolPtrOutput struct{ *pulumi.OutputState }

func (LocationObjectStorageServerProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationObjectStorageServerProtocol)(nil)).Elem()
}

func (o LocationObjectStorageServerProtocolPtrOutput) ToLocationObjectStorageServerProtocolPtrOutput() LocationObjectStorageServerProtocolPtrOutput {
	return o
}

func (o LocationObjectStorageServerProtocolPtrOutput) ToLocationObjectStorageServerProtocolPtrOutputWithContext(ctx context.Context) LocationObjectStorageServerProtocolPtrOutput {
	return o
}

func (o LocationObjectStorageServerProtocolPtrOutput) Elem() LocationObjectStorageServerProtocolOutput {
	return o.ApplyT(func(v *LocationObjectStorageServerProtocol) LocationObjectStorageServerProtocol {
		if v != nil {
			return *v
		}
		var ret LocationObjectStorageServerProtocol
		return ret
	}).(LocationObjectStorageServerProtocolOutput)
}

func (o LocationObjectStorageServerProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationObjectStorageServerProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LocationObjectStorageServerProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LocationObjectStorageServerProtocolInput is an input type that accepts LocationObjectStorageServerProtocolArgs and LocationObjectStorageServerProtocolOutput values.
// You can construct a concrete instance of `LocationObjectStorageServerProtocolInput` via:
//
//          LocationObjectStorageServerProtocolArgs{...}
type LocationObjectStorageServerProtocolInput interface {
	pulumi.Input

	ToLocationObjectStorageServerProtocolOutput() LocationObjectStorageServerProtocolOutput
	ToLocationObjectStorageServerProtocolOutputWithContext(context.Context) LocationObjectStorageServerProtocolOutput
}

var locationObjectStorageServerProtocolPtrType = reflect.TypeOf((**LocationObjectStorageServerProtocol)(nil)).Elem()

type LocationObjectStorageServerProtocolPtrInput interface {
	pulumi.Input

	ToLocationObjectStorageServerProtocolPtrOutput() LocationObjectStorageServerProtocolPtrOutput
	ToLocationObjectStorageServerProtocolPtrOutputWithContext(context.Context) LocationObjectStorageServerProtocolPtrOutput
}

type locationObjectStorageServerProtocolPtr string

func LocationObjectStorageServerProtocolPtr(v string) LocationObjectStorageServerProtocolPtrInput {
	return (*locationObjectStorageServerProtocolPtr)(&v)
}

func (*locationObjectStorageServerProtocolPtr) ElementType() reflect.Type {
	return locationObjectStorageServerProtocolPtrType
}

func (in *locationObjectStorageServerProtocolPtr) ToLocationObjectStorageServerProtocolPtrOutput() LocationObjectStorageServerProtocolPtrOutput {
	return pulumi.ToOutput(in).(LocationObjectStorageServerProtocolPtrOutput)
}

func (in *locationObjectStorageServerProtocolPtr) ToLocationObjectStorageServerProtocolPtrOutputWithContext(ctx context.Context) LocationObjectStorageServerProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LocationObjectStorageServerProtocolPtrOutput)
}

// The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
type LocationS3S3StorageClass string

const (
	LocationS3S3StorageClassStandard           = LocationS3S3StorageClass("STANDARD")
	LocationS3S3StorageClassStandardIa         = LocationS3S3StorageClass("STANDARD_IA")
	LocationS3S3StorageClassOnezoneIa          = LocationS3S3StorageClass("ONEZONE_IA")
	LocationS3S3StorageClassIntelligentTiering = LocationS3S3StorageClass("INTELLIGENT_TIERING")
	LocationS3S3StorageClassGlacier            = LocationS3S3StorageClass("GLACIER")
	LocationS3S3StorageClassDeepArchive        = LocationS3S3StorageClass("DEEP_ARCHIVE")
)

func (LocationS3S3StorageClass) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationS3S3StorageClass)(nil)).Elem()
}

func (e LocationS3S3StorageClass) ToLocationS3S3StorageClassOutput() LocationS3S3StorageClassOutput {
	return pulumi.ToOutput(e).(LocationS3S3StorageClassOutput)
}

func (e LocationS3S3StorageClass) ToLocationS3S3StorageClassOutputWithContext(ctx context.Context) LocationS3S3StorageClassOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LocationS3S3StorageClassOutput)
}

func (e LocationS3S3StorageClass) ToLocationS3S3StorageClassPtrOutput() LocationS3S3StorageClassPtrOutput {
	return e.ToLocationS3S3StorageClassPtrOutputWithContext(context.Background())
}

func (e LocationS3S3StorageClass) ToLocationS3S3StorageClassPtrOutputWithContext(ctx context.Context) LocationS3S3StorageClassPtrOutput {
	return LocationS3S3StorageClass(e).ToLocationS3S3StorageClassOutputWithContext(ctx).ToLocationS3S3StorageClassPtrOutputWithContext(ctx)
}

func (e LocationS3S3StorageClass) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationS3S3StorageClass) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationS3S3StorageClass) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LocationS3S3StorageClass) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LocationS3S3StorageClassOutput struct{ *pulumi.OutputState }

func (LocationS3S3StorageClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationS3S3StorageClass)(nil)).Elem()
}

func (o LocationS3S3StorageClassOutput) ToLocationS3S3StorageClassOutput() LocationS3S3StorageClassOutput {
	return o
}

func (o LocationS3S3StorageClassOutput) ToLocationS3S3StorageClassOutputWithContext(ctx context.Context) LocationS3S3StorageClassOutput {
	return o
}

func (o LocationS3S3StorageClassOutput) ToLocationS3S3StorageClassPtrOutput() LocationS3S3StorageClassPtrOutput {
	return o.ToLocationS3S3StorageClassPtrOutputWithContext(context.Background())
}

func (o LocationS3S3StorageClassOutput) ToLocationS3S3StorageClassPtrOutputWithContext(ctx context.Context) LocationS3S3StorageClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocationS3S3StorageClass) *LocationS3S3StorageClass {
		return &v
	}).(LocationS3S3StorageClassPtrOutput)
}

func (o LocationS3S3StorageClassOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LocationS3S3StorageClassOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationS3S3StorageClass) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LocationS3S3StorageClassOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationS3S3StorageClassOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationS3S3StorageClass) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LocationS3S3StorageClassPtrOutput struct{ *pulumi.OutputState }

func (LocationS3S3StorageClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationS3S3StorageClass)(nil)).Elem()
}

func (o LocationS3S3StorageClassPtrOutput) ToLocationS3S3StorageClassPtrOutput() LocationS3S3StorageClassPtrOutput {
	return o
}

func (o LocationS3S3StorageClassPtrOutput) ToLocationS3S3StorageClassPtrOutputWithContext(ctx context.Context) LocationS3S3StorageClassPtrOutput {
	return o
}

func (o LocationS3S3StorageClassPtrOutput) Elem() LocationS3S3StorageClassOutput {
	return o.ApplyT(func(v *LocationS3S3StorageClass) LocationS3S3StorageClass {
		if v != nil {
			return *v
		}
		var ret LocationS3S3StorageClass
		return ret
	}).(LocationS3S3StorageClassOutput)
}

func (o LocationS3S3StorageClassPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationS3S3StorageClassPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LocationS3S3StorageClass) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LocationS3S3StorageClassInput is an input type that accepts LocationS3S3StorageClassArgs and LocationS3S3StorageClassOutput values.
// You can construct a concrete instance of `LocationS3S3StorageClassInput` via:
//
//          LocationS3S3StorageClassArgs{...}
type LocationS3S3StorageClassInput interface {
	pulumi.Input

	ToLocationS3S3StorageClassOutput() LocationS3S3StorageClassOutput
	ToLocationS3S3StorageClassOutputWithContext(context.Context) LocationS3S3StorageClassOutput
}

var locationS3S3StorageClassPtrType = reflect.TypeOf((**LocationS3S3StorageClass)(nil)).Elem()

type LocationS3S3StorageClassPtrInput interface {
	pulumi.Input

	ToLocationS3S3StorageClassPtrOutput() LocationS3S3StorageClassPtrOutput
	ToLocationS3S3StorageClassPtrOutputWithContext(context.Context) LocationS3S3StorageClassPtrOutput
}

type locationS3S3StorageClassPtr string

func LocationS3S3StorageClassPtr(v string) LocationS3S3StorageClassPtrInput {
	return (*locationS3S3StorageClassPtr)(&v)
}

func (*locationS3S3StorageClassPtr) ElementType() reflect.Type {
	return locationS3S3StorageClassPtrType
}

func (in *locationS3S3StorageClassPtr) ToLocationS3S3StorageClassPtrOutput() LocationS3S3StorageClassPtrOutput {
	return pulumi.ToOutput(in).(LocationS3S3StorageClassPtrOutput)
}

func (in *locationS3S3StorageClassPtr) ToLocationS3S3StorageClassPtrOutputWithContext(ctx context.Context) LocationS3S3StorageClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LocationS3S3StorageClassPtrOutput)
}

// The specific SMB version that you want DataSync to use to mount your SMB share.
type LocationSMBMountOptionsVersion string

const (
	LocationSMBMountOptionsVersionAutomatic = LocationSMBMountOptionsVersion("AUTOMATIC")
	LocationSMBMountOptionsVersionSmb2      = LocationSMBMountOptionsVersion("SMB2")
	LocationSMBMountOptionsVersionSmb3      = LocationSMBMountOptionsVersion("SMB3")
)

func (LocationSMBMountOptionsVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationSMBMountOptionsVersion)(nil)).Elem()
}

func (e LocationSMBMountOptionsVersion) ToLocationSMBMountOptionsVersionOutput() LocationSMBMountOptionsVersionOutput {
	return pulumi.ToOutput(e).(LocationSMBMountOptionsVersionOutput)
}

func (e LocationSMBMountOptionsVersion) ToLocationSMBMountOptionsVersionOutputWithContext(ctx context.Context) LocationSMBMountOptionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LocationSMBMountOptionsVersionOutput)
}

func (e LocationSMBMountOptionsVersion) ToLocationSMBMountOptionsVersionPtrOutput() LocationSMBMountOptionsVersionPtrOutput {
	return e.ToLocationSMBMountOptionsVersionPtrOutputWithContext(context.Background())
}

func (e LocationSMBMountOptionsVersion) ToLocationSMBMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationSMBMountOptionsVersionPtrOutput {
	return LocationSMBMountOptionsVersion(e).ToLocationSMBMountOptionsVersionOutputWithContext(ctx).ToLocationSMBMountOptionsVersionPtrOutputWithContext(ctx)
}

func (e LocationSMBMountOptionsVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationSMBMountOptionsVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocationSMBMountOptionsVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LocationSMBMountOptionsVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LocationSMBMountOptionsVersionOutput struct{ *pulumi.OutputState }

func (LocationSMBMountOptionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationSMBMountOptionsVersion)(nil)).Elem()
}

func (o LocationSMBMountOptionsVersionOutput) ToLocationSMBMountOptionsVersionOutput() LocationSMBMountOptionsVersionOutput {
	return o
}

func (o LocationSMBMountOptionsVersionOutput) ToLocationSMBMountOptionsVersionOutputWithContext(ctx context.Context) LocationSMBMountOptionsVersionOutput {
	return o
}

func (o LocationSMBMountOptionsVersionOutput) ToLocationSMBMountOptionsVersionPtrOutput() LocationSMBMountOptionsVersionPtrOutput {
	return o.ToLocationSMBMountOptionsVersionPtrOutputWithContext(context.Background())
}

func (o LocationSMBMountOptionsVersionOutput) ToLocationSMBMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationSMBMountOptionsVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocationSMBMountOptionsVersion) *LocationSMBMountOptionsVersion {
		return &v
	}).(LocationSMBMountOptionsVersionPtrOutput)
}

func (o LocationSMBMountOptionsVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LocationSMBMountOptionsVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationSMBMountOptionsVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LocationSMBMountOptionsVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationSMBMountOptionsVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocationSMBMountOptionsVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LocationSMBMountOptionsVersionPtrOutput struct{ *pulumi.OutputState }

func (LocationSMBMountOptionsVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationSMBMountOptionsVersion)(nil)).Elem()
}

func (o LocationSMBMountOptionsVersionPtrOutput) ToLocationSMBMountOptionsVersionPtrOutput() LocationSMBMountOptionsVersionPtrOutput {
	return o
}

func (o LocationSMBMountOptionsVersionPtrOutput) ToLocationSMBMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationSMBMountOptionsVersionPtrOutput {
	return o
}

func (o LocationSMBMountOptionsVersionPtrOutput) Elem() LocationSMBMountOptionsVersionOutput {
	return o.ApplyT(func(v *LocationSMBMountOptionsVersion) LocationSMBMountOptionsVersion {
		if v != nil {
			return *v
		}
		var ret LocationSMBMountOptionsVersion
		return ret
	}).(LocationSMBMountOptionsVersionOutput)
}

func (o LocationSMBMountOptionsVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocationSMBMountOptionsVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LocationSMBMountOptionsVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LocationSMBMountOptionsVersionInput is an input type that accepts LocationSMBMountOptionsVersionArgs and LocationSMBMountOptionsVersionOutput values.
// You can construct a concrete instance of `LocationSMBMountOptionsVersionInput` via:
//
//          LocationSMBMountOptionsVersionArgs{...}
type LocationSMBMountOptionsVersionInput interface {
	pulumi.Input

	ToLocationSMBMountOptionsVersionOutput() LocationSMBMountOptionsVersionOutput
	ToLocationSMBMountOptionsVersionOutputWithContext(context.Context) LocationSMBMountOptionsVersionOutput
}

var locationSMBMountOptionsVersionPtrType = reflect.TypeOf((**LocationSMBMountOptionsVersion)(nil)).Elem()

type LocationSMBMountOptionsVersionPtrInput interface {
	pulumi.Input

	ToLocationSMBMountOptionsVersionPtrOutput() LocationSMBMountOptionsVersionPtrOutput
	ToLocationSMBMountOptionsVersionPtrOutputWithContext(context.Context) LocationSMBMountOptionsVersionPtrOutput
}

type locationSMBMountOptionsVersionPtr string

func LocationSMBMountOptionsVersionPtr(v string) LocationSMBMountOptionsVersionPtrInput {
	return (*locationSMBMountOptionsVersionPtr)(&v)
}

func (*locationSMBMountOptionsVersionPtr) ElementType() reflect.Type {
	return locationSMBMountOptionsVersionPtrType
}

func (in *locationSMBMountOptionsVersionPtr) ToLocationSMBMountOptionsVersionPtrOutput() LocationSMBMountOptionsVersionPtrOutput {
	return pulumi.ToOutput(in).(LocationSMBMountOptionsVersionPtrOutput)
}

func (in *locationSMBMountOptionsVersionPtr) ToLocationSMBMountOptionsVersionPtrOutputWithContext(ctx context.Context) LocationSMBMountOptionsVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LocationSMBMountOptionsVersionPtrOutput)
}

// The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type.
type TaskFilterRuleFilterType string

const (
	TaskFilterRuleFilterTypeSimplePattern = TaskFilterRuleFilterType("SIMPLE_PATTERN")
)

func (TaskFilterRuleFilterType) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskFilterRuleFilterType)(nil)).Elem()
}

func (e TaskFilterRuleFilterType) ToTaskFilterRuleFilterTypeOutput() TaskFilterRuleFilterTypeOutput {
	return pulumi.ToOutput(e).(TaskFilterRuleFilterTypeOutput)
}

func (e TaskFilterRuleFilterType) ToTaskFilterRuleFilterTypeOutputWithContext(ctx context.Context) TaskFilterRuleFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskFilterRuleFilterTypeOutput)
}

func (e TaskFilterRuleFilterType) ToTaskFilterRuleFilterTypePtrOutput() TaskFilterRuleFilterTypePtrOutput {
	return e.ToTaskFilterRuleFilterTypePtrOutputWithContext(context.Background())
}

func (e TaskFilterRuleFilterType) ToTaskFilterRuleFilterTypePtrOutputWithContext(ctx context.Context) TaskFilterRuleFilterTypePtrOutput {
	return TaskFilterRuleFilterType(e).ToTaskFilterRuleFilterTypeOutputWithContext(ctx).ToTaskFilterRuleFilterTypePtrOutputWithContext(ctx)
}

func (e TaskFilterRuleFilterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskFilterRuleFilterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskFilterRuleFilterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskFilterRuleFilterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskFilterRuleFilterTypeOutput struct{ *pulumi.OutputState }

func (TaskFilterRuleFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskFilterRuleFilterType)(nil)).Elem()
}

func (o TaskFilterRuleFilterTypeOutput) ToTaskFilterRuleFilterTypeOutput() TaskFilterRuleFilterTypeOutput {
	return o
}

func (o TaskFilterRuleFilterTypeOutput) ToTaskFilterRuleFilterTypeOutputWithContext(ctx context.Context) TaskFilterRuleFilterTypeOutput {
	return o
}

func (o TaskFilterRuleFilterTypeOutput) ToTaskFilterRuleFilterTypePtrOutput() TaskFilterRuleFilterTypePtrOutput {
	return o.ToTaskFilterRuleFilterTypePtrOutputWithContext(context.Background())
}

func (o TaskFilterRuleFilterTypeOutput) ToTaskFilterRuleFilterTypePtrOutputWithContext(ctx context.Context) TaskFilterRuleFilterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskFilterRuleFilterType) *TaskFilterRuleFilterType {
		return &v
	}).(TaskFilterRuleFilterTypePtrOutput)
}

func (o TaskFilterRuleFilterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskFilterRuleFilterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskFilterRuleFilterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskFilterRuleFilterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskFilterRuleFilterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskFilterRuleFilterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskFilterRuleFilterTypePtrOutput struct{ *pulumi.OutputState }

func (TaskFilterRuleFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskFilterRuleFilterType)(nil)).Elem()
}

func (o TaskFilterRuleFilterTypePtrOutput) ToTaskFilterRuleFilterTypePtrOutput() TaskFilterRuleFilterTypePtrOutput {
	return o
}

func (o TaskFilterRuleFilterTypePtrOutput) ToTaskFilterRuleFilterTypePtrOutputWithContext(ctx context.Context) TaskFilterRuleFilterTypePtrOutput {
	return o
}

func (o TaskFilterRuleFilterTypePtrOutput) Elem() TaskFilterRuleFilterTypeOutput {
	return o.ApplyT(func(v *TaskFilterRuleFilterType) TaskFilterRuleFilterType {
		if v != nil {
			return *v
		}
		var ret TaskFilterRuleFilterType
		return ret
	}).(TaskFilterRuleFilterTypeOutput)
}

func (o TaskFilterRuleFilterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskFilterRuleFilterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskFilterRuleFilterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskFilterRuleFilterTypeInput is an input type that accepts TaskFilterRuleFilterTypeArgs and TaskFilterRuleFilterTypeOutput values.
// You can construct a concrete instance of `TaskFilterRuleFilterTypeInput` via:
//
//          TaskFilterRuleFilterTypeArgs{...}
type TaskFilterRuleFilterTypeInput interface {
	pulumi.Input

	ToTaskFilterRuleFilterTypeOutput() TaskFilterRuleFilterTypeOutput
	ToTaskFilterRuleFilterTypeOutputWithContext(context.Context) TaskFilterRuleFilterTypeOutput
}

var taskFilterRuleFilterTypePtrType = reflect.TypeOf((**TaskFilterRuleFilterType)(nil)).Elem()

type TaskFilterRuleFilterTypePtrInput interface {
	pulumi.Input

	ToTaskFilterRuleFilterTypePtrOutput() TaskFilterRuleFilterTypePtrOutput
	ToTaskFilterRuleFilterTypePtrOutputWithContext(context.Context) TaskFilterRuleFilterTypePtrOutput
}

type taskFilterRuleFilterTypePtr string

func TaskFilterRuleFilterTypePtr(v string) TaskFilterRuleFilterTypePtrInput {
	return (*taskFilterRuleFilterTypePtr)(&v)
}

func (*taskFilterRuleFilterTypePtr) ElementType() reflect.Type {
	return taskFilterRuleFilterTypePtrType
}

func (in *taskFilterRuleFilterTypePtr) ToTaskFilterRuleFilterTypePtrOutput() TaskFilterRuleFilterTypePtrOutput {
	return pulumi.ToOutput(in).(TaskFilterRuleFilterTypePtrOutput)
}

func (in *taskFilterRuleFilterTypePtr) ToTaskFilterRuleFilterTypePtrOutputWithContext(ctx context.Context) TaskFilterRuleFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskFilterRuleFilterTypePtrOutput)
}

// A file metadata value that shows the last time a file was accessed (that is, when the file was read or written to).
type TaskOptionsAtime string

const (
	TaskOptionsAtimeNone       = TaskOptionsAtime("NONE")
	TaskOptionsAtimeBestEffort = TaskOptionsAtime("BEST_EFFORT")
)

func (TaskOptionsAtime) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsAtime)(nil)).Elem()
}

func (e TaskOptionsAtime) ToTaskOptionsAtimeOutput() TaskOptionsAtimeOutput {
	return pulumi.ToOutput(e).(TaskOptionsAtimeOutput)
}

func (e TaskOptionsAtime) ToTaskOptionsAtimeOutputWithContext(ctx context.Context) TaskOptionsAtimeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsAtimeOutput)
}

func (e TaskOptionsAtime) ToTaskOptionsAtimePtrOutput() TaskOptionsAtimePtrOutput {
	return e.ToTaskOptionsAtimePtrOutputWithContext(context.Background())
}

func (e TaskOptionsAtime) ToTaskOptionsAtimePtrOutputWithContext(ctx context.Context) TaskOptionsAtimePtrOutput {
	return TaskOptionsAtime(e).ToTaskOptionsAtimeOutputWithContext(ctx).ToTaskOptionsAtimePtrOutputWithContext(ctx)
}

func (e TaskOptionsAtime) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsAtime) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsAtime) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsAtime) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsAtimeOutput struct{ *pulumi.OutputState }

func (TaskOptionsAtimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsAtime)(nil)).Elem()
}

func (o TaskOptionsAtimeOutput) ToTaskOptionsAtimeOutput() TaskOptionsAtimeOutput {
	return o
}

func (o TaskOptionsAtimeOutput) ToTaskOptionsAtimeOutputWithContext(ctx context.Context) TaskOptionsAtimeOutput {
	return o
}

func (o TaskOptionsAtimeOutput) ToTaskOptionsAtimePtrOutput() TaskOptionsAtimePtrOutput {
	return o.ToTaskOptionsAtimePtrOutputWithContext(context.Background())
}

func (o TaskOptionsAtimeOutput) ToTaskOptionsAtimePtrOutputWithContext(ctx context.Context) TaskOptionsAtimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsAtime) *TaskOptionsAtime {
		return &v
	}).(TaskOptionsAtimePtrOutput)
}

func (o TaskOptionsAtimeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsAtimeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsAtime) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsAtimeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsAtimeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsAtime) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsAtimePtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsAtimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsAtime)(nil)).Elem()
}

func (o TaskOptionsAtimePtrOutput) ToTaskOptionsAtimePtrOutput() TaskOptionsAtimePtrOutput {
	return o
}

func (o TaskOptionsAtimePtrOutput) ToTaskOptionsAtimePtrOutputWithContext(ctx context.Context) TaskOptionsAtimePtrOutput {
	return o
}

func (o TaskOptionsAtimePtrOutput) Elem() TaskOptionsAtimeOutput {
	return o.ApplyT(func(v *TaskOptionsAtime) TaskOptionsAtime {
		if v != nil {
			return *v
		}
		var ret TaskOptionsAtime
		return ret
	}).(TaskOptionsAtimeOutput)
}

func (o TaskOptionsAtimePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsAtimePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsAtime) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsAtimeInput is an input type that accepts TaskOptionsAtimeArgs and TaskOptionsAtimeOutput values.
// You can construct a concrete instance of `TaskOptionsAtimeInput` via:
//
//          TaskOptionsAtimeArgs{...}
type TaskOptionsAtimeInput interface {
	pulumi.Input

	ToTaskOptionsAtimeOutput() TaskOptionsAtimeOutput
	ToTaskOptionsAtimeOutputWithContext(context.Context) TaskOptionsAtimeOutput
}

var taskOptionsAtimePtrType = reflect.TypeOf((**TaskOptionsAtime)(nil)).Elem()

type TaskOptionsAtimePtrInput interface {
	pulumi.Input

	ToTaskOptionsAtimePtrOutput() TaskOptionsAtimePtrOutput
	ToTaskOptionsAtimePtrOutputWithContext(context.Context) TaskOptionsAtimePtrOutput
}

type taskOptionsAtimePtr string

func TaskOptionsAtimePtr(v string) TaskOptionsAtimePtrInput {
	return (*taskOptionsAtimePtr)(&v)
}

func (*taskOptionsAtimePtr) ElementType() reflect.Type {
	return taskOptionsAtimePtrType
}

func (in *taskOptionsAtimePtr) ToTaskOptionsAtimePtrOutput() TaskOptionsAtimePtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsAtimePtrOutput)
}

func (in *taskOptionsAtimePtr) ToTaskOptionsAtimePtrOutputWithContext(ctx context.Context) TaskOptionsAtimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsAtimePtrOutput)
}

// The group ID (GID) of the file's owners.
type TaskOptionsGid string

const (
	TaskOptionsGidNone     = TaskOptionsGid("NONE")
	TaskOptionsGidIntValue = TaskOptionsGid("INT_VALUE")
	TaskOptionsGidName     = TaskOptionsGid("NAME")
	TaskOptionsGidBoth     = TaskOptionsGid("BOTH")
)

func (TaskOptionsGid) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsGid)(nil)).Elem()
}

func (e TaskOptionsGid) ToTaskOptionsGidOutput() TaskOptionsGidOutput {
	return pulumi.ToOutput(e).(TaskOptionsGidOutput)
}

func (e TaskOptionsGid) ToTaskOptionsGidOutputWithContext(ctx context.Context) TaskOptionsGidOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsGidOutput)
}

func (e TaskOptionsGid) ToTaskOptionsGidPtrOutput() TaskOptionsGidPtrOutput {
	return e.ToTaskOptionsGidPtrOutputWithContext(context.Background())
}

func (e TaskOptionsGid) ToTaskOptionsGidPtrOutputWithContext(ctx context.Context) TaskOptionsGidPtrOutput {
	return TaskOptionsGid(e).ToTaskOptionsGidOutputWithContext(ctx).ToTaskOptionsGidPtrOutputWithContext(ctx)
}

func (e TaskOptionsGid) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsGid) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsGid) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsGid) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsGidOutput struct{ *pulumi.OutputState }

func (TaskOptionsGidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsGid)(nil)).Elem()
}

func (o TaskOptionsGidOutput) ToTaskOptionsGidOutput() TaskOptionsGidOutput {
	return o
}

func (o TaskOptionsGidOutput) ToTaskOptionsGidOutputWithContext(ctx context.Context) TaskOptionsGidOutput {
	return o
}

func (o TaskOptionsGidOutput) ToTaskOptionsGidPtrOutput() TaskOptionsGidPtrOutput {
	return o.ToTaskOptionsGidPtrOutputWithContext(context.Background())
}

func (o TaskOptionsGidOutput) ToTaskOptionsGidPtrOutputWithContext(ctx context.Context) TaskOptionsGidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsGid) *TaskOptionsGid {
		return &v
	}).(TaskOptionsGidPtrOutput)
}

func (o TaskOptionsGidOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsGidOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsGid) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsGidOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsGidOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsGid) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsGidPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsGidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsGid)(nil)).Elem()
}

func (o TaskOptionsGidPtrOutput) ToTaskOptionsGidPtrOutput() TaskOptionsGidPtrOutput {
	return o
}

func (o TaskOptionsGidPtrOutput) ToTaskOptionsGidPtrOutputWithContext(ctx context.Context) TaskOptionsGidPtrOutput {
	return o
}

func (o TaskOptionsGidPtrOutput) Elem() TaskOptionsGidOutput {
	return o.ApplyT(func(v *TaskOptionsGid) TaskOptionsGid {
		if v != nil {
			return *v
		}
		var ret TaskOptionsGid
		return ret
	}).(TaskOptionsGidOutput)
}

func (o TaskOptionsGidPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsGidPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsGid) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsGidInput is an input type that accepts TaskOptionsGidArgs and TaskOptionsGidOutput values.
// You can construct a concrete instance of `TaskOptionsGidInput` via:
//
//          TaskOptionsGidArgs{...}
type TaskOptionsGidInput interface {
	pulumi.Input

	ToTaskOptionsGidOutput() TaskOptionsGidOutput
	ToTaskOptionsGidOutputWithContext(context.Context) TaskOptionsGidOutput
}

var taskOptionsGidPtrType = reflect.TypeOf((**TaskOptionsGid)(nil)).Elem()

type TaskOptionsGidPtrInput interface {
	pulumi.Input

	ToTaskOptionsGidPtrOutput() TaskOptionsGidPtrOutput
	ToTaskOptionsGidPtrOutputWithContext(context.Context) TaskOptionsGidPtrOutput
}

type taskOptionsGidPtr string

func TaskOptionsGidPtr(v string) TaskOptionsGidPtrInput {
	return (*taskOptionsGidPtr)(&v)
}

func (*taskOptionsGidPtr) ElementType() reflect.Type {
	return taskOptionsGidPtrType
}

func (in *taskOptionsGidPtr) ToTaskOptionsGidPtrOutput() TaskOptionsGidPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsGidPtrOutput)
}

func (in *taskOptionsGidPtr) ToTaskOptionsGidPtrOutputWithContext(ctx context.Context) TaskOptionsGidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsGidPtrOutput)
}

// A value that determines the types of logs that DataSync publishes to a log stream in the Amazon CloudWatch log group that you provide.
type TaskOptionsLogLevel string

const (
	TaskOptionsLogLevelOff      = TaskOptionsLogLevel("OFF")
	TaskOptionsLogLevelBasic    = TaskOptionsLogLevel("BASIC")
	TaskOptionsLogLevelTransfer = TaskOptionsLogLevel("TRANSFER")
)

func (TaskOptionsLogLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsLogLevel)(nil)).Elem()
}

func (e TaskOptionsLogLevel) ToTaskOptionsLogLevelOutput() TaskOptionsLogLevelOutput {
	return pulumi.ToOutput(e).(TaskOptionsLogLevelOutput)
}

func (e TaskOptionsLogLevel) ToTaskOptionsLogLevelOutputWithContext(ctx context.Context) TaskOptionsLogLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsLogLevelOutput)
}

func (e TaskOptionsLogLevel) ToTaskOptionsLogLevelPtrOutput() TaskOptionsLogLevelPtrOutput {
	return e.ToTaskOptionsLogLevelPtrOutputWithContext(context.Background())
}

func (e TaskOptionsLogLevel) ToTaskOptionsLogLevelPtrOutputWithContext(ctx context.Context) TaskOptionsLogLevelPtrOutput {
	return TaskOptionsLogLevel(e).ToTaskOptionsLogLevelOutputWithContext(ctx).ToTaskOptionsLogLevelPtrOutputWithContext(ctx)
}

func (e TaskOptionsLogLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsLogLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsLogLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsLogLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsLogLevelOutput struct{ *pulumi.OutputState }

func (TaskOptionsLogLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsLogLevel)(nil)).Elem()
}

func (o TaskOptionsLogLevelOutput) ToTaskOptionsLogLevelOutput() TaskOptionsLogLevelOutput {
	return o
}

func (o TaskOptionsLogLevelOutput) ToTaskOptionsLogLevelOutputWithContext(ctx context.Context) TaskOptionsLogLevelOutput {
	return o
}

func (o TaskOptionsLogLevelOutput) ToTaskOptionsLogLevelPtrOutput() TaskOptionsLogLevelPtrOutput {
	return o.ToTaskOptionsLogLevelPtrOutputWithContext(context.Background())
}

func (o TaskOptionsLogLevelOutput) ToTaskOptionsLogLevelPtrOutputWithContext(ctx context.Context) TaskOptionsLogLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsLogLevel) *TaskOptionsLogLevel {
		return &v
	}).(TaskOptionsLogLevelPtrOutput)
}

func (o TaskOptionsLogLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsLogLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsLogLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsLogLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsLogLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsLogLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsLogLevelPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsLogLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsLogLevel)(nil)).Elem()
}

func (o TaskOptionsLogLevelPtrOutput) ToTaskOptionsLogLevelPtrOutput() TaskOptionsLogLevelPtrOutput {
	return o
}

func (o TaskOptionsLogLevelPtrOutput) ToTaskOptionsLogLevelPtrOutputWithContext(ctx context.Context) TaskOptionsLogLevelPtrOutput {
	return o
}

func (o TaskOptionsLogLevelPtrOutput) Elem() TaskOptionsLogLevelOutput {
	return o.ApplyT(func(v *TaskOptionsLogLevel) TaskOptionsLogLevel {
		if v != nil {
			return *v
		}
		var ret TaskOptionsLogLevel
		return ret
	}).(TaskOptionsLogLevelOutput)
}

func (o TaskOptionsLogLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsLogLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsLogLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsLogLevelInput is an input type that accepts TaskOptionsLogLevelArgs and TaskOptionsLogLevelOutput values.
// You can construct a concrete instance of `TaskOptionsLogLevelInput` via:
//
//          TaskOptionsLogLevelArgs{...}
type TaskOptionsLogLevelInput interface {
	pulumi.Input

	ToTaskOptionsLogLevelOutput() TaskOptionsLogLevelOutput
	ToTaskOptionsLogLevelOutputWithContext(context.Context) TaskOptionsLogLevelOutput
}

var taskOptionsLogLevelPtrType = reflect.TypeOf((**TaskOptionsLogLevel)(nil)).Elem()

type TaskOptionsLogLevelPtrInput interface {
	pulumi.Input

	ToTaskOptionsLogLevelPtrOutput() TaskOptionsLogLevelPtrOutput
	ToTaskOptionsLogLevelPtrOutputWithContext(context.Context) TaskOptionsLogLevelPtrOutput
}

type taskOptionsLogLevelPtr string

func TaskOptionsLogLevelPtr(v string) TaskOptionsLogLevelPtrInput {
	return (*taskOptionsLogLevelPtr)(&v)
}

func (*taskOptionsLogLevelPtr) ElementType() reflect.Type {
	return taskOptionsLogLevelPtrType
}

func (in *taskOptionsLogLevelPtr) ToTaskOptionsLogLevelPtrOutput() TaskOptionsLogLevelPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsLogLevelPtrOutput)
}

func (in *taskOptionsLogLevelPtr) ToTaskOptionsLogLevelPtrOutputWithContext(ctx context.Context) TaskOptionsLogLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsLogLevelPtrOutput)
}

// A value that indicates the last time that a file was modified (that is, a file was written to) before the PREPARING phase.
type TaskOptionsMtime string

const (
	TaskOptionsMtimeNone     = TaskOptionsMtime("NONE")
	TaskOptionsMtimePreserve = TaskOptionsMtime("PRESERVE")
)

func (TaskOptionsMtime) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsMtime)(nil)).Elem()
}

func (e TaskOptionsMtime) ToTaskOptionsMtimeOutput() TaskOptionsMtimeOutput {
	return pulumi.ToOutput(e).(TaskOptionsMtimeOutput)
}

func (e TaskOptionsMtime) ToTaskOptionsMtimeOutputWithContext(ctx context.Context) TaskOptionsMtimeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsMtimeOutput)
}

func (e TaskOptionsMtime) ToTaskOptionsMtimePtrOutput() TaskOptionsMtimePtrOutput {
	return e.ToTaskOptionsMtimePtrOutputWithContext(context.Background())
}

func (e TaskOptionsMtime) ToTaskOptionsMtimePtrOutputWithContext(ctx context.Context) TaskOptionsMtimePtrOutput {
	return TaskOptionsMtime(e).ToTaskOptionsMtimeOutputWithContext(ctx).ToTaskOptionsMtimePtrOutputWithContext(ctx)
}

func (e TaskOptionsMtime) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsMtime) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsMtime) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsMtime) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsMtimeOutput struct{ *pulumi.OutputState }

func (TaskOptionsMtimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsMtime)(nil)).Elem()
}

func (o TaskOptionsMtimeOutput) ToTaskOptionsMtimeOutput() TaskOptionsMtimeOutput {
	return o
}

func (o TaskOptionsMtimeOutput) ToTaskOptionsMtimeOutputWithContext(ctx context.Context) TaskOptionsMtimeOutput {
	return o
}

func (o TaskOptionsMtimeOutput) ToTaskOptionsMtimePtrOutput() TaskOptionsMtimePtrOutput {
	return o.ToTaskOptionsMtimePtrOutputWithContext(context.Background())
}

func (o TaskOptionsMtimeOutput) ToTaskOptionsMtimePtrOutputWithContext(ctx context.Context) TaskOptionsMtimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsMtime) *TaskOptionsMtime {
		return &v
	}).(TaskOptionsMtimePtrOutput)
}

func (o TaskOptionsMtimeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsMtimeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsMtime) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsMtimeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsMtimeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsMtime) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsMtimePtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsMtimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsMtime)(nil)).Elem()
}

func (o TaskOptionsMtimePtrOutput) ToTaskOptionsMtimePtrOutput() TaskOptionsMtimePtrOutput {
	return o
}

func (o TaskOptionsMtimePtrOutput) ToTaskOptionsMtimePtrOutputWithContext(ctx context.Context) TaskOptionsMtimePtrOutput {
	return o
}

func (o TaskOptionsMtimePtrOutput) Elem() TaskOptionsMtimeOutput {
	return o.ApplyT(func(v *TaskOptionsMtime) TaskOptionsMtime {
		if v != nil {
			return *v
		}
		var ret TaskOptionsMtime
		return ret
	}).(TaskOptionsMtimeOutput)
}

func (o TaskOptionsMtimePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsMtimePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsMtime) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsMtimeInput is an input type that accepts TaskOptionsMtimeArgs and TaskOptionsMtimeOutput values.
// You can construct a concrete instance of `TaskOptionsMtimeInput` via:
//
//          TaskOptionsMtimeArgs{...}
type TaskOptionsMtimeInput interface {
	pulumi.Input

	ToTaskOptionsMtimeOutput() TaskOptionsMtimeOutput
	ToTaskOptionsMtimeOutputWithContext(context.Context) TaskOptionsMtimeOutput
}

var taskOptionsMtimePtrType = reflect.TypeOf((**TaskOptionsMtime)(nil)).Elem()

type TaskOptionsMtimePtrInput interface {
	pulumi.Input

	ToTaskOptionsMtimePtrOutput() TaskOptionsMtimePtrOutput
	ToTaskOptionsMtimePtrOutputWithContext(context.Context) TaskOptionsMtimePtrOutput
}

type taskOptionsMtimePtr string

func TaskOptionsMtimePtr(v string) TaskOptionsMtimePtrInput {
	return (*taskOptionsMtimePtr)(&v)
}

func (*taskOptionsMtimePtr) ElementType() reflect.Type {
	return taskOptionsMtimePtrType
}

func (in *taskOptionsMtimePtr) ToTaskOptionsMtimePtrOutput() TaskOptionsMtimePtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsMtimePtrOutput)
}

func (in *taskOptionsMtimePtr) ToTaskOptionsMtimePtrOutputWithContext(ctx context.Context) TaskOptionsMtimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsMtimePtrOutput)
}

// A value that determines whether files at the destination should be overwritten or preserved when copying files.
type TaskOptionsOverwriteMode string

const (
	TaskOptionsOverwriteModeAlways = TaskOptionsOverwriteMode("ALWAYS")
	TaskOptionsOverwriteModeNever  = TaskOptionsOverwriteMode("NEVER")
)

func (TaskOptionsOverwriteMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsOverwriteMode)(nil)).Elem()
}

func (e TaskOptionsOverwriteMode) ToTaskOptionsOverwriteModeOutput() TaskOptionsOverwriteModeOutput {
	return pulumi.ToOutput(e).(TaskOptionsOverwriteModeOutput)
}

func (e TaskOptionsOverwriteMode) ToTaskOptionsOverwriteModeOutputWithContext(ctx context.Context) TaskOptionsOverwriteModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsOverwriteModeOutput)
}

func (e TaskOptionsOverwriteMode) ToTaskOptionsOverwriteModePtrOutput() TaskOptionsOverwriteModePtrOutput {
	return e.ToTaskOptionsOverwriteModePtrOutputWithContext(context.Background())
}

func (e TaskOptionsOverwriteMode) ToTaskOptionsOverwriteModePtrOutputWithContext(ctx context.Context) TaskOptionsOverwriteModePtrOutput {
	return TaskOptionsOverwriteMode(e).ToTaskOptionsOverwriteModeOutputWithContext(ctx).ToTaskOptionsOverwriteModePtrOutputWithContext(ctx)
}

func (e TaskOptionsOverwriteMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsOverwriteMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsOverwriteMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsOverwriteMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsOverwriteModeOutput struct{ *pulumi.OutputState }

func (TaskOptionsOverwriteModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsOverwriteMode)(nil)).Elem()
}

func (o TaskOptionsOverwriteModeOutput) ToTaskOptionsOverwriteModeOutput() TaskOptionsOverwriteModeOutput {
	return o
}

func (o TaskOptionsOverwriteModeOutput) ToTaskOptionsOverwriteModeOutputWithContext(ctx context.Context) TaskOptionsOverwriteModeOutput {
	return o
}

func (o TaskOptionsOverwriteModeOutput) ToTaskOptionsOverwriteModePtrOutput() TaskOptionsOverwriteModePtrOutput {
	return o.ToTaskOptionsOverwriteModePtrOutputWithContext(context.Background())
}

func (o TaskOptionsOverwriteModeOutput) ToTaskOptionsOverwriteModePtrOutputWithContext(ctx context.Context) TaskOptionsOverwriteModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsOverwriteMode) *TaskOptionsOverwriteMode {
		return &v
	}).(TaskOptionsOverwriteModePtrOutput)
}

func (o TaskOptionsOverwriteModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsOverwriteModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsOverwriteMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsOverwriteModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsOverwriteModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsOverwriteMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsOverwriteModePtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsOverwriteModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsOverwriteMode)(nil)).Elem()
}

func (o TaskOptionsOverwriteModePtrOutput) ToTaskOptionsOverwriteModePtrOutput() TaskOptionsOverwriteModePtrOutput {
	return o
}

func (o TaskOptionsOverwriteModePtrOutput) ToTaskOptionsOverwriteModePtrOutputWithContext(ctx context.Context) TaskOptionsOverwriteModePtrOutput {
	return o
}

func (o TaskOptionsOverwriteModePtrOutput) Elem() TaskOptionsOverwriteModeOutput {
	return o.ApplyT(func(v *TaskOptionsOverwriteMode) TaskOptionsOverwriteMode {
		if v != nil {
			return *v
		}
		var ret TaskOptionsOverwriteMode
		return ret
	}).(TaskOptionsOverwriteModeOutput)
}

func (o TaskOptionsOverwriteModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsOverwriteModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsOverwriteMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsOverwriteModeInput is an input type that accepts TaskOptionsOverwriteModeArgs and TaskOptionsOverwriteModeOutput values.
// You can construct a concrete instance of `TaskOptionsOverwriteModeInput` via:
//
//          TaskOptionsOverwriteModeArgs{...}
type TaskOptionsOverwriteModeInput interface {
	pulumi.Input

	ToTaskOptionsOverwriteModeOutput() TaskOptionsOverwriteModeOutput
	ToTaskOptionsOverwriteModeOutputWithContext(context.Context) TaskOptionsOverwriteModeOutput
}

var taskOptionsOverwriteModePtrType = reflect.TypeOf((**TaskOptionsOverwriteMode)(nil)).Elem()

type TaskOptionsOverwriteModePtrInput interface {
	pulumi.Input

	ToTaskOptionsOverwriteModePtrOutput() TaskOptionsOverwriteModePtrOutput
	ToTaskOptionsOverwriteModePtrOutputWithContext(context.Context) TaskOptionsOverwriteModePtrOutput
}

type taskOptionsOverwriteModePtr string

func TaskOptionsOverwriteModePtr(v string) TaskOptionsOverwriteModePtrInput {
	return (*taskOptionsOverwriteModePtr)(&v)
}

func (*taskOptionsOverwriteModePtr) ElementType() reflect.Type {
	return taskOptionsOverwriteModePtrType
}

func (in *taskOptionsOverwriteModePtr) ToTaskOptionsOverwriteModePtrOutput() TaskOptionsOverwriteModePtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsOverwriteModePtrOutput)
}

func (in *taskOptionsOverwriteModePtr) ToTaskOptionsOverwriteModePtrOutputWithContext(ctx context.Context) TaskOptionsOverwriteModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsOverwriteModePtrOutput)
}

// A value that determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file.
type TaskOptionsPosixPermissions string

const (
	TaskOptionsPosixPermissionsNone     = TaskOptionsPosixPermissions("NONE")
	TaskOptionsPosixPermissionsPreserve = TaskOptionsPosixPermissions("PRESERVE")
)

func (TaskOptionsPosixPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsPosixPermissions)(nil)).Elem()
}

func (e TaskOptionsPosixPermissions) ToTaskOptionsPosixPermissionsOutput() TaskOptionsPosixPermissionsOutput {
	return pulumi.ToOutput(e).(TaskOptionsPosixPermissionsOutput)
}

func (e TaskOptionsPosixPermissions) ToTaskOptionsPosixPermissionsOutputWithContext(ctx context.Context) TaskOptionsPosixPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsPosixPermissionsOutput)
}

func (e TaskOptionsPosixPermissions) ToTaskOptionsPosixPermissionsPtrOutput() TaskOptionsPosixPermissionsPtrOutput {
	return e.ToTaskOptionsPosixPermissionsPtrOutputWithContext(context.Background())
}

func (e TaskOptionsPosixPermissions) ToTaskOptionsPosixPermissionsPtrOutputWithContext(ctx context.Context) TaskOptionsPosixPermissionsPtrOutput {
	return TaskOptionsPosixPermissions(e).ToTaskOptionsPosixPermissionsOutputWithContext(ctx).ToTaskOptionsPosixPermissionsPtrOutputWithContext(ctx)
}

func (e TaskOptionsPosixPermissions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsPosixPermissions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsPosixPermissions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsPosixPermissions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsPosixPermissionsOutput struct{ *pulumi.OutputState }

func (TaskOptionsPosixPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsPosixPermissions)(nil)).Elem()
}

func (o TaskOptionsPosixPermissionsOutput) ToTaskOptionsPosixPermissionsOutput() TaskOptionsPosixPermissionsOutput {
	return o
}

func (o TaskOptionsPosixPermissionsOutput) ToTaskOptionsPosixPermissionsOutputWithContext(ctx context.Context) TaskOptionsPosixPermissionsOutput {
	return o
}

func (o TaskOptionsPosixPermissionsOutput) ToTaskOptionsPosixPermissionsPtrOutput() TaskOptionsPosixPermissionsPtrOutput {
	return o.ToTaskOptionsPosixPermissionsPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPosixPermissionsOutput) ToTaskOptionsPosixPermissionsPtrOutputWithContext(ctx context.Context) TaskOptionsPosixPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsPosixPermissions) *TaskOptionsPosixPermissions {
		return &v
	}).(TaskOptionsPosixPermissionsPtrOutput)
}

func (o TaskOptionsPosixPermissionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsPosixPermissionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsPosixPermissions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsPosixPermissionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPosixPermissionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsPosixPermissions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsPosixPermissionsPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsPosixPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsPosixPermissions)(nil)).Elem()
}

func (o TaskOptionsPosixPermissionsPtrOutput) ToTaskOptionsPosixPermissionsPtrOutput() TaskOptionsPosixPermissionsPtrOutput {
	return o
}

func (o TaskOptionsPosixPermissionsPtrOutput) ToTaskOptionsPosixPermissionsPtrOutputWithContext(ctx context.Context) TaskOptionsPosixPermissionsPtrOutput {
	return o
}

func (o TaskOptionsPosixPermissionsPtrOutput) Elem() TaskOptionsPosixPermissionsOutput {
	return o.ApplyT(func(v *TaskOptionsPosixPermissions) TaskOptionsPosixPermissions {
		if v != nil {
			return *v
		}
		var ret TaskOptionsPosixPermissions
		return ret
	}).(TaskOptionsPosixPermissionsOutput)
}

func (o TaskOptionsPosixPermissionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPosixPermissionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsPosixPermissions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsPosixPermissionsInput is an input type that accepts TaskOptionsPosixPermissionsArgs and TaskOptionsPosixPermissionsOutput values.
// You can construct a concrete instance of `TaskOptionsPosixPermissionsInput` via:
//
//          TaskOptionsPosixPermissionsArgs{...}
type TaskOptionsPosixPermissionsInput interface {
	pulumi.Input

	ToTaskOptionsPosixPermissionsOutput() TaskOptionsPosixPermissionsOutput
	ToTaskOptionsPosixPermissionsOutputWithContext(context.Context) TaskOptionsPosixPermissionsOutput
}

var taskOptionsPosixPermissionsPtrType = reflect.TypeOf((**TaskOptionsPosixPermissions)(nil)).Elem()

type TaskOptionsPosixPermissionsPtrInput interface {
	pulumi.Input

	ToTaskOptionsPosixPermissionsPtrOutput() TaskOptionsPosixPermissionsPtrOutput
	ToTaskOptionsPosixPermissionsPtrOutputWithContext(context.Context) TaskOptionsPosixPermissionsPtrOutput
}

type taskOptionsPosixPermissionsPtr string

func TaskOptionsPosixPermissionsPtr(v string) TaskOptionsPosixPermissionsPtrInput {
	return (*taskOptionsPosixPermissionsPtr)(&v)
}

func (*taskOptionsPosixPermissionsPtr) ElementType() reflect.Type {
	return taskOptionsPosixPermissionsPtrType
}

func (in *taskOptionsPosixPermissionsPtr) ToTaskOptionsPosixPermissionsPtrOutput() TaskOptionsPosixPermissionsPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsPosixPermissionsPtrOutput)
}

func (in *taskOptionsPosixPermissionsPtr) ToTaskOptionsPosixPermissionsPtrOutputWithContext(ctx context.Context) TaskOptionsPosixPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsPosixPermissionsPtrOutput)
}

// A value that specifies whether files in the destination that don't exist in the source file system should be preserved.
type TaskOptionsPreserveDeletedFiles string

const (
	TaskOptionsPreserveDeletedFilesPreserve = TaskOptionsPreserveDeletedFiles("PRESERVE")
	TaskOptionsPreserveDeletedFilesRemove   = TaskOptionsPreserveDeletedFiles("REMOVE")
)

func (TaskOptionsPreserveDeletedFiles) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsPreserveDeletedFiles)(nil)).Elem()
}

func (e TaskOptionsPreserveDeletedFiles) ToTaskOptionsPreserveDeletedFilesOutput() TaskOptionsPreserveDeletedFilesOutput {
	return pulumi.ToOutput(e).(TaskOptionsPreserveDeletedFilesOutput)
}

func (e TaskOptionsPreserveDeletedFiles) ToTaskOptionsPreserveDeletedFilesOutputWithContext(ctx context.Context) TaskOptionsPreserveDeletedFilesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsPreserveDeletedFilesOutput)
}

func (e TaskOptionsPreserveDeletedFiles) ToTaskOptionsPreserveDeletedFilesPtrOutput() TaskOptionsPreserveDeletedFilesPtrOutput {
	return e.ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(context.Background())
}

func (e TaskOptionsPreserveDeletedFiles) ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDeletedFilesPtrOutput {
	return TaskOptionsPreserveDeletedFiles(e).ToTaskOptionsPreserveDeletedFilesOutputWithContext(ctx).ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(ctx)
}

func (e TaskOptionsPreserveDeletedFiles) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsPreserveDeletedFiles) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsPreserveDeletedFiles) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsPreserveDeletedFiles) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsPreserveDeletedFilesOutput struct{ *pulumi.OutputState }

func (TaskOptionsPreserveDeletedFilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsPreserveDeletedFiles)(nil)).Elem()
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToTaskOptionsPreserveDeletedFilesOutput() TaskOptionsPreserveDeletedFilesOutput {
	return o
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToTaskOptionsPreserveDeletedFilesOutputWithContext(ctx context.Context) TaskOptionsPreserveDeletedFilesOutput {
	return o
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToTaskOptionsPreserveDeletedFilesPtrOutput() TaskOptionsPreserveDeletedFilesPtrOutput {
	return o.ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDeletedFilesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsPreserveDeletedFiles) *TaskOptionsPreserveDeletedFiles {
		return &v
	}).(TaskOptionsPreserveDeletedFilesPtrOutput)
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsPreserveDeletedFiles) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDeletedFilesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsPreserveDeletedFiles) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsPreserveDeletedFilesPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsPreserveDeletedFilesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsPreserveDeletedFiles)(nil)).Elem()
}

func (o TaskOptionsPreserveDeletedFilesPtrOutput) ToTaskOptionsPreserveDeletedFilesPtrOutput() TaskOptionsPreserveDeletedFilesPtrOutput {
	return o
}

func (o TaskOptionsPreserveDeletedFilesPtrOutput) ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDeletedFilesPtrOutput {
	return o
}

func (o TaskOptionsPreserveDeletedFilesPtrOutput) Elem() TaskOptionsPreserveDeletedFilesOutput {
	return o.ApplyT(func(v *TaskOptionsPreserveDeletedFiles) TaskOptionsPreserveDeletedFiles {
		if v != nil {
			return *v
		}
		var ret TaskOptionsPreserveDeletedFiles
		return ret
	}).(TaskOptionsPreserveDeletedFilesOutput)
}

func (o TaskOptionsPreserveDeletedFilesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDeletedFilesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsPreserveDeletedFiles) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsPreserveDeletedFilesInput is an input type that accepts TaskOptionsPreserveDeletedFilesArgs and TaskOptionsPreserveDeletedFilesOutput values.
// You can construct a concrete instance of `TaskOptionsPreserveDeletedFilesInput` via:
//
//          TaskOptionsPreserveDeletedFilesArgs{...}
type TaskOptionsPreserveDeletedFilesInput interface {
	pulumi.Input

	ToTaskOptionsPreserveDeletedFilesOutput() TaskOptionsPreserveDeletedFilesOutput
	ToTaskOptionsPreserveDeletedFilesOutputWithContext(context.Context) TaskOptionsPreserveDeletedFilesOutput
}

var taskOptionsPreserveDeletedFilesPtrType = reflect.TypeOf((**TaskOptionsPreserveDeletedFiles)(nil)).Elem()

type TaskOptionsPreserveDeletedFilesPtrInput interface {
	pulumi.Input

	ToTaskOptionsPreserveDeletedFilesPtrOutput() TaskOptionsPreserveDeletedFilesPtrOutput
	ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(context.Context) TaskOptionsPreserveDeletedFilesPtrOutput
}

type taskOptionsPreserveDeletedFilesPtr string

func TaskOptionsPreserveDeletedFilesPtr(v string) TaskOptionsPreserveDeletedFilesPtrInput {
	return (*taskOptionsPreserveDeletedFilesPtr)(&v)
}

func (*taskOptionsPreserveDeletedFilesPtr) ElementType() reflect.Type {
	return taskOptionsPreserveDeletedFilesPtrType
}

func (in *taskOptionsPreserveDeletedFilesPtr) ToTaskOptionsPreserveDeletedFilesPtrOutput() TaskOptionsPreserveDeletedFilesPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsPreserveDeletedFilesPtrOutput)
}

func (in *taskOptionsPreserveDeletedFilesPtr) ToTaskOptionsPreserveDeletedFilesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDeletedFilesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsPreserveDeletedFilesPtrOutput)
}

// A value that determines whether AWS DataSync should preserve the metadata of block and character devices in the source file system, and recreate the files with that device name and metadata on the destination.
type TaskOptionsPreserveDevices string

const (
	TaskOptionsPreserveDevicesNone     = TaskOptionsPreserveDevices("NONE")
	TaskOptionsPreserveDevicesPreserve = TaskOptionsPreserveDevices("PRESERVE")
)

func (TaskOptionsPreserveDevices) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsPreserveDevices)(nil)).Elem()
}

func (e TaskOptionsPreserveDevices) ToTaskOptionsPreserveDevicesOutput() TaskOptionsPreserveDevicesOutput {
	return pulumi.ToOutput(e).(TaskOptionsPreserveDevicesOutput)
}

func (e TaskOptionsPreserveDevices) ToTaskOptionsPreserveDevicesOutputWithContext(ctx context.Context) TaskOptionsPreserveDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsPreserveDevicesOutput)
}

func (e TaskOptionsPreserveDevices) ToTaskOptionsPreserveDevicesPtrOutput() TaskOptionsPreserveDevicesPtrOutput {
	return e.ToTaskOptionsPreserveDevicesPtrOutputWithContext(context.Background())
}

func (e TaskOptionsPreserveDevices) ToTaskOptionsPreserveDevicesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDevicesPtrOutput {
	return TaskOptionsPreserveDevices(e).ToTaskOptionsPreserveDevicesOutputWithContext(ctx).ToTaskOptionsPreserveDevicesPtrOutputWithContext(ctx)
}

func (e TaskOptionsPreserveDevices) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsPreserveDevices) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsPreserveDevices) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsPreserveDevices) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsPreserveDevicesOutput struct{ *pulumi.OutputState }

func (TaskOptionsPreserveDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsPreserveDevices)(nil)).Elem()
}

func (o TaskOptionsPreserveDevicesOutput) ToTaskOptionsPreserveDevicesOutput() TaskOptionsPreserveDevicesOutput {
	return o
}

func (o TaskOptionsPreserveDevicesOutput) ToTaskOptionsPreserveDevicesOutputWithContext(ctx context.Context) TaskOptionsPreserveDevicesOutput {
	return o
}

func (o TaskOptionsPreserveDevicesOutput) ToTaskOptionsPreserveDevicesPtrOutput() TaskOptionsPreserveDevicesPtrOutput {
	return o.ToTaskOptionsPreserveDevicesPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDevicesOutput) ToTaskOptionsPreserveDevicesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDevicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsPreserveDevices) *TaskOptionsPreserveDevices {
		return &v
	}).(TaskOptionsPreserveDevicesPtrOutput)
}

func (o TaskOptionsPreserveDevicesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDevicesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsPreserveDevices) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsPreserveDevicesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDevicesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsPreserveDevices) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsPreserveDevicesPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsPreserveDevicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsPreserveDevices)(nil)).Elem()
}

func (o TaskOptionsPreserveDevicesPtrOutput) ToTaskOptionsPreserveDevicesPtrOutput() TaskOptionsPreserveDevicesPtrOutput {
	return o
}

func (o TaskOptionsPreserveDevicesPtrOutput) ToTaskOptionsPreserveDevicesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDevicesPtrOutput {
	return o
}

func (o TaskOptionsPreserveDevicesPtrOutput) Elem() TaskOptionsPreserveDevicesOutput {
	return o.ApplyT(func(v *TaskOptionsPreserveDevices) TaskOptionsPreserveDevices {
		if v != nil {
			return *v
		}
		var ret TaskOptionsPreserveDevices
		return ret
	}).(TaskOptionsPreserveDevicesOutput)
}

func (o TaskOptionsPreserveDevicesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsPreserveDevicesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsPreserveDevices) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsPreserveDevicesInput is an input type that accepts TaskOptionsPreserveDevicesArgs and TaskOptionsPreserveDevicesOutput values.
// You can construct a concrete instance of `TaskOptionsPreserveDevicesInput` via:
//
//          TaskOptionsPreserveDevicesArgs{...}
type TaskOptionsPreserveDevicesInput interface {
	pulumi.Input

	ToTaskOptionsPreserveDevicesOutput() TaskOptionsPreserveDevicesOutput
	ToTaskOptionsPreserveDevicesOutputWithContext(context.Context) TaskOptionsPreserveDevicesOutput
}

var taskOptionsPreserveDevicesPtrType = reflect.TypeOf((**TaskOptionsPreserveDevices)(nil)).Elem()

type TaskOptionsPreserveDevicesPtrInput interface {
	pulumi.Input

	ToTaskOptionsPreserveDevicesPtrOutput() TaskOptionsPreserveDevicesPtrOutput
	ToTaskOptionsPreserveDevicesPtrOutputWithContext(context.Context) TaskOptionsPreserveDevicesPtrOutput
}

type taskOptionsPreserveDevicesPtr string

func TaskOptionsPreserveDevicesPtr(v string) TaskOptionsPreserveDevicesPtrInput {
	return (*taskOptionsPreserveDevicesPtr)(&v)
}

func (*taskOptionsPreserveDevicesPtr) ElementType() reflect.Type {
	return taskOptionsPreserveDevicesPtrType
}

func (in *taskOptionsPreserveDevicesPtr) ToTaskOptionsPreserveDevicesPtrOutput() TaskOptionsPreserveDevicesPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsPreserveDevicesPtrOutput)
}

func (in *taskOptionsPreserveDevicesPtr) ToTaskOptionsPreserveDevicesPtrOutputWithContext(ctx context.Context) TaskOptionsPreserveDevicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsPreserveDevicesPtrOutput)
}

// A value that determines which components of the SMB security descriptor are copied during transfer.
type TaskOptionsSecurityDescriptorCopyFlags string

const (
	TaskOptionsSecurityDescriptorCopyFlagsNone          = TaskOptionsSecurityDescriptorCopyFlags("NONE")
	TaskOptionsSecurityDescriptorCopyFlagsOwnerDacl     = TaskOptionsSecurityDescriptorCopyFlags("OWNER_DACL")
	TaskOptionsSecurityDescriptorCopyFlagsOwnerDaclSacl = TaskOptionsSecurityDescriptorCopyFlags("OWNER_DACL_SACL")
)

func (TaskOptionsSecurityDescriptorCopyFlags) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsSecurityDescriptorCopyFlags)(nil)).Elem()
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToTaskOptionsSecurityDescriptorCopyFlagsOutput() TaskOptionsSecurityDescriptorCopyFlagsOutput {
	return pulumi.ToOutput(e).(TaskOptionsSecurityDescriptorCopyFlagsOutput)
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToTaskOptionsSecurityDescriptorCopyFlagsOutputWithContext(ctx context.Context) TaskOptionsSecurityDescriptorCopyFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsSecurityDescriptorCopyFlagsOutput)
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutput() TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return e.ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(context.Background())
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(ctx context.Context) TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return TaskOptionsSecurityDescriptorCopyFlags(e).ToTaskOptionsSecurityDescriptorCopyFlagsOutputWithContext(ctx).ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(ctx)
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsSecurityDescriptorCopyFlags) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsSecurityDescriptorCopyFlagsOutput struct{ *pulumi.OutputState }

func (TaskOptionsSecurityDescriptorCopyFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsSecurityDescriptorCopyFlags)(nil)).Elem()
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToTaskOptionsSecurityDescriptorCopyFlagsOutput() TaskOptionsSecurityDescriptorCopyFlagsOutput {
	return o
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToTaskOptionsSecurityDescriptorCopyFlagsOutputWithContext(ctx context.Context) TaskOptionsSecurityDescriptorCopyFlagsOutput {
	return o
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutput() TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return o.ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(context.Background())
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(ctx context.Context) TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsSecurityDescriptorCopyFlags) *TaskOptionsSecurityDescriptorCopyFlags {
		return &v
	}).(TaskOptionsSecurityDescriptorCopyFlagsPtrOutput)
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsSecurityDescriptorCopyFlags) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsSecurityDescriptorCopyFlagsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsSecurityDescriptorCopyFlags) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsSecurityDescriptorCopyFlagsPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsSecurityDescriptorCopyFlagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsSecurityDescriptorCopyFlags)(nil)).Elem()
}

func (o TaskOptionsSecurityDescriptorCopyFlagsPtrOutput) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutput() TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return o
}

func (o TaskOptionsSecurityDescriptorCopyFlagsPtrOutput) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(ctx context.Context) TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return o
}

func (o TaskOptionsSecurityDescriptorCopyFlagsPtrOutput) Elem() TaskOptionsSecurityDescriptorCopyFlagsOutput {
	return o.ApplyT(func(v *TaskOptionsSecurityDescriptorCopyFlags) TaskOptionsSecurityDescriptorCopyFlags {
		if v != nil {
			return *v
		}
		var ret TaskOptionsSecurityDescriptorCopyFlags
		return ret
	}).(TaskOptionsSecurityDescriptorCopyFlagsOutput)
}

func (o TaskOptionsSecurityDescriptorCopyFlagsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsSecurityDescriptorCopyFlagsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsSecurityDescriptorCopyFlags) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsSecurityDescriptorCopyFlagsInput is an input type that accepts TaskOptionsSecurityDescriptorCopyFlagsArgs and TaskOptionsSecurityDescriptorCopyFlagsOutput values.
// You can construct a concrete instance of `TaskOptionsSecurityDescriptorCopyFlagsInput` via:
//
//          TaskOptionsSecurityDescriptorCopyFlagsArgs{...}
type TaskOptionsSecurityDescriptorCopyFlagsInput interface {
	pulumi.Input

	ToTaskOptionsSecurityDescriptorCopyFlagsOutput() TaskOptionsSecurityDescriptorCopyFlagsOutput
	ToTaskOptionsSecurityDescriptorCopyFlagsOutputWithContext(context.Context) TaskOptionsSecurityDescriptorCopyFlagsOutput
}

var taskOptionsSecurityDescriptorCopyFlagsPtrType = reflect.TypeOf((**TaskOptionsSecurityDescriptorCopyFlags)(nil)).Elem()

type TaskOptionsSecurityDescriptorCopyFlagsPtrInput interface {
	pulumi.Input

	ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutput() TaskOptionsSecurityDescriptorCopyFlagsPtrOutput
	ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(context.Context) TaskOptionsSecurityDescriptorCopyFlagsPtrOutput
}

type taskOptionsSecurityDescriptorCopyFlagsPtr string

func TaskOptionsSecurityDescriptorCopyFlagsPtr(v string) TaskOptionsSecurityDescriptorCopyFlagsPtrInput {
	return (*taskOptionsSecurityDescriptorCopyFlagsPtr)(&v)
}

func (*taskOptionsSecurityDescriptorCopyFlagsPtr) ElementType() reflect.Type {
	return taskOptionsSecurityDescriptorCopyFlagsPtrType
}

func (in *taskOptionsSecurityDescriptorCopyFlagsPtr) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutput() TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsSecurityDescriptorCopyFlagsPtrOutput)
}

func (in *taskOptionsSecurityDescriptorCopyFlagsPtr) ToTaskOptionsSecurityDescriptorCopyFlagsPtrOutputWithContext(ctx context.Context) TaskOptionsSecurityDescriptorCopyFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsSecurityDescriptorCopyFlagsPtrOutput)
}

// A value that determines whether tasks should be queued before executing the tasks.
type TaskOptionsTaskQueueing string

const (
	TaskOptionsTaskQueueingEnabled  = TaskOptionsTaskQueueing("ENABLED")
	TaskOptionsTaskQueueingDisabled = TaskOptionsTaskQueueing("DISABLED")
)

func (TaskOptionsTaskQueueing) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsTaskQueueing)(nil)).Elem()
}

func (e TaskOptionsTaskQueueing) ToTaskOptionsTaskQueueingOutput() TaskOptionsTaskQueueingOutput {
	return pulumi.ToOutput(e).(TaskOptionsTaskQueueingOutput)
}

func (e TaskOptionsTaskQueueing) ToTaskOptionsTaskQueueingOutputWithContext(ctx context.Context) TaskOptionsTaskQueueingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsTaskQueueingOutput)
}

func (e TaskOptionsTaskQueueing) ToTaskOptionsTaskQueueingPtrOutput() TaskOptionsTaskQueueingPtrOutput {
	return e.ToTaskOptionsTaskQueueingPtrOutputWithContext(context.Background())
}

func (e TaskOptionsTaskQueueing) ToTaskOptionsTaskQueueingPtrOutputWithContext(ctx context.Context) TaskOptionsTaskQueueingPtrOutput {
	return TaskOptionsTaskQueueing(e).ToTaskOptionsTaskQueueingOutputWithContext(ctx).ToTaskOptionsTaskQueueingPtrOutputWithContext(ctx)
}

func (e TaskOptionsTaskQueueing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsTaskQueueing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsTaskQueueing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsTaskQueueing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsTaskQueueingOutput struct{ *pulumi.OutputState }

func (TaskOptionsTaskQueueingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsTaskQueueing)(nil)).Elem()
}

func (o TaskOptionsTaskQueueingOutput) ToTaskOptionsTaskQueueingOutput() TaskOptionsTaskQueueingOutput {
	return o
}

func (o TaskOptionsTaskQueueingOutput) ToTaskOptionsTaskQueueingOutputWithContext(ctx context.Context) TaskOptionsTaskQueueingOutput {
	return o
}

func (o TaskOptionsTaskQueueingOutput) ToTaskOptionsTaskQueueingPtrOutput() TaskOptionsTaskQueueingPtrOutput {
	return o.ToTaskOptionsTaskQueueingPtrOutputWithContext(context.Background())
}

func (o TaskOptionsTaskQueueingOutput) ToTaskOptionsTaskQueueingPtrOutputWithContext(ctx context.Context) TaskOptionsTaskQueueingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsTaskQueueing) *TaskOptionsTaskQueueing {
		return &v
	}).(TaskOptionsTaskQueueingPtrOutput)
}

func (o TaskOptionsTaskQueueingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsTaskQueueingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsTaskQueueing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsTaskQueueingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsTaskQueueingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsTaskQueueing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsTaskQueueingPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsTaskQueueingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsTaskQueueing)(nil)).Elem()
}

func (o TaskOptionsTaskQueueingPtrOutput) ToTaskOptionsTaskQueueingPtrOutput() TaskOptionsTaskQueueingPtrOutput {
	return o
}

func (o TaskOptionsTaskQueueingPtrOutput) ToTaskOptionsTaskQueueingPtrOutputWithContext(ctx context.Context) TaskOptionsTaskQueueingPtrOutput {
	return o
}

func (o TaskOptionsTaskQueueingPtrOutput) Elem() TaskOptionsTaskQueueingOutput {
	return o.ApplyT(func(v *TaskOptionsTaskQueueing) TaskOptionsTaskQueueing {
		if v != nil {
			return *v
		}
		var ret TaskOptionsTaskQueueing
		return ret
	}).(TaskOptionsTaskQueueingOutput)
}

func (o TaskOptionsTaskQueueingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsTaskQueueingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsTaskQueueing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsTaskQueueingInput is an input type that accepts TaskOptionsTaskQueueingArgs and TaskOptionsTaskQueueingOutput values.
// You can construct a concrete instance of `TaskOptionsTaskQueueingInput` via:
//
//          TaskOptionsTaskQueueingArgs{...}
type TaskOptionsTaskQueueingInput interface {
	pulumi.Input

	ToTaskOptionsTaskQueueingOutput() TaskOptionsTaskQueueingOutput
	ToTaskOptionsTaskQueueingOutputWithContext(context.Context) TaskOptionsTaskQueueingOutput
}

var taskOptionsTaskQueueingPtrType = reflect.TypeOf((**TaskOptionsTaskQueueing)(nil)).Elem()

type TaskOptionsTaskQueueingPtrInput interface {
	pulumi.Input

	ToTaskOptionsTaskQueueingPtrOutput() TaskOptionsTaskQueueingPtrOutput
	ToTaskOptionsTaskQueueingPtrOutputWithContext(context.Context) TaskOptionsTaskQueueingPtrOutput
}

type taskOptionsTaskQueueingPtr string

func TaskOptionsTaskQueueingPtr(v string) TaskOptionsTaskQueueingPtrInput {
	return (*taskOptionsTaskQueueingPtr)(&v)
}

func (*taskOptionsTaskQueueingPtr) ElementType() reflect.Type {
	return taskOptionsTaskQueueingPtrType
}

func (in *taskOptionsTaskQueueingPtr) ToTaskOptionsTaskQueueingPtrOutput() TaskOptionsTaskQueueingPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsTaskQueueingPtrOutput)
}

func (in *taskOptionsTaskQueueingPtr) ToTaskOptionsTaskQueueingPtrOutputWithContext(ctx context.Context) TaskOptionsTaskQueueingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsTaskQueueingPtrOutput)
}

// A value that determines whether DataSync transfers only the data and metadata that differ between the source and the destination location, or whether DataSync transfers all the content from the source, without comparing to the destination location.
type TaskOptionsTransferMode string

const (
	TaskOptionsTransferModeChanged = TaskOptionsTransferMode("CHANGED")
	TaskOptionsTransferModeAll     = TaskOptionsTransferMode("ALL")
)

func (TaskOptionsTransferMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsTransferMode)(nil)).Elem()
}

func (e TaskOptionsTransferMode) ToTaskOptionsTransferModeOutput() TaskOptionsTransferModeOutput {
	return pulumi.ToOutput(e).(TaskOptionsTransferModeOutput)
}

func (e TaskOptionsTransferMode) ToTaskOptionsTransferModeOutputWithContext(ctx context.Context) TaskOptionsTransferModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsTransferModeOutput)
}

func (e TaskOptionsTransferMode) ToTaskOptionsTransferModePtrOutput() TaskOptionsTransferModePtrOutput {
	return e.ToTaskOptionsTransferModePtrOutputWithContext(context.Background())
}

func (e TaskOptionsTransferMode) ToTaskOptionsTransferModePtrOutputWithContext(ctx context.Context) TaskOptionsTransferModePtrOutput {
	return TaskOptionsTransferMode(e).ToTaskOptionsTransferModeOutputWithContext(ctx).ToTaskOptionsTransferModePtrOutputWithContext(ctx)
}

func (e TaskOptionsTransferMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsTransferMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsTransferMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsTransferMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsTransferModeOutput struct{ *pulumi.OutputState }

func (TaskOptionsTransferModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsTransferMode)(nil)).Elem()
}

func (o TaskOptionsTransferModeOutput) ToTaskOptionsTransferModeOutput() TaskOptionsTransferModeOutput {
	return o
}

func (o TaskOptionsTransferModeOutput) ToTaskOptionsTransferModeOutputWithContext(ctx context.Context) TaskOptionsTransferModeOutput {
	return o
}

func (o TaskOptionsTransferModeOutput) ToTaskOptionsTransferModePtrOutput() TaskOptionsTransferModePtrOutput {
	return o.ToTaskOptionsTransferModePtrOutputWithContext(context.Background())
}

func (o TaskOptionsTransferModeOutput) ToTaskOptionsTransferModePtrOutputWithContext(ctx context.Context) TaskOptionsTransferModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsTransferMode) *TaskOptionsTransferMode {
		return &v
	}).(TaskOptionsTransferModePtrOutput)
}

func (o TaskOptionsTransferModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsTransferModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsTransferMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsTransferModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsTransferModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsTransferMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsTransferModePtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsTransferModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsTransferMode)(nil)).Elem()
}

func (o TaskOptionsTransferModePtrOutput) ToTaskOptionsTransferModePtrOutput() TaskOptionsTransferModePtrOutput {
	return o
}

func (o TaskOptionsTransferModePtrOutput) ToTaskOptionsTransferModePtrOutputWithContext(ctx context.Context) TaskOptionsTransferModePtrOutput {
	return o
}

func (o TaskOptionsTransferModePtrOutput) Elem() TaskOptionsTransferModeOutput {
	return o.ApplyT(func(v *TaskOptionsTransferMode) TaskOptionsTransferMode {
		if v != nil {
			return *v
		}
		var ret TaskOptionsTransferMode
		return ret
	}).(TaskOptionsTransferModeOutput)
}

func (o TaskOptionsTransferModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsTransferModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsTransferMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsTransferModeInput is an input type that accepts TaskOptionsTransferModeArgs and TaskOptionsTransferModeOutput values.
// You can construct a concrete instance of `TaskOptionsTransferModeInput` via:
//
//          TaskOptionsTransferModeArgs{...}
type TaskOptionsTransferModeInput interface {
	pulumi.Input

	ToTaskOptionsTransferModeOutput() TaskOptionsTransferModeOutput
	ToTaskOptionsTransferModeOutputWithContext(context.Context) TaskOptionsTransferModeOutput
}

var taskOptionsTransferModePtrType = reflect.TypeOf((**TaskOptionsTransferMode)(nil)).Elem()

type TaskOptionsTransferModePtrInput interface {
	pulumi.Input

	ToTaskOptionsTransferModePtrOutput() TaskOptionsTransferModePtrOutput
	ToTaskOptionsTransferModePtrOutputWithContext(context.Context) TaskOptionsTransferModePtrOutput
}

type taskOptionsTransferModePtr string

func TaskOptionsTransferModePtr(v string) TaskOptionsTransferModePtrInput {
	return (*taskOptionsTransferModePtr)(&v)
}

func (*taskOptionsTransferModePtr) ElementType() reflect.Type {
	return taskOptionsTransferModePtrType
}

func (in *taskOptionsTransferModePtr) ToTaskOptionsTransferModePtrOutput() TaskOptionsTransferModePtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsTransferModePtrOutput)
}

func (in *taskOptionsTransferModePtr) ToTaskOptionsTransferModePtrOutputWithContext(ctx context.Context) TaskOptionsTransferModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsTransferModePtrOutput)
}

// The user ID (UID) of the file's owner.
type TaskOptionsUid string

const (
	TaskOptionsUidNone     = TaskOptionsUid("NONE")
	TaskOptionsUidIntValue = TaskOptionsUid("INT_VALUE")
	TaskOptionsUidName     = TaskOptionsUid("NAME")
	TaskOptionsUidBoth     = TaskOptionsUid("BOTH")
)

func (TaskOptionsUid) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsUid)(nil)).Elem()
}

func (e TaskOptionsUid) ToTaskOptionsUidOutput() TaskOptionsUidOutput {
	return pulumi.ToOutput(e).(TaskOptionsUidOutput)
}

func (e TaskOptionsUid) ToTaskOptionsUidOutputWithContext(ctx context.Context) TaskOptionsUidOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsUidOutput)
}

func (e TaskOptionsUid) ToTaskOptionsUidPtrOutput() TaskOptionsUidPtrOutput {
	return e.ToTaskOptionsUidPtrOutputWithContext(context.Background())
}

func (e TaskOptionsUid) ToTaskOptionsUidPtrOutputWithContext(ctx context.Context) TaskOptionsUidPtrOutput {
	return TaskOptionsUid(e).ToTaskOptionsUidOutputWithContext(ctx).ToTaskOptionsUidPtrOutputWithContext(ctx)
}

func (e TaskOptionsUid) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsUid) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsUid) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsUid) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsUidOutput struct{ *pulumi.OutputState }

func (TaskOptionsUidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsUid)(nil)).Elem()
}

func (o TaskOptionsUidOutput) ToTaskOptionsUidOutput() TaskOptionsUidOutput {
	return o
}

func (o TaskOptionsUidOutput) ToTaskOptionsUidOutputWithContext(ctx context.Context) TaskOptionsUidOutput {
	return o
}

func (o TaskOptionsUidOutput) ToTaskOptionsUidPtrOutput() TaskOptionsUidPtrOutput {
	return o.ToTaskOptionsUidPtrOutputWithContext(context.Background())
}

func (o TaskOptionsUidOutput) ToTaskOptionsUidPtrOutputWithContext(ctx context.Context) TaskOptionsUidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsUid) *TaskOptionsUid {
		return &v
	}).(TaskOptionsUidPtrOutput)
}

func (o TaskOptionsUidOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsUidOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsUid) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsUidOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsUidOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsUid) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsUidPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsUidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsUid)(nil)).Elem()
}

func (o TaskOptionsUidPtrOutput) ToTaskOptionsUidPtrOutput() TaskOptionsUidPtrOutput {
	return o
}

func (o TaskOptionsUidPtrOutput) ToTaskOptionsUidPtrOutputWithContext(ctx context.Context) TaskOptionsUidPtrOutput {
	return o
}

func (o TaskOptionsUidPtrOutput) Elem() TaskOptionsUidOutput {
	return o.ApplyT(func(v *TaskOptionsUid) TaskOptionsUid {
		if v != nil {
			return *v
		}
		var ret TaskOptionsUid
		return ret
	}).(TaskOptionsUidOutput)
}

func (o TaskOptionsUidPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsUidPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsUid) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsUidInput is an input type that accepts TaskOptionsUidArgs and TaskOptionsUidOutput values.
// You can construct a concrete instance of `TaskOptionsUidInput` via:
//
//          TaskOptionsUidArgs{...}
type TaskOptionsUidInput interface {
	pulumi.Input

	ToTaskOptionsUidOutput() TaskOptionsUidOutput
	ToTaskOptionsUidOutputWithContext(context.Context) TaskOptionsUidOutput
}

var taskOptionsUidPtrType = reflect.TypeOf((**TaskOptionsUid)(nil)).Elem()

type TaskOptionsUidPtrInput interface {
	pulumi.Input

	ToTaskOptionsUidPtrOutput() TaskOptionsUidPtrOutput
	ToTaskOptionsUidPtrOutputWithContext(context.Context) TaskOptionsUidPtrOutput
}

type taskOptionsUidPtr string

func TaskOptionsUidPtr(v string) TaskOptionsUidPtrInput {
	return (*taskOptionsUidPtr)(&v)
}

func (*taskOptionsUidPtr) ElementType() reflect.Type {
	return taskOptionsUidPtrType
}

func (in *taskOptionsUidPtr) ToTaskOptionsUidPtrOutput() TaskOptionsUidPtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsUidPtrOutput)
}

func (in *taskOptionsUidPtr) ToTaskOptionsUidPtrOutputWithContext(ctx context.Context) TaskOptionsUidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsUidPtrOutput)
}

// A value that determines whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred.
type TaskOptionsVerifyMode string

const (
	TaskOptionsVerifyModePointInTimeConsistent = TaskOptionsVerifyMode("POINT_IN_TIME_CONSISTENT")
	TaskOptionsVerifyModeOnlyFilesTransferred  = TaskOptionsVerifyMode("ONLY_FILES_TRANSFERRED")
	TaskOptionsVerifyModeNone                  = TaskOptionsVerifyMode("NONE")
)

func (TaskOptionsVerifyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsVerifyMode)(nil)).Elem()
}

func (e TaskOptionsVerifyMode) ToTaskOptionsVerifyModeOutput() TaskOptionsVerifyModeOutput {
	return pulumi.ToOutput(e).(TaskOptionsVerifyModeOutput)
}

func (e TaskOptionsVerifyMode) ToTaskOptionsVerifyModeOutputWithContext(ctx context.Context) TaskOptionsVerifyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskOptionsVerifyModeOutput)
}

func (e TaskOptionsVerifyMode) ToTaskOptionsVerifyModePtrOutput() TaskOptionsVerifyModePtrOutput {
	return e.ToTaskOptionsVerifyModePtrOutputWithContext(context.Background())
}

func (e TaskOptionsVerifyMode) ToTaskOptionsVerifyModePtrOutputWithContext(ctx context.Context) TaskOptionsVerifyModePtrOutput {
	return TaskOptionsVerifyMode(e).ToTaskOptionsVerifyModeOutputWithContext(ctx).ToTaskOptionsVerifyModePtrOutputWithContext(ctx)
}

func (e TaskOptionsVerifyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsVerifyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskOptionsVerifyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskOptionsVerifyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskOptionsVerifyModeOutput struct{ *pulumi.OutputState }

func (TaskOptionsVerifyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionsVerifyMode)(nil)).Elem()
}

func (o TaskOptionsVerifyModeOutput) ToTaskOptionsVerifyModeOutput() TaskOptionsVerifyModeOutput {
	return o
}

func (o TaskOptionsVerifyModeOutput) ToTaskOptionsVerifyModeOutputWithContext(ctx context.Context) TaskOptionsVerifyModeOutput {
	return o
}

func (o TaskOptionsVerifyModeOutput) ToTaskOptionsVerifyModePtrOutput() TaskOptionsVerifyModePtrOutput {
	return o.ToTaskOptionsVerifyModePtrOutputWithContext(context.Background())
}

func (o TaskOptionsVerifyModeOutput) ToTaskOptionsVerifyModePtrOutputWithContext(ctx context.Context) TaskOptionsVerifyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOptionsVerifyMode) *TaskOptionsVerifyMode {
		return &v
	}).(TaskOptionsVerifyModePtrOutput)
}

func (o TaskOptionsVerifyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskOptionsVerifyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsVerifyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskOptionsVerifyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsVerifyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskOptionsVerifyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskOptionsVerifyModePtrOutput struct{ *pulumi.OutputState }

func (TaskOptionsVerifyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionsVerifyMode)(nil)).Elem()
}

func (o TaskOptionsVerifyModePtrOutput) ToTaskOptionsVerifyModePtrOutput() TaskOptionsVerifyModePtrOutput {
	return o
}

func (o TaskOptionsVerifyModePtrOutput) ToTaskOptionsVerifyModePtrOutputWithContext(ctx context.Context) TaskOptionsVerifyModePtrOutput {
	return o
}

func (o TaskOptionsVerifyModePtrOutput) Elem() TaskOptionsVerifyModeOutput {
	return o.ApplyT(func(v *TaskOptionsVerifyMode) TaskOptionsVerifyMode {
		if v != nil {
			return *v
		}
		var ret TaskOptionsVerifyMode
		return ret
	}).(TaskOptionsVerifyModeOutput)
}

func (o TaskOptionsVerifyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskOptionsVerifyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskOptionsVerifyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskOptionsVerifyModeInput is an input type that accepts TaskOptionsVerifyModeArgs and TaskOptionsVerifyModeOutput values.
// You can construct a concrete instance of `TaskOptionsVerifyModeInput` via:
//
//          TaskOptionsVerifyModeArgs{...}
type TaskOptionsVerifyModeInput interface {
	pulumi.Input

	ToTaskOptionsVerifyModeOutput() TaskOptionsVerifyModeOutput
	ToTaskOptionsVerifyModeOutputWithContext(context.Context) TaskOptionsVerifyModeOutput
}

var taskOptionsVerifyModePtrType = reflect.TypeOf((**TaskOptionsVerifyMode)(nil)).Elem()

type TaskOptionsVerifyModePtrInput interface {
	pulumi.Input

	ToTaskOptionsVerifyModePtrOutput() TaskOptionsVerifyModePtrOutput
	ToTaskOptionsVerifyModePtrOutputWithContext(context.Context) TaskOptionsVerifyModePtrOutput
}

type taskOptionsVerifyModePtr string

func TaskOptionsVerifyModePtr(v string) TaskOptionsVerifyModePtrInput {
	return (*taskOptionsVerifyModePtr)(&v)
}

func (*taskOptionsVerifyModePtr) ElementType() reflect.Type {
	return taskOptionsVerifyModePtrType
}

func (in *taskOptionsVerifyModePtr) ToTaskOptionsVerifyModePtrOutput() TaskOptionsVerifyModePtrOutput {
	return pulumi.ToOutput(in).(TaskOptionsVerifyModePtrOutput)
}

func (in *taskOptionsVerifyModePtr) ToTaskOptionsVerifyModePtrOutputWithContext(ctx context.Context) TaskOptionsVerifyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskOptionsVerifyModePtrOutput)
}

// The status of the task that was described.
type TaskStatus string

const (
	TaskStatusAvailable   = TaskStatus("AVAILABLE")
	TaskStatusCreating    = TaskStatus("CREATING")
	TaskStatusQueued      = TaskStatus("QUEUED")
	TaskStatusRunning     = TaskStatus("RUNNING")
	TaskStatusUnavailable = TaskStatus("UNAVAILABLE")
)

func (TaskStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStatus)(nil)).Elem()
}

func (e TaskStatus) ToTaskStatusOutput() TaskStatusOutput {
	return pulumi.ToOutput(e).(TaskStatusOutput)
}

func (e TaskStatus) ToTaskStatusOutputWithContext(ctx context.Context) TaskStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskStatusOutput)
}

func (e TaskStatus) ToTaskStatusPtrOutput() TaskStatusPtrOutput {
	return e.ToTaskStatusPtrOutputWithContext(context.Background())
}

func (e TaskStatus) ToTaskStatusPtrOutputWithContext(ctx context.Context) TaskStatusPtrOutput {
	return TaskStatus(e).ToTaskStatusOutputWithContext(ctx).ToTaskStatusPtrOutputWithContext(ctx)
}

func (e TaskStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskStatusOutput struct{ *pulumi.OutputState }

func (TaskStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStatus)(nil)).Elem()
}

func (o TaskStatusOutput) ToTaskStatusOutput() TaskStatusOutput {
	return o
}

func (o TaskStatusOutput) ToTaskStatusOutputWithContext(ctx context.Context) TaskStatusOutput {
	return o
}

func (o TaskStatusOutput) ToTaskStatusPtrOutput() TaskStatusPtrOutput {
	return o.ToTaskStatusPtrOutputWithContext(context.Background())
}

func (o TaskStatusOutput) ToTaskStatusPtrOutputWithContext(ctx context.Context) TaskStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskStatus) *TaskStatus {
		return &v
	}).(TaskStatusPtrOutput)
}

func (o TaskStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskStatusPtrOutput struct{ *pulumi.OutputState }

func (TaskStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStatus)(nil)).Elem()
}

func (o TaskStatusPtrOutput) ToTaskStatusPtrOutput() TaskStatusPtrOutput {
	return o
}

func (o TaskStatusPtrOutput) ToTaskStatusPtrOutputWithContext(ctx context.Context) TaskStatusPtrOutput {
	return o
}

func (o TaskStatusPtrOutput) Elem() TaskStatusOutput {
	return o.ApplyT(func(v *TaskStatus) TaskStatus {
		if v != nil {
			return *v
		}
		var ret TaskStatus
		return ret
	}).(TaskStatusOutput)
}

func (o TaskStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskStatusInput is an input type that accepts TaskStatusArgs and TaskStatusOutput values.
// You can construct a concrete instance of `TaskStatusInput` via:
//
//          TaskStatusArgs{...}
type TaskStatusInput interface {
	pulumi.Input

	ToTaskStatusOutput() TaskStatusOutput
	ToTaskStatusOutputWithContext(context.Context) TaskStatusOutput
}

var taskStatusPtrType = reflect.TypeOf((**TaskStatus)(nil)).Elem()

type TaskStatusPtrInput interface {
	pulumi.Input

	ToTaskStatusPtrOutput() TaskStatusPtrOutput
	ToTaskStatusPtrOutputWithContext(context.Context) TaskStatusPtrOutput
}

type taskStatusPtr string

func TaskStatusPtr(v string) TaskStatusPtrInput {
	return (*taskStatusPtr)(&v)
}

func (*taskStatusPtr) ElementType() reflect.Type {
	return taskStatusPtrType
}

func (in *taskStatusPtr) ToTaskStatusPtrOutput() TaskStatusPtrOutput {
	return pulumi.ToOutput(in).(TaskStatusPtrOutput)
}

func (in *taskStatusPtr) ToTaskStatusPtrOutputWithContext(ctx context.Context) TaskStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentEndpointTypeOutput{})
	pulumi.RegisterOutputType(AgentEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(LocationNFSMountOptionsVersionOutput{})
	pulumi.RegisterOutputType(LocationNFSMountOptionsVersionPtrOutput{})
	pulumi.RegisterOutputType(LocationObjectStorageServerProtocolOutput{})
	pulumi.RegisterOutputType(LocationObjectStorageServerProtocolPtrOutput{})
	pulumi.RegisterOutputType(LocationS3S3StorageClassOutput{})
	pulumi.RegisterOutputType(LocationS3S3StorageClassPtrOutput{})
	pulumi.RegisterOutputType(LocationSMBMountOptionsVersionOutput{})
	pulumi.RegisterOutputType(LocationSMBMountOptionsVersionPtrOutput{})
	pulumi.RegisterOutputType(TaskFilterRuleFilterTypeOutput{})
	pulumi.RegisterOutputType(TaskFilterRuleFilterTypePtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsAtimeOutput{})
	pulumi.RegisterOutputType(TaskOptionsAtimePtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsGidOutput{})
	pulumi.RegisterOutputType(TaskOptionsGidPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsLogLevelOutput{})
	pulumi.RegisterOutputType(TaskOptionsLogLevelPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsMtimeOutput{})
	pulumi.RegisterOutputType(TaskOptionsMtimePtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsOverwriteModeOutput{})
	pulumi.RegisterOutputType(TaskOptionsOverwriteModePtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsPosixPermissionsOutput{})
	pulumi.RegisterOutputType(TaskOptionsPosixPermissionsPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsPreserveDeletedFilesOutput{})
	pulumi.RegisterOutputType(TaskOptionsPreserveDeletedFilesPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsPreserveDevicesOutput{})
	pulumi.RegisterOutputType(TaskOptionsPreserveDevicesPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsSecurityDescriptorCopyFlagsOutput{})
	pulumi.RegisterOutputType(TaskOptionsSecurityDescriptorCopyFlagsPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsTaskQueueingOutput{})
	pulumi.RegisterOutputType(TaskOptionsTaskQueueingPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsTransferModeOutput{})
	pulumi.RegisterOutputType(TaskOptionsTransferModePtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsUidOutput{})
	pulumi.RegisterOutputType(TaskOptionsUidPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionsVerifyModeOutput{})
	pulumi.RegisterOutputType(TaskOptionsVerifyModePtrOutput{})
	pulumi.RegisterOutputType(TaskStatusOutput{})
	pulumi.RegisterOutputType(TaskStatusPtrOutput{})
}
