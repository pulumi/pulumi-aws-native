// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::DataSync::LocationObjectStorage.
func LookupLocationObjectStorage(ctx *pulumi.Context, args *LookupLocationObjectStorageArgs, opts ...pulumi.InvokeOption) (*LookupLocationObjectStorageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLocationObjectStorageResult
	err := ctx.Invoke("aws-native:datasync:getLocationObjectStorage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLocationObjectStorageArgs struct {
	// The Amazon Resource Name (ARN) of the location that is created.
	LocationArn string `pulumi:"locationArn"`
}

type LookupLocationObjectStorageResult struct {
	// Optional. The access key is used if credentials are required to access the self-managed object storage server.
	AccessKey *string `pulumi:"accessKey"`
	// Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect with your object storage system. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.
	AgentArns []string `pulumi:"agentArns"`
	// Specifies configuration information for a DataSync-managed secret, which includes the `SecretKey` that DataSync uses to access a specific object storage location, with a customer-managed AWS KMS key .
	//
	// When you include this paramater as part of a `CreateLocationObjectStorage` request, you provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for the `SecretKey` parameter to create a DataSync-managed secret to store the location access credentials.
	//
	// Make sure the DataSync has permission to access the KMS key that you specify.
	//
	// > You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide both parameters for the same request.
	CmkSecretConfig *LocationObjectStorageCmkSecretConfig `pulumi:"cmkSecretConfig"`
	// Specifies configuration information for a customer-managed Secrets Manager secret where the secret key for a specific object storage location is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
	//
	// > You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide both parameters for the same request.
	CustomSecretConfig *LocationObjectStorageCustomSecretConfig `pulumi:"customSecretConfig"`
	// The Amazon Resource Name (ARN) of the location that is created.
	LocationArn *string `pulumi:"locationArn"`
	// The URL of the object storage location that was described.
	LocationUri         *string                                   `pulumi:"locationUri"`
	ManagedSecretConfig *LocationObjectStorageManagedSecretConfig `pulumi:"managedSecretConfig"`
	// X.509 PEM content containing a certificate authority or chain to trust.
	ServerCertificate *string `pulumi:"serverCertificate"`
	// The port that your self-managed server accepts inbound network traffic on.
	ServerPort *int `pulumi:"serverPort"`
	// The protocol that the object storage server uses to communicate.
	ServerProtocol *LocationObjectStorageServerProtocol `pulumi:"serverProtocol"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupLocationObjectStorageOutput(ctx *pulumi.Context, args LookupLocationObjectStorageOutputArgs, opts ...pulumi.InvokeOption) LookupLocationObjectStorageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLocationObjectStorageResultOutput, error) {
			args := v.(LookupLocationObjectStorageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:datasync:getLocationObjectStorage", args, LookupLocationObjectStorageResultOutput{}, options).(LookupLocationObjectStorageResultOutput), nil
		}).(LookupLocationObjectStorageResultOutput)
}

type LookupLocationObjectStorageOutputArgs struct {
	// The Amazon Resource Name (ARN) of the location that is created.
	LocationArn pulumi.StringInput `pulumi:"locationArn"`
}

func (LookupLocationObjectStorageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationObjectStorageArgs)(nil)).Elem()
}

type LookupLocationObjectStorageResultOutput struct{ *pulumi.OutputState }

func (LookupLocationObjectStorageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationObjectStorageResult)(nil)).Elem()
}

func (o LookupLocationObjectStorageResultOutput) ToLookupLocationObjectStorageResultOutput() LookupLocationObjectStorageResultOutput {
	return o
}

func (o LookupLocationObjectStorageResultOutput) ToLookupLocationObjectStorageResultOutputWithContext(ctx context.Context) LookupLocationObjectStorageResultOutput {
	return o
}

// Optional. The access key is used if credentials are required to access the self-managed object storage server.
func (o LookupLocationObjectStorageResultOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect with your object storage system. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.
func (o LookupLocationObjectStorageResultOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) []string { return v.AgentArns }).(pulumi.StringArrayOutput)
}

// Specifies configuration information for a DataSync-managed secret, which includes the `SecretKey` that DataSync uses to access a specific object storage location, with a customer-managed AWS KMS key .
//
// When you include this paramater as part of a `CreateLocationObjectStorage` request, you provide only the KMS key ARN. DataSync uses this KMS key together with the value you specify for the `SecretKey` parameter to create a DataSync-managed secret to store the location access credentials.
//
// Make sure the DataSync has permission to access the KMS key that you specify.
//
// > You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide both parameters for the same request.
func (o LookupLocationObjectStorageResultOutput) CmkSecretConfig() LocationObjectStorageCmkSecretConfigPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *LocationObjectStorageCmkSecretConfig {
		return v.CmkSecretConfig
	}).(LocationObjectStorageCmkSecretConfigPtrOutput)
}

// Specifies configuration information for a customer-managed Secrets Manager secret where the secret key for a specific object storage location is stored in plain text. This configuration includes the secret ARN, and the ARN for an IAM role that provides access to the secret.
//
// > You can use either `CmkSecretConfig` (with `SecretKey` ) or `CustomSecretConfig` (without `SecretKey` ) to provide credentials for a `CreateLocationObjectStorage` request. Do not provide both parameters for the same request.
func (o LookupLocationObjectStorageResultOutput) CustomSecretConfig() LocationObjectStorageCustomSecretConfigPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *LocationObjectStorageCustomSecretConfig {
		return v.CustomSecretConfig
	}).(LocationObjectStorageCustomSecretConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the location that is created.
func (o LookupLocationObjectStorageResultOutput) LocationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *string { return v.LocationArn }).(pulumi.StringPtrOutput)
}

// The URL of the object storage location that was described.
func (o LookupLocationObjectStorageResultOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *string { return v.LocationUri }).(pulumi.StringPtrOutput)
}

func (o LookupLocationObjectStorageResultOutput) ManagedSecretConfig() LocationObjectStorageManagedSecretConfigPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *LocationObjectStorageManagedSecretConfig {
		return v.ManagedSecretConfig
	}).(LocationObjectStorageManagedSecretConfigPtrOutput)
}

// X.509 PEM content containing a certificate authority or chain to trust.
func (o LookupLocationObjectStorageResultOutput) ServerCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *string { return v.ServerCertificate }).(pulumi.StringPtrOutput)
}

// The port that your self-managed server accepts inbound network traffic on.
func (o LookupLocationObjectStorageResultOutput) ServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *int { return v.ServerPort }).(pulumi.IntPtrOutput)
}

// The protocol that the object storage server uses to communicate.
func (o LookupLocationObjectStorageResultOutput) ServerProtocol() LocationObjectStorageServerProtocolPtrOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) *LocationObjectStorageServerProtocol {
		return v.ServerProtocol
	}).(LocationObjectStorageServerProtocolPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupLocationObjectStorageResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupLocationObjectStorageResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLocationObjectStorageResultOutput{})
}
