// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DataSync::LocationSMB.
func LookupLocationSMB(ctx *pulumi.Context, args *LookupLocationSMBArgs, opts ...pulumi.InvokeOption) (*LookupLocationSMBResult, error) {
	var rv LookupLocationSMBResult
	err := ctx.Invoke("aws-native:datasync:getLocationSMB", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLocationSMBArgs struct {
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn string `pulumi:"locationArn"`
}

type LookupLocationSMBResult struct {
	// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
	AgentArns []string `pulumi:"agentArns"`
	// The name of the Windows domain that the SMB server belongs to.
	Domain *string `pulumi:"domain"`
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn *string `pulumi:"locationArn"`
	// The URL of the SMB location that was described.
	LocationUri  *string                  `pulumi:"locationUri"`
	MountOptions *LocationSMBMountOptions `pulumi:"mountOptions"`
	// An array of key-value pairs to apply to this resource.
	Tags []LocationSMBTag `pulumi:"tags"`
	// The user who can mount the share, has the permissions to access files and folders in the SMB share.
	User *string `pulumi:"user"`
}

func LookupLocationSMBOutput(ctx *pulumi.Context, args LookupLocationSMBOutputArgs, opts ...pulumi.InvokeOption) LookupLocationSMBResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLocationSMBResult, error) {
			args := v.(LookupLocationSMBArgs)
			r, err := LookupLocationSMB(ctx, &args, opts...)
			var s LookupLocationSMBResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLocationSMBResultOutput)
}

type LookupLocationSMBOutputArgs struct {
	// The Amazon Resource Name (ARN) of the SMB location that is created.
	LocationArn pulumi.StringInput `pulumi:"locationArn"`
}

func (LookupLocationSMBOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationSMBArgs)(nil)).Elem()
}

type LookupLocationSMBResultOutput struct{ *pulumi.OutputState }

func (LookupLocationSMBResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLocationSMBResult)(nil)).Elem()
}

func (o LookupLocationSMBResultOutput) ToLookupLocationSMBResultOutput() LookupLocationSMBResultOutput {
	return o
}

func (o LookupLocationSMBResultOutput) ToLookupLocationSMBResultOutputWithContext(ctx context.Context) LookupLocationSMBResultOutput {
	return o
}

// The Amazon Resource Names (ARNs) of agents to use for a Simple Message Block (SMB) location.
func (o LookupLocationSMBResultOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) []string { return v.AgentArns }).(pulumi.StringArrayOutput)
}

// The name of the Windows domain that the SMB server belongs to.
func (o LookupLocationSMBResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the SMB location that is created.
func (o LookupLocationSMBResultOutput) LocationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) *string { return v.LocationArn }).(pulumi.StringPtrOutput)
}

// The URL of the SMB location that was described.
func (o LookupLocationSMBResultOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) *string { return v.LocationUri }).(pulumi.StringPtrOutput)
}

func (o LookupLocationSMBResultOutput) MountOptions() LocationSMBMountOptionsPtrOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) *LocationSMBMountOptions { return v.MountOptions }).(LocationSMBMountOptionsPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupLocationSMBResultOutput) Tags() LocationSMBTagArrayOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) []LocationSMBTag { return v.Tags }).(LocationSMBTagArrayOutput)
}

// The user who can mount the share, has the permissions to access files and folders in the SMB share.
func (o LookupLocationSMBResultOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLocationSMBResult) *string { return v.User }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLocationSMBResultOutput{})
}
