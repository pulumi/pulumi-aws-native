// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGatewayV2::Api
func LookupApi(ctx *pulumi.Context, args *LookupApiArgs, opts ...pulumi.InvokeOption) (*LookupApiResult, error) {
	var rv LookupApiResult
	err := ctx.Invoke("aws-native:apigatewayv2:getApi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApiArgs struct {
	Id string `pulumi:"id"`
}

type LookupApiResult struct {
	ApiEndpoint               *string            `pulumi:"apiEndpoint"`
	ApiKeySelectionExpression *string            `pulumi:"apiKeySelectionExpression"`
	BasePath                  *string            `pulumi:"basePath"`
	Body                      interface{}        `pulumi:"body"`
	BodyS3Location            *ApiBodyS3Location `pulumi:"bodyS3Location"`
	CorsConfiguration         *ApiCors           `pulumi:"corsConfiguration"`
	CredentialsArn            *string            `pulumi:"credentialsArn"`
	Description               *string            `pulumi:"description"`
	DisableExecuteApiEndpoint *bool              `pulumi:"disableExecuteApiEndpoint"`
	DisableSchemaValidation   *bool              `pulumi:"disableSchemaValidation"`
	FailOnWarnings            *bool              `pulumi:"failOnWarnings"`
	Id                        *string            `pulumi:"id"`
	Name                      *string            `pulumi:"name"`
	RouteKey                  *string            `pulumi:"routeKey"`
	RouteSelectionExpression  *string            `pulumi:"routeSelectionExpression"`
	Tags                      interface{}        `pulumi:"tags"`
	Target                    *string            `pulumi:"target"`
	Version                   *string            `pulumi:"version"`
}

func LookupApiOutput(ctx *pulumi.Context, args LookupApiOutputArgs, opts ...pulumi.InvokeOption) LookupApiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApiResult, error) {
			args := v.(LookupApiArgs)
			r, err := LookupApi(ctx, &args, opts...)
			var s LookupApiResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApiResultOutput)
}

type LookupApiOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupApiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiArgs)(nil)).Elem()
}

type LookupApiResultOutput struct{ *pulumi.OutputState }

func (LookupApiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiResult)(nil)).Elem()
}

func (o LookupApiResultOutput) ToLookupApiResultOutput() LookupApiResultOutput {
	return o
}

func (o LookupApiResultOutput) ToLookupApiResultOutputWithContext(ctx context.Context) LookupApiResultOutput {
	return o
}

func (o LookupApiResultOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) ApiKeySelectionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.ApiKeySelectionExpression }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupApiResult) interface{} { return v.Body }).(pulumi.AnyOutput)
}

func (o LookupApiResultOutput) BodyS3Location() ApiBodyS3LocationPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *ApiBodyS3Location { return v.BodyS3Location }).(ApiBodyS3LocationPtrOutput)
}

func (o LookupApiResultOutput) CorsConfiguration() ApiCorsPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *ApiCors { return v.CorsConfiguration }).(ApiCorsPtrOutput)
}

func (o LookupApiResultOutput) CredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.CredentialsArn }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) DisableExecuteApiEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *bool { return v.DisableExecuteApiEndpoint }).(pulumi.BoolPtrOutput)
}

func (o LookupApiResultOutput) DisableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *bool { return v.DisableSchemaValidation }).(pulumi.BoolPtrOutput)
}

func (o LookupApiResultOutput) FailOnWarnings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *bool { return v.FailOnWarnings }).(pulumi.BoolPtrOutput)
}

func (o LookupApiResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) RouteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.RouteKey }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) RouteSelectionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.RouteSelectionExpression }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupApiResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

func (o LookupApiResultOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o LookupApiResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiResultOutput{})
}
