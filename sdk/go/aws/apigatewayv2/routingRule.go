// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for AWS::ApiGatewayV2::RoutingRule
type RoutingRule struct {
	pulumi.CustomResourceState

	Actions    RoutingRuleActionArrayOutput    `pulumi:"actions"`
	Conditions RoutingRuleConditionArrayOutput `pulumi:"conditions"`
	// The amazon resource name (ARN) of the domain name resource.
	DomainNameArn pulumi.StringOutput `pulumi:"domainNameArn"`
	Priority      pulumi.IntOutput    `pulumi:"priority"`
	// Amazon Resource Name (ARN) of the resource.
	RoutingRuleArn pulumi.StringOutput `pulumi:"routingRuleArn"`
	// RoutingRule Id generated by service
	RoutingRuleId pulumi.StringOutput `pulumi:"routingRuleId"`
}

// NewRoutingRule registers a new resource with the given unique name, arguments, and options.
func NewRoutingRule(ctx *pulumi.Context,
	name string, args *RoutingRuleArgs, opts ...pulumi.ResourceOption) (*RoutingRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Actions == nil {
		return nil, errors.New("invalid value for required argument 'Actions'")
	}
	if args.Conditions == nil {
		return nil, errors.New("invalid value for required argument 'Conditions'")
	}
	if args.DomainNameArn == nil {
		return nil, errors.New("invalid value for required argument 'DomainNameArn'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainNameArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RoutingRule
	err := ctx.RegisterResource("aws-native:apigatewayv2:RoutingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoutingRule gets an existing RoutingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoutingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoutingRuleState, opts ...pulumi.ResourceOption) (*RoutingRule, error) {
	var resource RoutingRule
	err := ctx.ReadResource("aws-native:apigatewayv2:RoutingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoutingRule resources.
type routingRuleState struct {
}

type RoutingRuleState struct {
}

func (RoutingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*routingRuleState)(nil)).Elem()
}

type routingRuleArgs struct {
	Actions    []RoutingRuleAction    `pulumi:"actions"`
	Conditions []RoutingRuleCondition `pulumi:"conditions"`
	// The amazon resource name (ARN) of the domain name resource.
	DomainNameArn string `pulumi:"domainNameArn"`
	Priority      int    `pulumi:"priority"`
}

// The set of arguments for constructing a RoutingRule resource.
type RoutingRuleArgs struct {
	Actions    RoutingRuleActionArrayInput
	Conditions RoutingRuleConditionArrayInput
	// The amazon resource name (ARN) of the domain name resource.
	DomainNameArn pulumi.StringInput
	Priority      pulumi.IntInput
}

func (RoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routingRuleArgs)(nil)).Elem()
}

type RoutingRuleInput interface {
	pulumi.Input

	ToRoutingRuleOutput() RoutingRuleOutput
	ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput
}

func (*RoutingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRule)(nil)).Elem()
}

func (i *RoutingRule) ToRoutingRuleOutput() RoutingRuleOutput {
	return i.ToRoutingRuleOutputWithContext(context.Background())
}

func (i *RoutingRule) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleOutput)
}

type RoutingRuleOutput struct{ *pulumi.OutputState }

func (RoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRule)(nil)).Elem()
}

func (o RoutingRuleOutput) ToRoutingRuleOutput() RoutingRuleOutput {
	return o
}

func (o RoutingRuleOutput) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return o
}

func (o RoutingRuleOutput) Actions() RoutingRuleActionArrayOutput {
	return o.ApplyT(func(v *RoutingRule) RoutingRuleActionArrayOutput { return v.Actions }).(RoutingRuleActionArrayOutput)
}

func (o RoutingRuleOutput) Conditions() RoutingRuleConditionArrayOutput {
	return o.ApplyT(func(v *RoutingRule) RoutingRuleConditionArrayOutput { return v.Conditions }).(RoutingRuleConditionArrayOutput)
}

// The amazon resource name (ARN) of the domain name resource.
func (o RoutingRuleOutput) DomainNameArn() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.DomainNameArn }).(pulumi.StringOutput)
}

func (o RoutingRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the resource.
func (o RoutingRuleOutput) RoutingRuleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.RoutingRuleArn }).(pulumi.StringOutput)
}

// RoutingRule Id generated by service
func (o RoutingRuleOutput) RoutingRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingRule) pulumi.StringOutput { return v.RoutingRuleId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingRuleInput)(nil)).Elem(), &RoutingRule{})
	pulumi.RegisterOutputType(RoutingRuleOutput{})
}
