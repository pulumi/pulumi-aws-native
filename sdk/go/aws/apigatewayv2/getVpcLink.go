// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::ApiGatewayV2::VpcLink“ resource creates a VPC link. Supported only for HTTP APIs. The VPC link status must transition from “PENDING“ to “AVAILABLE“ to successfully create a VPC link, which can take up to 10 minutes. To learn more, see [Working with VPC Links for HTTP APIs](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vpc-links.html) in the *API Gateway Developer Guide*.
func LookupVpcLink(ctx *pulumi.Context, args *LookupVpcLinkArgs, opts ...pulumi.InvokeOption) (*LookupVpcLinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcLinkResult
	err := ctx.Invoke("aws-native:apigatewayv2:getVpcLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcLinkArgs struct {
	// The VPC link ID.
	VpcLinkId string `pulumi:"vpcLinkId"`
}

type LookupVpcLinkResult struct {
	// The name of the VPC link.
	Name *string `pulumi:"name"`
	// The collection of tags. Each tag element is associated with a given resource.
	Tags map[string]string `pulumi:"tags"`
	// The VPC link ID.
	VpcLinkId *string `pulumi:"vpcLinkId"`
}

func LookupVpcLinkOutput(ctx *pulumi.Context, args LookupVpcLinkOutputArgs, opts ...pulumi.InvokeOption) LookupVpcLinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcLinkResultOutput, error) {
			args := v.(LookupVpcLinkArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupVpcLinkResult
			secret, err := ctx.InvokePackageRaw("aws-native:apigatewayv2:getVpcLink", args, &rv, "", opts...)
			if err != nil {
				return LookupVpcLinkResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupVpcLinkResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupVpcLinkResultOutput), nil
			}
			return output, nil
		}).(LookupVpcLinkResultOutput)
}

type LookupVpcLinkOutputArgs struct {
	// The VPC link ID.
	VpcLinkId pulumi.StringInput `pulumi:"vpcLinkId"`
}

func (LookupVpcLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcLinkArgs)(nil)).Elem()
}

type LookupVpcLinkResultOutput struct{ *pulumi.OutputState }

func (LookupVpcLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcLinkResult)(nil)).Elem()
}

func (o LookupVpcLinkResultOutput) ToLookupVpcLinkResultOutput() LookupVpcLinkResultOutput {
	return o
}

func (o LookupVpcLinkResultOutput) ToLookupVpcLinkResultOutputWithContext(ctx context.Context) LookupVpcLinkResultOutput {
	return o
}

// The name of the VPC link.
func (o LookupVpcLinkResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcLinkResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The collection of tags. Each tag element is associated with a given resource.
func (o LookupVpcLinkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcLinkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The VPC link ID.
func (o LookupVpcLinkResultOutput) VpcLinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcLinkResult) *string { return v.VpcLinkId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcLinkResultOutput{})
}
