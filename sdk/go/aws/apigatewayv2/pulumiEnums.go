// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainNameRoutingMode string

const (
	DomainNameRoutingModeApiMappingOnly            = DomainNameRoutingMode("API_MAPPING_ONLY")
	DomainNameRoutingModeRoutingRuleThenApiMapping = DomainNameRoutingMode("ROUTING_RULE_THEN_API_MAPPING")
	DomainNameRoutingModeRoutingRuleOnly           = DomainNameRoutingMode("ROUTING_RULE_ONLY")
)

func (DomainNameRoutingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameRoutingMode)(nil)).Elem()
}

func (e DomainNameRoutingMode) ToDomainNameRoutingModeOutput() DomainNameRoutingModeOutput {
	return pulumi.ToOutput(e).(DomainNameRoutingModeOutput)
}

func (e DomainNameRoutingMode) ToDomainNameRoutingModeOutputWithContext(ctx context.Context) DomainNameRoutingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DomainNameRoutingModeOutput)
}

func (e DomainNameRoutingMode) ToDomainNameRoutingModePtrOutput() DomainNameRoutingModePtrOutput {
	return e.ToDomainNameRoutingModePtrOutputWithContext(context.Background())
}

func (e DomainNameRoutingMode) ToDomainNameRoutingModePtrOutputWithContext(ctx context.Context) DomainNameRoutingModePtrOutput {
	return DomainNameRoutingMode(e).ToDomainNameRoutingModeOutputWithContext(ctx).ToDomainNameRoutingModePtrOutputWithContext(ctx)
}

func (e DomainNameRoutingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainNameRoutingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainNameRoutingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DomainNameRoutingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DomainNameRoutingModeOutput struct{ *pulumi.OutputState }

func (DomainNameRoutingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameRoutingMode)(nil)).Elem()
}

func (o DomainNameRoutingModeOutput) ToDomainNameRoutingModeOutput() DomainNameRoutingModeOutput {
	return o
}

func (o DomainNameRoutingModeOutput) ToDomainNameRoutingModeOutputWithContext(ctx context.Context) DomainNameRoutingModeOutput {
	return o
}

func (o DomainNameRoutingModeOutput) ToDomainNameRoutingModePtrOutput() DomainNameRoutingModePtrOutput {
	return o.ToDomainNameRoutingModePtrOutputWithContext(context.Background())
}

func (o DomainNameRoutingModeOutput) ToDomainNameRoutingModePtrOutputWithContext(ctx context.Context) DomainNameRoutingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNameRoutingMode) *DomainNameRoutingMode {
		return &v
	}).(DomainNameRoutingModePtrOutput)
}

func (o DomainNameRoutingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainNameRoutingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainNameRoutingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainNameRoutingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainNameRoutingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainNameRoutingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainNameRoutingModePtrOutput struct{ *pulumi.OutputState }

func (DomainNameRoutingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameRoutingMode)(nil)).Elem()
}

func (o DomainNameRoutingModePtrOutput) ToDomainNameRoutingModePtrOutput() DomainNameRoutingModePtrOutput {
	return o
}

func (o DomainNameRoutingModePtrOutput) ToDomainNameRoutingModePtrOutputWithContext(ctx context.Context) DomainNameRoutingModePtrOutput {
	return o
}

func (o DomainNameRoutingModePtrOutput) Elem() DomainNameRoutingModeOutput {
	return o.ApplyT(func(v *DomainNameRoutingMode) DomainNameRoutingMode {
		if v != nil {
			return *v
		}
		var ret DomainNameRoutingMode
		return ret
	}).(DomainNameRoutingModeOutput)
}

func (o DomainNameRoutingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainNameRoutingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainNameRoutingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DomainNameRoutingModeInput is an input type that accepts values of the DomainNameRoutingMode enum
// A concrete instance of `DomainNameRoutingModeInput` can be one of the following:
//
//	DomainNameRoutingModeApiMappingOnly
//	DomainNameRoutingModeRoutingRuleThenApiMapping
//	DomainNameRoutingModeRoutingRuleOnly
type DomainNameRoutingModeInput interface {
	pulumi.Input

	ToDomainNameRoutingModeOutput() DomainNameRoutingModeOutput
	ToDomainNameRoutingModeOutputWithContext(context.Context) DomainNameRoutingModeOutput
}

var domainNameRoutingModePtrType = reflect.TypeOf((**DomainNameRoutingMode)(nil)).Elem()

type DomainNameRoutingModePtrInput interface {
	pulumi.Input

	ToDomainNameRoutingModePtrOutput() DomainNameRoutingModePtrOutput
	ToDomainNameRoutingModePtrOutputWithContext(context.Context) DomainNameRoutingModePtrOutput
}

type domainNameRoutingModePtr string

func DomainNameRoutingModePtr(v string) DomainNameRoutingModePtrInput {
	return (*domainNameRoutingModePtr)(&v)
}

func (*domainNameRoutingModePtr) ElementType() reflect.Type {
	return domainNameRoutingModePtrType
}

func (in *domainNameRoutingModePtr) ToDomainNameRoutingModePtrOutput() DomainNameRoutingModePtrOutput {
	return pulumi.ToOutput(in).(DomainNameRoutingModePtrOutput)
}

func (in *domainNameRoutingModePtr) ToDomainNameRoutingModePtrOutputWithContext(ctx context.Context) DomainNameRoutingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DomainNameRoutingModePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameRoutingModeInput)(nil)).Elem(), DomainNameRoutingMode("API_MAPPING_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameRoutingModePtrInput)(nil)).Elem(), DomainNameRoutingMode("API_MAPPING_ONLY"))
	pulumi.RegisterOutputType(DomainNameRoutingModeOutput{})
	pulumi.RegisterOutputType(DomainNameRoutingModePtrOutput{})
}
