// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGatewayV2::IntegrationResponse
func LookupIntegrationResponse(ctx *pulumi.Context, args *LookupIntegrationResponseArgs, opts ...pulumi.InvokeOption) (*LookupIntegrationResponseResult, error) {
	var rv LookupIntegrationResponseResult
	err := ctx.Invoke("aws-native:apigatewayv2:getIntegrationResponse", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIntegrationResponseArgs struct {
	Id string `pulumi:"id"`
}

type LookupIntegrationResponseResult struct {
	ApiId                       *string     `pulumi:"apiId"`
	ContentHandlingStrategy     *string     `pulumi:"contentHandlingStrategy"`
	Id                          *string     `pulumi:"id"`
	IntegrationId               *string     `pulumi:"integrationId"`
	IntegrationResponseKey      *string     `pulumi:"integrationResponseKey"`
	ResponseParameters          interface{} `pulumi:"responseParameters"`
	ResponseTemplates           interface{} `pulumi:"responseTemplates"`
	TemplateSelectionExpression *string     `pulumi:"templateSelectionExpression"`
}

func LookupIntegrationResponseOutput(ctx *pulumi.Context, args LookupIntegrationResponseOutputArgs, opts ...pulumi.InvokeOption) LookupIntegrationResponseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIntegrationResponseResult, error) {
			args := v.(LookupIntegrationResponseArgs)
			r, err := LookupIntegrationResponse(ctx, &args, opts...)
			var s LookupIntegrationResponseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIntegrationResponseResultOutput)
}

type LookupIntegrationResponseOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIntegrationResponseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIntegrationResponseArgs)(nil)).Elem()
}

type LookupIntegrationResponseResultOutput struct{ *pulumi.OutputState }

func (LookupIntegrationResponseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIntegrationResponseResult)(nil)).Elem()
}

func (o LookupIntegrationResponseResultOutput) ToLookupIntegrationResponseResultOutput() LookupIntegrationResponseResultOutput {
	return o
}

func (o LookupIntegrationResponseResultOutput) ToLookupIntegrationResponseResultOutputWithContext(ctx context.Context) LookupIntegrationResponseResultOutput {
	return o
}

func (o LookupIntegrationResponseResultOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

func (o LookupIntegrationResponseResultOutput) ContentHandlingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) *string { return v.ContentHandlingStrategy }).(pulumi.StringPtrOutput)
}

func (o LookupIntegrationResponseResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupIntegrationResponseResultOutput) IntegrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) *string { return v.IntegrationId }).(pulumi.StringPtrOutput)
}

func (o LookupIntegrationResponseResultOutput) IntegrationResponseKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) *string { return v.IntegrationResponseKey }).(pulumi.StringPtrOutput)
}

func (o LookupIntegrationResponseResultOutput) ResponseParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) interface{} { return v.ResponseParameters }).(pulumi.AnyOutput)
}

func (o LookupIntegrationResponseResultOutput) ResponseTemplates() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) interface{} { return v.ResponseTemplates }).(pulumi.AnyOutput)
}

func (o LookupIntegrationResponseResultOutput) TemplateSelectionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationResponseResult) *string { return v.TemplateSelectionExpression }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIntegrationResponseResultOutput{})
}
