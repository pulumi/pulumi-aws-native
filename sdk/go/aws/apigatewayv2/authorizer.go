// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGatewayV2::Authorizer
//
// Deprecated: Authorizer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Authorizer struct {
	pulumi.CustomResourceState

	ApiId                          pulumi.StringOutput                 `pulumi:"apiId"`
	AuthorizerCredentialsArn       pulumi.StringPtrOutput              `pulumi:"authorizerCredentialsArn"`
	AuthorizerPayloadFormatVersion pulumi.StringPtrOutput              `pulumi:"authorizerPayloadFormatVersion"`
	AuthorizerResultTtlInSeconds   pulumi.IntPtrOutput                 `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerType                 pulumi.StringOutput                 `pulumi:"authorizerType"`
	AuthorizerUri                  pulumi.StringPtrOutput              `pulumi:"authorizerUri"`
	EnableSimpleResponses          pulumi.BoolPtrOutput                `pulumi:"enableSimpleResponses"`
	IdentitySource                 pulumi.StringArrayOutput            `pulumi:"identitySource"`
	IdentityValidationExpression   pulumi.StringPtrOutput              `pulumi:"identityValidationExpression"`
	JwtConfiguration               AuthorizerJWTConfigurationPtrOutput `pulumi:"jwtConfiguration"`
	Name                           pulumi.StringOutput                 `pulumi:"name"`
}

// NewAuthorizer registers a new resource with the given unique name, arguments, and options.
func NewAuthorizer(ctx *pulumi.Context,
	name string, args *AuthorizerArgs, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.AuthorizerType == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizerType'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource Authorizer
	err := ctx.RegisterResource("aws-native:apigatewayv2:Authorizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizer gets an existing Authorizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizerState, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	var resource Authorizer
	err := ctx.ReadResource("aws-native:apigatewayv2:Authorizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authorizer resources.
type authorizerState struct {
}

type AuthorizerState struct {
}

func (AuthorizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerState)(nil)).Elem()
}

type authorizerArgs struct {
	ApiId                          string                      `pulumi:"apiId"`
	AuthorizerCredentialsArn       *string                     `pulumi:"authorizerCredentialsArn"`
	AuthorizerPayloadFormatVersion *string                     `pulumi:"authorizerPayloadFormatVersion"`
	AuthorizerResultTtlInSeconds   *int                        `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerType                 string                      `pulumi:"authorizerType"`
	AuthorizerUri                  *string                     `pulumi:"authorizerUri"`
	EnableSimpleResponses          *bool                       `pulumi:"enableSimpleResponses"`
	IdentitySource                 []string                    `pulumi:"identitySource"`
	IdentityValidationExpression   *string                     `pulumi:"identityValidationExpression"`
	JwtConfiguration               *AuthorizerJWTConfiguration `pulumi:"jwtConfiguration"`
	Name                           string                      `pulumi:"name"`
}

// The set of arguments for constructing a Authorizer resource.
type AuthorizerArgs struct {
	ApiId                          pulumi.StringInput
	AuthorizerCredentialsArn       pulumi.StringPtrInput
	AuthorizerPayloadFormatVersion pulumi.StringPtrInput
	AuthorizerResultTtlInSeconds   pulumi.IntPtrInput
	AuthorizerType                 pulumi.StringInput
	AuthorizerUri                  pulumi.StringPtrInput
	EnableSimpleResponses          pulumi.BoolPtrInput
	IdentitySource                 pulumi.StringArrayInput
	IdentityValidationExpression   pulumi.StringPtrInput
	JwtConfiguration               AuthorizerJWTConfigurationPtrInput
	Name                           pulumi.StringInput
}

func (AuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerArgs)(nil)).Elem()
}

type AuthorizerInput interface {
	pulumi.Input

	ToAuthorizerOutput() AuthorizerOutput
	ToAuthorizerOutputWithContext(ctx context.Context) AuthorizerOutput
}

func (*Authorizer) ElementType() reflect.Type {
	return reflect.TypeOf((*Authorizer)(nil))
}

func (i *Authorizer) ToAuthorizerOutput() AuthorizerOutput {
	return i.ToAuthorizerOutputWithContext(context.Background())
}

func (i *Authorizer) ToAuthorizerOutputWithContext(ctx context.Context) AuthorizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerOutput)
}

type AuthorizerOutput struct{ *pulumi.OutputState }

func (AuthorizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authorizer)(nil))
}

func (o AuthorizerOutput) ToAuthorizerOutput() AuthorizerOutput {
	return o
}

func (o AuthorizerOutput) ToAuthorizerOutputWithContext(ctx context.Context) AuthorizerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AuthorizerOutput{})
}
