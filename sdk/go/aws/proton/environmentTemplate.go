// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package proton

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Proton::EnvironmentTemplate Resource Type
type EnvironmentTemplate struct {
	pulumi.CustomResourceState

	// <p>The Amazon Resource Name (ARN) of the environment template.</p>
	Arn pulumi.StringOutput `pulumi:"arn"`
	// <p>A description of the environment template.</p>
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// <p>The environment template name as displayed in the developer interface.</p>
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// <p>A customer provided encryption key that Proton uses to encrypt data.</p>
	EncryptionKey pulumi.StringPtrOutput                   `pulumi:"encryptionKey"`
	Name          pulumi.StringPtrOutput                   `pulumi:"name"`
	Provisioning  EnvironmentTemplateProvisioningPtrOutput `pulumi:"provisioning"`
	// <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
	//          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
	//         <i>Proton User Guide</i>.</p>
	Tags EnvironmentTemplateTagArrayOutput `pulumi:"tags"`
}

// NewEnvironmentTemplate registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentTemplate(ctx *pulumi.Context,
	name string, args *EnvironmentTemplateArgs, opts ...pulumi.ResourceOption) (*EnvironmentTemplate, error) {
	if args == nil {
		args = &EnvironmentTemplateArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"encryptionKey",
		"name",
		"provisioning",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentTemplate
	err := ctx.RegisterResource("aws-native:proton:EnvironmentTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentTemplate gets an existing EnvironmentTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentTemplateState, opts ...pulumi.ResourceOption) (*EnvironmentTemplate, error) {
	var resource EnvironmentTemplate
	err := ctx.ReadResource("aws-native:proton:EnvironmentTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentTemplate resources.
type environmentTemplateState struct {
}

type EnvironmentTemplateState struct {
}

func (EnvironmentTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentTemplateState)(nil)).Elem()
}

type environmentTemplateArgs struct {
	// <p>A description of the environment template.</p>
	Description *string `pulumi:"description"`
	// <p>The environment template name as displayed in the developer interface.</p>
	DisplayName *string `pulumi:"displayName"`
	// <p>A customer provided encryption key that Proton uses to encrypt data.</p>
	EncryptionKey *string                          `pulumi:"encryptionKey"`
	Name          *string                          `pulumi:"name"`
	Provisioning  *EnvironmentTemplateProvisioning `pulumi:"provisioning"`
	// <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
	//          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
	//         <i>Proton User Guide</i>.</p>
	Tags []EnvironmentTemplateTag `pulumi:"tags"`
}

// The set of arguments for constructing a EnvironmentTemplate resource.
type EnvironmentTemplateArgs struct {
	// <p>A description of the environment template.</p>
	Description pulumi.StringPtrInput
	// <p>The environment template name as displayed in the developer interface.</p>
	DisplayName pulumi.StringPtrInput
	// <p>A customer provided encryption key that Proton uses to encrypt data.</p>
	EncryptionKey pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Provisioning  EnvironmentTemplateProvisioningPtrInput
	// <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
	//          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
	//         <i>Proton User Guide</i>.</p>
	Tags EnvironmentTemplateTagArrayInput
}

func (EnvironmentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentTemplateArgs)(nil)).Elem()
}

type EnvironmentTemplateInput interface {
	pulumi.Input

	ToEnvironmentTemplateOutput() EnvironmentTemplateOutput
	ToEnvironmentTemplateOutputWithContext(ctx context.Context) EnvironmentTemplateOutput
}

func (*EnvironmentTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTemplate)(nil)).Elem()
}

func (i *EnvironmentTemplate) ToEnvironmentTemplateOutput() EnvironmentTemplateOutput {
	return i.ToEnvironmentTemplateOutputWithContext(context.Background())
}

func (i *EnvironmentTemplate) ToEnvironmentTemplateOutputWithContext(ctx context.Context) EnvironmentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTemplateOutput)
}

type EnvironmentTemplateOutput struct{ *pulumi.OutputState }

func (EnvironmentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTemplate)(nil)).Elem()
}

func (o EnvironmentTemplateOutput) ToEnvironmentTemplateOutput() EnvironmentTemplateOutput {
	return o
}

func (o EnvironmentTemplateOutput) ToEnvironmentTemplateOutputWithContext(ctx context.Context) EnvironmentTemplateOutput {
	return o
}

// <p>The Amazon Resource Name (ARN) of the environment template.</p>
func (o EnvironmentTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// <p>A description of the environment template.</p>
func (o EnvironmentTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The environment template name as displayed in the developer interface.</p>
func (o EnvironmentTemplateOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// <p>A customer provided encryption key that Proton uses to encrypt data.</p>
func (o EnvironmentTemplateOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) pulumi.StringPtrOutput { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

func (o EnvironmentTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o EnvironmentTemplateOutput) Provisioning() EnvironmentTemplateProvisioningPtrOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) EnvironmentTemplateProvisioningPtrOutput { return v.Provisioning }).(EnvironmentTemplateProvisioningPtrOutput)
}

// <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>
//
//	 <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
//	<i>Proton User Guide</i>.</p>
func (o EnvironmentTemplateOutput) Tags() EnvironmentTemplateTagArrayOutput {
	return o.ApplyT(func(v *EnvironmentTemplate) EnvironmentTemplateTagArrayOutput { return v.Tags }).(EnvironmentTemplateTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTemplateInput)(nil)).Elem(), &EnvironmentTemplate{})
	pulumi.RegisterOutputType(EnvironmentTemplateOutput{})
}
