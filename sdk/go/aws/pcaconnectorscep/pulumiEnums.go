// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pcaconnectorscep

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectorType string

const (
	ConnectorTypeGeneralPurpose = ConnectorType("GENERAL_PURPOSE")
	ConnectorTypeIntune         = ConnectorType("INTUNE")
)

type ConnectorTypeOutput struct{ *pulumi.OutputState }

func (ConnectorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorType)(nil)).Elem()
}

func (o ConnectorTypeOutput) ToConnectorTypeOutput() ConnectorTypeOutput {
	return o
}

func (o ConnectorTypeOutput) ToConnectorTypeOutputWithContext(ctx context.Context) ConnectorTypeOutput {
	return o
}

func (o ConnectorTypeOutput) ToConnectorTypePtrOutput() ConnectorTypePtrOutput {
	return o.ToConnectorTypePtrOutputWithContext(context.Background())
}

func (o ConnectorTypeOutput) ToConnectorTypePtrOutputWithContext(ctx context.Context) ConnectorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorType) *ConnectorType {
		return &v
	}).(ConnectorTypePtrOutput)
}

func (o ConnectorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorTypePtrOutput struct{ *pulumi.OutputState }

func (ConnectorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorType)(nil)).Elem()
}

func (o ConnectorTypePtrOutput) ToConnectorTypePtrOutput() ConnectorTypePtrOutput {
	return o
}

func (o ConnectorTypePtrOutput) ToConnectorTypePtrOutputWithContext(ctx context.Context) ConnectorTypePtrOutput {
	return o
}

func (o ConnectorTypePtrOutput) Elem() ConnectorTypeOutput {
	return o.ApplyT(func(v *ConnectorType) ConnectorType {
		if v != nil {
			return *v
		}
		var ret ConnectorType
		return ret
	}).(ConnectorTypeOutput)
}

func (o ConnectorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectorTypeOutput{})
	pulumi.RegisterOutputType(ConnectorTypePtrOutput{})
}
