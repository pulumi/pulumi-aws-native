// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package refactorspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationApiGatewayEndpointType string

const (
	ApplicationApiGatewayEndpointTypeRegional = ApplicationApiGatewayEndpointType("REGIONAL")
	ApplicationApiGatewayEndpointTypePrivate  = ApplicationApiGatewayEndpointType("PRIVATE")
)

func (ApplicationApiGatewayEndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApiGatewayEndpointType)(nil)).Elem()
}

func (e ApplicationApiGatewayEndpointType) ToApplicationApiGatewayEndpointTypeOutput() ApplicationApiGatewayEndpointTypeOutput {
	return pulumi.ToOutput(e).(ApplicationApiGatewayEndpointTypeOutput)
}

func (e ApplicationApiGatewayEndpointType) ToApplicationApiGatewayEndpointTypeOutputWithContext(ctx context.Context) ApplicationApiGatewayEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationApiGatewayEndpointTypeOutput)
}

func (e ApplicationApiGatewayEndpointType) ToApplicationApiGatewayEndpointTypePtrOutput() ApplicationApiGatewayEndpointTypePtrOutput {
	return e.ToApplicationApiGatewayEndpointTypePtrOutputWithContext(context.Background())
}

func (e ApplicationApiGatewayEndpointType) ToApplicationApiGatewayEndpointTypePtrOutputWithContext(ctx context.Context) ApplicationApiGatewayEndpointTypePtrOutput {
	return ApplicationApiGatewayEndpointType(e).ToApplicationApiGatewayEndpointTypeOutputWithContext(ctx).ToApplicationApiGatewayEndpointTypePtrOutputWithContext(ctx)
}

func (e ApplicationApiGatewayEndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationApiGatewayEndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationApiGatewayEndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationApiGatewayEndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationApiGatewayEndpointTypeOutput struct{ *pulumi.OutputState }

func (ApplicationApiGatewayEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApiGatewayEndpointType)(nil)).Elem()
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToApplicationApiGatewayEndpointTypeOutput() ApplicationApiGatewayEndpointTypeOutput {
	return o
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToApplicationApiGatewayEndpointTypeOutputWithContext(ctx context.Context) ApplicationApiGatewayEndpointTypeOutput {
	return o
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToApplicationApiGatewayEndpointTypePtrOutput() ApplicationApiGatewayEndpointTypePtrOutput {
	return o.ToApplicationApiGatewayEndpointTypePtrOutputWithContext(context.Background())
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToApplicationApiGatewayEndpointTypePtrOutputWithContext(ctx context.Context) ApplicationApiGatewayEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationApiGatewayEndpointType) *ApplicationApiGatewayEndpointType {
		return &v
	}).(ApplicationApiGatewayEndpointTypePtrOutput)
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationApiGatewayEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationApiGatewayEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationApiGatewayEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationApiGatewayEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationApiGatewayEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationApiGatewayEndpointType)(nil)).Elem()
}

func (o ApplicationApiGatewayEndpointTypePtrOutput) ToApplicationApiGatewayEndpointTypePtrOutput() ApplicationApiGatewayEndpointTypePtrOutput {
	return o
}

func (o ApplicationApiGatewayEndpointTypePtrOutput) ToApplicationApiGatewayEndpointTypePtrOutputWithContext(ctx context.Context) ApplicationApiGatewayEndpointTypePtrOutput {
	return o
}

func (o ApplicationApiGatewayEndpointTypePtrOutput) Elem() ApplicationApiGatewayEndpointTypeOutput {
	return o.ApplyT(func(v *ApplicationApiGatewayEndpointType) ApplicationApiGatewayEndpointType {
		if v != nil {
			return *v
		}
		var ret ApplicationApiGatewayEndpointType
		return ret
	}).(ApplicationApiGatewayEndpointTypeOutput)
}

func (o ApplicationApiGatewayEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationApiGatewayEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationApiGatewayEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationApiGatewayEndpointTypeInput is an input type that accepts ApplicationApiGatewayEndpointTypeArgs and ApplicationApiGatewayEndpointTypeOutput values.
// You can construct a concrete instance of `ApplicationApiGatewayEndpointTypeInput` via:
//
//          ApplicationApiGatewayEndpointTypeArgs{...}
type ApplicationApiGatewayEndpointTypeInput interface {
	pulumi.Input

	ToApplicationApiGatewayEndpointTypeOutput() ApplicationApiGatewayEndpointTypeOutput
	ToApplicationApiGatewayEndpointTypeOutputWithContext(context.Context) ApplicationApiGatewayEndpointTypeOutput
}

var applicationApiGatewayEndpointTypePtrType = reflect.TypeOf((**ApplicationApiGatewayEndpointType)(nil)).Elem()

type ApplicationApiGatewayEndpointTypePtrInput interface {
	pulumi.Input

	ToApplicationApiGatewayEndpointTypePtrOutput() ApplicationApiGatewayEndpointTypePtrOutput
	ToApplicationApiGatewayEndpointTypePtrOutputWithContext(context.Context) ApplicationApiGatewayEndpointTypePtrOutput
}

type applicationApiGatewayEndpointTypePtr string

func ApplicationApiGatewayEndpointTypePtr(v string) ApplicationApiGatewayEndpointTypePtrInput {
	return (*applicationApiGatewayEndpointTypePtr)(&v)
}

func (*applicationApiGatewayEndpointTypePtr) ElementType() reflect.Type {
	return applicationApiGatewayEndpointTypePtrType
}

func (in *applicationApiGatewayEndpointTypePtr) ToApplicationApiGatewayEndpointTypePtrOutput() ApplicationApiGatewayEndpointTypePtrOutput {
	return pulumi.ToOutput(in).(ApplicationApiGatewayEndpointTypePtrOutput)
}

func (in *applicationApiGatewayEndpointTypePtr) ToApplicationApiGatewayEndpointTypePtrOutputWithContext(ctx context.Context) ApplicationApiGatewayEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationApiGatewayEndpointTypePtrOutput)
}

type ApplicationProxyType string

const (
	ApplicationProxyTypeApiGateway = ApplicationProxyType("API_GATEWAY")
)

func (ApplicationProxyType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProxyType)(nil)).Elem()
}

func (e ApplicationProxyType) ToApplicationProxyTypeOutput() ApplicationProxyTypeOutput {
	return pulumi.ToOutput(e).(ApplicationProxyTypeOutput)
}

func (e ApplicationProxyType) ToApplicationProxyTypeOutputWithContext(ctx context.Context) ApplicationProxyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationProxyTypeOutput)
}

func (e ApplicationProxyType) ToApplicationProxyTypePtrOutput() ApplicationProxyTypePtrOutput {
	return e.ToApplicationProxyTypePtrOutputWithContext(context.Background())
}

func (e ApplicationProxyType) ToApplicationProxyTypePtrOutputWithContext(ctx context.Context) ApplicationProxyTypePtrOutput {
	return ApplicationProxyType(e).ToApplicationProxyTypeOutputWithContext(ctx).ToApplicationProxyTypePtrOutputWithContext(ctx)
}

func (e ApplicationProxyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationProxyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationProxyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationProxyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationProxyTypeOutput struct{ *pulumi.OutputState }

func (ApplicationProxyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProxyType)(nil)).Elem()
}

func (o ApplicationProxyTypeOutput) ToApplicationProxyTypeOutput() ApplicationProxyTypeOutput {
	return o
}

func (o ApplicationProxyTypeOutput) ToApplicationProxyTypeOutputWithContext(ctx context.Context) ApplicationProxyTypeOutput {
	return o
}

func (o ApplicationProxyTypeOutput) ToApplicationProxyTypePtrOutput() ApplicationProxyTypePtrOutput {
	return o.ToApplicationProxyTypePtrOutputWithContext(context.Background())
}

func (o ApplicationProxyTypeOutput) ToApplicationProxyTypePtrOutputWithContext(ctx context.Context) ApplicationProxyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationProxyType) *ApplicationProxyType {
		return &v
	}).(ApplicationProxyTypePtrOutput)
}

func (o ApplicationProxyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationProxyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationProxyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationProxyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationProxyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationProxyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationProxyTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationProxyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxyType)(nil)).Elem()
}

func (o ApplicationProxyTypePtrOutput) ToApplicationProxyTypePtrOutput() ApplicationProxyTypePtrOutput {
	return o
}

func (o ApplicationProxyTypePtrOutput) ToApplicationProxyTypePtrOutputWithContext(ctx context.Context) ApplicationProxyTypePtrOutput {
	return o
}

func (o ApplicationProxyTypePtrOutput) Elem() ApplicationProxyTypeOutput {
	return o.ApplyT(func(v *ApplicationProxyType) ApplicationProxyType {
		if v != nil {
			return *v
		}
		var ret ApplicationProxyType
		return ret
	}).(ApplicationProxyTypeOutput)
}

func (o ApplicationProxyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationProxyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationProxyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationProxyTypeInput is an input type that accepts ApplicationProxyTypeArgs and ApplicationProxyTypeOutput values.
// You can construct a concrete instance of `ApplicationProxyTypeInput` via:
//
//          ApplicationProxyTypeArgs{...}
type ApplicationProxyTypeInput interface {
	pulumi.Input

	ToApplicationProxyTypeOutput() ApplicationProxyTypeOutput
	ToApplicationProxyTypeOutputWithContext(context.Context) ApplicationProxyTypeOutput
}

var applicationProxyTypePtrType = reflect.TypeOf((**ApplicationProxyType)(nil)).Elem()

type ApplicationProxyTypePtrInput interface {
	pulumi.Input

	ToApplicationProxyTypePtrOutput() ApplicationProxyTypePtrOutput
	ToApplicationProxyTypePtrOutputWithContext(context.Context) ApplicationProxyTypePtrOutput
}

type applicationProxyTypePtr string

func ApplicationProxyTypePtr(v string) ApplicationProxyTypePtrInput {
	return (*applicationProxyTypePtr)(&v)
}

func (*applicationProxyTypePtr) ElementType() reflect.Type {
	return applicationProxyTypePtrType
}

func (in *applicationProxyTypePtr) ToApplicationProxyTypePtrOutput() ApplicationProxyTypePtrOutput {
	return pulumi.ToOutput(in).(ApplicationProxyTypePtrOutput)
}

func (in *applicationProxyTypePtr) ToApplicationProxyTypePtrOutputWithContext(ctx context.Context) ApplicationProxyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationProxyTypePtrOutput)
}

type EnvironmentNetworkFabricType string

const (
	EnvironmentNetworkFabricTypeTransitGateway = EnvironmentNetworkFabricType("TRANSIT_GATEWAY")
)

func (EnvironmentNetworkFabricType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentNetworkFabricType)(nil)).Elem()
}

func (e EnvironmentNetworkFabricType) ToEnvironmentNetworkFabricTypeOutput() EnvironmentNetworkFabricTypeOutput {
	return pulumi.ToOutput(e).(EnvironmentNetworkFabricTypeOutput)
}

func (e EnvironmentNetworkFabricType) ToEnvironmentNetworkFabricTypeOutputWithContext(ctx context.Context) EnvironmentNetworkFabricTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentNetworkFabricTypeOutput)
}

func (e EnvironmentNetworkFabricType) ToEnvironmentNetworkFabricTypePtrOutput() EnvironmentNetworkFabricTypePtrOutput {
	return e.ToEnvironmentNetworkFabricTypePtrOutputWithContext(context.Background())
}

func (e EnvironmentNetworkFabricType) ToEnvironmentNetworkFabricTypePtrOutputWithContext(ctx context.Context) EnvironmentNetworkFabricTypePtrOutput {
	return EnvironmentNetworkFabricType(e).ToEnvironmentNetworkFabricTypeOutputWithContext(ctx).ToEnvironmentNetworkFabricTypePtrOutputWithContext(ctx)
}

func (e EnvironmentNetworkFabricType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentNetworkFabricType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentNetworkFabricType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentNetworkFabricType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentNetworkFabricTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentNetworkFabricTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentNetworkFabricType)(nil)).Elem()
}

func (o EnvironmentNetworkFabricTypeOutput) ToEnvironmentNetworkFabricTypeOutput() EnvironmentNetworkFabricTypeOutput {
	return o
}

func (o EnvironmentNetworkFabricTypeOutput) ToEnvironmentNetworkFabricTypeOutputWithContext(ctx context.Context) EnvironmentNetworkFabricTypeOutput {
	return o
}

func (o EnvironmentNetworkFabricTypeOutput) ToEnvironmentNetworkFabricTypePtrOutput() EnvironmentNetworkFabricTypePtrOutput {
	return o.ToEnvironmentNetworkFabricTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentNetworkFabricTypeOutput) ToEnvironmentNetworkFabricTypePtrOutputWithContext(ctx context.Context) EnvironmentNetworkFabricTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentNetworkFabricType) *EnvironmentNetworkFabricType {
		return &v
	}).(EnvironmentNetworkFabricTypePtrOutput)
}

func (o EnvironmentNetworkFabricTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentNetworkFabricTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentNetworkFabricType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentNetworkFabricTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentNetworkFabricTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentNetworkFabricType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentNetworkFabricTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentNetworkFabricTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentNetworkFabricType)(nil)).Elem()
}

func (o EnvironmentNetworkFabricTypePtrOutput) ToEnvironmentNetworkFabricTypePtrOutput() EnvironmentNetworkFabricTypePtrOutput {
	return o
}

func (o EnvironmentNetworkFabricTypePtrOutput) ToEnvironmentNetworkFabricTypePtrOutputWithContext(ctx context.Context) EnvironmentNetworkFabricTypePtrOutput {
	return o
}

func (o EnvironmentNetworkFabricTypePtrOutput) Elem() EnvironmentNetworkFabricTypeOutput {
	return o.ApplyT(func(v *EnvironmentNetworkFabricType) EnvironmentNetworkFabricType {
		if v != nil {
			return *v
		}
		var ret EnvironmentNetworkFabricType
		return ret
	}).(EnvironmentNetworkFabricTypeOutput)
}

func (o EnvironmentNetworkFabricTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentNetworkFabricTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentNetworkFabricType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentNetworkFabricTypeInput is an input type that accepts EnvironmentNetworkFabricTypeArgs and EnvironmentNetworkFabricTypeOutput values.
// You can construct a concrete instance of `EnvironmentNetworkFabricTypeInput` via:
//
//          EnvironmentNetworkFabricTypeArgs{...}
type EnvironmentNetworkFabricTypeInput interface {
	pulumi.Input

	ToEnvironmentNetworkFabricTypeOutput() EnvironmentNetworkFabricTypeOutput
	ToEnvironmentNetworkFabricTypeOutputWithContext(context.Context) EnvironmentNetworkFabricTypeOutput
}

var environmentNetworkFabricTypePtrType = reflect.TypeOf((**EnvironmentNetworkFabricType)(nil)).Elem()

type EnvironmentNetworkFabricTypePtrInput interface {
	pulumi.Input

	ToEnvironmentNetworkFabricTypePtrOutput() EnvironmentNetworkFabricTypePtrOutput
	ToEnvironmentNetworkFabricTypePtrOutputWithContext(context.Context) EnvironmentNetworkFabricTypePtrOutput
}

type environmentNetworkFabricTypePtr string

func EnvironmentNetworkFabricTypePtr(v string) EnvironmentNetworkFabricTypePtrInput {
	return (*environmentNetworkFabricTypePtr)(&v)
}

func (*environmentNetworkFabricTypePtr) ElementType() reflect.Type {
	return environmentNetworkFabricTypePtrType
}

func (in *environmentNetworkFabricTypePtr) ToEnvironmentNetworkFabricTypePtrOutput() EnvironmentNetworkFabricTypePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentNetworkFabricTypePtrOutput)
}

func (in *environmentNetworkFabricTypePtr) ToEnvironmentNetworkFabricTypePtrOutputWithContext(ctx context.Context) EnvironmentNetworkFabricTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentNetworkFabricTypePtrOutput)
}

type RouteActivationState string

const (
	RouteActivationStateActive = RouteActivationState("ACTIVE")
)

func (RouteActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteActivationState)(nil)).Elem()
}

func (e RouteActivationState) ToRouteActivationStateOutput() RouteActivationStateOutput {
	return pulumi.ToOutput(e).(RouteActivationStateOutput)
}

func (e RouteActivationState) ToRouteActivationStateOutputWithContext(ctx context.Context) RouteActivationStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteActivationStateOutput)
}

func (e RouteActivationState) ToRouteActivationStatePtrOutput() RouteActivationStatePtrOutput {
	return e.ToRouteActivationStatePtrOutputWithContext(context.Background())
}

func (e RouteActivationState) ToRouteActivationStatePtrOutputWithContext(ctx context.Context) RouteActivationStatePtrOutput {
	return RouteActivationState(e).ToRouteActivationStateOutputWithContext(ctx).ToRouteActivationStatePtrOutputWithContext(ctx)
}

func (e RouteActivationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteActivationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteActivationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteActivationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteActivationStateOutput struct{ *pulumi.OutputState }

func (RouteActivationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteActivationState)(nil)).Elem()
}

func (o RouteActivationStateOutput) ToRouteActivationStateOutput() RouteActivationStateOutput {
	return o
}

func (o RouteActivationStateOutput) ToRouteActivationStateOutputWithContext(ctx context.Context) RouteActivationStateOutput {
	return o
}

func (o RouteActivationStateOutput) ToRouteActivationStatePtrOutput() RouteActivationStatePtrOutput {
	return o.ToRouteActivationStatePtrOutputWithContext(context.Background())
}

func (o RouteActivationStateOutput) ToRouteActivationStatePtrOutputWithContext(ctx context.Context) RouteActivationStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteActivationState) *RouteActivationState {
		return &v
	}).(RouteActivationStatePtrOutput)
}

func (o RouteActivationStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteActivationStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteActivationState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteActivationStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteActivationStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteActivationState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteActivationStatePtrOutput struct{ *pulumi.OutputState }

func (RouteActivationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteActivationState)(nil)).Elem()
}

func (o RouteActivationStatePtrOutput) ToRouteActivationStatePtrOutput() RouteActivationStatePtrOutput {
	return o
}

func (o RouteActivationStatePtrOutput) ToRouteActivationStatePtrOutputWithContext(ctx context.Context) RouteActivationStatePtrOutput {
	return o
}

func (o RouteActivationStatePtrOutput) Elem() RouteActivationStateOutput {
	return o.ApplyT(func(v *RouteActivationState) RouteActivationState {
		if v != nil {
			return *v
		}
		var ret RouteActivationState
		return ret
	}).(RouteActivationStateOutput)
}

func (o RouteActivationStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteActivationStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteActivationState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteActivationStateInput is an input type that accepts RouteActivationStateArgs and RouteActivationStateOutput values.
// You can construct a concrete instance of `RouteActivationStateInput` via:
//
//          RouteActivationStateArgs{...}
type RouteActivationStateInput interface {
	pulumi.Input

	ToRouteActivationStateOutput() RouteActivationStateOutput
	ToRouteActivationStateOutputWithContext(context.Context) RouteActivationStateOutput
}

var routeActivationStatePtrType = reflect.TypeOf((**RouteActivationState)(nil)).Elem()

type RouteActivationStatePtrInput interface {
	pulumi.Input

	ToRouteActivationStatePtrOutput() RouteActivationStatePtrOutput
	ToRouteActivationStatePtrOutputWithContext(context.Context) RouteActivationStatePtrOutput
}

type routeActivationStatePtr string

func RouteActivationStatePtr(v string) RouteActivationStatePtrInput {
	return (*routeActivationStatePtr)(&v)
}

func (*routeActivationStatePtr) ElementType() reflect.Type {
	return routeActivationStatePtrType
}

func (in *routeActivationStatePtr) ToRouteActivationStatePtrOutput() RouteActivationStatePtrOutput {
	return pulumi.ToOutput(in).(RouteActivationStatePtrOutput)
}

func (in *routeActivationStatePtr) ToRouteActivationStatePtrOutputWithContext(ctx context.Context) RouteActivationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteActivationStatePtrOutput)
}

type RouteMethod string

const (
	RouteMethodDelete  = RouteMethod("DELETE")
	RouteMethodGet     = RouteMethod("GET")
	RouteMethodHead    = RouteMethod("HEAD")
	RouteMethodOptions = RouteMethod("OPTIONS")
	RouteMethodPatch   = RouteMethod("PATCH")
	RouteMethodPost    = RouteMethod("POST")
	RouteMethodPut     = RouteMethod("PUT")
)

func (RouteMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMethod)(nil)).Elem()
}

func (e RouteMethod) ToRouteMethodOutput() RouteMethodOutput {
	return pulumi.ToOutput(e).(RouteMethodOutput)
}

func (e RouteMethod) ToRouteMethodOutputWithContext(ctx context.Context) RouteMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteMethodOutput)
}

func (e RouteMethod) ToRouteMethodPtrOutput() RouteMethodPtrOutput {
	return e.ToRouteMethodPtrOutputWithContext(context.Background())
}

func (e RouteMethod) ToRouteMethodPtrOutputWithContext(ctx context.Context) RouteMethodPtrOutput {
	return RouteMethod(e).ToRouteMethodOutputWithContext(ctx).ToRouteMethodPtrOutputWithContext(ctx)
}

func (e RouteMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteMethodOutput struct{ *pulumi.OutputState }

func (RouteMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMethod)(nil)).Elem()
}

func (o RouteMethodOutput) ToRouteMethodOutput() RouteMethodOutput {
	return o
}

func (o RouteMethodOutput) ToRouteMethodOutputWithContext(ctx context.Context) RouteMethodOutput {
	return o
}

func (o RouteMethodOutput) ToRouteMethodPtrOutput() RouteMethodPtrOutput {
	return o.ToRouteMethodPtrOutputWithContext(context.Background())
}

func (o RouteMethodOutput) ToRouteMethodPtrOutputWithContext(ctx context.Context) RouteMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteMethod) *RouteMethod {
		return &v
	}).(RouteMethodPtrOutput)
}

func (o RouteMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteMethodPtrOutput struct{ *pulumi.OutputState }

func (RouteMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteMethod)(nil)).Elem()
}

func (o RouteMethodPtrOutput) ToRouteMethodPtrOutput() RouteMethodPtrOutput {
	return o
}

func (o RouteMethodPtrOutput) ToRouteMethodPtrOutputWithContext(ctx context.Context) RouteMethodPtrOutput {
	return o
}

func (o RouteMethodPtrOutput) Elem() RouteMethodOutput {
	return o.ApplyT(func(v *RouteMethod) RouteMethod {
		if v != nil {
			return *v
		}
		var ret RouteMethod
		return ret
	}).(RouteMethodOutput)
}

func (o RouteMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteMethodInput is an input type that accepts RouteMethodArgs and RouteMethodOutput values.
// You can construct a concrete instance of `RouteMethodInput` via:
//
//          RouteMethodArgs{...}
type RouteMethodInput interface {
	pulumi.Input

	ToRouteMethodOutput() RouteMethodOutput
	ToRouteMethodOutputWithContext(context.Context) RouteMethodOutput
}

var routeMethodPtrType = reflect.TypeOf((**RouteMethod)(nil)).Elem()

type RouteMethodPtrInput interface {
	pulumi.Input

	ToRouteMethodPtrOutput() RouteMethodPtrOutput
	ToRouteMethodPtrOutputWithContext(context.Context) RouteMethodPtrOutput
}

type routeMethodPtr string

func RouteMethodPtr(v string) RouteMethodPtrInput {
	return (*routeMethodPtr)(&v)
}

func (*routeMethodPtr) ElementType() reflect.Type {
	return routeMethodPtrType
}

func (in *routeMethodPtr) ToRouteMethodPtrOutput() RouteMethodPtrOutput {
	return pulumi.ToOutput(in).(RouteMethodPtrOutput)
}

func (in *routeMethodPtr) ToRouteMethodPtrOutputWithContext(ctx context.Context) RouteMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteMethodPtrOutput)
}

// RouteMethodArrayInput is an input type that accepts RouteMethodArray and RouteMethodArrayOutput values.
// You can construct a concrete instance of `RouteMethodArrayInput` via:
//
//          RouteMethodArray{ RouteMethodArgs{...} }
type RouteMethodArrayInput interface {
	pulumi.Input

	ToRouteMethodArrayOutput() RouteMethodArrayOutput
	ToRouteMethodArrayOutputWithContext(context.Context) RouteMethodArrayOutput
}

type RouteMethodArray []RouteMethod

func (RouteMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMethod)(nil)).Elem()
}

func (i RouteMethodArray) ToRouteMethodArrayOutput() RouteMethodArrayOutput {
	return i.ToRouteMethodArrayOutputWithContext(context.Background())
}

func (i RouteMethodArray) ToRouteMethodArrayOutputWithContext(ctx context.Context) RouteMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMethodArrayOutput)
}

type RouteMethodArrayOutput struct{ *pulumi.OutputState }

func (RouteMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMethod)(nil)).Elem()
}

func (o RouteMethodArrayOutput) ToRouteMethodArrayOutput() RouteMethodArrayOutput {
	return o
}

func (o RouteMethodArrayOutput) ToRouteMethodArrayOutputWithContext(ctx context.Context) RouteMethodArrayOutput {
	return o
}

func (o RouteMethodArrayOutput) Index(i pulumi.IntInput) RouteMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMethod {
		return vs[0].([]RouteMethod)[vs[1].(int)]
	}).(RouteMethodOutput)
}

type RouteType string

const (
	RouteTypeDefault = RouteType("DEFAULT")
	RouteTypeUriPath = RouteType("URI_PATH")
)

func (RouteType) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (e RouteType) ToRouteTypeOutput() RouteTypeOutput {
	return pulumi.ToOutput(e).(RouteTypeOutput)
}

func (e RouteType) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteTypeOutput)
}

func (e RouteType) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return e.ToRouteTypePtrOutputWithContext(context.Background())
}

func (e RouteType) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return RouteType(e).ToRouteTypeOutputWithContext(ctx).ToRouteTypePtrOutputWithContext(ctx)
}

func (e RouteType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return o.ToRouteTypePtrOutputWithContext(context.Background())
}

func (o RouteTypeOutput) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteType) *RouteType {
		return &v
	}).(RouteTypePtrOutput)
}

func (o RouteTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteType)(nil)).Elem()
}

func (o RouteTypePtrOutput) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return o
}

func (o RouteTypePtrOutput) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return o
}

func (o RouteTypePtrOutput) Elem() RouteTypeOutput {
	return o.ApplyT(func(v *RouteType) RouteType {
		if v != nil {
			return *v
		}
		var ret RouteType
		return ret
	}).(RouteTypeOutput)
}

func (o RouteTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//          RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

var routeTypePtrType = reflect.TypeOf((**RouteType)(nil)).Elem()

type RouteTypePtrInput interface {
	pulumi.Input

	ToRouteTypePtrOutput() RouteTypePtrOutput
	ToRouteTypePtrOutputWithContext(context.Context) RouteTypePtrOutput
}

type routeTypePtr string

func RouteTypePtr(v string) RouteTypePtrInput {
	return (*routeTypePtr)(&v)
}

func (*routeTypePtr) ElementType() reflect.Type {
	return routeTypePtrType
}

func (in *routeTypePtr) ToRouteTypePtrOutput() RouteTypePtrOutput {
	return pulumi.ToOutput(in).(RouteTypePtrOutput)
}

func (in *routeTypePtr) ToRouteTypePtrOutputWithContext(ctx context.Context) RouteTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteTypePtrOutput)
}

type ServiceEndpointType string

const (
	ServiceEndpointTypeLambda = ServiceEndpointType("LAMBDA")
	ServiceEndpointTypeUrl    = ServiceEndpointType("URL")
)

func (ServiceEndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointType)(nil)).Elem()
}

func (e ServiceEndpointType) ToServiceEndpointTypeOutput() ServiceEndpointTypeOutput {
	return pulumi.ToOutput(e).(ServiceEndpointTypeOutput)
}

func (e ServiceEndpointType) ToServiceEndpointTypeOutputWithContext(ctx context.Context) ServiceEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceEndpointTypeOutput)
}

func (e ServiceEndpointType) ToServiceEndpointTypePtrOutput() ServiceEndpointTypePtrOutput {
	return e.ToServiceEndpointTypePtrOutputWithContext(context.Background())
}

func (e ServiceEndpointType) ToServiceEndpointTypePtrOutputWithContext(ctx context.Context) ServiceEndpointTypePtrOutput {
	return ServiceEndpointType(e).ToServiceEndpointTypeOutputWithContext(ctx).ToServiceEndpointTypePtrOutputWithContext(ctx)
}

func (e ServiceEndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceEndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceEndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceEndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceEndpointTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointType)(nil)).Elem()
}

func (o ServiceEndpointTypeOutput) ToServiceEndpointTypeOutput() ServiceEndpointTypeOutput {
	return o
}

func (o ServiceEndpointTypeOutput) ToServiceEndpointTypeOutputWithContext(ctx context.Context) ServiceEndpointTypeOutput {
	return o
}

func (o ServiceEndpointTypeOutput) ToServiceEndpointTypePtrOutput() ServiceEndpointTypePtrOutput {
	return o.ToServiceEndpointTypePtrOutputWithContext(context.Background())
}

func (o ServiceEndpointTypeOutput) ToServiceEndpointTypePtrOutputWithContext(ctx context.Context) ServiceEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceEndpointType) *ServiceEndpointType {
		return &v
	}).(ServiceEndpointTypePtrOutput)
}

func (o ServiceEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (ServiceEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointType)(nil)).Elem()
}

func (o ServiceEndpointTypePtrOutput) ToServiceEndpointTypePtrOutput() ServiceEndpointTypePtrOutput {
	return o
}

func (o ServiceEndpointTypePtrOutput) ToServiceEndpointTypePtrOutputWithContext(ctx context.Context) ServiceEndpointTypePtrOutput {
	return o
}

func (o ServiceEndpointTypePtrOutput) Elem() ServiceEndpointTypeOutput {
	return o.ApplyT(func(v *ServiceEndpointType) ServiceEndpointType {
		if v != nil {
			return *v
		}
		var ret ServiceEndpointType
		return ret
	}).(ServiceEndpointTypeOutput)
}

func (o ServiceEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceEndpointTypeInput is an input type that accepts ServiceEndpointTypeArgs and ServiceEndpointTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointTypeInput` via:
//
//          ServiceEndpointTypeArgs{...}
type ServiceEndpointTypeInput interface {
	pulumi.Input

	ToServiceEndpointTypeOutput() ServiceEndpointTypeOutput
	ToServiceEndpointTypeOutputWithContext(context.Context) ServiceEndpointTypeOutput
}

var serviceEndpointTypePtrType = reflect.TypeOf((**ServiceEndpointType)(nil)).Elem()

type ServiceEndpointTypePtrInput interface {
	pulumi.Input

	ToServiceEndpointTypePtrOutput() ServiceEndpointTypePtrOutput
	ToServiceEndpointTypePtrOutputWithContext(context.Context) ServiceEndpointTypePtrOutput
}

type serviceEndpointTypePtr string

func ServiceEndpointTypePtr(v string) ServiceEndpointTypePtrInput {
	return (*serviceEndpointTypePtr)(&v)
}

func (*serviceEndpointTypePtr) ElementType() reflect.Type {
	return serviceEndpointTypePtrType
}

func (in *serviceEndpointTypePtr) ToServiceEndpointTypePtrOutput() ServiceEndpointTypePtrOutput {
	return pulumi.ToOutput(in).(ServiceEndpointTypePtrOutput)
}

func (in *serviceEndpointTypePtr) ToServiceEndpointTypePtrOutputWithContext(ctx context.Context) ServiceEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceEndpointTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationApiGatewayEndpointTypeInput)(nil)).Elem(), ApplicationApiGatewayEndpointType("REGIONAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationApiGatewayEndpointTypePtrInput)(nil)).Elem(), ApplicationApiGatewayEndpointType("REGIONAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyTypeInput)(nil)).Elem(), ApplicationProxyType("API_GATEWAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyTypePtrInput)(nil)).Elem(), ApplicationProxyType("API_GATEWAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentNetworkFabricTypeInput)(nil)).Elem(), EnvironmentNetworkFabricType("TRANSIT_GATEWAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentNetworkFabricTypePtrInput)(nil)).Elem(), EnvironmentNetworkFabricType("TRANSIT_GATEWAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteActivationStateInput)(nil)).Elem(), RouteActivationState("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteActivationStatePtrInput)(nil)).Elem(), RouteActivationState("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMethodInput)(nil)).Elem(), RouteMethod("DELETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMethodPtrInput)(nil)).Elem(), RouteMethod("DELETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMethodArrayInput)(nil)).Elem(), RouteMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTypeInput)(nil)).Elem(), RouteType("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTypePtrInput)(nil)).Elem(), RouteType("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEndpointTypeInput)(nil)).Elem(), ServiceEndpointType("LAMBDA"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEndpointTypePtrInput)(nil)).Elem(), ServiceEndpointType("LAMBDA"))
	pulumi.RegisterOutputType(ApplicationApiGatewayEndpointTypeOutput{})
	pulumi.RegisterOutputType(ApplicationApiGatewayEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(ApplicationProxyTypeOutput{})
	pulumi.RegisterOutputType(ApplicationProxyTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentNetworkFabricTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentNetworkFabricTypePtrOutput{})
	pulumi.RegisterOutputType(RouteActivationStateOutput{})
	pulumi.RegisterOutputType(RouteActivationStatePtrOutput{})
	pulumi.RegisterOutputType(RouteMethodOutput{})
	pulumi.RegisterOutputType(RouteMethodPtrOutput{})
	pulumi.RegisterOutputType(RouteMethodArrayOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypePtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointTypePtrOutput{})
}
