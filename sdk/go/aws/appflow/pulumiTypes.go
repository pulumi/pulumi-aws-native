// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectorProfileAmplitudeConnectorProfileCredentials struct {
	// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
	ApiKey    string `pulumi:"apiKey"`
	SecretKey string `pulumi:"secretKey"`
}

// ConnectorProfileAmplitudeConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileAmplitudeConnectorProfileCredentialsArgs and ConnectorProfileAmplitudeConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileAmplitudeConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileAmplitudeConnectorProfileCredentialsArgs{...}
type ConnectorProfileAmplitudeConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileAmplitudeConnectorProfileCredentialsOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsOutput
	ToConnectorProfileAmplitudeConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsOutput
}

type ConnectorProfileAmplitudeConnectorProfileCredentialsArgs struct {
	// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
	ApiKey    pulumi.StringInput `pulumi:"apiKey"`
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (ConnectorProfileAmplitudeConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileAmplitudeConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileAmplitudeConnectorProfileCredentialsArgs) ToConnectorProfileAmplitudeConnectorProfileCredentialsOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileAmplitudeConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileAmplitudeConnectorProfileCredentialsArgs) ToConnectorProfileAmplitudeConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileAmplitudeConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileAmplitudeConnectorProfileCredentialsArgs) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileAmplitudeConnectorProfileCredentialsArgs) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileAmplitudeConnectorProfileCredentialsOutput).ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileAmplitudeConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileAmplitudeConnectorProfileCredentialsArgs, ConnectorProfileAmplitudeConnectorProfileCredentialsPtr and ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileAmplitudeConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileAmplitudeConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileAmplitudeConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput
	ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput
}

type connectorProfileAmplitudeConnectorProfileCredentialsPtrType ConnectorProfileAmplitudeConnectorProfileCredentialsArgs

func ConnectorProfileAmplitudeConnectorProfileCredentialsPtr(v *ConnectorProfileAmplitudeConnectorProfileCredentialsArgs) ConnectorProfileAmplitudeConnectorProfileCredentialsPtrInput {
	return (*connectorProfileAmplitudeConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileAmplitudeConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileAmplitudeConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileAmplitudeConnectorProfileCredentialsPtrType) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileAmplitudeConnectorProfileCredentialsPtrType) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileAmplitudeConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileAmplitudeConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) ToConnectorProfileAmplitudeConnectorProfileCredentialsOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) ToConnectorProfileAmplitudeConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileAmplitudeConnectorProfileCredentials) *ConnectorProfileAmplitudeConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput)
}

// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileAmplitudeConnectorProfileCredentials) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileAmplitudeConnectorProfileCredentials) string { return v.SecretKey }).(pulumi.StringOutput)
}

type ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileAmplitudeConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput) ToConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileAmplitudeConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileAmplitudeConnectorProfileCredentials) ConnectorProfileAmplitudeConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileAmplitudeConnectorProfileCredentials
		return ret
	}).(ConnectorProfileAmplitudeConnectorProfileCredentialsOutput)
}

// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileAmplitudeConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileAmplitudeConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorOAuthRequest struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode *string `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been
	// granted.
	RedirectUri *string `pulumi:"redirectUri"`
}

// ConnectorProfileConnectorOAuthRequestInput is an input type that accepts ConnectorProfileConnectorOAuthRequestArgs and ConnectorProfileConnectorOAuthRequestOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorOAuthRequestInput` via:
//
//          ConnectorProfileConnectorOAuthRequestArgs{...}
type ConnectorProfileConnectorOAuthRequestInput interface {
	pulumi.Input

	ToConnectorProfileConnectorOAuthRequestOutput() ConnectorProfileConnectorOAuthRequestOutput
	ToConnectorProfileConnectorOAuthRequestOutputWithContext(context.Context) ConnectorProfileConnectorOAuthRequestOutput
}

type ConnectorProfileConnectorOAuthRequestArgs struct {
	// The code provided by the connector when it has been authenticated via the connected app.
	AuthCode pulumi.StringPtrInput `pulumi:"authCode"`
	// The URL to which the authentication server redirects the browser after authorization has been
	// granted.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (ConnectorProfileConnectorOAuthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorOAuthRequest)(nil)).Elem()
}

func (i ConnectorProfileConnectorOAuthRequestArgs) ToConnectorProfileConnectorOAuthRequestOutput() ConnectorProfileConnectorOAuthRequestOutput {
	return i.ToConnectorProfileConnectorOAuthRequestOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorOAuthRequestArgs) ToConnectorProfileConnectorOAuthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorOAuthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorOAuthRequestOutput)
}

func (i ConnectorProfileConnectorOAuthRequestArgs) ToConnectorProfileConnectorOAuthRequestPtrOutput() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return i.ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorOAuthRequestArgs) ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorOAuthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorOAuthRequestOutput).ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorOAuthRequestPtrInput is an input type that accepts ConnectorProfileConnectorOAuthRequestArgs, ConnectorProfileConnectorOAuthRequestPtr and ConnectorProfileConnectorOAuthRequestPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorOAuthRequestPtrInput` via:
//
//          ConnectorProfileConnectorOAuthRequestArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileConnectorOAuthRequestPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorOAuthRequestPtrOutput() ConnectorProfileConnectorOAuthRequestPtrOutput
	ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(context.Context) ConnectorProfileConnectorOAuthRequestPtrOutput
}

type connectorProfileConnectorOAuthRequestPtrType ConnectorProfileConnectorOAuthRequestArgs

func ConnectorProfileConnectorOAuthRequestPtr(v *ConnectorProfileConnectorOAuthRequestArgs) ConnectorProfileConnectorOAuthRequestPtrInput {
	return (*connectorProfileConnectorOAuthRequestPtrType)(v)
}

func (*connectorProfileConnectorOAuthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorOAuthRequest)(nil)).Elem()
}

func (i *connectorProfileConnectorOAuthRequestPtrType) ToConnectorProfileConnectorOAuthRequestPtrOutput() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return i.ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorOAuthRequestPtrType) ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorOAuthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileConnectorOAuthRequestOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorOAuthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorOAuthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorOAuthRequestOutput) ToConnectorProfileConnectorOAuthRequestOutput() ConnectorProfileConnectorOAuthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorOAuthRequestOutput) ToConnectorProfileConnectorOAuthRequestOutputWithContext(ctx context.Context) ConnectorProfileConnectorOAuthRequestOutput {
	return o
}

func (o ConnectorProfileConnectorOAuthRequestOutput) ToConnectorProfileConnectorOAuthRequestPtrOutput() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorOAuthRequestOutput) ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorOAuthRequest) *ConnectorProfileConnectorOAuthRequest {
		return &v
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorOAuthRequestOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorOAuthRequest) *string { return v.AuthCode }).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been
// granted.
func (o ConnectorProfileConnectorOAuthRequestOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorOAuthRequest) *string { return v.RedirectUri }).(pulumi.StringPtrOutput)
}

type ConnectorProfileConnectorOAuthRequestPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorOAuthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorOAuthRequest)(nil)).Elem()
}

func (o ConnectorProfileConnectorOAuthRequestPtrOutput) ToConnectorProfileConnectorOAuthRequestPtrOutput() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorOAuthRequestPtrOutput) ToConnectorProfileConnectorOAuthRequestPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o
}

func (o ConnectorProfileConnectorOAuthRequestPtrOutput) Elem() ConnectorProfileConnectorOAuthRequestOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorOAuthRequest) ConnectorProfileConnectorOAuthRequest {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorOAuthRequest
		return ret
	}).(ConnectorProfileConnectorOAuthRequestOutput)
}

// The code provided by the connector when it has been authenticated via the connected app.
func (o ConnectorProfileConnectorOAuthRequestPtrOutput) AuthCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorOAuthRequest) *string {
		if v == nil {
			return nil
		}
		return v.AuthCode
	}).(pulumi.StringPtrOutput)
}

// The URL to which the authentication server redirects the browser after authorization has been
// granted.
func (o ConnectorProfileConnectorOAuthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorOAuthRequest) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

// Connector specific configurations needed to create connector profile
type ConnectorProfileConnectorProfileConfig struct {
	ConnectorProfileCredentials ConnectorProfileConnectorProfileCredentials `pulumi:"connectorProfileCredentials"`
	ConnectorProfileProperties  *ConnectorProfileConnectorProfileProperties `pulumi:"connectorProfileProperties"`
}

// ConnectorProfileConnectorProfileConfigInput is an input type that accepts ConnectorProfileConnectorProfileConfigArgs and ConnectorProfileConnectorProfileConfigOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigInput` via:
//
//          ConnectorProfileConnectorProfileConfigArgs{...}
type ConnectorProfileConnectorProfileConfigInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigOutput() ConnectorProfileConnectorProfileConfigOutput
	ToConnectorProfileConnectorProfileConfigOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigOutput
}

// Connector specific configurations needed to create connector profile
type ConnectorProfileConnectorProfileConfigArgs struct {
	ConnectorProfileCredentials ConnectorProfileConnectorProfileCredentialsInput   `pulumi:"connectorProfileCredentials"`
	ConnectorProfileProperties  ConnectorProfileConnectorProfilePropertiesPtrInput `pulumi:"connectorProfileProperties"`
}

func (ConnectorProfileConnectorProfileConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigOutput() ConnectorProfileConnectorProfileConfigOutput {
	return i.ToConnectorProfileConnectorProfileConfigOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigOutput)
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileConfigArgs) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigOutput).ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileConfigPtrInput is an input type that accepts ConnectorProfileConnectorProfileConfigArgs, ConnectorProfileConnectorProfileConfigPtr and ConnectorProfileConnectorProfileConfigPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileConfigPtrInput` via:
//
//          ConnectorProfileConnectorProfileConfigArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileConnectorProfileConfigPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput
	ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileConfigPtrOutput
}

type connectorProfileConnectorProfileConfigPtrType ConnectorProfileConnectorProfileConfigArgs

func ConnectorProfileConnectorProfileConfigPtr(v *ConnectorProfileConnectorProfileConfigArgs) ConnectorProfileConnectorProfileConfigPtrInput {
	return (*connectorProfileConnectorProfileConfigPtrType)(v)
}

func (*connectorProfileConnectorProfileConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileConfigPtrType) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return i.ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileConfigPtrType) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileConfigPtrOutput)
}

// Connector specific configurations needed to create connector profile
type ConnectorProfileConnectorProfileConfigOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigOutput() ConnectorProfileConnectorProfileConfigOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return o.ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileConfigOutput) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileConfig {
		return &v
	}).(ConnectorProfileConnectorProfileConfigPtrOutput)
}

func (o ConnectorProfileConnectorProfileConfigOutput) ConnectorProfileCredentials() ConnectorProfileConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfig) ConnectorProfileConnectorProfileCredentials {
		return v.ConnectorProfileCredentials
	}).(ConnectorProfileConnectorProfileCredentialsOutput)
}

func (o ConnectorProfileConnectorProfileConfigOutput) ConnectorProfileProperties() ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileProperties {
		return v.ConnectorProfileProperties
	}).(ConnectorProfileConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileConnectorProfileConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileConfig)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) ToConnectorProfileConnectorProfileConfigPtrOutput() ConnectorProfileConnectorProfileConfigPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) ToConnectorProfileConnectorProfileConfigPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileConfigPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) Elem() ConnectorProfileConnectorProfileConfigOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfig) ConnectorProfileConnectorProfileConfig {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileConfig
		return ret
	}).(ConnectorProfileConnectorProfileConfigOutput)
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) ConnectorProfileCredentials() ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return &v.ConnectorProfileCredentials
	}).(ConnectorProfileConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileConfigPtrOutput) ConnectorProfileProperties() ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileConfig) *ConnectorProfileConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.ConnectorProfileProperties
	}).(ConnectorProfileConnectorProfilePropertiesPtrOutput)
}

// Connector specific configuration needed to create connector profile based on Authentication mechanism
type ConnectorProfileConnectorProfileCredentials struct {
	Amplitude       *ConnectorProfileAmplitudeConnectorProfileCredentials       `pulumi:"amplitude"`
	Datadog         *ConnectorProfileDatadogConnectorProfileCredentials         `pulumi:"datadog"`
	Dynatrace       *ConnectorProfileDynatraceConnectorProfileCredentials       `pulumi:"dynatrace"`
	GoogleAnalytics *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials `pulumi:"googleAnalytics"`
	InforNexus      *ConnectorProfileInforNexusConnectorProfileCredentials      `pulumi:"inforNexus"`
	Marketo         *ConnectorProfileMarketoConnectorProfileCredentials         `pulumi:"marketo"`
	Redshift        *ConnectorProfileRedshiftConnectorProfileCredentials        `pulumi:"redshift"`
	Salesforce      *ConnectorProfileSalesforceConnectorProfileCredentials      `pulumi:"salesforce"`
	ServiceNow      *ConnectorProfileServiceNowConnectorProfileCredentials      `pulumi:"serviceNow"`
	Singular        *ConnectorProfileSingularConnectorProfileCredentials        `pulumi:"singular"`
	Slack           *ConnectorProfileSlackConnectorProfileCredentials           `pulumi:"slack"`
	Snowflake       *ConnectorProfileSnowflakeConnectorProfileCredentials       `pulumi:"snowflake"`
	Trendmicro      *ConnectorProfileTrendmicroConnectorProfileCredentials      `pulumi:"trendmicro"`
	Veeva           *ConnectorProfileVeevaConnectorProfileCredentials           `pulumi:"veeva"`
	Zendesk         *ConnectorProfileZendeskConnectorProfileCredentials         `pulumi:"zendesk"`
}

// ConnectorProfileConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileConnectorProfileCredentialsArgs and ConnectorProfileConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileConnectorProfileCredentialsArgs{...}
type ConnectorProfileConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileCredentialsOutput() ConnectorProfileConnectorProfileCredentialsOutput
	ToConnectorProfileConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileConnectorProfileCredentialsOutput
}

// Connector specific configuration needed to create connector profile based on Authentication mechanism
type ConnectorProfileConnectorProfileCredentialsArgs struct {
	Amplitude       ConnectorProfileAmplitudeConnectorProfileCredentialsPtrInput       `pulumi:"amplitude"`
	Datadog         ConnectorProfileDatadogConnectorProfileCredentialsPtrInput         `pulumi:"datadog"`
	Dynatrace       ConnectorProfileDynatraceConnectorProfileCredentialsPtrInput       `pulumi:"dynatrace"`
	GoogleAnalytics ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrInput `pulumi:"googleAnalytics"`
	InforNexus      ConnectorProfileInforNexusConnectorProfileCredentialsPtrInput      `pulumi:"inforNexus"`
	Marketo         ConnectorProfileMarketoConnectorProfileCredentialsPtrInput         `pulumi:"marketo"`
	Redshift        ConnectorProfileRedshiftConnectorProfileCredentialsPtrInput        `pulumi:"redshift"`
	Salesforce      ConnectorProfileSalesforceConnectorProfileCredentialsPtrInput      `pulumi:"salesforce"`
	ServiceNow      ConnectorProfileServiceNowConnectorProfileCredentialsPtrInput      `pulumi:"serviceNow"`
	Singular        ConnectorProfileSingularConnectorProfileCredentialsPtrInput        `pulumi:"singular"`
	Slack           ConnectorProfileSlackConnectorProfileCredentialsPtrInput           `pulumi:"slack"`
	Snowflake       ConnectorProfileSnowflakeConnectorProfileCredentialsPtrInput       `pulumi:"snowflake"`
	Trendmicro      ConnectorProfileTrendmicroConnectorProfileCredentialsPtrInput      `pulumi:"trendmicro"`
	Veeva           ConnectorProfileVeevaConnectorProfileCredentialsPtrInput           `pulumi:"veeva"`
	Zendesk         ConnectorProfileZendeskConnectorProfileCredentialsPtrInput         `pulumi:"zendesk"`
}

func (ConnectorProfileConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileCredentialsOutput() ConnectorProfileConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfileCredentialsArgs) ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileCredentialsOutput).ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileConnectorProfileCredentialsArgs, ConnectorProfileConnectorProfileCredentialsPtr and ConnectorProfileConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileCredentialsPtrOutput
	ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfileCredentialsPtrOutput
}

type connectorProfileConnectorProfileCredentialsPtrType ConnectorProfileConnectorProfileCredentialsArgs

func ConnectorProfileConnectorProfileCredentialsPtr(v *ConnectorProfileConnectorProfileCredentialsArgs) ConnectorProfileConnectorProfileCredentialsPtrInput {
	return (*connectorProfileConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileConnectorProfileCredentialsPtrType) ToConnectorProfileConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfileCredentialsPtrType) ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfileCredentialsPtrOutput)
}

// Connector specific configuration needed to create connector profile based on Authentication mechanism
type ConnectorProfileConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileCredentialsOutput() ConnectorProfileConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Amplitude() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileAmplitudeConnectorProfileCredentials {
		return v.Amplitude
	}).(ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Datadog() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileDatadogConnectorProfileCredentials {
		return v.Datadog
	}).(ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Dynatrace() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileDynatraceConnectorProfileCredentials {
		return v.Dynatrace
	}).(ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) GoogleAnalytics() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials {
		return v.GoogleAnalytics
	}).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) InforNexus() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileInforNexusConnectorProfileCredentials {
		return v.InforNexus
	}).(ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Marketo() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileMarketoConnectorProfileCredentials {
		return v.Marketo
	}).(ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Redshift() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileRedshiftConnectorProfileCredentials {
		return v.Redshift
	}).(ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Salesforce() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSalesforceConnectorProfileCredentials {
		return v.Salesforce
	}).(ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) ServiceNow() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileServiceNowConnectorProfileCredentials {
		return v.ServiceNow
	}).(ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Singular() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSingularConnectorProfileCredentials {
		return v.Singular
	}).(ConnectorProfileSingularConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Slack() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSlackConnectorProfileCredentials {
		return v.Slack
	}).(ConnectorProfileSlackConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Snowflake() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSnowflakeConnectorProfileCredentials {
		return v.Snowflake
	}).(ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Trendmicro() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileTrendmicroConnectorProfileCredentials {
		return v.Trendmicro
	}).(ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Veeva() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileVeevaConnectorProfileCredentials {
		return v.Veeva
	}).(ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsOutput) Zendesk() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileCredentials) *ConnectorProfileZendeskConnectorProfileCredentials {
		return v.Zendesk
	}).(ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) ToConnectorProfileConnectorProfileCredentialsPtrOutput() ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) ToConnectorProfileConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) ConnectorProfileConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileCredentials
		return ret
	}).(ConnectorProfileConnectorProfileCredentialsOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Amplitude() ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileAmplitudeConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Amplitude
	}).(ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Datadog() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileDatadogConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Dynatrace() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileDynatraceConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) GoogleAnalytics() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.GoogleAnalytics
	}).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) InforNexus() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileInforNexusConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Marketo() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileMarketoConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Redshift() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileRedshiftConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Redshift
	}).(ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Salesforce() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSalesforceConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) ServiceNow() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileServiceNowConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Singular() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSingularConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(ConnectorProfileSingularConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Slack() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSlackConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(ConnectorProfileSlackConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Snowflake() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileSnowflakeConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Snowflake
	}).(ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Trendmicro() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileTrendmicroConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Trendmicro
	}).(ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Veeva() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileVeevaConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput)
}

func (o ConnectorProfileConnectorProfileCredentialsPtrOutput) Zendesk() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileCredentials) *ConnectorProfileZendeskConnectorProfileCredentials {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput)
}

// Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular
type ConnectorProfileConnectorProfileProperties struct {
	Datadog    *ConnectorProfileDatadogConnectorProfileProperties    `pulumi:"datadog"`
	Dynatrace  *ConnectorProfileDynatraceConnectorProfileProperties  `pulumi:"dynatrace"`
	InforNexus *ConnectorProfileInforNexusConnectorProfileProperties `pulumi:"inforNexus"`
	Marketo    *ConnectorProfileMarketoConnectorProfileProperties    `pulumi:"marketo"`
	Redshift   *ConnectorProfileRedshiftConnectorProfileProperties   `pulumi:"redshift"`
	Salesforce *ConnectorProfileSalesforceConnectorProfileProperties `pulumi:"salesforce"`
	ServiceNow *ConnectorProfileServiceNowConnectorProfileProperties `pulumi:"serviceNow"`
	Slack      *ConnectorProfileSlackConnectorProfileProperties      `pulumi:"slack"`
	Snowflake  *ConnectorProfileSnowflakeConnectorProfileProperties  `pulumi:"snowflake"`
	Veeva      *ConnectorProfileVeevaConnectorProfileProperties      `pulumi:"veeva"`
	Zendesk    *ConnectorProfileZendeskConnectorProfileProperties    `pulumi:"zendesk"`
}

// ConnectorProfileConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileConnectorProfilePropertiesArgs and ConnectorProfileConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileConnectorProfilePropertiesArgs{...}
type ConnectorProfileConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfilePropertiesOutput() ConnectorProfileConnectorProfilePropertiesOutput
	ToConnectorProfileConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileConnectorProfilePropertiesOutput
}

// Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular
type ConnectorProfileConnectorProfilePropertiesArgs struct {
	Datadog    ConnectorProfileDatadogConnectorProfilePropertiesPtrInput    `pulumi:"datadog"`
	Dynatrace  ConnectorProfileDynatraceConnectorProfilePropertiesPtrInput  `pulumi:"dynatrace"`
	InforNexus ConnectorProfileInforNexusConnectorProfilePropertiesPtrInput `pulumi:"inforNexus"`
	Marketo    ConnectorProfileMarketoConnectorProfilePropertiesPtrInput    `pulumi:"marketo"`
	Redshift   ConnectorProfileRedshiftConnectorProfilePropertiesPtrInput   `pulumi:"redshift"`
	Salesforce ConnectorProfileSalesforceConnectorProfilePropertiesPtrInput `pulumi:"salesforce"`
	ServiceNow ConnectorProfileServiceNowConnectorProfilePropertiesPtrInput `pulumi:"serviceNow"`
	Slack      ConnectorProfileSlackConnectorProfilePropertiesPtrInput      `pulumi:"slack"`
	Snowflake  ConnectorProfileSnowflakeConnectorProfilePropertiesPtrInput  `pulumi:"snowflake"`
	Veeva      ConnectorProfileVeevaConnectorProfilePropertiesPtrInput      `pulumi:"veeva"`
	Zendesk    ConnectorProfileZendeskConnectorProfilePropertiesPtrInput    `pulumi:"zendesk"`
}

func (ConnectorProfileConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfilePropertiesOutput() ConnectorProfileConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileConnectorProfilePropertiesArgs) ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfilePropertiesOutput).ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileConnectorProfilePropertiesArgs, ConnectorProfileConnectorProfilePropertiesPtr and ConnectorProfileConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfilePropertiesPtrOutput
	ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileConnectorProfilePropertiesPtrOutput
}

type connectorProfileConnectorProfilePropertiesPtrType ConnectorProfileConnectorProfilePropertiesArgs

func ConnectorProfileConnectorProfilePropertiesPtr(v *ConnectorProfileConnectorProfilePropertiesArgs) ConnectorProfileConnectorProfilePropertiesPtrInput {
	return (*connectorProfileConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileConnectorProfilePropertiesPtrType) ToConnectorProfileConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileConnectorProfilePropertiesPtrType) ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileConnectorProfilePropertiesPtrOutput)
}

// Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular
type ConnectorProfileConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfilePropertiesOutput() ConnectorProfileConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileConnectorProfileProperties) *ConnectorProfileConnectorProfileProperties {
		return &v
	}).(ConnectorProfileConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Datadog() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileDatadogConnectorProfileProperties {
		return v.Datadog
	}).(ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Dynatrace() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileDynatraceConnectorProfileProperties {
		return v.Dynatrace
	}).(ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) InforNexus() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileInforNexusConnectorProfileProperties {
		return v.InforNexus
	}).(ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Marketo() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileMarketoConnectorProfileProperties {
		return v.Marketo
	}).(ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Redshift() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileRedshiftConnectorProfileProperties {
		return v.Redshift
	}).(ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Salesforce() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileSalesforceConnectorProfileProperties {
		return v.Salesforce
	}).(ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) ServiceNow() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileServiceNowConnectorProfileProperties {
		return v.ServiceNow
	}).(ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Slack() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileSlackConnectorProfileProperties {
		return v.Slack
	}).(ConnectorProfileSlackConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Snowflake() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileSnowflakeConnectorProfileProperties {
		return v.Snowflake
	}).(ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Veeva() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileVeevaConnectorProfileProperties {
		return v.Veeva
	}).(ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesOutput) Zendesk() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectorProfileConnectorProfileProperties) *ConnectorProfileZendeskConnectorProfileProperties {
		return v.Zendesk
	}).(ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) ToConnectorProfileConnectorProfilePropertiesPtrOutput() ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) ToConnectorProfileConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) ConnectorProfileConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileConnectorProfileProperties
		return ret
	}).(ConnectorProfileConnectorProfilePropertiesOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Datadog() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileDatadogConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Dynatrace() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileDynatraceConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) InforNexus() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileInforNexusConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Marketo() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileMarketoConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Redshift() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileRedshiftConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Redshift
	}).(ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Salesforce() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileSalesforceConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) ServiceNow() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileServiceNowConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Slack() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileSlackConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(ConnectorProfileSlackConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Snowflake() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileSnowflakeConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Snowflake
	}).(ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Veeva() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileVeevaConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput)
}

func (o ConnectorProfileConnectorProfilePropertiesPtrOutput) Zendesk() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileConnectorProfileProperties) *ConnectorProfileZendeskConnectorProfileProperties {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileDatadogConnectorProfileCredentials struct {
	// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
	ApiKey string `pulumi:"apiKey"`
	// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
	ApplicationKey string `pulumi:"applicationKey"`
}

// ConnectorProfileDatadogConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileDatadogConnectorProfileCredentialsArgs and ConnectorProfileDatadogConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileDatadogConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileDatadogConnectorProfileCredentialsArgs{...}
type ConnectorProfileDatadogConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileDatadogConnectorProfileCredentialsOutput() ConnectorProfileDatadogConnectorProfileCredentialsOutput
	ToConnectorProfileDatadogConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileDatadogConnectorProfileCredentialsOutput
}

type ConnectorProfileDatadogConnectorProfileCredentialsArgs struct {
	// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
}

func (ConnectorProfileDatadogConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDatadogConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileDatadogConnectorProfileCredentialsArgs) ToConnectorProfileDatadogConnectorProfileCredentialsOutput() ConnectorProfileDatadogConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileDatadogConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileDatadogConnectorProfileCredentialsArgs) ToConnectorProfileDatadogConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDatadogConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileDatadogConnectorProfileCredentialsArgs) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutput() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileDatadogConnectorProfileCredentialsArgs) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDatadogConnectorProfileCredentialsOutput).ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileDatadogConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileDatadogConnectorProfileCredentialsArgs, ConnectorProfileDatadogConnectorProfileCredentialsPtr and ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileDatadogConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileDatadogConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileDatadogConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutput() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput
	ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput
}

type connectorProfileDatadogConnectorProfileCredentialsPtrType ConnectorProfileDatadogConnectorProfileCredentialsArgs

func ConnectorProfileDatadogConnectorProfileCredentialsPtr(v *ConnectorProfileDatadogConnectorProfileCredentialsArgs) ConnectorProfileDatadogConnectorProfileCredentialsPtrInput {
	return (*connectorProfileDatadogConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileDatadogConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDatadogConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileDatadogConnectorProfileCredentialsPtrType) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutput() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileDatadogConnectorProfileCredentialsPtrType) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileDatadogConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDatadogConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDatadogConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsOutput) ToConnectorProfileDatadogConnectorProfileCredentialsOutput() ConnectorProfileDatadogConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsOutput) ToConnectorProfileDatadogConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsOutput) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutput() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsOutput) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileDatadogConnectorProfileCredentials) *ConnectorProfileDatadogConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput)
}

// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileDatadogConnectorProfileCredentialsOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileDatadogConnectorProfileCredentials) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
func (o ConnectorProfileDatadogConnectorProfileCredentialsOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileDatadogConnectorProfileCredentials) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

type ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDatadogConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutput() ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput) ToConnectorProfileDatadogConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileDatadogConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileDatadogConnectorProfileCredentials) ConnectorProfileDatadogConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileDatadogConnectorProfileCredentials
		return ret
	}).(ConnectorProfileDatadogConnectorProfileCredentialsOutput)
}

// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileDatadogConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
func (o ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput) ApplicationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileDatadogConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileDatadogConnectorProfileProperties struct {
	// The location of the Datadog resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileDatadogConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileDatadogConnectorProfilePropertiesArgs and ConnectorProfileDatadogConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileDatadogConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileDatadogConnectorProfilePropertiesArgs{...}
type ConnectorProfileDatadogConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileDatadogConnectorProfilePropertiesOutput() ConnectorProfileDatadogConnectorProfilePropertiesOutput
	ToConnectorProfileDatadogConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileDatadogConnectorProfilePropertiesOutput
}

type ConnectorProfileDatadogConnectorProfilePropertiesArgs struct {
	// The location of the Datadog resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileDatadogConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDatadogConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileDatadogConnectorProfilePropertiesArgs) ToConnectorProfileDatadogConnectorProfilePropertiesOutput() ConnectorProfileDatadogConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileDatadogConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileDatadogConnectorProfilePropertiesArgs) ToConnectorProfileDatadogConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDatadogConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileDatadogConnectorProfilePropertiesArgs) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutput() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileDatadogConnectorProfilePropertiesArgs) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDatadogConnectorProfilePropertiesOutput).ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileDatadogConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileDatadogConnectorProfilePropertiesArgs, ConnectorProfileDatadogConnectorProfilePropertiesPtr and ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileDatadogConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileDatadogConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileDatadogConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutput() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput
	ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput
}

type connectorProfileDatadogConnectorProfilePropertiesPtrType ConnectorProfileDatadogConnectorProfilePropertiesArgs

func ConnectorProfileDatadogConnectorProfilePropertiesPtr(v *ConnectorProfileDatadogConnectorProfilePropertiesArgs) ConnectorProfileDatadogConnectorProfilePropertiesPtrInput {
	return (*connectorProfileDatadogConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileDatadogConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDatadogConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileDatadogConnectorProfilePropertiesPtrType) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutput() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileDatadogConnectorProfilePropertiesPtrType) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileDatadogConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDatadogConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDatadogConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesOutput) ToConnectorProfileDatadogConnectorProfilePropertiesOutput() ConnectorProfileDatadogConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesOutput) ToConnectorProfileDatadogConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesOutput) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutput() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesOutput) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileDatadogConnectorProfileProperties) *ConnectorProfileDatadogConnectorProfileProperties {
		return &v
	}).(ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput)
}

// The location of the Datadog resource
func (o ConnectorProfileDatadogConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileDatadogConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDatadogConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutput() ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput) ToConnectorProfileDatadogConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileDatadogConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileDatadogConnectorProfileProperties) ConnectorProfileDatadogConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileDatadogConnectorProfileProperties
		return ret
	}).(ConnectorProfileDatadogConnectorProfilePropertiesOutput)
}

// The location of the Datadog resource
func (o ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileDatadogConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileDynatraceConnectorProfileCredentials struct {
	// The API tokens used by Dynatrace API to authenticate various API calls.
	ApiToken string `pulumi:"apiToken"`
}

// ConnectorProfileDynatraceConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileDynatraceConnectorProfileCredentialsArgs and ConnectorProfileDynatraceConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileDynatraceConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileDynatraceConnectorProfileCredentialsArgs{...}
type ConnectorProfileDynatraceConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileDynatraceConnectorProfileCredentialsOutput() ConnectorProfileDynatraceConnectorProfileCredentialsOutput
	ToConnectorProfileDynatraceConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsOutput
}

type ConnectorProfileDynatraceConnectorProfileCredentialsArgs struct {
	// The API tokens used by Dynatrace API to authenticate various API calls.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
}

func (ConnectorProfileDynatraceConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDynatraceConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileDynatraceConnectorProfileCredentialsArgs) ToConnectorProfileDynatraceConnectorProfileCredentialsOutput() ConnectorProfileDynatraceConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileDynatraceConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileDynatraceConnectorProfileCredentialsArgs) ToConnectorProfileDynatraceConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDynatraceConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileDynatraceConnectorProfileCredentialsArgs) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileDynatraceConnectorProfileCredentialsArgs) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDynatraceConnectorProfileCredentialsOutput).ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileDynatraceConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileDynatraceConnectorProfileCredentialsArgs, ConnectorProfileDynatraceConnectorProfileCredentialsPtr and ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileDynatraceConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileDynatraceConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileDynatraceConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput
	ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput
}

type connectorProfileDynatraceConnectorProfileCredentialsPtrType ConnectorProfileDynatraceConnectorProfileCredentialsArgs

func ConnectorProfileDynatraceConnectorProfileCredentialsPtr(v *ConnectorProfileDynatraceConnectorProfileCredentialsArgs) ConnectorProfileDynatraceConnectorProfileCredentialsPtrInput {
	return (*connectorProfileDynatraceConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileDynatraceConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDynatraceConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileDynatraceConnectorProfileCredentialsPtrType) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileDynatraceConnectorProfileCredentialsPtrType) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileDynatraceConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDynatraceConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDynatraceConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsOutput) ToConnectorProfileDynatraceConnectorProfileCredentialsOutput() ConnectorProfileDynatraceConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsOutput) ToConnectorProfileDynatraceConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsOutput) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsOutput) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileDynatraceConnectorProfileCredentials) *ConnectorProfileDynatraceConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput)
}

// The API tokens used by Dynatrace API to authenticate various API calls.
func (o ConnectorProfileDynatraceConnectorProfileCredentialsOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileDynatraceConnectorProfileCredentials) string { return v.ApiToken }).(pulumi.StringOutput)
}

type ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDynatraceConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput() ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput) ToConnectorProfileDynatraceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileDynatraceConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileDynatraceConnectorProfileCredentials) ConnectorProfileDynatraceConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileDynatraceConnectorProfileCredentials
		return ret
	}).(ConnectorProfileDynatraceConnectorProfileCredentialsOutput)
}

// The API tokens used by Dynatrace API to authenticate various API calls.
func (o ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileDynatraceConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileDynatraceConnectorProfileProperties struct {
	// The location of the Dynatrace resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileDynatraceConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileDynatraceConnectorProfilePropertiesArgs and ConnectorProfileDynatraceConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileDynatraceConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileDynatraceConnectorProfilePropertiesArgs{...}
type ConnectorProfileDynatraceConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileDynatraceConnectorProfilePropertiesOutput() ConnectorProfileDynatraceConnectorProfilePropertiesOutput
	ToConnectorProfileDynatraceConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesOutput
}

type ConnectorProfileDynatraceConnectorProfilePropertiesArgs struct {
	// The location of the Dynatrace resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileDynatraceConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDynatraceConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileDynatraceConnectorProfilePropertiesArgs) ToConnectorProfileDynatraceConnectorProfilePropertiesOutput() ConnectorProfileDynatraceConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileDynatraceConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileDynatraceConnectorProfilePropertiesArgs) ToConnectorProfileDynatraceConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDynatraceConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileDynatraceConnectorProfilePropertiesArgs) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileDynatraceConnectorProfilePropertiesArgs) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDynatraceConnectorProfilePropertiesOutput).ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileDynatraceConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileDynatraceConnectorProfilePropertiesArgs, ConnectorProfileDynatraceConnectorProfilePropertiesPtr and ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileDynatraceConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileDynatraceConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileDynatraceConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput
	ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput
}

type connectorProfileDynatraceConnectorProfilePropertiesPtrType ConnectorProfileDynatraceConnectorProfilePropertiesArgs

func ConnectorProfileDynatraceConnectorProfilePropertiesPtr(v *ConnectorProfileDynatraceConnectorProfilePropertiesArgs) ConnectorProfileDynatraceConnectorProfilePropertiesPtrInput {
	return (*connectorProfileDynatraceConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileDynatraceConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDynatraceConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileDynatraceConnectorProfilePropertiesPtrType) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileDynatraceConnectorProfilePropertiesPtrType) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileDynatraceConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDynatraceConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileDynatraceConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesOutput) ToConnectorProfileDynatraceConnectorProfilePropertiesOutput() ConnectorProfileDynatraceConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesOutput) ToConnectorProfileDynatraceConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesOutput) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesOutput) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileDynatraceConnectorProfileProperties) *ConnectorProfileDynatraceConnectorProfileProperties {
		return &v
	}).(ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput)
}

// The location of the Dynatrace resource
func (o ConnectorProfileDynatraceConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileDynatraceConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileDynatraceConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput() ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput) ToConnectorProfileDynatraceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileDynatraceConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileDynatraceConnectorProfileProperties) ConnectorProfileDynatraceConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileDynatraceConnectorProfileProperties
		return ret
	}).(ConnectorProfileDynatraceConnectorProfilePropertiesOutput)
}

// The location of the Dynatrace resource
func (o ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileDynatraceConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileGoogleAnalyticsConnectorProfileCredentials struct {
	// The credentials used to access protected resources.
	AccessToken *string `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest *ConnectorProfileConnectorOAuthRequest `pulumi:"connectorOAuthRequest"`
	// The credentials used to acquire new access tokens.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs and ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs{...}
type ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput
	ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput
}

type ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs struct {
	// The credentials used to access protected resources.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest ConnectorProfileConnectorOAuthRequestPtrInput `pulumi:"connectorOAuthRequest"`
	// The credentials used to acquire new access tokens.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileGoogleAnalyticsConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput).ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs, ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtr and ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput
	ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput
}

type connectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrType ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs

func ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtr(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsArgs) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrInput {
	return (*connectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileGoogleAnalyticsConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrType) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrType) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileGoogleAnalyticsConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

// The credentials used to acquire new access tokens.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

type ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileGoogleAnalyticsConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) ToConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) ConnectorProfileGoogleAnalyticsConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileGoogleAnalyticsConnectorProfileCredentials
		return ret
	}).(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		if v == nil {
			return nil
		}
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

// The credentials used to acquire new access tokens.
func (o ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileGoogleAnalyticsConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileInforNexusConnectorProfileCredentials struct {
	// The Access Key portion of the credentials.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The encryption keys used to encrypt data.
	Datakey string `pulumi:"datakey"`
	// The secret key used to sign requests.
	SecretAccessKey string `pulumi:"secretAccessKey"`
	// The identiﬁer for the user.
	UserId string `pulumi:"userId"`
}

// ConnectorProfileInforNexusConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileInforNexusConnectorProfileCredentialsArgs and ConnectorProfileInforNexusConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileInforNexusConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileInforNexusConnectorProfileCredentialsArgs{...}
type ConnectorProfileInforNexusConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileInforNexusConnectorProfileCredentialsOutput() ConnectorProfileInforNexusConnectorProfileCredentialsOutput
	ToConnectorProfileInforNexusConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsOutput
}

type ConnectorProfileInforNexusConnectorProfileCredentialsArgs struct {
	// The Access Key portion of the credentials.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The encryption keys used to encrypt data.
	Datakey pulumi.StringInput `pulumi:"datakey"`
	// The secret key used to sign requests.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
	// The identiﬁer for the user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (ConnectorProfileInforNexusConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileInforNexusConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileInforNexusConnectorProfileCredentialsArgs) ToConnectorProfileInforNexusConnectorProfileCredentialsOutput() ConnectorProfileInforNexusConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileInforNexusConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileInforNexusConnectorProfileCredentialsArgs) ToConnectorProfileInforNexusConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileInforNexusConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileInforNexusConnectorProfileCredentialsArgs) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileInforNexusConnectorProfileCredentialsArgs) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileInforNexusConnectorProfileCredentialsOutput).ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileInforNexusConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileInforNexusConnectorProfileCredentialsArgs, ConnectorProfileInforNexusConnectorProfileCredentialsPtr and ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileInforNexusConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileInforNexusConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileInforNexusConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput
	ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput
}

type connectorProfileInforNexusConnectorProfileCredentialsPtrType ConnectorProfileInforNexusConnectorProfileCredentialsArgs

func ConnectorProfileInforNexusConnectorProfileCredentialsPtr(v *ConnectorProfileInforNexusConnectorProfileCredentialsArgs) ConnectorProfileInforNexusConnectorProfileCredentialsPtrInput {
	return (*connectorProfileInforNexusConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileInforNexusConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileInforNexusConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileInforNexusConnectorProfileCredentialsPtrType) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileInforNexusConnectorProfileCredentialsPtrType) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileInforNexusConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileInforNexusConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileInforNexusConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) ToConnectorProfileInforNexusConnectorProfileCredentialsOutput() ConnectorProfileInforNexusConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) ToConnectorProfileInforNexusConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileInforNexusConnectorProfileCredentials) *ConnectorProfileInforNexusConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput)
}

// The Access Key portion of the credentials.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileInforNexusConnectorProfileCredentials) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The encryption keys used to encrypt data.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) Datakey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileInforNexusConnectorProfileCredentials) string { return v.Datakey }).(pulumi.StringOutput)
}

// The secret key used to sign requests.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileInforNexusConnectorProfileCredentials) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

// The identiﬁer for the user.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileInforNexusConnectorProfileCredentials) string { return v.UserId }).(pulumi.StringOutput)
}

type ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileInforNexusConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput() ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) ToConnectorProfileInforNexusConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileInforNexusConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileCredentials) ConnectorProfileInforNexusConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileInforNexusConnectorProfileCredentials
		return ret
	}).(ConnectorProfileInforNexusConnectorProfileCredentialsOutput)
}

// The Access Key portion of the credentials.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The encryption keys used to encrypt data.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) Datakey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Datakey
	}).(pulumi.StringPtrOutput)
}

// The secret key used to sign requests.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// The identiﬁer for the user.
func (o ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileInforNexusConnectorProfileProperties struct {
	// The location of the InforNexus resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileInforNexusConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileInforNexusConnectorProfilePropertiesArgs and ConnectorProfileInforNexusConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileInforNexusConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileInforNexusConnectorProfilePropertiesArgs{...}
type ConnectorProfileInforNexusConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileInforNexusConnectorProfilePropertiesOutput() ConnectorProfileInforNexusConnectorProfilePropertiesOutput
	ToConnectorProfileInforNexusConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesOutput
}

type ConnectorProfileInforNexusConnectorProfilePropertiesArgs struct {
	// The location of the InforNexus resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileInforNexusConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileInforNexusConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileInforNexusConnectorProfilePropertiesArgs) ToConnectorProfileInforNexusConnectorProfilePropertiesOutput() ConnectorProfileInforNexusConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileInforNexusConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileInforNexusConnectorProfilePropertiesArgs) ToConnectorProfileInforNexusConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileInforNexusConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileInforNexusConnectorProfilePropertiesArgs) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileInforNexusConnectorProfilePropertiesArgs) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileInforNexusConnectorProfilePropertiesOutput).ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileInforNexusConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileInforNexusConnectorProfilePropertiesArgs, ConnectorProfileInforNexusConnectorProfilePropertiesPtr and ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileInforNexusConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileInforNexusConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileInforNexusConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput
	ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput
}

type connectorProfileInforNexusConnectorProfilePropertiesPtrType ConnectorProfileInforNexusConnectorProfilePropertiesArgs

func ConnectorProfileInforNexusConnectorProfilePropertiesPtr(v *ConnectorProfileInforNexusConnectorProfilePropertiesArgs) ConnectorProfileInforNexusConnectorProfilePropertiesPtrInput {
	return (*connectorProfileInforNexusConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileInforNexusConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileInforNexusConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileInforNexusConnectorProfilePropertiesPtrType) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileInforNexusConnectorProfilePropertiesPtrType) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileInforNexusConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileInforNexusConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileInforNexusConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesOutput) ToConnectorProfileInforNexusConnectorProfilePropertiesOutput() ConnectorProfileInforNexusConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesOutput) ToConnectorProfileInforNexusConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesOutput) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesOutput) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileInforNexusConnectorProfileProperties) *ConnectorProfileInforNexusConnectorProfileProperties {
		return &v
	}).(ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput)
}

// The location of the InforNexus resource
func (o ConnectorProfileInforNexusConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileInforNexusConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileInforNexusConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput() ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput) ToConnectorProfileInforNexusConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileInforNexusConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileProperties) ConnectorProfileInforNexusConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileInforNexusConnectorProfileProperties
		return ret
	}).(ConnectorProfileInforNexusConnectorProfilePropertiesOutput)
}

// The location of the InforNexus resource
func (o ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileInforNexusConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileMarketoConnectorProfileCredentials struct {
	// The credentials used to access protected resources.
	AccessToken *string `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest *ConnectorProfileConnectorOAuthRequest `pulumi:"connectorOAuthRequest"`
}

// ConnectorProfileMarketoConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileMarketoConnectorProfileCredentialsArgs and ConnectorProfileMarketoConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileMarketoConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileMarketoConnectorProfileCredentialsArgs{...}
type ConnectorProfileMarketoConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileMarketoConnectorProfileCredentialsOutput() ConnectorProfileMarketoConnectorProfileCredentialsOutput
	ToConnectorProfileMarketoConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileMarketoConnectorProfileCredentialsOutput
}

type ConnectorProfileMarketoConnectorProfileCredentialsArgs struct {
	// The credentials used to access protected resources.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest ConnectorProfileConnectorOAuthRequestPtrInput `pulumi:"connectorOAuthRequest"`
}

func (ConnectorProfileMarketoConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileMarketoConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileMarketoConnectorProfileCredentialsArgs) ToConnectorProfileMarketoConnectorProfileCredentialsOutput() ConnectorProfileMarketoConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileMarketoConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileMarketoConnectorProfileCredentialsArgs) ToConnectorProfileMarketoConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileMarketoConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileMarketoConnectorProfileCredentialsArgs) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutput() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileMarketoConnectorProfileCredentialsArgs) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileMarketoConnectorProfileCredentialsOutput).ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileMarketoConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileMarketoConnectorProfileCredentialsArgs, ConnectorProfileMarketoConnectorProfileCredentialsPtr and ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileMarketoConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileMarketoConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileMarketoConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutput() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput
	ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput
}

type connectorProfileMarketoConnectorProfileCredentialsPtrType ConnectorProfileMarketoConnectorProfileCredentialsArgs

func ConnectorProfileMarketoConnectorProfileCredentialsPtr(v *ConnectorProfileMarketoConnectorProfileCredentialsArgs) ConnectorProfileMarketoConnectorProfileCredentialsPtrInput {
	return (*connectorProfileMarketoConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileMarketoConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileMarketoConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileMarketoConnectorProfileCredentialsPtrType) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutput() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileMarketoConnectorProfileCredentialsPtrType) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileMarketoConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileMarketoConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileMarketoConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ToConnectorProfileMarketoConnectorProfileCredentialsOutput() ConnectorProfileMarketoConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ToConnectorProfileMarketoConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutput() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileMarketoConnectorProfileCredentials) *ConnectorProfileMarketoConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileMarketoConnectorProfileCredentials) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileMarketoConnectorProfileCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileMarketoConnectorProfileCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileMarketoConnectorProfileCredentialsOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileMarketoConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileMarketoConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutput() ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) ToConnectorProfileMarketoConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileMarketoConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileCredentials) ConnectorProfileMarketoConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileMarketoConnectorProfileCredentials
		return ret
	}).(ConnectorProfileMarketoConnectorProfileCredentialsOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		if v == nil {
			return nil
		}
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileMarketoConnectorProfileProperties struct {
	// The location of the Marketo resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileMarketoConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileMarketoConnectorProfilePropertiesArgs and ConnectorProfileMarketoConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileMarketoConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileMarketoConnectorProfilePropertiesArgs{...}
type ConnectorProfileMarketoConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileMarketoConnectorProfilePropertiesOutput() ConnectorProfileMarketoConnectorProfilePropertiesOutput
	ToConnectorProfileMarketoConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileMarketoConnectorProfilePropertiesOutput
}

type ConnectorProfileMarketoConnectorProfilePropertiesArgs struct {
	// The location of the Marketo resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileMarketoConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileMarketoConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileMarketoConnectorProfilePropertiesArgs) ToConnectorProfileMarketoConnectorProfilePropertiesOutput() ConnectorProfileMarketoConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileMarketoConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileMarketoConnectorProfilePropertiesArgs) ToConnectorProfileMarketoConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileMarketoConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileMarketoConnectorProfilePropertiesArgs) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutput() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileMarketoConnectorProfilePropertiesArgs) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileMarketoConnectorProfilePropertiesOutput).ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileMarketoConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileMarketoConnectorProfilePropertiesArgs, ConnectorProfileMarketoConnectorProfilePropertiesPtr and ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileMarketoConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileMarketoConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileMarketoConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutput() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput
	ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput
}

type connectorProfileMarketoConnectorProfilePropertiesPtrType ConnectorProfileMarketoConnectorProfilePropertiesArgs

func ConnectorProfileMarketoConnectorProfilePropertiesPtr(v *ConnectorProfileMarketoConnectorProfilePropertiesArgs) ConnectorProfileMarketoConnectorProfilePropertiesPtrInput {
	return (*connectorProfileMarketoConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileMarketoConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileMarketoConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileMarketoConnectorProfilePropertiesPtrType) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutput() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileMarketoConnectorProfilePropertiesPtrType) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileMarketoConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileMarketoConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileMarketoConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesOutput) ToConnectorProfileMarketoConnectorProfilePropertiesOutput() ConnectorProfileMarketoConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesOutput) ToConnectorProfileMarketoConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesOutput) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutput() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesOutput) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileMarketoConnectorProfileProperties) *ConnectorProfileMarketoConnectorProfileProperties {
		return &v
	}).(ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput)
}

// The location of the Marketo resource
func (o ConnectorProfileMarketoConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileMarketoConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileMarketoConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutput() ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput) ToConnectorProfileMarketoConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileMarketoConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileProperties) ConnectorProfileMarketoConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileMarketoConnectorProfileProperties
		return ret
	}).(ConnectorProfileMarketoConnectorProfilePropertiesOutput)
}

// The location of the Marketo resource
func (o ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileMarketoConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileRedshiftConnectorProfileCredentials struct {
	// The password that corresponds to the username.
	Password string `pulumi:"password"`
	// The name of the user.
	Username string `pulumi:"username"`
}

// ConnectorProfileRedshiftConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileRedshiftConnectorProfileCredentialsArgs and ConnectorProfileRedshiftConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileRedshiftConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileRedshiftConnectorProfileCredentialsArgs{...}
type ConnectorProfileRedshiftConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileRedshiftConnectorProfileCredentialsOutput() ConnectorProfileRedshiftConnectorProfileCredentialsOutput
	ToConnectorProfileRedshiftConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsOutput
}

type ConnectorProfileRedshiftConnectorProfileCredentialsArgs struct {
	// The password that corresponds to the username.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the user.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileRedshiftConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileRedshiftConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileRedshiftConnectorProfileCredentialsArgs) ToConnectorProfileRedshiftConnectorProfileCredentialsOutput() ConnectorProfileRedshiftConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileRedshiftConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileRedshiftConnectorProfileCredentialsArgs) ToConnectorProfileRedshiftConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileRedshiftConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileRedshiftConnectorProfileCredentialsArgs) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileRedshiftConnectorProfileCredentialsArgs) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileRedshiftConnectorProfileCredentialsOutput).ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileRedshiftConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileRedshiftConnectorProfileCredentialsArgs, ConnectorProfileRedshiftConnectorProfileCredentialsPtr and ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileRedshiftConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileRedshiftConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileRedshiftConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput
	ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput
}

type connectorProfileRedshiftConnectorProfileCredentialsPtrType ConnectorProfileRedshiftConnectorProfileCredentialsArgs

func ConnectorProfileRedshiftConnectorProfileCredentialsPtr(v *ConnectorProfileRedshiftConnectorProfileCredentialsArgs) ConnectorProfileRedshiftConnectorProfileCredentialsPtrInput {
	return (*connectorProfileRedshiftConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileRedshiftConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileRedshiftConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileRedshiftConnectorProfileCredentialsPtrType) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileRedshiftConnectorProfileCredentialsPtrType) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileRedshiftConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileRedshiftConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileRedshiftConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsOutput) ToConnectorProfileRedshiftConnectorProfileCredentialsOutput() ConnectorProfileRedshiftConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsOutput) ToConnectorProfileRedshiftConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsOutput) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsOutput) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileRedshiftConnectorProfileCredentials) *ConnectorProfileRedshiftConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileRedshiftConnectorProfileCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileRedshiftConnectorProfileCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the user.
func (o ConnectorProfileRedshiftConnectorProfileCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileRedshiftConnectorProfileCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileRedshiftConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput() ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput) ToConnectorProfileRedshiftConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileRedshiftConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileCredentials) ConnectorProfileRedshiftConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileRedshiftConnectorProfileCredentials
		return ret
	}).(ConnectorProfileRedshiftConnectorProfileCredentialsOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileRedshiftConnectorProfileProperties struct {
	// The name of the Amazon S3 bucket associated with Redshift.
	BucketName string `pulumi:"bucketName"`
	// The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// The JDBC URL of the Amazon Redshift cluster.
	DatabaseUrl string `pulumi:"databaseUrl"`
	// The Amazon Resource Name (ARN) of the IAM role.
	RoleArn string `pulumi:"roleArn"`
}

// ConnectorProfileRedshiftConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileRedshiftConnectorProfilePropertiesArgs and ConnectorProfileRedshiftConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileRedshiftConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileRedshiftConnectorProfilePropertiesArgs{...}
type ConnectorProfileRedshiftConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileRedshiftConnectorProfilePropertiesOutput() ConnectorProfileRedshiftConnectorProfilePropertiesOutput
	ToConnectorProfileRedshiftConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesOutput
}

type ConnectorProfileRedshiftConnectorProfilePropertiesArgs struct {
	// The name of the Amazon S3 bucket associated with Redshift.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// The JDBC URL of the Amazon Redshift cluster.
	DatabaseUrl pulumi.StringInput `pulumi:"databaseUrl"`
	// The Amazon Resource Name (ARN) of the IAM role.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (ConnectorProfileRedshiftConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileRedshiftConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileRedshiftConnectorProfilePropertiesArgs) ToConnectorProfileRedshiftConnectorProfilePropertiesOutput() ConnectorProfileRedshiftConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileRedshiftConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileRedshiftConnectorProfilePropertiesArgs) ToConnectorProfileRedshiftConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileRedshiftConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileRedshiftConnectorProfilePropertiesArgs) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileRedshiftConnectorProfilePropertiesArgs) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileRedshiftConnectorProfilePropertiesOutput).ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileRedshiftConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileRedshiftConnectorProfilePropertiesArgs, ConnectorProfileRedshiftConnectorProfilePropertiesPtr and ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileRedshiftConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileRedshiftConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileRedshiftConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput
	ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput
}

type connectorProfileRedshiftConnectorProfilePropertiesPtrType ConnectorProfileRedshiftConnectorProfilePropertiesArgs

func ConnectorProfileRedshiftConnectorProfilePropertiesPtr(v *ConnectorProfileRedshiftConnectorProfilePropertiesArgs) ConnectorProfileRedshiftConnectorProfilePropertiesPtrInput {
	return (*connectorProfileRedshiftConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileRedshiftConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileRedshiftConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileRedshiftConnectorProfilePropertiesPtrType) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileRedshiftConnectorProfilePropertiesPtrType) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileRedshiftConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileRedshiftConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileRedshiftConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) ToConnectorProfileRedshiftConnectorProfilePropertiesOutput() ConnectorProfileRedshiftConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) ToConnectorProfileRedshiftConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileRedshiftConnectorProfileProperties) *ConnectorProfileRedshiftConnectorProfileProperties {
		return &v
	}).(ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput)
}

// The name of the Amazon S3 bucket associated with Redshift.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileRedshiftConnectorProfileProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

// The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileRedshiftConnectorProfileProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// The JDBC URL of the Amazon Redshift cluster.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) DatabaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileRedshiftConnectorProfileProperties) string { return v.DatabaseUrl }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the IAM role.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileRedshiftConnectorProfileProperties) string { return v.RoleArn }).(pulumi.StringOutput)
}

type ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileRedshiftConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput() ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) ToConnectorProfileRedshiftConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileRedshiftConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileProperties) ConnectorProfileRedshiftConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileRedshiftConnectorProfileProperties
		return ret
	}).(ConnectorProfileRedshiftConnectorProfilePropertiesOutput)
}

// The name of the Amazon S3 bucket associated with Redshift.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The JDBC URL of the Amazon Redshift cluster.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) DatabaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseUrl
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role.
func (o ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileRedshiftConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileSalesforceConnectorProfileCredentials struct {
	// The credentials used to access protected resources.
	AccessToken *string `pulumi:"accessToken"`
	// The client credentials to fetch access token and refresh token.
	ClientCredentialsArn *string `pulumi:"clientCredentialsArn"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest *ConnectorProfileConnectorOAuthRequest `pulumi:"connectorOAuthRequest"`
	// The credentials used to acquire new access tokens.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ConnectorProfileSalesforceConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileSalesforceConnectorProfileCredentialsArgs and ConnectorProfileSalesforceConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileSalesforceConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileSalesforceConnectorProfileCredentialsArgs{...}
type ConnectorProfileSalesforceConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileSalesforceConnectorProfileCredentialsOutput() ConnectorProfileSalesforceConnectorProfileCredentialsOutput
	ToConnectorProfileSalesforceConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsOutput
}

type ConnectorProfileSalesforceConnectorProfileCredentialsArgs struct {
	// The credentials used to access protected resources.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The client credentials to fetch access token and refresh token.
	ClientCredentialsArn pulumi.StringPtrInput `pulumi:"clientCredentialsArn"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest ConnectorProfileConnectorOAuthRequestPtrInput `pulumi:"connectorOAuthRequest"`
	// The credentials used to acquire new access tokens.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ConnectorProfileSalesforceConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSalesforceConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileSalesforceConnectorProfileCredentialsArgs) ToConnectorProfileSalesforceConnectorProfileCredentialsOutput() ConnectorProfileSalesforceConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileSalesforceConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileSalesforceConnectorProfileCredentialsArgs) ToConnectorProfileSalesforceConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSalesforceConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileSalesforceConnectorProfileCredentialsArgs) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSalesforceConnectorProfileCredentialsArgs) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSalesforceConnectorProfileCredentialsOutput).ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileSalesforceConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileSalesforceConnectorProfileCredentialsArgs, ConnectorProfileSalesforceConnectorProfileCredentialsPtr and ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSalesforceConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileSalesforceConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSalesforceConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput
	ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput
}

type connectorProfileSalesforceConnectorProfileCredentialsPtrType ConnectorProfileSalesforceConnectorProfileCredentialsArgs

func ConnectorProfileSalesforceConnectorProfileCredentialsPtr(v *ConnectorProfileSalesforceConnectorProfileCredentialsArgs) ConnectorProfileSalesforceConnectorProfileCredentialsPtrInput {
	return (*connectorProfileSalesforceConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileSalesforceConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSalesforceConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileSalesforceConnectorProfileCredentialsPtrType) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSalesforceConnectorProfileCredentialsPtrType) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileSalesforceConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSalesforceConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ToConnectorProfileSalesforceConnectorProfileCredentialsOutput() ConnectorProfileSalesforceConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ToConnectorProfileSalesforceConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSalesforceConnectorProfileCredentials) *ConnectorProfileSalesforceConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSalesforceConnectorProfileCredentials) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The client credentials to fetch access token and refresh token.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ClientCredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSalesforceConnectorProfileCredentials) *string { return v.ClientCredentialsArn }).(pulumi.StringPtrOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSalesforceConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

// The credentials used to acquire new access tokens.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSalesforceConnectorProfileCredentials) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

type ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSalesforceConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput() ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) ToConnectorProfileSalesforceConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileSalesforceConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileCredentials) ConnectorProfileSalesforceConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSalesforceConnectorProfileCredentials
		return ret
	}).(ConnectorProfileSalesforceConnectorProfileCredentialsOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The client credentials to fetch access token and refresh token.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) ClientCredentialsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ClientCredentialsArn
	}).(pulumi.StringPtrOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		if v == nil {
			return nil
		}
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

// The credentials used to acquire new access tokens.
func (o ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileSalesforceConnectorProfileProperties struct {
	// The location of the Salesforce resource
	InstanceUrl          *string `pulumi:"instanceUrl"`
	IsSandboxEnvironment *bool   `pulumi:"isSandboxEnvironment"`
}

// ConnectorProfileSalesforceConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileSalesforceConnectorProfilePropertiesArgs and ConnectorProfileSalesforceConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileSalesforceConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileSalesforceConnectorProfilePropertiesArgs{...}
type ConnectorProfileSalesforceConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileSalesforceConnectorProfilePropertiesOutput() ConnectorProfileSalesforceConnectorProfilePropertiesOutput
	ToConnectorProfileSalesforceConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesOutput
}

type ConnectorProfileSalesforceConnectorProfilePropertiesArgs struct {
	// The location of the Salesforce resource
	InstanceUrl          pulumi.StringPtrInput `pulumi:"instanceUrl"`
	IsSandboxEnvironment pulumi.BoolPtrInput   `pulumi:"isSandboxEnvironment"`
}

func (ConnectorProfileSalesforceConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSalesforceConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileSalesforceConnectorProfilePropertiesArgs) ToConnectorProfileSalesforceConnectorProfilePropertiesOutput() ConnectorProfileSalesforceConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileSalesforceConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileSalesforceConnectorProfilePropertiesArgs) ToConnectorProfileSalesforceConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSalesforceConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileSalesforceConnectorProfilePropertiesArgs) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSalesforceConnectorProfilePropertiesArgs) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSalesforceConnectorProfilePropertiesOutput).ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileSalesforceConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileSalesforceConnectorProfilePropertiesArgs, ConnectorProfileSalesforceConnectorProfilePropertiesPtr and ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSalesforceConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileSalesforceConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSalesforceConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput
	ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput
}

type connectorProfileSalesforceConnectorProfilePropertiesPtrType ConnectorProfileSalesforceConnectorProfilePropertiesArgs

func ConnectorProfileSalesforceConnectorProfilePropertiesPtr(v *ConnectorProfileSalesforceConnectorProfilePropertiesArgs) ConnectorProfileSalesforceConnectorProfilePropertiesPtrInput {
	return (*connectorProfileSalesforceConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileSalesforceConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSalesforceConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileSalesforceConnectorProfilePropertiesPtrType) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSalesforceConnectorProfilePropertiesPtrType) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileSalesforceConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSalesforceConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSalesforceConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesOutput) ToConnectorProfileSalesforceConnectorProfilePropertiesOutput() ConnectorProfileSalesforceConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesOutput) ToConnectorProfileSalesforceConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesOutput) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesOutput) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSalesforceConnectorProfileProperties) *ConnectorProfileSalesforceConnectorProfileProperties {
		return &v
	}).(ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput)
}

// The location of the Salesforce resource
func (o ConnectorProfileSalesforceConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSalesforceConnectorProfileProperties) *string { return v.InstanceUrl }).(pulumi.StringPtrOutput)
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesOutput) IsSandboxEnvironment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSalesforceConnectorProfileProperties) *bool { return v.IsSandboxEnvironment }).(pulumi.BoolPtrOutput)
}

type ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSalesforceConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput() ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput) ToConnectorProfileSalesforceConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileSalesforceConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileProperties) ConnectorProfileSalesforceConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSalesforceConnectorProfileProperties
		return ret
	}).(ConnectorProfileSalesforceConnectorProfilePropertiesOutput)
}

// The location of the Salesforce resource
func (o ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput) IsSandboxEnvironment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSalesforceConnectorProfileProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsSandboxEnvironment
	}).(pulumi.BoolPtrOutput)
}

type ConnectorProfileServiceNowConnectorProfileCredentials struct {
	// The password that corresponds to the username.
	Password string `pulumi:"password"`
	// The name of the user.
	Username string `pulumi:"username"`
}

// ConnectorProfileServiceNowConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileServiceNowConnectorProfileCredentialsArgs and ConnectorProfileServiceNowConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileServiceNowConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileServiceNowConnectorProfileCredentialsArgs{...}
type ConnectorProfileServiceNowConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileServiceNowConnectorProfileCredentialsOutput() ConnectorProfileServiceNowConnectorProfileCredentialsOutput
	ToConnectorProfileServiceNowConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsOutput
}

type ConnectorProfileServiceNowConnectorProfileCredentialsArgs struct {
	// The password that corresponds to the username.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the user.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileServiceNowConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileServiceNowConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileServiceNowConnectorProfileCredentialsArgs) ToConnectorProfileServiceNowConnectorProfileCredentialsOutput() ConnectorProfileServiceNowConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileServiceNowConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileServiceNowConnectorProfileCredentialsArgs) ToConnectorProfileServiceNowConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileServiceNowConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileServiceNowConnectorProfileCredentialsArgs) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileServiceNowConnectorProfileCredentialsArgs) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileServiceNowConnectorProfileCredentialsOutput).ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileServiceNowConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileServiceNowConnectorProfileCredentialsArgs, ConnectorProfileServiceNowConnectorProfileCredentialsPtr and ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileServiceNowConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileServiceNowConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileServiceNowConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput
	ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput
}

type connectorProfileServiceNowConnectorProfileCredentialsPtrType ConnectorProfileServiceNowConnectorProfileCredentialsArgs

func ConnectorProfileServiceNowConnectorProfileCredentialsPtr(v *ConnectorProfileServiceNowConnectorProfileCredentialsArgs) ConnectorProfileServiceNowConnectorProfileCredentialsPtrInput {
	return (*connectorProfileServiceNowConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileServiceNowConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileServiceNowConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileServiceNowConnectorProfileCredentialsPtrType) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileServiceNowConnectorProfileCredentialsPtrType) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileServiceNowConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileServiceNowConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileServiceNowConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsOutput) ToConnectorProfileServiceNowConnectorProfileCredentialsOutput() ConnectorProfileServiceNowConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsOutput) ToConnectorProfileServiceNowConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsOutput) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsOutput) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileServiceNowConnectorProfileCredentials) *ConnectorProfileServiceNowConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileServiceNowConnectorProfileCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileServiceNowConnectorProfileCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the user.
func (o ConnectorProfileServiceNowConnectorProfileCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileServiceNowConnectorProfileCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileServiceNowConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput() ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput) ToConnectorProfileServiceNowConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileServiceNowConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileServiceNowConnectorProfileCredentials) ConnectorProfileServiceNowConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileServiceNowConnectorProfileCredentials
		return ret
	}).(ConnectorProfileServiceNowConnectorProfileCredentialsOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileServiceNowConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileServiceNowConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileServiceNowConnectorProfileProperties struct {
	// The location of the ServiceNow resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileServiceNowConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileServiceNowConnectorProfilePropertiesArgs and ConnectorProfileServiceNowConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileServiceNowConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileServiceNowConnectorProfilePropertiesArgs{...}
type ConnectorProfileServiceNowConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileServiceNowConnectorProfilePropertiesOutput() ConnectorProfileServiceNowConnectorProfilePropertiesOutput
	ToConnectorProfileServiceNowConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesOutput
}

type ConnectorProfileServiceNowConnectorProfilePropertiesArgs struct {
	// The location of the ServiceNow resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileServiceNowConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileServiceNowConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileServiceNowConnectorProfilePropertiesArgs) ToConnectorProfileServiceNowConnectorProfilePropertiesOutput() ConnectorProfileServiceNowConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileServiceNowConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileServiceNowConnectorProfilePropertiesArgs) ToConnectorProfileServiceNowConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileServiceNowConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileServiceNowConnectorProfilePropertiesArgs) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileServiceNowConnectorProfilePropertiesArgs) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileServiceNowConnectorProfilePropertiesOutput).ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileServiceNowConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileServiceNowConnectorProfilePropertiesArgs, ConnectorProfileServiceNowConnectorProfilePropertiesPtr and ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileServiceNowConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileServiceNowConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileServiceNowConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput
	ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput
}

type connectorProfileServiceNowConnectorProfilePropertiesPtrType ConnectorProfileServiceNowConnectorProfilePropertiesArgs

func ConnectorProfileServiceNowConnectorProfilePropertiesPtr(v *ConnectorProfileServiceNowConnectorProfilePropertiesArgs) ConnectorProfileServiceNowConnectorProfilePropertiesPtrInput {
	return (*connectorProfileServiceNowConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileServiceNowConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileServiceNowConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileServiceNowConnectorProfilePropertiesPtrType) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileServiceNowConnectorProfilePropertiesPtrType) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileServiceNowConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileServiceNowConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileServiceNowConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesOutput) ToConnectorProfileServiceNowConnectorProfilePropertiesOutput() ConnectorProfileServiceNowConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesOutput) ToConnectorProfileServiceNowConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesOutput) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesOutput) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileServiceNowConnectorProfileProperties) *ConnectorProfileServiceNowConnectorProfileProperties {
		return &v
	}).(ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput)
}

// The location of the ServiceNow resource
func (o ConnectorProfileServiceNowConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileServiceNowConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileServiceNowConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput() ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput) ToConnectorProfileServiceNowConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileServiceNowConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileServiceNowConnectorProfileProperties) ConnectorProfileServiceNowConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileServiceNowConnectorProfileProperties
		return ret
	}).(ConnectorProfileServiceNowConnectorProfilePropertiesOutput)
}

// The location of the ServiceNow resource
func (o ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileServiceNowConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileSingularConnectorProfileCredentials struct {
	// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
	ApiKey string `pulumi:"apiKey"`
}

// ConnectorProfileSingularConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileSingularConnectorProfileCredentialsArgs and ConnectorProfileSingularConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileSingularConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileSingularConnectorProfileCredentialsArgs{...}
type ConnectorProfileSingularConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileSingularConnectorProfileCredentialsOutput() ConnectorProfileSingularConnectorProfileCredentialsOutput
	ToConnectorProfileSingularConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileSingularConnectorProfileCredentialsOutput
}

type ConnectorProfileSingularConnectorProfileCredentialsArgs struct {
	// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
}

func (ConnectorProfileSingularConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSingularConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileSingularConnectorProfileCredentialsArgs) ToConnectorProfileSingularConnectorProfileCredentialsOutput() ConnectorProfileSingularConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileSingularConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileSingularConnectorProfileCredentialsArgs) ToConnectorProfileSingularConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSingularConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSingularConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileSingularConnectorProfileCredentialsArgs) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutput() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSingularConnectorProfileCredentialsArgs) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSingularConnectorProfileCredentialsOutput).ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileSingularConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileSingularConnectorProfileCredentialsArgs, ConnectorProfileSingularConnectorProfileCredentialsPtr and ConnectorProfileSingularConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSingularConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileSingularConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSingularConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileSingularConnectorProfileCredentialsPtrOutput() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput
	ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileSingularConnectorProfileCredentialsPtrOutput
}

type connectorProfileSingularConnectorProfileCredentialsPtrType ConnectorProfileSingularConnectorProfileCredentialsArgs

func ConnectorProfileSingularConnectorProfileCredentialsPtr(v *ConnectorProfileSingularConnectorProfileCredentialsArgs) ConnectorProfileSingularConnectorProfileCredentialsPtrInput {
	return (*connectorProfileSingularConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileSingularConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSingularConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileSingularConnectorProfileCredentialsPtrType) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutput() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSingularConnectorProfileCredentialsPtrType) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSingularConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileSingularConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSingularConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSingularConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSingularConnectorProfileCredentialsOutput) ToConnectorProfileSingularConnectorProfileCredentialsOutput() ConnectorProfileSingularConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSingularConnectorProfileCredentialsOutput) ToConnectorProfileSingularConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSingularConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSingularConnectorProfileCredentialsOutput) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutput() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSingularConnectorProfileCredentialsOutput) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSingularConnectorProfileCredentials) *ConnectorProfileSingularConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileSingularConnectorProfileCredentialsPtrOutput)
}

// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileSingularConnectorProfileCredentialsOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSingularConnectorProfileCredentials) string { return v.ApiKey }).(pulumi.StringOutput)
}

type ConnectorProfileSingularConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSingularConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSingularConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSingularConnectorProfileCredentialsPtrOutput) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutput() ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSingularConnectorProfileCredentialsPtrOutput) ToConnectorProfileSingularConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSingularConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSingularConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileSingularConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileSingularConnectorProfileCredentials) ConnectorProfileSingularConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSingularConnectorProfileCredentials
		return ret
	}).(ConnectorProfileSingularConnectorProfileCredentialsOutput)
}

// A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
func (o ConnectorProfileSingularConnectorProfileCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSingularConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileSlackConnectorProfileCredentials struct {
	// The credentials used to access protected resources.
	AccessToken *string `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest *ConnectorProfileConnectorOAuthRequest `pulumi:"connectorOAuthRequest"`
}

// ConnectorProfileSlackConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileSlackConnectorProfileCredentialsArgs and ConnectorProfileSlackConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileSlackConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileSlackConnectorProfileCredentialsArgs{...}
type ConnectorProfileSlackConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileSlackConnectorProfileCredentialsOutput() ConnectorProfileSlackConnectorProfileCredentialsOutput
	ToConnectorProfileSlackConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileSlackConnectorProfileCredentialsOutput
}

type ConnectorProfileSlackConnectorProfileCredentialsArgs struct {
	// The credentials used to access protected resources.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest ConnectorProfileConnectorOAuthRequestPtrInput `pulumi:"connectorOAuthRequest"`
}

func (ConnectorProfileSlackConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSlackConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileSlackConnectorProfileCredentialsArgs) ToConnectorProfileSlackConnectorProfileCredentialsOutput() ConnectorProfileSlackConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileSlackConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileSlackConnectorProfileCredentialsArgs) ToConnectorProfileSlackConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSlackConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileSlackConnectorProfileCredentialsArgs) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutput() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSlackConnectorProfileCredentialsArgs) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSlackConnectorProfileCredentialsOutput).ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileSlackConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileSlackConnectorProfileCredentialsArgs, ConnectorProfileSlackConnectorProfileCredentialsPtr and ConnectorProfileSlackConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSlackConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileSlackConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSlackConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileSlackConnectorProfileCredentialsPtrOutput() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput
	ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileSlackConnectorProfileCredentialsPtrOutput
}

type connectorProfileSlackConnectorProfileCredentialsPtrType ConnectorProfileSlackConnectorProfileCredentialsArgs

func ConnectorProfileSlackConnectorProfileCredentialsPtr(v *ConnectorProfileSlackConnectorProfileCredentialsArgs) ConnectorProfileSlackConnectorProfileCredentialsPtrInput {
	return (*connectorProfileSlackConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileSlackConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSlackConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileSlackConnectorProfileCredentialsPtrType) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutput() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSlackConnectorProfileCredentialsPtrType) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSlackConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileSlackConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSlackConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSlackConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ToConnectorProfileSlackConnectorProfileCredentialsOutput() ConnectorProfileSlackConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ToConnectorProfileSlackConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutput() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSlackConnectorProfileCredentials) *ConnectorProfileSlackConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileSlackConnectorProfileCredentialsPtrOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSlackConnectorProfileCredentials) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSlackConnectorProfileCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSlackConnectorProfileCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileSlackConnectorProfileCredentialsOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSlackConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileSlackConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSlackConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutput() ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) ToConnectorProfileSlackConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileSlackConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileCredentials) ConnectorProfileSlackConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSlackConnectorProfileCredentials
		return ret
	}).(ConnectorProfileSlackConnectorProfileCredentialsOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileSlackConnectorProfileCredentialsPtrOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		if v == nil {
			return nil
		}
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileSlackConnectorProfileProperties struct {
	// The location of the Slack resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileSlackConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileSlackConnectorProfilePropertiesArgs and ConnectorProfileSlackConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileSlackConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileSlackConnectorProfilePropertiesArgs{...}
type ConnectorProfileSlackConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileSlackConnectorProfilePropertiesOutput() ConnectorProfileSlackConnectorProfilePropertiesOutput
	ToConnectorProfileSlackConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileSlackConnectorProfilePropertiesOutput
}

type ConnectorProfileSlackConnectorProfilePropertiesArgs struct {
	// The location of the Slack resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileSlackConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSlackConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileSlackConnectorProfilePropertiesArgs) ToConnectorProfileSlackConnectorProfilePropertiesOutput() ConnectorProfileSlackConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileSlackConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileSlackConnectorProfilePropertiesArgs) ToConnectorProfileSlackConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSlackConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileSlackConnectorProfilePropertiesArgs) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutput() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSlackConnectorProfilePropertiesArgs) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSlackConnectorProfilePropertiesOutput).ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileSlackConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileSlackConnectorProfilePropertiesArgs, ConnectorProfileSlackConnectorProfilePropertiesPtr and ConnectorProfileSlackConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSlackConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileSlackConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSlackConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileSlackConnectorProfilePropertiesPtrOutput() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput
	ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileSlackConnectorProfilePropertiesPtrOutput
}

type connectorProfileSlackConnectorProfilePropertiesPtrType ConnectorProfileSlackConnectorProfilePropertiesArgs

func ConnectorProfileSlackConnectorProfilePropertiesPtr(v *ConnectorProfileSlackConnectorProfilePropertiesArgs) ConnectorProfileSlackConnectorProfilePropertiesPtrInput {
	return (*connectorProfileSlackConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileSlackConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSlackConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileSlackConnectorProfilePropertiesPtrType) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutput() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSlackConnectorProfilePropertiesPtrType) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSlackConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileSlackConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSlackConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSlackConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileSlackConnectorProfilePropertiesOutput) ToConnectorProfileSlackConnectorProfilePropertiesOutput() ConnectorProfileSlackConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfilePropertiesOutput) ToConnectorProfileSlackConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfilePropertiesOutput) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutput() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSlackConnectorProfilePropertiesOutput) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSlackConnectorProfileProperties) *ConnectorProfileSlackConnectorProfileProperties {
		return &v
	}).(ConnectorProfileSlackConnectorProfilePropertiesPtrOutput)
}

// The location of the Slack resource
func (o ConnectorProfileSlackConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSlackConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileSlackConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSlackConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSlackConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileSlackConnectorProfilePropertiesPtrOutput) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutput() ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfilePropertiesPtrOutput) ToConnectorProfileSlackConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSlackConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileSlackConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileSlackConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileProperties) ConnectorProfileSlackConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSlackConnectorProfileProperties
		return ret
	}).(ConnectorProfileSlackConnectorProfilePropertiesOutput)
}

// The location of the Slack resource
func (o ConnectorProfileSlackConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSlackConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileSnowflakeConnectorProfileCredentials struct {
	// The password that corresponds to the username.
	Password string `pulumi:"password"`
	// The name of the user.
	Username string `pulumi:"username"`
}

// ConnectorProfileSnowflakeConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileSnowflakeConnectorProfileCredentialsArgs and ConnectorProfileSnowflakeConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileSnowflakeConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileSnowflakeConnectorProfileCredentialsArgs{...}
type ConnectorProfileSnowflakeConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileSnowflakeConnectorProfileCredentialsOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsOutput
	ToConnectorProfileSnowflakeConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsOutput
}

type ConnectorProfileSnowflakeConnectorProfileCredentialsArgs struct {
	// The password that corresponds to the username.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the user.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileSnowflakeConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSnowflakeConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileSnowflakeConnectorProfileCredentialsArgs) ToConnectorProfileSnowflakeConnectorProfileCredentialsOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileSnowflakeConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileSnowflakeConnectorProfileCredentialsArgs) ToConnectorProfileSnowflakeConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSnowflakeConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileSnowflakeConnectorProfileCredentialsArgs) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSnowflakeConnectorProfileCredentialsArgs) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSnowflakeConnectorProfileCredentialsOutput).ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileSnowflakeConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileSnowflakeConnectorProfileCredentialsArgs, ConnectorProfileSnowflakeConnectorProfileCredentialsPtr and ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSnowflakeConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileSnowflakeConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSnowflakeConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput
	ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput
}

type connectorProfileSnowflakeConnectorProfileCredentialsPtrType ConnectorProfileSnowflakeConnectorProfileCredentialsArgs

func ConnectorProfileSnowflakeConnectorProfileCredentialsPtr(v *ConnectorProfileSnowflakeConnectorProfileCredentialsArgs) ConnectorProfileSnowflakeConnectorProfileCredentialsPtrInput {
	return (*connectorProfileSnowflakeConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileSnowflakeConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSnowflakeConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileSnowflakeConnectorProfileCredentialsPtrType) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSnowflakeConnectorProfileCredentialsPtrType) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileSnowflakeConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSnowflakeConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) ToConnectorProfileSnowflakeConnectorProfileCredentialsOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) ToConnectorProfileSnowflakeConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSnowflakeConnectorProfileCredentials) *ConnectorProfileSnowflakeConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the user.
func (o ConnectorProfileSnowflakeConnectorProfileCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSnowflakeConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput() ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput) ToConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileSnowflakeConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileCredentials) ConnectorProfileSnowflakeConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSnowflakeConnectorProfileCredentials
		return ret
	}).(ConnectorProfileSnowflakeConnectorProfileCredentialsOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileSnowflakeConnectorProfileProperties struct {
	// The name of the account.
	AccountName *string `pulumi:"accountName"`
	// The name of the Amazon S3 bucket associated with Snowﬂake.
	BucketName string `pulumi:"bucketName"`
	// The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// The Snowﬂake Private Link service name to be used for private data transfers.
	PrivateLinkServiceName *string `pulumi:"privateLinkServiceName"`
	// The region of the Snowﬂake account.
	Region *string `pulumi:"region"`
	// The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
	// Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
	Stage string `pulumi:"stage"`
	// The name of the Snowﬂake warehouse.
	Warehouse string `pulumi:"warehouse"`
}

// ConnectorProfileSnowflakeConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileSnowflakeConnectorProfilePropertiesArgs and ConnectorProfileSnowflakeConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileSnowflakeConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileSnowflakeConnectorProfilePropertiesArgs{...}
type ConnectorProfileSnowflakeConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileSnowflakeConnectorProfilePropertiesOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesOutput
	ToConnectorProfileSnowflakeConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesOutput
}

type ConnectorProfileSnowflakeConnectorProfilePropertiesArgs struct {
	// The name of the account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// The name of the Amazon S3 bucket associated with Snowﬂake.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// The Snowﬂake Private Link service name to be used for private data transfers.
	PrivateLinkServiceName pulumi.StringPtrInput `pulumi:"privateLinkServiceName"`
	// The region of the Snowﬂake account.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
	// Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
	Stage pulumi.StringInput `pulumi:"stage"`
	// The name of the Snowﬂake warehouse.
	Warehouse pulumi.StringInput `pulumi:"warehouse"`
}

func (ConnectorProfileSnowflakeConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSnowflakeConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileSnowflakeConnectorProfilePropertiesArgs) ToConnectorProfileSnowflakeConnectorProfilePropertiesOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileSnowflakeConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileSnowflakeConnectorProfilePropertiesArgs) ToConnectorProfileSnowflakeConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSnowflakeConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileSnowflakeConnectorProfilePropertiesArgs) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileSnowflakeConnectorProfilePropertiesArgs) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSnowflakeConnectorProfilePropertiesOutput).ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileSnowflakeConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileSnowflakeConnectorProfilePropertiesArgs, ConnectorProfileSnowflakeConnectorProfilePropertiesPtr and ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileSnowflakeConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileSnowflakeConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileSnowflakeConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput
	ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput
}

type connectorProfileSnowflakeConnectorProfilePropertiesPtrType ConnectorProfileSnowflakeConnectorProfilePropertiesArgs

func ConnectorProfileSnowflakeConnectorProfilePropertiesPtr(v *ConnectorProfileSnowflakeConnectorProfilePropertiesArgs) ConnectorProfileSnowflakeConnectorProfilePropertiesPtrInput {
	return (*connectorProfileSnowflakeConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileSnowflakeConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSnowflakeConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileSnowflakeConnectorProfilePropertiesPtrType) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileSnowflakeConnectorProfilePropertiesPtrType) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileSnowflakeConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileSnowflakeConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) ToConnectorProfileSnowflakeConnectorProfilePropertiesOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) ToConnectorProfileSnowflakeConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileSnowflakeConnectorProfileProperties) *ConnectorProfileSnowflakeConnectorProfileProperties {
		return &v
	}).(ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput)
}

// The name of the account.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The name of the Amazon S3 bucket associated with Snowﬂake.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

// The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// The Snowﬂake Private Link service name to be used for private data transfers.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) PrivateLinkServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) *string { return v.PrivateLinkServiceName }).(pulumi.StringPtrOutput)
}

// The region of the Snowﬂake account.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
// Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) string { return v.Stage }).(pulumi.StringOutput)
}

// The name of the Snowﬂake warehouse.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileSnowflakeConnectorProfileProperties) string { return v.Warehouse }).(pulumi.StringOutput)
}

type ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileSnowflakeConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput() ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) ToConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileSnowflakeConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) ConnectorProfileSnowflakeConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileSnowflakeConnectorProfileProperties
		return ret
	}).(ConnectorProfileSnowflakeConnectorProfilePropertiesOutput)
}

// The name of the account.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon S3 bucket associated with Snowﬂake.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The Snowﬂake Private Link service name to be used for private data transfers.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) PrivateLinkServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceName
	}).(pulumi.StringPtrOutput)
}

// The region of the Snowﬂake account.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
// Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Stage
	}).(pulumi.StringPtrOutput)
}

// The name of the Snowﬂake warehouse.
func (o ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput) Warehouse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileSnowflakeConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Warehouse
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileTrendmicroConnectorProfileCredentials struct {
	// The Secret Access Key portion of the credentials.
	ApiSecretKey string `pulumi:"apiSecretKey"`
}

// ConnectorProfileTrendmicroConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileTrendmicroConnectorProfileCredentialsArgs and ConnectorProfileTrendmicroConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileTrendmicroConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileTrendmicroConnectorProfileCredentialsArgs{...}
type ConnectorProfileTrendmicroConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileTrendmicroConnectorProfileCredentialsOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsOutput
	ToConnectorProfileTrendmicroConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsOutput
}

type ConnectorProfileTrendmicroConnectorProfileCredentialsArgs struct {
	// The Secret Access Key portion of the credentials.
	ApiSecretKey pulumi.StringInput `pulumi:"apiSecretKey"`
}

func (ConnectorProfileTrendmicroConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileTrendmicroConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileTrendmicroConnectorProfileCredentialsArgs) ToConnectorProfileTrendmicroConnectorProfileCredentialsOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileTrendmicroConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileTrendmicroConnectorProfileCredentialsArgs) ToConnectorProfileTrendmicroConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileTrendmicroConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileTrendmicroConnectorProfileCredentialsArgs) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileTrendmicroConnectorProfileCredentialsArgs) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileTrendmicroConnectorProfileCredentialsOutput).ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileTrendmicroConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileTrendmicroConnectorProfileCredentialsArgs, ConnectorProfileTrendmicroConnectorProfileCredentialsPtr and ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileTrendmicroConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileTrendmicroConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileTrendmicroConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput
	ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput
}

type connectorProfileTrendmicroConnectorProfileCredentialsPtrType ConnectorProfileTrendmicroConnectorProfileCredentialsArgs

func ConnectorProfileTrendmicroConnectorProfileCredentialsPtr(v *ConnectorProfileTrendmicroConnectorProfileCredentialsArgs) ConnectorProfileTrendmicroConnectorProfileCredentialsPtrInput {
	return (*connectorProfileTrendmicroConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileTrendmicroConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileTrendmicroConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileTrendmicroConnectorProfileCredentialsPtrType) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileTrendmicroConnectorProfileCredentialsPtrType) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileTrendmicroConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileTrendmicroConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileTrendmicroConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsOutput) ToConnectorProfileTrendmicroConnectorProfileCredentialsOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsOutput) ToConnectorProfileTrendmicroConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsOutput) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsOutput) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileTrendmicroConnectorProfileCredentials) *ConnectorProfileTrendmicroConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput)
}

// The Secret Access Key portion of the credentials.
func (o ConnectorProfileTrendmicroConnectorProfileCredentialsOutput) ApiSecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileTrendmicroConnectorProfileCredentials) string { return v.ApiSecretKey }).(pulumi.StringOutput)
}

type ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileTrendmicroConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput() ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput) ToConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileTrendmicroConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileTrendmicroConnectorProfileCredentials) ConnectorProfileTrendmicroConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileTrendmicroConnectorProfileCredentials
		return ret
	}).(ConnectorProfileTrendmicroConnectorProfileCredentialsOutput)
}

// The Secret Access Key portion of the credentials.
func (o ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput) ApiSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileTrendmicroConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiSecretKey
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileVeevaConnectorProfileCredentials struct {
	// The password that corresponds to the username.
	Password string `pulumi:"password"`
	// The name of the user.
	Username string `pulumi:"username"`
}

// ConnectorProfileVeevaConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileVeevaConnectorProfileCredentialsArgs and ConnectorProfileVeevaConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileVeevaConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileVeevaConnectorProfileCredentialsArgs{...}
type ConnectorProfileVeevaConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileVeevaConnectorProfileCredentialsOutput() ConnectorProfileVeevaConnectorProfileCredentialsOutput
	ToConnectorProfileVeevaConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileVeevaConnectorProfileCredentialsOutput
}

type ConnectorProfileVeevaConnectorProfileCredentialsArgs struct {
	// The password that corresponds to the username.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the user.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectorProfileVeevaConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileVeevaConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileVeevaConnectorProfileCredentialsArgs) ToConnectorProfileVeevaConnectorProfileCredentialsOutput() ConnectorProfileVeevaConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileVeevaConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileVeevaConnectorProfileCredentialsArgs) ToConnectorProfileVeevaConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileVeevaConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileVeevaConnectorProfileCredentialsArgs) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutput() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileVeevaConnectorProfileCredentialsArgs) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileVeevaConnectorProfileCredentialsOutput).ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileVeevaConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileVeevaConnectorProfileCredentialsArgs, ConnectorProfileVeevaConnectorProfileCredentialsPtr and ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileVeevaConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileVeevaConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileVeevaConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutput() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput
	ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput
}

type connectorProfileVeevaConnectorProfileCredentialsPtrType ConnectorProfileVeevaConnectorProfileCredentialsArgs

func ConnectorProfileVeevaConnectorProfileCredentialsPtr(v *ConnectorProfileVeevaConnectorProfileCredentialsArgs) ConnectorProfileVeevaConnectorProfileCredentialsPtrInput {
	return (*connectorProfileVeevaConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileVeevaConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileVeevaConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileVeevaConnectorProfileCredentialsPtrType) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutput() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileVeevaConnectorProfileCredentialsPtrType) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileVeevaConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileVeevaConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileVeevaConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsOutput) ToConnectorProfileVeevaConnectorProfileCredentialsOutput() ConnectorProfileVeevaConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsOutput) ToConnectorProfileVeevaConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsOutput) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutput() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsOutput) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileVeevaConnectorProfileCredentials) *ConnectorProfileVeevaConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileVeevaConnectorProfileCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileVeevaConnectorProfileCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the user.
func (o ConnectorProfileVeevaConnectorProfileCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileVeevaConnectorProfileCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileVeevaConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutput() ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput) ToConnectorProfileVeevaConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileVeevaConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileVeevaConnectorProfileCredentials) ConnectorProfileVeevaConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileVeevaConnectorProfileCredentials
		return ret
	}).(ConnectorProfileVeevaConnectorProfileCredentialsOutput)
}

// The password that corresponds to the username.
func (o ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileVeevaConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileVeevaConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileVeevaConnectorProfileProperties struct {
	// The location of the Veeva resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileVeevaConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileVeevaConnectorProfilePropertiesArgs and ConnectorProfileVeevaConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileVeevaConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileVeevaConnectorProfilePropertiesArgs{...}
type ConnectorProfileVeevaConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileVeevaConnectorProfilePropertiesOutput() ConnectorProfileVeevaConnectorProfilePropertiesOutput
	ToConnectorProfileVeevaConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileVeevaConnectorProfilePropertiesOutput
}

type ConnectorProfileVeevaConnectorProfilePropertiesArgs struct {
	// The location of the Veeva resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileVeevaConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileVeevaConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileVeevaConnectorProfilePropertiesArgs) ToConnectorProfileVeevaConnectorProfilePropertiesOutput() ConnectorProfileVeevaConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileVeevaConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileVeevaConnectorProfilePropertiesArgs) ToConnectorProfileVeevaConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileVeevaConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileVeevaConnectorProfilePropertiesArgs) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutput() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileVeevaConnectorProfilePropertiesArgs) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileVeevaConnectorProfilePropertiesOutput).ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileVeevaConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileVeevaConnectorProfilePropertiesArgs, ConnectorProfileVeevaConnectorProfilePropertiesPtr and ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileVeevaConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileVeevaConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileVeevaConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutput() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput
	ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput
}

type connectorProfileVeevaConnectorProfilePropertiesPtrType ConnectorProfileVeevaConnectorProfilePropertiesArgs

func ConnectorProfileVeevaConnectorProfilePropertiesPtr(v *ConnectorProfileVeevaConnectorProfilePropertiesArgs) ConnectorProfileVeevaConnectorProfilePropertiesPtrInput {
	return (*connectorProfileVeevaConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileVeevaConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileVeevaConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileVeevaConnectorProfilePropertiesPtrType) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutput() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileVeevaConnectorProfilePropertiesPtrType) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileVeevaConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileVeevaConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileVeevaConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesOutput) ToConnectorProfileVeevaConnectorProfilePropertiesOutput() ConnectorProfileVeevaConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesOutput) ToConnectorProfileVeevaConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesOutput) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutput() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesOutput) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileVeevaConnectorProfileProperties) *ConnectorProfileVeevaConnectorProfileProperties {
		return &v
	}).(ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput)
}

// The location of the Veeva resource
func (o ConnectorProfileVeevaConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileVeevaConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileVeevaConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutput() ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput) ToConnectorProfileVeevaConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileVeevaConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileVeevaConnectorProfileProperties) ConnectorProfileVeevaConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileVeevaConnectorProfileProperties
		return ret
	}).(ConnectorProfileVeevaConnectorProfilePropertiesOutput)
}

// The location of the Veeva resource
func (o ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileVeevaConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type ConnectorProfileZendeskConnectorProfileCredentials struct {
	// The credentials used to access protected resources.
	AccessToken *string `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId string `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret string `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest *ConnectorProfileConnectorOAuthRequest `pulumi:"connectorOAuthRequest"`
}

// ConnectorProfileZendeskConnectorProfileCredentialsInput is an input type that accepts ConnectorProfileZendeskConnectorProfileCredentialsArgs and ConnectorProfileZendeskConnectorProfileCredentialsOutput values.
// You can construct a concrete instance of `ConnectorProfileZendeskConnectorProfileCredentialsInput` via:
//
//          ConnectorProfileZendeskConnectorProfileCredentialsArgs{...}
type ConnectorProfileZendeskConnectorProfileCredentialsInput interface {
	pulumi.Input

	ToConnectorProfileZendeskConnectorProfileCredentialsOutput() ConnectorProfileZendeskConnectorProfileCredentialsOutput
	ToConnectorProfileZendeskConnectorProfileCredentialsOutputWithContext(context.Context) ConnectorProfileZendeskConnectorProfileCredentialsOutput
}

type ConnectorProfileZendeskConnectorProfileCredentialsArgs struct {
	// The credentials used to access protected resources.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// The identiﬁer for the desired client.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret used by the oauth client to authenticate to the authorization server.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The oauth needed to request security tokens from the connector endpoint.
	ConnectorOAuthRequest ConnectorProfileConnectorOAuthRequestPtrInput `pulumi:"connectorOAuthRequest"`
}

func (ConnectorProfileZendeskConnectorProfileCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileZendeskConnectorProfileCredentials)(nil)).Elem()
}

func (i ConnectorProfileZendeskConnectorProfileCredentialsArgs) ToConnectorProfileZendeskConnectorProfileCredentialsOutput() ConnectorProfileZendeskConnectorProfileCredentialsOutput {
	return i.ToConnectorProfileZendeskConnectorProfileCredentialsOutputWithContext(context.Background())
}

func (i ConnectorProfileZendeskConnectorProfileCredentialsArgs) ToConnectorProfileZendeskConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfileCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileZendeskConnectorProfileCredentialsOutput)
}

func (i ConnectorProfileZendeskConnectorProfileCredentialsArgs) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutput() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileZendeskConnectorProfileCredentialsArgs) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileZendeskConnectorProfileCredentialsOutput).ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(ctx)
}

// ConnectorProfileZendeskConnectorProfileCredentialsPtrInput is an input type that accepts ConnectorProfileZendeskConnectorProfileCredentialsArgs, ConnectorProfileZendeskConnectorProfileCredentialsPtr and ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileZendeskConnectorProfileCredentialsPtrInput` via:
//
//          ConnectorProfileZendeskConnectorProfileCredentialsArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileZendeskConnectorProfileCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutput() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput
	ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(context.Context) ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput
}

type connectorProfileZendeskConnectorProfileCredentialsPtrType ConnectorProfileZendeskConnectorProfileCredentialsArgs

func ConnectorProfileZendeskConnectorProfileCredentialsPtr(v *ConnectorProfileZendeskConnectorProfileCredentialsArgs) ConnectorProfileZendeskConnectorProfileCredentialsPtrInput {
	return (*connectorProfileZendeskConnectorProfileCredentialsPtrType)(v)
}

func (*connectorProfileZendeskConnectorProfileCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileZendeskConnectorProfileCredentials)(nil)).Elem()
}

func (i *connectorProfileZendeskConnectorProfileCredentialsPtrType) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutput() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return i.ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorProfileZendeskConnectorProfileCredentialsPtrType) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput)
}

type ConnectorProfileZendeskConnectorProfileCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorProfileZendeskConnectorProfileCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileZendeskConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ToConnectorProfileZendeskConnectorProfileCredentialsOutput() ConnectorProfileZendeskConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ToConnectorProfileZendeskConnectorProfileCredentialsOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfileCredentialsOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutput() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return o.ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileZendeskConnectorProfileCredentials) *ConnectorProfileZendeskConnectorProfileCredentials {
		return &v
	}).(ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorProfileZendeskConnectorProfileCredentials) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileZendeskConnectorProfileCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileZendeskConnectorProfileCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileZendeskConnectorProfileCredentialsOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v ConnectorProfileZendeskConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileZendeskConnectorProfileCredentials)(nil)).Elem()
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutput() ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) ToConnectorProfileZendeskConnectorProfileCredentialsPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) Elem() ConnectorProfileZendeskConnectorProfileCredentialsOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileCredentials) ConnectorProfileZendeskConnectorProfileCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileZendeskConnectorProfileCredentials
		return ret
	}).(ConnectorProfileZendeskConnectorProfileCredentialsOutput)
}

// The credentials used to access protected resources.
func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// The identiﬁer for the desired client.
func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used by the oauth client to authenticate to the authorization server.
func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The oauth needed to request security tokens from the connector endpoint.
func (o ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput) ConnectorOAuthRequest() ConnectorProfileConnectorOAuthRequestPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileCredentials) *ConnectorProfileConnectorOAuthRequest {
		if v == nil {
			return nil
		}
		return v.ConnectorOAuthRequest
	}).(ConnectorProfileConnectorOAuthRequestPtrOutput)
}

type ConnectorProfileZendeskConnectorProfileProperties struct {
	// The location of the Zendesk resource
	InstanceUrl string `pulumi:"instanceUrl"`
}

// ConnectorProfileZendeskConnectorProfilePropertiesInput is an input type that accepts ConnectorProfileZendeskConnectorProfilePropertiesArgs and ConnectorProfileZendeskConnectorProfilePropertiesOutput values.
// You can construct a concrete instance of `ConnectorProfileZendeskConnectorProfilePropertiesInput` via:
//
//          ConnectorProfileZendeskConnectorProfilePropertiesArgs{...}
type ConnectorProfileZendeskConnectorProfilePropertiesInput interface {
	pulumi.Input

	ToConnectorProfileZendeskConnectorProfilePropertiesOutput() ConnectorProfileZendeskConnectorProfilePropertiesOutput
	ToConnectorProfileZendeskConnectorProfilePropertiesOutputWithContext(context.Context) ConnectorProfileZendeskConnectorProfilePropertiesOutput
}

type ConnectorProfileZendeskConnectorProfilePropertiesArgs struct {
	// The location of the Zendesk resource
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (ConnectorProfileZendeskConnectorProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileZendeskConnectorProfileProperties)(nil)).Elem()
}

func (i ConnectorProfileZendeskConnectorProfilePropertiesArgs) ToConnectorProfileZendeskConnectorProfilePropertiesOutput() ConnectorProfileZendeskConnectorProfilePropertiesOutput {
	return i.ToConnectorProfileZendeskConnectorProfilePropertiesOutputWithContext(context.Background())
}

func (i ConnectorProfileZendeskConnectorProfilePropertiesArgs) ToConnectorProfileZendeskConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileZendeskConnectorProfilePropertiesOutput)
}

func (i ConnectorProfileZendeskConnectorProfilePropertiesArgs) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutput() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorProfileZendeskConnectorProfilePropertiesArgs) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileZendeskConnectorProfilePropertiesOutput).ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(ctx)
}

// ConnectorProfileZendeskConnectorProfilePropertiesPtrInput is an input type that accepts ConnectorProfileZendeskConnectorProfilePropertiesArgs, ConnectorProfileZendeskConnectorProfilePropertiesPtr and ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorProfileZendeskConnectorProfilePropertiesPtrInput` via:
//
//          ConnectorProfileZendeskConnectorProfilePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectorProfileZendeskConnectorProfilePropertiesPtrInput interface {
	pulumi.Input

	ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutput() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput
	ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(context.Context) ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput
}

type connectorProfileZendeskConnectorProfilePropertiesPtrType ConnectorProfileZendeskConnectorProfilePropertiesArgs

func ConnectorProfileZendeskConnectorProfilePropertiesPtr(v *ConnectorProfileZendeskConnectorProfilePropertiesArgs) ConnectorProfileZendeskConnectorProfilePropertiesPtrInput {
	return (*connectorProfileZendeskConnectorProfilePropertiesPtrType)(v)
}

func (*connectorProfileZendeskConnectorProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileZendeskConnectorProfileProperties)(nil)).Elem()
}

func (i *connectorProfileZendeskConnectorProfilePropertiesPtrType) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutput() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return i.ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorProfileZendeskConnectorProfilePropertiesPtrType) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput)
}

type ConnectorProfileZendeskConnectorProfilePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorProfileZendeskConnectorProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProfileZendeskConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesOutput) ToConnectorProfileZendeskConnectorProfilePropertiesOutput() ConnectorProfileZendeskConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesOutput) ToConnectorProfileZendeskConnectorProfilePropertiesOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfilePropertiesOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesOutput) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutput() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return o.ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesOutput) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProfileZendeskConnectorProfileProperties) *ConnectorProfileZendeskConnectorProfileProperties {
		return &v
	}).(ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput)
}

// The location of the Zendesk resource
func (o ConnectorProfileZendeskConnectorProfilePropertiesOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProfileZendeskConnectorProfileProperties) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProfileZendeskConnectorProfileProperties)(nil)).Elem()
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutput() ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput) ToConnectorProfileZendeskConnectorProfilePropertiesPtrOutputWithContext(ctx context.Context) ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput {
	return o
}

func (o ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput) Elem() ConnectorProfileZendeskConnectorProfilePropertiesOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileProperties) ConnectorProfileZendeskConnectorProfileProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProfileZendeskConnectorProfileProperties
		return ret
	}).(ConnectorProfileZendeskConnectorProfilePropertiesOutput)
}

// The location of the Zendesk resource
func (o ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProfileZendeskConnectorProfileProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type FlowAggregationConfig struct {
	AggregationType *string `pulumi:"aggregationType"`
}

// FlowAggregationConfigInput is an input type that accepts FlowAggregationConfigArgs and FlowAggregationConfigOutput values.
// You can construct a concrete instance of `FlowAggregationConfigInput` via:
//
//          FlowAggregationConfigArgs{...}
type FlowAggregationConfigInput interface {
	pulumi.Input

	ToFlowAggregationConfigOutput() FlowAggregationConfigOutput
	ToFlowAggregationConfigOutputWithContext(context.Context) FlowAggregationConfigOutput
}

type FlowAggregationConfigArgs struct {
	AggregationType pulumi.StringPtrInput `pulumi:"aggregationType"`
}

func (FlowAggregationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAggregationConfig)(nil)).Elem()
}

func (i FlowAggregationConfigArgs) ToFlowAggregationConfigOutput() FlowAggregationConfigOutput {
	return i.ToFlowAggregationConfigOutputWithContext(context.Background())
}

func (i FlowAggregationConfigArgs) ToFlowAggregationConfigOutputWithContext(ctx context.Context) FlowAggregationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAggregationConfigOutput)
}

func (i FlowAggregationConfigArgs) ToFlowAggregationConfigPtrOutput() FlowAggregationConfigPtrOutput {
	return i.ToFlowAggregationConfigPtrOutputWithContext(context.Background())
}

func (i FlowAggregationConfigArgs) ToFlowAggregationConfigPtrOutputWithContext(ctx context.Context) FlowAggregationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAggregationConfigOutput).ToFlowAggregationConfigPtrOutputWithContext(ctx)
}

// FlowAggregationConfigPtrInput is an input type that accepts FlowAggregationConfigArgs, FlowAggregationConfigPtr and FlowAggregationConfigPtrOutput values.
// You can construct a concrete instance of `FlowAggregationConfigPtrInput` via:
//
//          FlowAggregationConfigArgs{...}
//
//  or:
//
//          nil
type FlowAggregationConfigPtrInput interface {
	pulumi.Input

	ToFlowAggregationConfigPtrOutput() FlowAggregationConfigPtrOutput
	ToFlowAggregationConfigPtrOutputWithContext(context.Context) FlowAggregationConfigPtrOutput
}

type flowAggregationConfigPtrType FlowAggregationConfigArgs

func FlowAggregationConfigPtr(v *FlowAggregationConfigArgs) FlowAggregationConfigPtrInput {
	return (*flowAggregationConfigPtrType)(v)
}

func (*flowAggregationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAggregationConfig)(nil)).Elem()
}

func (i *flowAggregationConfigPtrType) ToFlowAggregationConfigPtrOutput() FlowAggregationConfigPtrOutput {
	return i.ToFlowAggregationConfigPtrOutputWithContext(context.Background())
}

func (i *flowAggregationConfigPtrType) ToFlowAggregationConfigPtrOutputWithContext(ctx context.Context) FlowAggregationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAggregationConfigPtrOutput)
}

type FlowAggregationConfigOutput struct{ *pulumi.OutputState }

func (FlowAggregationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAggregationConfig)(nil)).Elem()
}

func (o FlowAggregationConfigOutput) ToFlowAggregationConfigOutput() FlowAggregationConfigOutput {
	return o
}

func (o FlowAggregationConfigOutput) ToFlowAggregationConfigOutputWithContext(ctx context.Context) FlowAggregationConfigOutput {
	return o
}

func (o FlowAggregationConfigOutput) ToFlowAggregationConfigPtrOutput() FlowAggregationConfigPtrOutput {
	return o.ToFlowAggregationConfigPtrOutputWithContext(context.Background())
}

func (o FlowAggregationConfigOutput) ToFlowAggregationConfigPtrOutputWithContext(ctx context.Context) FlowAggregationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowAggregationConfig) *FlowAggregationConfig {
		return &v
	}).(FlowAggregationConfigPtrOutput)
}

func (o FlowAggregationConfigOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowAggregationConfig) *string { return v.AggregationType }).(pulumi.StringPtrOutput)
}

type FlowAggregationConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowAggregationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAggregationConfig)(nil)).Elem()
}

func (o FlowAggregationConfigPtrOutput) ToFlowAggregationConfigPtrOutput() FlowAggregationConfigPtrOutput {
	return o
}

func (o FlowAggregationConfigPtrOutput) ToFlowAggregationConfigPtrOutputWithContext(ctx context.Context) FlowAggregationConfigPtrOutput {
	return o
}

func (o FlowAggregationConfigPtrOutput) Elem() FlowAggregationConfigOutput {
	return o.ApplyT(func(v *FlowAggregationConfig) FlowAggregationConfig {
		if v != nil {
			return *v
		}
		var ret FlowAggregationConfig
		return ret
	}).(FlowAggregationConfigOutput)
}

func (o FlowAggregationConfigPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowAggregationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

type FlowAmplitudeSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowAmplitudeSourcePropertiesInput is an input type that accepts FlowAmplitudeSourcePropertiesArgs and FlowAmplitudeSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowAmplitudeSourcePropertiesInput` via:
//
//          FlowAmplitudeSourcePropertiesArgs{...}
type FlowAmplitudeSourcePropertiesInput interface {
	pulumi.Input

	ToFlowAmplitudeSourcePropertiesOutput() FlowAmplitudeSourcePropertiesOutput
	ToFlowAmplitudeSourcePropertiesOutputWithContext(context.Context) FlowAmplitudeSourcePropertiesOutput
}

type FlowAmplitudeSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowAmplitudeSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAmplitudeSourceProperties)(nil)).Elem()
}

func (i FlowAmplitudeSourcePropertiesArgs) ToFlowAmplitudeSourcePropertiesOutput() FlowAmplitudeSourcePropertiesOutput {
	return i.ToFlowAmplitudeSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowAmplitudeSourcePropertiesArgs) ToFlowAmplitudeSourcePropertiesOutputWithContext(ctx context.Context) FlowAmplitudeSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAmplitudeSourcePropertiesOutput)
}

func (i FlowAmplitudeSourcePropertiesArgs) ToFlowAmplitudeSourcePropertiesPtrOutput() FlowAmplitudeSourcePropertiesPtrOutput {
	return i.ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowAmplitudeSourcePropertiesArgs) ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowAmplitudeSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAmplitudeSourcePropertiesOutput).ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowAmplitudeSourcePropertiesPtrInput is an input type that accepts FlowAmplitudeSourcePropertiesArgs, FlowAmplitudeSourcePropertiesPtr and FlowAmplitudeSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowAmplitudeSourcePropertiesPtrInput` via:
//
//          FlowAmplitudeSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowAmplitudeSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowAmplitudeSourcePropertiesPtrOutput() FlowAmplitudeSourcePropertiesPtrOutput
	ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(context.Context) FlowAmplitudeSourcePropertiesPtrOutput
}

type flowAmplitudeSourcePropertiesPtrType FlowAmplitudeSourcePropertiesArgs

func FlowAmplitudeSourcePropertiesPtr(v *FlowAmplitudeSourcePropertiesArgs) FlowAmplitudeSourcePropertiesPtrInput {
	return (*flowAmplitudeSourcePropertiesPtrType)(v)
}

func (*flowAmplitudeSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAmplitudeSourceProperties)(nil)).Elem()
}

func (i *flowAmplitudeSourcePropertiesPtrType) ToFlowAmplitudeSourcePropertiesPtrOutput() FlowAmplitudeSourcePropertiesPtrOutput {
	return i.ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowAmplitudeSourcePropertiesPtrType) ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowAmplitudeSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAmplitudeSourcePropertiesPtrOutput)
}

type FlowAmplitudeSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowAmplitudeSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAmplitudeSourceProperties)(nil)).Elem()
}

func (o FlowAmplitudeSourcePropertiesOutput) ToFlowAmplitudeSourcePropertiesOutput() FlowAmplitudeSourcePropertiesOutput {
	return o
}

func (o FlowAmplitudeSourcePropertiesOutput) ToFlowAmplitudeSourcePropertiesOutputWithContext(ctx context.Context) FlowAmplitudeSourcePropertiesOutput {
	return o
}

func (o FlowAmplitudeSourcePropertiesOutput) ToFlowAmplitudeSourcePropertiesPtrOutput() FlowAmplitudeSourcePropertiesPtrOutput {
	return o.ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowAmplitudeSourcePropertiesOutput) ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowAmplitudeSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowAmplitudeSourceProperties) *FlowAmplitudeSourceProperties {
		return &v
	}).(FlowAmplitudeSourcePropertiesPtrOutput)
}

func (o FlowAmplitudeSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowAmplitudeSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowAmplitudeSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowAmplitudeSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAmplitudeSourceProperties)(nil)).Elem()
}

func (o FlowAmplitudeSourcePropertiesPtrOutput) ToFlowAmplitudeSourcePropertiesPtrOutput() FlowAmplitudeSourcePropertiesPtrOutput {
	return o
}

func (o FlowAmplitudeSourcePropertiesPtrOutput) ToFlowAmplitudeSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowAmplitudeSourcePropertiesPtrOutput {
	return o
}

func (o FlowAmplitudeSourcePropertiesPtrOutput) Elem() FlowAmplitudeSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowAmplitudeSourceProperties) FlowAmplitudeSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowAmplitudeSourceProperties
		return ret
	}).(FlowAmplitudeSourcePropertiesOutput)
}

func (o FlowAmplitudeSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowAmplitudeSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Operation to be performed on provided source fields
type FlowConnectorOperator struct {
	Amplitude       *string `pulumi:"amplitude"`
	Datadog         *string `pulumi:"datadog"`
	Dynatrace       *string `pulumi:"dynatrace"`
	GoogleAnalytics *string `pulumi:"googleAnalytics"`
	InforNexus      *string `pulumi:"inforNexus"`
	Marketo         *string `pulumi:"marketo"`
	S3              *string `pulumi:"s3"`
	Salesforce      *string `pulumi:"salesforce"`
	ServiceNow      *string `pulumi:"serviceNow"`
	Singular        *string `pulumi:"singular"`
	Slack           *string `pulumi:"slack"`
	Trendmicro      *string `pulumi:"trendmicro"`
	Veeva           *string `pulumi:"veeva"`
	Zendesk         *string `pulumi:"zendesk"`
}

// FlowConnectorOperatorInput is an input type that accepts FlowConnectorOperatorArgs and FlowConnectorOperatorOutput values.
// You can construct a concrete instance of `FlowConnectorOperatorInput` via:
//
//          FlowConnectorOperatorArgs{...}
type FlowConnectorOperatorInput interface {
	pulumi.Input

	ToFlowConnectorOperatorOutput() FlowConnectorOperatorOutput
	ToFlowConnectorOperatorOutputWithContext(context.Context) FlowConnectorOperatorOutput
}

// Operation to be performed on provided source fields
type FlowConnectorOperatorArgs struct {
	Amplitude       pulumi.StringPtrInput `pulumi:"amplitude"`
	Datadog         pulumi.StringPtrInput `pulumi:"datadog"`
	Dynatrace       pulumi.StringPtrInput `pulumi:"dynatrace"`
	GoogleAnalytics pulumi.StringPtrInput `pulumi:"googleAnalytics"`
	InforNexus      pulumi.StringPtrInput `pulumi:"inforNexus"`
	Marketo         pulumi.StringPtrInput `pulumi:"marketo"`
	S3              pulumi.StringPtrInput `pulumi:"s3"`
	Salesforce      pulumi.StringPtrInput `pulumi:"salesforce"`
	ServiceNow      pulumi.StringPtrInput `pulumi:"serviceNow"`
	Singular        pulumi.StringPtrInput `pulumi:"singular"`
	Slack           pulumi.StringPtrInput `pulumi:"slack"`
	Trendmicro      pulumi.StringPtrInput `pulumi:"trendmicro"`
	Veeva           pulumi.StringPtrInput `pulumi:"veeva"`
	Zendesk         pulumi.StringPtrInput `pulumi:"zendesk"`
}

func (FlowConnectorOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnectorOperator)(nil)).Elem()
}

func (i FlowConnectorOperatorArgs) ToFlowConnectorOperatorOutput() FlowConnectorOperatorOutput {
	return i.ToFlowConnectorOperatorOutputWithContext(context.Background())
}

func (i FlowConnectorOperatorArgs) ToFlowConnectorOperatorOutputWithContext(ctx context.Context) FlowConnectorOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectorOperatorOutput)
}

func (i FlowConnectorOperatorArgs) ToFlowConnectorOperatorPtrOutput() FlowConnectorOperatorPtrOutput {
	return i.ToFlowConnectorOperatorPtrOutputWithContext(context.Background())
}

func (i FlowConnectorOperatorArgs) ToFlowConnectorOperatorPtrOutputWithContext(ctx context.Context) FlowConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectorOperatorOutput).ToFlowConnectorOperatorPtrOutputWithContext(ctx)
}

// FlowConnectorOperatorPtrInput is an input type that accepts FlowConnectorOperatorArgs, FlowConnectorOperatorPtr and FlowConnectorOperatorPtrOutput values.
// You can construct a concrete instance of `FlowConnectorOperatorPtrInput` via:
//
//          FlowConnectorOperatorArgs{...}
//
//  or:
//
//          nil
type FlowConnectorOperatorPtrInput interface {
	pulumi.Input

	ToFlowConnectorOperatorPtrOutput() FlowConnectorOperatorPtrOutput
	ToFlowConnectorOperatorPtrOutputWithContext(context.Context) FlowConnectorOperatorPtrOutput
}

type flowConnectorOperatorPtrType FlowConnectorOperatorArgs

func FlowConnectorOperatorPtr(v *FlowConnectorOperatorArgs) FlowConnectorOperatorPtrInput {
	return (*flowConnectorOperatorPtrType)(v)
}

func (*flowConnectorOperatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConnectorOperator)(nil)).Elem()
}

func (i *flowConnectorOperatorPtrType) ToFlowConnectorOperatorPtrOutput() FlowConnectorOperatorPtrOutput {
	return i.ToFlowConnectorOperatorPtrOutputWithContext(context.Background())
}

func (i *flowConnectorOperatorPtrType) ToFlowConnectorOperatorPtrOutputWithContext(ctx context.Context) FlowConnectorOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectorOperatorPtrOutput)
}

// Operation to be performed on provided source fields
type FlowConnectorOperatorOutput struct{ *pulumi.OutputState }

func (FlowConnectorOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnectorOperator)(nil)).Elem()
}

func (o FlowConnectorOperatorOutput) ToFlowConnectorOperatorOutput() FlowConnectorOperatorOutput {
	return o
}

func (o FlowConnectorOperatorOutput) ToFlowConnectorOperatorOutputWithContext(ctx context.Context) FlowConnectorOperatorOutput {
	return o
}

func (o FlowConnectorOperatorOutput) ToFlowConnectorOperatorPtrOutput() FlowConnectorOperatorPtrOutput {
	return o.ToFlowConnectorOperatorPtrOutputWithContext(context.Background())
}

func (o FlowConnectorOperatorOutput) ToFlowConnectorOperatorPtrOutputWithContext(ctx context.Context) FlowConnectorOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowConnectorOperator) *FlowConnectorOperator {
		return &v
	}).(FlowConnectorOperatorPtrOutput)
}

func (o FlowConnectorOperatorOutput) Amplitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Amplitude }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Datadog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Datadog }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Dynatrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Dynatrace }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) GoogleAnalytics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.GoogleAnalytics }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) InforNexus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.InforNexus }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Marketo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Marketo }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) S3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.S3 }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Salesforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Salesforce }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) ServiceNow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.ServiceNow }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Singular }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Slack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Slack }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Trendmicro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Trendmicro }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Veeva() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Veeva }).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorOutput) Zendesk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowConnectorOperator) *string { return v.Zendesk }).(pulumi.StringPtrOutput)
}

type FlowConnectorOperatorPtrOutput struct{ *pulumi.OutputState }

func (FlowConnectorOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConnectorOperator)(nil)).Elem()
}

func (o FlowConnectorOperatorPtrOutput) ToFlowConnectorOperatorPtrOutput() FlowConnectorOperatorPtrOutput {
	return o
}

func (o FlowConnectorOperatorPtrOutput) ToFlowConnectorOperatorPtrOutputWithContext(ctx context.Context) FlowConnectorOperatorPtrOutput {
	return o
}

func (o FlowConnectorOperatorPtrOutput) Elem() FlowConnectorOperatorOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) FlowConnectorOperator {
		if v != nil {
			return *v
		}
		var ret FlowConnectorOperator
		return ret
	}).(FlowConnectorOperatorOutput)
}

func (o FlowConnectorOperatorPtrOutput) Amplitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Amplitude
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Datadog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Dynatrace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) GoogleAnalytics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.GoogleAnalytics
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) InforNexus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Marketo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) S3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.S3
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Salesforce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) ServiceNow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Slack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Trendmicro() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Trendmicro
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Veeva() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(pulumi.StringPtrOutput)
}

func (o FlowConnectorOperatorPtrOutput) Zendesk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConnectorOperator) *string {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.StringPtrOutput)
}

type FlowDatadogSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowDatadogSourcePropertiesInput is an input type that accepts FlowDatadogSourcePropertiesArgs and FlowDatadogSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowDatadogSourcePropertiesInput` via:
//
//          FlowDatadogSourcePropertiesArgs{...}
type FlowDatadogSourcePropertiesInput interface {
	pulumi.Input

	ToFlowDatadogSourcePropertiesOutput() FlowDatadogSourcePropertiesOutput
	ToFlowDatadogSourcePropertiesOutputWithContext(context.Context) FlowDatadogSourcePropertiesOutput
}

type FlowDatadogSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDatadogSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDatadogSourceProperties)(nil)).Elem()
}

func (i FlowDatadogSourcePropertiesArgs) ToFlowDatadogSourcePropertiesOutput() FlowDatadogSourcePropertiesOutput {
	return i.ToFlowDatadogSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowDatadogSourcePropertiesArgs) ToFlowDatadogSourcePropertiesOutputWithContext(ctx context.Context) FlowDatadogSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDatadogSourcePropertiesOutput)
}

func (i FlowDatadogSourcePropertiesArgs) ToFlowDatadogSourcePropertiesPtrOutput() FlowDatadogSourcePropertiesPtrOutput {
	return i.ToFlowDatadogSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowDatadogSourcePropertiesArgs) ToFlowDatadogSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDatadogSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDatadogSourcePropertiesOutput).ToFlowDatadogSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowDatadogSourcePropertiesPtrInput is an input type that accepts FlowDatadogSourcePropertiesArgs, FlowDatadogSourcePropertiesPtr and FlowDatadogSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowDatadogSourcePropertiesPtrInput` via:
//
//          FlowDatadogSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowDatadogSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowDatadogSourcePropertiesPtrOutput() FlowDatadogSourcePropertiesPtrOutput
	ToFlowDatadogSourcePropertiesPtrOutputWithContext(context.Context) FlowDatadogSourcePropertiesPtrOutput
}

type flowDatadogSourcePropertiesPtrType FlowDatadogSourcePropertiesArgs

func FlowDatadogSourcePropertiesPtr(v *FlowDatadogSourcePropertiesArgs) FlowDatadogSourcePropertiesPtrInput {
	return (*flowDatadogSourcePropertiesPtrType)(v)
}

func (*flowDatadogSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDatadogSourceProperties)(nil)).Elem()
}

func (i *flowDatadogSourcePropertiesPtrType) ToFlowDatadogSourcePropertiesPtrOutput() FlowDatadogSourcePropertiesPtrOutput {
	return i.ToFlowDatadogSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowDatadogSourcePropertiesPtrType) ToFlowDatadogSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDatadogSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDatadogSourcePropertiesPtrOutput)
}

type FlowDatadogSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowDatadogSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDatadogSourceProperties)(nil)).Elem()
}

func (o FlowDatadogSourcePropertiesOutput) ToFlowDatadogSourcePropertiesOutput() FlowDatadogSourcePropertiesOutput {
	return o
}

func (o FlowDatadogSourcePropertiesOutput) ToFlowDatadogSourcePropertiesOutputWithContext(ctx context.Context) FlowDatadogSourcePropertiesOutput {
	return o
}

func (o FlowDatadogSourcePropertiesOutput) ToFlowDatadogSourcePropertiesPtrOutput() FlowDatadogSourcePropertiesPtrOutput {
	return o.ToFlowDatadogSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowDatadogSourcePropertiesOutput) ToFlowDatadogSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDatadogSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDatadogSourceProperties) *FlowDatadogSourceProperties {
		return &v
	}).(FlowDatadogSourcePropertiesPtrOutput)
}

func (o FlowDatadogSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDatadogSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDatadogSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowDatadogSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDatadogSourceProperties)(nil)).Elem()
}

func (o FlowDatadogSourcePropertiesPtrOutput) ToFlowDatadogSourcePropertiesPtrOutput() FlowDatadogSourcePropertiesPtrOutput {
	return o
}

func (o FlowDatadogSourcePropertiesPtrOutput) ToFlowDatadogSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDatadogSourcePropertiesPtrOutput {
	return o
}

func (o FlowDatadogSourcePropertiesPtrOutput) Elem() FlowDatadogSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowDatadogSourceProperties) FlowDatadogSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowDatadogSourceProperties
		return ret
	}).(FlowDatadogSourcePropertiesOutput)
}

func (o FlowDatadogSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDatadogSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Destination connector details
type FlowDestinationConnectorProperties struct {
	EventBridge    *FlowEventBridgeDestinationProperties    `pulumi:"eventBridge"`
	LookoutMetrics *FlowLookoutMetricsDestinationProperties `pulumi:"lookoutMetrics"`
	Redshift       *FlowRedshiftDestinationProperties       `pulumi:"redshift"`
	S3             *FlowS3DestinationProperties             `pulumi:"s3"`
	Salesforce     *FlowSalesforceDestinationProperties     `pulumi:"salesforce"`
	Snowflake      *FlowSnowflakeDestinationProperties      `pulumi:"snowflake"`
	Upsolver       *FlowUpsolverDestinationProperties       `pulumi:"upsolver"`
	Zendesk        *FlowZendeskDestinationProperties        `pulumi:"zendesk"`
}

// FlowDestinationConnectorPropertiesInput is an input type that accepts FlowDestinationConnectorPropertiesArgs and FlowDestinationConnectorPropertiesOutput values.
// You can construct a concrete instance of `FlowDestinationConnectorPropertiesInput` via:
//
//          FlowDestinationConnectorPropertiesArgs{...}
type FlowDestinationConnectorPropertiesInput interface {
	pulumi.Input

	ToFlowDestinationConnectorPropertiesOutput() FlowDestinationConnectorPropertiesOutput
	ToFlowDestinationConnectorPropertiesOutputWithContext(context.Context) FlowDestinationConnectorPropertiesOutput
}

// Destination connector details
type FlowDestinationConnectorPropertiesArgs struct {
	EventBridge    FlowEventBridgeDestinationPropertiesPtrInput    `pulumi:"eventBridge"`
	LookoutMetrics FlowLookoutMetricsDestinationPropertiesPtrInput `pulumi:"lookoutMetrics"`
	Redshift       FlowRedshiftDestinationPropertiesPtrInput       `pulumi:"redshift"`
	S3             FlowS3DestinationPropertiesPtrInput             `pulumi:"s3"`
	Salesforce     FlowSalesforceDestinationPropertiesPtrInput     `pulumi:"salesforce"`
	Snowflake      FlowSnowflakeDestinationPropertiesPtrInput      `pulumi:"snowflake"`
	Upsolver       FlowUpsolverDestinationPropertiesPtrInput       `pulumi:"upsolver"`
	Zendesk        FlowZendeskDestinationPropertiesPtrInput        `pulumi:"zendesk"`
}

func (FlowDestinationConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationConnectorProperties)(nil)).Elem()
}

func (i FlowDestinationConnectorPropertiesArgs) ToFlowDestinationConnectorPropertiesOutput() FlowDestinationConnectorPropertiesOutput {
	return i.ToFlowDestinationConnectorPropertiesOutputWithContext(context.Background())
}

func (i FlowDestinationConnectorPropertiesArgs) ToFlowDestinationConnectorPropertiesOutputWithContext(ctx context.Context) FlowDestinationConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationConnectorPropertiesOutput)
}

// Destination connector details
type FlowDestinationConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (FlowDestinationConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationConnectorProperties)(nil)).Elem()
}

func (o FlowDestinationConnectorPropertiesOutput) ToFlowDestinationConnectorPropertiesOutput() FlowDestinationConnectorPropertiesOutput {
	return o
}

func (o FlowDestinationConnectorPropertiesOutput) ToFlowDestinationConnectorPropertiesOutputWithContext(ctx context.Context) FlowDestinationConnectorPropertiesOutput {
	return o
}

func (o FlowDestinationConnectorPropertiesOutput) EventBridge() FlowEventBridgeDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowEventBridgeDestinationProperties { return v.EventBridge }).(FlowEventBridgeDestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) LookoutMetrics() FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowLookoutMetricsDestinationProperties {
		return v.LookoutMetrics
	}).(FlowLookoutMetricsDestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) Redshift() FlowRedshiftDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowRedshiftDestinationProperties { return v.Redshift }).(FlowRedshiftDestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) S3() FlowS3DestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowS3DestinationProperties { return v.S3 }).(FlowS3DestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) Salesforce() FlowSalesforceDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowSalesforceDestinationProperties { return v.Salesforce }).(FlowSalesforceDestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) Snowflake() FlowSnowflakeDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowSnowflakeDestinationProperties { return v.Snowflake }).(FlowSnowflakeDestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) Upsolver() FlowUpsolverDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowUpsolverDestinationProperties { return v.Upsolver }).(FlowUpsolverDestinationPropertiesPtrOutput)
}

func (o FlowDestinationConnectorPropertiesOutput) Zendesk() FlowZendeskDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowDestinationConnectorProperties) *FlowZendeskDestinationProperties { return v.Zendesk }).(FlowZendeskDestinationPropertiesPtrOutput)
}

// Configurations of destination connector.
type FlowDestinationFlowConfig struct {
	// Name of destination connector profile
	ConnectorProfileName *string `pulumi:"connectorProfileName"`
	// Destination connector type
	ConnectorType string `pulumi:"connectorType"`
	// Destination connector details
	DestinationConnectorProperties FlowDestinationConnectorProperties `pulumi:"destinationConnectorProperties"`
}

// FlowDestinationFlowConfigInput is an input type that accepts FlowDestinationFlowConfigArgs and FlowDestinationFlowConfigOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigInput` via:
//
//          FlowDestinationFlowConfigArgs{...}
type FlowDestinationFlowConfigInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigOutput() FlowDestinationFlowConfigOutput
	ToFlowDestinationFlowConfigOutputWithContext(context.Context) FlowDestinationFlowConfigOutput
}

// Configurations of destination connector.
type FlowDestinationFlowConfigArgs struct {
	// Name of destination connector profile
	ConnectorProfileName pulumi.StringPtrInput `pulumi:"connectorProfileName"`
	// Destination connector type
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Destination connector details
	DestinationConnectorProperties FlowDestinationConnectorPropertiesInput `pulumi:"destinationConnectorProperties"`
}

func (FlowDestinationFlowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigArgs) ToFlowDestinationFlowConfigOutput() FlowDestinationFlowConfigOutput {
	return i.ToFlowDestinationFlowConfigOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigArgs) ToFlowDestinationFlowConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigOutput)
}

// FlowDestinationFlowConfigArrayInput is an input type that accepts FlowDestinationFlowConfigArray and FlowDestinationFlowConfigArrayOutput values.
// You can construct a concrete instance of `FlowDestinationFlowConfigArrayInput` via:
//
//          FlowDestinationFlowConfigArray{ FlowDestinationFlowConfigArgs{...} }
type FlowDestinationFlowConfigArrayInput interface {
	pulumi.Input

	ToFlowDestinationFlowConfigArrayOutput() FlowDestinationFlowConfigArrayOutput
	ToFlowDestinationFlowConfigArrayOutputWithContext(context.Context) FlowDestinationFlowConfigArrayOutput
}

type FlowDestinationFlowConfigArray []FlowDestinationFlowConfigInput

func (FlowDestinationFlowConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowDestinationFlowConfig)(nil)).Elem()
}

func (i FlowDestinationFlowConfigArray) ToFlowDestinationFlowConfigArrayOutput() FlowDestinationFlowConfigArrayOutput {
	return i.ToFlowDestinationFlowConfigArrayOutputWithContext(context.Background())
}

func (i FlowDestinationFlowConfigArray) ToFlowDestinationFlowConfigArrayOutputWithContext(ctx context.Context) FlowDestinationFlowConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDestinationFlowConfigArrayOutput)
}

// Configurations of destination connector.
type FlowDestinationFlowConfigOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDestinationFlowConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigOutput) ToFlowDestinationFlowConfigOutput() FlowDestinationFlowConfigOutput {
	return o
}

func (o FlowDestinationFlowConfigOutput) ToFlowDestinationFlowConfigOutputWithContext(ctx context.Context) FlowDestinationFlowConfigOutput {
	return o
}

// Name of destination connector profile
func (o FlowDestinationFlowConfigOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) *string { return v.ConnectorProfileName }).(pulumi.StringPtrOutput)
}

// Destination connector type
func (o FlowDestinationFlowConfigOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Destination connector details
func (o FlowDestinationFlowConfigOutput) DestinationConnectorProperties() FlowDestinationConnectorPropertiesOutput {
	return o.ApplyT(func(v FlowDestinationFlowConfig) FlowDestinationConnectorProperties {
		return v.DestinationConnectorProperties
	}).(FlowDestinationConnectorPropertiesOutput)
}

type FlowDestinationFlowConfigArrayOutput struct{ *pulumi.OutputState }

func (FlowDestinationFlowConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowDestinationFlowConfig)(nil)).Elem()
}

func (o FlowDestinationFlowConfigArrayOutput) ToFlowDestinationFlowConfigArrayOutput() FlowDestinationFlowConfigArrayOutput {
	return o
}

func (o FlowDestinationFlowConfigArrayOutput) ToFlowDestinationFlowConfigArrayOutputWithContext(ctx context.Context) FlowDestinationFlowConfigArrayOutput {
	return o
}

func (o FlowDestinationFlowConfigArrayOutput) Index(i pulumi.IntInput) FlowDestinationFlowConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowDestinationFlowConfig {
		return vs[0].([]FlowDestinationFlowConfig)[vs[1].(int)]
	}).(FlowDestinationFlowConfigOutput)
}

type FlowDynatraceSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowDynatraceSourcePropertiesInput is an input type that accepts FlowDynatraceSourcePropertiesArgs and FlowDynatraceSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowDynatraceSourcePropertiesInput` via:
//
//          FlowDynatraceSourcePropertiesArgs{...}
type FlowDynatraceSourcePropertiesInput interface {
	pulumi.Input

	ToFlowDynatraceSourcePropertiesOutput() FlowDynatraceSourcePropertiesOutput
	ToFlowDynatraceSourcePropertiesOutputWithContext(context.Context) FlowDynatraceSourcePropertiesOutput
}

type FlowDynatraceSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowDynatraceSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDynatraceSourceProperties)(nil)).Elem()
}

func (i FlowDynatraceSourcePropertiesArgs) ToFlowDynatraceSourcePropertiesOutput() FlowDynatraceSourcePropertiesOutput {
	return i.ToFlowDynatraceSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowDynatraceSourcePropertiesArgs) ToFlowDynatraceSourcePropertiesOutputWithContext(ctx context.Context) FlowDynatraceSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDynatraceSourcePropertiesOutput)
}

func (i FlowDynatraceSourcePropertiesArgs) ToFlowDynatraceSourcePropertiesPtrOutput() FlowDynatraceSourcePropertiesPtrOutput {
	return i.ToFlowDynatraceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowDynatraceSourcePropertiesArgs) ToFlowDynatraceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDynatraceSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDynatraceSourcePropertiesOutput).ToFlowDynatraceSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowDynatraceSourcePropertiesPtrInput is an input type that accepts FlowDynatraceSourcePropertiesArgs, FlowDynatraceSourcePropertiesPtr and FlowDynatraceSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowDynatraceSourcePropertiesPtrInput` via:
//
//          FlowDynatraceSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowDynatraceSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowDynatraceSourcePropertiesPtrOutput() FlowDynatraceSourcePropertiesPtrOutput
	ToFlowDynatraceSourcePropertiesPtrOutputWithContext(context.Context) FlowDynatraceSourcePropertiesPtrOutput
}

type flowDynatraceSourcePropertiesPtrType FlowDynatraceSourcePropertiesArgs

func FlowDynatraceSourcePropertiesPtr(v *FlowDynatraceSourcePropertiesArgs) FlowDynatraceSourcePropertiesPtrInput {
	return (*flowDynatraceSourcePropertiesPtrType)(v)
}

func (*flowDynatraceSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDynatraceSourceProperties)(nil)).Elem()
}

func (i *flowDynatraceSourcePropertiesPtrType) ToFlowDynatraceSourcePropertiesPtrOutput() FlowDynatraceSourcePropertiesPtrOutput {
	return i.ToFlowDynatraceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowDynatraceSourcePropertiesPtrType) ToFlowDynatraceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDynatraceSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDynatraceSourcePropertiesPtrOutput)
}

type FlowDynatraceSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowDynatraceSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDynatraceSourceProperties)(nil)).Elem()
}

func (o FlowDynatraceSourcePropertiesOutput) ToFlowDynatraceSourcePropertiesOutput() FlowDynatraceSourcePropertiesOutput {
	return o
}

func (o FlowDynatraceSourcePropertiesOutput) ToFlowDynatraceSourcePropertiesOutputWithContext(ctx context.Context) FlowDynatraceSourcePropertiesOutput {
	return o
}

func (o FlowDynatraceSourcePropertiesOutput) ToFlowDynatraceSourcePropertiesPtrOutput() FlowDynatraceSourcePropertiesPtrOutput {
	return o.ToFlowDynatraceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowDynatraceSourcePropertiesOutput) ToFlowDynatraceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDynatraceSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDynatraceSourceProperties) *FlowDynatraceSourceProperties {
		return &v
	}).(FlowDynatraceSourcePropertiesPtrOutput)
}

func (o FlowDynatraceSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDynatraceSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowDynatraceSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowDynatraceSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDynatraceSourceProperties)(nil)).Elem()
}

func (o FlowDynatraceSourcePropertiesPtrOutput) ToFlowDynatraceSourcePropertiesPtrOutput() FlowDynatraceSourcePropertiesPtrOutput {
	return o
}

func (o FlowDynatraceSourcePropertiesPtrOutput) ToFlowDynatraceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowDynatraceSourcePropertiesPtrOutput {
	return o
}

func (o FlowDynatraceSourcePropertiesPtrOutput) Elem() FlowDynatraceSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowDynatraceSourceProperties) FlowDynatraceSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowDynatraceSourceProperties
		return ret
	}).(FlowDynatraceSourcePropertiesOutput)
}

func (o FlowDynatraceSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDynatraceSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowErrorHandlingConfig struct {
	BucketName       *string `pulumi:"bucketName"`
	BucketPrefix     *string `pulumi:"bucketPrefix"`
	FailOnFirstError *bool   `pulumi:"failOnFirstError"`
}

// FlowErrorHandlingConfigInput is an input type that accepts FlowErrorHandlingConfigArgs and FlowErrorHandlingConfigOutput values.
// You can construct a concrete instance of `FlowErrorHandlingConfigInput` via:
//
//          FlowErrorHandlingConfigArgs{...}
type FlowErrorHandlingConfigInput interface {
	pulumi.Input

	ToFlowErrorHandlingConfigOutput() FlowErrorHandlingConfigOutput
	ToFlowErrorHandlingConfigOutputWithContext(context.Context) FlowErrorHandlingConfigOutput
}

type FlowErrorHandlingConfigArgs struct {
	BucketName       pulumi.StringPtrInput `pulumi:"bucketName"`
	BucketPrefix     pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	FailOnFirstError pulumi.BoolPtrInput   `pulumi:"failOnFirstError"`
}

func (FlowErrorHandlingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowErrorHandlingConfig)(nil)).Elem()
}

func (i FlowErrorHandlingConfigArgs) ToFlowErrorHandlingConfigOutput() FlowErrorHandlingConfigOutput {
	return i.ToFlowErrorHandlingConfigOutputWithContext(context.Background())
}

func (i FlowErrorHandlingConfigArgs) ToFlowErrorHandlingConfigOutputWithContext(ctx context.Context) FlowErrorHandlingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowErrorHandlingConfigOutput)
}

func (i FlowErrorHandlingConfigArgs) ToFlowErrorHandlingConfigPtrOutput() FlowErrorHandlingConfigPtrOutput {
	return i.ToFlowErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i FlowErrorHandlingConfigArgs) ToFlowErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowErrorHandlingConfigOutput).ToFlowErrorHandlingConfigPtrOutputWithContext(ctx)
}

// FlowErrorHandlingConfigPtrInput is an input type that accepts FlowErrorHandlingConfigArgs, FlowErrorHandlingConfigPtr and FlowErrorHandlingConfigPtrOutput values.
// You can construct a concrete instance of `FlowErrorHandlingConfigPtrInput` via:
//
//          FlowErrorHandlingConfigArgs{...}
//
//  or:
//
//          nil
type FlowErrorHandlingConfigPtrInput interface {
	pulumi.Input

	ToFlowErrorHandlingConfigPtrOutput() FlowErrorHandlingConfigPtrOutput
	ToFlowErrorHandlingConfigPtrOutputWithContext(context.Context) FlowErrorHandlingConfigPtrOutput
}

type flowErrorHandlingConfigPtrType FlowErrorHandlingConfigArgs

func FlowErrorHandlingConfigPtr(v *FlowErrorHandlingConfigArgs) FlowErrorHandlingConfigPtrInput {
	return (*flowErrorHandlingConfigPtrType)(v)
}

func (*flowErrorHandlingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowErrorHandlingConfig)(nil)).Elem()
}

func (i *flowErrorHandlingConfigPtrType) ToFlowErrorHandlingConfigPtrOutput() FlowErrorHandlingConfigPtrOutput {
	return i.ToFlowErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (i *flowErrorHandlingConfigPtrType) ToFlowErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowErrorHandlingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowErrorHandlingConfigPtrOutput)
}

type FlowErrorHandlingConfigOutput struct{ *pulumi.OutputState }

func (FlowErrorHandlingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowErrorHandlingConfig)(nil)).Elem()
}

func (o FlowErrorHandlingConfigOutput) ToFlowErrorHandlingConfigOutput() FlowErrorHandlingConfigOutput {
	return o
}

func (o FlowErrorHandlingConfigOutput) ToFlowErrorHandlingConfigOutputWithContext(ctx context.Context) FlowErrorHandlingConfigOutput {
	return o
}

func (o FlowErrorHandlingConfigOutput) ToFlowErrorHandlingConfigPtrOutput() FlowErrorHandlingConfigPtrOutput {
	return o.ToFlowErrorHandlingConfigPtrOutputWithContext(context.Background())
}

func (o FlowErrorHandlingConfigOutput) ToFlowErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowErrorHandlingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowErrorHandlingConfig) *FlowErrorHandlingConfig {
		return &v
	}).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowErrorHandlingConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowErrorHandlingConfig) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o FlowErrorHandlingConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowErrorHandlingConfig) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o FlowErrorHandlingConfigOutput) FailOnFirstError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowErrorHandlingConfig) *bool { return v.FailOnFirstError }).(pulumi.BoolPtrOutput)
}

type FlowErrorHandlingConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowErrorHandlingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowErrorHandlingConfig)(nil)).Elem()
}

func (o FlowErrorHandlingConfigPtrOutput) ToFlowErrorHandlingConfigPtrOutput() FlowErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowErrorHandlingConfigPtrOutput) ToFlowErrorHandlingConfigPtrOutputWithContext(ctx context.Context) FlowErrorHandlingConfigPtrOutput {
	return o
}

func (o FlowErrorHandlingConfigPtrOutput) Elem() FlowErrorHandlingConfigOutput {
	return o.ApplyT(func(v *FlowErrorHandlingConfig) FlowErrorHandlingConfig {
		if v != nil {
			return *v
		}
		var ret FlowErrorHandlingConfig
		return ret
	}).(FlowErrorHandlingConfigOutput)
}

func (o FlowErrorHandlingConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o FlowErrorHandlingConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowErrorHandlingConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o FlowErrorHandlingConfigPtrOutput) FailOnFirstError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowErrorHandlingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailOnFirstError
	}).(pulumi.BoolPtrOutput)
}

type FlowEventBridgeDestinationProperties struct {
	ErrorHandlingConfig *FlowErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	Object              string                   `pulumi:"object"`
}

// FlowEventBridgeDestinationPropertiesInput is an input type that accepts FlowEventBridgeDestinationPropertiesArgs and FlowEventBridgeDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowEventBridgeDestinationPropertiesInput` via:
//
//          FlowEventBridgeDestinationPropertiesArgs{...}
type FlowEventBridgeDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowEventBridgeDestinationPropertiesOutput() FlowEventBridgeDestinationPropertiesOutput
	ToFlowEventBridgeDestinationPropertiesOutputWithContext(context.Context) FlowEventBridgeDestinationPropertiesOutput
}

type FlowEventBridgeDestinationPropertiesArgs struct {
	ErrorHandlingConfig FlowErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	Object              pulumi.StringInput              `pulumi:"object"`
}

func (FlowEventBridgeDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEventBridgeDestinationProperties)(nil)).Elem()
}

func (i FlowEventBridgeDestinationPropertiesArgs) ToFlowEventBridgeDestinationPropertiesOutput() FlowEventBridgeDestinationPropertiesOutput {
	return i.ToFlowEventBridgeDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowEventBridgeDestinationPropertiesArgs) ToFlowEventBridgeDestinationPropertiesOutputWithContext(ctx context.Context) FlowEventBridgeDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEventBridgeDestinationPropertiesOutput)
}

func (i FlowEventBridgeDestinationPropertiesArgs) ToFlowEventBridgeDestinationPropertiesPtrOutput() FlowEventBridgeDestinationPropertiesPtrOutput {
	return i.ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowEventBridgeDestinationPropertiesArgs) ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowEventBridgeDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEventBridgeDestinationPropertiesOutput).ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowEventBridgeDestinationPropertiesPtrInput is an input type that accepts FlowEventBridgeDestinationPropertiesArgs, FlowEventBridgeDestinationPropertiesPtr and FlowEventBridgeDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowEventBridgeDestinationPropertiesPtrInput` via:
//
//          FlowEventBridgeDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowEventBridgeDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowEventBridgeDestinationPropertiesPtrOutput() FlowEventBridgeDestinationPropertiesPtrOutput
	ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(context.Context) FlowEventBridgeDestinationPropertiesPtrOutput
}

type flowEventBridgeDestinationPropertiesPtrType FlowEventBridgeDestinationPropertiesArgs

func FlowEventBridgeDestinationPropertiesPtr(v *FlowEventBridgeDestinationPropertiesArgs) FlowEventBridgeDestinationPropertiesPtrInput {
	return (*flowEventBridgeDestinationPropertiesPtrType)(v)
}

func (*flowEventBridgeDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEventBridgeDestinationProperties)(nil)).Elem()
}

func (i *flowEventBridgeDestinationPropertiesPtrType) ToFlowEventBridgeDestinationPropertiesPtrOutput() FlowEventBridgeDestinationPropertiesPtrOutput {
	return i.ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowEventBridgeDestinationPropertiesPtrType) ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowEventBridgeDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEventBridgeDestinationPropertiesPtrOutput)
}

type FlowEventBridgeDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowEventBridgeDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEventBridgeDestinationProperties)(nil)).Elem()
}

func (o FlowEventBridgeDestinationPropertiesOutput) ToFlowEventBridgeDestinationPropertiesOutput() FlowEventBridgeDestinationPropertiesOutput {
	return o
}

func (o FlowEventBridgeDestinationPropertiesOutput) ToFlowEventBridgeDestinationPropertiesOutputWithContext(ctx context.Context) FlowEventBridgeDestinationPropertiesOutput {
	return o
}

func (o FlowEventBridgeDestinationPropertiesOutput) ToFlowEventBridgeDestinationPropertiesPtrOutput() FlowEventBridgeDestinationPropertiesPtrOutput {
	return o.ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowEventBridgeDestinationPropertiesOutput) ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowEventBridgeDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowEventBridgeDestinationProperties) *FlowEventBridgeDestinationProperties {
		return &v
	}).(FlowEventBridgeDestinationPropertiesPtrOutput)
}

func (o FlowEventBridgeDestinationPropertiesOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowEventBridgeDestinationProperties) *FlowErrorHandlingConfig { return v.ErrorHandlingConfig }).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowEventBridgeDestinationPropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowEventBridgeDestinationProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowEventBridgeDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowEventBridgeDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEventBridgeDestinationProperties)(nil)).Elem()
}

func (o FlowEventBridgeDestinationPropertiesPtrOutput) ToFlowEventBridgeDestinationPropertiesPtrOutput() FlowEventBridgeDestinationPropertiesPtrOutput {
	return o
}

func (o FlowEventBridgeDestinationPropertiesPtrOutput) ToFlowEventBridgeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowEventBridgeDestinationPropertiesPtrOutput {
	return o
}

func (o FlowEventBridgeDestinationPropertiesPtrOutput) Elem() FlowEventBridgeDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowEventBridgeDestinationProperties) FlowEventBridgeDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowEventBridgeDestinationProperties
		return ret
	}).(FlowEventBridgeDestinationPropertiesOutput)
}

func (o FlowEventBridgeDestinationPropertiesPtrOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowEventBridgeDestinationProperties) *FlowErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowEventBridgeDestinationPropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowEventBridgeDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowGoogleAnalyticsSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowGoogleAnalyticsSourcePropertiesInput is an input type that accepts FlowGoogleAnalyticsSourcePropertiesArgs and FlowGoogleAnalyticsSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowGoogleAnalyticsSourcePropertiesInput` via:
//
//          FlowGoogleAnalyticsSourcePropertiesArgs{...}
type FlowGoogleAnalyticsSourcePropertiesInput interface {
	pulumi.Input

	ToFlowGoogleAnalyticsSourcePropertiesOutput() FlowGoogleAnalyticsSourcePropertiesOutput
	ToFlowGoogleAnalyticsSourcePropertiesOutputWithContext(context.Context) FlowGoogleAnalyticsSourcePropertiesOutput
}

type FlowGoogleAnalyticsSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowGoogleAnalyticsSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowGoogleAnalyticsSourceProperties)(nil)).Elem()
}

func (i FlowGoogleAnalyticsSourcePropertiesArgs) ToFlowGoogleAnalyticsSourcePropertiesOutput() FlowGoogleAnalyticsSourcePropertiesOutput {
	return i.ToFlowGoogleAnalyticsSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowGoogleAnalyticsSourcePropertiesArgs) ToFlowGoogleAnalyticsSourcePropertiesOutputWithContext(ctx context.Context) FlowGoogleAnalyticsSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowGoogleAnalyticsSourcePropertiesOutput)
}

func (i FlowGoogleAnalyticsSourcePropertiesArgs) ToFlowGoogleAnalyticsSourcePropertiesPtrOutput() FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return i.ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowGoogleAnalyticsSourcePropertiesArgs) ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowGoogleAnalyticsSourcePropertiesOutput).ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowGoogleAnalyticsSourcePropertiesPtrInput is an input type that accepts FlowGoogleAnalyticsSourcePropertiesArgs, FlowGoogleAnalyticsSourcePropertiesPtr and FlowGoogleAnalyticsSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowGoogleAnalyticsSourcePropertiesPtrInput` via:
//
//          FlowGoogleAnalyticsSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowGoogleAnalyticsSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowGoogleAnalyticsSourcePropertiesPtrOutput() FlowGoogleAnalyticsSourcePropertiesPtrOutput
	ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(context.Context) FlowGoogleAnalyticsSourcePropertiesPtrOutput
}

type flowGoogleAnalyticsSourcePropertiesPtrType FlowGoogleAnalyticsSourcePropertiesArgs

func FlowGoogleAnalyticsSourcePropertiesPtr(v *FlowGoogleAnalyticsSourcePropertiesArgs) FlowGoogleAnalyticsSourcePropertiesPtrInput {
	return (*flowGoogleAnalyticsSourcePropertiesPtrType)(v)
}

func (*flowGoogleAnalyticsSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowGoogleAnalyticsSourceProperties)(nil)).Elem()
}

func (i *flowGoogleAnalyticsSourcePropertiesPtrType) ToFlowGoogleAnalyticsSourcePropertiesPtrOutput() FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return i.ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowGoogleAnalyticsSourcePropertiesPtrType) ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowGoogleAnalyticsSourcePropertiesPtrOutput)
}

type FlowGoogleAnalyticsSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowGoogleAnalyticsSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowGoogleAnalyticsSourceProperties)(nil)).Elem()
}

func (o FlowGoogleAnalyticsSourcePropertiesOutput) ToFlowGoogleAnalyticsSourcePropertiesOutput() FlowGoogleAnalyticsSourcePropertiesOutput {
	return o
}

func (o FlowGoogleAnalyticsSourcePropertiesOutput) ToFlowGoogleAnalyticsSourcePropertiesOutputWithContext(ctx context.Context) FlowGoogleAnalyticsSourcePropertiesOutput {
	return o
}

func (o FlowGoogleAnalyticsSourcePropertiesOutput) ToFlowGoogleAnalyticsSourcePropertiesPtrOutput() FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return o.ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowGoogleAnalyticsSourcePropertiesOutput) ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowGoogleAnalyticsSourceProperties) *FlowGoogleAnalyticsSourceProperties {
		return &v
	}).(FlowGoogleAnalyticsSourcePropertiesPtrOutput)
}

func (o FlowGoogleAnalyticsSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowGoogleAnalyticsSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowGoogleAnalyticsSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowGoogleAnalyticsSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowGoogleAnalyticsSourceProperties)(nil)).Elem()
}

func (o FlowGoogleAnalyticsSourcePropertiesPtrOutput) ToFlowGoogleAnalyticsSourcePropertiesPtrOutput() FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return o
}

func (o FlowGoogleAnalyticsSourcePropertiesPtrOutput) ToFlowGoogleAnalyticsSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return o
}

func (o FlowGoogleAnalyticsSourcePropertiesPtrOutput) Elem() FlowGoogleAnalyticsSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowGoogleAnalyticsSourceProperties) FlowGoogleAnalyticsSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowGoogleAnalyticsSourceProperties
		return ret
	}).(FlowGoogleAnalyticsSourcePropertiesOutput)
}

func (o FlowGoogleAnalyticsSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowGoogleAnalyticsSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Configuration for scheduled incremental data pull
type FlowIncrementalPullConfig struct {
	DatetimeTypeFieldName *string `pulumi:"datetimeTypeFieldName"`
}

// FlowIncrementalPullConfigInput is an input type that accepts FlowIncrementalPullConfigArgs and FlowIncrementalPullConfigOutput values.
// You can construct a concrete instance of `FlowIncrementalPullConfigInput` via:
//
//          FlowIncrementalPullConfigArgs{...}
type FlowIncrementalPullConfigInput interface {
	pulumi.Input

	ToFlowIncrementalPullConfigOutput() FlowIncrementalPullConfigOutput
	ToFlowIncrementalPullConfigOutputWithContext(context.Context) FlowIncrementalPullConfigOutput
}

// Configuration for scheduled incremental data pull
type FlowIncrementalPullConfigArgs struct {
	DatetimeTypeFieldName pulumi.StringPtrInput `pulumi:"datetimeTypeFieldName"`
}

func (FlowIncrementalPullConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowIncrementalPullConfig)(nil)).Elem()
}

func (i FlowIncrementalPullConfigArgs) ToFlowIncrementalPullConfigOutput() FlowIncrementalPullConfigOutput {
	return i.ToFlowIncrementalPullConfigOutputWithContext(context.Background())
}

func (i FlowIncrementalPullConfigArgs) ToFlowIncrementalPullConfigOutputWithContext(ctx context.Context) FlowIncrementalPullConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowIncrementalPullConfigOutput)
}

func (i FlowIncrementalPullConfigArgs) ToFlowIncrementalPullConfigPtrOutput() FlowIncrementalPullConfigPtrOutput {
	return i.ToFlowIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (i FlowIncrementalPullConfigArgs) ToFlowIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowIncrementalPullConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowIncrementalPullConfigOutput).ToFlowIncrementalPullConfigPtrOutputWithContext(ctx)
}

// FlowIncrementalPullConfigPtrInput is an input type that accepts FlowIncrementalPullConfigArgs, FlowIncrementalPullConfigPtr and FlowIncrementalPullConfigPtrOutput values.
// You can construct a concrete instance of `FlowIncrementalPullConfigPtrInput` via:
//
//          FlowIncrementalPullConfigArgs{...}
//
//  or:
//
//          nil
type FlowIncrementalPullConfigPtrInput interface {
	pulumi.Input

	ToFlowIncrementalPullConfigPtrOutput() FlowIncrementalPullConfigPtrOutput
	ToFlowIncrementalPullConfigPtrOutputWithContext(context.Context) FlowIncrementalPullConfigPtrOutput
}

type flowIncrementalPullConfigPtrType FlowIncrementalPullConfigArgs

func FlowIncrementalPullConfigPtr(v *FlowIncrementalPullConfigArgs) FlowIncrementalPullConfigPtrInput {
	return (*flowIncrementalPullConfigPtrType)(v)
}

func (*flowIncrementalPullConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowIncrementalPullConfig)(nil)).Elem()
}

func (i *flowIncrementalPullConfigPtrType) ToFlowIncrementalPullConfigPtrOutput() FlowIncrementalPullConfigPtrOutput {
	return i.ToFlowIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (i *flowIncrementalPullConfigPtrType) ToFlowIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowIncrementalPullConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowIncrementalPullConfigPtrOutput)
}

// Configuration for scheduled incremental data pull
type FlowIncrementalPullConfigOutput struct{ *pulumi.OutputState }

func (FlowIncrementalPullConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowIncrementalPullConfig)(nil)).Elem()
}

func (o FlowIncrementalPullConfigOutput) ToFlowIncrementalPullConfigOutput() FlowIncrementalPullConfigOutput {
	return o
}

func (o FlowIncrementalPullConfigOutput) ToFlowIncrementalPullConfigOutputWithContext(ctx context.Context) FlowIncrementalPullConfigOutput {
	return o
}

func (o FlowIncrementalPullConfigOutput) ToFlowIncrementalPullConfigPtrOutput() FlowIncrementalPullConfigPtrOutput {
	return o.ToFlowIncrementalPullConfigPtrOutputWithContext(context.Background())
}

func (o FlowIncrementalPullConfigOutput) ToFlowIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowIncrementalPullConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowIncrementalPullConfig) *FlowIncrementalPullConfig {
		return &v
	}).(FlowIncrementalPullConfigPtrOutput)
}

func (o FlowIncrementalPullConfigOutput) DatetimeTypeFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowIncrementalPullConfig) *string { return v.DatetimeTypeFieldName }).(pulumi.StringPtrOutput)
}

type FlowIncrementalPullConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowIncrementalPullConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowIncrementalPullConfig)(nil)).Elem()
}

func (o FlowIncrementalPullConfigPtrOutput) ToFlowIncrementalPullConfigPtrOutput() FlowIncrementalPullConfigPtrOutput {
	return o
}

func (o FlowIncrementalPullConfigPtrOutput) ToFlowIncrementalPullConfigPtrOutputWithContext(ctx context.Context) FlowIncrementalPullConfigPtrOutput {
	return o
}

func (o FlowIncrementalPullConfigPtrOutput) Elem() FlowIncrementalPullConfigOutput {
	return o.ApplyT(func(v *FlowIncrementalPullConfig) FlowIncrementalPullConfig {
		if v != nil {
			return *v
		}
		var ret FlowIncrementalPullConfig
		return ret
	}).(FlowIncrementalPullConfigOutput)
}

func (o FlowIncrementalPullConfigPtrOutput) DatetimeTypeFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowIncrementalPullConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatetimeTypeFieldName
	}).(pulumi.StringPtrOutput)
}

type FlowInforNexusSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowInforNexusSourcePropertiesInput is an input type that accepts FlowInforNexusSourcePropertiesArgs and FlowInforNexusSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowInforNexusSourcePropertiesInput` via:
//
//          FlowInforNexusSourcePropertiesArgs{...}
type FlowInforNexusSourcePropertiesInput interface {
	pulumi.Input

	ToFlowInforNexusSourcePropertiesOutput() FlowInforNexusSourcePropertiesOutput
	ToFlowInforNexusSourcePropertiesOutputWithContext(context.Context) FlowInforNexusSourcePropertiesOutput
}

type FlowInforNexusSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowInforNexusSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowInforNexusSourceProperties)(nil)).Elem()
}

func (i FlowInforNexusSourcePropertiesArgs) ToFlowInforNexusSourcePropertiesOutput() FlowInforNexusSourcePropertiesOutput {
	return i.ToFlowInforNexusSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowInforNexusSourcePropertiesArgs) ToFlowInforNexusSourcePropertiesOutputWithContext(ctx context.Context) FlowInforNexusSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowInforNexusSourcePropertiesOutput)
}

func (i FlowInforNexusSourcePropertiesArgs) ToFlowInforNexusSourcePropertiesPtrOutput() FlowInforNexusSourcePropertiesPtrOutput {
	return i.ToFlowInforNexusSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowInforNexusSourcePropertiesArgs) ToFlowInforNexusSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowInforNexusSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowInforNexusSourcePropertiesOutput).ToFlowInforNexusSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowInforNexusSourcePropertiesPtrInput is an input type that accepts FlowInforNexusSourcePropertiesArgs, FlowInforNexusSourcePropertiesPtr and FlowInforNexusSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowInforNexusSourcePropertiesPtrInput` via:
//
//          FlowInforNexusSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowInforNexusSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowInforNexusSourcePropertiesPtrOutput() FlowInforNexusSourcePropertiesPtrOutput
	ToFlowInforNexusSourcePropertiesPtrOutputWithContext(context.Context) FlowInforNexusSourcePropertiesPtrOutput
}

type flowInforNexusSourcePropertiesPtrType FlowInforNexusSourcePropertiesArgs

func FlowInforNexusSourcePropertiesPtr(v *FlowInforNexusSourcePropertiesArgs) FlowInforNexusSourcePropertiesPtrInput {
	return (*flowInforNexusSourcePropertiesPtrType)(v)
}

func (*flowInforNexusSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowInforNexusSourceProperties)(nil)).Elem()
}

func (i *flowInforNexusSourcePropertiesPtrType) ToFlowInforNexusSourcePropertiesPtrOutput() FlowInforNexusSourcePropertiesPtrOutput {
	return i.ToFlowInforNexusSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowInforNexusSourcePropertiesPtrType) ToFlowInforNexusSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowInforNexusSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowInforNexusSourcePropertiesPtrOutput)
}

type FlowInforNexusSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowInforNexusSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowInforNexusSourceProperties)(nil)).Elem()
}

func (o FlowInforNexusSourcePropertiesOutput) ToFlowInforNexusSourcePropertiesOutput() FlowInforNexusSourcePropertiesOutput {
	return o
}

func (o FlowInforNexusSourcePropertiesOutput) ToFlowInforNexusSourcePropertiesOutputWithContext(ctx context.Context) FlowInforNexusSourcePropertiesOutput {
	return o
}

func (o FlowInforNexusSourcePropertiesOutput) ToFlowInforNexusSourcePropertiesPtrOutput() FlowInforNexusSourcePropertiesPtrOutput {
	return o.ToFlowInforNexusSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowInforNexusSourcePropertiesOutput) ToFlowInforNexusSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowInforNexusSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowInforNexusSourceProperties) *FlowInforNexusSourceProperties {
		return &v
	}).(FlowInforNexusSourcePropertiesPtrOutput)
}

func (o FlowInforNexusSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowInforNexusSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowInforNexusSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowInforNexusSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowInforNexusSourceProperties)(nil)).Elem()
}

func (o FlowInforNexusSourcePropertiesPtrOutput) ToFlowInforNexusSourcePropertiesPtrOutput() FlowInforNexusSourcePropertiesPtrOutput {
	return o
}

func (o FlowInforNexusSourcePropertiesPtrOutput) ToFlowInforNexusSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowInforNexusSourcePropertiesPtrOutput {
	return o
}

func (o FlowInforNexusSourcePropertiesPtrOutput) Elem() FlowInforNexusSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowInforNexusSourceProperties) FlowInforNexusSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowInforNexusSourceProperties
		return ret
	}).(FlowInforNexusSourcePropertiesOutput)
}

func (o FlowInforNexusSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowInforNexusSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowLookoutMetricsDestinationProperties struct {
	Object *string `pulumi:"object"`
}

// FlowLookoutMetricsDestinationPropertiesInput is an input type that accepts FlowLookoutMetricsDestinationPropertiesArgs and FlowLookoutMetricsDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowLookoutMetricsDestinationPropertiesInput` via:
//
//          FlowLookoutMetricsDestinationPropertiesArgs{...}
type FlowLookoutMetricsDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowLookoutMetricsDestinationPropertiesOutput() FlowLookoutMetricsDestinationPropertiesOutput
	ToFlowLookoutMetricsDestinationPropertiesOutputWithContext(context.Context) FlowLookoutMetricsDestinationPropertiesOutput
}

type FlowLookoutMetricsDestinationPropertiesArgs struct {
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (FlowLookoutMetricsDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLookoutMetricsDestinationProperties)(nil)).Elem()
}

func (i FlowLookoutMetricsDestinationPropertiesArgs) ToFlowLookoutMetricsDestinationPropertiesOutput() FlowLookoutMetricsDestinationPropertiesOutput {
	return i.ToFlowLookoutMetricsDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowLookoutMetricsDestinationPropertiesArgs) ToFlowLookoutMetricsDestinationPropertiesOutputWithContext(ctx context.Context) FlowLookoutMetricsDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLookoutMetricsDestinationPropertiesOutput)
}

func (i FlowLookoutMetricsDestinationPropertiesArgs) ToFlowLookoutMetricsDestinationPropertiesPtrOutput() FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return i.ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowLookoutMetricsDestinationPropertiesArgs) ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLookoutMetricsDestinationPropertiesOutput).ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowLookoutMetricsDestinationPropertiesPtrInput is an input type that accepts FlowLookoutMetricsDestinationPropertiesArgs, FlowLookoutMetricsDestinationPropertiesPtr and FlowLookoutMetricsDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowLookoutMetricsDestinationPropertiesPtrInput` via:
//
//          FlowLookoutMetricsDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowLookoutMetricsDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowLookoutMetricsDestinationPropertiesPtrOutput() FlowLookoutMetricsDestinationPropertiesPtrOutput
	ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(context.Context) FlowLookoutMetricsDestinationPropertiesPtrOutput
}

type flowLookoutMetricsDestinationPropertiesPtrType FlowLookoutMetricsDestinationPropertiesArgs

func FlowLookoutMetricsDestinationPropertiesPtr(v *FlowLookoutMetricsDestinationPropertiesArgs) FlowLookoutMetricsDestinationPropertiesPtrInput {
	return (*flowLookoutMetricsDestinationPropertiesPtrType)(v)
}

func (*flowLookoutMetricsDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLookoutMetricsDestinationProperties)(nil)).Elem()
}

func (i *flowLookoutMetricsDestinationPropertiesPtrType) ToFlowLookoutMetricsDestinationPropertiesPtrOutput() FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return i.ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowLookoutMetricsDestinationPropertiesPtrType) ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLookoutMetricsDestinationPropertiesPtrOutput)
}

type FlowLookoutMetricsDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowLookoutMetricsDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLookoutMetricsDestinationProperties)(nil)).Elem()
}

func (o FlowLookoutMetricsDestinationPropertiesOutput) ToFlowLookoutMetricsDestinationPropertiesOutput() FlowLookoutMetricsDestinationPropertiesOutput {
	return o
}

func (o FlowLookoutMetricsDestinationPropertiesOutput) ToFlowLookoutMetricsDestinationPropertiesOutputWithContext(ctx context.Context) FlowLookoutMetricsDestinationPropertiesOutput {
	return o
}

func (o FlowLookoutMetricsDestinationPropertiesOutput) ToFlowLookoutMetricsDestinationPropertiesPtrOutput() FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return o.ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowLookoutMetricsDestinationPropertiesOutput) ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowLookoutMetricsDestinationProperties) *FlowLookoutMetricsDestinationProperties {
		return &v
	}).(FlowLookoutMetricsDestinationPropertiesPtrOutput)
}

func (o FlowLookoutMetricsDestinationPropertiesOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLookoutMetricsDestinationProperties) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type FlowLookoutMetricsDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowLookoutMetricsDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLookoutMetricsDestinationProperties)(nil)).Elem()
}

func (o FlowLookoutMetricsDestinationPropertiesPtrOutput) ToFlowLookoutMetricsDestinationPropertiesPtrOutput() FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return o
}

func (o FlowLookoutMetricsDestinationPropertiesPtrOutput) ToFlowLookoutMetricsDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowLookoutMetricsDestinationPropertiesPtrOutput {
	return o
}

func (o FlowLookoutMetricsDestinationPropertiesPtrOutput) Elem() FlowLookoutMetricsDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowLookoutMetricsDestinationProperties) FlowLookoutMetricsDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowLookoutMetricsDestinationProperties
		return ret
	}).(FlowLookoutMetricsDestinationPropertiesOutput)
}

func (o FlowLookoutMetricsDestinationPropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLookoutMetricsDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowMarketoSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowMarketoSourcePropertiesInput is an input type that accepts FlowMarketoSourcePropertiesArgs and FlowMarketoSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowMarketoSourcePropertiesInput` via:
//
//          FlowMarketoSourcePropertiesArgs{...}
type FlowMarketoSourcePropertiesInput interface {
	pulumi.Input

	ToFlowMarketoSourcePropertiesOutput() FlowMarketoSourcePropertiesOutput
	ToFlowMarketoSourcePropertiesOutputWithContext(context.Context) FlowMarketoSourcePropertiesOutput
}

type FlowMarketoSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowMarketoSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMarketoSourceProperties)(nil)).Elem()
}

func (i FlowMarketoSourcePropertiesArgs) ToFlowMarketoSourcePropertiesOutput() FlowMarketoSourcePropertiesOutput {
	return i.ToFlowMarketoSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowMarketoSourcePropertiesArgs) ToFlowMarketoSourcePropertiesOutputWithContext(ctx context.Context) FlowMarketoSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowMarketoSourcePropertiesOutput)
}

func (i FlowMarketoSourcePropertiesArgs) ToFlowMarketoSourcePropertiesPtrOutput() FlowMarketoSourcePropertiesPtrOutput {
	return i.ToFlowMarketoSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowMarketoSourcePropertiesArgs) ToFlowMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowMarketoSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowMarketoSourcePropertiesOutput).ToFlowMarketoSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowMarketoSourcePropertiesPtrInput is an input type that accepts FlowMarketoSourcePropertiesArgs, FlowMarketoSourcePropertiesPtr and FlowMarketoSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowMarketoSourcePropertiesPtrInput` via:
//
//          FlowMarketoSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowMarketoSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowMarketoSourcePropertiesPtrOutput() FlowMarketoSourcePropertiesPtrOutput
	ToFlowMarketoSourcePropertiesPtrOutputWithContext(context.Context) FlowMarketoSourcePropertiesPtrOutput
}

type flowMarketoSourcePropertiesPtrType FlowMarketoSourcePropertiesArgs

func FlowMarketoSourcePropertiesPtr(v *FlowMarketoSourcePropertiesArgs) FlowMarketoSourcePropertiesPtrInput {
	return (*flowMarketoSourcePropertiesPtrType)(v)
}

func (*flowMarketoSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowMarketoSourceProperties)(nil)).Elem()
}

func (i *flowMarketoSourcePropertiesPtrType) ToFlowMarketoSourcePropertiesPtrOutput() FlowMarketoSourcePropertiesPtrOutput {
	return i.ToFlowMarketoSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowMarketoSourcePropertiesPtrType) ToFlowMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowMarketoSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowMarketoSourcePropertiesPtrOutput)
}

type FlowMarketoSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowMarketoSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMarketoSourceProperties)(nil)).Elem()
}

func (o FlowMarketoSourcePropertiesOutput) ToFlowMarketoSourcePropertiesOutput() FlowMarketoSourcePropertiesOutput {
	return o
}

func (o FlowMarketoSourcePropertiesOutput) ToFlowMarketoSourcePropertiesOutputWithContext(ctx context.Context) FlowMarketoSourcePropertiesOutput {
	return o
}

func (o FlowMarketoSourcePropertiesOutput) ToFlowMarketoSourcePropertiesPtrOutput() FlowMarketoSourcePropertiesPtrOutput {
	return o.ToFlowMarketoSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowMarketoSourcePropertiesOutput) ToFlowMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowMarketoSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowMarketoSourceProperties) *FlowMarketoSourceProperties {
		return &v
	}).(FlowMarketoSourcePropertiesPtrOutput)
}

func (o FlowMarketoSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowMarketoSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowMarketoSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowMarketoSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowMarketoSourceProperties)(nil)).Elem()
}

func (o FlowMarketoSourcePropertiesPtrOutput) ToFlowMarketoSourcePropertiesPtrOutput() FlowMarketoSourcePropertiesPtrOutput {
	return o
}

func (o FlowMarketoSourcePropertiesPtrOutput) ToFlowMarketoSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowMarketoSourcePropertiesPtrOutput {
	return o
}

func (o FlowMarketoSourcePropertiesPtrOutput) Elem() FlowMarketoSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowMarketoSourceProperties) FlowMarketoSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowMarketoSourceProperties
		return ret
	}).(FlowMarketoSourcePropertiesOutput)
}

func (o FlowMarketoSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowMarketoSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowPrefixConfig struct {
	PrefixFormat *string `pulumi:"prefixFormat"`
	PrefixType   *string `pulumi:"prefixType"`
}

// FlowPrefixConfigInput is an input type that accepts FlowPrefixConfigArgs and FlowPrefixConfigOutput values.
// You can construct a concrete instance of `FlowPrefixConfigInput` via:
//
//          FlowPrefixConfigArgs{...}
type FlowPrefixConfigInput interface {
	pulumi.Input

	ToFlowPrefixConfigOutput() FlowPrefixConfigOutput
	ToFlowPrefixConfigOutputWithContext(context.Context) FlowPrefixConfigOutput
}

type FlowPrefixConfigArgs struct {
	PrefixFormat pulumi.StringPtrInput `pulumi:"prefixFormat"`
	PrefixType   pulumi.StringPtrInput `pulumi:"prefixType"`
}

func (FlowPrefixConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPrefixConfig)(nil)).Elem()
}

func (i FlowPrefixConfigArgs) ToFlowPrefixConfigOutput() FlowPrefixConfigOutput {
	return i.ToFlowPrefixConfigOutputWithContext(context.Background())
}

func (i FlowPrefixConfigArgs) ToFlowPrefixConfigOutputWithContext(ctx context.Context) FlowPrefixConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPrefixConfigOutput)
}

func (i FlowPrefixConfigArgs) ToFlowPrefixConfigPtrOutput() FlowPrefixConfigPtrOutput {
	return i.ToFlowPrefixConfigPtrOutputWithContext(context.Background())
}

func (i FlowPrefixConfigArgs) ToFlowPrefixConfigPtrOutputWithContext(ctx context.Context) FlowPrefixConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPrefixConfigOutput).ToFlowPrefixConfigPtrOutputWithContext(ctx)
}

// FlowPrefixConfigPtrInput is an input type that accepts FlowPrefixConfigArgs, FlowPrefixConfigPtr and FlowPrefixConfigPtrOutput values.
// You can construct a concrete instance of `FlowPrefixConfigPtrInput` via:
//
//          FlowPrefixConfigArgs{...}
//
//  or:
//
//          nil
type FlowPrefixConfigPtrInput interface {
	pulumi.Input

	ToFlowPrefixConfigPtrOutput() FlowPrefixConfigPtrOutput
	ToFlowPrefixConfigPtrOutputWithContext(context.Context) FlowPrefixConfigPtrOutput
}

type flowPrefixConfigPtrType FlowPrefixConfigArgs

func FlowPrefixConfigPtr(v *FlowPrefixConfigArgs) FlowPrefixConfigPtrInput {
	return (*flowPrefixConfigPtrType)(v)
}

func (*flowPrefixConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPrefixConfig)(nil)).Elem()
}

func (i *flowPrefixConfigPtrType) ToFlowPrefixConfigPtrOutput() FlowPrefixConfigPtrOutput {
	return i.ToFlowPrefixConfigPtrOutputWithContext(context.Background())
}

func (i *flowPrefixConfigPtrType) ToFlowPrefixConfigPtrOutputWithContext(ctx context.Context) FlowPrefixConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPrefixConfigPtrOutput)
}

type FlowPrefixConfigOutput struct{ *pulumi.OutputState }

func (FlowPrefixConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPrefixConfig)(nil)).Elem()
}

func (o FlowPrefixConfigOutput) ToFlowPrefixConfigOutput() FlowPrefixConfigOutput {
	return o
}

func (o FlowPrefixConfigOutput) ToFlowPrefixConfigOutputWithContext(ctx context.Context) FlowPrefixConfigOutput {
	return o
}

func (o FlowPrefixConfigOutput) ToFlowPrefixConfigPtrOutput() FlowPrefixConfigPtrOutput {
	return o.ToFlowPrefixConfigPtrOutputWithContext(context.Background())
}

func (o FlowPrefixConfigOutput) ToFlowPrefixConfigPtrOutputWithContext(ctx context.Context) FlowPrefixConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPrefixConfig) *FlowPrefixConfig {
		return &v
	}).(FlowPrefixConfigPtrOutput)
}

func (o FlowPrefixConfigOutput) PrefixFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowPrefixConfig) *string { return v.PrefixFormat }).(pulumi.StringPtrOutput)
}

func (o FlowPrefixConfigOutput) PrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowPrefixConfig) *string { return v.PrefixType }).(pulumi.StringPtrOutput)
}

type FlowPrefixConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowPrefixConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPrefixConfig)(nil)).Elem()
}

func (o FlowPrefixConfigPtrOutput) ToFlowPrefixConfigPtrOutput() FlowPrefixConfigPtrOutput {
	return o
}

func (o FlowPrefixConfigPtrOutput) ToFlowPrefixConfigPtrOutputWithContext(ctx context.Context) FlowPrefixConfigPtrOutput {
	return o
}

func (o FlowPrefixConfigPtrOutput) Elem() FlowPrefixConfigOutput {
	return o.ApplyT(func(v *FlowPrefixConfig) FlowPrefixConfig {
		if v != nil {
			return *v
		}
		var ret FlowPrefixConfig
		return ret
	}).(FlowPrefixConfigOutput)
}

func (o FlowPrefixConfigPtrOutput) PrefixFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowPrefixConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrefixFormat
	}).(pulumi.StringPtrOutput)
}

func (o FlowPrefixConfigPtrOutput) PrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowPrefixConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrefixType
	}).(pulumi.StringPtrOutput)
}

type FlowRedshiftDestinationProperties struct {
	BucketPrefix           *string                  `pulumi:"bucketPrefix"`
	ErrorHandlingConfig    *FlowErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	IntermediateBucketName string                   `pulumi:"intermediateBucketName"`
	Object                 string                   `pulumi:"object"`
}

// FlowRedshiftDestinationPropertiesInput is an input type that accepts FlowRedshiftDestinationPropertiesArgs and FlowRedshiftDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowRedshiftDestinationPropertiesInput` via:
//
//          FlowRedshiftDestinationPropertiesArgs{...}
type FlowRedshiftDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowRedshiftDestinationPropertiesOutput() FlowRedshiftDestinationPropertiesOutput
	ToFlowRedshiftDestinationPropertiesOutputWithContext(context.Context) FlowRedshiftDestinationPropertiesOutput
}

type FlowRedshiftDestinationPropertiesArgs struct {
	BucketPrefix           pulumi.StringPtrInput           `pulumi:"bucketPrefix"`
	ErrorHandlingConfig    FlowErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	IntermediateBucketName pulumi.StringInput              `pulumi:"intermediateBucketName"`
	Object                 pulumi.StringInput              `pulumi:"object"`
}

func (FlowRedshiftDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRedshiftDestinationProperties)(nil)).Elem()
}

func (i FlowRedshiftDestinationPropertiesArgs) ToFlowRedshiftDestinationPropertiesOutput() FlowRedshiftDestinationPropertiesOutput {
	return i.ToFlowRedshiftDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowRedshiftDestinationPropertiesArgs) ToFlowRedshiftDestinationPropertiesOutputWithContext(ctx context.Context) FlowRedshiftDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRedshiftDestinationPropertiesOutput)
}

func (i FlowRedshiftDestinationPropertiesArgs) ToFlowRedshiftDestinationPropertiesPtrOutput() FlowRedshiftDestinationPropertiesPtrOutput {
	return i.ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowRedshiftDestinationPropertiesArgs) ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowRedshiftDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRedshiftDestinationPropertiesOutput).ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowRedshiftDestinationPropertiesPtrInput is an input type that accepts FlowRedshiftDestinationPropertiesArgs, FlowRedshiftDestinationPropertiesPtr and FlowRedshiftDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowRedshiftDestinationPropertiesPtrInput` via:
//
//          FlowRedshiftDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowRedshiftDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowRedshiftDestinationPropertiesPtrOutput() FlowRedshiftDestinationPropertiesPtrOutput
	ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(context.Context) FlowRedshiftDestinationPropertiesPtrOutput
}

type flowRedshiftDestinationPropertiesPtrType FlowRedshiftDestinationPropertiesArgs

func FlowRedshiftDestinationPropertiesPtr(v *FlowRedshiftDestinationPropertiesArgs) FlowRedshiftDestinationPropertiesPtrInput {
	return (*flowRedshiftDestinationPropertiesPtrType)(v)
}

func (*flowRedshiftDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRedshiftDestinationProperties)(nil)).Elem()
}

func (i *flowRedshiftDestinationPropertiesPtrType) ToFlowRedshiftDestinationPropertiesPtrOutput() FlowRedshiftDestinationPropertiesPtrOutput {
	return i.ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowRedshiftDestinationPropertiesPtrType) ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowRedshiftDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRedshiftDestinationPropertiesPtrOutput)
}

type FlowRedshiftDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowRedshiftDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRedshiftDestinationProperties)(nil)).Elem()
}

func (o FlowRedshiftDestinationPropertiesOutput) ToFlowRedshiftDestinationPropertiesOutput() FlowRedshiftDestinationPropertiesOutput {
	return o
}

func (o FlowRedshiftDestinationPropertiesOutput) ToFlowRedshiftDestinationPropertiesOutputWithContext(ctx context.Context) FlowRedshiftDestinationPropertiesOutput {
	return o
}

func (o FlowRedshiftDestinationPropertiesOutput) ToFlowRedshiftDestinationPropertiesPtrOutput() FlowRedshiftDestinationPropertiesPtrOutput {
	return o.ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowRedshiftDestinationPropertiesOutput) ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowRedshiftDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowRedshiftDestinationProperties) *FlowRedshiftDestinationProperties {
		return &v
	}).(FlowRedshiftDestinationPropertiesPtrOutput)
}

func (o FlowRedshiftDestinationPropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowRedshiftDestinationProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o FlowRedshiftDestinationPropertiesOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowRedshiftDestinationProperties) *FlowErrorHandlingConfig { return v.ErrorHandlingConfig }).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowRedshiftDestinationPropertiesOutput) IntermediateBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowRedshiftDestinationProperties) string { return v.IntermediateBucketName }).(pulumi.StringOutput)
}

func (o FlowRedshiftDestinationPropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowRedshiftDestinationProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowRedshiftDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowRedshiftDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRedshiftDestinationProperties)(nil)).Elem()
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) ToFlowRedshiftDestinationPropertiesPtrOutput() FlowRedshiftDestinationPropertiesPtrOutput {
	return o
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) ToFlowRedshiftDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowRedshiftDestinationPropertiesPtrOutput {
	return o
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) Elem() FlowRedshiftDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowRedshiftDestinationProperties) FlowRedshiftDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowRedshiftDestinationProperties
		return ret
	}).(FlowRedshiftDestinationPropertiesOutput)
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowRedshiftDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowRedshiftDestinationProperties) *FlowErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) IntermediateBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowRedshiftDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.IntermediateBucketName
	}).(pulumi.StringPtrOutput)
}

func (o FlowRedshiftDestinationPropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowRedshiftDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowS3DestinationProperties struct {
	BucketName           string                    `pulumi:"bucketName"`
	BucketPrefix         *string                   `pulumi:"bucketPrefix"`
	S3OutputFormatConfig *FlowS3OutputFormatConfig `pulumi:"s3OutputFormatConfig"`
}

// FlowS3DestinationPropertiesInput is an input type that accepts FlowS3DestinationPropertiesArgs and FlowS3DestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowS3DestinationPropertiesInput` via:
//
//          FlowS3DestinationPropertiesArgs{...}
type FlowS3DestinationPropertiesInput interface {
	pulumi.Input

	ToFlowS3DestinationPropertiesOutput() FlowS3DestinationPropertiesOutput
	ToFlowS3DestinationPropertiesOutputWithContext(context.Context) FlowS3DestinationPropertiesOutput
}

type FlowS3DestinationPropertiesArgs struct {
	BucketName           pulumi.StringInput               `pulumi:"bucketName"`
	BucketPrefix         pulumi.StringPtrInput            `pulumi:"bucketPrefix"`
	S3OutputFormatConfig FlowS3OutputFormatConfigPtrInput `pulumi:"s3OutputFormatConfig"`
}

func (FlowS3DestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3DestinationProperties)(nil)).Elem()
}

func (i FlowS3DestinationPropertiesArgs) ToFlowS3DestinationPropertiesOutput() FlowS3DestinationPropertiesOutput {
	return i.ToFlowS3DestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowS3DestinationPropertiesArgs) ToFlowS3DestinationPropertiesOutputWithContext(ctx context.Context) FlowS3DestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3DestinationPropertiesOutput)
}

func (i FlowS3DestinationPropertiesArgs) ToFlowS3DestinationPropertiesPtrOutput() FlowS3DestinationPropertiesPtrOutput {
	return i.ToFlowS3DestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowS3DestinationPropertiesArgs) ToFlowS3DestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowS3DestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3DestinationPropertiesOutput).ToFlowS3DestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowS3DestinationPropertiesPtrInput is an input type that accepts FlowS3DestinationPropertiesArgs, FlowS3DestinationPropertiesPtr and FlowS3DestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowS3DestinationPropertiesPtrInput` via:
//
//          FlowS3DestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowS3DestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowS3DestinationPropertiesPtrOutput() FlowS3DestinationPropertiesPtrOutput
	ToFlowS3DestinationPropertiesPtrOutputWithContext(context.Context) FlowS3DestinationPropertiesPtrOutput
}

type flowS3DestinationPropertiesPtrType FlowS3DestinationPropertiesArgs

func FlowS3DestinationPropertiesPtr(v *FlowS3DestinationPropertiesArgs) FlowS3DestinationPropertiesPtrInput {
	return (*flowS3DestinationPropertiesPtrType)(v)
}

func (*flowS3DestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3DestinationProperties)(nil)).Elem()
}

func (i *flowS3DestinationPropertiesPtrType) ToFlowS3DestinationPropertiesPtrOutput() FlowS3DestinationPropertiesPtrOutput {
	return i.ToFlowS3DestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowS3DestinationPropertiesPtrType) ToFlowS3DestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowS3DestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3DestinationPropertiesPtrOutput)
}

type FlowS3DestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowS3DestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3DestinationProperties)(nil)).Elem()
}

func (o FlowS3DestinationPropertiesOutput) ToFlowS3DestinationPropertiesOutput() FlowS3DestinationPropertiesOutput {
	return o
}

func (o FlowS3DestinationPropertiesOutput) ToFlowS3DestinationPropertiesOutputWithContext(ctx context.Context) FlowS3DestinationPropertiesOutput {
	return o
}

func (o FlowS3DestinationPropertiesOutput) ToFlowS3DestinationPropertiesPtrOutput() FlowS3DestinationPropertiesPtrOutput {
	return o.ToFlowS3DestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowS3DestinationPropertiesOutput) ToFlowS3DestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowS3DestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowS3DestinationProperties) *FlowS3DestinationProperties {
		return &v
	}).(FlowS3DestinationPropertiesPtrOutput)
}

func (o FlowS3DestinationPropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowS3DestinationProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o FlowS3DestinationPropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowS3DestinationProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o FlowS3DestinationPropertiesOutput) S3OutputFormatConfig() FlowS3OutputFormatConfigPtrOutput {
	return o.ApplyT(func(v FlowS3DestinationProperties) *FlowS3OutputFormatConfig { return v.S3OutputFormatConfig }).(FlowS3OutputFormatConfigPtrOutput)
}

type FlowS3DestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowS3DestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3DestinationProperties)(nil)).Elem()
}

func (o FlowS3DestinationPropertiesPtrOutput) ToFlowS3DestinationPropertiesPtrOutput() FlowS3DestinationPropertiesPtrOutput {
	return o
}

func (o FlowS3DestinationPropertiesPtrOutput) ToFlowS3DestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowS3DestinationPropertiesPtrOutput {
	return o
}

func (o FlowS3DestinationPropertiesPtrOutput) Elem() FlowS3DestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowS3DestinationProperties) FlowS3DestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowS3DestinationProperties
		return ret
	}).(FlowS3DestinationPropertiesOutput)
}

func (o FlowS3DestinationPropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3DestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o FlowS3DestinationPropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3DestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o FlowS3DestinationPropertiesPtrOutput) S3OutputFormatConfig() FlowS3OutputFormatConfigPtrOutput {
	return o.ApplyT(func(v *FlowS3DestinationProperties) *FlowS3OutputFormatConfig {
		if v == nil {
			return nil
		}
		return v.S3OutputFormatConfig
	}).(FlowS3OutputFormatConfigPtrOutput)
}

type FlowS3OutputFormatConfig struct {
	AggregationConfig *FlowAggregationConfig `pulumi:"aggregationConfig"`
	FileType          *string                `pulumi:"fileType"`
	PrefixConfig      *FlowPrefixConfig      `pulumi:"prefixConfig"`
}

// FlowS3OutputFormatConfigInput is an input type that accepts FlowS3OutputFormatConfigArgs and FlowS3OutputFormatConfigOutput values.
// You can construct a concrete instance of `FlowS3OutputFormatConfigInput` via:
//
//          FlowS3OutputFormatConfigArgs{...}
type FlowS3OutputFormatConfigInput interface {
	pulumi.Input

	ToFlowS3OutputFormatConfigOutput() FlowS3OutputFormatConfigOutput
	ToFlowS3OutputFormatConfigOutputWithContext(context.Context) FlowS3OutputFormatConfigOutput
}

type FlowS3OutputFormatConfigArgs struct {
	AggregationConfig FlowAggregationConfigPtrInput `pulumi:"aggregationConfig"`
	FileType          pulumi.StringPtrInput         `pulumi:"fileType"`
	PrefixConfig      FlowPrefixConfigPtrInput      `pulumi:"prefixConfig"`
}

func (FlowS3OutputFormatConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3OutputFormatConfig)(nil)).Elem()
}

func (i FlowS3OutputFormatConfigArgs) ToFlowS3OutputFormatConfigOutput() FlowS3OutputFormatConfigOutput {
	return i.ToFlowS3OutputFormatConfigOutputWithContext(context.Background())
}

func (i FlowS3OutputFormatConfigArgs) ToFlowS3OutputFormatConfigOutputWithContext(ctx context.Context) FlowS3OutputFormatConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3OutputFormatConfigOutput)
}

func (i FlowS3OutputFormatConfigArgs) ToFlowS3OutputFormatConfigPtrOutput() FlowS3OutputFormatConfigPtrOutput {
	return i.ToFlowS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i FlowS3OutputFormatConfigArgs) ToFlowS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowS3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3OutputFormatConfigOutput).ToFlowS3OutputFormatConfigPtrOutputWithContext(ctx)
}

// FlowS3OutputFormatConfigPtrInput is an input type that accepts FlowS3OutputFormatConfigArgs, FlowS3OutputFormatConfigPtr and FlowS3OutputFormatConfigPtrOutput values.
// You can construct a concrete instance of `FlowS3OutputFormatConfigPtrInput` via:
//
//          FlowS3OutputFormatConfigArgs{...}
//
//  or:
//
//          nil
type FlowS3OutputFormatConfigPtrInput interface {
	pulumi.Input

	ToFlowS3OutputFormatConfigPtrOutput() FlowS3OutputFormatConfigPtrOutput
	ToFlowS3OutputFormatConfigPtrOutputWithContext(context.Context) FlowS3OutputFormatConfigPtrOutput
}

type flowS3OutputFormatConfigPtrType FlowS3OutputFormatConfigArgs

func FlowS3OutputFormatConfigPtr(v *FlowS3OutputFormatConfigArgs) FlowS3OutputFormatConfigPtrInput {
	return (*flowS3OutputFormatConfigPtrType)(v)
}

func (*flowS3OutputFormatConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3OutputFormatConfig)(nil)).Elem()
}

func (i *flowS3OutputFormatConfigPtrType) ToFlowS3OutputFormatConfigPtrOutput() FlowS3OutputFormatConfigPtrOutput {
	return i.ToFlowS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i *flowS3OutputFormatConfigPtrType) ToFlowS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowS3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3OutputFormatConfigPtrOutput)
}

type FlowS3OutputFormatConfigOutput struct{ *pulumi.OutputState }

func (FlowS3OutputFormatConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3OutputFormatConfig)(nil)).Elem()
}

func (o FlowS3OutputFormatConfigOutput) ToFlowS3OutputFormatConfigOutput() FlowS3OutputFormatConfigOutput {
	return o
}

func (o FlowS3OutputFormatConfigOutput) ToFlowS3OutputFormatConfigOutputWithContext(ctx context.Context) FlowS3OutputFormatConfigOutput {
	return o
}

func (o FlowS3OutputFormatConfigOutput) ToFlowS3OutputFormatConfigPtrOutput() FlowS3OutputFormatConfigPtrOutput {
	return o.ToFlowS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (o FlowS3OutputFormatConfigOutput) ToFlowS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowS3OutputFormatConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowS3OutputFormatConfig) *FlowS3OutputFormatConfig {
		return &v
	}).(FlowS3OutputFormatConfigPtrOutput)
}

func (o FlowS3OutputFormatConfigOutput) AggregationConfig() FlowAggregationConfigPtrOutput {
	return o.ApplyT(func(v FlowS3OutputFormatConfig) *FlowAggregationConfig { return v.AggregationConfig }).(FlowAggregationConfigPtrOutput)
}

func (o FlowS3OutputFormatConfigOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowS3OutputFormatConfig) *string { return v.FileType }).(pulumi.StringPtrOutput)
}

func (o FlowS3OutputFormatConfigOutput) PrefixConfig() FlowPrefixConfigPtrOutput {
	return o.ApplyT(func(v FlowS3OutputFormatConfig) *FlowPrefixConfig { return v.PrefixConfig }).(FlowPrefixConfigPtrOutput)
}

type FlowS3OutputFormatConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowS3OutputFormatConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3OutputFormatConfig)(nil)).Elem()
}

func (o FlowS3OutputFormatConfigPtrOutput) ToFlowS3OutputFormatConfigPtrOutput() FlowS3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowS3OutputFormatConfigPtrOutput) ToFlowS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowS3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowS3OutputFormatConfigPtrOutput) Elem() FlowS3OutputFormatConfigOutput {
	return o.ApplyT(func(v *FlowS3OutputFormatConfig) FlowS3OutputFormatConfig {
		if v != nil {
			return *v
		}
		var ret FlowS3OutputFormatConfig
		return ret
	}).(FlowS3OutputFormatConfigOutput)
}

func (o FlowS3OutputFormatConfigPtrOutput) AggregationConfig() FlowAggregationConfigPtrOutput {
	return o.ApplyT(func(v *FlowS3OutputFormatConfig) *FlowAggregationConfig {
		if v == nil {
			return nil
		}
		return v.AggregationConfig
	}).(FlowAggregationConfigPtrOutput)
}

func (o FlowS3OutputFormatConfigPtrOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3OutputFormatConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileType
	}).(pulumi.StringPtrOutput)
}

func (o FlowS3OutputFormatConfigPtrOutput) PrefixConfig() FlowPrefixConfigPtrOutput {
	return o.ApplyT(func(v *FlowS3OutputFormatConfig) *FlowPrefixConfig {
		if v == nil {
			return nil
		}
		return v.PrefixConfig
	}).(FlowPrefixConfigPtrOutput)
}

type FlowS3SourceProperties struct {
	BucketName   string `pulumi:"bucketName"`
	BucketPrefix string `pulumi:"bucketPrefix"`
}

// FlowS3SourcePropertiesInput is an input type that accepts FlowS3SourcePropertiesArgs and FlowS3SourcePropertiesOutput values.
// You can construct a concrete instance of `FlowS3SourcePropertiesInput` via:
//
//          FlowS3SourcePropertiesArgs{...}
type FlowS3SourcePropertiesInput interface {
	pulumi.Input

	ToFlowS3SourcePropertiesOutput() FlowS3SourcePropertiesOutput
	ToFlowS3SourcePropertiesOutputWithContext(context.Context) FlowS3SourcePropertiesOutput
}

type FlowS3SourcePropertiesArgs struct {
	BucketName   pulumi.StringInput `pulumi:"bucketName"`
	BucketPrefix pulumi.StringInput `pulumi:"bucketPrefix"`
}

func (FlowS3SourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3SourceProperties)(nil)).Elem()
}

func (i FlowS3SourcePropertiesArgs) ToFlowS3SourcePropertiesOutput() FlowS3SourcePropertiesOutput {
	return i.ToFlowS3SourcePropertiesOutputWithContext(context.Background())
}

func (i FlowS3SourcePropertiesArgs) ToFlowS3SourcePropertiesOutputWithContext(ctx context.Context) FlowS3SourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3SourcePropertiesOutput)
}

func (i FlowS3SourcePropertiesArgs) ToFlowS3SourcePropertiesPtrOutput() FlowS3SourcePropertiesPtrOutput {
	return i.ToFlowS3SourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowS3SourcePropertiesArgs) ToFlowS3SourcePropertiesPtrOutputWithContext(ctx context.Context) FlowS3SourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3SourcePropertiesOutput).ToFlowS3SourcePropertiesPtrOutputWithContext(ctx)
}

// FlowS3SourcePropertiesPtrInput is an input type that accepts FlowS3SourcePropertiesArgs, FlowS3SourcePropertiesPtr and FlowS3SourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowS3SourcePropertiesPtrInput` via:
//
//          FlowS3SourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowS3SourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowS3SourcePropertiesPtrOutput() FlowS3SourcePropertiesPtrOutput
	ToFlowS3SourcePropertiesPtrOutputWithContext(context.Context) FlowS3SourcePropertiesPtrOutput
}

type flowS3SourcePropertiesPtrType FlowS3SourcePropertiesArgs

func FlowS3SourcePropertiesPtr(v *FlowS3SourcePropertiesArgs) FlowS3SourcePropertiesPtrInput {
	return (*flowS3SourcePropertiesPtrType)(v)
}

func (*flowS3SourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3SourceProperties)(nil)).Elem()
}

func (i *flowS3SourcePropertiesPtrType) ToFlowS3SourcePropertiesPtrOutput() FlowS3SourcePropertiesPtrOutput {
	return i.ToFlowS3SourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowS3SourcePropertiesPtrType) ToFlowS3SourcePropertiesPtrOutputWithContext(ctx context.Context) FlowS3SourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3SourcePropertiesPtrOutput)
}

type FlowS3SourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowS3SourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3SourceProperties)(nil)).Elem()
}

func (o FlowS3SourcePropertiesOutput) ToFlowS3SourcePropertiesOutput() FlowS3SourcePropertiesOutput {
	return o
}

func (o FlowS3SourcePropertiesOutput) ToFlowS3SourcePropertiesOutputWithContext(ctx context.Context) FlowS3SourcePropertiesOutput {
	return o
}

func (o FlowS3SourcePropertiesOutput) ToFlowS3SourcePropertiesPtrOutput() FlowS3SourcePropertiesPtrOutput {
	return o.ToFlowS3SourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowS3SourcePropertiesOutput) ToFlowS3SourcePropertiesPtrOutputWithContext(ctx context.Context) FlowS3SourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowS3SourceProperties) *FlowS3SourceProperties {
		return &v
	}).(FlowS3SourcePropertiesPtrOutput)
}

func (o FlowS3SourcePropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowS3SourceProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o FlowS3SourcePropertiesOutput) BucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v FlowS3SourceProperties) string { return v.BucketPrefix }).(pulumi.StringOutput)
}

type FlowS3SourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowS3SourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3SourceProperties)(nil)).Elem()
}

func (o FlowS3SourcePropertiesPtrOutput) ToFlowS3SourcePropertiesPtrOutput() FlowS3SourcePropertiesPtrOutput {
	return o
}

func (o FlowS3SourcePropertiesPtrOutput) ToFlowS3SourcePropertiesPtrOutputWithContext(ctx context.Context) FlowS3SourcePropertiesPtrOutput {
	return o
}

func (o FlowS3SourcePropertiesPtrOutput) Elem() FlowS3SourcePropertiesOutput {
	return o.ApplyT(func(v *FlowS3SourceProperties) FlowS3SourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowS3SourceProperties
		return ret
	}).(FlowS3SourcePropertiesOutput)
}

func (o FlowS3SourcePropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3SourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o FlowS3SourcePropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3SourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

type FlowSalesforceDestinationProperties struct {
	ErrorHandlingConfig *FlowErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// List of fields used as ID when performing a write operation.
	IdFieldNames       []string `pulumi:"idFieldNames"`
	Object             string   `pulumi:"object"`
	WriteOperationType *string  `pulumi:"writeOperationType"`
}

// FlowSalesforceDestinationPropertiesInput is an input type that accepts FlowSalesforceDestinationPropertiesArgs and FlowSalesforceDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowSalesforceDestinationPropertiesInput` via:
//
//          FlowSalesforceDestinationPropertiesArgs{...}
type FlowSalesforceDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowSalesforceDestinationPropertiesOutput() FlowSalesforceDestinationPropertiesOutput
	ToFlowSalesforceDestinationPropertiesOutputWithContext(context.Context) FlowSalesforceDestinationPropertiesOutput
}

type FlowSalesforceDestinationPropertiesArgs struct {
	ErrorHandlingConfig FlowErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// List of fields used as ID when performing a write operation.
	IdFieldNames       pulumi.StringArrayInput `pulumi:"idFieldNames"`
	Object             pulumi.StringInput      `pulumi:"object"`
	WriteOperationType pulumi.StringPtrInput   `pulumi:"writeOperationType"`
}

func (FlowSalesforceDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSalesforceDestinationProperties)(nil)).Elem()
}

func (i FlowSalesforceDestinationPropertiesArgs) ToFlowSalesforceDestinationPropertiesOutput() FlowSalesforceDestinationPropertiesOutput {
	return i.ToFlowSalesforceDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowSalesforceDestinationPropertiesArgs) ToFlowSalesforceDestinationPropertiesOutputWithContext(ctx context.Context) FlowSalesforceDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSalesforceDestinationPropertiesOutput)
}

func (i FlowSalesforceDestinationPropertiesArgs) ToFlowSalesforceDestinationPropertiesPtrOutput() FlowSalesforceDestinationPropertiesPtrOutput {
	return i.ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSalesforceDestinationPropertiesArgs) ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSalesforceDestinationPropertiesOutput).ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowSalesforceDestinationPropertiesPtrInput is an input type that accepts FlowSalesforceDestinationPropertiesArgs, FlowSalesforceDestinationPropertiesPtr and FlowSalesforceDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSalesforceDestinationPropertiesPtrInput` via:
//
//          FlowSalesforceDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowSalesforceDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowSalesforceDestinationPropertiesPtrOutput() FlowSalesforceDestinationPropertiesPtrOutput
	ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(context.Context) FlowSalesforceDestinationPropertiesPtrOutput
}

type flowSalesforceDestinationPropertiesPtrType FlowSalesforceDestinationPropertiesArgs

func FlowSalesforceDestinationPropertiesPtr(v *FlowSalesforceDestinationPropertiesArgs) FlowSalesforceDestinationPropertiesPtrInput {
	return (*flowSalesforceDestinationPropertiesPtrType)(v)
}

func (*flowSalesforceDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSalesforceDestinationProperties)(nil)).Elem()
}

func (i *flowSalesforceDestinationPropertiesPtrType) ToFlowSalesforceDestinationPropertiesPtrOutput() FlowSalesforceDestinationPropertiesPtrOutput {
	return i.ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSalesforceDestinationPropertiesPtrType) ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSalesforceDestinationPropertiesPtrOutput)
}

type FlowSalesforceDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowSalesforceDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSalesforceDestinationProperties)(nil)).Elem()
}

func (o FlowSalesforceDestinationPropertiesOutput) ToFlowSalesforceDestinationPropertiesOutput() FlowSalesforceDestinationPropertiesOutput {
	return o
}

func (o FlowSalesforceDestinationPropertiesOutput) ToFlowSalesforceDestinationPropertiesOutputWithContext(ctx context.Context) FlowSalesforceDestinationPropertiesOutput {
	return o
}

func (o FlowSalesforceDestinationPropertiesOutput) ToFlowSalesforceDestinationPropertiesPtrOutput() FlowSalesforceDestinationPropertiesPtrOutput {
	return o.ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSalesforceDestinationPropertiesOutput) ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSalesforceDestinationProperties) *FlowSalesforceDestinationProperties {
		return &v
	}).(FlowSalesforceDestinationPropertiesPtrOutput)
}

func (o FlowSalesforceDestinationPropertiesOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowSalesforceDestinationProperties) *FlowErrorHandlingConfig { return v.ErrorHandlingConfig }).(FlowErrorHandlingConfigPtrOutput)
}

// List of fields used as ID when performing a write operation.
func (o FlowSalesforceDestinationPropertiesOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowSalesforceDestinationProperties) []string { return v.IdFieldNames }).(pulumi.StringArrayOutput)
}

func (o FlowSalesforceDestinationPropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSalesforceDestinationProperties) string { return v.Object }).(pulumi.StringOutput)
}

func (o FlowSalesforceDestinationPropertiesOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSalesforceDestinationProperties) *string { return v.WriteOperationType }).(pulumi.StringPtrOutput)
}

type FlowSalesforceDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSalesforceDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSalesforceDestinationProperties)(nil)).Elem()
}

func (o FlowSalesforceDestinationPropertiesPtrOutput) ToFlowSalesforceDestinationPropertiesPtrOutput() FlowSalesforceDestinationPropertiesPtrOutput {
	return o
}

func (o FlowSalesforceDestinationPropertiesPtrOutput) ToFlowSalesforceDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceDestinationPropertiesPtrOutput {
	return o
}

func (o FlowSalesforceDestinationPropertiesPtrOutput) Elem() FlowSalesforceDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowSalesforceDestinationProperties) FlowSalesforceDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowSalesforceDestinationProperties
		return ret
	}).(FlowSalesforceDestinationPropertiesOutput)
}

func (o FlowSalesforceDestinationPropertiesPtrOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowSalesforceDestinationProperties) *FlowErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowErrorHandlingConfigPtrOutput)
}

// List of fields used as ID when performing a write operation.
func (o FlowSalesforceDestinationPropertiesPtrOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowSalesforceDestinationProperties) []string {
		if v == nil {
			return nil
		}
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

func (o FlowSalesforceDestinationPropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSalesforceDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

func (o FlowSalesforceDestinationPropertiesPtrOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSalesforceDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowSalesforceSourceProperties struct {
	EnableDynamicFieldUpdate *bool  `pulumi:"enableDynamicFieldUpdate"`
	IncludeDeletedRecords    *bool  `pulumi:"includeDeletedRecords"`
	Object                   string `pulumi:"object"`
}

// FlowSalesforceSourcePropertiesInput is an input type that accepts FlowSalesforceSourcePropertiesArgs and FlowSalesforceSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowSalesforceSourcePropertiesInput` via:
//
//          FlowSalesforceSourcePropertiesArgs{...}
type FlowSalesforceSourcePropertiesInput interface {
	pulumi.Input

	ToFlowSalesforceSourcePropertiesOutput() FlowSalesforceSourcePropertiesOutput
	ToFlowSalesforceSourcePropertiesOutputWithContext(context.Context) FlowSalesforceSourcePropertiesOutput
}

type FlowSalesforceSourcePropertiesArgs struct {
	EnableDynamicFieldUpdate pulumi.BoolPtrInput `pulumi:"enableDynamicFieldUpdate"`
	IncludeDeletedRecords    pulumi.BoolPtrInput `pulumi:"includeDeletedRecords"`
	Object                   pulumi.StringInput  `pulumi:"object"`
}

func (FlowSalesforceSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSalesforceSourceProperties)(nil)).Elem()
}

func (i FlowSalesforceSourcePropertiesArgs) ToFlowSalesforceSourcePropertiesOutput() FlowSalesforceSourcePropertiesOutput {
	return i.ToFlowSalesforceSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowSalesforceSourcePropertiesArgs) ToFlowSalesforceSourcePropertiesOutputWithContext(ctx context.Context) FlowSalesforceSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSalesforceSourcePropertiesOutput)
}

func (i FlowSalesforceSourcePropertiesArgs) ToFlowSalesforceSourcePropertiesPtrOutput() FlowSalesforceSourcePropertiesPtrOutput {
	return i.ToFlowSalesforceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSalesforceSourcePropertiesArgs) ToFlowSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSalesforceSourcePropertiesOutput).ToFlowSalesforceSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowSalesforceSourcePropertiesPtrInput is an input type that accepts FlowSalesforceSourcePropertiesArgs, FlowSalesforceSourcePropertiesPtr and FlowSalesforceSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSalesforceSourcePropertiesPtrInput` via:
//
//          FlowSalesforceSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowSalesforceSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowSalesforceSourcePropertiesPtrOutput() FlowSalesforceSourcePropertiesPtrOutput
	ToFlowSalesforceSourcePropertiesPtrOutputWithContext(context.Context) FlowSalesforceSourcePropertiesPtrOutput
}

type flowSalesforceSourcePropertiesPtrType FlowSalesforceSourcePropertiesArgs

func FlowSalesforceSourcePropertiesPtr(v *FlowSalesforceSourcePropertiesArgs) FlowSalesforceSourcePropertiesPtrInput {
	return (*flowSalesforceSourcePropertiesPtrType)(v)
}

func (*flowSalesforceSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSalesforceSourceProperties)(nil)).Elem()
}

func (i *flowSalesforceSourcePropertiesPtrType) ToFlowSalesforceSourcePropertiesPtrOutput() FlowSalesforceSourcePropertiesPtrOutput {
	return i.ToFlowSalesforceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSalesforceSourcePropertiesPtrType) ToFlowSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSalesforceSourcePropertiesPtrOutput)
}

type FlowSalesforceSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowSalesforceSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSalesforceSourceProperties)(nil)).Elem()
}

func (o FlowSalesforceSourcePropertiesOutput) ToFlowSalesforceSourcePropertiesOutput() FlowSalesforceSourcePropertiesOutput {
	return o
}

func (o FlowSalesforceSourcePropertiesOutput) ToFlowSalesforceSourcePropertiesOutputWithContext(ctx context.Context) FlowSalesforceSourcePropertiesOutput {
	return o
}

func (o FlowSalesforceSourcePropertiesOutput) ToFlowSalesforceSourcePropertiesPtrOutput() FlowSalesforceSourcePropertiesPtrOutput {
	return o.ToFlowSalesforceSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSalesforceSourcePropertiesOutput) ToFlowSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSalesforceSourceProperties) *FlowSalesforceSourceProperties {
		return &v
	}).(FlowSalesforceSourcePropertiesPtrOutput)
}

func (o FlowSalesforceSourcePropertiesOutput) EnableDynamicFieldUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSalesforceSourceProperties) *bool { return v.EnableDynamicFieldUpdate }).(pulumi.BoolPtrOutput)
}

func (o FlowSalesforceSourcePropertiesOutput) IncludeDeletedRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowSalesforceSourceProperties) *bool { return v.IncludeDeletedRecords }).(pulumi.BoolPtrOutput)
}

func (o FlowSalesforceSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSalesforceSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSalesforceSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSalesforceSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSalesforceSourceProperties)(nil)).Elem()
}

func (o FlowSalesforceSourcePropertiesPtrOutput) ToFlowSalesforceSourcePropertiesPtrOutput() FlowSalesforceSourcePropertiesPtrOutput {
	return o
}

func (o FlowSalesforceSourcePropertiesPtrOutput) ToFlowSalesforceSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSalesforceSourcePropertiesPtrOutput {
	return o
}

func (o FlowSalesforceSourcePropertiesPtrOutput) Elem() FlowSalesforceSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowSalesforceSourceProperties) FlowSalesforceSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowSalesforceSourceProperties
		return ret
	}).(FlowSalesforceSourcePropertiesOutput)
}

func (o FlowSalesforceSourcePropertiesPtrOutput) EnableDynamicFieldUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSalesforceSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicFieldUpdate
	}).(pulumi.BoolPtrOutput)
}

func (o FlowSalesforceSourcePropertiesPtrOutput) IncludeDeletedRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowSalesforceSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeDeletedRecords
	}).(pulumi.BoolPtrOutput)
}

func (o FlowSalesforceSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSalesforceSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Details required for scheduled trigger type
type FlowScheduledTriggerProperties struct {
	DataPullMode       *string  `pulumi:"dataPullMode"`
	ScheduleEndTime    *float64 `pulumi:"scheduleEndTime"`
	ScheduleExpression string   `pulumi:"scheduleExpression"`
	ScheduleOffset     *float64 `pulumi:"scheduleOffset"`
	ScheduleStartTime  *float64 `pulumi:"scheduleStartTime"`
	TimeZone           *string  `pulumi:"timeZone"`
}

// FlowScheduledTriggerPropertiesInput is an input type that accepts FlowScheduledTriggerPropertiesArgs and FlowScheduledTriggerPropertiesOutput values.
// You can construct a concrete instance of `FlowScheduledTriggerPropertiesInput` via:
//
//          FlowScheduledTriggerPropertiesArgs{...}
type FlowScheduledTriggerPropertiesInput interface {
	pulumi.Input

	ToFlowScheduledTriggerPropertiesOutput() FlowScheduledTriggerPropertiesOutput
	ToFlowScheduledTriggerPropertiesOutputWithContext(context.Context) FlowScheduledTriggerPropertiesOutput
}

// Details required for scheduled trigger type
type FlowScheduledTriggerPropertiesArgs struct {
	DataPullMode       pulumi.StringPtrInput  `pulumi:"dataPullMode"`
	ScheduleEndTime    pulumi.Float64PtrInput `pulumi:"scheduleEndTime"`
	ScheduleExpression pulumi.StringInput     `pulumi:"scheduleExpression"`
	ScheduleOffset     pulumi.Float64PtrInput `pulumi:"scheduleOffset"`
	ScheduleStartTime  pulumi.Float64PtrInput `pulumi:"scheduleStartTime"`
	TimeZone           pulumi.StringPtrInput  `pulumi:"timeZone"`
}

func (FlowScheduledTriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowScheduledTriggerProperties)(nil)).Elem()
}

func (i FlowScheduledTriggerPropertiesArgs) ToFlowScheduledTriggerPropertiesOutput() FlowScheduledTriggerPropertiesOutput {
	return i.ToFlowScheduledTriggerPropertiesOutputWithContext(context.Background())
}

func (i FlowScheduledTriggerPropertiesArgs) ToFlowScheduledTriggerPropertiesOutputWithContext(ctx context.Context) FlowScheduledTriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowScheduledTriggerPropertiesOutput)
}

func (i FlowScheduledTriggerPropertiesArgs) ToFlowScheduledTriggerPropertiesPtrOutput() FlowScheduledTriggerPropertiesPtrOutput {
	return i.ToFlowScheduledTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowScheduledTriggerPropertiesArgs) ToFlowScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowScheduledTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowScheduledTriggerPropertiesOutput).ToFlowScheduledTriggerPropertiesPtrOutputWithContext(ctx)
}

// FlowScheduledTriggerPropertiesPtrInput is an input type that accepts FlowScheduledTriggerPropertiesArgs, FlowScheduledTriggerPropertiesPtr and FlowScheduledTriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowScheduledTriggerPropertiesPtrInput` via:
//
//          FlowScheduledTriggerPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowScheduledTriggerPropertiesPtrInput interface {
	pulumi.Input

	ToFlowScheduledTriggerPropertiesPtrOutput() FlowScheduledTriggerPropertiesPtrOutput
	ToFlowScheduledTriggerPropertiesPtrOutputWithContext(context.Context) FlowScheduledTriggerPropertiesPtrOutput
}

type flowScheduledTriggerPropertiesPtrType FlowScheduledTriggerPropertiesArgs

func FlowScheduledTriggerPropertiesPtr(v *FlowScheduledTriggerPropertiesArgs) FlowScheduledTriggerPropertiesPtrInput {
	return (*flowScheduledTriggerPropertiesPtrType)(v)
}

func (*flowScheduledTriggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowScheduledTriggerProperties)(nil)).Elem()
}

func (i *flowScheduledTriggerPropertiesPtrType) ToFlowScheduledTriggerPropertiesPtrOutput() FlowScheduledTriggerPropertiesPtrOutput {
	return i.ToFlowScheduledTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowScheduledTriggerPropertiesPtrType) ToFlowScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowScheduledTriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowScheduledTriggerPropertiesPtrOutput)
}

// Details required for scheduled trigger type
type FlowScheduledTriggerPropertiesOutput struct{ *pulumi.OutputState }

func (FlowScheduledTriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowScheduledTriggerProperties)(nil)).Elem()
}

func (o FlowScheduledTriggerPropertiesOutput) ToFlowScheduledTriggerPropertiesOutput() FlowScheduledTriggerPropertiesOutput {
	return o
}

func (o FlowScheduledTriggerPropertiesOutput) ToFlowScheduledTriggerPropertiesOutputWithContext(ctx context.Context) FlowScheduledTriggerPropertiesOutput {
	return o
}

func (o FlowScheduledTriggerPropertiesOutput) ToFlowScheduledTriggerPropertiesPtrOutput() FlowScheduledTriggerPropertiesPtrOutput {
	return o.ToFlowScheduledTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowScheduledTriggerPropertiesOutput) ToFlowScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowScheduledTriggerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowScheduledTriggerProperties) *FlowScheduledTriggerProperties {
		return &v
	}).(FlowScheduledTriggerPropertiesPtrOutput)
}

func (o FlowScheduledTriggerPropertiesOutput) DataPullMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowScheduledTriggerProperties) *string { return v.DataPullMode }).(pulumi.StringPtrOutput)
}

func (o FlowScheduledTriggerPropertiesOutput) ScheduleEndTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowScheduledTriggerProperties) *float64 { return v.ScheduleEndTime }).(pulumi.Float64PtrOutput)
}

func (o FlowScheduledTriggerPropertiesOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v FlowScheduledTriggerProperties) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

func (o FlowScheduledTriggerPropertiesOutput) ScheduleOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowScheduledTriggerProperties) *float64 { return v.ScheduleOffset }).(pulumi.Float64PtrOutput)
}

func (o FlowScheduledTriggerPropertiesOutput) ScheduleStartTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowScheduledTriggerProperties) *float64 { return v.ScheduleStartTime }).(pulumi.Float64PtrOutput)
}

func (o FlowScheduledTriggerPropertiesOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowScheduledTriggerProperties) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type FlowScheduledTriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowScheduledTriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowScheduledTriggerProperties)(nil)).Elem()
}

func (o FlowScheduledTriggerPropertiesPtrOutput) ToFlowScheduledTriggerPropertiesPtrOutput() FlowScheduledTriggerPropertiesPtrOutput {
	return o
}

func (o FlowScheduledTriggerPropertiesPtrOutput) ToFlowScheduledTriggerPropertiesPtrOutputWithContext(ctx context.Context) FlowScheduledTriggerPropertiesPtrOutput {
	return o
}

func (o FlowScheduledTriggerPropertiesPtrOutput) Elem() FlowScheduledTriggerPropertiesOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) FlowScheduledTriggerProperties {
		if v != nil {
			return *v
		}
		var ret FlowScheduledTriggerProperties
		return ret
	}).(FlowScheduledTriggerPropertiesOutput)
}

func (o FlowScheduledTriggerPropertiesPtrOutput) DataPullMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataPullMode
	}).(pulumi.StringPtrOutput)
}

func (o FlowScheduledTriggerPropertiesPtrOutput) ScheduleEndTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.ScheduleEndTime
	}).(pulumi.Float64PtrOutput)
}

func (o FlowScheduledTriggerPropertiesPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

func (o FlowScheduledTriggerPropertiesPtrOutput) ScheduleOffset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.ScheduleOffset
	}).(pulumi.Float64PtrOutput)
}

func (o FlowScheduledTriggerPropertiesPtrOutput) ScheduleStartTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.ScheduleStartTime
	}).(pulumi.Float64PtrOutput)
}

func (o FlowScheduledTriggerPropertiesPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowScheduledTriggerProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type FlowServiceNowSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowServiceNowSourcePropertiesInput is an input type that accepts FlowServiceNowSourcePropertiesArgs and FlowServiceNowSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowServiceNowSourcePropertiesInput` via:
//
//          FlowServiceNowSourcePropertiesArgs{...}
type FlowServiceNowSourcePropertiesInput interface {
	pulumi.Input

	ToFlowServiceNowSourcePropertiesOutput() FlowServiceNowSourcePropertiesOutput
	ToFlowServiceNowSourcePropertiesOutputWithContext(context.Context) FlowServiceNowSourcePropertiesOutput
}

type FlowServiceNowSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowServiceNowSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowServiceNowSourceProperties)(nil)).Elem()
}

func (i FlowServiceNowSourcePropertiesArgs) ToFlowServiceNowSourcePropertiesOutput() FlowServiceNowSourcePropertiesOutput {
	return i.ToFlowServiceNowSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowServiceNowSourcePropertiesArgs) ToFlowServiceNowSourcePropertiesOutputWithContext(ctx context.Context) FlowServiceNowSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowServiceNowSourcePropertiesOutput)
}

func (i FlowServiceNowSourcePropertiesArgs) ToFlowServiceNowSourcePropertiesPtrOutput() FlowServiceNowSourcePropertiesPtrOutput {
	return i.ToFlowServiceNowSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowServiceNowSourcePropertiesArgs) ToFlowServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowServiceNowSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowServiceNowSourcePropertiesOutput).ToFlowServiceNowSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowServiceNowSourcePropertiesPtrInput is an input type that accepts FlowServiceNowSourcePropertiesArgs, FlowServiceNowSourcePropertiesPtr and FlowServiceNowSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowServiceNowSourcePropertiesPtrInput` via:
//
//          FlowServiceNowSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowServiceNowSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowServiceNowSourcePropertiesPtrOutput() FlowServiceNowSourcePropertiesPtrOutput
	ToFlowServiceNowSourcePropertiesPtrOutputWithContext(context.Context) FlowServiceNowSourcePropertiesPtrOutput
}

type flowServiceNowSourcePropertiesPtrType FlowServiceNowSourcePropertiesArgs

func FlowServiceNowSourcePropertiesPtr(v *FlowServiceNowSourcePropertiesArgs) FlowServiceNowSourcePropertiesPtrInput {
	return (*flowServiceNowSourcePropertiesPtrType)(v)
}

func (*flowServiceNowSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowServiceNowSourceProperties)(nil)).Elem()
}

func (i *flowServiceNowSourcePropertiesPtrType) ToFlowServiceNowSourcePropertiesPtrOutput() FlowServiceNowSourcePropertiesPtrOutput {
	return i.ToFlowServiceNowSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowServiceNowSourcePropertiesPtrType) ToFlowServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowServiceNowSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowServiceNowSourcePropertiesPtrOutput)
}

type FlowServiceNowSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowServiceNowSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowServiceNowSourceProperties)(nil)).Elem()
}

func (o FlowServiceNowSourcePropertiesOutput) ToFlowServiceNowSourcePropertiesOutput() FlowServiceNowSourcePropertiesOutput {
	return o
}

func (o FlowServiceNowSourcePropertiesOutput) ToFlowServiceNowSourcePropertiesOutputWithContext(ctx context.Context) FlowServiceNowSourcePropertiesOutput {
	return o
}

func (o FlowServiceNowSourcePropertiesOutput) ToFlowServiceNowSourcePropertiesPtrOutput() FlowServiceNowSourcePropertiesPtrOutput {
	return o.ToFlowServiceNowSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowServiceNowSourcePropertiesOutput) ToFlowServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowServiceNowSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowServiceNowSourceProperties) *FlowServiceNowSourceProperties {
		return &v
	}).(FlowServiceNowSourcePropertiesPtrOutput)
}

func (o FlowServiceNowSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowServiceNowSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowServiceNowSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowServiceNowSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowServiceNowSourceProperties)(nil)).Elem()
}

func (o FlowServiceNowSourcePropertiesPtrOutput) ToFlowServiceNowSourcePropertiesPtrOutput() FlowServiceNowSourcePropertiesPtrOutput {
	return o
}

func (o FlowServiceNowSourcePropertiesPtrOutput) ToFlowServiceNowSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowServiceNowSourcePropertiesPtrOutput {
	return o
}

func (o FlowServiceNowSourcePropertiesPtrOutput) Elem() FlowServiceNowSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowServiceNowSourceProperties) FlowServiceNowSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowServiceNowSourceProperties
		return ret
	}).(FlowServiceNowSourcePropertiesOutput)
}

func (o FlowServiceNowSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowServiceNowSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSingularSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowSingularSourcePropertiesInput is an input type that accepts FlowSingularSourcePropertiesArgs and FlowSingularSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowSingularSourcePropertiesInput` via:
//
//          FlowSingularSourcePropertiesArgs{...}
type FlowSingularSourcePropertiesInput interface {
	pulumi.Input

	ToFlowSingularSourcePropertiesOutput() FlowSingularSourcePropertiesOutput
	ToFlowSingularSourcePropertiesOutputWithContext(context.Context) FlowSingularSourcePropertiesOutput
}

type FlowSingularSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSingularSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSingularSourceProperties)(nil)).Elem()
}

func (i FlowSingularSourcePropertiesArgs) ToFlowSingularSourcePropertiesOutput() FlowSingularSourcePropertiesOutput {
	return i.ToFlowSingularSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowSingularSourcePropertiesArgs) ToFlowSingularSourcePropertiesOutputWithContext(ctx context.Context) FlowSingularSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSingularSourcePropertiesOutput)
}

func (i FlowSingularSourcePropertiesArgs) ToFlowSingularSourcePropertiesPtrOutput() FlowSingularSourcePropertiesPtrOutput {
	return i.ToFlowSingularSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSingularSourcePropertiesArgs) ToFlowSingularSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSingularSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSingularSourcePropertiesOutput).ToFlowSingularSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowSingularSourcePropertiesPtrInput is an input type that accepts FlowSingularSourcePropertiesArgs, FlowSingularSourcePropertiesPtr and FlowSingularSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSingularSourcePropertiesPtrInput` via:
//
//          FlowSingularSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowSingularSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowSingularSourcePropertiesPtrOutput() FlowSingularSourcePropertiesPtrOutput
	ToFlowSingularSourcePropertiesPtrOutputWithContext(context.Context) FlowSingularSourcePropertiesPtrOutput
}

type flowSingularSourcePropertiesPtrType FlowSingularSourcePropertiesArgs

func FlowSingularSourcePropertiesPtr(v *FlowSingularSourcePropertiesArgs) FlowSingularSourcePropertiesPtrInput {
	return (*flowSingularSourcePropertiesPtrType)(v)
}

func (*flowSingularSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSingularSourceProperties)(nil)).Elem()
}

func (i *flowSingularSourcePropertiesPtrType) ToFlowSingularSourcePropertiesPtrOutput() FlowSingularSourcePropertiesPtrOutput {
	return i.ToFlowSingularSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSingularSourcePropertiesPtrType) ToFlowSingularSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSingularSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSingularSourcePropertiesPtrOutput)
}

type FlowSingularSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowSingularSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSingularSourceProperties)(nil)).Elem()
}

func (o FlowSingularSourcePropertiesOutput) ToFlowSingularSourcePropertiesOutput() FlowSingularSourcePropertiesOutput {
	return o
}

func (o FlowSingularSourcePropertiesOutput) ToFlowSingularSourcePropertiesOutputWithContext(ctx context.Context) FlowSingularSourcePropertiesOutput {
	return o
}

func (o FlowSingularSourcePropertiesOutput) ToFlowSingularSourcePropertiesPtrOutput() FlowSingularSourcePropertiesPtrOutput {
	return o.ToFlowSingularSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSingularSourcePropertiesOutput) ToFlowSingularSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSingularSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSingularSourceProperties) *FlowSingularSourceProperties {
		return &v
	}).(FlowSingularSourcePropertiesPtrOutput)
}

func (o FlowSingularSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSingularSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSingularSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSingularSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSingularSourceProperties)(nil)).Elem()
}

func (o FlowSingularSourcePropertiesPtrOutput) ToFlowSingularSourcePropertiesPtrOutput() FlowSingularSourcePropertiesPtrOutput {
	return o
}

func (o FlowSingularSourcePropertiesPtrOutput) ToFlowSingularSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSingularSourcePropertiesPtrOutput {
	return o
}

func (o FlowSingularSourcePropertiesPtrOutput) Elem() FlowSingularSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowSingularSourceProperties) FlowSingularSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowSingularSourceProperties
		return ret
	}).(FlowSingularSourcePropertiesOutput)
}

func (o FlowSingularSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSingularSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSlackSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowSlackSourcePropertiesInput is an input type that accepts FlowSlackSourcePropertiesArgs and FlowSlackSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowSlackSourcePropertiesInput` via:
//
//          FlowSlackSourcePropertiesArgs{...}
type FlowSlackSourcePropertiesInput interface {
	pulumi.Input

	ToFlowSlackSourcePropertiesOutput() FlowSlackSourcePropertiesOutput
	ToFlowSlackSourcePropertiesOutputWithContext(context.Context) FlowSlackSourcePropertiesOutput
}

type FlowSlackSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowSlackSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSlackSourceProperties)(nil)).Elem()
}

func (i FlowSlackSourcePropertiesArgs) ToFlowSlackSourcePropertiesOutput() FlowSlackSourcePropertiesOutput {
	return i.ToFlowSlackSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowSlackSourcePropertiesArgs) ToFlowSlackSourcePropertiesOutputWithContext(ctx context.Context) FlowSlackSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSlackSourcePropertiesOutput)
}

func (i FlowSlackSourcePropertiesArgs) ToFlowSlackSourcePropertiesPtrOutput() FlowSlackSourcePropertiesPtrOutput {
	return i.ToFlowSlackSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSlackSourcePropertiesArgs) ToFlowSlackSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSlackSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSlackSourcePropertiesOutput).ToFlowSlackSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowSlackSourcePropertiesPtrInput is an input type that accepts FlowSlackSourcePropertiesArgs, FlowSlackSourcePropertiesPtr and FlowSlackSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSlackSourcePropertiesPtrInput` via:
//
//          FlowSlackSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowSlackSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowSlackSourcePropertiesPtrOutput() FlowSlackSourcePropertiesPtrOutput
	ToFlowSlackSourcePropertiesPtrOutputWithContext(context.Context) FlowSlackSourcePropertiesPtrOutput
}

type flowSlackSourcePropertiesPtrType FlowSlackSourcePropertiesArgs

func FlowSlackSourcePropertiesPtr(v *FlowSlackSourcePropertiesArgs) FlowSlackSourcePropertiesPtrInput {
	return (*flowSlackSourcePropertiesPtrType)(v)
}

func (*flowSlackSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSlackSourceProperties)(nil)).Elem()
}

func (i *flowSlackSourcePropertiesPtrType) ToFlowSlackSourcePropertiesPtrOutput() FlowSlackSourcePropertiesPtrOutput {
	return i.ToFlowSlackSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSlackSourcePropertiesPtrType) ToFlowSlackSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSlackSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSlackSourcePropertiesPtrOutput)
}

type FlowSlackSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowSlackSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSlackSourceProperties)(nil)).Elem()
}

func (o FlowSlackSourcePropertiesOutput) ToFlowSlackSourcePropertiesOutput() FlowSlackSourcePropertiesOutput {
	return o
}

func (o FlowSlackSourcePropertiesOutput) ToFlowSlackSourcePropertiesOutputWithContext(ctx context.Context) FlowSlackSourcePropertiesOutput {
	return o
}

func (o FlowSlackSourcePropertiesOutput) ToFlowSlackSourcePropertiesPtrOutput() FlowSlackSourcePropertiesPtrOutput {
	return o.ToFlowSlackSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSlackSourcePropertiesOutput) ToFlowSlackSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSlackSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSlackSourceProperties) *FlowSlackSourceProperties {
		return &v
	}).(FlowSlackSourcePropertiesPtrOutput)
}

func (o FlowSlackSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSlackSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSlackSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSlackSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSlackSourceProperties)(nil)).Elem()
}

func (o FlowSlackSourcePropertiesPtrOutput) ToFlowSlackSourcePropertiesPtrOutput() FlowSlackSourcePropertiesPtrOutput {
	return o
}

func (o FlowSlackSourcePropertiesPtrOutput) ToFlowSlackSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowSlackSourcePropertiesPtrOutput {
	return o
}

func (o FlowSlackSourcePropertiesPtrOutput) Elem() FlowSlackSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowSlackSourceProperties) FlowSlackSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowSlackSourceProperties
		return ret
	}).(FlowSlackSourcePropertiesOutput)
}

func (o FlowSlackSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSlackSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowSnowflakeDestinationProperties struct {
	BucketPrefix           *string                  `pulumi:"bucketPrefix"`
	ErrorHandlingConfig    *FlowErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	IntermediateBucketName string                   `pulumi:"intermediateBucketName"`
	Object                 string                   `pulumi:"object"`
}

// FlowSnowflakeDestinationPropertiesInput is an input type that accepts FlowSnowflakeDestinationPropertiesArgs and FlowSnowflakeDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowSnowflakeDestinationPropertiesInput` via:
//
//          FlowSnowflakeDestinationPropertiesArgs{...}
type FlowSnowflakeDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowSnowflakeDestinationPropertiesOutput() FlowSnowflakeDestinationPropertiesOutput
	ToFlowSnowflakeDestinationPropertiesOutputWithContext(context.Context) FlowSnowflakeDestinationPropertiesOutput
}

type FlowSnowflakeDestinationPropertiesArgs struct {
	BucketPrefix           pulumi.StringPtrInput           `pulumi:"bucketPrefix"`
	ErrorHandlingConfig    FlowErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	IntermediateBucketName pulumi.StringInput              `pulumi:"intermediateBucketName"`
	Object                 pulumi.StringInput              `pulumi:"object"`
}

func (FlowSnowflakeDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSnowflakeDestinationProperties)(nil)).Elem()
}

func (i FlowSnowflakeDestinationPropertiesArgs) ToFlowSnowflakeDestinationPropertiesOutput() FlowSnowflakeDestinationPropertiesOutput {
	return i.ToFlowSnowflakeDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowSnowflakeDestinationPropertiesArgs) ToFlowSnowflakeDestinationPropertiesOutputWithContext(ctx context.Context) FlowSnowflakeDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSnowflakeDestinationPropertiesOutput)
}

func (i FlowSnowflakeDestinationPropertiesArgs) ToFlowSnowflakeDestinationPropertiesPtrOutput() FlowSnowflakeDestinationPropertiesPtrOutput {
	return i.ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSnowflakeDestinationPropertiesArgs) ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSnowflakeDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSnowflakeDestinationPropertiesOutput).ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowSnowflakeDestinationPropertiesPtrInput is an input type that accepts FlowSnowflakeDestinationPropertiesArgs, FlowSnowflakeDestinationPropertiesPtr and FlowSnowflakeDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSnowflakeDestinationPropertiesPtrInput` via:
//
//          FlowSnowflakeDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowSnowflakeDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowSnowflakeDestinationPropertiesPtrOutput() FlowSnowflakeDestinationPropertiesPtrOutput
	ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(context.Context) FlowSnowflakeDestinationPropertiesPtrOutput
}

type flowSnowflakeDestinationPropertiesPtrType FlowSnowflakeDestinationPropertiesArgs

func FlowSnowflakeDestinationPropertiesPtr(v *FlowSnowflakeDestinationPropertiesArgs) FlowSnowflakeDestinationPropertiesPtrInput {
	return (*flowSnowflakeDestinationPropertiesPtrType)(v)
}

func (*flowSnowflakeDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSnowflakeDestinationProperties)(nil)).Elem()
}

func (i *flowSnowflakeDestinationPropertiesPtrType) ToFlowSnowflakeDestinationPropertiesPtrOutput() FlowSnowflakeDestinationPropertiesPtrOutput {
	return i.ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSnowflakeDestinationPropertiesPtrType) ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSnowflakeDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSnowflakeDestinationPropertiesPtrOutput)
}

type FlowSnowflakeDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowSnowflakeDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSnowflakeDestinationProperties)(nil)).Elem()
}

func (o FlowSnowflakeDestinationPropertiesOutput) ToFlowSnowflakeDestinationPropertiesOutput() FlowSnowflakeDestinationPropertiesOutput {
	return o
}

func (o FlowSnowflakeDestinationPropertiesOutput) ToFlowSnowflakeDestinationPropertiesOutputWithContext(ctx context.Context) FlowSnowflakeDestinationPropertiesOutput {
	return o
}

func (o FlowSnowflakeDestinationPropertiesOutput) ToFlowSnowflakeDestinationPropertiesPtrOutput() FlowSnowflakeDestinationPropertiesPtrOutput {
	return o.ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSnowflakeDestinationPropertiesOutput) ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSnowflakeDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSnowflakeDestinationProperties) *FlowSnowflakeDestinationProperties {
		return &v
	}).(FlowSnowflakeDestinationPropertiesPtrOutput)
}

func (o FlowSnowflakeDestinationPropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSnowflakeDestinationProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o FlowSnowflakeDestinationPropertiesOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowSnowflakeDestinationProperties) *FlowErrorHandlingConfig { return v.ErrorHandlingConfig }).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowSnowflakeDestinationPropertiesOutput) IntermediateBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSnowflakeDestinationProperties) string { return v.IntermediateBucketName }).(pulumi.StringOutput)
}

func (o FlowSnowflakeDestinationPropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSnowflakeDestinationProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowSnowflakeDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSnowflakeDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSnowflakeDestinationProperties)(nil)).Elem()
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) ToFlowSnowflakeDestinationPropertiesPtrOutput() FlowSnowflakeDestinationPropertiesPtrOutput {
	return o
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) ToFlowSnowflakeDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowSnowflakeDestinationPropertiesPtrOutput {
	return o
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) Elem() FlowSnowflakeDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowSnowflakeDestinationProperties) FlowSnowflakeDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowSnowflakeDestinationProperties
		return ret
	}).(FlowSnowflakeDestinationPropertiesOutput)
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSnowflakeDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowSnowflakeDestinationProperties) *FlowErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowErrorHandlingConfigPtrOutput)
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) IntermediateBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSnowflakeDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.IntermediateBucketName
	}).(pulumi.StringPtrOutput)
}

func (o FlowSnowflakeDestinationPropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSnowflakeDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Source connector details required to query a connector
type FlowSourceConnectorProperties struct {
	Amplitude       *FlowAmplitudeSourceProperties       `pulumi:"amplitude"`
	Datadog         *FlowDatadogSourceProperties         `pulumi:"datadog"`
	Dynatrace       *FlowDynatraceSourceProperties       `pulumi:"dynatrace"`
	GoogleAnalytics *FlowGoogleAnalyticsSourceProperties `pulumi:"googleAnalytics"`
	InforNexus      *FlowInforNexusSourceProperties      `pulumi:"inforNexus"`
	Marketo         *FlowMarketoSourceProperties         `pulumi:"marketo"`
	S3              *FlowS3SourceProperties              `pulumi:"s3"`
	Salesforce      *FlowSalesforceSourceProperties      `pulumi:"salesforce"`
	ServiceNow      *FlowServiceNowSourceProperties      `pulumi:"serviceNow"`
	Singular        *FlowSingularSourceProperties        `pulumi:"singular"`
	Slack           *FlowSlackSourceProperties           `pulumi:"slack"`
	Trendmicro      *FlowTrendmicroSourceProperties      `pulumi:"trendmicro"`
	Veeva           *FlowVeevaSourceProperties           `pulumi:"veeva"`
	Zendesk         *FlowZendeskSourceProperties         `pulumi:"zendesk"`
}

// FlowSourceConnectorPropertiesInput is an input type that accepts FlowSourceConnectorPropertiesArgs and FlowSourceConnectorPropertiesOutput values.
// You can construct a concrete instance of `FlowSourceConnectorPropertiesInput` via:
//
//          FlowSourceConnectorPropertiesArgs{...}
type FlowSourceConnectorPropertiesInput interface {
	pulumi.Input

	ToFlowSourceConnectorPropertiesOutput() FlowSourceConnectorPropertiesOutput
	ToFlowSourceConnectorPropertiesOutputWithContext(context.Context) FlowSourceConnectorPropertiesOutput
}

// Source connector details required to query a connector
type FlowSourceConnectorPropertiesArgs struct {
	Amplitude       FlowAmplitudeSourcePropertiesPtrInput       `pulumi:"amplitude"`
	Datadog         FlowDatadogSourcePropertiesPtrInput         `pulumi:"datadog"`
	Dynatrace       FlowDynatraceSourcePropertiesPtrInput       `pulumi:"dynatrace"`
	GoogleAnalytics FlowGoogleAnalyticsSourcePropertiesPtrInput `pulumi:"googleAnalytics"`
	InforNexus      FlowInforNexusSourcePropertiesPtrInput      `pulumi:"inforNexus"`
	Marketo         FlowMarketoSourcePropertiesPtrInput         `pulumi:"marketo"`
	S3              FlowS3SourcePropertiesPtrInput              `pulumi:"s3"`
	Salesforce      FlowSalesforceSourcePropertiesPtrInput      `pulumi:"salesforce"`
	ServiceNow      FlowServiceNowSourcePropertiesPtrInput      `pulumi:"serviceNow"`
	Singular        FlowSingularSourcePropertiesPtrInput        `pulumi:"singular"`
	Slack           FlowSlackSourcePropertiesPtrInput           `pulumi:"slack"`
	Trendmicro      FlowTrendmicroSourcePropertiesPtrInput      `pulumi:"trendmicro"`
	Veeva           FlowVeevaSourcePropertiesPtrInput           `pulumi:"veeva"`
	Zendesk         FlowZendeskSourcePropertiesPtrInput         `pulumi:"zendesk"`
}

func (FlowSourceConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceConnectorProperties)(nil)).Elem()
}

func (i FlowSourceConnectorPropertiesArgs) ToFlowSourceConnectorPropertiesOutput() FlowSourceConnectorPropertiesOutput {
	return i.ToFlowSourceConnectorPropertiesOutputWithContext(context.Background())
}

func (i FlowSourceConnectorPropertiesArgs) ToFlowSourceConnectorPropertiesOutputWithContext(ctx context.Context) FlowSourceConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceConnectorPropertiesOutput)
}

func (i FlowSourceConnectorPropertiesArgs) ToFlowSourceConnectorPropertiesPtrOutput() FlowSourceConnectorPropertiesPtrOutput {
	return i.ToFlowSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowSourceConnectorPropertiesArgs) ToFlowSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceConnectorPropertiesOutput).ToFlowSourceConnectorPropertiesPtrOutputWithContext(ctx)
}

// FlowSourceConnectorPropertiesPtrInput is an input type that accepts FlowSourceConnectorPropertiesArgs, FlowSourceConnectorPropertiesPtr and FlowSourceConnectorPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowSourceConnectorPropertiesPtrInput` via:
//
//          FlowSourceConnectorPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowSourceConnectorPropertiesPtrInput interface {
	pulumi.Input

	ToFlowSourceConnectorPropertiesPtrOutput() FlowSourceConnectorPropertiesPtrOutput
	ToFlowSourceConnectorPropertiesPtrOutputWithContext(context.Context) FlowSourceConnectorPropertiesPtrOutput
}

type flowSourceConnectorPropertiesPtrType FlowSourceConnectorPropertiesArgs

func FlowSourceConnectorPropertiesPtr(v *FlowSourceConnectorPropertiesArgs) FlowSourceConnectorPropertiesPtrInput {
	return (*flowSourceConnectorPropertiesPtrType)(v)
}

func (*flowSourceConnectorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceConnectorProperties)(nil)).Elem()
}

func (i *flowSourceConnectorPropertiesPtrType) ToFlowSourceConnectorPropertiesPtrOutput() FlowSourceConnectorPropertiesPtrOutput {
	return i.ToFlowSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowSourceConnectorPropertiesPtrType) ToFlowSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceConnectorPropertiesPtrOutput)
}

// Source connector details required to query a connector
type FlowSourceConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (FlowSourceConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceConnectorProperties)(nil)).Elem()
}

func (o FlowSourceConnectorPropertiesOutput) ToFlowSourceConnectorPropertiesOutput() FlowSourceConnectorPropertiesOutput {
	return o
}

func (o FlowSourceConnectorPropertiesOutput) ToFlowSourceConnectorPropertiesOutputWithContext(ctx context.Context) FlowSourceConnectorPropertiesOutput {
	return o
}

func (o FlowSourceConnectorPropertiesOutput) ToFlowSourceConnectorPropertiesPtrOutput() FlowSourceConnectorPropertiesPtrOutput {
	return o.ToFlowSourceConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowSourceConnectorPropertiesOutput) ToFlowSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceConnectorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceConnectorProperties) *FlowSourceConnectorProperties {
		return &v
	}).(FlowSourceConnectorPropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Amplitude() FlowAmplitudeSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowAmplitudeSourceProperties { return v.Amplitude }).(FlowAmplitudeSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Datadog() FlowDatadogSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowDatadogSourceProperties { return v.Datadog }).(FlowDatadogSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Dynatrace() FlowDynatraceSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowDynatraceSourceProperties { return v.Dynatrace }).(FlowDynatraceSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) GoogleAnalytics() FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowGoogleAnalyticsSourceProperties { return v.GoogleAnalytics }).(FlowGoogleAnalyticsSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) InforNexus() FlowInforNexusSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowInforNexusSourceProperties { return v.InforNexus }).(FlowInforNexusSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Marketo() FlowMarketoSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowMarketoSourceProperties { return v.Marketo }).(FlowMarketoSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) S3() FlowS3SourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowS3SourceProperties { return v.S3 }).(FlowS3SourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Salesforce() FlowSalesforceSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowSalesforceSourceProperties { return v.Salesforce }).(FlowSalesforceSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) ServiceNow() FlowServiceNowSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowServiceNowSourceProperties { return v.ServiceNow }).(FlowServiceNowSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Singular() FlowSingularSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowSingularSourceProperties { return v.Singular }).(FlowSingularSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Slack() FlowSlackSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowSlackSourceProperties { return v.Slack }).(FlowSlackSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Trendmicro() FlowTrendmicroSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowTrendmicroSourceProperties { return v.Trendmicro }).(FlowTrendmicroSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Veeva() FlowVeevaSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowVeevaSourceProperties { return v.Veeva }).(FlowVeevaSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesOutput) Zendesk() FlowZendeskSourcePropertiesPtrOutput {
	return o.ApplyT(func(v FlowSourceConnectorProperties) *FlowZendeskSourceProperties { return v.Zendesk }).(FlowZendeskSourcePropertiesPtrOutput)
}

type FlowSourceConnectorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceConnectorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceConnectorProperties)(nil)).Elem()
}

func (o FlowSourceConnectorPropertiesPtrOutput) ToFlowSourceConnectorPropertiesPtrOutput() FlowSourceConnectorPropertiesPtrOutput {
	return o
}

func (o FlowSourceConnectorPropertiesPtrOutput) ToFlowSourceConnectorPropertiesPtrOutputWithContext(ctx context.Context) FlowSourceConnectorPropertiesPtrOutput {
	return o
}

func (o FlowSourceConnectorPropertiesPtrOutput) Elem() FlowSourceConnectorPropertiesOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) FlowSourceConnectorProperties {
		if v != nil {
			return *v
		}
		var ret FlowSourceConnectorProperties
		return ret
	}).(FlowSourceConnectorPropertiesOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Amplitude() FlowAmplitudeSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowAmplitudeSourceProperties {
		if v == nil {
			return nil
		}
		return v.Amplitude
	}).(FlowAmplitudeSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Datadog() FlowDatadogSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowDatadogSourceProperties {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(FlowDatadogSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Dynatrace() FlowDynatraceSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowDynatraceSourceProperties {
		if v == nil {
			return nil
		}
		return v.Dynatrace
	}).(FlowDynatraceSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) GoogleAnalytics() FlowGoogleAnalyticsSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowGoogleAnalyticsSourceProperties {
		if v == nil {
			return nil
		}
		return v.GoogleAnalytics
	}).(FlowGoogleAnalyticsSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) InforNexus() FlowInforNexusSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowInforNexusSourceProperties {
		if v == nil {
			return nil
		}
		return v.InforNexus
	}).(FlowInforNexusSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Marketo() FlowMarketoSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowMarketoSourceProperties {
		if v == nil {
			return nil
		}
		return v.Marketo
	}).(FlowMarketoSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) S3() FlowS3SourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowS3SourceProperties {
		if v == nil {
			return nil
		}
		return v.S3
	}).(FlowS3SourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Salesforce() FlowSalesforceSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowSalesforceSourceProperties {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(FlowSalesforceSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) ServiceNow() FlowServiceNowSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowServiceNowSourceProperties {
		if v == nil {
			return nil
		}
		return v.ServiceNow
	}).(FlowServiceNowSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Singular() FlowSingularSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowSingularSourceProperties {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(FlowSingularSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Slack() FlowSlackSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowSlackSourceProperties {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(FlowSlackSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Trendmicro() FlowTrendmicroSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowTrendmicroSourceProperties {
		if v == nil {
			return nil
		}
		return v.Trendmicro
	}).(FlowTrendmicroSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Veeva() FlowVeevaSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowVeevaSourceProperties {
		if v == nil {
			return nil
		}
		return v.Veeva
	}).(FlowVeevaSourcePropertiesPtrOutput)
}

func (o FlowSourceConnectorPropertiesPtrOutput) Zendesk() FlowZendeskSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceConnectorProperties) *FlowZendeskSourceProperties {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(FlowZendeskSourcePropertiesPtrOutput)
}

// Configurations of Source connector of the flow.
type FlowSourceFlowConfig struct {
	// Name of source connector profile
	ConnectorProfileName *string `pulumi:"connectorProfileName"`
	// Type of source connector
	ConnectorType string `pulumi:"connectorType"`
	// Configuration for scheduled incremental data pull
	IncrementalPullConfig *FlowIncrementalPullConfig `pulumi:"incrementalPullConfig"`
	// Source connector details required to query a connector
	SourceConnectorProperties FlowSourceConnectorProperties `pulumi:"sourceConnectorProperties"`
}

// FlowSourceFlowConfigInput is an input type that accepts FlowSourceFlowConfigArgs and FlowSourceFlowConfigOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigInput` via:
//
//          FlowSourceFlowConfigArgs{...}
type FlowSourceFlowConfigInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigOutput() FlowSourceFlowConfigOutput
	ToFlowSourceFlowConfigOutputWithContext(context.Context) FlowSourceFlowConfigOutput
}

// Configurations of Source connector of the flow.
type FlowSourceFlowConfigArgs struct {
	// Name of source connector profile
	ConnectorProfileName pulumi.StringPtrInput `pulumi:"connectorProfileName"`
	// Type of source connector
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Configuration for scheduled incremental data pull
	IncrementalPullConfig FlowIncrementalPullConfigPtrInput `pulumi:"incrementalPullConfig"`
	// Source connector details required to query a connector
	SourceConnectorProperties FlowSourceConnectorPropertiesInput `pulumi:"sourceConnectorProperties"`
}

func (FlowSourceFlowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfig)(nil)).Elem()
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigOutput() FlowSourceFlowConfigOutput {
	return i.ToFlowSourceFlowConfigOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigOutput)
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return i.ToFlowSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (i FlowSourceFlowConfigArgs) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigOutput).ToFlowSourceFlowConfigPtrOutputWithContext(ctx)
}

// FlowSourceFlowConfigPtrInput is an input type that accepts FlowSourceFlowConfigArgs, FlowSourceFlowConfigPtr and FlowSourceFlowConfigPtrOutput values.
// You can construct a concrete instance of `FlowSourceFlowConfigPtrInput` via:
//
//          FlowSourceFlowConfigArgs{...}
//
//  or:
//
//          nil
type FlowSourceFlowConfigPtrInput interface {
	pulumi.Input

	ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput
	ToFlowSourceFlowConfigPtrOutputWithContext(context.Context) FlowSourceFlowConfigPtrOutput
}

type flowSourceFlowConfigPtrType FlowSourceFlowConfigArgs

func FlowSourceFlowConfigPtr(v *FlowSourceFlowConfigArgs) FlowSourceFlowConfigPtrInput {
	return (*flowSourceFlowConfigPtrType)(v)
}

func (*flowSourceFlowConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfig)(nil)).Elem()
}

func (i *flowSourceFlowConfigPtrType) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return i.ToFlowSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (i *flowSourceFlowConfigPtrType) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowSourceFlowConfigPtrOutput)
}

// Configurations of Source connector of the flow.
type FlowSourceFlowConfigOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceFlowConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigOutput() FlowSourceFlowConfigOutput {
	return o
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigOutputWithContext(ctx context.Context) FlowSourceFlowConfigOutput {
	return o
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return o.ToFlowSourceFlowConfigPtrOutputWithContext(context.Background())
}

func (o FlowSourceFlowConfigOutput) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceFlowConfig) *FlowSourceFlowConfig {
		return &v
	}).(FlowSourceFlowConfigPtrOutput)
}

// Name of source connector profile
func (o FlowSourceFlowConfigOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) *string { return v.ConnectorProfileName }).(pulumi.StringPtrOutput)
}

// Type of source connector
func (o FlowSourceFlowConfigOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Configuration for scheduled incremental data pull
func (o FlowSourceFlowConfigOutput) IncrementalPullConfig() FlowIncrementalPullConfigPtrOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) *FlowIncrementalPullConfig { return v.IncrementalPullConfig }).(FlowIncrementalPullConfigPtrOutput)
}

// Source connector details required to query a connector
func (o FlowSourceFlowConfigOutput) SourceConnectorProperties() FlowSourceConnectorPropertiesOutput {
	return o.ApplyT(func(v FlowSourceFlowConfig) FlowSourceConnectorProperties { return v.SourceConnectorProperties }).(FlowSourceConnectorPropertiesOutput)
}

type FlowSourceFlowConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceFlowConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceFlowConfig)(nil)).Elem()
}

func (o FlowSourceFlowConfigPtrOutput) ToFlowSourceFlowConfigPtrOutput() FlowSourceFlowConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigPtrOutput) ToFlowSourceFlowConfigPtrOutputWithContext(ctx context.Context) FlowSourceFlowConfigPtrOutput {
	return o
}

func (o FlowSourceFlowConfigPtrOutput) Elem() FlowSourceFlowConfigOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) FlowSourceFlowConfig {
		if v != nil {
			return *v
		}
		var ret FlowSourceFlowConfig
		return ret
	}).(FlowSourceFlowConfigOutput)
}

// Name of source connector profile
func (o FlowSourceFlowConfigPtrOutput) ConnectorProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorProfileName
	}).(pulumi.StringPtrOutput)
}

// Type of source connector
func (o FlowSourceFlowConfigPtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// Configuration for scheduled incremental data pull
func (o FlowSourceFlowConfigPtrOutput) IncrementalPullConfig() FlowIncrementalPullConfigPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *FlowIncrementalPullConfig {
		if v == nil {
			return nil
		}
		return v.IncrementalPullConfig
	}).(FlowIncrementalPullConfigPtrOutput)
}

// Source connector details required to query a connector
func (o FlowSourceFlowConfigPtrOutput) SourceConnectorProperties() FlowSourceConnectorPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowSourceFlowConfig) *FlowSourceConnectorProperties {
		if v == nil {
			return nil
		}
		return &v.SourceConnectorProperties
	}).(FlowSourceConnectorPropertiesPtrOutput)
}

// A label for tagging AppFlow resources
type FlowTag struct {
	// A string used to identify this tag
	Key string `pulumi:"key"`
	// A string containing the value for the tag
	Value string `pulumi:"value"`
}

// FlowTagInput is an input type that accepts FlowTagArgs and FlowTagOutput values.
// You can construct a concrete instance of `FlowTagInput` via:
//
//          FlowTagArgs{...}
type FlowTagInput interface {
	pulumi.Input

	ToFlowTagOutput() FlowTagOutput
	ToFlowTagOutputWithContext(context.Context) FlowTagOutput
}

// A label for tagging AppFlow resources
type FlowTagArgs struct {
	// A string used to identify this tag
	Key pulumi.StringInput `pulumi:"key"`
	// A string containing the value for the tag
	Value pulumi.StringInput `pulumi:"value"`
}

func (FlowTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTag)(nil)).Elem()
}

func (i FlowTagArgs) ToFlowTagOutput() FlowTagOutput {
	return i.ToFlowTagOutputWithContext(context.Background())
}

func (i FlowTagArgs) ToFlowTagOutputWithContext(ctx context.Context) FlowTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTagOutput)
}

// FlowTagArrayInput is an input type that accepts FlowTagArray and FlowTagArrayOutput values.
// You can construct a concrete instance of `FlowTagArrayInput` via:
//
//          FlowTagArray{ FlowTagArgs{...} }
type FlowTagArrayInput interface {
	pulumi.Input

	ToFlowTagArrayOutput() FlowTagArrayOutput
	ToFlowTagArrayOutputWithContext(context.Context) FlowTagArrayOutput
}

type FlowTagArray []FlowTagInput

func (FlowTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTag)(nil)).Elem()
}

func (i FlowTagArray) ToFlowTagArrayOutput() FlowTagArrayOutput {
	return i.ToFlowTagArrayOutputWithContext(context.Background())
}

func (i FlowTagArray) ToFlowTagArrayOutputWithContext(ctx context.Context) FlowTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTagArrayOutput)
}

// A label for tagging AppFlow resources
type FlowTagOutput struct{ *pulumi.OutputState }

func (FlowTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTag)(nil)).Elem()
}

func (o FlowTagOutput) ToFlowTagOutput() FlowTagOutput {
	return o
}

func (o FlowTagOutput) ToFlowTagOutputWithContext(ctx context.Context) FlowTagOutput {
	return o
}

// A string used to identify this tag
func (o FlowTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTag) string { return v.Key }).(pulumi.StringOutput)
}

// A string containing the value for the tag
func (o FlowTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTag) string { return v.Value }).(pulumi.StringOutput)
}

type FlowTagArrayOutput struct{ *pulumi.OutputState }

func (FlowTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTag)(nil)).Elem()
}

func (o FlowTagArrayOutput) ToFlowTagArrayOutput() FlowTagArrayOutput {
	return o
}

func (o FlowTagArrayOutput) ToFlowTagArrayOutputWithContext(ctx context.Context) FlowTagArrayOutput {
	return o
}

func (o FlowTagArrayOutput) Index(i pulumi.IntInput) FlowTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowTag {
		return vs[0].([]FlowTag)[vs[1].(int)]
	}).(FlowTagOutput)
}

type FlowTask struct {
	// Operation to be performed on provided source fields
	ConnectorOperator *FlowConnectorOperator `pulumi:"connectorOperator"`
	// A field value on which source field should be validated
	DestinationField *string `pulumi:"destinationField"`
	// Source fields on which particular task will be applied
	SourceFields []string `pulumi:"sourceFields"`
	// A Map used to store task related info
	TaskProperties []FlowTaskPropertiesObject `pulumi:"taskProperties"`
	// Type of task
	TaskType string `pulumi:"taskType"`
}

// FlowTaskInput is an input type that accepts FlowTaskArgs and FlowTaskOutput values.
// You can construct a concrete instance of `FlowTaskInput` via:
//
//          FlowTaskArgs{...}
type FlowTaskInput interface {
	pulumi.Input

	ToFlowTaskOutput() FlowTaskOutput
	ToFlowTaskOutputWithContext(context.Context) FlowTaskOutput
}

type FlowTaskArgs struct {
	// Operation to be performed on provided source fields
	ConnectorOperator FlowConnectorOperatorPtrInput `pulumi:"connectorOperator"`
	// A field value on which source field should be validated
	DestinationField pulumi.StringPtrInput `pulumi:"destinationField"`
	// Source fields on which particular task will be applied
	SourceFields pulumi.StringArrayInput `pulumi:"sourceFields"`
	// A Map used to store task related info
	TaskProperties FlowTaskPropertiesObjectArrayInput `pulumi:"taskProperties"`
	// Type of task
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (FlowTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTask)(nil)).Elem()
}

func (i FlowTaskArgs) ToFlowTaskOutput() FlowTaskOutput {
	return i.ToFlowTaskOutputWithContext(context.Background())
}

func (i FlowTaskArgs) ToFlowTaskOutputWithContext(ctx context.Context) FlowTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskOutput)
}

// FlowTaskArrayInput is an input type that accepts FlowTaskArray and FlowTaskArrayOutput values.
// You can construct a concrete instance of `FlowTaskArrayInput` via:
//
//          FlowTaskArray{ FlowTaskArgs{...} }
type FlowTaskArrayInput interface {
	pulumi.Input

	ToFlowTaskArrayOutput() FlowTaskArrayOutput
	ToFlowTaskArrayOutputWithContext(context.Context) FlowTaskArrayOutput
}

type FlowTaskArray []FlowTaskInput

func (FlowTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTask)(nil)).Elem()
}

func (i FlowTaskArray) ToFlowTaskArrayOutput() FlowTaskArrayOutput {
	return i.ToFlowTaskArrayOutputWithContext(context.Background())
}

func (i FlowTaskArray) ToFlowTaskArrayOutputWithContext(ctx context.Context) FlowTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskArrayOutput)
}

type FlowTaskOutput struct{ *pulumi.OutputState }

func (FlowTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTask)(nil)).Elem()
}

func (o FlowTaskOutput) ToFlowTaskOutput() FlowTaskOutput {
	return o
}

func (o FlowTaskOutput) ToFlowTaskOutputWithContext(ctx context.Context) FlowTaskOutput {
	return o
}

// Operation to be performed on provided source fields
func (o FlowTaskOutput) ConnectorOperator() FlowConnectorOperatorPtrOutput {
	return o.ApplyT(func(v FlowTask) *FlowConnectorOperator { return v.ConnectorOperator }).(FlowConnectorOperatorPtrOutput)
}

// A field value on which source field should be validated
func (o FlowTaskOutput) DestinationField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowTask) *string { return v.DestinationField }).(pulumi.StringPtrOutput)
}

// Source fields on which particular task will be applied
func (o FlowTaskOutput) SourceFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowTask) []string { return v.SourceFields }).(pulumi.StringArrayOutput)
}

// A Map used to store task related info
func (o FlowTaskOutput) TaskProperties() FlowTaskPropertiesObjectArrayOutput {
	return o.ApplyT(func(v FlowTask) []FlowTaskPropertiesObject { return v.TaskProperties }).(FlowTaskPropertiesObjectArrayOutput)
}

// Type of task
func (o FlowTaskOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTask) string { return v.TaskType }).(pulumi.StringOutput)
}

type FlowTaskArrayOutput struct{ *pulumi.OutputState }

func (FlowTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTask)(nil)).Elem()
}

func (o FlowTaskArrayOutput) ToFlowTaskArrayOutput() FlowTaskArrayOutput {
	return o
}

func (o FlowTaskArrayOutput) ToFlowTaskArrayOutputWithContext(ctx context.Context) FlowTaskArrayOutput {
	return o
}

func (o FlowTaskArrayOutput) Index(i pulumi.IntInput) FlowTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowTask {
		return vs[0].([]FlowTask)[vs[1].(int)]
	}).(FlowTaskOutput)
}

// An object used to store task related info
type FlowTaskPropertiesObject struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FlowTaskPropertiesObjectInput is an input type that accepts FlowTaskPropertiesObjectArgs and FlowTaskPropertiesObjectOutput values.
// You can construct a concrete instance of `FlowTaskPropertiesObjectInput` via:
//
//          FlowTaskPropertiesObjectArgs{...}
type FlowTaskPropertiesObjectInput interface {
	pulumi.Input

	ToFlowTaskPropertiesObjectOutput() FlowTaskPropertiesObjectOutput
	ToFlowTaskPropertiesObjectOutputWithContext(context.Context) FlowTaskPropertiesObjectOutput
}

// An object used to store task related info
type FlowTaskPropertiesObjectArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FlowTaskPropertiesObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTaskPropertiesObject)(nil)).Elem()
}

func (i FlowTaskPropertiesObjectArgs) ToFlowTaskPropertiesObjectOutput() FlowTaskPropertiesObjectOutput {
	return i.ToFlowTaskPropertiesObjectOutputWithContext(context.Background())
}

func (i FlowTaskPropertiesObjectArgs) ToFlowTaskPropertiesObjectOutputWithContext(ctx context.Context) FlowTaskPropertiesObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskPropertiesObjectOutput)
}

// FlowTaskPropertiesObjectArrayInput is an input type that accepts FlowTaskPropertiesObjectArray and FlowTaskPropertiesObjectArrayOutput values.
// You can construct a concrete instance of `FlowTaskPropertiesObjectArrayInput` via:
//
//          FlowTaskPropertiesObjectArray{ FlowTaskPropertiesObjectArgs{...} }
type FlowTaskPropertiesObjectArrayInput interface {
	pulumi.Input

	ToFlowTaskPropertiesObjectArrayOutput() FlowTaskPropertiesObjectArrayOutput
	ToFlowTaskPropertiesObjectArrayOutputWithContext(context.Context) FlowTaskPropertiesObjectArrayOutput
}

type FlowTaskPropertiesObjectArray []FlowTaskPropertiesObjectInput

func (FlowTaskPropertiesObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTaskPropertiesObject)(nil)).Elem()
}

func (i FlowTaskPropertiesObjectArray) ToFlowTaskPropertiesObjectArrayOutput() FlowTaskPropertiesObjectArrayOutput {
	return i.ToFlowTaskPropertiesObjectArrayOutputWithContext(context.Background())
}

func (i FlowTaskPropertiesObjectArray) ToFlowTaskPropertiesObjectArrayOutputWithContext(ctx context.Context) FlowTaskPropertiesObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTaskPropertiesObjectArrayOutput)
}

// An object used to store task related info
type FlowTaskPropertiesObjectOutput struct{ *pulumi.OutputState }

func (FlowTaskPropertiesObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTaskPropertiesObject)(nil)).Elem()
}

func (o FlowTaskPropertiesObjectOutput) ToFlowTaskPropertiesObjectOutput() FlowTaskPropertiesObjectOutput {
	return o
}

func (o FlowTaskPropertiesObjectOutput) ToFlowTaskPropertiesObjectOutputWithContext(ctx context.Context) FlowTaskPropertiesObjectOutput {
	return o
}

func (o FlowTaskPropertiesObjectOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTaskPropertiesObject) string { return v.Key }).(pulumi.StringOutput)
}

func (o FlowTaskPropertiesObjectOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTaskPropertiesObject) string { return v.Value }).(pulumi.StringOutput)
}

type FlowTaskPropertiesObjectArrayOutput struct{ *pulumi.OutputState }

func (FlowTaskPropertiesObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowTaskPropertiesObject)(nil)).Elem()
}

func (o FlowTaskPropertiesObjectArrayOutput) ToFlowTaskPropertiesObjectArrayOutput() FlowTaskPropertiesObjectArrayOutput {
	return o
}

func (o FlowTaskPropertiesObjectArrayOutput) ToFlowTaskPropertiesObjectArrayOutputWithContext(ctx context.Context) FlowTaskPropertiesObjectArrayOutput {
	return o
}

func (o FlowTaskPropertiesObjectArrayOutput) Index(i pulumi.IntInput) FlowTaskPropertiesObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowTaskPropertiesObject {
		return vs[0].([]FlowTaskPropertiesObject)[vs[1].(int)]
	}).(FlowTaskPropertiesObjectOutput)
}

type FlowTrendmicroSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowTrendmicroSourcePropertiesInput is an input type that accepts FlowTrendmicroSourcePropertiesArgs and FlowTrendmicroSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowTrendmicroSourcePropertiesInput` via:
//
//          FlowTrendmicroSourcePropertiesArgs{...}
type FlowTrendmicroSourcePropertiesInput interface {
	pulumi.Input

	ToFlowTrendmicroSourcePropertiesOutput() FlowTrendmicroSourcePropertiesOutput
	ToFlowTrendmicroSourcePropertiesOutputWithContext(context.Context) FlowTrendmicroSourcePropertiesOutput
}

type FlowTrendmicroSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowTrendmicroSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTrendmicroSourceProperties)(nil)).Elem()
}

func (i FlowTrendmicroSourcePropertiesArgs) ToFlowTrendmicroSourcePropertiesOutput() FlowTrendmicroSourcePropertiesOutput {
	return i.ToFlowTrendmicroSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowTrendmicroSourcePropertiesArgs) ToFlowTrendmicroSourcePropertiesOutputWithContext(ctx context.Context) FlowTrendmicroSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTrendmicroSourcePropertiesOutput)
}

func (i FlowTrendmicroSourcePropertiesArgs) ToFlowTrendmicroSourcePropertiesPtrOutput() FlowTrendmicroSourcePropertiesPtrOutput {
	return i.ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowTrendmicroSourcePropertiesArgs) ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowTrendmicroSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTrendmicroSourcePropertiesOutput).ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowTrendmicroSourcePropertiesPtrInput is an input type that accepts FlowTrendmicroSourcePropertiesArgs, FlowTrendmicroSourcePropertiesPtr and FlowTrendmicroSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowTrendmicroSourcePropertiesPtrInput` via:
//
//          FlowTrendmicroSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowTrendmicroSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowTrendmicroSourcePropertiesPtrOutput() FlowTrendmicroSourcePropertiesPtrOutput
	ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(context.Context) FlowTrendmicroSourcePropertiesPtrOutput
}

type flowTrendmicroSourcePropertiesPtrType FlowTrendmicroSourcePropertiesArgs

func FlowTrendmicroSourcePropertiesPtr(v *FlowTrendmicroSourcePropertiesArgs) FlowTrendmicroSourcePropertiesPtrInput {
	return (*flowTrendmicroSourcePropertiesPtrType)(v)
}

func (*flowTrendmicroSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTrendmicroSourceProperties)(nil)).Elem()
}

func (i *flowTrendmicroSourcePropertiesPtrType) ToFlowTrendmicroSourcePropertiesPtrOutput() FlowTrendmicroSourcePropertiesPtrOutput {
	return i.ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowTrendmicroSourcePropertiesPtrType) ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowTrendmicroSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTrendmicroSourcePropertiesPtrOutput)
}

type FlowTrendmicroSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowTrendmicroSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTrendmicroSourceProperties)(nil)).Elem()
}

func (o FlowTrendmicroSourcePropertiesOutput) ToFlowTrendmicroSourcePropertiesOutput() FlowTrendmicroSourcePropertiesOutput {
	return o
}

func (o FlowTrendmicroSourcePropertiesOutput) ToFlowTrendmicroSourcePropertiesOutputWithContext(ctx context.Context) FlowTrendmicroSourcePropertiesOutput {
	return o
}

func (o FlowTrendmicroSourcePropertiesOutput) ToFlowTrendmicroSourcePropertiesPtrOutput() FlowTrendmicroSourcePropertiesPtrOutput {
	return o.ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowTrendmicroSourcePropertiesOutput) ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowTrendmicroSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowTrendmicroSourceProperties) *FlowTrendmicroSourceProperties {
		return &v
	}).(FlowTrendmicroSourcePropertiesPtrOutput)
}

func (o FlowTrendmicroSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTrendmicroSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowTrendmicroSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowTrendmicroSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTrendmicroSourceProperties)(nil)).Elem()
}

func (o FlowTrendmicroSourcePropertiesPtrOutput) ToFlowTrendmicroSourcePropertiesPtrOutput() FlowTrendmicroSourcePropertiesPtrOutput {
	return o
}

func (o FlowTrendmicroSourcePropertiesPtrOutput) ToFlowTrendmicroSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowTrendmicroSourcePropertiesPtrOutput {
	return o
}

func (o FlowTrendmicroSourcePropertiesPtrOutput) Elem() FlowTrendmicroSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowTrendmicroSourceProperties) FlowTrendmicroSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowTrendmicroSourceProperties
		return ret
	}).(FlowTrendmicroSourcePropertiesOutput)
}

func (o FlowTrendmicroSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTrendmicroSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

// Trigger settings of the flow.
type FlowTriggerConfig struct {
	// Details required based on the type of trigger
	TriggerProperties *FlowScheduledTriggerProperties `pulumi:"triggerProperties"`
	// Trigger type of the flow
	TriggerType string `pulumi:"triggerType"`
}

// FlowTriggerConfigInput is an input type that accepts FlowTriggerConfigArgs and FlowTriggerConfigOutput values.
// You can construct a concrete instance of `FlowTriggerConfigInput` via:
//
//          FlowTriggerConfigArgs{...}
type FlowTriggerConfigInput interface {
	pulumi.Input

	ToFlowTriggerConfigOutput() FlowTriggerConfigOutput
	ToFlowTriggerConfigOutputWithContext(context.Context) FlowTriggerConfigOutput
}

// Trigger settings of the flow.
type FlowTriggerConfigArgs struct {
	// Details required based on the type of trigger
	TriggerProperties FlowScheduledTriggerPropertiesPtrInput `pulumi:"triggerProperties"`
	// Trigger type of the flow
	TriggerType pulumi.StringInput `pulumi:"triggerType"`
}

func (FlowTriggerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfig)(nil)).Elem()
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigOutput() FlowTriggerConfigOutput {
	return i.ToFlowTriggerConfigOutputWithContext(context.Background())
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigOutputWithContext(ctx context.Context) FlowTriggerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigOutput)
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return i.ToFlowTriggerConfigPtrOutputWithContext(context.Background())
}

func (i FlowTriggerConfigArgs) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigOutput).ToFlowTriggerConfigPtrOutputWithContext(ctx)
}

// FlowTriggerConfigPtrInput is an input type that accepts FlowTriggerConfigArgs, FlowTriggerConfigPtr and FlowTriggerConfigPtrOutput values.
// You can construct a concrete instance of `FlowTriggerConfigPtrInput` via:
//
//          FlowTriggerConfigArgs{...}
//
//  or:
//
//          nil
type FlowTriggerConfigPtrInput interface {
	pulumi.Input

	ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput
	ToFlowTriggerConfigPtrOutputWithContext(context.Context) FlowTriggerConfigPtrOutput
}

type flowTriggerConfigPtrType FlowTriggerConfigArgs

func FlowTriggerConfigPtr(v *FlowTriggerConfigArgs) FlowTriggerConfigPtrInput {
	return (*flowTriggerConfigPtrType)(v)
}

func (*flowTriggerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfig)(nil)).Elem()
}

func (i *flowTriggerConfigPtrType) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return i.ToFlowTriggerConfigPtrOutputWithContext(context.Background())
}

func (i *flowTriggerConfigPtrType) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTriggerConfigPtrOutput)
}

// Trigger settings of the flow.
type FlowTriggerConfigOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTriggerConfig)(nil)).Elem()
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigOutput() FlowTriggerConfigOutput {
	return o
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigOutputWithContext(ctx context.Context) FlowTriggerConfigOutput {
	return o
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return o.ToFlowTriggerConfigPtrOutputWithContext(context.Background())
}

func (o FlowTriggerConfigOutput) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowTriggerConfig) *FlowTriggerConfig {
		return &v
	}).(FlowTriggerConfigPtrOutput)
}

// Details required based on the type of trigger
func (o FlowTriggerConfigOutput) TriggerProperties() FlowScheduledTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v FlowTriggerConfig) *FlowScheduledTriggerProperties { return v.TriggerProperties }).(FlowScheduledTriggerPropertiesPtrOutput)
}

// Trigger type of the flow
func (o FlowTriggerConfigOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTriggerConfig) string { return v.TriggerType }).(pulumi.StringOutput)
}

type FlowTriggerConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowTriggerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTriggerConfig)(nil)).Elem()
}

func (o FlowTriggerConfigPtrOutput) ToFlowTriggerConfigPtrOutput() FlowTriggerConfigPtrOutput {
	return o
}

func (o FlowTriggerConfigPtrOutput) ToFlowTriggerConfigPtrOutputWithContext(ctx context.Context) FlowTriggerConfigPtrOutput {
	return o
}

func (o FlowTriggerConfigPtrOutput) Elem() FlowTriggerConfigOutput {
	return o.ApplyT(func(v *FlowTriggerConfig) FlowTriggerConfig {
		if v != nil {
			return *v
		}
		var ret FlowTriggerConfig
		return ret
	}).(FlowTriggerConfigOutput)
}

// Details required based on the type of trigger
func (o FlowTriggerConfigPtrOutput) TriggerProperties() FlowScheduledTriggerPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfig) *FlowScheduledTriggerProperties {
		if v == nil {
			return nil
		}
		return v.TriggerProperties
	}).(FlowScheduledTriggerPropertiesPtrOutput)
}

// Trigger type of the flow
func (o FlowTriggerConfigPtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTriggerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

type FlowUpsolverDestinationProperties struct {
	BucketName           string                           `pulumi:"bucketName"`
	BucketPrefix         *string                          `pulumi:"bucketPrefix"`
	S3OutputFormatConfig FlowUpsolverS3OutputFormatConfig `pulumi:"s3OutputFormatConfig"`
}

// FlowUpsolverDestinationPropertiesInput is an input type that accepts FlowUpsolverDestinationPropertiesArgs and FlowUpsolverDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowUpsolverDestinationPropertiesInput` via:
//
//          FlowUpsolverDestinationPropertiesArgs{...}
type FlowUpsolverDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowUpsolverDestinationPropertiesOutput() FlowUpsolverDestinationPropertiesOutput
	ToFlowUpsolverDestinationPropertiesOutputWithContext(context.Context) FlowUpsolverDestinationPropertiesOutput
}

type FlowUpsolverDestinationPropertiesArgs struct {
	BucketName           pulumi.StringInput                    `pulumi:"bucketName"`
	BucketPrefix         pulumi.StringPtrInput                 `pulumi:"bucketPrefix"`
	S3OutputFormatConfig FlowUpsolverS3OutputFormatConfigInput `pulumi:"s3OutputFormatConfig"`
}

func (FlowUpsolverDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowUpsolverDestinationProperties)(nil)).Elem()
}

func (i FlowUpsolverDestinationPropertiesArgs) ToFlowUpsolverDestinationPropertiesOutput() FlowUpsolverDestinationPropertiesOutput {
	return i.ToFlowUpsolverDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowUpsolverDestinationPropertiesArgs) ToFlowUpsolverDestinationPropertiesOutputWithContext(ctx context.Context) FlowUpsolverDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowUpsolverDestinationPropertiesOutput)
}

func (i FlowUpsolverDestinationPropertiesArgs) ToFlowUpsolverDestinationPropertiesPtrOutput() FlowUpsolverDestinationPropertiesPtrOutput {
	return i.ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowUpsolverDestinationPropertiesArgs) ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowUpsolverDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowUpsolverDestinationPropertiesOutput).ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowUpsolverDestinationPropertiesPtrInput is an input type that accepts FlowUpsolverDestinationPropertiesArgs, FlowUpsolverDestinationPropertiesPtr and FlowUpsolverDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowUpsolverDestinationPropertiesPtrInput` via:
//
//          FlowUpsolverDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowUpsolverDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowUpsolverDestinationPropertiesPtrOutput() FlowUpsolverDestinationPropertiesPtrOutput
	ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(context.Context) FlowUpsolverDestinationPropertiesPtrOutput
}

type flowUpsolverDestinationPropertiesPtrType FlowUpsolverDestinationPropertiesArgs

func FlowUpsolverDestinationPropertiesPtr(v *FlowUpsolverDestinationPropertiesArgs) FlowUpsolverDestinationPropertiesPtrInput {
	return (*flowUpsolverDestinationPropertiesPtrType)(v)
}

func (*flowUpsolverDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowUpsolverDestinationProperties)(nil)).Elem()
}

func (i *flowUpsolverDestinationPropertiesPtrType) ToFlowUpsolverDestinationPropertiesPtrOutput() FlowUpsolverDestinationPropertiesPtrOutput {
	return i.ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowUpsolverDestinationPropertiesPtrType) ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowUpsolverDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowUpsolverDestinationPropertiesPtrOutput)
}

type FlowUpsolverDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowUpsolverDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowUpsolverDestinationProperties)(nil)).Elem()
}

func (o FlowUpsolverDestinationPropertiesOutput) ToFlowUpsolverDestinationPropertiesOutput() FlowUpsolverDestinationPropertiesOutput {
	return o
}

func (o FlowUpsolverDestinationPropertiesOutput) ToFlowUpsolverDestinationPropertiesOutputWithContext(ctx context.Context) FlowUpsolverDestinationPropertiesOutput {
	return o
}

func (o FlowUpsolverDestinationPropertiesOutput) ToFlowUpsolverDestinationPropertiesPtrOutput() FlowUpsolverDestinationPropertiesPtrOutput {
	return o.ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowUpsolverDestinationPropertiesOutput) ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowUpsolverDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowUpsolverDestinationProperties) *FlowUpsolverDestinationProperties {
		return &v
	}).(FlowUpsolverDestinationPropertiesPtrOutput)
}

func (o FlowUpsolverDestinationPropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowUpsolverDestinationProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o FlowUpsolverDestinationPropertiesOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowUpsolverDestinationProperties) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o FlowUpsolverDestinationPropertiesOutput) S3OutputFormatConfig() FlowUpsolverS3OutputFormatConfigOutput {
	return o.ApplyT(func(v FlowUpsolverDestinationProperties) FlowUpsolverS3OutputFormatConfig {
		return v.S3OutputFormatConfig
	}).(FlowUpsolverS3OutputFormatConfigOutput)
}

type FlowUpsolverDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowUpsolverDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowUpsolverDestinationProperties)(nil)).Elem()
}

func (o FlowUpsolverDestinationPropertiesPtrOutput) ToFlowUpsolverDestinationPropertiesPtrOutput() FlowUpsolverDestinationPropertiesPtrOutput {
	return o
}

func (o FlowUpsolverDestinationPropertiesPtrOutput) ToFlowUpsolverDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowUpsolverDestinationPropertiesPtrOutput {
	return o
}

func (o FlowUpsolverDestinationPropertiesPtrOutput) Elem() FlowUpsolverDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowUpsolverDestinationProperties) FlowUpsolverDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowUpsolverDestinationProperties
		return ret
	}).(FlowUpsolverDestinationPropertiesOutput)
}

func (o FlowUpsolverDestinationPropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowUpsolverDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o FlowUpsolverDestinationPropertiesPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowUpsolverDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o FlowUpsolverDestinationPropertiesPtrOutput) S3OutputFormatConfig() FlowUpsolverS3OutputFormatConfigPtrOutput {
	return o.ApplyT(func(v *FlowUpsolverDestinationProperties) *FlowUpsolverS3OutputFormatConfig {
		if v == nil {
			return nil
		}
		return &v.S3OutputFormatConfig
	}).(FlowUpsolverS3OutputFormatConfigPtrOutput)
}

type FlowUpsolverS3OutputFormatConfig struct {
	AggregationConfig *FlowAggregationConfig `pulumi:"aggregationConfig"`
	FileType          *string                `pulumi:"fileType"`
	PrefixConfig      FlowPrefixConfig       `pulumi:"prefixConfig"`
}

// FlowUpsolverS3OutputFormatConfigInput is an input type that accepts FlowUpsolverS3OutputFormatConfigArgs and FlowUpsolverS3OutputFormatConfigOutput values.
// You can construct a concrete instance of `FlowUpsolverS3OutputFormatConfigInput` via:
//
//          FlowUpsolverS3OutputFormatConfigArgs{...}
type FlowUpsolverS3OutputFormatConfigInput interface {
	pulumi.Input

	ToFlowUpsolverS3OutputFormatConfigOutput() FlowUpsolverS3OutputFormatConfigOutput
	ToFlowUpsolverS3OutputFormatConfigOutputWithContext(context.Context) FlowUpsolverS3OutputFormatConfigOutput
}

type FlowUpsolverS3OutputFormatConfigArgs struct {
	AggregationConfig FlowAggregationConfigPtrInput `pulumi:"aggregationConfig"`
	FileType          pulumi.StringPtrInput         `pulumi:"fileType"`
	PrefixConfig      FlowPrefixConfigInput         `pulumi:"prefixConfig"`
}

func (FlowUpsolverS3OutputFormatConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (i FlowUpsolverS3OutputFormatConfigArgs) ToFlowUpsolverS3OutputFormatConfigOutput() FlowUpsolverS3OutputFormatConfigOutput {
	return i.ToFlowUpsolverS3OutputFormatConfigOutputWithContext(context.Background())
}

func (i FlowUpsolverS3OutputFormatConfigArgs) ToFlowUpsolverS3OutputFormatConfigOutputWithContext(ctx context.Context) FlowUpsolverS3OutputFormatConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowUpsolverS3OutputFormatConfigOutput)
}

func (i FlowUpsolverS3OutputFormatConfigArgs) ToFlowUpsolverS3OutputFormatConfigPtrOutput() FlowUpsolverS3OutputFormatConfigPtrOutput {
	return i.ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i FlowUpsolverS3OutputFormatConfigArgs) ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowUpsolverS3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowUpsolverS3OutputFormatConfigOutput).ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx)
}

// FlowUpsolverS3OutputFormatConfigPtrInput is an input type that accepts FlowUpsolverS3OutputFormatConfigArgs, FlowUpsolverS3OutputFormatConfigPtr and FlowUpsolverS3OutputFormatConfigPtrOutput values.
// You can construct a concrete instance of `FlowUpsolverS3OutputFormatConfigPtrInput` via:
//
//          FlowUpsolverS3OutputFormatConfigArgs{...}
//
//  or:
//
//          nil
type FlowUpsolverS3OutputFormatConfigPtrInput interface {
	pulumi.Input

	ToFlowUpsolverS3OutputFormatConfigPtrOutput() FlowUpsolverS3OutputFormatConfigPtrOutput
	ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Context) FlowUpsolverS3OutputFormatConfigPtrOutput
}

type flowUpsolverS3OutputFormatConfigPtrType FlowUpsolverS3OutputFormatConfigArgs

func FlowUpsolverS3OutputFormatConfigPtr(v *FlowUpsolverS3OutputFormatConfigArgs) FlowUpsolverS3OutputFormatConfigPtrInput {
	return (*flowUpsolverS3OutputFormatConfigPtrType)(v)
}

func (*flowUpsolverS3OutputFormatConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (i *flowUpsolverS3OutputFormatConfigPtrType) ToFlowUpsolverS3OutputFormatConfigPtrOutput() FlowUpsolverS3OutputFormatConfigPtrOutput {
	return i.ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (i *flowUpsolverS3OutputFormatConfigPtrType) ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowUpsolverS3OutputFormatConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowUpsolverS3OutputFormatConfigPtrOutput)
}

type FlowUpsolverS3OutputFormatConfigOutput struct{ *pulumi.OutputState }

func (FlowUpsolverS3OutputFormatConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (o FlowUpsolverS3OutputFormatConfigOutput) ToFlowUpsolverS3OutputFormatConfigOutput() FlowUpsolverS3OutputFormatConfigOutput {
	return o
}

func (o FlowUpsolverS3OutputFormatConfigOutput) ToFlowUpsolverS3OutputFormatConfigOutputWithContext(ctx context.Context) FlowUpsolverS3OutputFormatConfigOutput {
	return o
}

func (o FlowUpsolverS3OutputFormatConfigOutput) ToFlowUpsolverS3OutputFormatConfigPtrOutput() FlowUpsolverS3OutputFormatConfigPtrOutput {
	return o.ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(context.Background())
}

func (o FlowUpsolverS3OutputFormatConfigOutput) ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowUpsolverS3OutputFormatConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowUpsolverS3OutputFormatConfig) *FlowUpsolverS3OutputFormatConfig {
		return &v
	}).(FlowUpsolverS3OutputFormatConfigPtrOutput)
}

func (o FlowUpsolverS3OutputFormatConfigOutput) AggregationConfig() FlowAggregationConfigPtrOutput {
	return o.ApplyT(func(v FlowUpsolverS3OutputFormatConfig) *FlowAggregationConfig { return v.AggregationConfig }).(FlowAggregationConfigPtrOutput)
}

func (o FlowUpsolverS3OutputFormatConfigOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowUpsolverS3OutputFormatConfig) *string { return v.FileType }).(pulumi.StringPtrOutput)
}

func (o FlowUpsolverS3OutputFormatConfigOutput) PrefixConfig() FlowPrefixConfigOutput {
	return o.ApplyT(func(v FlowUpsolverS3OutputFormatConfig) FlowPrefixConfig { return v.PrefixConfig }).(FlowPrefixConfigOutput)
}

type FlowUpsolverS3OutputFormatConfigPtrOutput struct{ *pulumi.OutputState }

func (FlowUpsolverS3OutputFormatConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowUpsolverS3OutputFormatConfig)(nil)).Elem()
}

func (o FlowUpsolverS3OutputFormatConfigPtrOutput) ToFlowUpsolverS3OutputFormatConfigPtrOutput() FlowUpsolverS3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowUpsolverS3OutputFormatConfigPtrOutput) ToFlowUpsolverS3OutputFormatConfigPtrOutputWithContext(ctx context.Context) FlowUpsolverS3OutputFormatConfigPtrOutput {
	return o
}

func (o FlowUpsolverS3OutputFormatConfigPtrOutput) Elem() FlowUpsolverS3OutputFormatConfigOutput {
	return o.ApplyT(func(v *FlowUpsolverS3OutputFormatConfig) FlowUpsolverS3OutputFormatConfig {
		if v != nil {
			return *v
		}
		var ret FlowUpsolverS3OutputFormatConfig
		return ret
	}).(FlowUpsolverS3OutputFormatConfigOutput)
}

func (o FlowUpsolverS3OutputFormatConfigPtrOutput) AggregationConfig() FlowAggregationConfigPtrOutput {
	return o.ApplyT(func(v *FlowUpsolverS3OutputFormatConfig) *FlowAggregationConfig {
		if v == nil {
			return nil
		}
		return v.AggregationConfig
	}).(FlowAggregationConfigPtrOutput)
}

func (o FlowUpsolverS3OutputFormatConfigPtrOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowUpsolverS3OutputFormatConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileType
	}).(pulumi.StringPtrOutput)
}

func (o FlowUpsolverS3OutputFormatConfigPtrOutput) PrefixConfig() FlowPrefixConfigPtrOutput {
	return o.ApplyT(func(v *FlowUpsolverS3OutputFormatConfig) *FlowPrefixConfig {
		if v == nil {
			return nil
		}
		return &v.PrefixConfig
	}).(FlowPrefixConfigPtrOutput)
}

type FlowVeevaSourceProperties struct {
	DocumentType       *string `pulumi:"documentType"`
	IncludeAllVersions *bool   `pulumi:"includeAllVersions"`
	IncludeRenditions  *bool   `pulumi:"includeRenditions"`
	IncludeSourceFiles *bool   `pulumi:"includeSourceFiles"`
	Object             string  `pulumi:"object"`
}

// FlowVeevaSourcePropertiesInput is an input type that accepts FlowVeevaSourcePropertiesArgs and FlowVeevaSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowVeevaSourcePropertiesInput` via:
//
//          FlowVeevaSourcePropertiesArgs{...}
type FlowVeevaSourcePropertiesInput interface {
	pulumi.Input

	ToFlowVeevaSourcePropertiesOutput() FlowVeevaSourcePropertiesOutput
	ToFlowVeevaSourcePropertiesOutputWithContext(context.Context) FlowVeevaSourcePropertiesOutput
}

type FlowVeevaSourcePropertiesArgs struct {
	DocumentType       pulumi.StringPtrInput `pulumi:"documentType"`
	IncludeAllVersions pulumi.BoolPtrInput   `pulumi:"includeAllVersions"`
	IncludeRenditions  pulumi.BoolPtrInput   `pulumi:"includeRenditions"`
	IncludeSourceFiles pulumi.BoolPtrInput   `pulumi:"includeSourceFiles"`
	Object             pulumi.StringInput    `pulumi:"object"`
}

func (FlowVeevaSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVeevaSourceProperties)(nil)).Elem()
}

func (i FlowVeevaSourcePropertiesArgs) ToFlowVeevaSourcePropertiesOutput() FlowVeevaSourcePropertiesOutput {
	return i.ToFlowVeevaSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowVeevaSourcePropertiesArgs) ToFlowVeevaSourcePropertiesOutputWithContext(ctx context.Context) FlowVeevaSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowVeevaSourcePropertiesOutput)
}

func (i FlowVeevaSourcePropertiesArgs) ToFlowVeevaSourcePropertiesPtrOutput() FlowVeevaSourcePropertiesPtrOutput {
	return i.ToFlowVeevaSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowVeevaSourcePropertiesArgs) ToFlowVeevaSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowVeevaSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowVeevaSourcePropertiesOutput).ToFlowVeevaSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowVeevaSourcePropertiesPtrInput is an input type that accepts FlowVeevaSourcePropertiesArgs, FlowVeevaSourcePropertiesPtr and FlowVeevaSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowVeevaSourcePropertiesPtrInput` via:
//
//          FlowVeevaSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowVeevaSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowVeevaSourcePropertiesPtrOutput() FlowVeevaSourcePropertiesPtrOutput
	ToFlowVeevaSourcePropertiesPtrOutputWithContext(context.Context) FlowVeevaSourcePropertiesPtrOutput
}

type flowVeevaSourcePropertiesPtrType FlowVeevaSourcePropertiesArgs

func FlowVeevaSourcePropertiesPtr(v *FlowVeevaSourcePropertiesArgs) FlowVeevaSourcePropertiesPtrInput {
	return (*flowVeevaSourcePropertiesPtrType)(v)
}

func (*flowVeevaSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVeevaSourceProperties)(nil)).Elem()
}

func (i *flowVeevaSourcePropertiesPtrType) ToFlowVeevaSourcePropertiesPtrOutput() FlowVeevaSourcePropertiesPtrOutput {
	return i.ToFlowVeevaSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowVeevaSourcePropertiesPtrType) ToFlowVeevaSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowVeevaSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowVeevaSourcePropertiesPtrOutput)
}

type FlowVeevaSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowVeevaSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVeevaSourceProperties)(nil)).Elem()
}

func (o FlowVeevaSourcePropertiesOutput) ToFlowVeevaSourcePropertiesOutput() FlowVeevaSourcePropertiesOutput {
	return o
}

func (o FlowVeevaSourcePropertiesOutput) ToFlowVeevaSourcePropertiesOutputWithContext(ctx context.Context) FlowVeevaSourcePropertiesOutput {
	return o
}

func (o FlowVeevaSourcePropertiesOutput) ToFlowVeevaSourcePropertiesPtrOutput() FlowVeevaSourcePropertiesPtrOutput {
	return o.ToFlowVeevaSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowVeevaSourcePropertiesOutput) ToFlowVeevaSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowVeevaSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowVeevaSourceProperties) *FlowVeevaSourceProperties {
		return &v
	}).(FlowVeevaSourcePropertiesPtrOutput)
}

func (o FlowVeevaSourcePropertiesOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowVeevaSourceProperties) *string { return v.DocumentType }).(pulumi.StringPtrOutput)
}

func (o FlowVeevaSourcePropertiesOutput) IncludeAllVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowVeevaSourceProperties) *bool { return v.IncludeAllVersions }).(pulumi.BoolPtrOutput)
}

func (o FlowVeevaSourcePropertiesOutput) IncludeRenditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowVeevaSourceProperties) *bool { return v.IncludeRenditions }).(pulumi.BoolPtrOutput)
}

func (o FlowVeevaSourcePropertiesOutput) IncludeSourceFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowVeevaSourceProperties) *bool { return v.IncludeSourceFiles }).(pulumi.BoolPtrOutput)
}

func (o FlowVeevaSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVeevaSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowVeevaSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVeevaSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVeevaSourceProperties)(nil)).Elem()
}

func (o FlowVeevaSourcePropertiesPtrOutput) ToFlowVeevaSourcePropertiesPtrOutput() FlowVeevaSourcePropertiesPtrOutput {
	return o
}

func (o FlowVeevaSourcePropertiesPtrOutput) ToFlowVeevaSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowVeevaSourcePropertiesPtrOutput {
	return o
}

func (o FlowVeevaSourcePropertiesPtrOutput) Elem() FlowVeevaSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowVeevaSourceProperties) FlowVeevaSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowVeevaSourceProperties
		return ret
	}).(FlowVeevaSourcePropertiesOutput)
}

func (o FlowVeevaSourcePropertiesPtrOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVeevaSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DocumentType
	}).(pulumi.StringPtrOutput)
}

func (o FlowVeevaSourcePropertiesPtrOutput) IncludeAllVersions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowVeevaSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAllVersions
	}).(pulumi.BoolPtrOutput)
}

func (o FlowVeevaSourcePropertiesPtrOutput) IncludeRenditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowVeevaSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeRenditions
	}).(pulumi.BoolPtrOutput)
}

func (o FlowVeevaSourcePropertiesPtrOutput) IncludeSourceFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowVeevaSourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSourceFiles
	}).(pulumi.BoolPtrOutput)
}

func (o FlowVeevaSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVeevaSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type FlowZendeskDestinationProperties struct {
	ErrorHandlingConfig *FlowErrorHandlingConfig `pulumi:"errorHandlingConfig"`
	// List of fields used as ID when performing a write operation.
	IdFieldNames       []string `pulumi:"idFieldNames"`
	Object             string   `pulumi:"object"`
	WriteOperationType *string  `pulumi:"writeOperationType"`
}

// FlowZendeskDestinationPropertiesInput is an input type that accepts FlowZendeskDestinationPropertiesArgs and FlowZendeskDestinationPropertiesOutput values.
// You can construct a concrete instance of `FlowZendeskDestinationPropertiesInput` via:
//
//          FlowZendeskDestinationPropertiesArgs{...}
type FlowZendeskDestinationPropertiesInput interface {
	pulumi.Input

	ToFlowZendeskDestinationPropertiesOutput() FlowZendeskDestinationPropertiesOutput
	ToFlowZendeskDestinationPropertiesOutputWithContext(context.Context) FlowZendeskDestinationPropertiesOutput
}

type FlowZendeskDestinationPropertiesArgs struct {
	ErrorHandlingConfig FlowErrorHandlingConfigPtrInput `pulumi:"errorHandlingConfig"`
	// List of fields used as ID when performing a write operation.
	IdFieldNames       pulumi.StringArrayInput `pulumi:"idFieldNames"`
	Object             pulumi.StringInput      `pulumi:"object"`
	WriteOperationType pulumi.StringPtrInput   `pulumi:"writeOperationType"`
}

func (FlowZendeskDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowZendeskDestinationProperties)(nil)).Elem()
}

func (i FlowZendeskDestinationPropertiesArgs) ToFlowZendeskDestinationPropertiesOutput() FlowZendeskDestinationPropertiesOutput {
	return i.ToFlowZendeskDestinationPropertiesOutputWithContext(context.Background())
}

func (i FlowZendeskDestinationPropertiesArgs) ToFlowZendeskDestinationPropertiesOutputWithContext(ctx context.Context) FlowZendeskDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowZendeskDestinationPropertiesOutput)
}

func (i FlowZendeskDestinationPropertiesArgs) ToFlowZendeskDestinationPropertiesPtrOutput() FlowZendeskDestinationPropertiesPtrOutput {
	return i.ToFlowZendeskDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowZendeskDestinationPropertiesArgs) ToFlowZendeskDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowZendeskDestinationPropertiesOutput).ToFlowZendeskDestinationPropertiesPtrOutputWithContext(ctx)
}

// FlowZendeskDestinationPropertiesPtrInput is an input type that accepts FlowZendeskDestinationPropertiesArgs, FlowZendeskDestinationPropertiesPtr and FlowZendeskDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowZendeskDestinationPropertiesPtrInput` via:
//
//          FlowZendeskDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type FlowZendeskDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowZendeskDestinationPropertiesPtrOutput() FlowZendeskDestinationPropertiesPtrOutput
	ToFlowZendeskDestinationPropertiesPtrOutputWithContext(context.Context) FlowZendeskDestinationPropertiesPtrOutput
}

type flowZendeskDestinationPropertiesPtrType FlowZendeskDestinationPropertiesArgs

func FlowZendeskDestinationPropertiesPtr(v *FlowZendeskDestinationPropertiesArgs) FlowZendeskDestinationPropertiesPtrInput {
	return (*flowZendeskDestinationPropertiesPtrType)(v)
}

func (*flowZendeskDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowZendeskDestinationProperties)(nil)).Elem()
}

func (i *flowZendeskDestinationPropertiesPtrType) ToFlowZendeskDestinationPropertiesPtrOutput() FlowZendeskDestinationPropertiesPtrOutput {
	return i.ToFlowZendeskDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowZendeskDestinationPropertiesPtrType) ToFlowZendeskDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowZendeskDestinationPropertiesPtrOutput)
}

type FlowZendeskDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowZendeskDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowZendeskDestinationProperties)(nil)).Elem()
}

func (o FlowZendeskDestinationPropertiesOutput) ToFlowZendeskDestinationPropertiesOutput() FlowZendeskDestinationPropertiesOutput {
	return o
}

func (o FlowZendeskDestinationPropertiesOutput) ToFlowZendeskDestinationPropertiesOutputWithContext(ctx context.Context) FlowZendeskDestinationPropertiesOutput {
	return o
}

func (o FlowZendeskDestinationPropertiesOutput) ToFlowZendeskDestinationPropertiesPtrOutput() FlowZendeskDestinationPropertiesPtrOutput {
	return o.ToFlowZendeskDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowZendeskDestinationPropertiesOutput) ToFlowZendeskDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowZendeskDestinationProperties) *FlowZendeskDestinationProperties {
		return &v
	}).(FlowZendeskDestinationPropertiesPtrOutput)
}

func (o FlowZendeskDestinationPropertiesOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v FlowZendeskDestinationProperties) *FlowErrorHandlingConfig { return v.ErrorHandlingConfig }).(FlowErrorHandlingConfigPtrOutput)
}

// List of fields used as ID when performing a write operation.
func (o FlowZendeskDestinationPropertiesOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowZendeskDestinationProperties) []string { return v.IdFieldNames }).(pulumi.StringArrayOutput)
}

func (o FlowZendeskDestinationPropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowZendeskDestinationProperties) string { return v.Object }).(pulumi.StringOutput)
}

func (o FlowZendeskDestinationPropertiesOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowZendeskDestinationProperties) *string { return v.WriteOperationType }).(pulumi.StringPtrOutput)
}

type FlowZendeskDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowZendeskDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowZendeskDestinationProperties)(nil)).Elem()
}

func (o FlowZendeskDestinationPropertiesPtrOutput) ToFlowZendeskDestinationPropertiesPtrOutput() FlowZendeskDestinationPropertiesPtrOutput {
	return o
}

func (o FlowZendeskDestinationPropertiesPtrOutput) ToFlowZendeskDestinationPropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskDestinationPropertiesPtrOutput {
	return o
}

func (o FlowZendeskDestinationPropertiesPtrOutput) Elem() FlowZendeskDestinationPropertiesOutput {
	return o.ApplyT(func(v *FlowZendeskDestinationProperties) FlowZendeskDestinationProperties {
		if v != nil {
			return *v
		}
		var ret FlowZendeskDestinationProperties
		return ret
	}).(FlowZendeskDestinationPropertiesOutput)
}

func (o FlowZendeskDestinationPropertiesPtrOutput) ErrorHandlingConfig() FlowErrorHandlingConfigPtrOutput {
	return o.ApplyT(func(v *FlowZendeskDestinationProperties) *FlowErrorHandlingConfig {
		if v == nil {
			return nil
		}
		return v.ErrorHandlingConfig
	}).(FlowErrorHandlingConfigPtrOutput)
}

// List of fields used as ID when performing a write operation.
func (o FlowZendeskDestinationPropertiesPtrOutput) IdFieldNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowZendeskDestinationProperties) []string {
		if v == nil {
			return nil
		}
		return v.IdFieldNames
	}).(pulumi.StringArrayOutput)
}

func (o FlowZendeskDestinationPropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowZendeskDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

func (o FlowZendeskDestinationPropertiesPtrOutput) WriteOperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowZendeskDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WriteOperationType
	}).(pulumi.StringPtrOutput)
}

type FlowZendeskSourceProperties struct {
	Object string `pulumi:"object"`
}

// FlowZendeskSourcePropertiesInput is an input type that accepts FlowZendeskSourcePropertiesArgs and FlowZendeskSourcePropertiesOutput values.
// You can construct a concrete instance of `FlowZendeskSourcePropertiesInput` via:
//
//          FlowZendeskSourcePropertiesArgs{...}
type FlowZendeskSourcePropertiesInput interface {
	pulumi.Input

	ToFlowZendeskSourcePropertiesOutput() FlowZendeskSourcePropertiesOutput
	ToFlowZendeskSourcePropertiesOutputWithContext(context.Context) FlowZendeskSourcePropertiesOutput
}

type FlowZendeskSourcePropertiesArgs struct {
	Object pulumi.StringInput `pulumi:"object"`
}

func (FlowZendeskSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowZendeskSourceProperties)(nil)).Elem()
}

func (i FlowZendeskSourcePropertiesArgs) ToFlowZendeskSourcePropertiesOutput() FlowZendeskSourcePropertiesOutput {
	return i.ToFlowZendeskSourcePropertiesOutputWithContext(context.Background())
}

func (i FlowZendeskSourcePropertiesArgs) ToFlowZendeskSourcePropertiesOutputWithContext(ctx context.Context) FlowZendeskSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowZendeskSourcePropertiesOutput)
}

func (i FlowZendeskSourcePropertiesArgs) ToFlowZendeskSourcePropertiesPtrOutput() FlowZendeskSourcePropertiesPtrOutput {
	return i.ToFlowZendeskSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i FlowZendeskSourcePropertiesArgs) ToFlowZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowZendeskSourcePropertiesOutput).ToFlowZendeskSourcePropertiesPtrOutputWithContext(ctx)
}

// FlowZendeskSourcePropertiesPtrInput is an input type that accepts FlowZendeskSourcePropertiesArgs, FlowZendeskSourcePropertiesPtr and FlowZendeskSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `FlowZendeskSourcePropertiesPtrInput` via:
//
//          FlowZendeskSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type FlowZendeskSourcePropertiesPtrInput interface {
	pulumi.Input

	ToFlowZendeskSourcePropertiesPtrOutput() FlowZendeskSourcePropertiesPtrOutput
	ToFlowZendeskSourcePropertiesPtrOutputWithContext(context.Context) FlowZendeskSourcePropertiesPtrOutput
}

type flowZendeskSourcePropertiesPtrType FlowZendeskSourcePropertiesArgs

func FlowZendeskSourcePropertiesPtr(v *FlowZendeskSourcePropertiesArgs) FlowZendeskSourcePropertiesPtrInput {
	return (*flowZendeskSourcePropertiesPtrType)(v)
}

func (*flowZendeskSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowZendeskSourceProperties)(nil)).Elem()
}

func (i *flowZendeskSourcePropertiesPtrType) ToFlowZendeskSourcePropertiesPtrOutput() FlowZendeskSourcePropertiesPtrOutput {
	return i.ToFlowZendeskSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *flowZendeskSourcePropertiesPtrType) ToFlowZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowZendeskSourcePropertiesPtrOutput)
}

type FlowZendeskSourcePropertiesOutput struct{ *pulumi.OutputState }

func (FlowZendeskSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowZendeskSourceProperties)(nil)).Elem()
}

func (o FlowZendeskSourcePropertiesOutput) ToFlowZendeskSourcePropertiesOutput() FlowZendeskSourcePropertiesOutput {
	return o
}

func (o FlowZendeskSourcePropertiesOutput) ToFlowZendeskSourcePropertiesOutputWithContext(ctx context.Context) FlowZendeskSourcePropertiesOutput {
	return o
}

func (o FlowZendeskSourcePropertiesOutput) ToFlowZendeskSourcePropertiesPtrOutput() FlowZendeskSourcePropertiesPtrOutput {
	return o.ToFlowZendeskSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o FlowZendeskSourcePropertiesOutput) ToFlowZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowZendeskSourceProperties) *FlowZendeskSourceProperties {
		return &v
	}).(FlowZendeskSourcePropertiesPtrOutput)
}

func (o FlowZendeskSourcePropertiesOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v FlowZendeskSourceProperties) string { return v.Object }).(pulumi.StringOutput)
}

type FlowZendeskSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowZendeskSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowZendeskSourceProperties)(nil)).Elem()
}

func (o FlowZendeskSourcePropertiesPtrOutput) ToFlowZendeskSourcePropertiesPtrOutput() FlowZendeskSourcePropertiesPtrOutput {
	return o
}

func (o FlowZendeskSourcePropertiesPtrOutput) ToFlowZendeskSourcePropertiesPtrOutputWithContext(ctx context.Context) FlowZendeskSourcePropertiesPtrOutput {
	return o
}

func (o FlowZendeskSourcePropertiesPtrOutput) Elem() FlowZendeskSourcePropertiesOutput {
	return o.ApplyT(func(v *FlowZendeskSourceProperties) FlowZendeskSourceProperties {
		if v != nil {
			return *v
		}
		var ret FlowZendeskSourceProperties
		return ret
	}).(FlowZendeskSourcePropertiesOutput)
}

func (o FlowZendeskSourcePropertiesPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowZendeskSourceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectorProfileAmplitudeConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileAmplitudeConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorOAuthRequestOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorOAuthRequestPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDatadogConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDatadogConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDatadogConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDatadogConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDynatraceConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDynatraceConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDynatraceConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileDynatraceConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileGoogleAnalyticsConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileInforNexusConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileInforNexusConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileInforNexusConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileInforNexusConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileMarketoConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileMarketoConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileMarketoConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileMarketoConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileRedshiftConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileRedshiftConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileRedshiftConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileRedshiftConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSalesforceConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSalesforceConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSalesforceConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSalesforceConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileServiceNowConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileServiceNowConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileServiceNowConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileServiceNowConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSingularConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSingularConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSlackConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSlackConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSlackConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSlackConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSnowflakeConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSnowflakeConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSnowflakeConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileSnowflakeConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileTrendmicroConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileTrendmicroConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileVeevaConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileVeevaConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileVeevaConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileVeevaConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileZendeskConnectorProfileCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorProfileZendeskConnectorProfileCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorProfileZendeskConnectorProfilePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorProfileZendeskConnectorProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowAggregationConfigOutput{})
	pulumi.RegisterOutputType(FlowAggregationConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowAmplitudeSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowAmplitudeSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowConnectorOperatorOutput{})
	pulumi.RegisterOutputType(FlowConnectorOperatorPtrOutput{})
	pulumi.RegisterOutputType(FlowDatadogSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowDatadogSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowDestinationConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigOutput{})
	pulumi.RegisterOutputType(FlowDestinationFlowConfigArrayOutput{})
	pulumi.RegisterOutputType(FlowDynatraceSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowDynatraceSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowErrorHandlingConfigOutput{})
	pulumi.RegisterOutputType(FlowErrorHandlingConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowEventBridgeDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowEventBridgeDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowGoogleAnalyticsSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowGoogleAnalyticsSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowIncrementalPullConfigOutput{})
	pulumi.RegisterOutputType(FlowIncrementalPullConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowInforNexusSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowInforNexusSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowLookoutMetricsDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowLookoutMetricsDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowMarketoSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowMarketoSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowPrefixConfigOutput{})
	pulumi.RegisterOutputType(FlowPrefixConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowRedshiftDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowRedshiftDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowS3DestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowS3DestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowS3OutputFormatConfigOutput{})
	pulumi.RegisterOutputType(FlowS3OutputFormatConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowS3SourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowS3SourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSalesforceDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowSalesforceDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSalesforceSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowSalesforceSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowScheduledTriggerPropertiesOutput{})
	pulumi.RegisterOutputType(FlowScheduledTriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowServiceNowSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowServiceNowSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSingularSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowSingularSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSlackSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowSlackSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSnowflakeDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowSnowflakeDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(FlowSourceConnectorPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigOutput{})
	pulumi.RegisterOutputType(FlowSourceFlowConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowTagOutput{})
	pulumi.RegisterOutputType(FlowTagArrayOutput{})
	pulumi.RegisterOutputType(FlowTaskOutput{})
	pulumi.RegisterOutputType(FlowTaskArrayOutput{})
	pulumi.RegisterOutputType(FlowTaskPropertiesObjectOutput{})
	pulumi.RegisterOutputType(FlowTaskPropertiesObjectArrayOutput{})
	pulumi.RegisterOutputType(FlowTrendmicroSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowTrendmicroSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigOutput{})
	pulumi.RegisterOutputType(FlowTriggerConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowUpsolverDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowUpsolverDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowUpsolverS3OutputFormatConfigOutput{})
	pulumi.RegisterOutputType(FlowUpsolverS3OutputFormatConfigPtrOutput{})
	pulumi.RegisterOutputType(FlowVeevaSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowVeevaSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowZendeskDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowZendeskDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowZendeskSourcePropertiesOutput{})
	pulumi.RegisterOutputType(FlowZendeskSourcePropertiesPtrOutput{})
}
