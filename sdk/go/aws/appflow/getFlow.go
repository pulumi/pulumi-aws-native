// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::AppFlow::Flow.
func LookupFlow(ctx *pulumi.Context, args *LookupFlowArgs, opts ...pulumi.InvokeOption) (*LookupFlowResult, error) {
	var rv LookupFlowResult
	err := ctx.Invoke("aws-native:appflow:getFlow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFlowArgs struct {
	// Name of the flow.
	FlowName string `pulumi:"flowName"`
}

type LookupFlowResult struct {
	// Description of the flow.
	Description *string `pulumi:"description"`
	// List of Destination connectors of the flow.
	DestinationFlowConfigList []FlowDestinationFlowConfig `pulumi:"destinationFlowConfigList"`
	// ARN identifier of the flow.
	FlowArn *string `pulumi:"flowArn"`
	// Configurations of Source connector of the flow.
	SourceFlowConfig *FlowSourceFlowConfig `pulumi:"sourceFlowConfig"`
	// List of Tags.
	Tags []FlowTag `pulumi:"tags"`
	// List of tasks for the flow.
	Tasks []FlowTask `pulumi:"tasks"`
	// Trigger settings of the flow.
	TriggerConfig *FlowTriggerConfig `pulumi:"triggerConfig"`
}

func LookupFlowOutput(ctx *pulumi.Context, args LookupFlowOutputArgs, opts ...pulumi.InvokeOption) LookupFlowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlowResult, error) {
			args := v.(LookupFlowArgs)
			r, err := LookupFlow(ctx, &args, opts...)
			var s LookupFlowResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlowResultOutput)
}

type LookupFlowOutputArgs struct {
	// Name of the flow.
	FlowName pulumi.StringInput `pulumi:"flowName"`
}

func (LookupFlowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowArgs)(nil)).Elem()
}

type LookupFlowResultOutput struct{ *pulumi.OutputState }

func (LookupFlowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowResult)(nil)).Elem()
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutput() LookupFlowResultOutput {
	return o
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutputWithContext(ctx context.Context) LookupFlowResultOutput {
	return o
}

// Description of the flow.
func (o LookupFlowResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of Destination connectors of the flow.
func (o LookupFlowResultOutput) DestinationFlowConfigList() FlowDestinationFlowConfigArrayOutput {
	return o.ApplyT(func(v LookupFlowResult) []FlowDestinationFlowConfig { return v.DestinationFlowConfigList }).(FlowDestinationFlowConfigArrayOutput)
}

// ARN identifier of the flow.
func (o LookupFlowResultOutput) FlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.FlowArn }).(pulumi.StringPtrOutput)
}

// Configurations of Source connector of the flow.
func (o LookupFlowResultOutput) SourceFlowConfig() FlowSourceFlowConfigPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowSourceFlowConfig { return v.SourceFlowConfig }).(FlowSourceFlowConfigPtrOutput)
}

// List of Tags.
func (o LookupFlowResultOutput) Tags() FlowTagArrayOutput {
	return o.ApplyT(func(v LookupFlowResult) []FlowTag { return v.Tags }).(FlowTagArrayOutput)
}

// List of tasks for the flow.
func (o LookupFlowResultOutput) Tasks() FlowTaskArrayOutput {
	return o.ApplyT(func(v LookupFlowResult) []FlowTask { return v.Tasks }).(FlowTaskArrayOutput)
}

// Trigger settings of the flow.
func (o LookupFlowResultOutput) TriggerConfig() FlowTriggerConfigPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowTriggerConfig { return v.TriggerConfig }).(FlowTriggerConfigPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowResultOutput{})
}
