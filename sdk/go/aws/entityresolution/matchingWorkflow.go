// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package entityresolution

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MatchingWorkflow defined in AWS Entity Resolution service
type MatchingWorkflow struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the MatchingWorkflow
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Optional. An object that defines the incremental run type. This object contains only the `incrementalRunType` field, which appears as "Automatic" in the console.
	//
	// > For workflows where `resolutionType` is `ML_MATCHING` or `PROVIDER` , incremental processing is not supported.
	IncrementalRunConfig MatchingWorkflowIncrementalRunConfigPtrOutput `pulumi:"incrementalRunConfig"`
	// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
	InputSourceConfig MatchingWorkflowInputSourceArrayOutput `pulumi:"inputSourceConfig"`
	// A list of `OutputSource` objects, each of which contains fields `outputS3Path` , `applyNormalization` , `KMSArn` , and `output` .
	OutputSourceConfig MatchingWorkflowOutputSourceArrayOutput `pulumi:"outputSourceConfig"`
	// An object which defines the `resolutionType` and the `ruleBasedProperties` .
	ResolutionTechniques MatchingWorkflowResolutionTechniquesOutput `pulumi:"resolutionTechniques"`
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The tags used to organize, track, or control access for this resource.
	Tags        aws.TagArrayOutput  `pulumi:"tags"`
	UpdatedAt   pulumi.StringOutput `pulumi:"updatedAt"`
	WorkflowArn pulumi.StringOutput `pulumi:"workflowArn"`
	// The name of the MatchingWorkflow
	WorkflowName pulumi.StringOutput `pulumi:"workflowName"`
}

// NewMatchingWorkflow registers a new resource with the given unique name, arguments, and options.
func NewMatchingWorkflow(ctx *pulumi.Context,
	name string, args *MatchingWorkflowArgs, opts ...pulumi.ResourceOption) (*MatchingWorkflow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputSourceConfig == nil {
		return nil, errors.New("invalid value for required argument 'InputSourceConfig'")
	}
	if args.OutputSourceConfig == nil {
		return nil, errors.New("invalid value for required argument 'OutputSourceConfig'")
	}
	if args.ResolutionTechniques == nil {
		return nil, errors.New("invalid value for required argument 'ResolutionTechniques'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"workflowName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MatchingWorkflow
	err := ctx.RegisterResource("aws-native:entityresolution:MatchingWorkflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMatchingWorkflow gets an existing MatchingWorkflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMatchingWorkflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MatchingWorkflowState, opts ...pulumi.ResourceOption) (*MatchingWorkflow, error) {
	var resource MatchingWorkflow
	err := ctx.ReadResource("aws-native:entityresolution:MatchingWorkflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MatchingWorkflow resources.
type matchingWorkflowState struct {
}

type MatchingWorkflowState struct {
}

func (MatchingWorkflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*matchingWorkflowState)(nil)).Elem()
}

type matchingWorkflowArgs struct {
	// The description of the MatchingWorkflow
	Description *string `pulumi:"description"`
	// Optional. An object that defines the incremental run type. This object contains only the `incrementalRunType` field, which appears as "Automatic" in the console.
	//
	// > For workflows where `resolutionType` is `ML_MATCHING` or `PROVIDER` , incremental processing is not supported.
	IncrementalRunConfig *MatchingWorkflowIncrementalRunConfig `pulumi:"incrementalRunConfig"`
	// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
	InputSourceConfig []MatchingWorkflowInputSource `pulumi:"inputSourceConfig"`
	// A list of `OutputSource` objects, each of which contains fields `outputS3Path` , `applyNormalization` , `KMSArn` , and `output` .
	OutputSourceConfig []MatchingWorkflowOutputSource `pulumi:"outputSourceConfig"`
	// An object which defines the `resolutionType` and the `ruleBasedProperties` .
	ResolutionTechniques MatchingWorkflowResolutionTechniques `pulumi:"resolutionTechniques"`
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn string `pulumi:"roleArn"`
	// The tags used to organize, track, or control access for this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The name of the MatchingWorkflow
	WorkflowName *string `pulumi:"workflowName"`
}

// The set of arguments for constructing a MatchingWorkflow resource.
type MatchingWorkflowArgs struct {
	// The description of the MatchingWorkflow
	Description pulumi.StringPtrInput
	// Optional. An object that defines the incremental run type. This object contains only the `incrementalRunType` field, which appears as "Automatic" in the console.
	//
	// > For workflows where `resolutionType` is `ML_MATCHING` or `PROVIDER` , incremental processing is not supported.
	IncrementalRunConfig MatchingWorkflowIncrementalRunConfigPtrInput
	// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
	InputSourceConfig MatchingWorkflowInputSourceArrayInput
	// A list of `OutputSource` objects, each of which contains fields `outputS3Path` , `applyNormalization` , `KMSArn` , and `output` .
	OutputSourceConfig MatchingWorkflowOutputSourceArrayInput
	// An object which defines the `resolutionType` and the `ruleBasedProperties` .
	ResolutionTechniques MatchingWorkflowResolutionTechniquesInput
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn pulumi.StringInput
	// The tags used to organize, track, or control access for this resource.
	Tags aws.TagArrayInput
	// The name of the MatchingWorkflow
	WorkflowName pulumi.StringPtrInput
}

func (MatchingWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*matchingWorkflowArgs)(nil)).Elem()
}

type MatchingWorkflowInput interface {
	pulumi.Input

	ToMatchingWorkflowOutput() MatchingWorkflowOutput
	ToMatchingWorkflowOutputWithContext(ctx context.Context) MatchingWorkflowOutput
}

func (*MatchingWorkflow) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflow)(nil)).Elem()
}

func (i *MatchingWorkflow) ToMatchingWorkflowOutput() MatchingWorkflowOutput {
	return i.ToMatchingWorkflowOutputWithContext(context.Background())
}

func (i *MatchingWorkflow) ToMatchingWorkflowOutputWithContext(ctx context.Context) MatchingWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchingWorkflowOutput)
}

type MatchingWorkflowOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflow)(nil)).Elem()
}

func (o MatchingWorkflowOutput) ToMatchingWorkflowOutput() MatchingWorkflowOutput {
	return o
}

func (o MatchingWorkflowOutput) ToMatchingWorkflowOutputWithContext(ctx context.Context) MatchingWorkflowOutput {
	return o
}

func (o MatchingWorkflowOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchingWorkflow) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the MatchingWorkflow
func (o MatchingWorkflowOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchingWorkflow) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Optional. An object that defines the incremental run type. This object contains only the `incrementalRunType` field, which appears as "Automatic" in the console.
//
// > For workflows where `resolutionType` is `ML_MATCHING` or `PROVIDER` , incremental processing is not supported.
func (o MatchingWorkflowOutput) IncrementalRunConfig() MatchingWorkflowIncrementalRunConfigPtrOutput {
	return o.ApplyT(func(v *MatchingWorkflow) MatchingWorkflowIncrementalRunConfigPtrOutput { return v.IncrementalRunConfig }).(MatchingWorkflowIncrementalRunConfigPtrOutput)
}

// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
func (o MatchingWorkflowOutput) InputSourceConfig() MatchingWorkflowInputSourceArrayOutput {
	return o.ApplyT(func(v *MatchingWorkflow) MatchingWorkflowInputSourceArrayOutput { return v.InputSourceConfig }).(MatchingWorkflowInputSourceArrayOutput)
}

// A list of `OutputSource` objects, each of which contains fields `outputS3Path` , `applyNormalization` , `KMSArn` , and `output` .
func (o MatchingWorkflowOutput) OutputSourceConfig() MatchingWorkflowOutputSourceArrayOutput {
	return o.ApplyT(func(v *MatchingWorkflow) MatchingWorkflowOutputSourceArrayOutput { return v.OutputSourceConfig }).(MatchingWorkflowOutputSourceArrayOutput)
}

// An object which defines the `resolutionType` and the `ruleBasedProperties` .
func (o MatchingWorkflowOutput) ResolutionTechniques() MatchingWorkflowResolutionTechniquesOutput {
	return o.ApplyT(func(v *MatchingWorkflow) MatchingWorkflowResolutionTechniquesOutput { return v.ResolutionTechniques }).(MatchingWorkflowResolutionTechniquesOutput)
}

// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
func (o MatchingWorkflowOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchingWorkflow) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The tags used to organize, track, or control access for this resource.
func (o MatchingWorkflowOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MatchingWorkflow) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o MatchingWorkflowOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchingWorkflow) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o MatchingWorkflowOutput) WorkflowArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchingWorkflow) pulumi.StringOutput { return v.WorkflowArn }).(pulumi.StringOutput)
}

// The name of the MatchingWorkflow
func (o MatchingWorkflowOutput) WorkflowName() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchingWorkflow) pulumi.StringOutput { return v.WorkflowName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowInput)(nil)).Elem(), &MatchingWorkflow{})
	pulumi.RegisterOutputType(MatchingWorkflowOutput{})
}
