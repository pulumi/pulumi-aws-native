// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package entityresolution

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IdMappingWorkflow defined in AWS Entity Resolution service
type IdMappingWorkflow struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the IdMappingWorkflow
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// An object which defines the ID mapping technique and any additional configurations.
	IdMappingTechniques IdMappingWorkflowIdMappingTechniquesOutput `pulumi:"idMappingTechniques"`
	// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
	InputSourceConfig IdMappingWorkflowInputSourceArrayOutput `pulumi:"inputSourceConfig"`
	// A list of `IdMappingWorkflowOutputSource` objects, each of which contains fields `outputS3Path` and `KMSArn` .
	OutputSourceConfig IdMappingWorkflowOutputSourceArrayOutput `pulumi:"outputSourceConfig"`
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The tags used to organize, track, or control access for this resource.
	Tags        aws.TagArrayOutput  `pulumi:"tags"`
	UpdatedAt   pulumi.StringOutput `pulumi:"updatedAt"`
	WorkflowArn pulumi.StringOutput `pulumi:"workflowArn"`
	// The name of the IdMappingWorkflow
	WorkflowName pulumi.StringOutput `pulumi:"workflowName"`
}

// NewIdMappingWorkflow registers a new resource with the given unique name, arguments, and options.
func NewIdMappingWorkflow(ctx *pulumi.Context,
	name string, args *IdMappingWorkflowArgs, opts ...pulumi.ResourceOption) (*IdMappingWorkflow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdMappingTechniques == nil {
		return nil, errors.New("invalid value for required argument 'IdMappingTechniques'")
	}
	if args.InputSourceConfig == nil {
		return nil, errors.New("invalid value for required argument 'InputSourceConfig'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"workflowName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdMappingWorkflow
	err := ctx.RegisterResource("aws-native:entityresolution:IdMappingWorkflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdMappingWorkflow gets an existing IdMappingWorkflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdMappingWorkflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdMappingWorkflowState, opts ...pulumi.ResourceOption) (*IdMappingWorkflow, error) {
	var resource IdMappingWorkflow
	err := ctx.ReadResource("aws-native:entityresolution:IdMappingWorkflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdMappingWorkflow resources.
type idMappingWorkflowState struct {
}

type IdMappingWorkflowState struct {
}

func (IdMappingWorkflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*idMappingWorkflowState)(nil)).Elem()
}

type idMappingWorkflowArgs struct {
	// The description of the IdMappingWorkflow
	Description *string `pulumi:"description"`
	// An object which defines the ID mapping technique and any additional configurations.
	IdMappingTechniques IdMappingWorkflowIdMappingTechniques `pulumi:"idMappingTechniques"`
	// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
	InputSourceConfig []IdMappingWorkflowInputSource `pulumi:"inputSourceConfig"`
	// A list of `IdMappingWorkflowOutputSource` objects, each of which contains fields `outputS3Path` and `KMSArn` .
	OutputSourceConfig []IdMappingWorkflowOutputSource `pulumi:"outputSourceConfig"`
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn string `pulumi:"roleArn"`
	// The tags used to organize, track, or control access for this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The name of the IdMappingWorkflow
	WorkflowName *string `pulumi:"workflowName"`
}

// The set of arguments for constructing a IdMappingWorkflow resource.
type IdMappingWorkflowArgs struct {
	// The description of the IdMappingWorkflow
	Description pulumi.StringPtrInput
	// An object which defines the ID mapping technique and any additional configurations.
	IdMappingTechniques IdMappingWorkflowIdMappingTechniquesInput
	// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
	InputSourceConfig IdMappingWorkflowInputSourceArrayInput
	// A list of `IdMappingWorkflowOutputSource` objects, each of which contains fields `outputS3Path` and `KMSArn` .
	OutputSourceConfig IdMappingWorkflowOutputSourceArrayInput
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn pulumi.StringInput
	// The tags used to organize, track, or control access for this resource.
	Tags aws.TagArrayInput
	// The name of the IdMappingWorkflow
	WorkflowName pulumi.StringPtrInput
}

func (IdMappingWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*idMappingWorkflowArgs)(nil)).Elem()
}

type IdMappingWorkflowInput interface {
	pulumi.Input

	ToIdMappingWorkflowOutput() IdMappingWorkflowOutput
	ToIdMappingWorkflowOutputWithContext(ctx context.Context) IdMappingWorkflowOutput
}

func (*IdMappingWorkflow) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflow)(nil)).Elem()
}

func (i *IdMappingWorkflow) ToIdMappingWorkflowOutput() IdMappingWorkflowOutput {
	return i.ToIdMappingWorkflowOutputWithContext(context.Background())
}

func (i *IdMappingWorkflow) ToIdMappingWorkflowOutputWithContext(ctx context.Context) IdMappingWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdMappingWorkflowOutput)
}

type IdMappingWorkflowOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflow)(nil)).Elem()
}

func (o IdMappingWorkflowOutput) ToIdMappingWorkflowOutput() IdMappingWorkflowOutput {
	return o
}

func (o IdMappingWorkflowOutput) ToIdMappingWorkflowOutputWithContext(ctx context.Context) IdMappingWorkflowOutput {
	return o
}

func (o IdMappingWorkflowOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the IdMappingWorkflow
func (o IdMappingWorkflowOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// An object which defines the ID mapping technique and any additional configurations.
func (o IdMappingWorkflowOutput) IdMappingTechniques() IdMappingWorkflowIdMappingTechniquesOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) IdMappingWorkflowIdMappingTechniquesOutput { return v.IdMappingTechniques }).(IdMappingWorkflowIdMappingTechniquesOutput)
}

// A list of `InputSource` objects, which have the fields `InputSourceARN` and `SchemaName` .
func (o IdMappingWorkflowOutput) InputSourceConfig() IdMappingWorkflowInputSourceArrayOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) IdMappingWorkflowInputSourceArrayOutput { return v.InputSourceConfig }).(IdMappingWorkflowInputSourceArrayOutput)
}

// A list of `IdMappingWorkflowOutputSource` objects, each of which contains fields `outputS3Path` and `KMSArn` .
func (o IdMappingWorkflowOutput) OutputSourceConfig() IdMappingWorkflowOutputSourceArrayOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) IdMappingWorkflowOutputSourceArrayOutput { return v.OutputSourceConfig }).(IdMappingWorkflowOutputSourceArrayOutput)
}

// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
func (o IdMappingWorkflowOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The tags used to organize, track, or control access for this resource.
func (o IdMappingWorkflowOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o IdMappingWorkflowOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o IdMappingWorkflowOutput) WorkflowArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) pulumi.StringOutput { return v.WorkflowArn }).(pulumi.StringOutput)
}

// The name of the IdMappingWorkflow
func (o IdMappingWorkflowOutput) WorkflowName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdMappingWorkflow) pulumi.StringOutput { return v.WorkflowName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowInput)(nil)).Elem(), &IdMappingWorkflow{})
	pulumi.RegisterOutputType(IdMappingWorkflowOutput{})
}
