// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package entityresolution

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdMappingWorkflowIdMappingTechniquesIdMappingType string

const (
	IdMappingWorkflowIdMappingTechniquesIdMappingTypeProvider = IdMappingWorkflowIdMappingTechniquesIdMappingType("PROVIDER")
)

func (IdMappingWorkflowIdMappingTechniquesIdMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return e.ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return IdMappingWorkflowIdMappingTechniquesIdMappingType(e).ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(ctx).ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o.ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowIdMappingTechniquesIdMappingType) *IdMappingWorkflowIdMappingTechniquesIdMappingType {
		return &v
	}).(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput)
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingTechniquesIdMappingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingTechniquesIdMappingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) Elem() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return o.ApplyT(func(v *IdMappingWorkflowIdMappingTechniquesIdMappingType) IdMappingWorkflowIdMappingTechniquesIdMappingType {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowIdMappingTechniquesIdMappingType
		return ret
	}).(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput)
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowIdMappingTechniquesIdMappingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput is an input type that accepts values of the IdMappingWorkflowIdMappingTechniquesIdMappingType enum
// A concrete instance of `IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput` can be one of the following:
//
//	IdMappingWorkflowIdMappingTechniquesIdMappingTypeProvider
type IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput
	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput
}

var idMappingWorkflowIdMappingTechniquesIdMappingTypePtrType = reflect.TypeOf((**IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()

type IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput
	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput
}

type idMappingWorkflowIdMappingTechniquesIdMappingTypePtr string

func IdMappingWorkflowIdMappingTechniquesIdMappingTypePtr(v string) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrInput {
	return (*idMappingWorkflowIdMappingTechniquesIdMappingTypePtr)(&v)
}

func (*idMappingWorkflowIdMappingTechniquesIdMappingTypePtr) ElementType() reflect.Type {
	return idMappingWorkflowIdMappingTechniquesIdMappingTypePtrType
}

func (in *idMappingWorkflowIdMappingTechniquesIdMappingTypePtr) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput)
}

func (in *idMappingWorkflowIdMappingTechniquesIdMappingTypePtr) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput)
}

type IdMappingWorkflowInputSourceType string

const (
	IdMappingWorkflowInputSourceTypeSource = IdMappingWorkflowInputSourceType("SOURCE")
	IdMappingWorkflowInputSourceTypeTarget = IdMappingWorkflowInputSourceType("TARGET")
)

func (IdMappingWorkflowInputSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowInputSourceType)(nil)).Elem()
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypeOutput() IdMappingWorkflowInputSourceTypeOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowInputSourceTypeOutput)
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypeOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowInputSourceTypeOutput)
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return e.ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return IdMappingWorkflowInputSourceType(e).ToIdMappingWorkflowInputSourceTypeOutputWithContext(ctx).ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowInputSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowInputSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowInputSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowInputSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowInputSourceTypeOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowInputSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowInputSourceType)(nil)).Elem()
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypeOutput() IdMappingWorkflowInputSourceTypeOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypeOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypeOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return o.ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowInputSourceType) *IdMappingWorkflowInputSourceType {
		return &v
	}).(IdMappingWorkflowInputSourceTypePtrOutput)
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowInputSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowInputSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowInputSourceTypePtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowInputSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowInputSourceType)(nil)).Elem()
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) Elem() IdMappingWorkflowInputSourceTypeOutput {
	return o.ApplyT(func(v *IdMappingWorkflowInputSourceType) IdMappingWorkflowInputSourceType {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowInputSourceType
		return ret
	}).(IdMappingWorkflowInputSourceTypeOutput)
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowInputSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowInputSourceTypeInput is an input type that accepts values of the IdMappingWorkflowInputSourceType enum
// A concrete instance of `IdMappingWorkflowInputSourceTypeInput` can be one of the following:
//
//	IdMappingWorkflowInputSourceTypeSource
//	IdMappingWorkflowInputSourceTypeTarget
type IdMappingWorkflowInputSourceTypeInput interface {
	pulumi.Input

	ToIdMappingWorkflowInputSourceTypeOutput() IdMappingWorkflowInputSourceTypeOutput
	ToIdMappingWorkflowInputSourceTypeOutputWithContext(context.Context) IdMappingWorkflowInputSourceTypeOutput
}

var idMappingWorkflowInputSourceTypePtrType = reflect.TypeOf((**IdMappingWorkflowInputSourceType)(nil)).Elem()

type IdMappingWorkflowInputSourceTypePtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput
	ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(context.Context) IdMappingWorkflowInputSourceTypePtrOutput
}

type idMappingWorkflowInputSourceTypePtr string

func IdMappingWorkflowInputSourceTypePtr(v string) IdMappingWorkflowInputSourceTypePtrInput {
	return (*idMappingWorkflowInputSourceTypePtr)(&v)
}

func (*idMappingWorkflowInputSourceTypePtr) ElementType() reflect.Type {
	return idMappingWorkflowInputSourceTypePtrType
}

func (in *idMappingWorkflowInputSourceTypePtr) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowInputSourceTypePtrOutput)
}

func (in *idMappingWorkflowInputSourceTypePtr) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowInputSourceTypePtrOutput)
}

type IdNamespaceIdMappingWorkflowPropertiesIdMappingType string

const (
	IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeProvider = IdNamespaceIdMappingWorkflowPropertiesIdMappingType("PROVIDER")
)

func (IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return pulumi.ToOutput(e).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return e.ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(context.Background())
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return IdNamespaceIdMappingWorkflowPropertiesIdMappingType(e).ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(ctx).ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput struct{ *pulumi.OutputState }

func (IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o.ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceIdMappingWorkflowPropertiesIdMappingType) *IdNamespaceIdMappingWorkflowPropertiesIdMappingType {
		return &v
	}).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput)
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) Elem() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return o.ApplyT(func(v *IdNamespaceIdMappingWorkflowPropertiesIdMappingType) IdNamespaceIdMappingWorkflowPropertiesIdMappingType {
		if v != nil {
			return *v
		}
		var ret IdNamespaceIdMappingWorkflowPropertiesIdMappingType
		return ret
	}).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput)
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceIdMappingWorkflowPropertiesIdMappingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput is an input type that accepts values of the IdNamespaceIdMappingWorkflowPropertiesIdMappingType enum
// A concrete instance of `IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput` can be one of the following:
//
//	IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeProvider
type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput interface {
	pulumi.Input

	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput
	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput
}

var idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrType = reflect.TypeOf((**IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()

type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrInput interface {
	pulumi.Input

	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput
	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput
}

type idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr string

func IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr(v string) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrInput {
	return (*idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr)(&v)
}

func (*idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr) ElementType() reflect.Type {
	return idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrType
}

func (in *idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput)
}

func (in *idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput)
}

type IdNamespaceType string

const (
	IdNamespaceTypeSource = IdNamespaceType("SOURCE")
	IdNamespaceTypeTarget = IdNamespaceType("TARGET")
)

func (IdNamespaceType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceType)(nil)).Elem()
}

func (e IdNamespaceType) ToIdNamespaceTypeOutput() IdNamespaceTypeOutput {
	return pulumi.ToOutput(e).(IdNamespaceTypeOutput)
}

func (e IdNamespaceType) ToIdNamespaceTypeOutputWithContext(ctx context.Context) IdNamespaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceTypeOutput)
}

func (e IdNamespaceType) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return e.ToIdNamespaceTypePtrOutputWithContext(context.Background())
}

func (e IdNamespaceType) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return IdNamespaceType(e).ToIdNamespaceTypeOutputWithContext(ctx).ToIdNamespaceTypePtrOutputWithContext(ctx)
}

func (e IdNamespaceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceTypeOutput struct{ *pulumi.OutputState }

func (IdNamespaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceType)(nil)).Elem()
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypeOutput() IdNamespaceTypeOutput {
	return o
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypeOutputWithContext(ctx context.Context) IdNamespaceTypeOutput {
	return o
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return o.ToIdNamespaceTypePtrOutputWithContext(context.Background())
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceType) *IdNamespaceType {
		return &v
	}).(IdNamespaceTypePtrOutput)
}

func (o IdNamespaceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceTypePtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceType)(nil)).Elem()
}

func (o IdNamespaceTypePtrOutput) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return o
}

func (o IdNamespaceTypePtrOutput) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return o
}

func (o IdNamespaceTypePtrOutput) Elem() IdNamespaceTypeOutput {
	return o.ApplyT(func(v *IdNamespaceType) IdNamespaceType {
		if v != nil {
			return *v
		}
		var ret IdNamespaceType
		return ret
	}).(IdNamespaceTypeOutput)
}

func (o IdNamespaceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceTypeInput is an input type that accepts values of the IdNamespaceType enum
// A concrete instance of `IdNamespaceTypeInput` can be one of the following:
//
//	IdNamespaceTypeSource
//	IdNamespaceTypeTarget
type IdNamespaceTypeInput interface {
	pulumi.Input

	ToIdNamespaceTypeOutput() IdNamespaceTypeOutput
	ToIdNamespaceTypeOutputWithContext(context.Context) IdNamespaceTypeOutput
}

var idNamespaceTypePtrType = reflect.TypeOf((**IdNamespaceType)(nil)).Elem()

type IdNamespaceTypePtrInput interface {
	pulumi.Input

	ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput
	ToIdNamespaceTypePtrOutputWithContext(context.Context) IdNamespaceTypePtrOutput
}

type idNamespaceTypePtr string

func IdNamespaceTypePtr(v string) IdNamespaceTypePtrInput {
	return (*idNamespaceTypePtr)(&v)
}

func (*idNamespaceTypePtr) ElementType() reflect.Type {
	return idNamespaceTypePtrType
}

func (in *idNamespaceTypePtr) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceTypePtrOutput)
}

func (in *idNamespaceTypePtr) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceTypePtrOutput)
}

type MatchingWorkflowResolutionTechniquesResolutionType string

const (
	MatchingWorkflowResolutionTechniquesResolutionTypeRuleMatching = MatchingWorkflowResolutionTechniquesResolutionType("RULE_MATCHING")
	MatchingWorkflowResolutionTechniquesResolutionTypeMlMatching   = MatchingWorkflowResolutionTechniquesResolutionType("ML_MATCHING")
	MatchingWorkflowResolutionTechniquesResolutionTypeProvider     = MatchingWorkflowResolutionTechniquesResolutionType("PROVIDER")
)

func (MatchingWorkflowResolutionTechniquesResolutionType) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowResolutionTechniquesResolutionType)(nil)).Elem()
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToMatchingWorkflowResolutionTechniquesResolutionTypeOutput() MatchingWorkflowResolutionTechniquesResolutionTypeOutput {
	return pulumi.ToOutput(e).(MatchingWorkflowResolutionTechniquesResolutionTypeOutput)
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToMatchingWorkflowResolutionTechniquesResolutionTypeOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTechniquesResolutionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingWorkflowResolutionTechniquesResolutionTypeOutput)
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutput() MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return e.ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return MatchingWorkflowResolutionTechniquesResolutionType(e).ToMatchingWorkflowResolutionTechniquesResolutionTypeOutputWithContext(ctx).ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(ctx)
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowResolutionTechniquesResolutionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingWorkflowResolutionTechniquesResolutionTypeOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowResolutionTechniquesResolutionType)(nil)).Elem()
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToMatchingWorkflowResolutionTechniquesResolutionTypeOutput() MatchingWorkflowResolutionTechniquesResolutionTypeOutput {
	return o
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToMatchingWorkflowResolutionTechniquesResolutionTypeOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTechniquesResolutionTypeOutput {
	return o
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutput() MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return o.ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingWorkflowResolutionTechniquesResolutionType) *MatchingWorkflowResolutionTechniquesResolutionType {
		return &v
	}).(MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput)
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowResolutionTechniquesResolutionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowResolutionTechniquesResolutionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflowResolutionTechniquesResolutionType)(nil)).Elem()
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutput() MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return o
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return o
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput) Elem() MatchingWorkflowResolutionTechniquesResolutionTypeOutput {
	return o.ApplyT(func(v *MatchingWorkflowResolutionTechniquesResolutionType) MatchingWorkflowResolutionTechniquesResolutionType {
		if v != nil {
			return *v
		}
		var ret MatchingWorkflowResolutionTechniquesResolutionType
		return ret
	}).(MatchingWorkflowResolutionTechniquesResolutionTypeOutput)
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingWorkflowResolutionTechniquesResolutionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingWorkflowResolutionTechniquesResolutionTypeInput is an input type that accepts values of the MatchingWorkflowResolutionTechniquesResolutionType enum
// A concrete instance of `MatchingWorkflowResolutionTechniquesResolutionTypeInput` can be one of the following:
//
//	MatchingWorkflowResolutionTechniquesResolutionTypeRuleMatching
//	MatchingWorkflowResolutionTechniquesResolutionTypeMlMatching
//	MatchingWorkflowResolutionTechniquesResolutionTypeProvider
type MatchingWorkflowResolutionTechniquesResolutionTypeInput interface {
	pulumi.Input

	ToMatchingWorkflowResolutionTechniquesResolutionTypeOutput() MatchingWorkflowResolutionTechniquesResolutionTypeOutput
	ToMatchingWorkflowResolutionTechniquesResolutionTypeOutputWithContext(context.Context) MatchingWorkflowResolutionTechniquesResolutionTypeOutput
}

var matchingWorkflowResolutionTechniquesResolutionTypePtrType = reflect.TypeOf((**MatchingWorkflowResolutionTechniquesResolutionType)(nil)).Elem()

type MatchingWorkflowResolutionTechniquesResolutionTypePtrInput interface {
	pulumi.Input

	ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutput() MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput
	ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(context.Context) MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput
}

type matchingWorkflowResolutionTechniquesResolutionTypePtr string

func MatchingWorkflowResolutionTechniquesResolutionTypePtr(v string) MatchingWorkflowResolutionTechniquesResolutionTypePtrInput {
	return (*matchingWorkflowResolutionTechniquesResolutionTypePtr)(&v)
}

func (*matchingWorkflowResolutionTechniquesResolutionTypePtr) ElementType() reflect.Type {
	return matchingWorkflowResolutionTechniquesResolutionTypePtrType
}

func (in *matchingWorkflowResolutionTechniquesResolutionTypePtr) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutput() MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return pulumi.ToOutput(in).(MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput)
}

func (in *matchingWorkflowResolutionTechniquesResolutionTypePtr) ToMatchingWorkflowResolutionTechniquesResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput)
}

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel string

const (
	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOneToOne   = MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE")
	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelManyToMany = MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("MANY_TO_MANY")
)

func (MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutput(e).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return e.ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel(e).ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx).ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) *MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel {
		return &v
	}).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) Elem() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return o.ApplyT(func(v *MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel {
		if v != nil {
			return *v
		}
		var ret MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel
		return ret
	}).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput is an input type that accepts values of the MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel enum
// A concrete instance of `MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput` can be one of the following:
//
//	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOneToOne
//	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelManyToMany
type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput interface {
	pulumi.Input

	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput
	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput
}

var matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrType = reflect.TypeOf((**MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrInput interface {
	pulumi.Input

	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput
	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput
}

type matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr string

func MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr(v string) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrInput {
	return (*matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr)(&v)
}

func (*matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr) ElementType() reflect.Type {
	return matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrType
}

func (in *matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutput(in).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (in *matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

type PolicyStatementStatementEffect string

const (
	PolicyStatementStatementEffectAllow = PolicyStatementStatementEffect("Allow")
	PolicyStatementStatementEffectDeny  = PolicyStatementStatementEffect("Deny")
)

func (PolicyStatementStatementEffect) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatementStatementEffect)(nil)).Elem()
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectOutput() PolicyStatementStatementEffectOutput {
	return pulumi.ToOutput(e).(PolicyStatementStatementEffectOutput)
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectOutputWithContext(ctx context.Context) PolicyStatementStatementEffectOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PolicyStatementStatementEffectOutput)
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return e.ToPolicyStatementStatementEffectPtrOutputWithContext(context.Background())
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return PolicyStatementStatementEffect(e).ToPolicyStatementStatementEffectOutputWithContext(ctx).ToPolicyStatementStatementEffectPtrOutputWithContext(ctx)
}

func (e PolicyStatementStatementEffect) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyStatementStatementEffect) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyStatementStatementEffect) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PolicyStatementStatementEffect) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PolicyStatementStatementEffectOutput struct{ *pulumi.OutputState }

func (PolicyStatementStatementEffectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatementStatementEffect)(nil)).Elem()
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectOutput() PolicyStatementStatementEffectOutput {
	return o
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectOutputWithContext(ctx context.Context) PolicyStatementStatementEffectOutput {
	return o
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return o.ToPolicyStatementStatementEffectPtrOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyStatementStatementEffect) *PolicyStatementStatementEffect {
		return &v
	}).(PolicyStatementStatementEffectPtrOutput)
}

func (o PolicyStatementStatementEffectOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyStatementStatementEffect) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PolicyStatementStatementEffectOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyStatementStatementEffect) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PolicyStatementStatementEffectPtrOutput struct{ *pulumi.OutputState }

func (PolicyStatementStatementEffectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStatementStatementEffect)(nil)).Elem()
}

func (o PolicyStatementStatementEffectPtrOutput) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return o
}

func (o PolicyStatementStatementEffectPtrOutput) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return o
}

func (o PolicyStatementStatementEffectPtrOutput) Elem() PolicyStatementStatementEffectOutput {
	return o.ApplyT(func(v *PolicyStatementStatementEffect) PolicyStatementStatementEffect {
		if v != nil {
			return *v
		}
		var ret PolicyStatementStatementEffect
		return ret
	}).(PolicyStatementStatementEffectOutput)
}

func (o PolicyStatementStatementEffectPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PolicyStatementStatementEffect) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PolicyStatementStatementEffectInput is an input type that accepts values of the PolicyStatementStatementEffect enum
// A concrete instance of `PolicyStatementStatementEffectInput` can be one of the following:
//
//	PolicyStatementStatementEffectAllow
//	PolicyStatementStatementEffectDeny
type PolicyStatementStatementEffectInput interface {
	pulumi.Input

	ToPolicyStatementStatementEffectOutput() PolicyStatementStatementEffectOutput
	ToPolicyStatementStatementEffectOutputWithContext(context.Context) PolicyStatementStatementEffectOutput
}

var policyStatementStatementEffectPtrType = reflect.TypeOf((**PolicyStatementStatementEffect)(nil)).Elem()

type PolicyStatementStatementEffectPtrInput interface {
	pulumi.Input

	ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput
	ToPolicyStatementStatementEffectPtrOutputWithContext(context.Context) PolicyStatementStatementEffectPtrOutput
}

type policyStatementStatementEffectPtr string

func PolicyStatementStatementEffectPtr(v string) PolicyStatementStatementEffectPtrInput {
	return (*policyStatementStatementEffectPtr)(&v)
}

func (*policyStatementStatementEffectPtr) ElementType() reflect.Type {
	return policyStatementStatementEffectPtrType
}

func (in *policyStatementStatementEffectPtr) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return pulumi.ToOutput(in).(PolicyStatementStatementEffectPtrOutput)
}

func (in *policyStatementStatementEffectPtr) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PolicyStatementStatementEffectPtrOutput)
}

type SchemaMappingSchemaAttributeType string

const (
	SchemaMappingSchemaAttributeTypeName              = SchemaMappingSchemaAttributeType("NAME")
	SchemaMappingSchemaAttributeTypeNameFirst         = SchemaMappingSchemaAttributeType("NAME_FIRST")
	SchemaMappingSchemaAttributeTypeNameMiddle        = SchemaMappingSchemaAttributeType("NAME_MIDDLE")
	SchemaMappingSchemaAttributeTypeNameLast          = SchemaMappingSchemaAttributeType("NAME_LAST")
	SchemaMappingSchemaAttributeTypeAddress           = SchemaMappingSchemaAttributeType("ADDRESS")
	SchemaMappingSchemaAttributeTypeAddressStreet1    = SchemaMappingSchemaAttributeType("ADDRESS_STREET1")
	SchemaMappingSchemaAttributeTypeAddressStreet2    = SchemaMappingSchemaAttributeType("ADDRESS_STREET2")
	SchemaMappingSchemaAttributeTypeAddressStreet3    = SchemaMappingSchemaAttributeType("ADDRESS_STREET3")
	SchemaMappingSchemaAttributeTypeAddressCity       = SchemaMappingSchemaAttributeType("ADDRESS_CITY")
	SchemaMappingSchemaAttributeTypeAddressState      = SchemaMappingSchemaAttributeType("ADDRESS_STATE")
	SchemaMappingSchemaAttributeTypeAddressCountry    = SchemaMappingSchemaAttributeType("ADDRESS_COUNTRY")
	SchemaMappingSchemaAttributeTypeAddressPostalcode = SchemaMappingSchemaAttributeType("ADDRESS_POSTALCODE")
	SchemaMappingSchemaAttributeTypePhone             = SchemaMappingSchemaAttributeType("PHONE")
	SchemaMappingSchemaAttributeTypePhoneNumber       = SchemaMappingSchemaAttributeType("PHONE_NUMBER")
	SchemaMappingSchemaAttributeTypePhoneCountrycode  = SchemaMappingSchemaAttributeType("PHONE_COUNTRYCODE")
	SchemaMappingSchemaAttributeTypeEmailAddress      = SchemaMappingSchemaAttributeType("EMAIL_ADDRESS")
	SchemaMappingSchemaAttributeTypeUniqueId          = SchemaMappingSchemaAttributeType("UNIQUE_ID")
	SchemaMappingSchemaAttributeTypeDate              = SchemaMappingSchemaAttributeType("DATE")
	SchemaMappingSchemaAttributeTypeString            = SchemaMappingSchemaAttributeType("STRING")
	SchemaMappingSchemaAttributeTypeProviderId        = SchemaMappingSchemaAttributeType("PROVIDER_ID")
)

func (SchemaMappingSchemaAttributeType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput {
	return pulumi.ToOutput(e).(SchemaMappingSchemaAttributeTypeOutput)
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaMappingSchemaAttributeTypeOutput)
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return e.ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Background())
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return SchemaMappingSchemaAttributeType(e).ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx).ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx)
}

func (e SchemaMappingSchemaAttributeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaMappingSchemaAttributeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaMappingSchemaAttributeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaMappingSchemaAttributeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaMappingSchemaAttributeTypeOutput struct{ *pulumi.OutputState }

func (SchemaMappingSchemaAttributeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypeOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return o.ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaMappingSchemaAttributeType) *SchemaMappingSchemaAttributeType {
		return &v
	}).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaMappingSchemaAttributeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaMappingSchemaAttributeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaMappingSchemaAttributeTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaMappingSchemaAttributeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) Elem() SchemaMappingSchemaAttributeTypeOutput {
	return o.ApplyT(func(v *SchemaMappingSchemaAttributeType) SchemaMappingSchemaAttributeType {
		if v != nil {
			return *v
		}
		var ret SchemaMappingSchemaAttributeType
		return ret
	}).(SchemaMappingSchemaAttributeTypeOutput)
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaMappingSchemaAttributeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaMappingSchemaAttributeTypeInput is an input type that accepts values of the SchemaMappingSchemaAttributeType enum
// A concrete instance of `SchemaMappingSchemaAttributeTypeInput` can be one of the following:
//
//	SchemaMappingSchemaAttributeTypeName
//	SchemaMappingSchemaAttributeTypeNameFirst
//	SchemaMappingSchemaAttributeTypeNameMiddle
//	SchemaMappingSchemaAttributeTypeNameLast
//	SchemaMappingSchemaAttributeTypeAddress
//	SchemaMappingSchemaAttributeTypeAddressStreet1
//	SchemaMappingSchemaAttributeTypeAddressStreet2
//	SchemaMappingSchemaAttributeTypeAddressStreet3
//	SchemaMappingSchemaAttributeTypeAddressCity
//	SchemaMappingSchemaAttributeTypeAddressState
//	SchemaMappingSchemaAttributeTypeAddressCountry
//	SchemaMappingSchemaAttributeTypeAddressPostalcode
//	SchemaMappingSchemaAttributeTypePhone
//	SchemaMappingSchemaAttributeTypePhoneNumber
//	SchemaMappingSchemaAttributeTypePhoneCountrycode
//	SchemaMappingSchemaAttributeTypeEmailAddress
//	SchemaMappingSchemaAttributeTypeUniqueId
//	SchemaMappingSchemaAttributeTypeDate
//	SchemaMappingSchemaAttributeTypeString
//	SchemaMappingSchemaAttributeTypeProviderId
type SchemaMappingSchemaAttributeTypeInput interface {
	pulumi.Input

	ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput
	ToSchemaMappingSchemaAttributeTypeOutputWithContext(context.Context) SchemaMappingSchemaAttributeTypeOutput
}

var schemaMappingSchemaAttributeTypePtrType = reflect.TypeOf((**SchemaMappingSchemaAttributeType)(nil)).Elem()

type SchemaMappingSchemaAttributeTypePtrInput interface {
	pulumi.Input

	ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput
	ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Context) SchemaMappingSchemaAttributeTypePtrOutput
}

type schemaMappingSchemaAttributeTypePtr string

func SchemaMappingSchemaAttributeTypePtr(v string) SchemaMappingSchemaAttributeTypePtrInput {
	return (*schemaMappingSchemaAttributeTypePtr)(&v)
}

func (*schemaMappingSchemaAttributeTypePtr) ElementType() reflect.Type {
	return schemaMappingSchemaAttributeTypePtrType
}

func (in *schemaMappingSchemaAttributeTypePtr) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func (in *schemaMappingSchemaAttributeTypePtr) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput)(nil)).Elem(), IdMappingWorkflowIdMappingTechniquesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrInput)(nil)).Elem(), IdMappingWorkflowIdMappingTechniquesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowInputSourceTypeInput)(nil)).Elem(), IdMappingWorkflowInputSourceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowInputSourceTypePtrInput)(nil)).Elem(), IdMappingWorkflowInputSourceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput)(nil)).Elem(), IdNamespaceIdMappingWorkflowPropertiesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrInput)(nil)).Elem(), IdNamespaceIdMappingWorkflowPropertiesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceTypeInput)(nil)).Elem(), IdNamespaceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceTypePtrInput)(nil)).Elem(), IdNamespaceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowResolutionTechniquesResolutionTypeInput)(nil)).Elem(), MatchingWorkflowResolutionTechniquesResolutionType("RULE_MATCHING"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowResolutionTechniquesResolutionTypePtrInput)(nil)).Elem(), MatchingWorkflowResolutionTechniquesResolutionType("RULE_MATCHING"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput)(nil)).Elem(), MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrInput)(nil)).Elem(), MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStatementStatementEffectInput)(nil)).Elem(), PolicyStatementStatementEffect("Allow"))
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStatementStatementEffectPtrInput)(nil)).Elem(), PolicyStatementStatementEffect("Allow"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMappingSchemaAttributeTypeInput)(nil)).Elem(), SchemaMappingSchemaAttributeType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMappingSchemaAttributeTypePtrInput)(nil)).Elem(), SchemaMappingSchemaAttributeType("NAME"))
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowInputSourceTypeOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowInputSourceTypePtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput{})
	pulumi.RegisterOutputType(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceTypeOutput{})
	pulumi.RegisterOutputType(IdNamespaceTypePtrOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowResolutionTechniquesResolutionTypeOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowResolutionTechniquesResolutionTypePtrOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput{})
	pulumi.RegisterOutputType(PolicyStatementStatementEffectOutput{})
	pulumi.RegisterOutputType(PolicyStatementStatementEffectPtrOutput{})
	pulumi.RegisterOutputType(SchemaMappingSchemaAttributeTypeOutput{})
	pulumi.RegisterOutputType(SchemaMappingSchemaAttributeTypePtrOutput{})
}
