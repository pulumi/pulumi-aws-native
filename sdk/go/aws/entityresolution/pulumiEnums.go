// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package entityresolution

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
//
// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A matches the value of the `BusinessEmail` field of Profile B, the two profiles are matched on the `Email` attribute type.
//
// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
type IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel string

const (
	IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOneToOne   = IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE")
	IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelManyToMany = IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel("MANY_TO_MANY")
)

func (IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return e.ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel(e).ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx).ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) *IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel {
		return &v
	}).(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput) Elem() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput {
	return o.ApplyT(func(v *IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel
		return ret
	}).(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelInput is an input type that accepts values of the IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel enum
// A concrete instance of `IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelInput` can be one of the following:
//
//	IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOneToOne
//	IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelManyToMany
type IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput
	ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutputWithContext(context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput
}

var idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrType = reflect.TypeOf((**IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()

type IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput
	ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput
}

type idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtr string

func IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtr(v string) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrInput {
	return (*idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtr)(&v)
}

func (*idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtr) ElementType() reflect.Type {
	return idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrType
}

func (in *idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtr) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (in *idMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtr) ToIdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

// The type of matching record that is allowed to be used in an ID mapping workflow.
//
// If the value is set to `ONE_SOURCE_TO_ONE_TARGET` , only one record in the source can be matched to the same record in the target.
//
// If the value is set to `MANY_SOURCE_TO_ONE_TARGET` , multiple records in the source can be matched to one record in the target.
type IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel string

const (
	IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOneSourceToOneTarget  = IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel("ONE_SOURCE_TO_ONE_TARGET")
	IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelManySourceToOneTarget = IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel("MANY_SOURCE_TO_ONE_TARGET")
)

func (IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel)(nil)).Elem()
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return e.ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel(e).ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutputWithContext(ctx).ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return o.ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) *IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel {
		return &v
	}).(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput) Elem() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput {
	return o.ApplyT(func(v *IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel
		return ret
	}).(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelInput is an input type that accepts values of the IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel enum
// A concrete instance of `IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelInput` can be one of the following:
//
//	IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOneSourceToOneTarget
//	IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelManySourceToOneTarget
type IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput
	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutputWithContext(context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput
}

var idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrType = reflect.TypeOf((**IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel)(nil)).Elem()

type IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput
	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput
}

type idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtr string

func IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtr(v string) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrInput {
	return (*idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtr)(&v)
}

func (*idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtr) ElementType() reflect.Type {
	return idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrType
}

func (in *idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtr) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput)
}

func (in *idMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtr) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput)
}

// The set of rules you can use in an ID mapping workflow. The limitations specified for the source or target to define the match rules must be compatible.
type IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType string

const (
	IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeSource = IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType("SOURCE")
	IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeTarget = IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType("TARGET")
)

func (IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType)(nil)).Elem()
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return e.ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType(e).ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutputWithContext(ctx).ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return o.ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) *IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType {
		return &v
	}).(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput) Elem() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput {
	return o.ApplyT(func(v *IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType
		return ret
	}).(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput)
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeInput is an input type that accepts values of the IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType enum
// A concrete instance of `IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeInput` can be one of the following:
//
//	IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeSource
//	IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeTarget
type IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput
	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutputWithContext(context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput
}

var idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrType = reflect.TypeOf((**IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType)(nil)).Elem()

type IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput
	ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput
}

type idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtr string

func IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtr(v string) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrInput {
	return (*idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtr)(&v)
}

func (*idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtr) ElementType() reflect.Type {
	return idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrType
}

func (in *idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtr) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput() IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput)
}

func (in *idMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtr) ToIdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput)
}

// The type of ID mapping.
type IdMappingWorkflowIdMappingTechniquesIdMappingType string

const (
	IdMappingWorkflowIdMappingTechniquesIdMappingTypeProvider  = IdMappingWorkflowIdMappingTechniquesIdMappingType("PROVIDER")
	IdMappingWorkflowIdMappingTechniquesIdMappingTypeRuleBased = IdMappingWorkflowIdMappingTechniquesIdMappingType("RULE_BASED")
)

func (IdMappingWorkflowIdMappingTechniquesIdMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return e.ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return IdMappingWorkflowIdMappingTechniquesIdMappingType(e).ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(ctx).ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowIdMappingTechniquesIdMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o.ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowIdMappingTechniquesIdMappingType) *IdMappingWorkflowIdMappingTechniquesIdMappingType {
		return &v
	}).(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput)
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingTechniquesIdMappingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowIdMappingTechniquesIdMappingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return o
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) Elem() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput {
	return o.ApplyT(func(v *IdMappingWorkflowIdMappingTechniquesIdMappingType) IdMappingWorkflowIdMappingTechniquesIdMappingType {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowIdMappingTechniquesIdMappingType
		return ret
	}).(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput)
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowIdMappingTechniquesIdMappingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput is an input type that accepts values of the IdMappingWorkflowIdMappingTechniquesIdMappingType enum
// A concrete instance of `IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput` can be one of the following:
//
//	IdMappingWorkflowIdMappingTechniquesIdMappingTypeProvider
//	IdMappingWorkflowIdMappingTechniquesIdMappingTypeRuleBased
type IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput
	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypeOutputWithContext(context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput
}

var idMappingWorkflowIdMappingTechniquesIdMappingTypePtrType = reflect.TypeOf((**IdMappingWorkflowIdMappingTechniquesIdMappingType)(nil)).Elem()

type IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput
	ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput
}

type idMappingWorkflowIdMappingTechniquesIdMappingTypePtr string

func IdMappingWorkflowIdMappingTechniquesIdMappingTypePtr(v string) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrInput {
	return (*idMappingWorkflowIdMappingTechniquesIdMappingTypePtr)(&v)
}

func (*idMappingWorkflowIdMappingTechniquesIdMappingTypePtr) ElementType() reflect.Type {
	return idMappingWorkflowIdMappingTechniquesIdMappingTypePtrType
}

func (in *idMappingWorkflowIdMappingTechniquesIdMappingTypePtr) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput() IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput)
}

func (in *idMappingWorkflowIdMappingTechniquesIdMappingTypePtr) ToIdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput)
}

// The type of ID namespace. There are two types: `SOURCE` and `TARGET` .
//
// The `SOURCE` contains configurations for `sourceId` data that will be processed in an ID mapping workflow.
//
// The `TARGET` contains a configuration of `targetId` which all `sourceIds` will resolve to.
type IdMappingWorkflowInputSourceType string

const (
	IdMappingWorkflowInputSourceTypeSource = IdMappingWorkflowInputSourceType("SOURCE")
	IdMappingWorkflowInputSourceTypeTarget = IdMappingWorkflowInputSourceType("TARGET")
)

func (IdMappingWorkflowInputSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowInputSourceType)(nil)).Elem()
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypeOutput() IdMappingWorkflowInputSourceTypeOutput {
	return pulumi.ToOutput(e).(IdMappingWorkflowInputSourceTypeOutput)
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypeOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdMappingWorkflowInputSourceTypeOutput)
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return e.ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowInputSourceType) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return IdMappingWorkflowInputSourceType(e).ToIdMappingWorkflowInputSourceTypeOutputWithContext(ctx).ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx)
}

func (e IdMappingWorkflowInputSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowInputSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdMappingWorkflowInputSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdMappingWorkflowInputSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdMappingWorkflowInputSourceTypeOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowInputSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdMappingWorkflowInputSourceType)(nil)).Elem()
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypeOutput() IdMappingWorkflowInputSourceTypeOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypeOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypeOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return o.ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdMappingWorkflowInputSourceType) *IdMappingWorkflowInputSourceType {
		return &v
	}).(IdMappingWorkflowInputSourceTypePtrOutput)
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowInputSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdMappingWorkflowInputSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdMappingWorkflowInputSourceTypePtrOutput struct{ *pulumi.OutputState }

func (IdMappingWorkflowInputSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdMappingWorkflowInputSourceType)(nil)).Elem()
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return o
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) Elem() IdMappingWorkflowInputSourceTypeOutput {
	return o.ApplyT(func(v *IdMappingWorkflowInputSourceType) IdMappingWorkflowInputSourceType {
		if v != nil {
			return *v
		}
		var ret IdMappingWorkflowInputSourceType
		return ret
	}).(IdMappingWorkflowInputSourceTypeOutput)
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdMappingWorkflowInputSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdMappingWorkflowInputSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdMappingWorkflowInputSourceTypeInput is an input type that accepts values of the IdMappingWorkflowInputSourceType enum
// A concrete instance of `IdMappingWorkflowInputSourceTypeInput` can be one of the following:
//
//	IdMappingWorkflowInputSourceTypeSource
//	IdMappingWorkflowInputSourceTypeTarget
type IdMappingWorkflowInputSourceTypeInput interface {
	pulumi.Input

	ToIdMappingWorkflowInputSourceTypeOutput() IdMappingWorkflowInputSourceTypeOutput
	ToIdMappingWorkflowInputSourceTypeOutputWithContext(context.Context) IdMappingWorkflowInputSourceTypeOutput
}

var idMappingWorkflowInputSourceTypePtrType = reflect.TypeOf((**IdMappingWorkflowInputSourceType)(nil)).Elem()

type IdMappingWorkflowInputSourceTypePtrInput interface {
	pulumi.Input

	ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput
	ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(context.Context) IdMappingWorkflowInputSourceTypePtrOutput
}

type idMappingWorkflowInputSourceTypePtr string

func IdMappingWorkflowInputSourceTypePtr(v string) IdMappingWorkflowInputSourceTypePtrInput {
	return (*idMappingWorkflowInputSourceTypePtr)(&v)
}

func (*idMappingWorkflowInputSourceTypePtr) ElementType() reflect.Type {
	return idMappingWorkflowInputSourceTypePtrType
}

func (in *idMappingWorkflowInputSourceTypePtr) ToIdMappingWorkflowInputSourceTypePtrOutput() IdMappingWorkflowInputSourceTypePtrOutput {
	return pulumi.ToOutput(in).(IdMappingWorkflowInputSourceTypePtrOutput)
}

func (in *idMappingWorkflowInputSourceTypePtr) ToIdMappingWorkflowInputSourceTypePtrOutputWithContext(ctx context.Context) IdMappingWorkflowInputSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdMappingWorkflowInputSourceTypePtrOutput)
}

// The type of ID mapping.
type IdNamespaceIdMappingWorkflowPropertiesIdMappingType string

const (
	IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeProvider  = IdNamespaceIdMappingWorkflowPropertiesIdMappingType("PROVIDER")
	IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeRuleBased = IdNamespaceIdMappingWorkflowPropertiesIdMappingType("RULE_BASED")
)

func (IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return pulumi.ToOutput(e).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return e.ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(context.Background())
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return IdNamespaceIdMappingWorkflowPropertiesIdMappingType(e).ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(ctx).ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput struct{ *pulumi.OutputState }

func (IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o.ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceIdMappingWorkflowPropertiesIdMappingType) *IdNamespaceIdMappingWorkflowPropertiesIdMappingType {
		return &v
	}).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput)
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceIdMappingWorkflowPropertiesIdMappingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return o
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) Elem() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput {
	return o.ApplyT(func(v *IdNamespaceIdMappingWorkflowPropertiesIdMappingType) IdNamespaceIdMappingWorkflowPropertiesIdMappingType {
		if v != nil {
			return *v
		}
		var ret IdNamespaceIdMappingWorkflowPropertiesIdMappingType
		return ret
	}).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput)
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceIdMappingWorkflowPropertiesIdMappingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput is an input type that accepts values of the IdNamespaceIdMappingWorkflowPropertiesIdMappingType enum
// A concrete instance of `IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput` can be one of the following:
//
//	IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeProvider
//	IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeRuleBased
type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput interface {
	pulumi.Input

	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput
	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutputWithContext(context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput
}

var idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrType = reflect.TypeOf((**IdNamespaceIdMappingWorkflowPropertiesIdMappingType)(nil)).Elem()

type IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrInput interface {
	pulumi.Input

	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput
	ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput
}

type idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr string

func IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr(v string) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrInput {
	return (*idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr)(&v)
}

func (*idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr) ElementType() reflect.Type {
	return idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrType
}

func (in *idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput() IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput)
}

func (in *idNamespaceIdMappingWorkflowPropertiesIdMappingTypePtr) ToIdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutputWithContext(ctx context.Context) IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput)
}

// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
//
// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A matches the value of `BusinessEmail` field of Profile B, the two profiles are matched on the `Email` attribute type.
//
// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
type IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel string

const (
	IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOneToOne   = IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE")
	IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelManyToMany = IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel("MANY_TO_MANY")
)

func (IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutput(e).(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return e.ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel(e).ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx).ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx)
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput struct{ *pulumi.OutputState }

func (IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) *IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel {
		return &v
	}).(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput) Elem() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput {
	return o.ApplyT(func(v *IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel {
		if v != nil {
			return *v
		}
		var ret IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel
		return ret
	}).(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelInput is an input type that accepts values of the IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel enum
// A concrete instance of `IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelInput` can be one of the following:
//
//	IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOneToOne
//	IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelManyToMany
type IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelInput interface {
	pulumi.Input

	ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput
	ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutputWithContext(context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput
}

var idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrType = reflect.TypeOf((**IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()

type IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrInput interface {
	pulumi.Input

	ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput
	ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput
}

type idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtr string

func IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtr(v string) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrInput {
	return (*idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtr)(&v)
}

func (*idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtr) ElementType() reflect.Type {
	return idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrType
}

func (in *idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtr) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput() IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (in *idNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtr) ToIdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

type IdNamespaceRecordMatchingModel string

const (
	IdNamespaceRecordMatchingModelOneSourceToOneTarget  = IdNamespaceRecordMatchingModel("ONE_SOURCE_TO_ONE_TARGET")
	IdNamespaceRecordMatchingModelManySourceToOneTarget = IdNamespaceRecordMatchingModel("MANY_SOURCE_TO_ONE_TARGET")
)

func (IdNamespaceRecordMatchingModel) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceRecordMatchingModel)(nil)).Elem()
}

func (e IdNamespaceRecordMatchingModel) ToIdNamespaceRecordMatchingModelOutput() IdNamespaceRecordMatchingModelOutput {
	return pulumi.ToOutput(e).(IdNamespaceRecordMatchingModelOutput)
}

func (e IdNamespaceRecordMatchingModel) ToIdNamespaceRecordMatchingModelOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceRecordMatchingModelOutput)
}

func (e IdNamespaceRecordMatchingModel) ToIdNamespaceRecordMatchingModelPtrOutput() IdNamespaceRecordMatchingModelPtrOutput {
	return e.ToIdNamespaceRecordMatchingModelPtrOutputWithContext(context.Background())
}

func (e IdNamespaceRecordMatchingModel) ToIdNamespaceRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelPtrOutput {
	return IdNamespaceRecordMatchingModel(e).ToIdNamespaceRecordMatchingModelOutputWithContext(ctx).ToIdNamespaceRecordMatchingModelPtrOutputWithContext(ctx)
}

func (e IdNamespaceRecordMatchingModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceRecordMatchingModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceRecordMatchingModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceRecordMatchingModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceRecordMatchingModelOutput struct{ *pulumi.OutputState }

func (IdNamespaceRecordMatchingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceRecordMatchingModel)(nil)).Elem()
}

func (o IdNamespaceRecordMatchingModelOutput) ToIdNamespaceRecordMatchingModelOutput() IdNamespaceRecordMatchingModelOutput {
	return o
}

func (o IdNamespaceRecordMatchingModelOutput) ToIdNamespaceRecordMatchingModelOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelOutput {
	return o
}

func (o IdNamespaceRecordMatchingModelOutput) ToIdNamespaceRecordMatchingModelPtrOutput() IdNamespaceRecordMatchingModelPtrOutput {
	return o.ToIdNamespaceRecordMatchingModelPtrOutputWithContext(context.Background())
}

func (o IdNamespaceRecordMatchingModelOutput) ToIdNamespaceRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceRecordMatchingModel) *IdNamespaceRecordMatchingModel {
		return &v
	}).(IdNamespaceRecordMatchingModelPtrOutput)
}

func (o IdNamespaceRecordMatchingModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceRecordMatchingModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceRecordMatchingModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceRecordMatchingModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceRecordMatchingModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceRecordMatchingModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceRecordMatchingModelPtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceRecordMatchingModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceRecordMatchingModel)(nil)).Elem()
}

func (o IdNamespaceRecordMatchingModelPtrOutput) ToIdNamespaceRecordMatchingModelPtrOutput() IdNamespaceRecordMatchingModelPtrOutput {
	return o
}

func (o IdNamespaceRecordMatchingModelPtrOutput) ToIdNamespaceRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelPtrOutput {
	return o
}

func (o IdNamespaceRecordMatchingModelPtrOutput) Elem() IdNamespaceRecordMatchingModelOutput {
	return o.ApplyT(func(v *IdNamespaceRecordMatchingModel) IdNamespaceRecordMatchingModel {
		if v != nil {
			return *v
		}
		var ret IdNamespaceRecordMatchingModel
		return ret
	}).(IdNamespaceRecordMatchingModelOutput)
}

func (o IdNamespaceRecordMatchingModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceRecordMatchingModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceRecordMatchingModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceRecordMatchingModelInput is an input type that accepts values of the IdNamespaceRecordMatchingModel enum
// A concrete instance of `IdNamespaceRecordMatchingModelInput` can be one of the following:
//
//	IdNamespaceRecordMatchingModelOneSourceToOneTarget
//	IdNamespaceRecordMatchingModelManySourceToOneTarget
type IdNamespaceRecordMatchingModelInput interface {
	pulumi.Input

	ToIdNamespaceRecordMatchingModelOutput() IdNamespaceRecordMatchingModelOutput
	ToIdNamespaceRecordMatchingModelOutputWithContext(context.Context) IdNamespaceRecordMatchingModelOutput
}

var idNamespaceRecordMatchingModelPtrType = reflect.TypeOf((**IdNamespaceRecordMatchingModel)(nil)).Elem()

type IdNamespaceRecordMatchingModelPtrInput interface {
	pulumi.Input

	ToIdNamespaceRecordMatchingModelPtrOutput() IdNamespaceRecordMatchingModelPtrOutput
	ToIdNamespaceRecordMatchingModelPtrOutputWithContext(context.Context) IdNamespaceRecordMatchingModelPtrOutput
}

type idNamespaceRecordMatchingModelPtr string

func IdNamespaceRecordMatchingModelPtr(v string) IdNamespaceRecordMatchingModelPtrInput {
	return (*idNamespaceRecordMatchingModelPtr)(&v)
}

func (*idNamespaceRecordMatchingModelPtr) ElementType() reflect.Type {
	return idNamespaceRecordMatchingModelPtrType
}

func (in *idNamespaceRecordMatchingModelPtr) ToIdNamespaceRecordMatchingModelPtrOutput() IdNamespaceRecordMatchingModelPtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceRecordMatchingModelPtrOutput)
}

func (in *idNamespaceRecordMatchingModelPtr) ToIdNamespaceRecordMatchingModelPtrOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceRecordMatchingModelPtrOutput)
}

// IdNamespaceRecordMatchingModelArrayInput is an input type that accepts IdNamespaceRecordMatchingModelArray and IdNamespaceRecordMatchingModelArrayOutput values.
// You can construct a concrete instance of `IdNamespaceRecordMatchingModelArrayInput` via:
//
//	IdNamespaceRecordMatchingModelArray{ IdNamespaceRecordMatchingModelArgs{...} }
type IdNamespaceRecordMatchingModelArrayInput interface {
	pulumi.Input

	ToIdNamespaceRecordMatchingModelArrayOutput() IdNamespaceRecordMatchingModelArrayOutput
	ToIdNamespaceRecordMatchingModelArrayOutputWithContext(context.Context) IdNamespaceRecordMatchingModelArrayOutput
}

type IdNamespaceRecordMatchingModelArray []IdNamespaceRecordMatchingModel

func (IdNamespaceRecordMatchingModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdNamespaceRecordMatchingModel)(nil)).Elem()
}

func (i IdNamespaceRecordMatchingModelArray) ToIdNamespaceRecordMatchingModelArrayOutput() IdNamespaceRecordMatchingModelArrayOutput {
	return i.ToIdNamespaceRecordMatchingModelArrayOutputWithContext(context.Background())
}

func (i IdNamespaceRecordMatchingModelArray) ToIdNamespaceRecordMatchingModelArrayOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdNamespaceRecordMatchingModelArrayOutput)
}

type IdNamespaceRecordMatchingModelArrayOutput struct{ *pulumi.OutputState }

func (IdNamespaceRecordMatchingModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdNamespaceRecordMatchingModel)(nil)).Elem()
}

func (o IdNamespaceRecordMatchingModelArrayOutput) ToIdNamespaceRecordMatchingModelArrayOutput() IdNamespaceRecordMatchingModelArrayOutput {
	return o
}

func (o IdNamespaceRecordMatchingModelArrayOutput) ToIdNamespaceRecordMatchingModelArrayOutputWithContext(ctx context.Context) IdNamespaceRecordMatchingModelArrayOutput {
	return o
}

func (o IdNamespaceRecordMatchingModelArrayOutput) Index(i pulumi.IntInput) IdNamespaceRecordMatchingModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdNamespaceRecordMatchingModel {
		return vs[0].([]IdNamespaceRecordMatchingModel)[vs[1].(int)]
	}).(IdNamespaceRecordMatchingModelOutput)
}

type IdNamespaceRuleDefinitionType string

const (
	IdNamespaceRuleDefinitionTypeSource = IdNamespaceRuleDefinitionType("SOURCE")
	IdNamespaceRuleDefinitionTypeTarget = IdNamespaceRuleDefinitionType("TARGET")
)

func (IdNamespaceRuleDefinitionType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceRuleDefinitionType)(nil)).Elem()
}

func (e IdNamespaceRuleDefinitionType) ToIdNamespaceRuleDefinitionTypeOutput() IdNamespaceRuleDefinitionTypeOutput {
	return pulumi.ToOutput(e).(IdNamespaceRuleDefinitionTypeOutput)
}

func (e IdNamespaceRuleDefinitionType) ToIdNamespaceRuleDefinitionTypeOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceRuleDefinitionTypeOutput)
}

func (e IdNamespaceRuleDefinitionType) ToIdNamespaceRuleDefinitionTypePtrOutput() IdNamespaceRuleDefinitionTypePtrOutput {
	return e.ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(context.Background())
}

func (e IdNamespaceRuleDefinitionType) ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypePtrOutput {
	return IdNamespaceRuleDefinitionType(e).ToIdNamespaceRuleDefinitionTypeOutputWithContext(ctx).ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(ctx)
}

func (e IdNamespaceRuleDefinitionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceRuleDefinitionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceRuleDefinitionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceRuleDefinitionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceRuleDefinitionTypeOutput struct{ *pulumi.OutputState }

func (IdNamespaceRuleDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceRuleDefinitionType)(nil)).Elem()
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToIdNamespaceRuleDefinitionTypeOutput() IdNamespaceRuleDefinitionTypeOutput {
	return o
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToIdNamespaceRuleDefinitionTypeOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypeOutput {
	return o
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToIdNamespaceRuleDefinitionTypePtrOutput() IdNamespaceRuleDefinitionTypePtrOutput {
	return o.ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(context.Background())
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceRuleDefinitionType) *IdNamespaceRuleDefinitionType {
		return &v
	}).(IdNamespaceRuleDefinitionTypePtrOutput)
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceRuleDefinitionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceRuleDefinitionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceRuleDefinitionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceRuleDefinitionTypePtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceRuleDefinitionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceRuleDefinitionType)(nil)).Elem()
}

func (o IdNamespaceRuleDefinitionTypePtrOutput) ToIdNamespaceRuleDefinitionTypePtrOutput() IdNamespaceRuleDefinitionTypePtrOutput {
	return o
}

func (o IdNamespaceRuleDefinitionTypePtrOutput) ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypePtrOutput {
	return o
}

func (o IdNamespaceRuleDefinitionTypePtrOutput) Elem() IdNamespaceRuleDefinitionTypeOutput {
	return o.ApplyT(func(v *IdNamespaceRuleDefinitionType) IdNamespaceRuleDefinitionType {
		if v != nil {
			return *v
		}
		var ret IdNamespaceRuleDefinitionType
		return ret
	}).(IdNamespaceRuleDefinitionTypeOutput)
}

func (o IdNamespaceRuleDefinitionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceRuleDefinitionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceRuleDefinitionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceRuleDefinitionTypeInput is an input type that accepts values of the IdNamespaceRuleDefinitionType enum
// A concrete instance of `IdNamespaceRuleDefinitionTypeInput` can be one of the following:
//
//	IdNamespaceRuleDefinitionTypeSource
//	IdNamespaceRuleDefinitionTypeTarget
type IdNamespaceRuleDefinitionTypeInput interface {
	pulumi.Input

	ToIdNamespaceRuleDefinitionTypeOutput() IdNamespaceRuleDefinitionTypeOutput
	ToIdNamespaceRuleDefinitionTypeOutputWithContext(context.Context) IdNamespaceRuleDefinitionTypeOutput
}

var idNamespaceRuleDefinitionTypePtrType = reflect.TypeOf((**IdNamespaceRuleDefinitionType)(nil)).Elem()

type IdNamespaceRuleDefinitionTypePtrInput interface {
	pulumi.Input

	ToIdNamespaceRuleDefinitionTypePtrOutput() IdNamespaceRuleDefinitionTypePtrOutput
	ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(context.Context) IdNamespaceRuleDefinitionTypePtrOutput
}

type idNamespaceRuleDefinitionTypePtr string

func IdNamespaceRuleDefinitionTypePtr(v string) IdNamespaceRuleDefinitionTypePtrInput {
	return (*idNamespaceRuleDefinitionTypePtr)(&v)
}

func (*idNamespaceRuleDefinitionTypePtr) ElementType() reflect.Type {
	return idNamespaceRuleDefinitionTypePtrType
}

func (in *idNamespaceRuleDefinitionTypePtr) ToIdNamespaceRuleDefinitionTypePtrOutput() IdNamespaceRuleDefinitionTypePtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceRuleDefinitionTypePtrOutput)
}

func (in *idNamespaceRuleDefinitionTypePtr) ToIdNamespaceRuleDefinitionTypePtrOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceRuleDefinitionTypePtrOutput)
}

// IdNamespaceRuleDefinitionTypeArrayInput is an input type that accepts IdNamespaceRuleDefinitionTypeArray and IdNamespaceRuleDefinitionTypeArrayOutput values.
// You can construct a concrete instance of `IdNamespaceRuleDefinitionTypeArrayInput` via:
//
//	IdNamespaceRuleDefinitionTypeArray{ IdNamespaceRuleDefinitionTypeArgs{...} }
type IdNamespaceRuleDefinitionTypeArrayInput interface {
	pulumi.Input

	ToIdNamespaceRuleDefinitionTypeArrayOutput() IdNamespaceRuleDefinitionTypeArrayOutput
	ToIdNamespaceRuleDefinitionTypeArrayOutputWithContext(context.Context) IdNamespaceRuleDefinitionTypeArrayOutput
}

type IdNamespaceRuleDefinitionTypeArray []IdNamespaceRuleDefinitionType

func (IdNamespaceRuleDefinitionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdNamespaceRuleDefinitionType)(nil)).Elem()
}

func (i IdNamespaceRuleDefinitionTypeArray) ToIdNamespaceRuleDefinitionTypeArrayOutput() IdNamespaceRuleDefinitionTypeArrayOutput {
	return i.ToIdNamespaceRuleDefinitionTypeArrayOutputWithContext(context.Background())
}

func (i IdNamespaceRuleDefinitionTypeArray) ToIdNamespaceRuleDefinitionTypeArrayOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdNamespaceRuleDefinitionTypeArrayOutput)
}

type IdNamespaceRuleDefinitionTypeArrayOutput struct{ *pulumi.OutputState }

func (IdNamespaceRuleDefinitionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdNamespaceRuleDefinitionType)(nil)).Elem()
}

func (o IdNamespaceRuleDefinitionTypeArrayOutput) ToIdNamespaceRuleDefinitionTypeArrayOutput() IdNamespaceRuleDefinitionTypeArrayOutput {
	return o
}

func (o IdNamespaceRuleDefinitionTypeArrayOutput) ToIdNamespaceRuleDefinitionTypeArrayOutputWithContext(ctx context.Context) IdNamespaceRuleDefinitionTypeArrayOutput {
	return o
}

func (o IdNamespaceRuleDefinitionTypeArrayOutput) Index(i pulumi.IntInput) IdNamespaceRuleDefinitionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdNamespaceRuleDefinitionType {
		return vs[0].([]IdNamespaceRuleDefinitionType)[vs[1].(int)]
	}).(IdNamespaceRuleDefinitionTypeOutput)
}

// The type of ID namespace. There are two types: `SOURCE` and `TARGET` .
//
// The `SOURCE` contains configurations for `sourceId` data that will be processed in an ID mapping workflow.
//
// The `TARGET` contains a configuration of `targetId` which all `sourceIds` will resolve to.
type IdNamespaceType string

const (
	IdNamespaceTypeSource = IdNamespaceType("SOURCE")
	IdNamespaceTypeTarget = IdNamespaceType("TARGET")
)

func (IdNamespaceType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceType)(nil)).Elem()
}

func (e IdNamespaceType) ToIdNamespaceTypeOutput() IdNamespaceTypeOutput {
	return pulumi.ToOutput(e).(IdNamespaceTypeOutput)
}

func (e IdNamespaceType) ToIdNamespaceTypeOutputWithContext(ctx context.Context) IdNamespaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdNamespaceTypeOutput)
}

func (e IdNamespaceType) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return e.ToIdNamespaceTypePtrOutputWithContext(context.Background())
}

func (e IdNamespaceType) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return IdNamespaceType(e).ToIdNamespaceTypeOutputWithContext(ctx).ToIdNamespaceTypePtrOutputWithContext(ctx)
}

func (e IdNamespaceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdNamespaceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdNamespaceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdNamespaceTypeOutput struct{ *pulumi.OutputState }

func (IdNamespaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdNamespaceType)(nil)).Elem()
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypeOutput() IdNamespaceTypeOutput {
	return o
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypeOutputWithContext(ctx context.Context) IdNamespaceTypeOutput {
	return o
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return o.ToIdNamespaceTypePtrOutputWithContext(context.Background())
}

func (o IdNamespaceTypeOutput) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdNamespaceType) *IdNamespaceType {
		return &v
	}).(IdNamespaceTypePtrOutput)
}

func (o IdNamespaceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdNamespaceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdNamespaceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdNamespaceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdNamespaceTypePtrOutput struct{ *pulumi.OutputState }

func (IdNamespaceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdNamespaceType)(nil)).Elem()
}

func (o IdNamespaceTypePtrOutput) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return o
}

func (o IdNamespaceTypePtrOutput) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return o
}

func (o IdNamespaceTypePtrOutput) Elem() IdNamespaceTypeOutput {
	return o.ApplyT(func(v *IdNamespaceType) IdNamespaceType {
		if v != nil {
			return *v
		}
		var ret IdNamespaceType
		return ret
	}).(IdNamespaceTypeOutput)
}

func (o IdNamespaceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdNamespaceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdNamespaceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdNamespaceTypeInput is an input type that accepts values of the IdNamespaceType enum
// A concrete instance of `IdNamespaceTypeInput` can be one of the following:
//
//	IdNamespaceTypeSource
//	IdNamespaceTypeTarget
type IdNamespaceTypeInput interface {
	pulumi.Input

	ToIdNamespaceTypeOutput() IdNamespaceTypeOutput
	ToIdNamespaceTypeOutputWithContext(context.Context) IdNamespaceTypeOutput
}

var idNamespaceTypePtrType = reflect.TypeOf((**IdNamespaceType)(nil)).Elem()

type IdNamespaceTypePtrInput interface {
	pulumi.Input

	ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput
	ToIdNamespaceTypePtrOutputWithContext(context.Context) IdNamespaceTypePtrOutput
}

type idNamespaceTypePtr string

func IdNamespaceTypePtr(v string) IdNamespaceTypePtrInput {
	return (*idNamespaceTypePtr)(&v)
}

func (*idNamespaceTypePtr) ElementType() reflect.Type {
	return idNamespaceTypePtrType
}

func (in *idNamespaceTypePtr) ToIdNamespaceTypePtrOutput() IdNamespaceTypePtrOutput {
	return pulumi.ToOutput(in).(IdNamespaceTypePtrOutput)
}

func (in *idNamespaceTypePtr) ToIdNamespaceTypePtrOutputWithContext(ctx context.Context) IdNamespaceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdNamespaceTypePtrOutput)
}

// The type of incremental run. The only valid value is `IMMEDIATE` . This appears as "Automatic" in the console.
//
// > For workflows where `resolutionType` is `ML_MATCHING` , incremental processing is not supported.
type MatchingWorkflowIncrementalRunConfigIncrementalRunType string

const (
	MatchingWorkflowIncrementalRunConfigIncrementalRunTypeImmediate = MatchingWorkflowIncrementalRunConfigIncrementalRunType("IMMEDIATE")
)

func (MatchingWorkflowIncrementalRunConfigIncrementalRunType) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowIncrementalRunConfigIncrementalRunType)(nil)).Elem()
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput {
	return pulumi.ToOutput(e).(MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput)
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutputWithContext(ctx context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput)
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return e.ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return MatchingWorkflowIncrementalRunConfigIncrementalRunType(e).ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutputWithContext(ctx).ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(ctx)
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowIncrementalRunConfigIncrementalRunType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowIncrementalRunConfigIncrementalRunType)(nil)).Elem()
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput {
	return o
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutputWithContext(ctx context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput {
	return o
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return o.ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingWorkflowIncrementalRunConfigIncrementalRunType) *MatchingWorkflowIncrementalRunConfigIncrementalRunType {
		return &v
	}).(MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput)
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowIncrementalRunConfigIncrementalRunType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowIncrementalRunConfigIncrementalRunType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflowIncrementalRunConfigIncrementalRunType)(nil)).Elem()
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return o
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return o
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput) Elem() MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput {
	return o.ApplyT(func(v *MatchingWorkflowIncrementalRunConfigIncrementalRunType) MatchingWorkflowIncrementalRunConfigIncrementalRunType {
		if v != nil {
			return *v
		}
		var ret MatchingWorkflowIncrementalRunConfigIncrementalRunType
		return ret
	}).(MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput)
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingWorkflowIncrementalRunConfigIncrementalRunType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingWorkflowIncrementalRunConfigIncrementalRunTypeInput is an input type that accepts values of the MatchingWorkflowIncrementalRunConfigIncrementalRunType enum
// A concrete instance of `MatchingWorkflowIncrementalRunConfigIncrementalRunTypeInput` can be one of the following:
//
//	MatchingWorkflowIncrementalRunConfigIncrementalRunTypeImmediate
type MatchingWorkflowIncrementalRunConfigIncrementalRunTypeInput interface {
	pulumi.Input

	ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput
	ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutputWithContext(context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput
}

var matchingWorkflowIncrementalRunConfigIncrementalRunTypePtrType = reflect.TypeOf((**MatchingWorkflowIncrementalRunConfigIncrementalRunType)(nil)).Elem()

type MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrInput interface {
	pulumi.Input

	ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput
	ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput
}

type matchingWorkflowIncrementalRunConfigIncrementalRunTypePtr string

func MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtr(v string) MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrInput {
	return (*matchingWorkflowIncrementalRunConfigIncrementalRunTypePtr)(&v)
}

func (*matchingWorkflowIncrementalRunConfigIncrementalRunTypePtr) ElementType() reflect.Type {
	return matchingWorkflowIncrementalRunConfigIncrementalRunTypePtrType
}

func (in *matchingWorkflowIncrementalRunConfigIncrementalRunTypePtr) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput() MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return pulumi.ToOutput(in).(MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput)
}

func (in *matchingWorkflowIncrementalRunConfigIncrementalRunTypePtr) ToMatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput)
}

type MatchingWorkflowResolutionType string

const (
	MatchingWorkflowResolutionTypeRuleMatching = MatchingWorkflowResolutionType("RULE_MATCHING")
	MatchingWorkflowResolutionTypeMlMatching   = MatchingWorkflowResolutionType("ML_MATCHING")
	MatchingWorkflowResolutionTypeProvider     = MatchingWorkflowResolutionType("PROVIDER")
)

func (MatchingWorkflowResolutionType) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowResolutionType)(nil)).Elem()
}

func (e MatchingWorkflowResolutionType) ToMatchingWorkflowResolutionTypeOutput() MatchingWorkflowResolutionTypeOutput {
	return pulumi.ToOutput(e).(MatchingWorkflowResolutionTypeOutput)
}

func (e MatchingWorkflowResolutionType) ToMatchingWorkflowResolutionTypeOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingWorkflowResolutionTypeOutput)
}

func (e MatchingWorkflowResolutionType) ToMatchingWorkflowResolutionTypePtrOutput() MatchingWorkflowResolutionTypePtrOutput {
	return e.ToMatchingWorkflowResolutionTypePtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowResolutionType) ToMatchingWorkflowResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTypePtrOutput {
	return MatchingWorkflowResolutionType(e).ToMatchingWorkflowResolutionTypeOutputWithContext(ctx).ToMatchingWorkflowResolutionTypePtrOutputWithContext(ctx)
}

func (e MatchingWorkflowResolutionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowResolutionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowResolutionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowResolutionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingWorkflowResolutionTypeOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowResolutionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowResolutionType)(nil)).Elem()
}

func (o MatchingWorkflowResolutionTypeOutput) ToMatchingWorkflowResolutionTypeOutput() MatchingWorkflowResolutionTypeOutput {
	return o
}

func (o MatchingWorkflowResolutionTypeOutput) ToMatchingWorkflowResolutionTypeOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTypeOutput {
	return o
}

func (o MatchingWorkflowResolutionTypeOutput) ToMatchingWorkflowResolutionTypePtrOutput() MatchingWorkflowResolutionTypePtrOutput {
	return o.ToMatchingWorkflowResolutionTypePtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTypeOutput) ToMatchingWorkflowResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingWorkflowResolutionType) *MatchingWorkflowResolutionType {
		return &v
	}).(MatchingWorkflowResolutionTypePtrOutput)
}

func (o MatchingWorkflowResolutionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowResolutionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingWorkflowResolutionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowResolutionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingWorkflowResolutionTypePtrOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowResolutionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflowResolutionType)(nil)).Elem()
}

func (o MatchingWorkflowResolutionTypePtrOutput) ToMatchingWorkflowResolutionTypePtrOutput() MatchingWorkflowResolutionTypePtrOutput {
	return o
}

func (o MatchingWorkflowResolutionTypePtrOutput) ToMatchingWorkflowResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTypePtrOutput {
	return o
}

func (o MatchingWorkflowResolutionTypePtrOutput) Elem() MatchingWorkflowResolutionTypeOutput {
	return o.ApplyT(func(v *MatchingWorkflowResolutionType) MatchingWorkflowResolutionType {
		if v != nil {
			return *v
		}
		var ret MatchingWorkflowResolutionType
		return ret
	}).(MatchingWorkflowResolutionTypeOutput)
}

func (o MatchingWorkflowResolutionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowResolutionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingWorkflowResolutionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingWorkflowResolutionTypeInput is an input type that accepts values of the MatchingWorkflowResolutionType enum
// A concrete instance of `MatchingWorkflowResolutionTypeInput` can be one of the following:
//
//	MatchingWorkflowResolutionTypeRuleMatching
//	MatchingWorkflowResolutionTypeMlMatching
//	MatchingWorkflowResolutionTypeProvider
type MatchingWorkflowResolutionTypeInput interface {
	pulumi.Input

	ToMatchingWorkflowResolutionTypeOutput() MatchingWorkflowResolutionTypeOutput
	ToMatchingWorkflowResolutionTypeOutputWithContext(context.Context) MatchingWorkflowResolutionTypeOutput
}

var matchingWorkflowResolutionTypePtrType = reflect.TypeOf((**MatchingWorkflowResolutionType)(nil)).Elem()

type MatchingWorkflowResolutionTypePtrInput interface {
	pulumi.Input

	ToMatchingWorkflowResolutionTypePtrOutput() MatchingWorkflowResolutionTypePtrOutput
	ToMatchingWorkflowResolutionTypePtrOutputWithContext(context.Context) MatchingWorkflowResolutionTypePtrOutput
}

type matchingWorkflowResolutionTypePtr string

func MatchingWorkflowResolutionTypePtr(v string) MatchingWorkflowResolutionTypePtrInput {
	return (*matchingWorkflowResolutionTypePtr)(&v)
}

func (*matchingWorkflowResolutionTypePtr) ElementType() reflect.Type {
	return matchingWorkflowResolutionTypePtrType
}

func (in *matchingWorkflowResolutionTypePtr) ToMatchingWorkflowResolutionTypePtrOutput() MatchingWorkflowResolutionTypePtrOutput {
	return pulumi.ToOutput(in).(MatchingWorkflowResolutionTypePtrOutput)
}

func (in *matchingWorkflowResolutionTypePtr) ToMatchingWorkflowResolutionTypePtrOutputWithContext(ctx context.Context) MatchingWorkflowResolutionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingWorkflowResolutionTypePtrOutput)
}

// The comparison type. You can either choose `ONE_TO_ONE` or `MANY_TO_MANY` as the `attributeMatchingModel` .
//
// If you choose `MANY_TO_MANY` , the system can match attributes across the sub-types of an attribute type. For example, if the value of the `Email` field of Profile A and the value of `BusinessEmail` field of Profile B matches, the two profiles are matched on the `Email` attribute type.
//
// If you choose `ONE_TO_ONE` , the system can only match attributes if the sub-types are an exact match. For example, for the `Email` attribute type, the system will only consider it a match if the value of the `Email` field of Profile A matches the value of the `Email` field of Profile B.
type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel string

const (
	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOneToOne   = MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE")
	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelManyToMany = MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("MANY_TO_MANY")
)

func (MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutput(e).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return e.ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel(e).ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx).ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) *MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel {
		return &v
	}).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) Elem() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput {
	return o.ApplyT(func(v *MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel {
		if v != nil {
			return *v
		}
		var ret MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel
		return ret
	}).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput is an input type that accepts values of the MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel enum
// A concrete instance of `MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput` can be one of the following:
//
//	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOneToOne
//	MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelManyToMany
type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput interface {
	pulumi.Input

	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput
	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutputWithContext(context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput
}

var matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrType = reflect.TypeOf((**MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel)(nil)).Elem()

type MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrInput interface {
	pulumi.Input

	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput
	ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput
}

type matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr string

func MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr(v string) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrInput {
	return (*matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr)(&v)
}

func (*matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr) ElementType() reflect.Type {
	return matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrType
}

func (in *matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput() MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutput(in).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

func (in *matchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtr) ToMatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput)
}

// An indicator of whether to generate IDs and index the data or not.
//
// If you choose `IDENTIFIER_GENERATION` , the process generates IDs and indexes the data.
//
// If you choose `INDEXING` , the process indexes the data without generating IDs.
type MatchingWorkflowRuleBasedPropertiesMatchPurpose string

const (
	MatchingWorkflowRuleBasedPropertiesMatchPurposeIdentifierGeneration = MatchingWorkflowRuleBasedPropertiesMatchPurpose("IDENTIFIER_GENERATION")
	MatchingWorkflowRuleBasedPropertiesMatchPurposeIndexing             = MatchingWorkflowRuleBasedPropertiesMatchPurpose("INDEXING")
)

func (MatchingWorkflowRuleBasedPropertiesMatchPurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesMatchPurpose)(nil)).Elem()
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput {
	return pulumi.ToOutput(e).(MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return e.ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return MatchingWorkflowRuleBasedPropertiesMatchPurpose(e).ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutputWithContext(ctx).ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(ctx)
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingWorkflowRuleBasedPropertiesMatchPurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesMatchPurpose)(nil)).Elem()
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return o.ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingWorkflowRuleBasedPropertiesMatchPurpose) *MatchingWorkflowRuleBasedPropertiesMatchPurpose {
		return &v
	}).(MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowRuleBasedPropertiesMatchPurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingWorkflowRuleBasedPropertiesMatchPurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput struct{ *pulumi.OutputState }

func (MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingWorkflowRuleBasedPropertiesMatchPurpose)(nil)).Elem()
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return o
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput) Elem() MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput {
	return o.ApplyT(func(v *MatchingWorkflowRuleBasedPropertiesMatchPurpose) MatchingWorkflowRuleBasedPropertiesMatchPurpose {
		if v != nil {
			return *v
		}
		var ret MatchingWorkflowRuleBasedPropertiesMatchPurpose
		return ret
	}).(MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput)
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingWorkflowRuleBasedPropertiesMatchPurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingWorkflowRuleBasedPropertiesMatchPurposeInput is an input type that accepts values of the MatchingWorkflowRuleBasedPropertiesMatchPurpose enum
// A concrete instance of `MatchingWorkflowRuleBasedPropertiesMatchPurposeInput` can be one of the following:
//
//	MatchingWorkflowRuleBasedPropertiesMatchPurposeIdentifierGeneration
//	MatchingWorkflowRuleBasedPropertiesMatchPurposeIndexing
type MatchingWorkflowRuleBasedPropertiesMatchPurposeInput interface {
	pulumi.Input

	ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput
	ToMatchingWorkflowRuleBasedPropertiesMatchPurposeOutputWithContext(context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput
}

var matchingWorkflowRuleBasedPropertiesMatchPurposePtrType = reflect.TypeOf((**MatchingWorkflowRuleBasedPropertiesMatchPurpose)(nil)).Elem()

type MatchingWorkflowRuleBasedPropertiesMatchPurposePtrInput interface {
	pulumi.Input

	ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput
	ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput
}

type matchingWorkflowRuleBasedPropertiesMatchPurposePtr string

func MatchingWorkflowRuleBasedPropertiesMatchPurposePtr(v string) MatchingWorkflowRuleBasedPropertiesMatchPurposePtrInput {
	return (*matchingWorkflowRuleBasedPropertiesMatchPurposePtr)(&v)
}

func (*matchingWorkflowRuleBasedPropertiesMatchPurposePtr) ElementType() reflect.Type {
	return matchingWorkflowRuleBasedPropertiesMatchPurposePtrType
}

func (in *matchingWorkflowRuleBasedPropertiesMatchPurposePtr) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput() MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return pulumi.ToOutput(in).(MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput)
}

func (in *matchingWorkflowRuleBasedPropertiesMatchPurposePtr) ToMatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutputWithContext(ctx context.Context) MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput)
}

type PolicyStatementStatementEffect string

const (
	PolicyStatementStatementEffectAllow = PolicyStatementStatementEffect("Allow")
	PolicyStatementStatementEffectDeny  = PolicyStatementStatementEffect("Deny")
)

func (PolicyStatementStatementEffect) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatementStatementEffect)(nil)).Elem()
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectOutput() PolicyStatementStatementEffectOutput {
	return pulumi.ToOutput(e).(PolicyStatementStatementEffectOutput)
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectOutputWithContext(ctx context.Context) PolicyStatementStatementEffectOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PolicyStatementStatementEffectOutput)
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return e.ToPolicyStatementStatementEffectPtrOutputWithContext(context.Background())
}

func (e PolicyStatementStatementEffect) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return PolicyStatementStatementEffect(e).ToPolicyStatementStatementEffectOutputWithContext(ctx).ToPolicyStatementStatementEffectPtrOutputWithContext(ctx)
}

func (e PolicyStatementStatementEffect) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyStatementStatementEffect) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyStatementStatementEffect) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PolicyStatementStatementEffect) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PolicyStatementStatementEffectOutput struct{ *pulumi.OutputState }

func (PolicyStatementStatementEffectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatementStatementEffect)(nil)).Elem()
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectOutput() PolicyStatementStatementEffectOutput {
	return o
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectOutputWithContext(ctx context.Context) PolicyStatementStatementEffectOutput {
	return o
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return o.ToPolicyStatementStatementEffectPtrOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectOutput) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyStatementStatementEffect) *PolicyStatementStatementEffect {
		return &v
	}).(PolicyStatementStatementEffectPtrOutput)
}

func (o PolicyStatementStatementEffectOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyStatementStatementEffect) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PolicyStatementStatementEffectOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyStatementStatementEffect) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PolicyStatementStatementEffectPtrOutput struct{ *pulumi.OutputState }

func (PolicyStatementStatementEffectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStatementStatementEffect)(nil)).Elem()
}

func (o PolicyStatementStatementEffectPtrOutput) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return o
}

func (o PolicyStatementStatementEffectPtrOutput) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return o
}

func (o PolicyStatementStatementEffectPtrOutput) Elem() PolicyStatementStatementEffectOutput {
	return o.ApplyT(func(v *PolicyStatementStatementEffect) PolicyStatementStatementEffect {
		if v != nil {
			return *v
		}
		var ret PolicyStatementStatementEffect
		return ret
	}).(PolicyStatementStatementEffectOutput)
}

func (o PolicyStatementStatementEffectPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyStatementStatementEffectPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PolicyStatementStatementEffect) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PolicyStatementStatementEffectInput is an input type that accepts values of the PolicyStatementStatementEffect enum
// A concrete instance of `PolicyStatementStatementEffectInput` can be one of the following:
//
//	PolicyStatementStatementEffectAllow
//	PolicyStatementStatementEffectDeny
type PolicyStatementStatementEffectInput interface {
	pulumi.Input

	ToPolicyStatementStatementEffectOutput() PolicyStatementStatementEffectOutput
	ToPolicyStatementStatementEffectOutputWithContext(context.Context) PolicyStatementStatementEffectOutput
}

var policyStatementStatementEffectPtrType = reflect.TypeOf((**PolicyStatementStatementEffect)(nil)).Elem()

type PolicyStatementStatementEffectPtrInput interface {
	pulumi.Input

	ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput
	ToPolicyStatementStatementEffectPtrOutputWithContext(context.Context) PolicyStatementStatementEffectPtrOutput
}

type policyStatementStatementEffectPtr string

func PolicyStatementStatementEffectPtr(v string) PolicyStatementStatementEffectPtrInput {
	return (*policyStatementStatementEffectPtr)(&v)
}

func (*policyStatementStatementEffectPtr) ElementType() reflect.Type {
	return policyStatementStatementEffectPtrType
}

func (in *policyStatementStatementEffectPtr) ToPolicyStatementStatementEffectPtrOutput() PolicyStatementStatementEffectPtrOutput {
	return pulumi.ToOutput(in).(PolicyStatementStatementEffectPtrOutput)
}

func (in *policyStatementStatementEffectPtr) ToPolicyStatementStatementEffectPtrOutputWithContext(ctx context.Context) PolicyStatementStatementEffectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PolicyStatementStatementEffectPtrOutput)
}

type SchemaMappingSchemaAttributeType string

const (
	SchemaMappingSchemaAttributeTypeName              = SchemaMappingSchemaAttributeType("NAME")
	SchemaMappingSchemaAttributeTypeNameFirst         = SchemaMappingSchemaAttributeType("NAME_FIRST")
	SchemaMappingSchemaAttributeTypeNameMiddle        = SchemaMappingSchemaAttributeType("NAME_MIDDLE")
	SchemaMappingSchemaAttributeTypeNameLast          = SchemaMappingSchemaAttributeType("NAME_LAST")
	SchemaMappingSchemaAttributeTypeAddress           = SchemaMappingSchemaAttributeType("ADDRESS")
	SchemaMappingSchemaAttributeTypeAddressStreet1    = SchemaMappingSchemaAttributeType("ADDRESS_STREET1")
	SchemaMappingSchemaAttributeTypeAddressStreet2    = SchemaMappingSchemaAttributeType("ADDRESS_STREET2")
	SchemaMappingSchemaAttributeTypeAddressStreet3    = SchemaMappingSchemaAttributeType("ADDRESS_STREET3")
	SchemaMappingSchemaAttributeTypeAddressCity       = SchemaMappingSchemaAttributeType("ADDRESS_CITY")
	SchemaMappingSchemaAttributeTypeAddressState      = SchemaMappingSchemaAttributeType("ADDRESS_STATE")
	SchemaMappingSchemaAttributeTypeAddressCountry    = SchemaMappingSchemaAttributeType("ADDRESS_COUNTRY")
	SchemaMappingSchemaAttributeTypeAddressPostalcode = SchemaMappingSchemaAttributeType("ADDRESS_POSTALCODE")
	SchemaMappingSchemaAttributeTypePhone             = SchemaMappingSchemaAttributeType("PHONE")
	SchemaMappingSchemaAttributeTypePhoneNumber       = SchemaMappingSchemaAttributeType("PHONE_NUMBER")
	SchemaMappingSchemaAttributeTypePhoneCountrycode  = SchemaMappingSchemaAttributeType("PHONE_COUNTRYCODE")
	SchemaMappingSchemaAttributeTypeEmailAddress      = SchemaMappingSchemaAttributeType("EMAIL_ADDRESS")
	SchemaMappingSchemaAttributeTypeUniqueId          = SchemaMappingSchemaAttributeType("UNIQUE_ID")
	SchemaMappingSchemaAttributeTypeDate              = SchemaMappingSchemaAttributeType("DATE")
	SchemaMappingSchemaAttributeTypeString            = SchemaMappingSchemaAttributeType("STRING")
	SchemaMappingSchemaAttributeTypeProviderId        = SchemaMappingSchemaAttributeType("PROVIDER_ID")
)

func (SchemaMappingSchemaAttributeType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput {
	return pulumi.ToOutput(e).(SchemaMappingSchemaAttributeTypeOutput)
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaMappingSchemaAttributeTypeOutput)
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return e.ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Background())
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return SchemaMappingSchemaAttributeType(e).ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx).ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx)
}

func (e SchemaMappingSchemaAttributeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaMappingSchemaAttributeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaMappingSchemaAttributeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaMappingSchemaAttributeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaMappingSchemaAttributeTypeOutput struct{ *pulumi.OutputState }

func (SchemaMappingSchemaAttributeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypeOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return o.ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaMappingSchemaAttributeType) *SchemaMappingSchemaAttributeType {
		return &v
	}).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaMappingSchemaAttributeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaMappingSchemaAttributeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaMappingSchemaAttributeTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaMappingSchemaAttributeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) Elem() SchemaMappingSchemaAttributeTypeOutput {
	return o.ApplyT(func(v *SchemaMappingSchemaAttributeType) SchemaMappingSchemaAttributeType {
		if v != nil {
			return *v
		}
		var ret SchemaMappingSchemaAttributeType
		return ret
	}).(SchemaMappingSchemaAttributeTypeOutput)
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaMappingSchemaAttributeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaMappingSchemaAttributeTypeInput is an input type that accepts values of the SchemaMappingSchemaAttributeType enum
// A concrete instance of `SchemaMappingSchemaAttributeTypeInput` can be one of the following:
//
//	SchemaMappingSchemaAttributeTypeName
//	SchemaMappingSchemaAttributeTypeNameFirst
//	SchemaMappingSchemaAttributeTypeNameMiddle
//	SchemaMappingSchemaAttributeTypeNameLast
//	SchemaMappingSchemaAttributeTypeAddress
//	SchemaMappingSchemaAttributeTypeAddressStreet1
//	SchemaMappingSchemaAttributeTypeAddressStreet2
//	SchemaMappingSchemaAttributeTypeAddressStreet3
//	SchemaMappingSchemaAttributeTypeAddressCity
//	SchemaMappingSchemaAttributeTypeAddressState
//	SchemaMappingSchemaAttributeTypeAddressCountry
//	SchemaMappingSchemaAttributeTypeAddressPostalcode
//	SchemaMappingSchemaAttributeTypePhone
//	SchemaMappingSchemaAttributeTypePhoneNumber
//	SchemaMappingSchemaAttributeTypePhoneCountrycode
//	SchemaMappingSchemaAttributeTypeEmailAddress
//	SchemaMappingSchemaAttributeTypeUniqueId
//	SchemaMappingSchemaAttributeTypeDate
//	SchemaMappingSchemaAttributeTypeString
//	SchemaMappingSchemaAttributeTypeProviderId
type SchemaMappingSchemaAttributeTypeInput interface {
	pulumi.Input

	ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput
	ToSchemaMappingSchemaAttributeTypeOutputWithContext(context.Context) SchemaMappingSchemaAttributeTypeOutput
}

var schemaMappingSchemaAttributeTypePtrType = reflect.TypeOf((**SchemaMappingSchemaAttributeType)(nil)).Elem()

type SchemaMappingSchemaAttributeTypePtrInput interface {
	pulumi.Input

	ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput
	ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Context) SchemaMappingSchemaAttributeTypePtrOutput
}

type schemaMappingSchemaAttributeTypePtr string

func SchemaMappingSchemaAttributeTypePtr(v string) SchemaMappingSchemaAttributeTypePtrInput {
	return (*schemaMappingSchemaAttributeTypePtr)(&v)
}

func (*schemaMappingSchemaAttributeTypePtr) ElementType() reflect.Type {
	return schemaMappingSchemaAttributeTypePtrType
}

func (in *schemaMappingSchemaAttributeTypePtr) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func (in *schemaMappingSchemaAttributeTypePtr) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelInput)(nil)).Elem(), IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrInput)(nil)).Elem(), IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelInput)(nil)).Elem(), IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel("ONE_SOURCE_TO_ONE_TARGET"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrInput)(nil)).Elem(), IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModel("ONE_SOURCE_TO_ONE_TARGET"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeInput)(nil)).Elem(), IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrInput)(nil)).Elem(), IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingTypeInput)(nil)).Elem(), IdMappingWorkflowIdMappingTechniquesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrInput)(nil)).Elem(), IdMappingWorkflowIdMappingTechniquesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowInputSourceTypeInput)(nil)).Elem(), IdMappingWorkflowInputSourceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdMappingWorkflowInputSourceTypePtrInput)(nil)).Elem(), IdMappingWorkflowInputSourceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeInput)(nil)).Elem(), IdNamespaceIdMappingWorkflowPropertiesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrInput)(nil)).Elem(), IdNamespaceIdMappingWorkflowPropertiesIdMappingType("PROVIDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelInput)(nil)).Elem(), IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrInput)(nil)).Elem(), IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceRecordMatchingModelInput)(nil)).Elem(), IdNamespaceRecordMatchingModel("ONE_SOURCE_TO_ONE_TARGET"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceRecordMatchingModelPtrInput)(nil)).Elem(), IdNamespaceRecordMatchingModel("ONE_SOURCE_TO_ONE_TARGET"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceRecordMatchingModelArrayInput)(nil)).Elem(), IdNamespaceRecordMatchingModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceRuleDefinitionTypeInput)(nil)).Elem(), IdNamespaceRuleDefinitionType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceRuleDefinitionTypePtrInput)(nil)).Elem(), IdNamespaceRuleDefinitionType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceRuleDefinitionTypeArrayInput)(nil)).Elem(), IdNamespaceRuleDefinitionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceTypeInput)(nil)).Elem(), IdNamespaceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IdNamespaceTypePtrInput)(nil)).Elem(), IdNamespaceType("SOURCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowIncrementalRunConfigIncrementalRunTypeInput)(nil)).Elem(), MatchingWorkflowIncrementalRunConfigIncrementalRunType("IMMEDIATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrInput)(nil)).Elem(), MatchingWorkflowIncrementalRunConfigIncrementalRunType("IMMEDIATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowResolutionTypeInput)(nil)).Elem(), MatchingWorkflowResolutionType("RULE_MATCHING"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowResolutionTypePtrInput)(nil)).Elem(), MatchingWorkflowResolutionType("RULE_MATCHING"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelInput)(nil)).Elem(), MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrInput)(nil)).Elem(), MatchingWorkflowRuleBasedPropertiesAttributeMatchingModel("ONE_TO_ONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesMatchPurposeInput)(nil)).Elem(), MatchingWorkflowRuleBasedPropertiesMatchPurpose("IDENTIFIER_GENERATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*MatchingWorkflowRuleBasedPropertiesMatchPurposePtrInput)(nil)).Elem(), MatchingWorkflowRuleBasedPropertiesMatchPurpose("IDENTIFIER_GENERATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStatementStatementEffectInput)(nil)).Elem(), PolicyStatementStatementEffect("Allow"))
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStatementStatementEffectPtrInput)(nil)).Elem(), PolicyStatementStatementEffect("Allow"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMappingSchemaAttributeTypeInput)(nil)).Elem(), SchemaMappingSchemaAttributeType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMappingSchemaAttributeTypePtrInput)(nil)).Elem(), SchemaMappingSchemaAttributeType("NAME"))
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingRuleBasedPropertiesAttributeMatchingModelPtrOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingRuleBasedPropertiesRecordMatchingModelPtrOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypeOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingRuleBasedPropertiesRuleDefinitionTypePtrOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingTechniquesIdMappingTypeOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowIdMappingTechniquesIdMappingTypePtrOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowInputSourceTypeOutput{})
	pulumi.RegisterOutputType(IdMappingWorkflowInputSourceTypePtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypeOutput{})
	pulumi.RegisterOutputType(IdNamespaceIdMappingWorkflowPropertiesIdMappingTypePtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelOutput{})
	pulumi.RegisterOutputType(IdNamespaceNamespaceRuleBasedPropertiesAttributeMatchingModelPtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceRecordMatchingModelOutput{})
	pulumi.RegisterOutputType(IdNamespaceRecordMatchingModelPtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceRecordMatchingModelArrayOutput{})
	pulumi.RegisterOutputType(IdNamespaceRuleDefinitionTypeOutput{})
	pulumi.RegisterOutputType(IdNamespaceRuleDefinitionTypePtrOutput{})
	pulumi.RegisterOutputType(IdNamespaceRuleDefinitionTypeArrayOutput{})
	pulumi.RegisterOutputType(IdNamespaceTypeOutput{})
	pulumi.RegisterOutputType(IdNamespaceTypePtrOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowIncrementalRunConfigIncrementalRunTypeOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowIncrementalRunConfigIncrementalRunTypePtrOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowResolutionTypeOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowResolutionTypePtrOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowRuleBasedPropertiesAttributeMatchingModelPtrOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowRuleBasedPropertiesMatchPurposeOutput{})
	pulumi.RegisterOutputType(MatchingWorkflowRuleBasedPropertiesMatchPurposePtrOutput{})
	pulumi.RegisterOutputType(PolicyStatementStatementEffectOutput{})
	pulumi.RegisterOutputType(PolicyStatementStatementEffectPtrOutput{})
	pulumi.RegisterOutputType(SchemaMappingSchemaAttributeTypeOutput{})
	pulumi.RegisterOutputType(SchemaMappingSchemaAttributeTypePtrOutput{})
}
