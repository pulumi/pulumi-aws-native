// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package entityresolution

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SchemaMappingSchemaAttributeType string

const (
	SchemaMappingSchemaAttributeTypeName              = SchemaMappingSchemaAttributeType("NAME")
	SchemaMappingSchemaAttributeTypeNameFirst         = SchemaMappingSchemaAttributeType("NAME_FIRST")
	SchemaMappingSchemaAttributeTypeNameMiddle        = SchemaMappingSchemaAttributeType("NAME_MIDDLE")
	SchemaMappingSchemaAttributeTypeNameLast          = SchemaMappingSchemaAttributeType("NAME_LAST")
	SchemaMappingSchemaAttributeTypeAddress           = SchemaMappingSchemaAttributeType("ADDRESS")
	SchemaMappingSchemaAttributeTypeAddressStreet1    = SchemaMappingSchemaAttributeType("ADDRESS_STREET1")
	SchemaMappingSchemaAttributeTypeAddressStreet2    = SchemaMappingSchemaAttributeType("ADDRESS_STREET2")
	SchemaMappingSchemaAttributeTypeAddressStreet3    = SchemaMappingSchemaAttributeType("ADDRESS_STREET3")
	SchemaMappingSchemaAttributeTypeAddressCity       = SchemaMappingSchemaAttributeType("ADDRESS_CITY")
	SchemaMappingSchemaAttributeTypeAddressState      = SchemaMappingSchemaAttributeType("ADDRESS_STATE")
	SchemaMappingSchemaAttributeTypeAddressCountry    = SchemaMappingSchemaAttributeType("ADDRESS_COUNTRY")
	SchemaMappingSchemaAttributeTypeAddressPostalcode = SchemaMappingSchemaAttributeType("ADDRESS_POSTALCODE")
	SchemaMappingSchemaAttributeTypePhone             = SchemaMappingSchemaAttributeType("PHONE")
	SchemaMappingSchemaAttributeTypePhoneNumber       = SchemaMappingSchemaAttributeType("PHONE_NUMBER")
	SchemaMappingSchemaAttributeTypePhoneCountrycode  = SchemaMappingSchemaAttributeType("PHONE_COUNTRYCODE")
	SchemaMappingSchemaAttributeTypeEmailAddress      = SchemaMappingSchemaAttributeType("EMAIL_ADDRESS")
	SchemaMappingSchemaAttributeTypeUniqueId          = SchemaMappingSchemaAttributeType("UNIQUE_ID")
	SchemaMappingSchemaAttributeTypeDate              = SchemaMappingSchemaAttributeType("DATE")
	SchemaMappingSchemaAttributeTypeString            = SchemaMappingSchemaAttributeType("STRING")
)

func (SchemaMappingSchemaAttributeType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput {
	return pulumi.ToOutput(e).(SchemaMappingSchemaAttributeTypeOutput)
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaMappingSchemaAttributeTypeOutput)
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return e.ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Background())
}

func (e SchemaMappingSchemaAttributeType) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return SchemaMappingSchemaAttributeType(e).ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx).ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx)
}

func (e SchemaMappingSchemaAttributeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaMappingSchemaAttributeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaMappingSchemaAttributeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaMappingSchemaAttributeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaMappingSchemaAttributeTypeOutput struct{ *pulumi.OutputState }

func (SchemaMappingSchemaAttributeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypeOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypeOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return o.ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaMappingSchemaAttributeType) *SchemaMappingSchemaAttributeType {
		return &v
	}).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaMappingSchemaAttributeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaMappingSchemaAttributeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaMappingSchemaAttributeTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaMappingSchemaAttributeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaMappingSchemaAttributeType)(nil)).Elem()
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return o
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) Elem() SchemaMappingSchemaAttributeTypeOutput {
	return o.ApplyT(func(v *SchemaMappingSchemaAttributeType) SchemaMappingSchemaAttributeType {
		if v != nil {
			return *v
		}
		var ret SchemaMappingSchemaAttributeType
		return ret
	}).(SchemaMappingSchemaAttributeTypeOutput)
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaMappingSchemaAttributeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaMappingSchemaAttributeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaMappingSchemaAttributeTypeInput is an input type that accepts SchemaMappingSchemaAttributeTypeArgs and SchemaMappingSchemaAttributeTypeOutput values.
// You can construct a concrete instance of `SchemaMappingSchemaAttributeTypeInput` via:
//
//	SchemaMappingSchemaAttributeTypeArgs{...}
type SchemaMappingSchemaAttributeTypeInput interface {
	pulumi.Input

	ToSchemaMappingSchemaAttributeTypeOutput() SchemaMappingSchemaAttributeTypeOutput
	ToSchemaMappingSchemaAttributeTypeOutputWithContext(context.Context) SchemaMappingSchemaAttributeTypeOutput
}

var schemaMappingSchemaAttributeTypePtrType = reflect.TypeOf((**SchemaMappingSchemaAttributeType)(nil)).Elem()

type SchemaMappingSchemaAttributeTypePtrInput interface {
	pulumi.Input

	ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput
	ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(context.Context) SchemaMappingSchemaAttributeTypePtrOutput
}

type schemaMappingSchemaAttributeTypePtr string

func SchemaMappingSchemaAttributeTypePtr(v string) SchemaMappingSchemaAttributeTypePtrInput {
	return (*schemaMappingSchemaAttributeTypePtr)(&v)
}

func (*schemaMappingSchemaAttributeTypePtr) ElementType() reflect.Type {
	return schemaMappingSchemaAttributeTypePtrType
}

func (in *schemaMappingSchemaAttributeTypePtr) ToSchemaMappingSchemaAttributeTypePtrOutput() SchemaMappingSchemaAttributeTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func (in *schemaMappingSchemaAttributeTypePtr) ToSchemaMappingSchemaAttributeTypePtrOutputWithContext(ctx context.Context) SchemaMappingSchemaAttributeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaMappingSchemaAttributeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMappingSchemaAttributeTypeInput)(nil)).Elem(), SchemaMappingSchemaAttributeType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMappingSchemaAttributeTypePtrInput)(nil)).Elem(), SchemaMappingSchemaAttributeType("NAME"))
	pulumi.RegisterOutputType(SchemaMappingSchemaAttributeTypeOutput{})
	pulumi.RegisterOutputType(SchemaMappingSchemaAttributeTypePtrOutput{})
}
