// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package entityresolution

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MatchingWorkflow defined in AWS Entity Resolution service
func LookupMatchingWorkflow(ctx *pulumi.Context, args *LookupMatchingWorkflowArgs, opts ...pulumi.InvokeOption) (*LookupMatchingWorkflowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMatchingWorkflowResult
	err := ctx.Invoke("aws-native:entityresolution:getMatchingWorkflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMatchingWorkflowArgs struct {
	// The name of the MatchingWorkflow
	WorkflowName string `pulumi:"workflowName"`
}

type LookupMatchingWorkflowResult struct {
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the MatchingWorkflow
	Description *string `pulumi:"description"`
	// An object containing `InputSourceARN` , `SchemaName` , and `ApplyNormalization` .
	InputSourceConfig []MatchingWorkflowInputSource `pulumi:"inputSourceConfig"`
	// A list of `OutputAttribute` objects, each of which have the fields `Name` and `Hashed` . Each of these objects selects a column to be included in the output table, and whether the values of the column should be hashed.
	OutputSourceConfig []MatchingWorkflowOutputSource `pulumi:"outputSourceConfig"`
	// An object which defines the `resolutionType` and the `ruleBasedProperties` .
	ResolutionTechniques *MatchingWorkflowResolutionTechniques `pulumi:"resolutionTechniques"`
	// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
	RoleArn *string `pulumi:"roleArn"`
	// The tags used to organize, track, or control access for this resource.
	Tags        []aws.Tag `pulumi:"tags"`
	UpdatedAt   *string   `pulumi:"updatedAt"`
	WorkflowArn *string   `pulumi:"workflowArn"`
}

func LookupMatchingWorkflowOutput(ctx *pulumi.Context, args LookupMatchingWorkflowOutputArgs, opts ...pulumi.InvokeOption) LookupMatchingWorkflowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMatchingWorkflowResult, error) {
			args := v.(LookupMatchingWorkflowArgs)
			r, err := LookupMatchingWorkflow(ctx, &args, opts...)
			var s LookupMatchingWorkflowResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMatchingWorkflowResultOutput)
}

type LookupMatchingWorkflowOutputArgs struct {
	// The name of the MatchingWorkflow
	WorkflowName pulumi.StringInput `pulumi:"workflowName"`
}

func (LookupMatchingWorkflowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMatchingWorkflowArgs)(nil)).Elem()
}

type LookupMatchingWorkflowResultOutput struct{ *pulumi.OutputState }

func (LookupMatchingWorkflowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMatchingWorkflowResult)(nil)).Elem()
}

func (o LookupMatchingWorkflowResultOutput) ToLookupMatchingWorkflowResultOutput() LookupMatchingWorkflowResultOutput {
	return o
}

func (o LookupMatchingWorkflowResultOutput) ToLookupMatchingWorkflowResultOutputWithContext(ctx context.Context) LookupMatchingWorkflowResultOutput {
	return o
}

func (o LookupMatchingWorkflowResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The description of the MatchingWorkflow
func (o LookupMatchingWorkflowResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An object containing `InputSourceARN` , `SchemaName` , and `ApplyNormalization` .
func (o LookupMatchingWorkflowResultOutput) InputSourceConfig() MatchingWorkflowInputSourceArrayOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) []MatchingWorkflowInputSource { return v.InputSourceConfig }).(MatchingWorkflowInputSourceArrayOutput)
}

// A list of `OutputAttribute` objects, each of which have the fields `Name` and `Hashed` . Each of these objects selects a column to be included in the output table, and whether the values of the column should be hashed.
func (o LookupMatchingWorkflowResultOutput) OutputSourceConfig() MatchingWorkflowOutputSourceArrayOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) []MatchingWorkflowOutputSource { return v.OutputSourceConfig }).(MatchingWorkflowOutputSourceArrayOutput)
}

// An object which defines the `resolutionType` and the `ruleBasedProperties` .
func (o LookupMatchingWorkflowResultOutput) ResolutionTechniques() MatchingWorkflowResolutionTechniquesPtrOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) *MatchingWorkflowResolutionTechniques {
		return v.ResolutionTechniques
	}).(MatchingWorkflowResolutionTechniquesPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role. AWS Entity Resolution assumes this role to create resources on your behalf as part of workflow execution.
func (o LookupMatchingWorkflowResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The tags used to organize, track, or control access for this resource.
func (o LookupMatchingWorkflowResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupMatchingWorkflowResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupMatchingWorkflowResultOutput) WorkflowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMatchingWorkflowResult) *string { return v.WorkflowArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMatchingWorkflowResultOutput{})
}
