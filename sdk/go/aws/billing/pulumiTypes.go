// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a Billing View.
type BillingViewTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// See [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_billing_Expression.html) . Billing view only supports `LINKED_ACCOUNT` and `Tags` .
type DataFilterExpressionProperties struct {
	// The specific `Dimension` to use for `Expression` .
	Dimensions *DataFilterExpressionPropertiesDimensionsProperties `pulumi:"dimensions"`
	// The specific `Tag` to use for `Expression` .
	Tags *DataFilterExpressionPropertiesTagsProperties `pulumi:"tags"`
}

// DataFilterExpressionPropertiesInput is an input type that accepts DataFilterExpressionPropertiesArgs and DataFilterExpressionPropertiesOutput values.
// You can construct a concrete instance of `DataFilterExpressionPropertiesInput` via:
//
//	DataFilterExpressionPropertiesArgs{...}
type DataFilterExpressionPropertiesInput interface {
	pulumi.Input

	ToDataFilterExpressionPropertiesOutput() DataFilterExpressionPropertiesOutput
	ToDataFilterExpressionPropertiesOutputWithContext(context.Context) DataFilterExpressionPropertiesOutput
}

// See [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_billing_Expression.html) . Billing view only supports `LINKED_ACCOUNT` and `Tags` .
type DataFilterExpressionPropertiesArgs struct {
	// The specific `Dimension` to use for `Expression` .
	Dimensions DataFilterExpressionPropertiesDimensionsPropertiesPtrInput `pulumi:"dimensions"`
	// The specific `Tag` to use for `Expression` .
	Tags DataFilterExpressionPropertiesTagsPropertiesPtrInput `pulumi:"tags"`
}

func (DataFilterExpressionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFilterExpressionProperties)(nil)).Elem()
}

func (i DataFilterExpressionPropertiesArgs) ToDataFilterExpressionPropertiesOutput() DataFilterExpressionPropertiesOutput {
	return i.ToDataFilterExpressionPropertiesOutputWithContext(context.Background())
}

func (i DataFilterExpressionPropertiesArgs) ToDataFilterExpressionPropertiesOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesOutput)
}

func (i DataFilterExpressionPropertiesArgs) ToDataFilterExpressionPropertiesPtrOutput() DataFilterExpressionPropertiesPtrOutput {
	return i.ToDataFilterExpressionPropertiesPtrOutputWithContext(context.Background())
}

func (i DataFilterExpressionPropertiesArgs) ToDataFilterExpressionPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesOutput).ToDataFilterExpressionPropertiesPtrOutputWithContext(ctx)
}

// DataFilterExpressionPropertiesPtrInput is an input type that accepts DataFilterExpressionPropertiesArgs, DataFilterExpressionPropertiesPtr and DataFilterExpressionPropertiesPtrOutput values.
// You can construct a concrete instance of `DataFilterExpressionPropertiesPtrInput` via:
//
//	        DataFilterExpressionPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataFilterExpressionPropertiesPtrInput interface {
	pulumi.Input

	ToDataFilterExpressionPropertiesPtrOutput() DataFilterExpressionPropertiesPtrOutput
	ToDataFilterExpressionPropertiesPtrOutputWithContext(context.Context) DataFilterExpressionPropertiesPtrOutput
}

type dataFilterExpressionPropertiesPtrType DataFilterExpressionPropertiesArgs

func DataFilterExpressionPropertiesPtr(v *DataFilterExpressionPropertiesArgs) DataFilterExpressionPropertiesPtrInput {
	return (*dataFilterExpressionPropertiesPtrType)(v)
}

func (*dataFilterExpressionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFilterExpressionProperties)(nil)).Elem()
}

func (i *dataFilterExpressionPropertiesPtrType) ToDataFilterExpressionPropertiesPtrOutput() DataFilterExpressionPropertiesPtrOutput {
	return i.ToDataFilterExpressionPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataFilterExpressionPropertiesPtrType) ToDataFilterExpressionPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesPtrOutput)
}

// See [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_billing_Expression.html) . Billing view only supports `LINKED_ACCOUNT` and `Tags` .
type DataFilterExpressionPropertiesOutput struct{ *pulumi.OutputState }

func (DataFilterExpressionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFilterExpressionProperties)(nil)).Elem()
}

func (o DataFilterExpressionPropertiesOutput) ToDataFilterExpressionPropertiesOutput() DataFilterExpressionPropertiesOutput {
	return o
}

func (o DataFilterExpressionPropertiesOutput) ToDataFilterExpressionPropertiesOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesOutput {
	return o
}

func (o DataFilterExpressionPropertiesOutput) ToDataFilterExpressionPropertiesPtrOutput() DataFilterExpressionPropertiesPtrOutput {
	return o.ToDataFilterExpressionPropertiesPtrOutputWithContext(context.Background())
}

func (o DataFilterExpressionPropertiesOutput) ToDataFilterExpressionPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFilterExpressionProperties) *DataFilterExpressionProperties {
		return &v
	}).(DataFilterExpressionPropertiesPtrOutput)
}

// The specific `Dimension` to use for `Expression` .
func (o DataFilterExpressionPropertiesOutput) Dimensions() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return o.ApplyT(func(v DataFilterExpressionProperties) *DataFilterExpressionPropertiesDimensionsProperties {
		return v.Dimensions
	}).(DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput)
}

// The specific `Tag` to use for `Expression` .
func (o DataFilterExpressionPropertiesOutput) Tags() DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return o.ApplyT(func(v DataFilterExpressionProperties) *DataFilterExpressionPropertiesTagsProperties { return v.Tags }).(DataFilterExpressionPropertiesTagsPropertiesPtrOutput)
}

type DataFilterExpressionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataFilterExpressionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFilterExpressionProperties)(nil)).Elem()
}

func (o DataFilterExpressionPropertiesPtrOutput) ToDataFilterExpressionPropertiesPtrOutput() DataFilterExpressionPropertiesPtrOutput {
	return o
}

func (o DataFilterExpressionPropertiesPtrOutput) ToDataFilterExpressionPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesPtrOutput {
	return o
}

func (o DataFilterExpressionPropertiesPtrOutput) Elem() DataFilterExpressionPropertiesOutput {
	return o.ApplyT(func(v *DataFilterExpressionProperties) DataFilterExpressionProperties {
		if v != nil {
			return *v
		}
		var ret DataFilterExpressionProperties
		return ret
	}).(DataFilterExpressionPropertiesOutput)
}

// The specific `Dimension` to use for `Expression` .
func (o DataFilterExpressionPropertiesPtrOutput) Dimensions() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return o.ApplyT(func(v *DataFilterExpressionProperties) *DataFilterExpressionPropertiesDimensionsProperties {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput)
}

// The specific `Tag` to use for `Expression` .
func (o DataFilterExpressionPropertiesPtrOutput) Tags() DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return o.ApplyT(func(v *DataFilterExpressionProperties) *DataFilterExpressionPropertiesTagsProperties {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(DataFilterExpressionPropertiesTagsPropertiesPtrOutput)
}

// The specific `Dimension` to use for `Expression` .
type DataFilterExpressionPropertiesDimensionsProperties struct {
	Key    *BillingViewDimensionKey `pulumi:"key"`
	Values []string                 `pulumi:"values"`
}

// DataFilterExpressionPropertiesDimensionsPropertiesInput is an input type that accepts DataFilterExpressionPropertiesDimensionsPropertiesArgs and DataFilterExpressionPropertiesDimensionsPropertiesOutput values.
// You can construct a concrete instance of `DataFilterExpressionPropertiesDimensionsPropertiesInput` via:
//
//	DataFilterExpressionPropertiesDimensionsPropertiesArgs{...}
type DataFilterExpressionPropertiesDimensionsPropertiesInput interface {
	pulumi.Input

	ToDataFilterExpressionPropertiesDimensionsPropertiesOutput() DataFilterExpressionPropertiesDimensionsPropertiesOutput
	ToDataFilterExpressionPropertiesDimensionsPropertiesOutputWithContext(context.Context) DataFilterExpressionPropertiesDimensionsPropertiesOutput
}

// The specific `Dimension` to use for `Expression` .
type DataFilterExpressionPropertiesDimensionsPropertiesArgs struct {
	Key    BillingViewDimensionKeyPtrInput `pulumi:"key"`
	Values pulumi.StringArrayInput         `pulumi:"values"`
}

func (DataFilterExpressionPropertiesDimensionsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFilterExpressionPropertiesDimensionsProperties)(nil)).Elem()
}

func (i DataFilterExpressionPropertiesDimensionsPropertiesArgs) ToDataFilterExpressionPropertiesDimensionsPropertiesOutput() DataFilterExpressionPropertiesDimensionsPropertiesOutput {
	return i.ToDataFilterExpressionPropertiesDimensionsPropertiesOutputWithContext(context.Background())
}

func (i DataFilterExpressionPropertiesDimensionsPropertiesArgs) ToDataFilterExpressionPropertiesDimensionsPropertiesOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesDimensionsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesDimensionsPropertiesOutput)
}

func (i DataFilterExpressionPropertiesDimensionsPropertiesArgs) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutput() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return i.ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(context.Background())
}

func (i DataFilterExpressionPropertiesDimensionsPropertiesArgs) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesDimensionsPropertiesOutput).ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(ctx)
}

// DataFilterExpressionPropertiesDimensionsPropertiesPtrInput is an input type that accepts DataFilterExpressionPropertiesDimensionsPropertiesArgs, DataFilterExpressionPropertiesDimensionsPropertiesPtr and DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput values.
// You can construct a concrete instance of `DataFilterExpressionPropertiesDimensionsPropertiesPtrInput` via:
//
//	        DataFilterExpressionPropertiesDimensionsPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataFilterExpressionPropertiesDimensionsPropertiesPtrInput interface {
	pulumi.Input

	ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutput() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput
	ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(context.Context) DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput
}

type dataFilterExpressionPropertiesDimensionsPropertiesPtrType DataFilterExpressionPropertiesDimensionsPropertiesArgs

func DataFilterExpressionPropertiesDimensionsPropertiesPtr(v *DataFilterExpressionPropertiesDimensionsPropertiesArgs) DataFilterExpressionPropertiesDimensionsPropertiesPtrInput {
	return (*dataFilterExpressionPropertiesDimensionsPropertiesPtrType)(v)
}

func (*dataFilterExpressionPropertiesDimensionsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFilterExpressionPropertiesDimensionsProperties)(nil)).Elem()
}

func (i *dataFilterExpressionPropertiesDimensionsPropertiesPtrType) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutput() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return i.ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataFilterExpressionPropertiesDimensionsPropertiesPtrType) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput)
}

// The specific `Dimension` to use for `Expression` .
type DataFilterExpressionPropertiesDimensionsPropertiesOutput struct{ *pulumi.OutputState }

func (DataFilterExpressionPropertiesDimensionsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFilterExpressionPropertiesDimensionsProperties)(nil)).Elem()
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesOutput) ToDataFilterExpressionPropertiesDimensionsPropertiesOutput() DataFilterExpressionPropertiesDimensionsPropertiesOutput {
	return o
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesOutput) ToDataFilterExpressionPropertiesDimensionsPropertiesOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesDimensionsPropertiesOutput {
	return o
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesOutput) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutput() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return o.ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(context.Background())
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesOutput) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFilterExpressionPropertiesDimensionsProperties) *DataFilterExpressionPropertiesDimensionsProperties {
		return &v
	}).(DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput)
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesOutput) Key() BillingViewDimensionKeyPtrOutput {
	return o.ApplyT(func(v DataFilterExpressionPropertiesDimensionsProperties) *BillingViewDimensionKey { return v.Key }).(BillingViewDimensionKeyPtrOutput)
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataFilterExpressionPropertiesDimensionsProperties) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFilterExpressionPropertiesDimensionsProperties)(nil)).Elem()
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutput() DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return o
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput) ToDataFilterExpressionPropertiesDimensionsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput {
	return o
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput) Elem() DataFilterExpressionPropertiesDimensionsPropertiesOutput {
	return o.ApplyT(func(v *DataFilterExpressionPropertiesDimensionsProperties) DataFilterExpressionPropertiesDimensionsProperties {
		if v != nil {
			return *v
		}
		var ret DataFilterExpressionPropertiesDimensionsProperties
		return ret
	}).(DataFilterExpressionPropertiesDimensionsPropertiesOutput)
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput) Key() BillingViewDimensionKeyPtrOutput {
	return o.ApplyT(func(v *DataFilterExpressionPropertiesDimensionsProperties) *BillingViewDimensionKey {
		if v == nil {
			return nil
		}
		return v.Key
	}).(BillingViewDimensionKeyPtrOutput)
}

func (o DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataFilterExpressionPropertiesDimensionsProperties) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// The specific `Tag` to use for `Expression` .
type DataFilterExpressionPropertiesTagsProperties struct {
	Key    *string  `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// DataFilterExpressionPropertiesTagsPropertiesInput is an input type that accepts DataFilterExpressionPropertiesTagsPropertiesArgs and DataFilterExpressionPropertiesTagsPropertiesOutput values.
// You can construct a concrete instance of `DataFilterExpressionPropertiesTagsPropertiesInput` via:
//
//	DataFilterExpressionPropertiesTagsPropertiesArgs{...}
type DataFilterExpressionPropertiesTagsPropertiesInput interface {
	pulumi.Input

	ToDataFilterExpressionPropertiesTagsPropertiesOutput() DataFilterExpressionPropertiesTagsPropertiesOutput
	ToDataFilterExpressionPropertiesTagsPropertiesOutputWithContext(context.Context) DataFilterExpressionPropertiesTagsPropertiesOutput
}

// The specific `Tag` to use for `Expression` .
type DataFilterExpressionPropertiesTagsPropertiesArgs struct {
	Key    pulumi.StringPtrInput   `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DataFilterExpressionPropertiesTagsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFilterExpressionPropertiesTagsProperties)(nil)).Elem()
}

func (i DataFilterExpressionPropertiesTagsPropertiesArgs) ToDataFilterExpressionPropertiesTagsPropertiesOutput() DataFilterExpressionPropertiesTagsPropertiesOutput {
	return i.ToDataFilterExpressionPropertiesTagsPropertiesOutputWithContext(context.Background())
}

func (i DataFilterExpressionPropertiesTagsPropertiesArgs) ToDataFilterExpressionPropertiesTagsPropertiesOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesTagsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesTagsPropertiesOutput)
}

func (i DataFilterExpressionPropertiesTagsPropertiesArgs) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutput() DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return i.ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(context.Background())
}

func (i DataFilterExpressionPropertiesTagsPropertiesArgs) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesTagsPropertiesOutput).ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(ctx)
}

// DataFilterExpressionPropertiesTagsPropertiesPtrInput is an input type that accepts DataFilterExpressionPropertiesTagsPropertiesArgs, DataFilterExpressionPropertiesTagsPropertiesPtr and DataFilterExpressionPropertiesTagsPropertiesPtrOutput values.
// You can construct a concrete instance of `DataFilterExpressionPropertiesTagsPropertiesPtrInput` via:
//
//	        DataFilterExpressionPropertiesTagsPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataFilterExpressionPropertiesTagsPropertiesPtrInput interface {
	pulumi.Input

	ToDataFilterExpressionPropertiesTagsPropertiesPtrOutput() DataFilterExpressionPropertiesTagsPropertiesPtrOutput
	ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(context.Context) DataFilterExpressionPropertiesTagsPropertiesPtrOutput
}

type dataFilterExpressionPropertiesTagsPropertiesPtrType DataFilterExpressionPropertiesTagsPropertiesArgs

func DataFilterExpressionPropertiesTagsPropertiesPtr(v *DataFilterExpressionPropertiesTagsPropertiesArgs) DataFilterExpressionPropertiesTagsPropertiesPtrInput {
	return (*dataFilterExpressionPropertiesTagsPropertiesPtrType)(v)
}

func (*dataFilterExpressionPropertiesTagsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFilterExpressionPropertiesTagsProperties)(nil)).Elem()
}

func (i *dataFilterExpressionPropertiesTagsPropertiesPtrType) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutput() DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return i.ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataFilterExpressionPropertiesTagsPropertiesPtrType) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFilterExpressionPropertiesTagsPropertiesPtrOutput)
}

// The specific `Tag` to use for `Expression` .
type DataFilterExpressionPropertiesTagsPropertiesOutput struct{ *pulumi.OutputState }

func (DataFilterExpressionPropertiesTagsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFilterExpressionPropertiesTagsProperties)(nil)).Elem()
}

func (o DataFilterExpressionPropertiesTagsPropertiesOutput) ToDataFilterExpressionPropertiesTagsPropertiesOutput() DataFilterExpressionPropertiesTagsPropertiesOutput {
	return o
}

func (o DataFilterExpressionPropertiesTagsPropertiesOutput) ToDataFilterExpressionPropertiesTagsPropertiesOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesTagsPropertiesOutput {
	return o
}

func (o DataFilterExpressionPropertiesTagsPropertiesOutput) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutput() DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return o.ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(context.Background())
}

func (o DataFilterExpressionPropertiesTagsPropertiesOutput) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFilterExpressionPropertiesTagsProperties) *DataFilterExpressionPropertiesTagsProperties {
		return &v
	}).(DataFilterExpressionPropertiesTagsPropertiesPtrOutput)
}

func (o DataFilterExpressionPropertiesTagsPropertiesOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFilterExpressionPropertiesTagsProperties) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DataFilterExpressionPropertiesTagsPropertiesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataFilterExpressionPropertiesTagsProperties) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DataFilterExpressionPropertiesTagsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataFilterExpressionPropertiesTagsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFilterExpressionPropertiesTagsProperties)(nil)).Elem()
}

func (o DataFilterExpressionPropertiesTagsPropertiesPtrOutput) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutput() DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return o
}

func (o DataFilterExpressionPropertiesTagsPropertiesPtrOutput) ToDataFilterExpressionPropertiesTagsPropertiesPtrOutputWithContext(ctx context.Context) DataFilterExpressionPropertiesTagsPropertiesPtrOutput {
	return o
}

func (o DataFilterExpressionPropertiesTagsPropertiesPtrOutput) Elem() DataFilterExpressionPropertiesTagsPropertiesOutput {
	return o.ApplyT(func(v *DataFilterExpressionPropertiesTagsProperties) DataFilterExpressionPropertiesTagsProperties {
		if v != nil {
			return *v
		}
		var ret DataFilterExpressionPropertiesTagsProperties
		return ret
	}).(DataFilterExpressionPropertiesTagsPropertiesOutput)
}

func (o DataFilterExpressionPropertiesTagsPropertiesPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFilterExpressionPropertiesTagsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DataFilterExpressionPropertiesTagsPropertiesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataFilterExpressionPropertiesTagsProperties) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataFilterExpressionPropertiesInput)(nil)).Elem(), DataFilterExpressionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFilterExpressionPropertiesPtrInput)(nil)).Elem(), DataFilterExpressionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFilterExpressionPropertiesDimensionsPropertiesInput)(nil)).Elem(), DataFilterExpressionPropertiesDimensionsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFilterExpressionPropertiesDimensionsPropertiesPtrInput)(nil)).Elem(), DataFilterExpressionPropertiesDimensionsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFilterExpressionPropertiesTagsPropertiesInput)(nil)).Elem(), DataFilterExpressionPropertiesTagsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFilterExpressionPropertiesTagsPropertiesPtrInput)(nil)).Elem(), DataFilterExpressionPropertiesTagsPropertiesArgs{})
	pulumi.RegisterOutputType(DataFilterExpressionPropertiesOutput{})
	pulumi.RegisterOutputType(DataFilterExpressionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataFilterExpressionPropertiesDimensionsPropertiesOutput{})
	pulumi.RegisterOutputType(DataFilterExpressionPropertiesDimensionsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataFilterExpressionPropertiesTagsPropertiesOutput{})
	pulumi.RegisterOutputType(DataFilterExpressionPropertiesTagsPropertiesPtrOutput{})
}
