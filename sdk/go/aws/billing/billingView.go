// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A billing view is a container of cost & usage metadata.
type BillingView struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput   `pulumi:"arn"`
	BillingViewType BillingViewTypeOutput `pulumi:"billingViewType"`
	// The time when the billing view was created.
	CreatedAt            pulumi.Float64Output                    `pulumi:"createdAt"`
	DataFilterExpression DataFilterExpressionPropertiesPtrOutput `pulumi:"dataFilterExpression"`
	Description          pulumi.StringPtrOutput                  `pulumi:"description"`
	Name                 pulumi.StringOutput                     `pulumi:"name"`
	OwnerAccountId       pulumi.StringOutput                     `pulumi:"ownerAccountId"`
	// An array of strings that define the billing view's source.
	SourceViews pulumi.StringArrayOutput `pulumi:"sourceViews"`
	// An array of key-value pairs associated to the billing view being created.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The time when the billing view was last updated.
	UpdatedAt pulumi.Float64Output `pulumi:"updatedAt"`
}

// NewBillingView registers a new resource with the given unique name, arguments, and options.
func NewBillingView(ctx *pulumi.Context,
	name string, args *BillingViewArgs, opts ...pulumi.ResourceOption) (*BillingView, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceViews == nil {
		return nil, errors.New("invalid value for required argument 'SourceViews'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"description",
		"name",
		"sourceViews[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BillingView
	err := ctx.RegisterResource("aws-native:billing:BillingView", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBillingView gets an existing BillingView resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBillingView(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BillingViewState, opts ...pulumi.ResourceOption) (*BillingView, error) {
	var resource BillingView
	err := ctx.ReadResource("aws-native:billing:BillingView", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BillingView resources.
type billingViewState struct {
}

type BillingViewState struct {
}

func (BillingViewState) ElementType() reflect.Type {
	return reflect.TypeOf((*billingViewState)(nil)).Elem()
}

type billingViewArgs struct {
	DataFilterExpression *DataFilterExpressionProperties `pulumi:"dataFilterExpression"`
	Description          *string                         `pulumi:"description"`
	Name                 *string                         `pulumi:"name"`
	// An array of strings that define the billing view's source.
	SourceViews []string `pulumi:"sourceViews"`
	// An array of key-value pairs associated to the billing view being created.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a BillingView resource.
type BillingViewArgs struct {
	DataFilterExpression DataFilterExpressionPropertiesPtrInput
	Description          pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	// An array of strings that define the billing view's source.
	SourceViews pulumi.StringArrayInput
	// An array of key-value pairs associated to the billing view being created.
	Tags aws.TagArrayInput
}

func (BillingViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*billingViewArgs)(nil)).Elem()
}

type BillingViewInput interface {
	pulumi.Input

	ToBillingViewOutput() BillingViewOutput
	ToBillingViewOutputWithContext(ctx context.Context) BillingViewOutput
}

func (*BillingView) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingView)(nil)).Elem()
}

func (i *BillingView) ToBillingViewOutput() BillingViewOutput {
	return i.ToBillingViewOutputWithContext(context.Background())
}

func (i *BillingView) ToBillingViewOutputWithContext(ctx context.Context) BillingViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingViewOutput)
}

type BillingViewOutput struct{ *pulumi.OutputState }

func (BillingViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingView)(nil)).Elem()
}

func (o BillingViewOutput) ToBillingViewOutput() BillingViewOutput {
	return o
}

func (o BillingViewOutput) ToBillingViewOutputWithContext(ctx context.Context) BillingViewOutput {
	return o
}

func (o BillingViewOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingView) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o BillingViewOutput) BillingViewType() BillingViewTypeOutput {
	return o.ApplyT(func(v *BillingView) BillingViewTypeOutput { return v.BillingViewType }).(BillingViewTypeOutput)
}

// The time when the billing view was created.
func (o BillingViewOutput) CreatedAt() pulumi.Float64Output {
	return o.ApplyT(func(v *BillingView) pulumi.Float64Output { return v.CreatedAt }).(pulumi.Float64Output)
}

func (o BillingViewOutput) DataFilterExpression() DataFilterExpressionPropertiesPtrOutput {
	return o.ApplyT(func(v *BillingView) DataFilterExpressionPropertiesPtrOutput { return v.DataFilterExpression }).(DataFilterExpressionPropertiesPtrOutput)
}

func (o BillingViewOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingView) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BillingViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingView) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BillingViewOutput) OwnerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingView) pulumi.StringOutput { return v.OwnerAccountId }).(pulumi.StringOutput)
}

// An array of strings that define the billing view's source.
func (o BillingViewOutput) SourceViews() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BillingView) pulumi.StringArrayOutput { return v.SourceViews }).(pulumi.StringArrayOutput)
}

// An array of key-value pairs associated to the billing view being created.
func (o BillingViewOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *BillingView) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The time when the billing view was last updated.
func (o BillingViewOutput) UpdatedAt() pulumi.Float64Output {
	return o.ApplyT(func(v *BillingView) pulumi.Float64Output { return v.UpdatedAt }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BillingViewInput)(nil)).Elem(), &BillingView{})
	pulumi.RegisterOutputType(BillingViewOutput{})
}
