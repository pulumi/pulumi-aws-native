// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::SSMContacts::Rotation.
func LookupRotation(ctx *pulumi.Context, args *LookupRotationArgs, opts ...pulumi.InvokeOption) (*LookupRotationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRotationResult
	err := ctx.Invoke("aws-native:ssmcontacts:getRotation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRotationArgs struct {
	// The Amazon Resource Name (ARN) of the rotation.
	Arn string `pulumi:"arn"`
}

type LookupRotationResult struct {
	// The Amazon Resource Name (ARN) of the rotation.
	Arn *string `pulumi:"arn"`
	// Members of the rotation
	ContactIds []string `pulumi:"contactIds"`
	// Name of the Rotation
	Name       *string                     `pulumi:"name"`
	Recurrence *RotationRecurrenceSettings `pulumi:"recurrence"`
	// Start time of the first shift of Oncall Schedule
	StartTime *string       `pulumi:"startTime"`
	Tags      []RotationTag `pulumi:"tags"`
	// TimeZone Identifier for the Oncall Schedule
	TimeZoneId *string `pulumi:"timeZoneId"`
}

func LookupRotationOutput(ctx *pulumi.Context, args LookupRotationOutputArgs, opts ...pulumi.InvokeOption) LookupRotationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRotationResult, error) {
			args := v.(LookupRotationArgs)
			r, err := LookupRotation(ctx, &args, opts...)
			var s LookupRotationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRotationResultOutput)
}

type LookupRotationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the rotation.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupRotationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRotationArgs)(nil)).Elem()
}

type LookupRotationResultOutput struct{ *pulumi.OutputState }

func (LookupRotationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRotationResult)(nil)).Elem()
}

func (o LookupRotationResultOutput) ToLookupRotationResultOutput() LookupRotationResultOutput {
	return o
}

func (o LookupRotationResultOutput) ToLookupRotationResultOutputWithContext(ctx context.Context) LookupRotationResultOutput {
	return o
}

func (o LookupRotationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRotationResult] {
	return pulumix.Output[LookupRotationResult]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the rotation.
func (o LookupRotationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRotationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Members of the rotation
func (o LookupRotationResultOutput) ContactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRotationResult) []string { return v.ContactIds }).(pulumi.StringArrayOutput)
}

// Name of the Rotation
func (o LookupRotationResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRotationResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupRotationResultOutput) Recurrence() RotationRecurrenceSettingsPtrOutput {
	return o.ApplyT(func(v LookupRotationResult) *RotationRecurrenceSettings { return v.Recurrence }).(RotationRecurrenceSettingsPtrOutput)
}

// Start time of the first shift of Oncall Schedule
func (o LookupRotationResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRotationResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o LookupRotationResultOutput) Tags() RotationTagArrayOutput {
	return o.ApplyT(func(v LookupRotationResult) []RotationTag { return v.Tags }).(RotationTagArrayOutput)
}

// TimeZone Identifier for the Oncall Schedule
func (o LookupRotationResultOutput) TimeZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRotationResult) *string { return v.TimeZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRotationResultOutput{})
}
