// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html
type ContactChannel struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeladdress
	ChannelAddress pulumi.StringOutput `pulumi:"channelAddress"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channelname
	ChannelName pulumi.StringOutput `pulumi:"channelName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeltype
	ChannelType pulumi.StringOutput `pulumi:"channelType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-contactid
	ContactId pulumi.StringOutput `pulumi:"contactId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-deferactivation
	DeferActivation pulumi.BoolPtrOutput `pulumi:"deferActivation"`
}

// NewContactChannel registers a new resource with the given unique name, arguments, and options.
func NewContactChannel(ctx *pulumi.Context,
	name string, args *ContactChannelArgs, opts ...pulumi.ResourceOption) (*ContactChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChannelAddress == nil {
		return nil, errors.New("invalid value for required argument 'ChannelAddress'")
	}
	if args.ChannelName == nil {
		return nil, errors.New("invalid value for required argument 'ChannelName'")
	}
	if args.ChannelType == nil {
		return nil, errors.New("invalid value for required argument 'ChannelType'")
	}
	if args.ContactId == nil {
		return nil, errors.New("invalid value for required argument 'ContactId'")
	}
	var resource ContactChannel
	err := ctx.RegisterResource("aws-native:ssmcontacts:ContactChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactChannel gets an existing ContactChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactChannelState, opts ...pulumi.ResourceOption) (*ContactChannel, error) {
	var resource ContactChannel
	err := ctx.ReadResource("aws-native:ssmcontacts:ContactChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactChannel resources.
type contactChannelState struct {
}

type ContactChannelState struct {
}

func (ContactChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactChannelState)(nil)).Elem()
}

type contactChannelArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeladdress
	ChannelAddress string `pulumi:"channelAddress"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channelname
	ChannelName string `pulumi:"channelName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeltype
	ChannelType string `pulumi:"channelType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-contactid
	ContactId string `pulumi:"contactId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-deferactivation
	DeferActivation *bool `pulumi:"deferActivation"`
}

// The set of arguments for constructing a ContactChannel resource.
type ContactChannelArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeladdress
	ChannelAddress pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channelname
	ChannelName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeltype
	ChannelType pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-contactid
	ContactId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-deferactivation
	DeferActivation pulumi.BoolPtrInput
}

func (ContactChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactChannelArgs)(nil)).Elem()
}

type ContactChannelInput interface {
	pulumi.Input

	ToContactChannelOutput() ContactChannelOutput
	ToContactChannelOutputWithContext(ctx context.Context) ContactChannelOutput
}

func (*ContactChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactChannel)(nil))
}

func (i *ContactChannel) ToContactChannelOutput() ContactChannelOutput {
	return i.ToContactChannelOutputWithContext(context.Background())
}

func (i *ContactChannel) ToContactChannelOutputWithContext(ctx context.Context) ContactChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactChannelOutput)
}

type ContactChannelOutput struct{ *pulumi.OutputState }

func (ContactChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactChannel)(nil))
}

func (o ContactChannelOutput) ToContactChannelOutput() ContactChannelOutput {
	return o
}

func (o ContactChannelOutput) ToContactChannelOutputWithContext(ctx context.Context) ContactChannelOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ContactChannelOutput{})
}
