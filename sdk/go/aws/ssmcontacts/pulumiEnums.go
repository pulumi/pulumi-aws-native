// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT.
type ContactChannelChannelType string

const (
	ContactChannelChannelTypeSms   = ContactChannelChannelType("SMS")
	ContactChannelChannelTypeVoice = ContactChannelChannelType("VOICE")
	ContactChannelChannelTypeEmail = ContactChannelChannelType("EMAIL")
)

func (ContactChannelChannelType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactChannelChannelType)(nil)).Elem()
}

func (e ContactChannelChannelType) ToContactChannelChannelTypeOutput() ContactChannelChannelTypeOutput {
	return pulumi.ToOutput(e).(ContactChannelChannelTypeOutput)
}

func (e ContactChannelChannelType) ToContactChannelChannelTypeOutputWithContext(ctx context.Context) ContactChannelChannelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactChannelChannelTypeOutput)
}

func (e ContactChannelChannelType) ToContactChannelChannelTypePtrOutput() ContactChannelChannelTypePtrOutput {
	return e.ToContactChannelChannelTypePtrOutputWithContext(context.Background())
}

func (e ContactChannelChannelType) ToContactChannelChannelTypePtrOutputWithContext(ctx context.Context) ContactChannelChannelTypePtrOutput {
	return ContactChannelChannelType(e).ToContactChannelChannelTypeOutputWithContext(ctx).ToContactChannelChannelTypePtrOutputWithContext(ctx)
}

func (e ContactChannelChannelType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactChannelChannelType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactChannelChannelType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactChannelChannelType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactChannelChannelTypeOutput struct{ *pulumi.OutputState }

func (ContactChannelChannelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactChannelChannelType)(nil)).Elem()
}

func (o ContactChannelChannelTypeOutput) ToContactChannelChannelTypeOutput() ContactChannelChannelTypeOutput {
	return o
}

func (o ContactChannelChannelTypeOutput) ToContactChannelChannelTypeOutputWithContext(ctx context.Context) ContactChannelChannelTypeOutput {
	return o
}

func (o ContactChannelChannelTypeOutput) ToContactChannelChannelTypePtrOutput() ContactChannelChannelTypePtrOutput {
	return o.ToContactChannelChannelTypePtrOutputWithContext(context.Background())
}

func (o ContactChannelChannelTypeOutput) ToContactChannelChannelTypePtrOutputWithContext(ctx context.Context) ContactChannelChannelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactChannelChannelType) *ContactChannelChannelType {
		return &v
	}).(ContactChannelChannelTypePtrOutput)
}

func (o ContactChannelChannelTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactChannelChannelTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactChannelChannelType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactChannelChannelTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactChannelChannelTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactChannelChannelType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactChannelChannelTypePtrOutput struct{ *pulumi.OutputState }

func (ContactChannelChannelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactChannelChannelType)(nil)).Elem()
}

func (o ContactChannelChannelTypePtrOutput) ToContactChannelChannelTypePtrOutput() ContactChannelChannelTypePtrOutput {
	return o
}

func (o ContactChannelChannelTypePtrOutput) ToContactChannelChannelTypePtrOutputWithContext(ctx context.Context) ContactChannelChannelTypePtrOutput {
	return o
}

func (o ContactChannelChannelTypePtrOutput) Elem() ContactChannelChannelTypeOutput {
	return o.ApplyT(func(v *ContactChannelChannelType) ContactChannelChannelType {
		if v != nil {
			return *v
		}
		var ret ContactChannelChannelType
		return ret
	}).(ContactChannelChannelTypeOutput)
}

func (o ContactChannelChannelTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactChannelChannelTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactChannelChannelType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactChannelChannelTypeInput is an input type that accepts ContactChannelChannelTypeArgs and ContactChannelChannelTypeOutput values.
// You can construct a concrete instance of `ContactChannelChannelTypeInput` via:
//
//          ContactChannelChannelTypeArgs{...}
type ContactChannelChannelTypeInput interface {
	pulumi.Input

	ToContactChannelChannelTypeOutput() ContactChannelChannelTypeOutput
	ToContactChannelChannelTypeOutputWithContext(context.Context) ContactChannelChannelTypeOutput
}

var contactChannelChannelTypePtrType = reflect.TypeOf((**ContactChannelChannelType)(nil)).Elem()

type ContactChannelChannelTypePtrInput interface {
	pulumi.Input

	ToContactChannelChannelTypePtrOutput() ContactChannelChannelTypePtrOutput
	ToContactChannelChannelTypePtrOutputWithContext(context.Context) ContactChannelChannelTypePtrOutput
}

type contactChannelChannelTypePtr string

func ContactChannelChannelTypePtr(v string) ContactChannelChannelTypePtrInput {
	return (*contactChannelChannelTypePtr)(&v)
}

func (*contactChannelChannelTypePtr) ElementType() reflect.Type {
	return contactChannelChannelTypePtrType
}

func (in *contactChannelChannelTypePtr) ToContactChannelChannelTypePtrOutput() ContactChannelChannelTypePtrOutput {
	return pulumi.ToOutput(in).(ContactChannelChannelTypePtrOutput)
}

func (in *contactChannelChannelTypePtr) ToContactChannelChannelTypePtrOutputWithContext(ctx context.Context) ContactChannelChannelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactChannelChannelTypePtrOutput)
}

// Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“.
type ContactType string

const (
	ContactTypePersonal   = ContactType("PERSONAL")
	ContactTypeCustom     = ContactType("CUSTOM")
	ContactTypeService    = ContactType("SERVICE")
	ContactTypeEscalation = ContactType("ESCALATION")
)

func (ContactType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactType)(nil)).Elem()
}

func (e ContactType) ToContactTypeOutput() ContactTypeOutput {
	return pulumi.ToOutput(e).(ContactTypeOutput)
}

func (e ContactType) ToContactTypeOutputWithContext(ctx context.Context) ContactTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactTypeOutput)
}

func (e ContactType) ToContactTypePtrOutput() ContactTypePtrOutput {
	return e.ToContactTypePtrOutputWithContext(context.Background())
}

func (e ContactType) ToContactTypePtrOutputWithContext(ctx context.Context) ContactTypePtrOutput {
	return ContactType(e).ToContactTypeOutputWithContext(ctx).ToContactTypePtrOutputWithContext(ctx)
}

func (e ContactType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactTypeOutput struct{ *pulumi.OutputState }

func (ContactTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactType)(nil)).Elem()
}

func (o ContactTypeOutput) ToContactTypeOutput() ContactTypeOutput {
	return o
}

func (o ContactTypeOutput) ToContactTypeOutputWithContext(ctx context.Context) ContactTypeOutput {
	return o
}

func (o ContactTypeOutput) ToContactTypePtrOutput() ContactTypePtrOutput {
	return o.ToContactTypePtrOutputWithContext(context.Background())
}

func (o ContactTypeOutput) ToContactTypePtrOutputWithContext(ctx context.Context) ContactTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactType) *ContactType {
		return &v
	}).(ContactTypePtrOutput)
}

func (o ContactTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactTypePtrOutput struct{ *pulumi.OutputState }

func (ContactTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactType)(nil)).Elem()
}

func (o ContactTypePtrOutput) ToContactTypePtrOutput() ContactTypePtrOutput {
	return o
}

func (o ContactTypePtrOutput) ToContactTypePtrOutputWithContext(ctx context.Context) ContactTypePtrOutput {
	return o
}

func (o ContactTypePtrOutput) Elem() ContactTypeOutput {
	return o.ApplyT(func(v *ContactType) ContactType {
		if v != nil {
			return *v
		}
		var ret ContactType
		return ret
	}).(ContactTypeOutput)
}

func (o ContactTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactTypeInput is an input type that accepts ContactTypeArgs and ContactTypeOutput values.
// You can construct a concrete instance of `ContactTypeInput` via:
//
//          ContactTypeArgs{...}
type ContactTypeInput interface {
	pulumi.Input

	ToContactTypeOutput() ContactTypeOutput
	ToContactTypeOutputWithContext(context.Context) ContactTypeOutput
}

var contactTypePtrType = reflect.TypeOf((**ContactType)(nil)).Elem()

type ContactTypePtrInput interface {
	pulumi.Input

	ToContactTypePtrOutput() ContactTypePtrOutput
	ToContactTypePtrOutputWithContext(context.Context) ContactTypePtrOutput
}

type contactTypePtr string

func ContactTypePtr(v string) ContactTypePtrInput {
	return (*contactTypePtr)(&v)
}

func (*contactTypePtr) ElementType() reflect.Type {
	return contactTypePtrType
}

func (in *contactTypePtr) ToContactTypePtrOutput() ContactTypePtrOutput {
	return pulumi.ToOutput(in).(ContactTypePtrOutput)
}

func (in *contactTypePtr) ToContactTypePtrOutputWithContext(ctx context.Context) ContactTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactChannelChannelTypeInput)(nil)).Elem(), ContactChannelChannelType("SMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactChannelChannelTypePtrInput)(nil)).Elem(), ContactChannelChannelType("SMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactTypeInput)(nil)).Elem(), ContactType("PERSONAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactTypePtrInput)(nil)).Elem(), ContactType("PERSONAL"))
	pulumi.RegisterOutputType(ContactChannelChannelTypeOutput{})
	pulumi.RegisterOutputType(ContactChannelChannelTypePtrOutput{})
	pulumi.RegisterOutputType(ContactTypeOutput{})
	pulumi.RegisterOutputType(ContactTypePtrOutput{})
}
