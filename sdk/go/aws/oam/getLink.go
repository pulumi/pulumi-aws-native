// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Oam::Link Resource Type
func LookupLink(ctx *pulumi.Context, args *LookupLinkArgs, opts ...pulumi.InvokeOption) (*LookupLinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLinkResult
	err := ctx.Invoke("aws-native:oam:getLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLinkArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupLinkResult struct {
	Arn           *string            `pulumi:"arn"`
	Label         *string            `pulumi:"label"`
	ResourceTypes []LinkResourceType `pulumi:"resourceTypes"`
	// Tags to apply to the link
	Tags map[string]string `pulumi:"tags"`
}

func LookupLinkOutput(ctx *pulumi.Context, args LookupLinkOutputArgs, opts ...pulumi.InvokeOption) LookupLinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLinkResult, error) {
			args := v.(LookupLinkArgs)
			r, err := LookupLink(ctx, &args, opts...)
			var s LookupLinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLinkResultOutput)
}

type LookupLinkOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLinkArgs)(nil)).Elem()
}

type LookupLinkResultOutput struct{ *pulumi.OutputState }

func (LookupLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLinkResult)(nil)).Elem()
}

func (o LookupLinkResultOutput) ToLookupLinkResultOutput() LookupLinkResultOutput {
	return o
}

func (o LookupLinkResultOutput) ToLookupLinkResultOutputWithContext(ctx context.Context) LookupLinkResultOutput {
	return o
}

func (o LookupLinkResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLinkResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupLinkResultOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLinkResult) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o LookupLinkResultOutput) ResourceTypes() LinkResourceTypeArrayOutput {
	return o.ApplyT(func(v LookupLinkResult) []LinkResourceType { return v.ResourceTypes }).(LinkResourceTypeArrayOutput)
}

// Tags to apply to the link
func (o LookupLinkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLinkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLinkResultOutput{})
}
