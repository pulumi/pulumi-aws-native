// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LinkConfiguration struct {
	// Use this structure to filter which log groups are to send log events from the source account to the monitoring account.
	LogGroupConfiguration *LinkFilter `pulumi:"logGroupConfiguration"`
	// Use this structure to filter which metric namespaces are to be shared from the source account to the monitoring account.
	MetricConfiguration *LinkFilter `pulumi:"metricConfiguration"`
}

// LinkConfigurationInput is an input type that accepts LinkConfigurationArgs and LinkConfigurationOutput values.
// You can construct a concrete instance of `LinkConfigurationInput` via:
//
//	LinkConfigurationArgs{...}
type LinkConfigurationInput interface {
	pulumi.Input

	ToLinkConfigurationOutput() LinkConfigurationOutput
	ToLinkConfigurationOutputWithContext(context.Context) LinkConfigurationOutput
}

type LinkConfigurationArgs struct {
	// Use this structure to filter which log groups are to send log events from the source account to the monitoring account.
	LogGroupConfiguration LinkFilterPtrInput `pulumi:"logGroupConfiguration"`
	// Use this structure to filter which metric namespaces are to be shared from the source account to the monitoring account.
	MetricConfiguration LinkFilterPtrInput `pulumi:"metricConfiguration"`
}

func (LinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkConfiguration)(nil)).Elem()
}

func (i LinkConfigurationArgs) ToLinkConfigurationOutput() LinkConfigurationOutput {
	return i.ToLinkConfigurationOutputWithContext(context.Background())
}

func (i LinkConfigurationArgs) ToLinkConfigurationOutputWithContext(ctx context.Context) LinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkConfigurationOutput)
}

func (i LinkConfigurationArgs) ToLinkConfigurationPtrOutput() LinkConfigurationPtrOutput {
	return i.ToLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i LinkConfigurationArgs) ToLinkConfigurationPtrOutputWithContext(ctx context.Context) LinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkConfigurationOutput).ToLinkConfigurationPtrOutputWithContext(ctx)
}

// LinkConfigurationPtrInput is an input type that accepts LinkConfigurationArgs, LinkConfigurationPtr and LinkConfigurationPtrOutput values.
// You can construct a concrete instance of `LinkConfigurationPtrInput` via:
//
//	        LinkConfigurationArgs{...}
//
//	or:
//
//	        nil
type LinkConfigurationPtrInput interface {
	pulumi.Input

	ToLinkConfigurationPtrOutput() LinkConfigurationPtrOutput
	ToLinkConfigurationPtrOutputWithContext(context.Context) LinkConfigurationPtrOutput
}

type linkConfigurationPtrType LinkConfigurationArgs

func LinkConfigurationPtr(v *LinkConfigurationArgs) LinkConfigurationPtrInput {
	return (*linkConfigurationPtrType)(v)
}

func (*linkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkConfiguration)(nil)).Elem()
}

func (i *linkConfigurationPtrType) ToLinkConfigurationPtrOutput() LinkConfigurationPtrOutput {
	return i.ToLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i *linkConfigurationPtrType) ToLinkConfigurationPtrOutputWithContext(ctx context.Context) LinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkConfigurationPtrOutput)
}

type LinkConfigurationOutput struct{ *pulumi.OutputState }

func (LinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkConfiguration)(nil)).Elem()
}

func (o LinkConfigurationOutput) ToLinkConfigurationOutput() LinkConfigurationOutput {
	return o
}

func (o LinkConfigurationOutput) ToLinkConfigurationOutputWithContext(ctx context.Context) LinkConfigurationOutput {
	return o
}

func (o LinkConfigurationOutput) ToLinkConfigurationPtrOutput() LinkConfigurationPtrOutput {
	return o.ToLinkConfigurationPtrOutputWithContext(context.Background())
}

func (o LinkConfigurationOutput) ToLinkConfigurationPtrOutputWithContext(ctx context.Context) LinkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkConfiguration) *LinkConfiguration {
		return &v
	}).(LinkConfigurationPtrOutput)
}

// Use this structure to filter which log groups are to send log events from the source account to the monitoring account.
func (o LinkConfigurationOutput) LogGroupConfiguration() LinkFilterPtrOutput {
	return o.ApplyT(func(v LinkConfiguration) *LinkFilter { return v.LogGroupConfiguration }).(LinkFilterPtrOutput)
}

// Use this structure to filter which metric namespaces are to be shared from the source account to the monitoring account.
func (o LinkConfigurationOutput) MetricConfiguration() LinkFilterPtrOutput {
	return o.ApplyT(func(v LinkConfiguration) *LinkFilter { return v.MetricConfiguration }).(LinkFilterPtrOutput)
}

type LinkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LinkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkConfiguration)(nil)).Elem()
}

func (o LinkConfigurationPtrOutput) ToLinkConfigurationPtrOutput() LinkConfigurationPtrOutput {
	return o
}

func (o LinkConfigurationPtrOutput) ToLinkConfigurationPtrOutputWithContext(ctx context.Context) LinkConfigurationPtrOutput {
	return o
}

func (o LinkConfigurationPtrOutput) Elem() LinkConfigurationOutput {
	return o.ApplyT(func(v *LinkConfiguration) LinkConfiguration {
		if v != nil {
			return *v
		}
		var ret LinkConfiguration
		return ret
	}).(LinkConfigurationOutput)
}

// Use this structure to filter which log groups are to send log events from the source account to the monitoring account.
func (o LinkConfigurationPtrOutput) LogGroupConfiguration() LinkFilterPtrOutput {
	return o.ApplyT(func(v *LinkConfiguration) *LinkFilter {
		if v == nil {
			return nil
		}
		return v.LogGroupConfiguration
	}).(LinkFilterPtrOutput)
}

// Use this structure to filter which metric namespaces are to be shared from the source account to the monitoring account.
func (o LinkConfigurationPtrOutput) MetricConfiguration() LinkFilterPtrOutput {
	return o.ApplyT(func(v *LinkConfiguration) *LinkFilter {
		if v == nil {
			return nil
		}
		return v.MetricConfiguration
	}).(LinkFilterPtrOutput)
}

type LinkFilter struct {
	Filter string `pulumi:"filter"`
}

// LinkFilterInput is an input type that accepts LinkFilterArgs and LinkFilterOutput values.
// You can construct a concrete instance of `LinkFilterInput` via:
//
//	LinkFilterArgs{...}
type LinkFilterInput interface {
	pulumi.Input

	ToLinkFilterOutput() LinkFilterOutput
	ToLinkFilterOutputWithContext(context.Context) LinkFilterOutput
}

type LinkFilterArgs struct {
	Filter pulumi.StringInput `pulumi:"filter"`
}

func (LinkFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkFilter)(nil)).Elem()
}

func (i LinkFilterArgs) ToLinkFilterOutput() LinkFilterOutput {
	return i.ToLinkFilterOutputWithContext(context.Background())
}

func (i LinkFilterArgs) ToLinkFilterOutputWithContext(ctx context.Context) LinkFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkFilterOutput)
}

func (i LinkFilterArgs) ToLinkFilterPtrOutput() LinkFilterPtrOutput {
	return i.ToLinkFilterPtrOutputWithContext(context.Background())
}

func (i LinkFilterArgs) ToLinkFilterPtrOutputWithContext(ctx context.Context) LinkFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkFilterOutput).ToLinkFilterPtrOutputWithContext(ctx)
}

// LinkFilterPtrInput is an input type that accepts LinkFilterArgs, LinkFilterPtr and LinkFilterPtrOutput values.
// You can construct a concrete instance of `LinkFilterPtrInput` via:
//
//	        LinkFilterArgs{...}
//
//	or:
//
//	        nil
type LinkFilterPtrInput interface {
	pulumi.Input

	ToLinkFilterPtrOutput() LinkFilterPtrOutput
	ToLinkFilterPtrOutputWithContext(context.Context) LinkFilterPtrOutput
}

type linkFilterPtrType LinkFilterArgs

func LinkFilterPtr(v *LinkFilterArgs) LinkFilterPtrInput {
	return (*linkFilterPtrType)(v)
}

func (*linkFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkFilter)(nil)).Elem()
}

func (i *linkFilterPtrType) ToLinkFilterPtrOutput() LinkFilterPtrOutput {
	return i.ToLinkFilterPtrOutputWithContext(context.Background())
}

func (i *linkFilterPtrType) ToLinkFilterPtrOutputWithContext(ctx context.Context) LinkFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkFilterPtrOutput)
}

type LinkFilterOutput struct{ *pulumi.OutputState }

func (LinkFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkFilter)(nil)).Elem()
}

func (o LinkFilterOutput) ToLinkFilterOutput() LinkFilterOutput {
	return o
}

func (o LinkFilterOutput) ToLinkFilterOutputWithContext(ctx context.Context) LinkFilterOutput {
	return o
}

func (o LinkFilterOutput) ToLinkFilterPtrOutput() LinkFilterPtrOutput {
	return o.ToLinkFilterPtrOutputWithContext(context.Background())
}

func (o LinkFilterOutput) ToLinkFilterPtrOutputWithContext(ctx context.Context) LinkFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkFilter) *LinkFilter {
		return &v
	}).(LinkFilterPtrOutput)
}

func (o LinkFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v LinkFilter) string { return v.Filter }).(pulumi.StringOutput)
}

type LinkFilterPtrOutput struct{ *pulumi.OutputState }

func (LinkFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkFilter)(nil)).Elem()
}

func (o LinkFilterPtrOutput) ToLinkFilterPtrOutput() LinkFilterPtrOutput {
	return o
}

func (o LinkFilterPtrOutput) ToLinkFilterPtrOutputWithContext(ctx context.Context) LinkFilterPtrOutput {
	return o
}

func (o LinkFilterPtrOutput) Elem() LinkFilterOutput {
	return o.ApplyT(func(v *LinkFilter) LinkFilter {
		if v != nil {
			return *v
		}
		var ret LinkFilter
		return ret
	}).(LinkFilterOutput)
}

func (o LinkFilterPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LinkConfigurationInput)(nil)).Elem(), LinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkConfigurationPtrInput)(nil)).Elem(), LinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkFilterInput)(nil)).Elem(), LinkFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkFilterPtrInput)(nil)).Elem(), LinkFilterArgs{})
	pulumi.RegisterOutputType(LinkConfigurationOutput{})
	pulumi.RegisterOutputType(LinkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LinkFilterOutput{})
	pulumi.RegisterOutputType(LinkFilterPtrOutput{})
}
