// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Oam::Sink
func LookupSink(ctx *pulumi.Context, args *LookupSinkArgs, opts ...pulumi.InvokeOption) (*LookupSinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSinkResult
	err := ctx.Invoke("aws-native:oam:getSink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSinkArgs struct {
	// The Amazon resource name (ARN) of the ObservabilityAccessManager Sink
	Arn string `pulumi:"arn"`
}

type LookupSinkResult struct {
	// The Amazon resource name (ARN) of the ObservabilityAccessManager Sink
	Arn *string `pulumi:"arn"`
	// The policy of this ObservabilityAccessManager Sink.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Oam::Sink` for more information about the expected schema for this property.
	Policy interface{} `pulumi:"policy"`
	// Tags to apply to the sink
	Tags map[string]string `pulumi:"tags"`
}

func LookupSinkOutput(ctx *pulumi.Context, args LookupSinkOutputArgs, opts ...pulumi.InvokeOption) LookupSinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSinkResultOutput, error) {
			args := v.(LookupSinkArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSinkResult
			secret, err := ctx.InvokePackageRaw("aws-native:oam:getSink", args, &rv, "", opts...)
			if err != nil {
				return LookupSinkResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSinkResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSinkResultOutput), nil
			}
			return output, nil
		}).(LookupSinkResultOutput)
}

type LookupSinkOutputArgs struct {
	// The Amazon resource name (ARN) of the ObservabilityAccessManager Sink
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupSinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSinkArgs)(nil)).Elem()
}

type LookupSinkResultOutput struct{ *pulumi.OutputState }

func (LookupSinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSinkResult)(nil)).Elem()
}

func (o LookupSinkResultOutput) ToLookupSinkResultOutput() LookupSinkResultOutput {
	return o
}

func (o LookupSinkResultOutput) ToLookupSinkResultOutputWithContext(ctx context.Context) LookupSinkResultOutput {
	return o
}

// The Amazon resource name (ARN) of the ObservabilityAccessManager Sink
func (o LookupSinkResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSinkResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The policy of this ObservabilityAccessManager Sink.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Oam::Sink` for more information about the expected schema for this property.
func (o LookupSinkResultOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupSinkResult) interface{} { return v.Policy }).(pulumi.AnyOutput)
}

// Tags to apply to the sink
func (o LookupSinkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSinkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSinkResultOutput{})
}
