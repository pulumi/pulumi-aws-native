// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
func LookupAccountAuditConfiguration(ctx *pulumi.Context, args *LookupAccountAuditConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupAccountAuditConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountAuditConfigurationResult
	err := ctx.Invoke("aws-native:iot:getAccountAuditConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccountAuditConfigurationArgs struct {
	// Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
	AccountId string `pulumi:"accountId"`
}

type LookupAccountAuditConfigurationResult struct {
	// Specifies which audit checks are enabled and disabled for this account.
	//
	// Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted. To disable a check, set the value of the `Enabled:` key to `false` .
	//
	// If an enabled check is removed from the template, it will also be disabled.
	//
	// You can't disable a check if it's used by any scheduled audit. You must delete the check from the scheduled audit or delete the scheduled audit itself to disable the check.
	//
	// For more information on available audit checks see [AWS::IoT::AccountAuditConfiguration AuditCheckConfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-accountauditconfiguration-auditcheckconfigurations.html)
	AuditCheckConfigurations *AccountAuditConfigurationAuditCheckConfigurations `pulumi:"auditCheckConfigurations"`
	// Information about the targets to which audit notifications are sent.
	AuditNotificationTargetConfigurations *AccountAuditConfigurationAuditNotificationTargetConfigurations `pulumi:"auditNotificationTargetConfigurations"`
	// The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
	RoleArn *string `pulumi:"roleArn"`
}

func LookupAccountAuditConfigurationOutput(ctx *pulumi.Context, args LookupAccountAuditConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupAccountAuditConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountAuditConfigurationResultOutput, error) {
			args := v.(LookupAccountAuditConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iot:getAccountAuditConfiguration", args, LookupAccountAuditConfigurationResultOutput{}, options).(LookupAccountAuditConfigurationResultOutput), nil
		}).(LookupAccountAuditConfigurationResultOutput)
}

type LookupAccountAuditConfigurationOutputArgs struct {
	// Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupAccountAuditConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountAuditConfigurationArgs)(nil)).Elem()
}

type LookupAccountAuditConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupAccountAuditConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountAuditConfigurationResult)(nil)).Elem()
}

func (o LookupAccountAuditConfigurationResultOutput) ToLookupAccountAuditConfigurationResultOutput() LookupAccountAuditConfigurationResultOutput {
	return o
}

func (o LookupAccountAuditConfigurationResultOutput) ToLookupAccountAuditConfigurationResultOutputWithContext(ctx context.Context) LookupAccountAuditConfigurationResultOutput {
	return o
}

// Specifies which audit checks are enabled and disabled for this account.
//
// Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted. To disable a check, set the value of the `Enabled:` key to `false` .
//
// If an enabled check is removed from the template, it will also be disabled.
//
// You can't disable a check if it's used by any scheduled audit. You must delete the check from the scheduled audit or delete the scheduled audit itself to disable the check.
//
// For more information on available audit checks see [AWS::IoT::AccountAuditConfiguration AuditCheckConfigurations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-accountauditconfiguration-auditcheckconfigurations.html)
func (o LookupAccountAuditConfigurationResultOutput) AuditCheckConfigurations() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o.ApplyT(func(v LookupAccountAuditConfigurationResult) *AccountAuditConfigurationAuditCheckConfigurations {
		return v.AuditCheckConfigurations
	}).(AccountAuditConfigurationAuditCheckConfigurationsPtrOutput)
}

// Information about the targets to which audit notifications are sent.
func (o LookupAccountAuditConfigurationResultOutput) AuditNotificationTargetConfigurations() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o.ApplyT(func(v LookupAccountAuditConfigurationResult) *AccountAuditConfigurationAuditNotificationTargetConfigurations {
		return v.AuditNotificationTargetConfigurations
	}).(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput)
}

// The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
func (o LookupAccountAuditConfigurationResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountAuditConfigurationResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountAuditConfigurationResultOutput{})
}
