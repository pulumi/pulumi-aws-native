// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents the resource definition of AWS IoT Command.
func LookupCommand(ctx *pulumi.Context, args *LookupCommandArgs, opts ...pulumi.InvokeOption) (*LookupCommandResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCommandResult
	err := ctx.Invoke("aws-native:iot:getCommand", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCommandArgs struct {
	// The unique identifier for the command.
	CommandId string `pulumi:"commandId"`
}

type LookupCommandResult struct {
	// The Amazon Resource Name (ARN) of the command.
	CommandArn *string `pulumi:"commandArn"`
	// The date and time when the command was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A flag indicating whether the command is deprecated.
	Deprecated *bool `pulumi:"deprecated"`
	// The description of the command.
	Description *string `pulumi:"description"`
	// The display name for the command.
	DisplayName *string `pulumi:"displayName"`
	// The list of mandatory parameters for the command.
	MandatoryParameters []CommandParameter `pulumi:"mandatoryParameters"`
	// The namespace to which the command belongs.
	Namespace *CommandNamespace `pulumi:"namespace"`
	// The payload associated with the command.
	Payload *CommandPayload `pulumi:"payload"`
	// A flag indicating whether the command is pending deletion.
	PendingDeletion *bool `pulumi:"pendingDeletion"`
	// The customer role associated with the command.
	RoleArn *string `pulumi:"roleArn"`
	// The tags to be associated with the command.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCommandOutput(ctx *pulumi.Context, args LookupCommandOutputArgs, opts ...pulumi.InvokeOption) LookupCommandResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCommandResultOutput, error) {
			args := v.(LookupCommandArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCommandResult
			secret, err := ctx.InvokePackageRaw("aws-native:iot:getCommand", args, &rv, "", opts...)
			if err != nil {
				return LookupCommandResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCommandResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCommandResultOutput), nil
			}
			return output, nil
		}).(LookupCommandResultOutput)
}

type LookupCommandOutputArgs struct {
	// The unique identifier for the command.
	CommandId pulumi.StringInput `pulumi:"commandId"`
}

func (LookupCommandOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommandArgs)(nil)).Elem()
}

type LookupCommandResultOutput struct{ *pulumi.OutputState }

func (LookupCommandResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommandResult)(nil)).Elem()
}

func (o LookupCommandResultOutput) ToLookupCommandResultOutput() LookupCommandResultOutput {
	return o
}

func (o LookupCommandResultOutput) ToLookupCommandResultOutputWithContext(ctx context.Context) LookupCommandResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the command.
func (o LookupCommandResultOutput) CommandArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *string { return v.CommandArn }).(pulumi.StringPtrOutput)
}

// The date and time when the command was created.
func (o LookupCommandResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A flag indicating whether the command is deprecated.
func (o LookupCommandResultOutput) Deprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *bool { return v.Deprecated }).(pulumi.BoolPtrOutput)
}

// The description of the command.
func (o LookupCommandResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name for the command.
func (o LookupCommandResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of mandatory parameters for the command.
func (o LookupCommandResultOutput) MandatoryParameters() CommandParameterArrayOutput {
	return o.ApplyT(func(v LookupCommandResult) []CommandParameter { return v.MandatoryParameters }).(CommandParameterArrayOutput)
}

// The namespace to which the command belongs.
func (o LookupCommandResultOutput) Namespace() CommandNamespacePtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *CommandNamespace { return v.Namespace }).(CommandNamespacePtrOutput)
}

// The payload associated with the command.
func (o LookupCommandResultOutput) Payload() CommandPayloadPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *CommandPayload { return v.Payload }).(CommandPayloadPtrOutput)
}

// A flag indicating whether the command is pending deletion.
func (o LookupCommandResultOutput) PendingDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *bool { return v.PendingDeletion }).(pulumi.BoolPtrOutput)
}

// The customer role associated with the command.
func (o LookupCommandResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommandResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The tags to be associated with the command.
func (o LookupCommandResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCommandResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCommandResultOutput{})
}
