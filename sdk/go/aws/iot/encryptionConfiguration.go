// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoT::EncryptionConfiguration
type EncryptionConfiguration struct {
	pulumi.CustomResourceState

	AccountId            pulumi.StringOutput                         `pulumi:"accountId"`
	ConfigurationDetails ConfigurationDetailsPropertiesOutput        `pulumi:"configurationDetails"`
	EncryptionType       EncryptionConfigurationEncryptionTypeOutput `pulumi:"encryptionType"`
	KmsAccessRoleArn     pulumi.StringPtrOutput                      `pulumi:"kmsAccessRoleArn"`
	KmsKeyArn            pulumi.StringPtrOutput                      `pulumi:"kmsKeyArn"`
	LastModifiedDate     pulumi.StringOutput                         `pulumi:"lastModifiedDate"`
}

// NewEncryptionConfiguration registers a new resource with the given unique name, arguments, and options.
func NewEncryptionConfiguration(ctx *pulumi.Context,
	name string, args *EncryptionConfigurationArgs, opts ...pulumi.ResourceOption) (*EncryptionConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EncryptionType == nil {
		return nil, errors.New("invalid value for required argument 'EncryptionType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EncryptionConfiguration
	err := ctx.RegisterResource("aws-native:iot:EncryptionConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEncryptionConfiguration gets an existing EncryptionConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEncryptionConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EncryptionConfigurationState, opts ...pulumi.ResourceOption) (*EncryptionConfiguration, error) {
	var resource EncryptionConfiguration
	err := ctx.ReadResource("aws-native:iot:EncryptionConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EncryptionConfiguration resources.
type encryptionConfigurationState struct {
}

type EncryptionConfigurationState struct {
}

func (EncryptionConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionConfigurationState)(nil)).Elem()
}

type encryptionConfigurationArgs struct {
	EncryptionType   EncryptionConfigurationEncryptionType `pulumi:"encryptionType"`
	KmsAccessRoleArn *string                               `pulumi:"kmsAccessRoleArn"`
	KmsKeyArn        *string                               `pulumi:"kmsKeyArn"`
}

// The set of arguments for constructing a EncryptionConfiguration resource.
type EncryptionConfigurationArgs struct {
	EncryptionType   EncryptionConfigurationEncryptionTypeInput
	KmsAccessRoleArn pulumi.StringPtrInput
	KmsKeyArn        pulumi.StringPtrInput
}

func (EncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionConfigurationArgs)(nil)).Elem()
}

type EncryptionConfigurationInput interface {
	pulumi.Input

	ToEncryptionConfigurationOutput() EncryptionConfigurationOutput
	ToEncryptionConfigurationOutputWithContext(ctx context.Context) EncryptionConfigurationOutput
}

func (*EncryptionConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfiguration)(nil)).Elem()
}

func (i *EncryptionConfiguration) ToEncryptionConfigurationOutput() EncryptionConfigurationOutput {
	return i.ToEncryptionConfigurationOutputWithContext(context.Background())
}

func (i *EncryptionConfiguration) ToEncryptionConfigurationOutputWithContext(ctx context.Context) EncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigurationOutput)
}

type EncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (EncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfiguration)(nil)).Elem()
}

func (o EncryptionConfigurationOutput) ToEncryptionConfigurationOutput() EncryptionConfigurationOutput {
	return o
}

func (o EncryptionConfigurationOutput) ToEncryptionConfigurationOutputWithContext(ctx context.Context) EncryptionConfigurationOutput {
	return o
}

func (o EncryptionConfigurationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionConfiguration) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o EncryptionConfigurationOutput) ConfigurationDetails() ConfigurationDetailsPropertiesOutput {
	return o.ApplyT(func(v *EncryptionConfiguration) ConfigurationDetailsPropertiesOutput { return v.ConfigurationDetails }).(ConfigurationDetailsPropertiesOutput)
}

func (o EncryptionConfigurationOutput) EncryptionType() EncryptionConfigurationEncryptionTypeOutput {
	return o.ApplyT(func(v *EncryptionConfiguration) EncryptionConfigurationEncryptionTypeOutput { return v.EncryptionType }).(EncryptionConfigurationEncryptionTypeOutput)
}

func (o EncryptionConfigurationOutput) KmsAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfiguration) pulumi.StringPtrOutput { return v.KmsAccessRoleArn }).(pulumi.StringPtrOutput)
}

func (o EncryptionConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfiguration) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o EncryptionConfigurationOutput) LastModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionConfiguration) pulumi.StringOutput { return v.LastModifiedDate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionConfigurationInput)(nil)).Elem(), &EncryptionConfiguration{})
	pulumi.RegisterOutputType(EncryptionConfigurationOutput{})
}
