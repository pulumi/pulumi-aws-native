// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the AWS::IoT::RoleAlias resource to declare an AWS IoT RoleAlias.
type RoleAlias struct {
	pulumi.CustomResourceState

	CredentialDurationSeconds pulumi.IntPtrOutput     `pulumi:"credentialDurationSeconds"`
	RoleAlias                 pulumi.StringPtrOutput  `pulumi:"roleAlias"`
	RoleAliasArn              pulumi.StringOutput     `pulumi:"roleAliasArn"`
	RoleArn                   pulumi.StringOutput     `pulumi:"roleArn"`
	Tags                      RoleAliasTagArrayOutput `pulumi:"tags"`
}

// NewRoleAlias registers a new resource with the given unique name, arguments, and options.
func NewRoleAlias(ctx *pulumi.Context,
	name string, args *RoleAliasArgs, opts ...pulumi.ResourceOption) (*RoleAlias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource RoleAlias
	err := ctx.RegisterResource("aws-native:iot:RoleAlias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleAlias gets an existing RoleAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleAliasState, opts ...pulumi.ResourceOption) (*RoleAlias, error) {
	var resource RoleAlias
	err := ctx.ReadResource("aws-native:iot:RoleAlias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleAlias resources.
type roleAliasState struct {
}

type RoleAliasState struct {
}

func (RoleAliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAliasState)(nil)).Elem()
}

type roleAliasArgs struct {
	CredentialDurationSeconds *int           `pulumi:"credentialDurationSeconds"`
	RoleAlias                 *string        `pulumi:"roleAlias"`
	RoleArn                   string         `pulumi:"roleArn"`
	Tags                      []RoleAliasTag `pulumi:"tags"`
}

// The set of arguments for constructing a RoleAlias resource.
type RoleAliasArgs struct {
	CredentialDurationSeconds pulumi.IntPtrInput
	RoleAlias                 pulumi.StringPtrInput
	RoleArn                   pulumi.StringInput
	Tags                      RoleAliasTagArrayInput
}

func (RoleAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAliasArgs)(nil)).Elem()
}

type RoleAliasInput interface {
	pulumi.Input

	ToRoleAliasOutput() RoleAliasOutput
	ToRoleAliasOutputWithContext(ctx context.Context) RoleAliasOutput
}

func (*RoleAlias) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleAlias)(nil)).Elem()
}

func (i *RoleAlias) ToRoleAliasOutput() RoleAliasOutput {
	return i.ToRoleAliasOutputWithContext(context.Background())
}

func (i *RoleAlias) ToRoleAliasOutputWithContext(ctx context.Context) RoleAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAliasOutput)
}

type RoleAliasOutput struct{ *pulumi.OutputState }

func (RoleAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleAlias)(nil)).Elem()
}

func (o RoleAliasOutput) ToRoleAliasOutput() RoleAliasOutput {
	return o
}

func (o RoleAliasOutput) ToRoleAliasOutputWithContext(ctx context.Context) RoleAliasOutput {
	return o
}

func (o RoleAliasOutput) CredentialDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RoleAlias) pulumi.IntPtrOutput { return v.CredentialDurationSeconds }).(pulumi.IntPtrOutput)
}

func (o RoleAliasOutput) RoleAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleAlias) pulumi.StringPtrOutput { return v.RoleAlias }).(pulumi.StringPtrOutput)
}

func (o RoleAliasOutput) RoleAliasArn() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleAlias) pulumi.StringOutput { return v.RoleAliasArn }).(pulumi.StringOutput)
}

func (o RoleAliasOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *RoleAlias) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o RoleAliasOutput) Tags() RoleAliasTagArrayOutput {
	return o.ApplyT(func(v *RoleAlias) RoleAliasTagArrayOutput { return v.Tags }).(RoleAliasTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoleAliasInput)(nil)).Elem(), &RoleAlias{})
	pulumi.RegisterOutputType(RoleAliasOutput{})
}
