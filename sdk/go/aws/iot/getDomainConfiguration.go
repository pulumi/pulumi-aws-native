// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create and manage a Domain Configuration
func LookupDomainConfiguration(ctx *pulumi.Context, args *LookupDomainConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupDomainConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainConfigurationResult
	err := ctx.Invoke("aws-native:iot:getDomainConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainConfigurationArgs struct {
	// The name of the domain configuration. This value must be unique to a region.
	DomainConfigurationName string `pulumi:"domainConfigurationName"`
}

type LookupDomainConfigurationResult struct {
	// The Amazon Resource Name (ARN) of the domain configuration.
	Arn *string `pulumi:"arn"`
	// An object that specifies the authorization service for a domain.
	AuthorizerConfig *DomainConfigurationAuthorizerConfig `pulumi:"authorizerConfig"`
	// The status to which the domain configuration should be updated.
	//
	// Valid values: `ENABLED` | `DISABLED`
	DomainConfigurationStatus *DomainConfigurationStatus `pulumi:"domainConfigurationStatus"`
	// The type of service delivered by the domain.
	DomainType *DomainConfigurationDomainType `pulumi:"domainType"`
	// The server certificate configuration.
	//
	// For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
	ServerCertificateConfig *DomainConfigurationServerCertificateConfig `pulumi:"serverCertificateConfig"`
	// An object that contains information about a server certificate.
	ServerCertificates []DomainConfigurationServerCertificateSummary `pulumi:"serverCertificates"`
	// A set of key/value pairs that are used to manage the resource.
	Tags []aws.Tag `pulumi:"tags"`
	// An object that specifies the TLS configuration for a domain.
	TlsConfig *DomainConfigurationTlsConfig `pulumi:"tlsConfig"`
}

func LookupDomainConfigurationOutput(ctx *pulumi.Context, args LookupDomainConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupDomainConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainConfigurationResult, error) {
			args := v.(LookupDomainConfigurationArgs)
			r, err := LookupDomainConfiguration(ctx, &args, opts...)
			var s LookupDomainConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainConfigurationResultOutput)
}

type LookupDomainConfigurationOutputArgs struct {
	// The name of the domain configuration. This value must be unique to a region.
	DomainConfigurationName pulumi.StringInput `pulumi:"domainConfigurationName"`
}

func (LookupDomainConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainConfigurationArgs)(nil)).Elem()
}

type LookupDomainConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupDomainConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainConfigurationResult)(nil)).Elem()
}

func (o LookupDomainConfigurationResultOutput) ToLookupDomainConfigurationResultOutput() LookupDomainConfigurationResultOutput {
	return o
}

func (o LookupDomainConfigurationResultOutput) ToLookupDomainConfigurationResultOutputWithContext(ctx context.Context) LookupDomainConfigurationResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the domain configuration.
func (o LookupDomainConfigurationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// An object that specifies the authorization service for a domain.
func (o LookupDomainConfigurationResultOutput) AuthorizerConfig() DomainConfigurationAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) *DomainConfigurationAuthorizerConfig {
		return v.AuthorizerConfig
	}).(DomainConfigurationAuthorizerConfigPtrOutput)
}

// The status to which the domain configuration should be updated.
//
// Valid values: `ENABLED` | `DISABLED`
func (o LookupDomainConfigurationResultOutput) DomainConfigurationStatus() DomainConfigurationStatusPtrOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) *DomainConfigurationStatus { return v.DomainConfigurationStatus }).(DomainConfigurationStatusPtrOutput)
}

// The type of service delivered by the domain.
func (o LookupDomainConfigurationResultOutput) DomainType() DomainConfigurationDomainTypePtrOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) *DomainConfigurationDomainType { return v.DomainType }).(DomainConfigurationDomainTypePtrOutput)
}

// The server certificate configuration.
//
// For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
func (o LookupDomainConfigurationResultOutput) ServerCertificateConfig() DomainConfigurationServerCertificateConfigPtrOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) *DomainConfigurationServerCertificateConfig {
		return v.ServerCertificateConfig
	}).(DomainConfigurationServerCertificateConfigPtrOutput)
}

// An object that contains information about a server certificate.
func (o LookupDomainConfigurationResultOutput) ServerCertificates() DomainConfigurationServerCertificateSummaryArrayOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) []DomainConfigurationServerCertificateSummary {
		return v.ServerCertificates
	}).(DomainConfigurationServerCertificateSummaryArrayOutput)
}

// A set of key/value pairs that are used to manage the resource.
func (o LookupDomainConfigurationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// An object that specifies the TLS configuration for a domain.
func (o LookupDomainConfigurationResultOutput) TlsConfig() DomainConfigurationTlsConfigPtrOutput {
	return o.ApplyT(func(v LookupDomainConfigurationResult) *DomainConfigurationTlsConfig { return v.TlsConfig }).(DomainConfigurationTlsConfigPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainConfigurationResultOutput{})
}
