// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Registers a CA Certificate in IoT.
func LookupCACertificate(ctx *pulumi.Context, args *LookupCACertificateArgs, opts ...pulumi.InvokeOption) (*LookupCACertificateResult, error) {
	var rv LookupCACertificateResult
	err := ctx.Invoke("aws-native:iot:getCACertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCACertificateArgs struct {
	Id string `pulumi:"id"`
}

type LookupCACertificateResult struct {
	Arn                    *string                              `pulumi:"arn"`
	AutoRegistrationStatus *CACertificateAutoRegistrationStatus `pulumi:"autoRegistrationStatus"`
	Id                     *string                              `pulumi:"id"`
	RegistrationConfig     *CACertificateRegistrationConfig     `pulumi:"registrationConfig"`
	RemoveAutoRegistration *bool                                `pulumi:"removeAutoRegistration"`
	Status                 *CACertificateStatus                 `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags []CACertificateTag `pulumi:"tags"`
}

func LookupCACertificateOutput(ctx *pulumi.Context, args LookupCACertificateOutputArgs, opts ...pulumi.InvokeOption) LookupCACertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCACertificateResult, error) {
			args := v.(LookupCACertificateArgs)
			r, err := LookupCACertificate(ctx, &args, opts...)
			var s LookupCACertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCACertificateResultOutput)
}

type LookupCACertificateOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupCACertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCACertificateArgs)(nil)).Elem()
}

type LookupCACertificateResultOutput struct{ *pulumi.OutputState }

func (LookupCACertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCACertificateResult)(nil)).Elem()
}

func (o LookupCACertificateResultOutput) ToLookupCACertificateResultOutput() LookupCACertificateResultOutput {
	return o
}

func (o LookupCACertificateResultOutput) ToLookupCACertificateResultOutputWithContext(ctx context.Context) LookupCACertificateResultOutput {
	return o
}

func (o LookupCACertificateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCACertificateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupCACertificateResultOutput) AutoRegistrationStatus() CACertificateAutoRegistrationStatusPtrOutput {
	return o.ApplyT(func(v LookupCACertificateResult) *CACertificateAutoRegistrationStatus {
		return v.AutoRegistrationStatus
	}).(CACertificateAutoRegistrationStatusPtrOutput)
}

func (o LookupCACertificateResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCACertificateResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupCACertificateResultOutput) RegistrationConfig() CACertificateRegistrationConfigPtrOutput {
	return o.ApplyT(func(v LookupCACertificateResult) *CACertificateRegistrationConfig { return v.RegistrationConfig }).(CACertificateRegistrationConfigPtrOutput)
}

func (o LookupCACertificateResultOutput) RemoveAutoRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCACertificateResult) *bool { return v.RemoveAutoRegistration }).(pulumi.BoolPtrOutput)
}

func (o LookupCACertificateResultOutput) Status() CACertificateStatusPtrOutput {
	return o.ApplyT(func(v LookupCACertificateResult) *CACertificateStatus { return v.Status }).(CACertificateStatusPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupCACertificateResultOutput) Tags() CACertificateTagArrayOutput {
	return o.ApplyT(func(v LookupCACertificateResult) []CACertificateTag { return v.Tags }).(CACertificateTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCACertificateResultOutput{})
}
