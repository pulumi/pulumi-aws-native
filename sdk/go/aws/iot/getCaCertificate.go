// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Registers a CA Certificate in IoT.
func LookupCaCertificate(ctx *pulumi.Context, args *LookupCaCertificateArgs, opts ...pulumi.InvokeOption) (*LookupCaCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCaCertificateResult
	err := ctx.Invoke("aws-native:iot:getCaCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCaCertificateArgs struct {
	// The CA certificate ID.
	Id string `pulumi:"id"`
}

type LookupCaCertificateResult struct {
	// Returns the Amazon Resource Name (ARN) for the CA certificate. For example:
	//
	// `{ "Fn::GetAtt": ["MyCACertificate", "Arn"] }`
	//
	// A value similar to the following is returned:
	//
	// `arn:aws:iot:us-east-1:123456789012:cacert/a6be6b84559801927e35a8f901fae08b5971d78d1562e29504ff9663b276a5f5`
	Arn *string `pulumi:"arn"`
	// Whether the CA certificate is configured for auto registration of device certificates. Valid values are "ENABLE" and "DISABLE".
	AutoRegistrationStatus *CaCertificateAutoRegistrationStatus `pulumi:"autoRegistrationStatus"`
	// The CA certificate ID.
	Id *string `pulumi:"id"`
	// Information about the registration configuration.
	RegistrationConfig *CaCertificateRegistrationConfig `pulumi:"registrationConfig"`
	// The status of the CA certificate.
	//
	// Valid values are "ACTIVE" and "INACTIVE".
	Status *CaCertificateStatus `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCaCertificateOutput(ctx *pulumi.Context, args LookupCaCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupCaCertificateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCaCertificateResultOutput, error) {
			args := v.(LookupCaCertificateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iot:getCaCertificate", args, LookupCaCertificateResultOutput{}, options).(LookupCaCertificateResultOutput), nil
		}).(LookupCaCertificateResultOutput)
}

type LookupCaCertificateOutputArgs struct {
	// The CA certificate ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupCaCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCaCertificateArgs)(nil)).Elem()
}

type LookupCaCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupCaCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCaCertificateResult)(nil)).Elem()
}

func (o LookupCaCertificateResultOutput) ToLookupCaCertificateResultOutput() LookupCaCertificateResultOutput {
	return o
}

func (o LookupCaCertificateResultOutput) ToLookupCaCertificateResultOutputWithContext(ctx context.Context) LookupCaCertificateResultOutput {
	return o
}

// Returns the Amazon Resource Name (ARN) for the CA certificate. For example:
//
// `{ "Fn::GetAtt": ["MyCACertificate", "Arn"] }`
//
// A value similar to the following is returned:
//
// `arn:aws:iot:us-east-1:123456789012:cacert/a6be6b84559801927e35a8f901fae08b5971d78d1562e29504ff9663b276a5f5`
func (o LookupCaCertificateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Whether the CA certificate is configured for auto registration of device certificates. Valid values are "ENABLE" and "DISABLE".
func (o LookupCaCertificateResultOutput) AutoRegistrationStatus() CaCertificateAutoRegistrationStatusPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *CaCertificateAutoRegistrationStatus {
		return v.AutoRegistrationStatus
	}).(CaCertificateAutoRegistrationStatusPtrOutput)
}

// The CA certificate ID.
func (o LookupCaCertificateResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Information about the registration configuration.
func (o LookupCaCertificateResultOutput) RegistrationConfig() CaCertificateRegistrationConfigPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *CaCertificateRegistrationConfig { return v.RegistrationConfig }).(CaCertificateRegistrationConfigPtrOutput)
}

// The status of the CA certificate.
//
// Valid values are "ACTIVE" and "INACTIVE".
func (o LookupCaCertificateResultOutput) Status() CaCertificateStatusPtrOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) *CaCertificateStatus { return v.Status }).(CaCertificateStatusPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupCaCertificateResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCaCertificateResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCaCertificateResultOutput{})
}
