// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Job templates enable you to preconfigure jobs so that you can deploy them to multiple sets of target devices.
type JobTemplate struct {
	pulumi.CustomResourceState

	// The criteria that determine when and how a job abort takes place.
	AbortConfig AbortConfigPropertiesPtrOutput `pulumi:"abortConfig"`
	Arn         pulumi.StringOutput            `pulumi:"arn"`
	// A description of the Job Template.
	Description pulumi.StringOutput `pulumi:"description"`
	// The job document. Required if you don't specify a value for documentSource.
	Document pulumi.StringPtrOutput `pulumi:"document"`
	// An S3 link to the job document to use in the template. Required if you don't specify a value for document.
	DocumentSource pulumi.StringPtrOutput `pulumi:"documentSource"`
	// Optional for copying a JobTemplate from a pre-existing Job configuration.
	JobArn pulumi.StringPtrOutput `pulumi:"jobArn"`
	// Allows you to create a staged rollout of a job.
	JobExecutionsRolloutConfig JobExecutionsRolloutConfigPropertiesPtrOutput `pulumi:"jobExecutionsRolloutConfig"`
	JobTemplateId              pulumi.StringOutput                           `pulumi:"jobTemplateId"`
	// Configuration for pre-signed S3 URLs.
	PresignedUrlConfig PresignedUrlConfigPropertiesPtrOutput `pulumi:"presignedUrlConfig"`
	// Metadata that can be used to manage the JobTemplate.
	Tags JobTemplateTagArrayOutput `pulumi:"tags"`
	// Specifies the amount of time each device has to finish its execution of the job.
	TimeoutConfig TimeoutConfigPropertiesPtrOutput `pulumi:"timeoutConfig"`
}

// NewJobTemplate registers a new resource with the given unique name, arguments, and options.
func NewJobTemplate(ctx *pulumi.Context,
	name string, args *JobTemplateArgs, opts ...pulumi.ResourceOption) (*JobTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.JobTemplateId == nil {
		return nil, errors.New("invalid value for required argument 'JobTemplateId'")
	}
	var resource JobTemplate
	err := ctx.RegisterResource("aws-native:iot:JobTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobTemplate gets an existing JobTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobTemplateState, opts ...pulumi.ResourceOption) (*JobTemplate, error) {
	var resource JobTemplate
	err := ctx.ReadResource("aws-native:iot:JobTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobTemplate resources.
type jobTemplateState struct {
}

type JobTemplateState struct {
}

func (JobTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTemplateState)(nil)).Elem()
}

type jobTemplateArgs struct {
	// The criteria that determine when and how a job abort takes place.
	AbortConfig *AbortConfigProperties `pulumi:"abortConfig"`
	// A description of the Job Template.
	Description string `pulumi:"description"`
	// The job document. Required if you don't specify a value for documentSource.
	Document *string `pulumi:"document"`
	// An S3 link to the job document to use in the template. Required if you don't specify a value for document.
	DocumentSource *string `pulumi:"documentSource"`
	// Optional for copying a JobTemplate from a pre-existing Job configuration.
	JobArn *string `pulumi:"jobArn"`
	// Allows you to create a staged rollout of a job.
	JobExecutionsRolloutConfig *JobExecutionsRolloutConfigProperties `pulumi:"jobExecutionsRolloutConfig"`
	JobTemplateId              string                                `pulumi:"jobTemplateId"`
	// Configuration for pre-signed S3 URLs.
	PresignedUrlConfig *PresignedUrlConfigProperties `pulumi:"presignedUrlConfig"`
	// Metadata that can be used to manage the JobTemplate.
	Tags []JobTemplateTag `pulumi:"tags"`
	// Specifies the amount of time each device has to finish its execution of the job.
	TimeoutConfig *TimeoutConfigProperties `pulumi:"timeoutConfig"`
}

// The set of arguments for constructing a JobTemplate resource.
type JobTemplateArgs struct {
	// The criteria that determine when and how a job abort takes place.
	AbortConfig AbortConfigPropertiesPtrInput
	// A description of the Job Template.
	Description pulumi.StringInput
	// The job document. Required if you don't specify a value for documentSource.
	Document pulumi.StringPtrInput
	// An S3 link to the job document to use in the template. Required if you don't specify a value for document.
	DocumentSource pulumi.StringPtrInput
	// Optional for copying a JobTemplate from a pre-existing Job configuration.
	JobArn pulumi.StringPtrInput
	// Allows you to create a staged rollout of a job.
	JobExecutionsRolloutConfig JobExecutionsRolloutConfigPropertiesPtrInput
	JobTemplateId              pulumi.StringInput
	// Configuration for pre-signed S3 URLs.
	PresignedUrlConfig PresignedUrlConfigPropertiesPtrInput
	// Metadata that can be used to manage the JobTemplate.
	Tags JobTemplateTagArrayInput
	// Specifies the amount of time each device has to finish its execution of the job.
	TimeoutConfig TimeoutConfigPropertiesPtrInput
}

func (JobTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTemplateArgs)(nil)).Elem()
}

type JobTemplateInput interface {
	pulumi.Input

	ToJobTemplateOutput() JobTemplateOutput
	ToJobTemplateOutputWithContext(ctx context.Context) JobTemplateOutput
}

func (*JobTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplate)(nil))
}

func (i *JobTemplate) ToJobTemplateOutput() JobTemplateOutput {
	return i.ToJobTemplateOutputWithContext(context.Background())
}

func (i *JobTemplate) ToJobTemplateOutputWithContext(ctx context.Context) JobTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateOutput)
}

type JobTemplateOutput struct{ *pulumi.OutputState }

func (JobTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplate)(nil))
}

func (o JobTemplateOutput) ToJobTemplateOutput() JobTemplateOutput {
	return o
}

func (o JobTemplateOutput) ToJobTemplateOutputWithContext(ctx context.Context) JobTemplateOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(JobTemplateOutput{})
}
