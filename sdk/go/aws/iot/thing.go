// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoT::Thing
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			nameParameter := cfg.Require("nameParameter")
//			myAttributeValueA := "myStringA123"
//			if param := cfg.Get("myAttributeValueA"); param != "" {
//				myAttributeValueA = param
//			}
//			myAttributeValueB := "myStringB123"
//			if param := cfg.Get("myAttributeValueB"); param != "" {
//				myAttributeValueB = param
//			}
//			myAttributeValueC := "myStringC123"
//			if param := cfg.Get("myAttributeValueC"); param != "" {
//				myAttributeValueC = param
//			}
//			_, err := iot.NewThing(ctx, "myThing", &iot.ThingArgs{
//				ThingName: pulumi.String(nameParameter),
//				AttributePayload: &iot.ThingAttributePayloadArgs{
//					Attributes: pulumi.StringMap{
//						"myAttributeA": pulumi.String(myAttributeValueA),
//						"myAttributeB": pulumi.String(myAttributeValueB),
//						"myAttributeC": pulumi.String(myAttributeValueC),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Thing struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the AWS IoT thing, such as `arn:aws:iot:us-east-2:123456789012:thing/MyThing` .
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A string that contains up to three key value pairs. Maximum length of 800. Duplicates not allowed.
	AttributePayload ThingAttributePayloadPtrOutput `pulumi:"attributePayload"`
	// The Id of this thing.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The name of the thing to update.
	//
	// You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.
	ThingName pulumi.StringPtrOutput `pulumi:"thingName"`
}

// NewThing registers a new resource with the given unique name, arguments, and options.
func NewThing(ctx *pulumi.Context,
	name string, args *ThingArgs, opts ...pulumi.ResourceOption) (*Thing, error) {
	if args == nil {
		args = &ThingArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"thingName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Thing
	err := ctx.RegisterResource("aws-native:iot:Thing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThing gets an existing Thing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThingState, opts ...pulumi.ResourceOption) (*Thing, error) {
	var resource Thing
	err := ctx.ReadResource("aws-native:iot:Thing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Thing resources.
type thingState struct {
}

type ThingState struct {
}

func (ThingState) ElementType() reflect.Type {
	return reflect.TypeOf((*thingState)(nil)).Elem()
}

type thingArgs struct {
	// A string that contains up to three key value pairs. Maximum length of 800. Duplicates not allowed.
	AttributePayload *ThingAttributePayload `pulumi:"attributePayload"`
	// The name of the thing to update.
	//
	// You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.
	ThingName *string `pulumi:"thingName"`
}

// The set of arguments for constructing a Thing resource.
type ThingArgs struct {
	// A string that contains up to three key value pairs. Maximum length of 800. Duplicates not allowed.
	AttributePayload ThingAttributePayloadPtrInput
	// The name of the thing to update.
	//
	// You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.
	ThingName pulumi.StringPtrInput
}

func (ThingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thingArgs)(nil)).Elem()
}

type ThingInput interface {
	pulumi.Input

	ToThingOutput() ThingOutput
	ToThingOutputWithContext(ctx context.Context) ThingOutput
}

func (*Thing) ElementType() reflect.Type {
	return reflect.TypeOf((**Thing)(nil)).Elem()
}

func (i *Thing) ToThingOutput() ThingOutput {
	return i.ToThingOutputWithContext(context.Background())
}

func (i *Thing) ToThingOutputWithContext(ctx context.Context) ThingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingOutput)
}

type ThingOutput struct{ *pulumi.OutputState }

func (ThingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Thing)(nil)).Elem()
}

func (o ThingOutput) ToThingOutput() ThingOutput {
	return o
}

func (o ThingOutput) ToThingOutputWithContext(ctx context.Context) ThingOutput {
	return o
}

// The Amazon Resource Name (ARN) of the AWS IoT thing, such as `arn:aws:iot:us-east-2:123456789012:thing/MyThing` .
func (o ThingOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Thing) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A string that contains up to three key value pairs. Maximum length of 800. Duplicates not allowed.
func (o ThingOutput) AttributePayload() ThingAttributePayloadPtrOutput {
	return o.ApplyT(func(v *Thing) ThingAttributePayloadPtrOutput { return v.AttributePayload }).(ThingAttributePayloadPtrOutput)
}

// The Id of this thing.
func (o ThingOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Thing) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The name of the thing to update.
//
// You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.
func (o ThingOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Thing) pulumi.StringPtrOutput { return v.ThingName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThingInput)(nil)).Elem(), &Thing{})
	pulumi.RegisterOutputType(ThingOutput{})
}
