// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a fleet provisioning template.
func LookupProvisioningTemplate(ctx *pulumi.Context, args *LookupProvisioningTemplateArgs, opts ...pulumi.InvokeOption) (*LookupProvisioningTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProvisioningTemplateResult
	err := ctx.Invoke("aws-native:iot:getProvisioningTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProvisioningTemplateArgs struct {
	// The name of the fleet provisioning template.
	TemplateName string `pulumi:"templateName"`
}

type LookupProvisioningTemplateResult struct {
	// The description of the fleet provisioning template.
	Description *string `pulumi:"description"`
	// True to enable the fleet provisioning template, otherwise false.
	Enabled *bool `pulumi:"enabled"`
	// Creates a pre-provisioning hook template.
	PreProvisioningHook *ProvisioningTemplateProvisioningHook `pulumi:"preProvisioningHook"`
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn *string `pulumi:"provisioningRoleArn"`
	// Metadata that can be used to manage the fleet provisioning template.
	Tags []aws.Tag `pulumi:"tags"`
	// The ARN that identifies the provisioning template.
	TemplateArn *string `pulumi:"templateArn"`
	// The JSON formatted contents of the fleet provisioning template version.
	TemplateBody *string `pulumi:"templateBody"`
}

func LookupProvisioningTemplateOutput(ctx *pulumi.Context, args LookupProvisioningTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupProvisioningTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProvisioningTemplateResultOutput, error) {
			args := v.(LookupProvisioningTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProvisioningTemplateResult
			secret, err := ctx.InvokePackageRaw("aws-native:iot:getProvisioningTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupProvisioningTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProvisioningTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProvisioningTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupProvisioningTemplateResultOutput)
}

type LookupProvisioningTemplateOutputArgs struct {
	// The name of the fleet provisioning template.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
}

func (LookupProvisioningTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProvisioningTemplateArgs)(nil)).Elem()
}

type LookupProvisioningTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupProvisioningTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProvisioningTemplateResult)(nil)).Elem()
}

func (o LookupProvisioningTemplateResultOutput) ToLookupProvisioningTemplateResultOutput() LookupProvisioningTemplateResultOutput {
	return o
}

func (o LookupProvisioningTemplateResultOutput) ToLookupProvisioningTemplateResultOutputWithContext(ctx context.Context) LookupProvisioningTemplateResultOutput {
	return o
}

// The description of the fleet provisioning template.
func (o LookupProvisioningTemplateResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// True to enable the fleet provisioning template, otherwise false.
func (o LookupProvisioningTemplateResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Creates a pre-provisioning hook template.
func (o LookupProvisioningTemplateResultOutput) PreProvisioningHook() ProvisioningTemplateProvisioningHookPtrOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) *ProvisioningTemplateProvisioningHook {
		return v.PreProvisioningHook
	}).(ProvisioningTemplateProvisioningHookPtrOutput)
}

// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
func (o LookupProvisioningTemplateResultOutput) ProvisioningRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) *string { return v.ProvisioningRoleArn }).(pulumi.StringPtrOutput)
}

// Metadata that can be used to manage the fleet provisioning template.
func (o LookupProvisioningTemplateResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The ARN that identifies the provisioning template.
func (o LookupProvisioningTemplateResultOutput) TemplateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) *string { return v.TemplateArn }).(pulumi.StringPtrOutput)
}

// The JSON formatted contents of the fleet provisioning template version.
func (o LookupProvisioningTemplateResultOutput) TemplateBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProvisioningTemplateResult) *string { return v.TemplateBody }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProvisioningTemplateResultOutput{})
}
