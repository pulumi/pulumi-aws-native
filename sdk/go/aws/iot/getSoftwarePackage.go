// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// resource definition
func LookupSoftwarePackage(ctx *pulumi.Context, args *LookupSoftwarePackageArgs, opts ...pulumi.InvokeOption) (*LookupSoftwarePackageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSoftwarePackageResult
	err := ctx.Invoke("aws-native:iot:getSoftwarePackage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSoftwarePackageArgs struct {
	PackageName string `pulumi:"packageName"`
}

type LookupSoftwarePackageResult struct {
	Description *string `pulumi:"description"`
	PackageArn  *string `pulumi:"packageArn"`
	// An array of key-value pairs to apply to this resource.
	Tags []SoftwarePackageTag `pulumi:"tags"`
}

func LookupSoftwarePackageOutput(ctx *pulumi.Context, args LookupSoftwarePackageOutputArgs, opts ...pulumi.InvokeOption) LookupSoftwarePackageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSoftwarePackageResult, error) {
			args := v.(LookupSoftwarePackageArgs)
			r, err := LookupSoftwarePackage(ctx, &args, opts...)
			var s LookupSoftwarePackageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSoftwarePackageResultOutput)
}

type LookupSoftwarePackageOutputArgs struct {
	PackageName pulumi.StringInput `pulumi:"packageName"`
}

func (LookupSoftwarePackageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSoftwarePackageArgs)(nil)).Elem()
}

type LookupSoftwarePackageResultOutput struct{ *pulumi.OutputState }

func (LookupSoftwarePackageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSoftwarePackageResult)(nil)).Elem()
}

func (o LookupSoftwarePackageResultOutput) ToLookupSoftwarePackageResultOutput() LookupSoftwarePackageResultOutput {
	return o
}

func (o LookupSoftwarePackageResultOutput) ToLookupSoftwarePackageResultOutputWithContext(ctx context.Context) LookupSoftwarePackageResultOutput {
	return o
}

func (o LookupSoftwarePackageResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSoftwarePackageResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupSoftwarePackageResultOutput) PackageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSoftwarePackageResult) *string { return v.PackageArn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupSoftwarePackageResultOutput) Tags() SoftwarePackageTagArrayOutput {
	return o.ApplyT(func(v LookupSoftwarePackageResult) []SoftwarePackageTag { return v.Tags }).(SoftwarePackageTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSoftwarePackageResultOutput{})
}
