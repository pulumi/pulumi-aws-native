// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoT::ThingGroup
type ThingGroup struct {
	pulumi.CustomResourceState

	// The thing group ARN.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The thing group ID.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The parent thing group name.
	//
	// A Dynamic Thing Group does not have `parentGroupName` defined.
	ParentGroupName pulumi.StringPtrOutput `pulumi:"parentGroupName"`
	// The dynamic thing group search query string.
	//
	// The `queryString` attribute *is* required for `CreateDynamicThingGroup` . The `queryString` attribute *is not* required for `CreateThingGroup` .
	QueryString pulumi.StringPtrOutput `pulumi:"queryString"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The thing group name.
	ThingGroupName pulumi.StringPtrOutput `pulumi:"thingGroupName"`
	// Thing group properties.
	ThingGroupProperties ThingGroupPropertiesPropertiesPtrOutput `pulumi:"thingGroupProperties"`
}

// NewThingGroup registers a new resource with the given unique name, arguments, and options.
func NewThingGroup(ctx *pulumi.Context,
	name string, args *ThingGroupArgs, opts ...pulumi.ResourceOption) (*ThingGroup, error) {
	if args == nil {
		args = &ThingGroupArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"parentGroupName",
		"thingGroupName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ThingGroup
	err := ctx.RegisterResource("aws-native:iot:ThingGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThingGroup gets an existing ThingGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThingGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThingGroupState, opts ...pulumi.ResourceOption) (*ThingGroup, error) {
	var resource ThingGroup
	err := ctx.ReadResource("aws-native:iot:ThingGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThingGroup resources.
type thingGroupState struct {
}

type ThingGroupState struct {
}

func (ThingGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*thingGroupState)(nil)).Elem()
}

type thingGroupArgs struct {
	// The parent thing group name.
	//
	// A Dynamic Thing Group does not have `parentGroupName` defined.
	ParentGroupName *string `pulumi:"parentGroupName"`
	// The dynamic thing group search query string.
	//
	// The `queryString` attribute *is* required for `CreateDynamicThingGroup` . The `queryString` attribute *is not* required for `CreateThingGroup` .
	QueryString *string `pulumi:"queryString"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The thing group name.
	ThingGroupName *string `pulumi:"thingGroupName"`
	// Thing group properties.
	ThingGroupProperties *ThingGroupPropertiesProperties `pulumi:"thingGroupProperties"`
}

// The set of arguments for constructing a ThingGroup resource.
type ThingGroupArgs struct {
	// The parent thing group name.
	//
	// A Dynamic Thing Group does not have `parentGroupName` defined.
	ParentGroupName pulumi.StringPtrInput
	// The dynamic thing group search query string.
	//
	// The `queryString` attribute *is* required for `CreateDynamicThingGroup` . The `queryString` attribute *is not* required for `CreateThingGroup` .
	QueryString pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
	// The thing group name.
	ThingGroupName pulumi.StringPtrInput
	// Thing group properties.
	ThingGroupProperties ThingGroupPropertiesPropertiesPtrInput
}

func (ThingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thingGroupArgs)(nil)).Elem()
}

type ThingGroupInput interface {
	pulumi.Input

	ToThingGroupOutput() ThingGroupOutput
	ToThingGroupOutputWithContext(ctx context.Context) ThingGroupOutput
}

func (*ThingGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingGroup)(nil)).Elem()
}

func (i *ThingGroup) ToThingGroupOutput() ThingGroupOutput {
	return i.ToThingGroupOutputWithContext(context.Background())
}

func (i *ThingGroup) ToThingGroupOutputWithContext(ctx context.Context) ThingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupOutput)
}

type ThingGroupOutput struct{ *pulumi.OutputState }

func (ThingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingGroup)(nil)).Elem()
}

func (o ThingGroupOutput) ToThingGroupOutput() ThingGroupOutput {
	return o
}

func (o ThingGroupOutput) ToThingGroupOutputWithContext(ctx context.Context) ThingGroupOutput {
	return o
}

// The thing group ARN.
func (o ThingGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ThingGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The thing group ID.
func (o ThingGroupOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ThingGroup) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The parent thing group name.
//
// A Dynamic Thing Group does not have `parentGroupName` defined.
func (o ThingGroupOutput) ParentGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingGroup) pulumi.StringPtrOutput { return v.ParentGroupName }).(pulumi.StringPtrOutput)
}

// The dynamic thing group search query string.
//
// The `queryString` attribute *is* required for `CreateDynamicThingGroup` . The `queryString` attribute *is not* required for `CreateThingGroup` .
func (o ThingGroupOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingGroup) pulumi.StringPtrOutput { return v.QueryString }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ThingGroupOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ThingGroup) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The thing group name.
func (o ThingGroupOutput) ThingGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingGroup) pulumi.StringPtrOutput { return v.ThingGroupName }).(pulumi.StringPtrOutput)
}

// Thing group properties.
func (o ThingGroupOutput) ThingGroupProperties() ThingGroupPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *ThingGroup) ThingGroupPropertiesPropertiesPtrOutput { return v.ThingGroupProperties }).(ThingGroupPropertiesPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThingGroupInput)(nil)).Elem(), &ThingGroup{})
	pulumi.RegisterOutputType(ThingGroupOutput{})
}
