// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Scheduled audits can be used to specify the checks you want to perform during an audit and how often the audit should be run.
type ScheduledAudit struct {
	pulumi.CustomResourceState

	// The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
	DayOfMonth pulumi.StringPtrOutput `pulumi:"dayOfMonth"`
	// The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
	DayOfWeek ScheduledAuditDayOfWeekPtrOutput `pulumi:"dayOfWeek"`
	// How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
	Frequency ScheduledAuditFrequencyOutput `pulumi:"frequency"`
	// The ARN (Amazon resource name) of the scheduled audit.
	ScheduledAuditArn pulumi.StringOutput `pulumi:"scheduledAuditArn"`
	// The name you want to give to the scheduled audit.
	ScheduledAuditName pulumi.StringPtrOutput `pulumi:"scheduledAuditName"`
	// An array of key-value pairs to apply to this resource.
	Tags ScheduledAuditTagArrayOutput `pulumi:"tags"`
	// Which checks are performed during the scheduled audit. Checks must be enabled for your account.
	TargetCheckNames pulumi.StringArrayOutput `pulumi:"targetCheckNames"`
}

// NewScheduledAudit registers a new resource with the given unique name, arguments, and options.
func NewScheduledAudit(ctx *pulumi.Context,
	name string, args *ScheduledAuditArgs, opts ...pulumi.ResourceOption) (*ScheduledAudit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Frequency == nil {
		return nil, errors.New("invalid value for required argument 'Frequency'")
	}
	if args.TargetCheckNames == nil {
		return nil, errors.New("invalid value for required argument 'TargetCheckNames'")
	}
	var resource ScheduledAudit
	err := ctx.RegisterResource("aws-native:iot:ScheduledAudit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledAudit gets an existing ScheduledAudit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledAudit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledAuditState, opts ...pulumi.ResourceOption) (*ScheduledAudit, error) {
	var resource ScheduledAudit
	err := ctx.ReadResource("aws-native:iot:ScheduledAudit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledAudit resources.
type scheduledAuditState struct {
}

type ScheduledAuditState struct {
}

func (ScheduledAuditState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledAuditState)(nil)).Elem()
}

type scheduledAuditArgs struct {
	// The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
	DayOfMonth *string `pulumi:"dayOfMonth"`
	// The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
	DayOfWeek *ScheduledAuditDayOfWeek `pulumi:"dayOfWeek"`
	// How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
	Frequency ScheduledAuditFrequency `pulumi:"frequency"`
	// The name you want to give to the scheduled audit.
	ScheduledAuditName *string `pulumi:"scheduledAuditName"`
	// An array of key-value pairs to apply to this resource.
	Tags []ScheduledAuditTag `pulumi:"tags"`
	// Which checks are performed during the scheduled audit. Checks must be enabled for your account.
	TargetCheckNames []string `pulumi:"targetCheckNames"`
}

// The set of arguments for constructing a ScheduledAudit resource.
type ScheduledAuditArgs struct {
	// The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
	DayOfMonth pulumi.StringPtrInput
	// The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
	DayOfWeek ScheduledAuditDayOfWeekPtrInput
	// How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
	Frequency ScheduledAuditFrequencyInput
	// The name you want to give to the scheduled audit.
	ScheduledAuditName pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags ScheduledAuditTagArrayInput
	// Which checks are performed during the scheduled audit. Checks must be enabled for your account.
	TargetCheckNames pulumi.StringArrayInput
}

func (ScheduledAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledAuditArgs)(nil)).Elem()
}

type ScheduledAuditInput interface {
	pulumi.Input

	ToScheduledAuditOutput() ScheduledAuditOutput
	ToScheduledAuditOutputWithContext(ctx context.Context) ScheduledAuditOutput
}

func (*ScheduledAudit) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAudit)(nil))
}

func (i *ScheduledAudit) ToScheduledAuditOutput() ScheduledAuditOutput {
	return i.ToScheduledAuditOutputWithContext(context.Background())
}

func (i *ScheduledAudit) ToScheduledAuditOutputWithContext(ctx context.Context) ScheduledAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledAuditOutput)
}

type ScheduledAuditOutput struct{ *pulumi.OutputState }

func (ScheduledAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAudit)(nil))
}

func (o ScheduledAuditOutput) ToScheduledAuditOutput() ScheduledAuditOutput {
	return o
}

func (o ScheduledAuditOutput) ToScheduledAuditOutputWithContext(ctx context.Context) ScheduledAuditOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ScheduledAuditOutput{})
}
