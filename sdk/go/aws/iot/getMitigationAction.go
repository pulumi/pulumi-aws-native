// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
func LookupMitigationAction(ctx *pulumi.Context, args *LookupMitigationActionArgs, opts ...pulumi.InvokeOption) (*LookupMitigationActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMitigationActionResult
	err := ctx.Invoke("aws-native:iot:getMitigationAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMitigationActionArgs struct {
	// A unique identifier for the mitigation action.
	ActionName string `pulumi:"actionName"`
}

type LookupMitigationActionResult struct {
	// The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.
	ActionParams *MitigationActionActionParams `pulumi:"actionParams"`
	// The Amazon Resource Name (ARN) of the mitigation action.
	MitigationActionArn *string `pulumi:"mitigationActionArn"`
	// The ID of the mitigation action.
	MitigationActionId *string `pulumi:"mitigationActionId"`
	// The IAM role ARN used to apply this mitigation action.
	RoleArn *string `pulumi:"roleArn"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupMitigationActionOutput(ctx *pulumi.Context, args LookupMitigationActionOutputArgs, opts ...pulumi.InvokeOption) LookupMitigationActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMitigationActionResult, error) {
			args := v.(LookupMitigationActionArgs)
			r, err := LookupMitigationAction(ctx, &args, opts...)
			var s LookupMitigationActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMitigationActionResultOutput)
}

type LookupMitigationActionOutputArgs struct {
	// A unique identifier for the mitigation action.
	ActionName pulumi.StringInput `pulumi:"actionName"`
}

func (LookupMitigationActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMitigationActionArgs)(nil)).Elem()
}

type LookupMitigationActionResultOutput struct{ *pulumi.OutputState }

func (LookupMitigationActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMitigationActionResult)(nil)).Elem()
}

func (o LookupMitigationActionResultOutput) ToLookupMitigationActionResultOutput() LookupMitigationActionResultOutput {
	return o
}

func (o LookupMitigationActionResultOutput) ToLookupMitigationActionResultOutputWithContext(ctx context.Context) LookupMitigationActionResultOutput {
	return o
}

// The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.
func (o LookupMitigationActionResultOutput) ActionParams() MitigationActionActionParamsPtrOutput {
	return o.ApplyT(func(v LookupMitigationActionResult) *MitigationActionActionParams { return v.ActionParams }).(MitigationActionActionParamsPtrOutput)
}

// The Amazon Resource Name (ARN) of the mitigation action.
func (o LookupMitigationActionResultOutput) MitigationActionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMitigationActionResult) *string { return v.MitigationActionArn }).(pulumi.StringPtrOutput)
}

// The ID of the mitigation action.
func (o LookupMitigationActionResultOutput) MitigationActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMitigationActionResult) *string { return v.MitigationActionId }).(pulumi.StringPtrOutput)
}

// The IAM role ARN used to apply this mitigation action.
func (o LookupMitigationActionResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMitigationActionResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupMitigationActionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMitigationActionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMitigationActionResultOutput{})
}
