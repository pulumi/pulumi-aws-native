// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a fleet provisioning template.
type ProvisioningTemplate struct {
	pulumi.CustomResourceState

	Description         pulumi.StringPtrOutput                        `pulumi:"description"`
	Enabled             pulumi.BoolPtrOutput                          `pulumi:"enabled"`
	PreProvisioningHook ProvisioningTemplateProvisioningHookPtrOutput `pulumi:"preProvisioningHook"`
	ProvisioningRoleArn pulumi.StringOutput                           `pulumi:"provisioningRoleArn"`
	Tags                ProvisioningTemplateTagArrayOutput            `pulumi:"tags"`
	TemplateArn         pulumi.StringOutput                           `pulumi:"templateArn"`
	TemplateBody        pulumi.StringOutput                           `pulumi:"templateBody"`
	TemplateName        pulumi.StringPtrOutput                        `pulumi:"templateName"`
}

// NewProvisioningTemplate registers a new resource with the given unique name, arguments, and options.
func NewProvisioningTemplate(ctx *pulumi.Context,
	name string, args *ProvisioningTemplateArgs, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProvisioningRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ProvisioningRoleArn'")
	}
	if args.TemplateBody == nil {
		return nil, errors.New("invalid value for required argument 'TemplateBody'")
	}
	var resource ProvisioningTemplate
	err := ctx.RegisterResource("aws-native:iot:ProvisioningTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisioningTemplate gets an existing ProvisioningTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisioningTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisioningTemplateState, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	var resource ProvisioningTemplate
	err := ctx.ReadResource("aws-native:iot:ProvisioningTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisioningTemplate resources.
type provisioningTemplateState struct {
}

type ProvisioningTemplateState struct {
}

func (ProvisioningTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateState)(nil)).Elem()
}

type provisioningTemplateArgs struct {
	Description         *string                               `pulumi:"description"`
	Enabled             *bool                                 `pulumi:"enabled"`
	PreProvisioningHook *ProvisioningTemplateProvisioningHook `pulumi:"preProvisioningHook"`
	ProvisioningRoleArn string                                `pulumi:"provisioningRoleArn"`
	Tags                []ProvisioningTemplateTag             `pulumi:"tags"`
	TemplateBody        string                                `pulumi:"templateBody"`
	TemplateName        *string                               `pulumi:"templateName"`
}

// The set of arguments for constructing a ProvisioningTemplate resource.
type ProvisioningTemplateArgs struct {
	Description         pulumi.StringPtrInput
	Enabled             pulumi.BoolPtrInput
	PreProvisioningHook ProvisioningTemplateProvisioningHookPtrInput
	ProvisioningRoleArn pulumi.StringInput
	Tags                ProvisioningTemplateTagArrayInput
	TemplateBody        pulumi.StringInput
	TemplateName        pulumi.StringPtrInput
}

func (ProvisioningTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateArgs)(nil)).Elem()
}

type ProvisioningTemplateInput interface {
	pulumi.Input

	ToProvisioningTemplateOutput() ProvisioningTemplateOutput
	ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput
}

func (*ProvisioningTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplate)(nil))
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return i.ToProvisioningTemplateOutputWithContext(context.Background())
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateOutput)
}

type ProvisioningTemplateOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplate)(nil))
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return o
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateInput)(nil)).Elem(), &ProvisioningTemplate{})
	pulumi.RegisterOutputType(ProvisioningTemplateOutput{})
}
