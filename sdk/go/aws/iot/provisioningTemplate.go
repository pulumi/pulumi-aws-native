// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a fleet provisioning template.
type ProvisioningTemplate struct {
	pulumi.CustomResourceState

	// The description of the fleet provisioning template.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// True to enable the fleet provisioning template, otherwise false.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Creates a pre-provisioning hook template.
	PreProvisioningHook ProvisioningTemplateProvisioningHookPtrOutput `pulumi:"preProvisioningHook"`
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn pulumi.StringOutput `pulumi:"provisioningRoleArn"`
	// Metadata that can be used to manage the fleet provisioning template.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The ARN that identifies the provisioning template.
	TemplateArn pulumi.StringOutput `pulumi:"templateArn"`
	// The JSON formatted contents of the fleet provisioning template version.
	TemplateBody pulumi.StringOutput `pulumi:"templateBody"`
	// The name of the fleet provisioning template.
	TemplateName pulumi.StringPtrOutput `pulumi:"templateName"`
	// The type of the provisioning template.
	TemplateType ProvisioningTemplateTemplateTypePtrOutput `pulumi:"templateType"`
}

// NewProvisioningTemplate registers a new resource with the given unique name, arguments, and options.
func NewProvisioningTemplate(ctx *pulumi.Context,
	name string, args *ProvisioningTemplateArgs, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProvisioningRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ProvisioningRoleArn'")
	}
	if args.TemplateBody == nil {
		return nil, errors.New("invalid value for required argument 'TemplateBody'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"templateName",
		"templateType",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProvisioningTemplate
	err := ctx.RegisterResource("aws-native:iot:ProvisioningTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisioningTemplate gets an existing ProvisioningTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisioningTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisioningTemplateState, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	var resource ProvisioningTemplate
	err := ctx.ReadResource("aws-native:iot:ProvisioningTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisioningTemplate resources.
type provisioningTemplateState struct {
}

type ProvisioningTemplateState struct {
}

func (ProvisioningTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateState)(nil)).Elem()
}

type provisioningTemplateArgs struct {
	// The description of the fleet provisioning template.
	Description *string `pulumi:"description"`
	// True to enable the fleet provisioning template, otherwise false.
	Enabled *bool `pulumi:"enabled"`
	// Creates a pre-provisioning hook template.
	PreProvisioningHook *ProvisioningTemplateProvisioningHook `pulumi:"preProvisioningHook"`
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn string `pulumi:"provisioningRoleArn"`
	// Metadata that can be used to manage the fleet provisioning template.
	Tags []aws.Tag `pulumi:"tags"`
	// The JSON formatted contents of the fleet provisioning template version.
	TemplateBody string `pulumi:"templateBody"`
	// The name of the fleet provisioning template.
	TemplateName *string `pulumi:"templateName"`
	// The type of the provisioning template.
	TemplateType *ProvisioningTemplateTemplateType `pulumi:"templateType"`
}

// The set of arguments for constructing a ProvisioningTemplate resource.
type ProvisioningTemplateArgs struct {
	// The description of the fleet provisioning template.
	Description pulumi.StringPtrInput
	// True to enable the fleet provisioning template, otherwise false.
	Enabled pulumi.BoolPtrInput
	// Creates a pre-provisioning hook template.
	PreProvisioningHook ProvisioningTemplateProvisioningHookPtrInput
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn pulumi.StringInput
	// Metadata that can be used to manage the fleet provisioning template.
	Tags aws.TagArrayInput
	// The JSON formatted contents of the fleet provisioning template version.
	TemplateBody pulumi.StringInput
	// The name of the fleet provisioning template.
	TemplateName pulumi.StringPtrInput
	// The type of the provisioning template.
	TemplateType ProvisioningTemplateTemplateTypePtrInput
}

func (ProvisioningTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateArgs)(nil)).Elem()
}

type ProvisioningTemplateInput interface {
	pulumi.Input

	ToProvisioningTemplateOutput() ProvisioningTemplateOutput
	ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput
}

func (*ProvisioningTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplate)(nil)).Elem()
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return i.ToProvisioningTemplateOutputWithContext(context.Background())
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateOutput)
}

type ProvisioningTemplateOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return o
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return o
}

// The description of the fleet provisioning template.
func (o ProvisioningTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// True to enable the fleet provisioning template, otherwise false.
func (o ProvisioningTemplateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Creates a pre-provisioning hook template.
func (o ProvisioningTemplateOutput) PreProvisioningHook() ProvisioningTemplateProvisioningHookPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) ProvisioningTemplateProvisioningHookPtrOutput {
		return v.PreProvisioningHook
	}).(ProvisioningTemplateProvisioningHookPtrOutput)
}

// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
func (o ProvisioningTemplateOutput) ProvisioningRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.ProvisioningRoleArn }).(pulumi.StringOutput)
}

// Metadata that can be used to manage the fleet provisioning template.
func (o ProvisioningTemplateOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The ARN that identifies the provisioning template.
func (o ProvisioningTemplateOutput) TemplateArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.TemplateArn }).(pulumi.StringOutput)
}

// The JSON formatted contents of the fleet provisioning template version.
func (o ProvisioningTemplateOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.TemplateBody }).(pulumi.StringOutput)
}

// The name of the fleet provisioning template.
func (o ProvisioningTemplateOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringPtrOutput { return v.TemplateName }).(pulumi.StringPtrOutput)
}

// The type of the provisioning template.
func (o ProvisioningTemplateOutput) TemplateType() ProvisioningTemplateTemplateTypePtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) ProvisioningTemplateTemplateTypePtrOutput { return v.TemplateType }).(ProvisioningTemplateTemplateTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateInput)(nil)).Elem(), &ProvisioningTemplate{})
	pulumi.RegisterOutputType(ProvisioningTemplateOutput{})
}
