// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create and manage a Domain Configuration
type DomainConfiguration struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput                                    `pulumi:"arn"`
	AuthorizerConfig          DomainConfigurationAuthorizerConfigPtrOutput           `pulumi:"authorizerConfig"`
	DomainConfigurationName   pulumi.StringPtrOutput                                 `pulumi:"domainConfigurationName"`
	DomainConfigurationStatus DomainConfigurationStatusPtrOutput                     `pulumi:"domainConfigurationStatus"`
	DomainName                pulumi.StringPtrOutput                                 `pulumi:"domainName"`
	DomainType                DomainConfigurationDomainTypeOutput                    `pulumi:"domainType"`
	ServerCertificateArns     pulumi.StringArrayOutput                               `pulumi:"serverCertificateArns"`
	ServerCertificates        DomainConfigurationServerCertificateSummaryArrayOutput `pulumi:"serverCertificates"`
	ServiceType               DomainConfigurationServiceTypePtrOutput                `pulumi:"serviceType"`
	Tags                      DomainConfigurationTagArrayOutput                      `pulumi:"tags"`
	ValidationCertificateArn  pulumi.StringPtrOutput                                 `pulumi:"validationCertificateArn"`
}

// NewDomainConfiguration registers a new resource with the given unique name, arguments, and options.
func NewDomainConfiguration(ctx *pulumi.Context,
	name string, args *DomainConfigurationArgs, opts ...pulumi.ResourceOption) (*DomainConfiguration, error) {
	if args == nil {
		args = &DomainConfigurationArgs{}
	}

	var resource DomainConfiguration
	err := ctx.RegisterResource("aws-native:iot:DomainConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainConfiguration gets an existing DomainConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainConfigurationState, opts ...pulumi.ResourceOption) (*DomainConfiguration, error) {
	var resource DomainConfiguration
	err := ctx.ReadResource("aws-native:iot:DomainConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainConfiguration resources.
type domainConfigurationState struct {
}

type DomainConfigurationState struct {
}

func (DomainConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainConfigurationState)(nil)).Elem()
}

type domainConfigurationArgs struct {
	AuthorizerConfig          *DomainConfigurationAuthorizerConfig `pulumi:"authorizerConfig"`
	DomainConfigurationName   *string                              `pulumi:"domainConfigurationName"`
	DomainConfigurationStatus *DomainConfigurationStatus           `pulumi:"domainConfigurationStatus"`
	DomainName                *string                              `pulumi:"domainName"`
	ServerCertificateArns     []string                             `pulumi:"serverCertificateArns"`
	ServiceType               *DomainConfigurationServiceType      `pulumi:"serviceType"`
	Tags                      []DomainConfigurationTag             `pulumi:"tags"`
	ValidationCertificateArn  *string                              `pulumi:"validationCertificateArn"`
}

// The set of arguments for constructing a DomainConfiguration resource.
type DomainConfigurationArgs struct {
	AuthorizerConfig          DomainConfigurationAuthorizerConfigPtrInput
	DomainConfigurationName   pulumi.StringPtrInput
	DomainConfigurationStatus DomainConfigurationStatusPtrInput
	DomainName                pulumi.StringPtrInput
	ServerCertificateArns     pulumi.StringArrayInput
	ServiceType               DomainConfigurationServiceTypePtrInput
	Tags                      DomainConfigurationTagArrayInput
	ValidationCertificateArn  pulumi.StringPtrInput
}

func (DomainConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainConfigurationArgs)(nil)).Elem()
}

type DomainConfigurationInput interface {
	pulumi.Input

	ToDomainConfigurationOutput() DomainConfigurationOutput
	ToDomainConfigurationOutputWithContext(ctx context.Context) DomainConfigurationOutput
}

func (*DomainConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfiguration)(nil)).Elem()
}

func (i *DomainConfiguration) ToDomainConfigurationOutput() DomainConfigurationOutput {
	return i.ToDomainConfigurationOutputWithContext(context.Background())
}

func (i *DomainConfiguration) ToDomainConfigurationOutputWithContext(ctx context.Context) DomainConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationOutput)
}

type DomainConfigurationOutput struct{ *pulumi.OutputState }

func (DomainConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfiguration)(nil)).Elem()
}

func (o DomainConfigurationOutput) ToDomainConfigurationOutput() DomainConfigurationOutput {
	return o
}

func (o DomainConfigurationOutput) ToDomainConfigurationOutputWithContext(ctx context.Context) DomainConfigurationOutput {
	return o
}

func (o DomainConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DomainConfigurationOutput) AuthorizerConfig() DomainConfigurationAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfigurationAuthorizerConfigPtrOutput { return v.AuthorizerConfig }).(DomainConfigurationAuthorizerConfigPtrOutput)
}

func (o DomainConfigurationOutput) DomainConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) pulumi.StringPtrOutput { return v.DomainConfigurationName }).(pulumi.StringPtrOutput)
}

func (o DomainConfigurationOutput) DomainConfigurationStatus() DomainConfigurationStatusPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfigurationStatusPtrOutput { return v.DomainConfigurationStatus }).(DomainConfigurationStatusPtrOutput)
}

func (o DomainConfigurationOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o DomainConfigurationOutput) DomainType() DomainConfigurationDomainTypeOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfigurationDomainTypeOutput { return v.DomainType }).(DomainConfigurationDomainTypeOutput)
}

func (o DomainConfigurationOutput) ServerCertificateArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainConfiguration) pulumi.StringArrayOutput { return v.ServerCertificateArns }).(pulumi.StringArrayOutput)
}

func (o DomainConfigurationOutput) ServerCertificates() DomainConfigurationServerCertificateSummaryArrayOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfigurationServerCertificateSummaryArrayOutput {
		return v.ServerCertificates
	}).(DomainConfigurationServerCertificateSummaryArrayOutput)
}

func (o DomainConfigurationOutput) ServiceType() DomainConfigurationServiceTypePtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfigurationServiceTypePtrOutput { return v.ServiceType }).(DomainConfigurationServiceTypePtrOutput)
}

func (o DomainConfigurationOutput) Tags() DomainConfigurationTagArrayOutput {
	return o.ApplyT(func(v *DomainConfiguration) DomainConfigurationTagArrayOutput { return v.Tags }).(DomainConfigurationTagArrayOutput)
}

func (o DomainConfigurationOutput) ValidationCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfiguration) pulumi.StringPtrOutput { return v.ValidationCertificateArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationInput)(nil)).Elem(), &DomainConfiguration{})
	pulumi.RegisterOutputType(DomainConfigurationOutput{})
}
