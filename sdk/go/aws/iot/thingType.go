// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoT::ThingType
type ThingType struct {
	pulumi.CustomResourceState

	// The thing type arn.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The thing type id.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// Deprecates a thing type. You can not associate new things with deprecated thing type.
	//
	// Requires permission to access the [DeprecateThingType](https://docs.aws.amazon.com//service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
	DeprecateThingType pulumi.BoolPtrOutput `pulumi:"deprecateThingType"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The name of the thing type.
	ThingTypeName pulumi.StringPtrOutput `pulumi:"thingTypeName"`
	// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
	ThingTypeProperties ThingTypePropertiesPropertiesPtrOutput `pulumi:"thingTypeProperties"`
}

// NewThingType registers a new resource with the given unique name, arguments, and options.
func NewThingType(ctx *pulumi.Context,
	name string, args *ThingTypeArgs, opts ...pulumi.ResourceOption) (*ThingType, error) {
	if args == nil {
		args = &ThingTypeArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"thingTypeName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ThingType
	err := ctx.RegisterResource("aws-native:iot:ThingType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThingType gets an existing ThingType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThingType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThingTypeState, opts ...pulumi.ResourceOption) (*ThingType, error) {
	var resource ThingType
	err := ctx.ReadResource("aws-native:iot:ThingType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThingType resources.
type thingTypeState struct {
}

type ThingTypeState struct {
}

func (ThingTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*thingTypeState)(nil)).Elem()
}

type thingTypeArgs struct {
	// Deprecates a thing type. You can not associate new things with deprecated thing type.
	//
	// Requires permission to access the [DeprecateThingType](https://docs.aws.amazon.com//service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
	DeprecateThingType *bool `pulumi:"deprecateThingType"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The name of the thing type.
	ThingTypeName *string `pulumi:"thingTypeName"`
	// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
	ThingTypeProperties *ThingTypePropertiesProperties `pulumi:"thingTypeProperties"`
}

// The set of arguments for constructing a ThingType resource.
type ThingTypeArgs struct {
	// Deprecates a thing type. You can not associate new things with deprecated thing type.
	//
	// Requires permission to access the [DeprecateThingType](https://docs.aws.amazon.com//service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
	DeprecateThingType pulumi.BoolPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
	// The name of the thing type.
	ThingTypeName pulumi.StringPtrInput
	// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
	ThingTypeProperties ThingTypePropertiesPropertiesPtrInput
}

func (ThingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thingTypeArgs)(nil)).Elem()
}

type ThingTypeInput interface {
	pulumi.Input

	ToThingTypeOutput() ThingTypeOutput
	ToThingTypeOutputWithContext(ctx context.Context) ThingTypeOutput
}

func (*ThingType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingType)(nil)).Elem()
}

func (i *ThingType) ToThingTypeOutput() ThingTypeOutput {
	return i.ToThingTypeOutputWithContext(context.Background())
}

func (i *ThingType) ToThingTypeOutputWithContext(ctx context.Context) ThingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypeOutput)
}

type ThingTypeOutput struct{ *pulumi.OutputState }

func (ThingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingType)(nil)).Elem()
}

func (o ThingTypeOutput) ToThingTypeOutput() ThingTypeOutput {
	return o
}

func (o ThingTypeOutput) ToThingTypeOutputWithContext(ctx context.Context) ThingTypeOutput {
	return o
}

// The thing type arn.
func (o ThingTypeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ThingType) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The thing type id.
func (o ThingTypeOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ThingType) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// Deprecates a thing type. You can not associate new things with deprecated thing type.
//
// Requires permission to access the [DeprecateThingType](https://docs.aws.amazon.com//service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
func (o ThingTypeOutput) DeprecateThingType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ThingType) pulumi.BoolPtrOutput { return v.DeprecateThingType }).(pulumi.BoolPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ThingTypeOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ThingType) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The name of the thing type.
func (o ThingTypeOutput) ThingTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingType) pulumi.StringPtrOutput { return v.ThingTypeName }).(pulumi.StringPtrOutput)
}

// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
func (o ThingTypeOutput) ThingTypeProperties() ThingTypePropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *ThingType) ThingTypePropertiesPropertiesPtrOutput { return v.ThingTypeProperties }).(ThingTypePropertiesPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypeInput)(nil)).Elem(), &ThingType{})
	pulumi.RegisterOutputType(ThingTypeOutput{})
}
