// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents the resource definition of AWS IoT Command.
type Command struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the command.
	CommandArn pulumi.StringOutput `pulumi:"commandArn"`
	// The unique identifier for the command.
	CommandId pulumi.StringOutput `pulumi:"commandId"`
	// The date and time when the command was created.
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// A flag indicating whether the command is deprecated.
	Deprecated pulumi.BoolPtrOutput `pulumi:"deprecated"`
	// The description of the command.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name for the command.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The date and time when the command was last updated.
	LastUpdatedAt pulumi.StringPtrOutput `pulumi:"lastUpdatedAt"`
	// The list of mandatory parameters for the command.
	MandatoryParameters CommandParameterArrayOutput `pulumi:"mandatoryParameters"`
	// The namespace to which the command belongs.
	Namespace CommandNamespacePtrOutput `pulumi:"namespace"`
	// The payload associated with the command.
	Payload CommandPayloadPtrOutput `pulumi:"payload"`
	// A flag indicating whether the command is pending deletion.
	PendingDeletion pulumi.BoolPtrOutput `pulumi:"pendingDeletion"`
	// The customer role associated with the command.
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// The tags to be associated with the command.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewCommand registers a new resource with the given unique name, arguments, and options.
func NewCommand(ctx *pulumi.Context,
	name string, args *CommandArgs, opts ...pulumi.ResourceOption) (*Command, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommandId == nil {
		return nil, errors.New("invalid value for required argument 'CommandId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"commandId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Command
	err := ctx.RegisterResource("aws-native:iot:Command", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCommand gets an existing Command resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCommand(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CommandState, opts ...pulumi.ResourceOption) (*Command, error) {
	var resource Command
	err := ctx.ReadResource("aws-native:iot:Command", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Command resources.
type commandState struct {
}

type CommandState struct {
}

func (CommandState) ElementType() reflect.Type {
	return reflect.TypeOf((*commandState)(nil)).Elem()
}

type commandArgs struct {
	// The unique identifier for the command.
	CommandId string `pulumi:"commandId"`
	// The date and time when the command was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A flag indicating whether the command is deprecated.
	Deprecated *bool `pulumi:"deprecated"`
	// The description of the command.
	Description *string `pulumi:"description"`
	// The display name for the command.
	DisplayName *string `pulumi:"displayName"`
	// The date and time when the command was last updated.
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The list of mandatory parameters for the command.
	MandatoryParameters []CommandParameter `pulumi:"mandatoryParameters"`
	// The namespace to which the command belongs.
	Namespace *CommandNamespace `pulumi:"namespace"`
	// The payload associated with the command.
	Payload *CommandPayload `pulumi:"payload"`
	// A flag indicating whether the command is pending deletion.
	PendingDeletion *bool `pulumi:"pendingDeletion"`
	// The customer role associated with the command.
	RoleArn *string `pulumi:"roleArn"`
	// The tags to be associated with the command.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Command resource.
type CommandArgs struct {
	// The unique identifier for the command.
	CommandId pulumi.StringInput
	// The date and time when the command was created.
	CreatedAt pulumi.StringPtrInput
	// A flag indicating whether the command is deprecated.
	Deprecated pulumi.BoolPtrInput
	// The description of the command.
	Description pulumi.StringPtrInput
	// The display name for the command.
	DisplayName pulumi.StringPtrInput
	// The date and time when the command was last updated.
	LastUpdatedAt pulumi.StringPtrInput
	// The list of mandatory parameters for the command.
	MandatoryParameters CommandParameterArrayInput
	// The namespace to which the command belongs.
	Namespace CommandNamespacePtrInput
	// The payload associated with the command.
	Payload CommandPayloadPtrInput
	// A flag indicating whether the command is pending deletion.
	PendingDeletion pulumi.BoolPtrInput
	// The customer role associated with the command.
	RoleArn pulumi.StringPtrInput
	// The tags to be associated with the command.
	Tags aws.TagArrayInput
}

func (CommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*commandArgs)(nil)).Elem()
}

type CommandInput interface {
	pulumi.Input

	ToCommandOutput() CommandOutput
	ToCommandOutputWithContext(ctx context.Context) CommandOutput
}

func (*Command) ElementType() reflect.Type {
	return reflect.TypeOf((**Command)(nil)).Elem()
}

func (i *Command) ToCommandOutput() CommandOutput {
	return i.ToCommandOutputWithContext(context.Background())
}

func (i *Command) ToCommandOutputWithContext(ctx context.Context) CommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandOutput)
}

type CommandOutput struct{ *pulumi.OutputState }

func (CommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Command)(nil)).Elem()
}

func (o CommandOutput) ToCommandOutput() CommandOutput {
	return o
}

func (o CommandOutput) ToCommandOutputWithContext(ctx context.Context) CommandOutput {
	return o
}

// The Amazon Resource Name (ARN) of the command.
func (o CommandOutput) CommandArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Command) pulumi.StringOutput { return v.CommandArn }).(pulumi.StringOutput)
}

// The unique identifier for the command.
func (o CommandOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v *Command) pulumi.StringOutput { return v.CommandId }).(pulumi.StringOutput)
}

// The date and time when the command was created.
func (o CommandOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A flag indicating whether the command is deprecated.
func (o CommandOutput) Deprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.BoolPtrOutput { return v.Deprecated }).(pulumi.BoolPtrOutput)
}

// The description of the command.
func (o CommandOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name for the command.
func (o CommandOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The date and time when the command was last updated.
func (o CommandOutput) LastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.StringPtrOutput { return v.LastUpdatedAt }).(pulumi.StringPtrOutput)
}

// The list of mandatory parameters for the command.
func (o CommandOutput) MandatoryParameters() CommandParameterArrayOutput {
	return o.ApplyT(func(v *Command) CommandParameterArrayOutput { return v.MandatoryParameters }).(CommandParameterArrayOutput)
}

// The namespace to which the command belongs.
func (o CommandOutput) Namespace() CommandNamespacePtrOutput {
	return o.ApplyT(func(v *Command) CommandNamespacePtrOutput { return v.Namespace }).(CommandNamespacePtrOutput)
}

// The payload associated with the command.
func (o CommandOutput) Payload() CommandPayloadPtrOutput {
	return o.ApplyT(func(v *Command) CommandPayloadPtrOutput { return v.Payload }).(CommandPayloadPtrOutput)
}

// A flag indicating whether the command is pending deletion.
func (o CommandOutput) PendingDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.BoolPtrOutput { return v.PendingDeletion }).(pulumi.BoolPtrOutput)
}

// The customer role associated with the command.
func (o CommandOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Command) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The tags to be associated with the command.
func (o CommandOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Command) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CommandInput)(nil)).Elem(), &Command{})
	pulumi.RegisterOutputType(CommandOutput{})
}
