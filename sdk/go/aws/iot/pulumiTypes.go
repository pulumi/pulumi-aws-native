// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// The criteria that determine when and how a job abort takes place.
type AbortConfigProperties struct {
	// The list of criteria that determine when and how to abort the job.
	CriteriaList []JobTemplateAbortCriteria `pulumi:"criteriaList"`
}

// AbortConfigPropertiesInput is an input type that accepts AbortConfigPropertiesArgs and AbortConfigPropertiesOutput values.
// You can construct a concrete instance of `AbortConfigPropertiesInput` via:
//
//	AbortConfigPropertiesArgs{...}
type AbortConfigPropertiesInput interface {
	pulumi.Input

	ToAbortConfigPropertiesOutput() AbortConfigPropertiesOutput
	ToAbortConfigPropertiesOutputWithContext(context.Context) AbortConfigPropertiesOutput
}

// The criteria that determine when and how a job abort takes place.
type AbortConfigPropertiesArgs struct {
	// The list of criteria that determine when and how to abort the job.
	CriteriaList JobTemplateAbortCriteriaArrayInput `pulumi:"criteriaList"`
}

func (AbortConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AbortConfigProperties)(nil)).Elem()
}

func (i AbortConfigPropertiesArgs) ToAbortConfigPropertiesOutput() AbortConfigPropertiesOutput {
	return i.ToAbortConfigPropertiesOutputWithContext(context.Background())
}

func (i AbortConfigPropertiesArgs) ToAbortConfigPropertiesOutputWithContext(ctx context.Context) AbortConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AbortConfigPropertiesOutput)
}

func (i AbortConfigPropertiesArgs) ToAbortConfigPropertiesPtrOutput() AbortConfigPropertiesPtrOutput {
	return i.ToAbortConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i AbortConfigPropertiesArgs) ToAbortConfigPropertiesPtrOutputWithContext(ctx context.Context) AbortConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AbortConfigPropertiesOutput).ToAbortConfigPropertiesPtrOutputWithContext(ctx)
}

// AbortConfigPropertiesPtrInput is an input type that accepts AbortConfigPropertiesArgs, AbortConfigPropertiesPtr and AbortConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `AbortConfigPropertiesPtrInput` via:
//
//	        AbortConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type AbortConfigPropertiesPtrInput interface {
	pulumi.Input

	ToAbortConfigPropertiesPtrOutput() AbortConfigPropertiesPtrOutput
	ToAbortConfigPropertiesPtrOutputWithContext(context.Context) AbortConfigPropertiesPtrOutput
}

type abortConfigPropertiesPtrType AbortConfigPropertiesArgs

func AbortConfigPropertiesPtr(v *AbortConfigPropertiesArgs) AbortConfigPropertiesPtrInput {
	return (*abortConfigPropertiesPtrType)(v)
}

func (*abortConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AbortConfigProperties)(nil)).Elem()
}

func (i *abortConfigPropertiesPtrType) ToAbortConfigPropertiesPtrOutput() AbortConfigPropertiesPtrOutput {
	return i.ToAbortConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *abortConfigPropertiesPtrType) ToAbortConfigPropertiesPtrOutputWithContext(ctx context.Context) AbortConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AbortConfigPropertiesPtrOutput)
}

// The criteria that determine when and how a job abort takes place.
type AbortConfigPropertiesOutput struct{ *pulumi.OutputState }

func (AbortConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbortConfigProperties)(nil)).Elem()
}

func (o AbortConfigPropertiesOutput) ToAbortConfigPropertiesOutput() AbortConfigPropertiesOutput {
	return o
}

func (o AbortConfigPropertiesOutput) ToAbortConfigPropertiesOutputWithContext(ctx context.Context) AbortConfigPropertiesOutput {
	return o
}

func (o AbortConfigPropertiesOutput) ToAbortConfigPropertiesPtrOutput() AbortConfigPropertiesPtrOutput {
	return o.ToAbortConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o AbortConfigPropertiesOutput) ToAbortConfigPropertiesPtrOutputWithContext(ctx context.Context) AbortConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AbortConfigProperties) *AbortConfigProperties {
		return &v
	}).(AbortConfigPropertiesPtrOutput)
}

// The list of criteria that determine when and how to abort the job.
func (o AbortConfigPropertiesOutput) CriteriaList() JobTemplateAbortCriteriaArrayOutput {
	return o.ApplyT(func(v AbortConfigProperties) []JobTemplateAbortCriteria { return v.CriteriaList }).(JobTemplateAbortCriteriaArrayOutput)
}

type AbortConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AbortConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AbortConfigProperties)(nil)).Elem()
}

func (o AbortConfigPropertiesPtrOutput) ToAbortConfigPropertiesPtrOutput() AbortConfigPropertiesPtrOutput {
	return o
}

func (o AbortConfigPropertiesPtrOutput) ToAbortConfigPropertiesPtrOutputWithContext(ctx context.Context) AbortConfigPropertiesPtrOutput {
	return o
}

func (o AbortConfigPropertiesPtrOutput) Elem() AbortConfigPropertiesOutput {
	return o.ApplyT(func(v *AbortConfigProperties) AbortConfigProperties {
		if v != nil {
			return *v
		}
		var ret AbortConfigProperties
		return ret
	}).(AbortConfigPropertiesOutput)
}

// The list of criteria that determine when and how to abort the job.
func (o AbortConfigPropertiesPtrOutput) CriteriaList() JobTemplateAbortCriteriaArrayOutput {
	return o.ApplyT(func(v *AbortConfigProperties) []JobTemplateAbortCriteria {
		if v == nil {
			return nil
		}
		return v.CriteriaList
	}).(JobTemplateAbortCriteriaArrayOutput)
}

// The configuration for a specific audit check.
type AccountAuditConfigurationAuditCheckConfiguration struct {
	// True if the check is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// AccountAuditConfigurationAuditCheckConfigurationInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationArgs and AccountAuditConfigurationAuditCheckConfigurationOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationInput` via:
//
//	AccountAuditConfigurationAuditCheckConfigurationArgs{...}
type AccountAuditConfigurationAuditCheckConfigurationInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationOutput() AccountAuditConfigurationAuditCheckConfigurationOutput
	ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationOutput
}

// The configuration for a specific audit check.
type AccountAuditConfigurationAuditCheckConfigurationArgs struct {
	// True if the check is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AccountAuditConfigurationAuditCheckConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationOutput() AccountAuditConfigurationAuditCheckConfigurationOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationOutput)
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationOutput).ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditCheckConfigurationPtrInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationArgs, AccountAuditConfigurationAuditCheckConfigurationPtr and AccountAuditConfigurationAuditCheckConfigurationPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationPtrInput` via:
//
//	        AccountAuditConfigurationAuditCheckConfigurationArgs{...}
//
//	or:
//
//	        nil
type AccountAuditConfigurationAuditCheckConfigurationPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput
	ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput
}

type accountAuditConfigurationAuditCheckConfigurationPtrType AccountAuditConfigurationAuditCheckConfigurationArgs

func AccountAuditConfigurationAuditCheckConfigurationPtr(v *AccountAuditConfigurationAuditCheckConfigurationArgs) AccountAuditConfigurationAuditCheckConfigurationPtrInput {
	return (*accountAuditConfigurationAuditCheckConfigurationPtrType)(v)
}

func (*accountAuditConfigurationAuditCheckConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditCheckConfigurationPtrType) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditCheckConfigurationPtrType) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// The configuration for a specific audit check.
type AccountAuditConfigurationAuditCheckConfigurationOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationOutput() AccountAuditConfigurationAuditCheckConfigurationOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditCheckConfiguration) *AccountAuditConfigurationAuditCheckConfiguration {
		return &v
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// True if the check is enabled.
func (o AccountAuditConfigurationAuditCheckConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AccountAuditConfigurationAuditCheckConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) Elem() AccountAuditConfigurationAuditCheckConfigurationOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfiguration) AccountAuditConfigurationAuditCheckConfiguration {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditCheckConfiguration
		return ret
	}).(AccountAuditConfigurationAuditCheckConfigurationOutput)
}

// True if the check is enabled.
func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies which audit checks are enabled and disabled for this account.
type AccountAuditConfigurationAuditCheckConfigurations struct {
	// Checks the permissiveness of an authenticated Amazon Cognito identity pool role. For this check, AWS IoT Device Defender audits all Amazon Cognito identity pools that have been used to connect to the AWS IoT message broker during the 31 days before the audit is performed.
	AuthenticatedCognitoRoleOverlyPermissiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"authenticatedCognitoRoleOverlyPermissiveCheck"`
	// Checks if a CA certificate is expiring. This check applies to CA certificates expiring within 30 days or that have expired.
	CaCertificateExpiringCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"caCertificateExpiringCheck"`
	// Checks the quality of the CA certificate key. The quality checks if the key is in a valid format, not expired, and if the key meets a minimum required size. This check applies to CA certificates that are `ACTIVE` or `PENDING_TRANSFER` .
	CaCertificateKeyQualityCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"caCertificateKeyQualityCheck"`
	// Checks if multiple devices connect using the same client ID.
	ConflictingClientIdsCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"conflictingClientIdsCheck"`
	// Checks if a device certificate is expiring. This check applies to device certificates expiring within 30 days or that have expired.
	DeviceCertificateExpiringCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"deviceCertificateExpiringCheck"`
	// Checks the quality of the device certificate key. The quality checks if the key is in a valid format, not expired, signed by a registered certificate authority, and if the key meets a minimum required size.
	DeviceCertificateKeyQualityCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"deviceCertificateKeyQualityCheck"`
	// Checks if multiple concurrent connections use the same X.509 certificate to authenticate with AWS IoT .
	DeviceCertificateSharedCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"deviceCertificateSharedCheck"`
	// Checks if device certificates are still active despite being revoked by an intermediate CA.
	IntermediateCaRevokedForActiveDeviceCertificatesCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"intermediateCaRevokedForActiveDeviceCertificatesCheck"`
	// Checks if an AWS IoT policy is potentially misconfigured. Misconfigured policies, including overly permissive policies, can cause security incidents like allowing devices access to unintended resources. This check is a warning for you to make sure that only intended actions are allowed before updating the policy.
	IoTPolicyPotentialMisConfigurationCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"ioTPolicyPotentialMisConfigurationCheck"`
	// Checks the permissiveness of a policy attached to an authenticated Amazon Cognito identity pool role.
	IotPolicyOverlyPermissiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"iotPolicyOverlyPermissiveCheck"`
	// Checks if a role alias has access to services that haven't been used for the AWS IoT device in the last year.
	IotRoleAliasAllowsAccessToUnusedServicesCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"iotRoleAliasAllowsAccessToUnusedServicesCheck"`
	// Checks if the temporary credentials provided by AWS IoT role aliases are overly permissive.
	IotRoleAliasOverlyPermissiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"iotRoleAliasOverlyPermissiveCheck"`
	// Checks if AWS IoT logs are disabled.
	LoggingDisabledCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"loggingDisabledCheck"`
	// Checks if a revoked CA certificate is still active.
	RevokedCaCertificateStillActiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"revokedCaCertificateStillActiveCheck"`
	// Checks if a revoked device certificate is still active.
	RevokedDeviceCertificateStillActiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"revokedDeviceCertificateStillActiveCheck"`
	// Checks if policy attached to an unauthenticated Amazon Cognito identity pool role is too permissive.
	UnauthenticatedCognitoRoleOverlyPermissiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"unauthenticatedCognitoRoleOverlyPermissiveCheck"`
}

// AccountAuditConfigurationAuditCheckConfigurationsInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationsArgs and AccountAuditConfigurationAuditCheckConfigurationsOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationsInput` via:
//
//	AccountAuditConfigurationAuditCheckConfigurationsArgs{...}
type AccountAuditConfigurationAuditCheckConfigurationsInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationsOutput() AccountAuditConfigurationAuditCheckConfigurationsOutput
	ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationsOutput
}

// Specifies which audit checks are enabled and disabled for this account.
type AccountAuditConfigurationAuditCheckConfigurationsArgs struct {
	// Checks the permissiveness of an authenticated Amazon Cognito identity pool role. For this check, AWS IoT Device Defender audits all Amazon Cognito identity pools that have been used to connect to the AWS IoT message broker during the 31 days before the audit is performed.
	AuthenticatedCognitoRoleOverlyPermissiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"authenticatedCognitoRoleOverlyPermissiveCheck"`
	// Checks if a CA certificate is expiring. This check applies to CA certificates expiring within 30 days or that have expired.
	CaCertificateExpiringCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"caCertificateExpiringCheck"`
	// Checks the quality of the CA certificate key. The quality checks if the key is in a valid format, not expired, and if the key meets a minimum required size. This check applies to CA certificates that are `ACTIVE` or `PENDING_TRANSFER` .
	CaCertificateKeyQualityCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"caCertificateKeyQualityCheck"`
	// Checks if multiple devices connect using the same client ID.
	ConflictingClientIdsCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"conflictingClientIdsCheck"`
	// Checks if a device certificate is expiring. This check applies to device certificates expiring within 30 days or that have expired.
	DeviceCertificateExpiringCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"deviceCertificateExpiringCheck"`
	// Checks the quality of the device certificate key. The quality checks if the key is in a valid format, not expired, signed by a registered certificate authority, and if the key meets a minimum required size.
	DeviceCertificateKeyQualityCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"deviceCertificateKeyQualityCheck"`
	// Checks if multiple concurrent connections use the same X.509 certificate to authenticate with AWS IoT .
	DeviceCertificateSharedCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"deviceCertificateSharedCheck"`
	// Checks if device certificates are still active despite being revoked by an intermediate CA.
	IntermediateCaRevokedForActiveDeviceCertificatesCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"intermediateCaRevokedForActiveDeviceCertificatesCheck"`
	// Checks if an AWS IoT policy is potentially misconfigured. Misconfigured policies, including overly permissive policies, can cause security incidents like allowing devices access to unintended resources. This check is a warning for you to make sure that only intended actions are allowed before updating the policy.
	IoTPolicyPotentialMisConfigurationCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"ioTPolicyPotentialMisConfigurationCheck"`
	// Checks the permissiveness of a policy attached to an authenticated Amazon Cognito identity pool role.
	IotPolicyOverlyPermissiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"iotPolicyOverlyPermissiveCheck"`
	// Checks if a role alias has access to services that haven't been used for the AWS IoT device in the last year.
	IotRoleAliasAllowsAccessToUnusedServicesCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"iotRoleAliasAllowsAccessToUnusedServicesCheck"`
	// Checks if the temporary credentials provided by AWS IoT role aliases are overly permissive.
	IotRoleAliasOverlyPermissiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"iotRoleAliasOverlyPermissiveCheck"`
	// Checks if AWS IoT logs are disabled.
	LoggingDisabledCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"loggingDisabledCheck"`
	// Checks if a revoked CA certificate is still active.
	RevokedCaCertificateStillActiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"revokedCaCertificateStillActiveCheck"`
	// Checks if a revoked device certificate is still active.
	RevokedDeviceCertificateStillActiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"revokedDeviceCertificateStillActiveCheck"`
	// Checks if policy attached to an unauthenticated Amazon Cognito identity pool role is too permissive.
	UnauthenticatedCognitoRoleOverlyPermissiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"unauthenticatedCognitoRoleOverlyPermissiveCheck"`
}

func (AccountAuditConfigurationAuditCheckConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditCheckConfigurationsArgs) ToAccountAuditConfigurationAuditCheckConfigurationsOutput() AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationsArgs) ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationsOutput)
}

// Specifies which audit checks are enabled and disabled for this account.
type AccountAuditConfigurationAuditCheckConfigurationsOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ToAccountAuditConfigurationAuditCheckConfigurationsOutput() AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return o
}

// Checks the permissiveness of an authenticated Amazon Cognito identity pool role. For this check, AWS IoT Device Defender audits all Amazon Cognito identity pools that have been used to connect to the AWS IoT message broker during the 31 days before the audit is performed.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) AuthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.AuthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a CA certificate is expiring. This check applies to CA certificates expiring within 30 days or that have expired.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) CaCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.CaCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks the quality of the CA certificate key. The quality checks if the key is in a valid format, not expired, and if the key meets a minimum required size. This check applies to CA certificates that are `ACTIVE` or `PENDING_TRANSFER` .
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) CaCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.CaCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if multiple devices connect using the same client ID.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ConflictingClientIdsCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.ConflictingClientIdsCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a device certificate is expiring. This check applies to device certificates expiring within 30 days or that have expired.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) DeviceCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.DeviceCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks the quality of the device certificate key. The quality checks if the key is in a valid format, not expired, signed by a registered certificate authority, and if the key meets a minimum required size.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) DeviceCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.DeviceCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if multiple concurrent connections use the same X.509 certificate to authenticate with AWS IoT .
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) DeviceCertificateSharedCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.DeviceCertificateSharedCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if device certificates are still active despite being revoked by an intermediate CA.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IntermediateCaRevokedForActiveDeviceCertificatesCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IntermediateCaRevokedForActiveDeviceCertificatesCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if an AWS IoT policy is potentially misconfigured. Misconfigured policies, including overly permissive policies, can cause security incidents like allowing devices access to unintended resources. This check is a warning for you to make sure that only intended actions are allowed before updating the policy.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IoTPolicyPotentialMisConfigurationCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IoTPolicyPotentialMisConfigurationCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks the permissiveness of a policy attached to an authenticated Amazon Cognito identity pool role.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IotPolicyOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IotPolicyOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a role alias has access to services that haven't been used for the AWS IoT device in the last year.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IotRoleAliasAllowsAccessToUnusedServicesCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IotRoleAliasAllowsAccessToUnusedServicesCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if the temporary credentials provided by AWS IoT role aliases are overly permissive.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IotRoleAliasOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IotRoleAliasOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if AWS IoT logs are disabled.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) LoggingDisabledCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.LoggingDisabledCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a revoked CA certificate is still active.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) RevokedCaCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.RevokedCaCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a revoked device certificate is still active.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) RevokedDeviceCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.RevokedDeviceCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if policy attached to an unauthenticated Amazon Cognito identity pool role is too permissive.
func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) UnauthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.UnauthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

type AccountAuditConfigurationAuditCheckConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutput() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) Elem() AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) AccountAuditConfigurationAuditCheckConfigurations {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditCheckConfigurations
		return ret
	}).(AccountAuditConfigurationAuditCheckConfigurationsOutput)
}

// Checks the permissiveness of an authenticated Amazon Cognito identity pool role. For this check, AWS IoT Device Defender audits all Amazon Cognito identity pools that have been used to connect to the AWS IoT message broker during the 31 days before the audit is performed.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) AuthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.AuthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a CA certificate is expiring. This check applies to CA certificates expiring within 30 days or that have expired.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) CaCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.CaCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks the quality of the CA certificate key. The quality checks if the key is in a valid format, not expired, and if the key meets a minimum required size. This check applies to CA certificates that are `ACTIVE` or `PENDING_TRANSFER` .
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) CaCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.CaCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if multiple devices connect using the same client ID.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ConflictingClientIdsCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.ConflictingClientIdsCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a device certificate is expiring. This check applies to device certificates expiring within 30 days or that have expired.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) DeviceCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks the quality of the device certificate key. The quality checks if the key is in a valid format, not expired, signed by a registered certificate authority, and if the key meets a minimum required size.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) DeviceCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if multiple concurrent connections use the same X.509 certificate to authenticate with AWS IoT .
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) DeviceCertificateSharedCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceCertificateSharedCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if device certificates are still active despite being revoked by an intermediate CA.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IntermediateCaRevokedForActiveDeviceCertificatesCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IntermediateCaRevokedForActiveDeviceCertificatesCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if an AWS IoT policy is potentially misconfigured. Misconfigured policies, including overly permissive policies, can cause security incidents like allowing devices access to unintended resources. This check is a warning for you to make sure that only intended actions are allowed before updating the policy.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IoTPolicyPotentialMisConfigurationCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IoTPolicyPotentialMisConfigurationCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks the permissiveness of a policy attached to an authenticated Amazon Cognito identity pool role.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IotPolicyOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IotPolicyOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a role alias has access to services that haven't been used for the AWS IoT device in the last year.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IotRoleAliasAllowsAccessToUnusedServicesCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IotRoleAliasAllowsAccessToUnusedServicesCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if the temporary credentials provided by AWS IoT role aliases are overly permissive.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IotRoleAliasOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IotRoleAliasOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if AWS IoT logs are disabled.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) LoggingDisabledCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.LoggingDisabledCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a revoked CA certificate is still active.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) RevokedCaCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.RevokedCaCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if a revoked device certificate is still active.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) RevokedDeviceCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.RevokedDeviceCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// Checks if policy attached to an unauthenticated Amazon Cognito identity pool role is too permissive.
func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) UnauthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTarget struct {
	// True if notifications to the target are enabled.
	Enabled *bool `pulumi:"enabled"`
	// The ARN of the role that grants permission to send notifications to the target.
	RoleArn *string `pulumi:"roleArn"`
	// The ARN of the target (SNS topic) to which audit notifications are sent.
	TargetArn *string `pulumi:"targetArn"`
}

// AccountAuditConfigurationAuditNotificationTargetInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetArgs and AccountAuditConfigurationAuditNotificationTargetOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetInput` via:
//
//	AccountAuditConfigurationAuditNotificationTargetArgs{...}
type AccountAuditConfigurationAuditNotificationTargetInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetOutput() AccountAuditConfigurationAuditNotificationTargetOutput
	ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetOutput
}

type AccountAuditConfigurationAuditNotificationTargetArgs struct {
	// True if notifications to the target are enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The ARN of the role that grants permission to send notifications to the target.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The ARN of the target (SNS topic) to which audit notifications are sent.
	TargetArn pulumi.StringPtrInput `pulumi:"targetArn"`
}

func (AccountAuditConfigurationAuditNotificationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetOutput() AccountAuditConfigurationAuditNotificationTargetOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetOutput)
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetOutput).ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditNotificationTargetPtrInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetArgs, AccountAuditConfigurationAuditNotificationTargetPtr and AccountAuditConfigurationAuditNotificationTargetPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetPtrInput` via:
//
//	        AccountAuditConfigurationAuditNotificationTargetArgs{...}
//
//	or:
//
//	        nil
type AccountAuditConfigurationAuditNotificationTargetPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput
	ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput
}

type accountAuditConfigurationAuditNotificationTargetPtrType AccountAuditConfigurationAuditNotificationTargetArgs

func AccountAuditConfigurationAuditNotificationTargetPtr(v *AccountAuditConfigurationAuditNotificationTargetArgs) AccountAuditConfigurationAuditNotificationTargetPtrInput {
	return (*accountAuditConfigurationAuditNotificationTargetPtrType)(v)
}

func (*accountAuditConfigurationAuditNotificationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditNotificationTargetPtrType) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditNotificationTargetPtrType) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTargetOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetOutput() AccountAuditConfigurationAuditNotificationTargetOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditNotificationTarget) *AccountAuditConfigurationAuditNotificationTarget {
		return &v
	}).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

// True if notifications to the target are enabled.
func (o AccountAuditConfigurationAuditNotificationTargetOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTarget) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ARN of the role that grants permission to send notifications to the target.
func (o AccountAuditConfigurationAuditNotificationTargetOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTarget) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The ARN of the target (SNS topic) to which audit notifications are sent.
func (o AccountAuditConfigurationAuditNotificationTargetOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTarget) *string { return v.TargetArn }).(pulumi.StringPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTargetPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) Elem() AccountAuditConfigurationAuditNotificationTargetOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) AccountAuditConfigurationAuditNotificationTarget {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditNotificationTarget
		return ret
	}).(AccountAuditConfigurationAuditNotificationTargetOutput)
}

// True if notifications to the target are enabled.
func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The ARN of the role that grants permission to send notifications to the target.
func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the target (SNS topic) to which audit notifications are sent.
func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) *string {
		if v == nil {
			return nil
		}
		return v.TargetArn
	}).(pulumi.StringPtrOutput)
}

// Information about the targets to which audit notifications are sent.
type AccountAuditConfigurationAuditNotificationTargetConfigurations struct {
	// The `Sns` notification target.
	Sns *AccountAuditConfigurationAuditNotificationTarget `pulumi:"sns"`
}

// AccountAuditConfigurationAuditNotificationTargetConfigurationsInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs and AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetConfigurationsInput` via:
//
//	AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs{...}
type AccountAuditConfigurationAuditNotificationTargetConfigurationsInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput
	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput
}

// Information about the targets to which audit notifications are sent.
type AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs struct {
	// The `Sns` notification target.
	Sns AccountAuditConfigurationAuditNotificationTargetPtrInput `pulumi:"sns"`
}

func (AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput)
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput).ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs, AccountAuditConfigurationAuditNotificationTargetConfigurationsPtr and AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput` via:
//
//	        AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs{...}
//
//	or:
//
//	        nil
type AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput
	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput
}

type accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs

func AccountAuditConfigurationAuditNotificationTargetConfigurationsPtr(v *AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput {
	return (*accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType)(v)
}

func (*accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput)
}

// Information about the targets to which audit notifications are sent.
type AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditNotificationTargetConfigurations) *AccountAuditConfigurationAuditNotificationTargetConfigurations {
		return &v
	}).(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput)
}

// The `Sns` notification target.
func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) Sns() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTargetConfigurations) *AccountAuditConfigurationAuditNotificationTarget {
		return v.Sns
	}).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) Elem() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTargetConfigurations) AccountAuditConfigurationAuditNotificationTargetConfigurations {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditNotificationTargetConfigurations
		return ret
	}).(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput)
}

// The `Sns` notification target.
func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) Sns() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTargetConfigurations) *AccountAuditConfigurationAuditNotificationTarget {
		if v == nil {
			return nil
		}
		return v.Sns
	}).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

type AuthorizerTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// The properties of the billing group.
type BillingGroupPropertiesProperties struct {
	// The description of the billing group.
	BillingGroupDescription *string `pulumi:"billingGroupDescription"`
}

// BillingGroupPropertiesPropertiesInput is an input type that accepts BillingGroupPropertiesPropertiesArgs and BillingGroupPropertiesPropertiesOutput values.
// You can construct a concrete instance of `BillingGroupPropertiesPropertiesInput` via:
//
//	BillingGroupPropertiesPropertiesArgs{...}
type BillingGroupPropertiesPropertiesInput interface {
	pulumi.Input

	ToBillingGroupPropertiesPropertiesOutput() BillingGroupPropertiesPropertiesOutput
	ToBillingGroupPropertiesPropertiesOutputWithContext(context.Context) BillingGroupPropertiesPropertiesOutput
}

// The properties of the billing group.
type BillingGroupPropertiesPropertiesArgs struct {
	// The description of the billing group.
	BillingGroupDescription pulumi.StringPtrInput `pulumi:"billingGroupDescription"`
}

func (BillingGroupPropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingGroupPropertiesProperties)(nil)).Elem()
}

func (i BillingGroupPropertiesPropertiesArgs) ToBillingGroupPropertiesPropertiesOutput() BillingGroupPropertiesPropertiesOutput {
	return i.ToBillingGroupPropertiesPropertiesOutputWithContext(context.Background())
}

func (i BillingGroupPropertiesPropertiesArgs) ToBillingGroupPropertiesPropertiesOutputWithContext(ctx context.Context) BillingGroupPropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupPropertiesPropertiesOutput)
}

func (i BillingGroupPropertiesPropertiesArgs) ToBillingGroupPropertiesPropertiesPtrOutput() BillingGroupPropertiesPropertiesPtrOutput {
	return i.ToBillingGroupPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i BillingGroupPropertiesPropertiesArgs) ToBillingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) BillingGroupPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupPropertiesPropertiesOutput).ToBillingGroupPropertiesPropertiesPtrOutputWithContext(ctx)
}

// BillingGroupPropertiesPropertiesPtrInput is an input type that accepts BillingGroupPropertiesPropertiesArgs, BillingGroupPropertiesPropertiesPtr and BillingGroupPropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `BillingGroupPropertiesPropertiesPtrInput` via:
//
//	        BillingGroupPropertiesPropertiesArgs{...}
//
//	or:
//
//	        nil
type BillingGroupPropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToBillingGroupPropertiesPropertiesPtrOutput() BillingGroupPropertiesPropertiesPtrOutput
	ToBillingGroupPropertiesPropertiesPtrOutputWithContext(context.Context) BillingGroupPropertiesPropertiesPtrOutput
}

type billingGroupPropertiesPropertiesPtrType BillingGroupPropertiesPropertiesArgs

func BillingGroupPropertiesPropertiesPtr(v *BillingGroupPropertiesPropertiesArgs) BillingGroupPropertiesPropertiesPtrInput {
	return (*billingGroupPropertiesPropertiesPtrType)(v)
}

func (*billingGroupPropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingGroupPropertiesProperties)(nil)).Elem()
}

func (i *billingGroupPropertiesPropertiesPtrType) ToBillingGroupPropertiesPropertiesPtrOutput() BillingGroupPropertiesPropertiesPtrOutput {
	return i.ToBillingGroupPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *billingGroupPropertiesPropertiesPtrType) ToBillingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) BillingGroupPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupPropertiesPropertiesPtrOutput)
}

// The properties of the billing group.
type BillingGroupPropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (BillingGroupPropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingGroupPropertiesProperties)(nil)).Elem()
}

func (o BillingGroupPropertiesPropertiesOutput) ToBillingGroupPropertiesPropertiesOutput() BillingGroupPropertiesPropertiesOutput {
	return o
}

func (o BillingGroupPropertiesPropertiesOutput) ToBillingGroupPropertiesPropertiesOutputWithContext(ctx context.Context) BillingGroupPropertiesPropertiesOutput {
	return o
}

func (o BillingGroupPropertiesPropertiesOutput) ToBillingGroupPropertiesPropertiesPtrOutput() BillingGroupPropertiesPropertiesPtrOutput {
	return o.ToBillingGroupPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o BillingGroupPropertiesPropertiesOutput) ToBillingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) BillingGroupPropertiesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingGroupPropertiesProperties) *BillingGroupPropertiesProperties {
		return &v
	}).(BillingGroupPropertiesPropertiesPtrOutput)
}

// The description of the billing group.
func (o BillingGroupPropertiesPropertiesOutput) BillingGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BillingGroupPropertiesProperties) *string { return v.BillingGroupDescription }).(pulumi.StringPtrOutput)
}

type BillingGroupPropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BillingGroupPropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingGroupPropertiesProperties)(nil)).Elem()
}

func (o BillingGroupPropertiesPropertiesPtrOutput) ToBillingGroupPropertiesPropertiesPtrOutput() BillingGroupPropertiesPropertiesPtrOutput {
	return o
}

func (o BillingGroupPropertiesPropertiesPtrOutput) ToBillingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) BillingGroupPropertiesPropertiesPtrOutput {
	return o
}

func (o BillingGroupPropertiesPropertiesPtrOutput) Elem() BillingGroupPropertiesPropertiesOutput {
	return o.ApplyT(func(v *BillingGroupPropertiesProperties) BillingGroupPropertiesProperties {
		if v != nil {
			return *v
		}
		var ret BillingGroupPropertiesProperties
		return ret
	}).(BillingGroupPropertiesPropertiesOutput)
}

// The description of the billing group.
func (o BillingGroupPropertiesPropertiesPtrOutput) BillingGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingGroupPropertiesProperties) *string {
		if v == nil {
			return nil
		}
		return v.BillingGroupDescription
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type BillingGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type CaCertificateRegistrationConfig struct {
	// The ARN of the role.
	RoleArn *string `pulumi:"roleArn"`
	// The template body.
	TemplateBody *string `pulumi:"templateBody"`
	// The name of the provisioning template.
	TemplateName *string `pulumi:"templateName"`
}

// CaCertificateRegistrationConfigInput is an input type that accepts CaCertificateRegistrationConfigArgs and CaCertificateRegistrationConfigOutput values.
// You can construct a concrete instance of `CaCertificateRegistrationConfigInput` via:
//
//	CaCertificateRegistrationConfigArgs{...}
type CaCertificateRegistrationConfigInput interface {
	pulumi.Input

	ToCaCertificateRegistrationConfigOutput() CaCertificateRegistrationConfigOutput
	ToCaCertificateRegistrationConfigOutputWithContext(context.Context) CaCertificateRegistrationConfigOutput
}

type CaCertificateRegistrationConfigArgs struct {
	// The ARN of the role.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The template body.
	TemplateBody pulumi.StringPtrInput `pulumi:"templateBody"`
	// The name of the provisioning template.
	TemplateName pulumi.StringPtrInput `pulumi:"templateName"`
}

func (CaCertificateRegistrationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaCertificateRegistrationConfig)(nil)).Elem()
}

func (i CaCertificateRegistrationConfigArgs) ToCaCertificateRegistrationConfigOutput() CaCertificateRegistrationConfigOutput {
	return i.ToCaCertificateRegistrationConfigOutputWithContext(context.Background())
}

func (i CaCertificateRegistrationConfigArgs) ToCaCertificateRegistrationConfigOutputWithContext(ctx context.Context) CaCertificateRegistrationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaCertificateRegistrationConfigOutput)
}

func (i CaCertificateRegistrationConfigArgs) ToCaCertificateRegistrationConfigPtrOutput() CaCertificateRegistrationConfigPtrOutput {
	return i.ToCaCertificateRegistrationConfigPtrOutputWithContext(context.Background())
}

func (i CaCertificateRegistrationConfigArgs) ToCaCertificateRegistrationConfigPtrOutputWithContext(ctx context.Context) CaCertificateRegistrationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaCertificateRegistrationConfigOutput).ToCaCertificateRegistrationConfigPtrOutputWithContext(ctx)
}

// CaCertificateRegistrationConfigPtrInput is an input type that accepts CaCertificateRegistrationConfigArgs, CaCertificateRegistrationConfigPtr and CaCertificateRegistrationConfigPtrOutput values.
// You can construct a concrete instance of `CaCertificateRegistrationConfigPtrInput` via:
//
//	        CaCertificateRegistrationConfigArgs{...}
//
//	or:
//
//	        nil
type CaCertificateRegistrationConfigPtrInput interface {
	pulumi.Input

	ToCaCertificateRegistrationConfigPtrOutput() CaCertificateRegistrationConfigPtrOutput
	ToCaCertificateRegistrationConfigPtrOutputWithContext(context.Context) CaCertificateRegistrationConfigPtrOutput
}

type caCertificateRegistrationConfigPtrType CaCertificateRegistrationConfigArgs

func CaCertificateRegistrationConfigPtr(v *CaCertificateRegistrationConfigArgs) CaCertificateRegistrationConfigPtrInput {
	return (*caCertificateRegistrationConfigPtrType)(v)
}

func (*caCertificateRegistrationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaCertificateRegistrationConfig)(nil)).Elem()
}

func (i *caCertificateRegistrationConfigPtrType) ToCaCertificateRegistrationConfigPtrOutput() CaCertificateRegistrationConfigPtrOutput {
	return i.ToCaCertificateRegistrationConfigPtrOutputWithContext(context.Background())
}

func (i *caCertificateRegistrationConfigPtrType) ToCaCertificateRegistrationConfigPtrOutputWithContext(ctx context.Context) CaCertificateRegistrationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaCertificateRegistrationConfigPtrOutput)
}

type CaCertificateRegistrationConfigOutput struct{ *pulumi.OutputState }

func (CaCertificateRegistrationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaCertificateRegistrationConfig)(nil)).Elem()
}

func (o CaCertificateRegistrationConfigOutput) ToCaCertificateRegistrationConfigOutput() CaCertificateRegistrationConfigOutput {
	return o
}

func (o CaCertificateRegistrationConfigOutput) ToCaCertificateRegistrationConfigOutputWithContext(ctx context.Context) CaCertificateRegistrationConfigOutput {
	return o
}

func (o CaCertificateRegistrationConfigOutput) ToCaCertificateRegistrationConfigPtrOutput() CaCertificateRegistrationConfigPtrOutput {
	return o.ToCaCertificateRegistrationConfigPtrOutputWithContext(context.Background())
}

func (o CaCertificateRegistrationConfigOutput) ToCaCertificateRegistrationConfigPtrOutputWithContext(ctx context.Context) CaCertificateRegistrationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaCertificateRegistrationConfig) *CaCertificateRegistrationConfig {
		return &v
	}).(CaCertificateRegistrationConfigPtrOutput)
}

// The ARN of the role.
func (o CaCertificateRegistrationConfigOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaCertificateRegistrationConfig) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The template body.
func (o CaCertificateRegistrationConfigOutput) TemplateBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaCertificateRegistrationConfig) *string { return v.TemplateBody }).(pulumi.StringPtrOutput)
}

// The name of the provisioning template.
func (o CaCertificateRegistrationConfigOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaCertificateRegistrationConfig) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

type CaCertificateRegistrationConfigPtrOutput struct{ *pulumi.OutputState }

func (CaCertificateRegistrationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaCertificateRegistrationConfig)(nil)).Elem()
}

func (o CaCertificateRegistrationConfigPtrOutput) ToCaCertificateRegistrationConfigPtrOutput() CaCertificateRegistrationConfigPtrOutput {
	return o
}

func (o CaCertificateRegistrationConfigPtrOutput) ToCaCertificateRegistrationConfigPtrOutputWithContext(ctx context.Context) CaCertificateRegistrationConfigPtrOutput {
	return o
}

func (o CaCertificateRegistrationConfigPtrOutput) Elem() CaCertificateRegistrationConfigOutput {
	return o.ApplyT(func(v *CaCertificateRegistrationConfig) CaCertificateRegistrationConfig {
		if v != nil {
			return *v
		}
		var ret CaCertificateRegistrationConfig
		return ret
	}).(CaCertificateRegistrationConfigOutput)
}

// The ARN of the role.
func (o CaCertificateRegistrationConfigPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaCertificateRegistrationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The template body.
func (o CaCertificateRegistrationConfigPtrOutput) TemplateBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaCertificateRegistrationConfig) *string {
		if v == nil {
			return nil
		}
		return v.TemplateBody
	}).(pulumi.StringPtrOutput)
}

// The name of the provisioning template.
func (o CaCertificateRegistrationConfigPtrOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaCertificateRegistrationConfig) *string {
		if v == nil {
			return nil
		}
		return v.TemplateName
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type CaCertificateTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type CertificateProviderTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type CommandParameter struct {
	DefaultValue *CommandParameterValue `pulumi:"defaultValue"`
	Description  *string                `pulumi:"description"`
	Name         string                 `pulumi:"name"`
	Value        *CommandParameterValue `pulumi:"value"`
}

// CommandParameterInput is an input type that accepts CommandParameterArgs and CommandParameterOutput values.
// You can construct a concrete instance of `CommandParameterInput` via:
//
//	CommandParameterArgs{...}
type CommandParameterInput interface {
	pulumi.Input

	ToCommandParameterOutput() CommandParameterOutput
	ToCommandParameterOutputWithContext(context.Context) CommandParameterOutput
}

type CommandParameterArgs struct {
	DefaultValue CommandParameterValuePtrInput `pulumi:"defaultValue"`
	Description  pulumi.StringPtrInput         `pulumi:"description"`
	Name         pulumi.StringInput            `pulumi:"name"`
	Value        CommandParameterValuePtrInput `pulumi:"value"`
}

func (CommandParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandParameter)(nil)).Elem()
}

func (i CommandParameterArgs) ToCommandParameterOutput() CommandParameterOutput {
	return i.ToCommandParameterOutputWithContext(context.Background())
}

func (i CommandParameterArgs) ToCommandParameterOutputWithContext(ctx context.Context) CommandParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandParameterOutput)
}

// CommandParameterArrayInput is an input type that accepts CommandParameterArray and CommandParameterArrayOutput values.
// You can construct a concrete instance of `CommandParameterArrayInput` via:
//
//	CommandParameterArray{ CommandParameterArgs{...} }
type CommandParameterArrayInput interface {
	pulumi.Input

	ToCommandParameterArrayOutput() CommandParameterArrayOutput
	ToCommandParameterArrayOutputWithContext(context.Context) CommandParameterArrayOutput
}

type CommandParameterArray []CommandParameterInput

func (CommandParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommandParameter)(nil)).Elem()
}

func (i CommandParameterArray) ToCommandParameterArrayOutput() CommandParameterArrayOutput {
	return i.ToCommandParameterArrayOutputWithContext(context.Background())
}

func (i CommandParameterArray) ToCommandParameterArrayOutputWithContext(ctx context.Context) CommandParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandParameterArrayOutput)
}

type CommandParameterOutput struct{ *pulumi.OutputState }

func (CommandParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandParameter)(nil)).Elem()
}

func (o CommandParameterOutput) ToCommandParameterOutput() CommandParameterOutput {
	return o
}

func (o CommandParameterOutput) ToCommandParameterOutputWithContext(ctx context.Context) CommandParameterOutput {
	return o
}

func (o CommandParameterOutput) DefaultValue() CommandParameterValuePtrOutput {
	return o.ApplyT(func(v CommandParameter) *CommandParameterValue { return v.DefaultValue }).(CommandParameterValuePtrOutput)
}

func (o CommandParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CommandParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CommandParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CommandParameterOutput) Value() CommandParameterValuePtrOutput {
	return o.ApplyT(func(v CommandParameter) *CommandParameterValue { return v.Value }).(CommandParameterValuePtrOutput)
}

type CommandParameterArrayOutput struct{ *pulumi.OutputState }

func (CommandParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommandParameter)(nil)).Elem()
}

func (o CommandParameterArrayOutput) ToCommandParameterArrayOutput() CommandParameterArrayOutput {
	return o
}

func (o CommandParameterArrayOutput) ToCommandParameterArrayOutputWithContext(ctx context.Context) CommandParameterArrayOutput {
	return o
}

func (o CommandParameterArrayOutput) Index(i pulumi.IntInput) CommandParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommandParameter {
		return vs[0].([]CommandParameter)[vs[1].(int)]
	}).(CommandParameterOutput)
}

type CommandParameterValue struct {
	B   *bool    `pulumi:"b"`
	Bin *string  `pulumi:"bin"`
	D   *float64 `pulumi:"d"`
	I   *int     `pulumi:"i"`
	L   *string  `pulumi:"l"`
	S   *string  `pulumi:"s"`
	Ul  *string  `pulumi:"ul"`
}

// CommandParameterValueInput is an input type that accepts CommandParameterValueArgs and CommandParameterValueOutput values.
// You can construct a concrete instance of `CommandParameterValueInput` via:
//
//	CommandParameterValueArgs{...}
type CommandParameterValueInput interface {
	pulumi.Input

	ToCommandParameterValueOutput() CommandParameterValueOutput
	ToCommandParameterValueOutputWithContext(context.Context) CommandParameterValueOutput
}

type CommandParameterValueArgs struct {
	B   pulumi.BoolPtrInput    `pulumi:"b"`
	Bin pulumi.StringPtrInput  `pulumi:"bin"`
	D   pulumi.Float64PtrInput `pulumi:"d"`
	I   pulumi.IntPtrInput     `pulumi:"i"`
	L   pulumi.StringPtrInput  `pulumi:"l"`
	S   pulumi.StringPtrInput  `pulumi:"s"`
	Ul  pulumi.StringPtrInput  `pulumi:"ul"`
}

func (CommandParameterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandParameterValue)(nil)).Elem()
}

func (i CommandParameterValueArgs) ToCommandParameterValueOutput() CommandParameterValueOutput {
	return i.ToCommandParameterValueOutputWithContext(context.Background())
}

func (i CommandParameterValueArgs) ToCommandParameterValueOutputWithContext(ctx context.Context) CommandParameterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandParameterValueOutput)
}

func (i CommandParameterValueArgs) ToCommandParameterValuePtrOutput() CommandParameterValuePtrOutput {
	return i.ToCommandParameterValuePtrOutputWithContext(context.Background())
}

func (i CommandParameterValueArgs) ToCommandParameterValuePtrOutputWithContext(ctx context.Context) CommandParameterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandParameterValueOutput).ToCommandParameterValuePtrOutputWithContext(ctx)
}

// CommandParameterValuePtrInput is an input type that accepts CommandParameterValueArgs, CommandParameterValuePtr and CommandParameterValuePtrOutput values.
// You can construct a concrete instance of `CommandParameterValuePtrInput` via:
//
//	        CommandParameterValueArgs{...}
//
//	or:
//
//	        nil
type CommandParameterValuePtrInput interface {
	pulumi.Input

	ToCommandParameterValuePtrOutput() CommandParameterValuePtrOutput
	ToCommandParameterValuePtrOutputWithContext(context.Context) CommandParameterValuePtrOutput
}

type commandParameterValuePtrType CommandParameterValueArgs

func CommandParameterValuePtr(v *CommandParameterValueArgs) CommandParameterValuePtrInput {
	return (*commandParameterValuePtrType)(v)
}

func (*commandParameterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommandParameterValue)(nil)).Elem()
}

func (i *commandParameterValuePtrType) ToCommandParameterValuePtrOutput() CommandParameterValuePtrOutput {
	return i.ToCommandParameterValuePtrOutputWithContext(context.Background())
}

func (i *commandParameterValuePtrType) ToCommandParameterValuePtrOutputWithContext(ctx context.Context) CommandParameterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandParameterValuePtrOutput)
}

type CommandParameterValueOutput struct{ *pulumi.OutputState }

func (CommandParameterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandParameterValue)(nil)).Elem()
}

func (o CommandParameterValueOutput) ToCommandParameterValueOutput() CommandParameterValueOutput {
	return o
}

func (o CommandParameterValueOutput) ToCommandParameterValueOutputWithContext(ctx context.Context) CommandParameterValueOutput {
	return o
}

func (o CommandParameterValueOutput) ToCommandParameterValuePtrOutput() CommandParameterValuePtrOutput {
	return o.ToCommandParameterValuePtrOutputWithContext(context.Background())
}

func (o CommandParameterValueOutput) ToCommandParameterValuePtrOutputWithContext(ctx context.Context) CommandParameterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommandParameterValue) *CommandParameterValue {
		return &v
	}).(CommandParameterValuePtrOutput)
}

func (o CommandParameterValueOutput) B() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *bool { return v.B }).(pulumi.BoolPtrOutput)
}

func (o CommandParameterValueOutput) Bin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *string { return v.Bin }).(pulumi.StringPtrOutput)
}

func (o CommandParameterValueOutput) D() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *float64 { return v.D }).(pulumi.Float64PtrOutput)
}

func (o CommandParameterValueOutput) I() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *int { return v.I }).(pulumi.IntPtrOutput)
}

func (o CommandParameterValueOutput) L() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *string { return v.L }).(pulumi.StringPtrOutput)
}

func (o CommandParameterValueOutput) S() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *string { return v.S }).(pulumi.StringPtrOutput)
}

func (o CommandParameterValueOutput) Ul() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandParameterValue) *string { return v.Ul }).(pulumi.StringPtrOutput)
}

type CommandParameterValuePtrOutput struct{ *pulumi.OutputState }

func (CommandParameterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommandParameterValue)(nil)).Elem()
}

func (o CommandParameterValuePtrOutput) ToCommandParameterValuePtrOutput() CommandParameterValuePtrOutput {
	return o
}

func (o CommandParameterValuePtrOutput) ToCommandParameterValuePtrOutputWithContext(ctx context.Context) CommandParameterValuePtrOutput {
	return o
}

func (o CommandParameterValuePtrOutput) Elem() CommandParameterValueOutput {
	return o.ApplyT(func(v *CommandParameterValue) CommandParameterValue {
		if v != nil {
			return *v
		}
		var ret CommandParameterValue
		return ret
	}).(CommandParameterValueOutput)
}

func (o CommandParameterValuePtrOutput) B() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *bool {
		if v == nil {
			return nil
		}
		return v.B
	}).(pulumi.BoolPtrOutput)
}

func (o CommandParameterValuePtrOutput) Bin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *string {
		if v == nil {
			return nil
		}
		return v.Bin
	}).(pulumi.StringPtrOutput)
}

func (o CommandParameterValuePtrOutput) D() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *float64 {
		if v == nil {
			return nil
		}
		return v.D
	}).(pulumi.Float64PtrOutput)
}

func (o CommandParameterValuePtrOutput) I() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *int {
		if v == nil {
			return nil
		}
		return v.I
	}).(pulumi.IntPtrOutput)
}

func (o CommandParameterValuePtrOutput) L() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *string {
		if v == nil {
			return nil
		}
		return v.L
	}).(pulumi.StringPtrOutput)
}

func (o CommandParameterValuePtrOutput) S() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *string {
		if v == nil {
			return nil
		}
		return v.S
	}).(pulumi.StringPtrOutput)
}

func (o CommandParameterValuePtrOutput) Ul() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommandParameterValue) *string {
		if v == nil {
			return nil
		}
		return v.Ul
	}).(pulumi.StringPtrOutput)
}

type CommandPayload struct {
	Content     *string `pulumi:"content"`
	ContentType *string `pulumi:"contentType"`
}

// CommandPayloadInput is an input type that accepts CommandPayloadArgs and CommandPayloadOutput values.
// You can construct a concrete instance of `CommandPayloadInput` via:
//
//	CommandPayloadArgs{...}
type CommandPayloadInput interface {
	pulumi.Input

	ToCommandPayloadOutput() CommandPayloadOutput
	ToCommandPayloadOutputWithContext(context.Context) CommandPayloadOutput
}

type CommandPayloadArgs struct {
	Content     pulumi.StringPtrInput `pulumi:"content"`
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
}

func (CommandPayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandPayload)(nil)).Elem()
}

func (i CommandPayloadArgs) ToCommandPayloadOutput() CommandPayloadOutput {
	return i.ToCommandPayloadOutputWithContext(context.Background())
}

func (i CommandPayloadArgs) ToCommandPayloadOutputWithContext(ctx context.Context) CommandPayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandPayloadOutput)
}

func (i CommandPayloadArgs) ToCommandPayloadPtrOutput() CommandPayloadPtrOutput {
	return i.ToCommandPayloadPtrOutputWithContext(context.Background())
}

func (i CommandPayloadArgs) ToCommandPayloadPtrOutputWithContext(ctx context.Context) CommandPayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandPayloadOutput).ToCommandPayloadPtrOutputWithContext(ctx)
}

// CommandPayloadPtrInput is an input type that accepts CommandPayloadArgs, CommandPayloadPtr and CommandPayloadPtrOutput values.
// You can construct a concrete instance of `CommandPayloadPtrInput` via:
//
//	        CommandPayloadArgs{...}
//
//	or:
//
//	        nil
type CommandPayloadPtrInput interface {
	pulumi.Input

	ToCommandPayloadPtrOutput() CommandPayloadPtrOutput
	ToCommandPayloadPtrOutputWithContext(context.Context) CommandPayloadPtrOutput
}

type commandPayloadPtrType CommandPayloadArgs

func CommandPayloadPtr(v *CommandPayloadArgs) CommandPayloadPtrInput {
	return (*commandPayloadPtrType)(v)
}

func (*commandPayloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommandPayload)(nil)).Elem()
}

func (i *commandPayloadPtrType) ToCommandPayloadPtrOutput() CommandPayloadPtrOutput {
	return i.ToCommandPayloadPtrOutputWithContext(context.Background())
}

func (i *commandPayloadPtrType) ToCommandPayloadPtrOutputWithContext(ctx context.Context) CommandPayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandPayloadPtrOutput)
}

type CommandPayloadOutput struct{ *pulumi.OutputState }

func (CommandPayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandPayload)(nil)).Elem()
}

func (o CommandPayloadOutput) ToCommandPayloadOutput() CommandPayloadOutput {
	return o
}

func (o CommandPayloadOutput) ToCommandPayloadOutputWithContext(ctx context.Context) CommandPayloadOutput {
	return o
}

func (o CommandPayloadOutput) ToCommandPayloadPtrOutput() CommandPayloadPtrOutput {
	return o.ToCommandPayloadPtrOutputWithContext(context.Background())
}

func (o CommandPayloadOutput) ToCommandPayloadPtrOutputWithContext(ctx context.Context) CommandPayloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommandPayload) *CommandPayload {
		return &v
	}).(CommandPayloadPtrOutput)
}

func (o CommandPayloadOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandPayload) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o CommandPayloadOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandPayload) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

type CommandPayloadPtrOutput struct{ *pulumi.OutputState }

func (CommandPayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommandPayload)(nil)).Elem()
}

func (o CommandPayloadPtrOutput) ToCommandPayloadPtrOutput() CommandPayloadPtrOutput {
	return o
}

func (o CommandPayloadPtrOutput) ToCommandPayloadPtrOutputWithContext(ctx context.Context) CommandPayloadPtrOutput {
	return o
}

func (o CommandPayloadPtrOutput) Elem() CommandPayloadOutput {
	return o.ApplyT(func(v *CommandPayload) CommandPayload {
		if v != nil {
			return *v
		}
		var ret CommandPayload
		return ret
	}).(CommandPayloadOutput)
}

func (o CommandPayloadPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommandPayload) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

func (o CommandPayloadPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommandPayload) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type CommandTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type CustomMetricTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type DimensionTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

type DomainConfigurationAuthorizerConfig struct {
	// A Boolean that specifies whether the domain configuration's authorization service can be overridden.
	AllowAuthorizerOverride *bool `pulumi:"allowAuthorizerOverride"`
	// The name of the authorization service for a domain configuration.
	DefaultAuthorizerName *string `pulumi:"defaultAuthorizerName"`
}

// DomainConfigurationAuthorizerConfigInput is an input type that accepts DomainConfigurationAuthorizerConfigArgs and DomainConfigurationAuthorizerConfigOutput values.
// You can construct a concrete instance of `DomainConfigurationAuthorizerConfigInput` via:
//
//	DomainConfigurationAuthorizerConfigArgs{...}
type DomainConfigurationAuthorizerConfigInput interface {
	pulumi.Input

	ToDomainConfigurationAuthorizerConfigOutput() DomainConfigurationAuthorizerConfigOutput
	ToDomainConfigurationAuthorizerConfigOutputWithContext(context.Context) DomainConfigurationAuthorizerConfigOutput
}

type DomainConfigurationAuthorizerConfigArgs struct {
	// A Boolean that specifies whether the domain configuration's authorization service can be overridden.
	AllowAuthorizerOverride pulumi.BoolPtrInput `pulumi:"allowAuthorizerOverride"`
	// The name of the authorization service for a domain configuration.
	DefaultAuthorizerName pulumi.StringPtrInput `pulumi:"defaultAuthorizerName"`
}

func (DomainConfigurationAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigOutput() DomainConfigurationAuthorizerConfigOutput {
	return i.ToDomainConfigurationAuthorizerConfigOutputWithContext(context.Background())
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationAuthorizerConfigOutput)
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return i.ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationAuthorizerConfigOutput).ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx)
}

// DomainConfigurationAuthorizerConfigPtrInput is an input type that accepts DomainConfigurationAuthorizerConfigArgs, DomainConfigurationAuthorizerConfigPtr and DomainConfigurationAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `DomainConfigurationAuthorizerConfigPtrInput` via:
//
//	        DomainConfigurationAuthorizerConfigArgs{...}
//
//	or:
//
//	        nil
type DomainConfigurationAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput
	ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Context) DomainConfigurationAuthorizerConfigPtrOutput
}

type domainConfigurationAuthorizerConfigPtrType DomainConfigurationAuthorizerConfigArgs

func DomainConfigurationAuthorizerConfigPtr(v *DomainConfigurationAuthorizerConfigArgs) DomainConfigurationAuthorizerConfigPtrInput {
	return (*domainConfigurationAuthorizerConfigPtrType)(v)
}

func (*domainConfigurationAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (i *domainConfigurationAuthorizerConfigPtrType) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return i.ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *domainConfigurationAuthorizerConfigPtrType) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationAuthorizerConfigPtrOutput)
}

type DomainConfigurationAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (DomainConfigurationAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigOutput() DomainConfigurationAuthorizerConfigOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return o.ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainConfigurationAuthorizerConfig) *DomainConfigurationAuthorizerConfig {
		return &v
	}).(DomainConfigurationAuthorizerConfigPtrOutput)
}

// A Boolean that specifies whether the domain configuration's authorization service can be overridden.
func (o DomainConfigurationAuthorizerConfigOutput) AllowAuthorizerOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainConfigurationAuthorizerConfig) *bool { return v.AllowAuthorizerOverride }).(pulumi.BoolPtrOutput)
}

// The name of the authorization service for a domain configuration.
func (o DomainConfigurationAuthorizerConfigOutput) DefaultAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationAuthorizerConfig) *string { return v.DefaultAuthorizerName }).(pulumi.StringPtrOutput)
}

type DomainConfigurationAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainConfigurationAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) Elem() DomainConfigurationAuthorizerConfigOutput {
	return o.ApplyT(func(v *DomainConfigurationAuthorizerConfig) DomainConfigurationAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret DomainConfigurationAuthorizerConfig
		return ret
	}).(DomainConfigurationAuthorizerConfigOutput)
}

// A Boolean that specifies whether the domain configuration's authorization service can be overridden.
func (o DomainConfigurationAuthorizerConfigPtrOutput) AllowAuthorizerOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationAuthorizerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AllowAuthorizerOverride
	}).(pulumi.BoolPtrOutput)
}

// The name of the authorization service for a domain configuration.
func (o DomainConfigurationAuthorizerConfigPtrOutput) DefaultAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAuthorizerName
	}).(pulumi.StringPtrOutput)
}

type DomainConfigurationClientCertificateConfig struct {
	// The ARN of the Lambda function that IoT invokes after mutual TLS authentication during the connection.
	ClientCertificateCallbackArn *string `pulumi:"clientCertificateCallbackArn"`
}

// DomainConfigurationClientCertificateConfigInput is an input type that accepts DomainConfigurationClientCertificateConfigArgs and DomainConfigurationClientCertificateConfigOutput values.
// You can construct a concrete instance of `DomainConfigurationClientCertificateConfigInput` via:
//
//	DomainConfigurationClientCertificateConfigArgs{...}
type DomainConfigurationClientCertificateConfigInput interface {
	pulumi.Input

	ToDomainConfigurationClientCertificateConfigOutput() DomainConfigurationClientCertificateConfigOutput
	ToDomainConfigurationClientCertificateConfigOutputWithContext(context.Context) DomainConfigurationClientCertificateConfigOutput
}

type DomainConfigurationClientCertificateConfigArgs struct {
	// The ARN of the Lambda function that IoT invokes after mutual TLS authentication during the connection.
	ClientCertificateCallbackArn pulumi.StringPtrInput `pulumi:"clientCertificateCallbackArn"`
}

func (DomainConfigurationClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationClientCertificateConfig)(nil)).Elem()
}

func (i DomainConfigurationClientCertificateConfigArgs) ToDomainConfigurationClientCertificateConfigOutput() DomainConfigurationClientCertificateConfigOutput {
	return i.ToDomainConfigurationClientCertificateConfigOutputWithContext(context.Background())
}

func (i DomainConfigurationClientCertificateConfigArgs) ToDomainConfigurationClientCertificateConfigOutputWithContext(ctx context.Context) DomainConfigurationClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationClientCertificateConfigOutput)
}

func (i DomainConfigurationClientCertificateConfigArgs) ToDomainConfigurationClientCertificateConfigPtrOutput() DomainConfigurationClientCertificateConfigPtrOutput {
	return i.ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i DomainConfigurationClientCertificateConfigArgs) ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationClientCertificateConfigOutput).ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(ctx)
}

// DomainConfigurationClientCertificateConfigPtrInput is an input type that accepts DomainConfigurationClientCertificateConfigArgs, DomainConfigurationClientCertificateConfigPtr and DomainConfigurationClientCertificateConfigPtrOutput values.
// You can construct a concrete instance of `DomainConfigurationClientCertificateConfigPtrInput` via:
//
//	        DomainConfigurationClientCertificateConfigArgs{...}
//
//	or:
//
//	        nil
type DomainConfigurationClientCertificateConfigPtrInput interface {
	pulumi.Input

	ToDomainConfigurationClientCertificateConfigPtrOutput() DomainConfigurationClientCertificateConfigPtrOutput
	ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(context.Context) DomainConfigurationClientCertificateConfigPtrOutput
}

type domainConfigurationClientCertificateConfigPtrType DomainConfigurationClientCertificateConfigArgs

func DomainConfigurationClientCertificateConfigPtr(v *DomainConfigurationClientCertificateConfigArgs) DomainConfigurationClientCertificateConfigPtrInput {
	return (*domainConfigurationClientCertificateConfigPtrType)(v)
}

func (*domainConfigurationClientCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationClientCertificateConfig)(nil)).Elem()
}

func (i *domainConfigurationClientCertificateConfigPtrType) ToDomainConfigurationClientCertificateConfigPtrOutput() DomainConfigurationClientCertificateConfigPtrOutput {
	return i.ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *domainConfigurationClientCertificateConfigPtrType) ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationClientCertificateConfigPtrOutput)
}

type DomainConfigurationClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (DomainConfigurationClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationClientCertificateConfig)(nil)).Elem()
}

func (o DomainConfigurationClientCertificateConfigOutput) ToDomainConfigurationClientCertificateConfigOutput() DomainConfigurationClientCertificateConfigOutput {
	return o
}

func (o DomainConfigurationClientCertificateConfigOutput) ToDomainConfigurationClientCertificateConfigOutputWithContext(ctx context.Context) DomainConfigurationClientCertificateConfigOutput {
	return o
}

func (o DomainConfigurationClientCertificateConfigOutput) ToDomainConfigurationClientCertificateConfigPtrOutput() DomainConfigurationClientCertificateConfigPtrOutput {
	return o.ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (o DomainConfigurationClientCertificateConfigOutput) ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationClientCertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainConfigurationClientCertificateConfig) *DomainConfigurationClientCertificateConfig {
		return &v
	}).(DomainConfigurationClientCertificateConfigPtrOutput)
}

// The ARN of the Lambda function that IoT invokes after mutual TLS authentication during the connection.
func (o DomainConfigurationClientCertificateConfigOutput) ClientCertificateCallbackArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationClientCertificateConfig) *string { return v.ClientCertificateCallbackArn }).(pulumi.StringPtrOutput)
}

type DomainConfigurationClientCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainConfigurationClientCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationClientCertificateConfig)(nil)).Elem()
}

func (o DomainConfigurationClientCertificateConfigPtrOutput) ToDomainConfigurationClientCertificateConfigPtrOutput() DomainConfigurationClientCertificateConfigPtrOutput {
	return o
}

func (o DomainConfigurationClientCertificateConfigPtrOutput) ToDomainConfigurationClientCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationClientCertificateConfigPtrOutput {
	return o
}

func (o DomainConfigurationClientCertificateConfigPtrOutput) Elem() DomainConfigurationClientCertificateConfigOutput {
	return o.ApplyT(func(v *DomainConfigurationClientCertificateConfig) DomainConfigurationClientCertificateConfig {
		if v != nil {
			return *v
		}
		var ret DomainConfigurationClientCertificateConfig
		return ret
	}).(DomainConfigurationClientCertificateConfigOutput)
}

// The ARN of the Lambda function that IoT invokes after mutual TLS authentication during the connection.
func (o DomainConfigurationClientCertificateConfigPtrOutput) ClientCertificateCallbackArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationClientCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificateCallbackArn
	}).(pulumi.StringPtrOutput)
}

type DomainConfigurationServerCertificateConfig struct {
	// A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not. For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
	EnableOcspCheck            *bool   `pulumi:"enableOcspCheck"`
	OcspAuthorizedResponderArn *string `pulumi:"ocspAuthorizedResponderArn"`
	OcspLambdaArn              *string `pulumi:"ocspLambdaArn"`
}

// DomainConfigurationServerCertificateConfigInput is an input type that accepts DomainConfigurationServerCertificateConfigArgs and DomainConfigurationServerCertificateConfigOutput values.
// You can construct a concrete instance of `DomainConfigurationServerCertificateConfigInput` via:
//
//	DomainConfigurationServerCertificateConfigArgs{...}
type DomainConfigurationServerCertificateConfigInput interface {
	pulumi.Input

	ToDomainConfigurationServerCertificateConfigOutput() DomainConfigurationServerCertificateConfigOutput
	ToDomainConfigurationServerCertificateConfigOutputWithContext(context.Context) DomainConfigurationServerCertificateConfigOutput
}

type DomainConfigurationServerCertificateConfigArgs struct {
	// A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not. For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
	EnableOcspCheck            pulumi.BoolPtrInput   `pulumi:"enableOcspCheck"`
	OcspAuthorizedResponderArn pulumi.StringPtrInput `pulumi:"ocspAuthorizedResponderArn"`
	OcspLambdaArn              pulumi.StringPtrInput `pulumi:"ocspLambdaArn"`
}

func (DomainConfigurationServerCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationServerCertificateConfig)(nil)).Elem()
}

func (i DomainConfigurationServerCertificateConfigArgs) ToDomainConfigurationServerCertificateConfigOutput() DomainConfigurationServerCertificateConfigOutput {
	return i.ToDomainConfigurationServerCertificateConfigOutputWithContext(context.Background())
}

func (i DomainConfigurationServerCertificateConfigArgs) ToDomainConfigurationServerCertificateConfigOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationServerCertificateConfigOutput)
}

func (i DomainConfigurationServerCertificateConfigArgs) ToDomainConfigurationServerCertificateConfigPtrOutput() DomainConfigurationServerCertificateConfigPtrOutput {
	return i.ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(context.Background())
}

func (i DomainConfigurationServerCertificateConfigArgs) ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationServerCertificateConfigOutput).ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(ctx)
}

// DomainConfigurationServerCertificateConfigPtrInput is an input type that accepts DomainConfigurationServerCertificateConfigArgs, DomainConfigurationServerCertificateConfigPtr and DomainConfigurationServerCertificateConfigPtrOutput values.
// You can construct a concrete instance of `DomainConfigurationServerCertificateConfigPtrInput` via:
//
//	        DomainConfigurationServerCertificateConfigArgs{...}
//
//	or:
//
//	        nil
type DomainConfigurationServerCertificateConfigPtrInput interface {
	pulumi.Input

	ToDomainConfigurationServerCertificateConfigPtrOutput() DomainConfigurationServerCertificateConfigPtrOutput
	ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(context.Context) DomainConfigurationServerCertificateConfigPtrOutput
}

type domainConfigurationServerCertificateConfigPtrType DomainConfigurationServerCertificateConfigArgs

func DomainConfigurationServerCertificateConfigPtr(v *DomainConfigurationServerCertificateConfigArgs) DomainConfigurationServerCertificateConfigPtrInput {
	return (*domainConfigurationServerCertificateConfigPtrType)(v)
}

func (*domainConfigurationServerCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationServerCertificateConfig)(nil)).Elem()
}

func (i *domainConfigurationServerCertificateConfigPtrType) ToDomainConfigurationServerCertificateConfigPtrOutput() DomainConfigurationServerCertificateConfigPtrOutput {
	return i.ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *domainConfigurationServerCertificateConfigPtrType) ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationServerCertificateConfigPtrOutput)
}

type DomainConfigurationServerCertificateConfigOutput struct{ *pulumi.OutputState }

func (DomainConfigurationServerCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationServerCertificateConfig)(nil)).Elem()
}

func (o DomainConfigurationServerCertificateConfigOutput) ToDomainConfigurationServerCertificateConfigOutput() DomainConfigurationServerCertificateConfigOutput {
	return o
}

func (o DomainConfigurationServerCertificateConfigOutput) ToDomainConfigurationServerCertificateConfigOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateConfigOutput {
	return o
}

func (o DomainConfigurationServerCertificateConfigOutput) ToDomainConfigurationServerCertificateConfigPtrOutput() DomainConfigurationServerCertificateConfigPtrOutput {
	return o.ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(context.Background())
}

func (o DomainConfigurationServerCertificateConfigOutput) ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainConfigurationServerCertificateConfig) *DomainConfigurationServerCertificateConfig {
		return &v
	}).(DomainConfigurationServerCertificateConfigPtrOutput)
}

// A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not. For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
func (o DomainConfigurationServerCertificateConfigOutput) EnableOcspCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateConfig) *bool { return v.EnableOcspCheck }).(pulumi.BoolPtrOutput)
}

func (o DomainConfigurationServerCertificateConfigOutput) OcspAuthorizedResponderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateConfig) *string { return v.OcspAuthorizedResponderArn }).(pulumi.StringPtrOutput)
}

func (o DomainConfigurationServerCertificateConfigOutput) OcspLambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateConfig) *string { return v.OcspLambdaArn }).(pulumi.StringPtrOutput)
}

type DomainConfigurationServerCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainConfigurationServerCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationServerCertificateConfig)(nil)).Elem()
}

func (o DomainConfigurationServerCertificateConfigPtrOutput) ToDomainConfigurationServerCertificateConfigPtrOutput() DomainConfigurationServerCertificateConfigPtrOutput {
	return o
}

func (o DomainConfigurationServerCertificateConfigPtrOutput) ToDomainConfigurationServerCertificateConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateConfigPtrOutput {
	return o
}

func (o DomainConfigurationServerCertificateConfigPtrOutput) Elem() DomainConfigurationServerCertificateConfigOutput {
	return o.ApplyT(func(v *DomainConfigurationServerCertificateConfig) DomainConfigurationServerCertificateConfig {
		if v != nil {
			return *v
		}
		var ret DomainConfigurationServerCertificateConfig
		return ret
	}).(DomainConfigurationServerCertificateConfigOutput)
}

// A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not. For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
func (o DomainConfigurationServerCertificateConfigPtrOutput) EnableOcspCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationServerCertificateConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableOcspCheck
	}).(pulumi.BoolPtrOutput)
}

func (o DomainConfigurationServerCertificateConfigPtrOutput) OcspAuthorizedResponderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.OcspAuthorizedResponderArn
	}).(pulumi.StringPtrOutput)
}

func (o DomainConfigurationServerCertificateConfigPtrOutput) OcspLambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationServerCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.OcspLambdaArn
	}).(pulumi.StringPtrOutput)
}

type DomainConfigurationServerCertificateSummary struct {
	// The ARN of the server certificate.
	ServerCertificateArn *string `pulumi:"serverCertificateArn"`
	// The status of the server certificate.
	ServerCertificateStatus *DomainConfigurationServerCertificateSummaryServerCertificateStatus `pulumi:"serverCertificateStatus"`
	// Details that explain the status of the server certificate.
	ServerCertificateStatusDetail *string `pulumi:"serverCertificateStatusDetail"`
}

type DomainConfigurationServerCertificateSummaryOutput struct{ *pulumi.OutputState }

func (DomainConfigurationServerCertificateSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationServerCertificateSummary)(nil)).Elem()
}

func (o DomainConfigurationServerCertificateSummaryOutput) ToDomainConfigurationServerCertificateSummaryOutput() DomainConfigurationServerCertificateSummaryOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryOutput) ToDomainConfigurationServerCertificateSummaryOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateSummaryOutput {
	return o
}

// The ARN of the server certificate.
func (o DomainConfigurationServerCertificateSummaryOutput) ServerCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateSummary) *string { return v.ServerCertificateArn }).(pulumi.StringPtrOutput)
}

// The status of the server certificate.
func (o DomainConfigurationServerCertificateSummaryOutput) ServerCertificateStatus() DomainConfigurationServerCertificateSummaryServerCertificateStatusPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateSummary) *DomainConfigurationServerCertificateSummaryServerCertificateStatus {
		return v.ServerCertificateStatus
	}).(DomainConfigurationServerCertificateSummaryServerCertificateStatusPtrOutput)
}

// Details that explain the status of the server certificate.
func (o DomainConfigurationServerCertificateSummaryOutput) ServerCertificateStatusDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateSummary) *string { return v.ServerCertificateStatusDetail }).(pulumi.StringPtrOutput)
}

type DomainConfigurationServerCertificateSummaryArrayOutput struct{ *pulumi.OutputState }

func (DomainConfigurationServerCertificateSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainConfigurationServerCertificateSummary)(nil)).Elem()
}

func (o DomainConfigurationServerCertificateSummaryArrayOutput) ToDomainConfigurationServerCertificateSummaryArrayOutput() DomainConfigurationServerCertificateSummaryArrayOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryArrayOutput) ToDomainConfigurationServerCertificateSummaryArrayOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateSummaryArrayOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryArrayOutput) Index(i pulumi.IntInput) DomainConfigurationServerCertificateSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainConfigurationServerCertificateSummary {
		return vs[0].([]DomainConfigurationServerCertificateSummary)[vs[1].(int)]
	}).(DomainConfigurationServerCertificateSummaryOutput)
}

type DomainConfigurationTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

type DomainConfigurationTlsConfig struct {
	// The security policy for a domain configuration. For more information, see [Security policies](https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html#tls-policy-table) in the *AWS IoT Core developer guide* .
	SecurityPolicy *string `pulumi:"securityPolicy"`
}

// DomainConfigurationTlsConfigInput is an input type that accepts DomainConfigurationTlsConfigArgs and DomainConfigurationTlsConfigOutput values.
// You can construct a concrete instance of `DomainConfigurationTlsConfigInput` via:
//
//	DomainConfigurationTlsConfigArgs{...}
type DomainConfigurationTlsConfigInput interface {
	pulumi.Input

	ToDomainConfigurationTlsConfigOutput() DomainConfigurationTlsConfigOutput
	ToDomainConfigurationTlsConfigOutputWithContext(context.Context) DomainConfigurationTlsConfigOutput
}

type DomainConfigurationTlsConfigArgs struct {
	// The security policy for a domain configuration. For more information, see [Security policies](https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html#tls-policy-table) in the *AWS IoT Core developer guide* .
	SecurityPolicy pulumi.StringPtrInput `pulumi:"securityPolicy"`
}

func (DomainConfigurationTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationTlsConfig)(nil)).Elem()
}

func (i DomainConfigurationTlsConfigArgs) ToDomainConfigurationTlsConfigOutput() DomainConfigurationTlsConfigOutput {
	return i.ToDomainConfigurationTlsConfigOutputWithContext(context.Background())
}

func (i DomainConfigurationTlsConfigArgs) ToDomainConfigurationTlsConfigOutputWithContext(ctx context.Context) DomainConfigurationTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationTlsConfigOutput)
}

func (i DomainConfigurationTlsConfigArgs) ToDomainConfigurationTlsConfigPtrOutput() DomainConfigurationTlsConfigPtrOutput {
	return i.ToDomainConfigurationTlsConfigPtrOutputWithContext(context.Background())
}

func (i DomainConfigurationTlsConfigArgs) ToDomainConfigurationTlsConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationTlsConfigOutput).ToDomainConfigurationTlsConfigPtrOutputWithContext(ctx)
}

// DomainConfigurationTlsConfigPtrInput is an input type that accepts DomainConfigurationTlsConfigArgs, DomainConfigurationTlsConfigPtr and DomainConfigurationTlsConfigPtrOutput values.
// You can construct a concrete instance of `DomainConfigurationTlsConfigPtrInput` via:
//
//	        DomainConfigurationTlsConfigArgs{...}
//
//	or:
//
//	        nil
type DomainConfigurationTlsConfigPtrInput interface {
	pulumi.Input

	ToDomainConfigurationTlsConfigPtrOutput() DomainConfigurationTlsConfigPtrOutput
	ToDomainConfigurationTlsConfigPtrOutputWithContext(context.Context) DomainConfigurationTlsConfigPtrOutput
}

type domainConfigurationTlsConfigPtrType DomainConfigurationTlsConfigArgs

func DomainConfigurationTlsConfigPtr(v *DomainConfigurationTlsConfigArgs) DomainConfigurationTlsConfigPtrInput {
	return (*domainConfigurationTlsConfigPtrType)(v)
}

func (*domainConfigurationTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationTlsConfig)(nil)).Elem()
}

func (i *domainConfigurationTlsConfigPtrType) ToDomainConfigurationTlsConfigPtrOutput() DomainConfigurationTlsConfigPtrOutput {
	return i.ToDomainConfigurationTlsConfigPtrOutputWithContext(context.Background())
}

func (i *domainConfigurationTlsConfigPtrType) ToDomainConfigurationTlsConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationTlsConfigPtrOutput)
}

type DomainConfigurationTlsConfigOutput struct{ *pulumi.OutputState }

func (DomainConfigurationTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationTlsConfig)(nil)).Elem()
}

func (o DomainConfigurationTlsConfigOutput) ToDomainConfigurationTlsConfigOutput() DomainConfigurationTlsConfigOutput {
	return o
}

func (o DomainConfigurationTlsConfigOutput) ToDomainConfigurationTlsConfigOutputWithContext(ctx context.Context) DomainConfigurationTlsConfigOutput {
	return o
}

func (o DomainConfigurationTlsConfigOutput) ToDomainConfigurationTlsConfigPtrOutput() DomainConfigurationTlsConfigPtrOutput {
	return o.ToDomainConfigurationTlsConfigPtrOutputWithContext(context.Background())
}

func (o DomainConfigurationTlsConfigOutput) ToDomainConfigurationTlsConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationTlsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainConfigurationTlsConfig) *DomainConfigurationTlsConfig {
		return &v
	}).(DomainConfigurationTlsConfigPtrOutput)
}

// The security policy for a domain configuration. For more information, see [Security policies](https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html#tls-policy-table) in the *AWS IoT Core developer guide* .
func (o DomainConfigurationTlsConfigOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationTlsConfig) *string { return v.SecurityPolicy }).(pulumi.StringPtrOutput)
}

type DomainConfigurationTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainConfigurationTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationTlsConfig)(nil)).Elem()
}

func (o DomainConfigurationTlsConfigPtrOutput) ToDomainConfigurationTlsConfigPtrOutput() DomainConfigurationTlsConfigPtrOutput {
	return o
}

func (o DomainConfigurationTlsConfigPtrOutput) ToDomainConfigurationTlsConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationTlsConfigPtrOutput {
	return o
}

func (o DomainConfigurationTlsConfigPtrOutput) Elem() DomainConfigurationTlsConfigOutput {
	return o.ApplyT(func(v *DomainConfigurationTlsConfig) DomainConfigurationTlsConfig {
		if v != nil {
			return *v
		}
		var ret DomainConfigurationTlsConfig
		return ret
	}).(DomainConfigurationTlsConfigOutput)
}

// The security policy for a domain configuration. For more information, see [Security policies](https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html#tls-policy-table) in the *AWS IoT Core developer guide* .
func (o DomainConfigurationTlsConfigPtrOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecurityPolicy
	}).(pulumi.StringPtrOutput)
}

// Aggregation types supported by Fleet Indexing
type FleetMetricAggregationType struct {
	// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
	Name string `pulumi:"name"`
	// Fleet Indexing aggregation type values
	Values []string `pulumi:"values"`
}

// FleetMetricAggregationTypeInput is an input type that accepts FleetMetricAggregationTypeArgs and FleetMetricAggregationTypeOutput values.
// You can construct a concrete instance of `FleetMetricAggregationTypeInput` via:
//
//	FleetMetricAggregationTypeArgs{...}
type FleetMetricAggregationTypeInput interface {
	pulumi.Input

	ToFleetMetricAggregationTypeOutput() FleetMetricAggregationTypeOutput
	ToFleetMetricAggregationTypeOutputWithContext(context.Context) FleetMetricAggregationTypeOutput
}

// Aggregation types supported by Fleet Indexing
type FleetMetricAggregationTypeArgs struct {
	// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
	Name pulumi.StringInput `pulumi:"name"`
	// Fleet Indexing aggregation type values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (FleetMetricAggregationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMetricAggregationType)(nil)).Elem()
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypeOutput() FleetMetricAggregationTypeOutput {
	return i.ToFleetMetricAggregationTypeOutputWithContext(context.Background())
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypeOutputWithContext(ctx context.Context) FleetMetricAggregationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricAggregationTypeOutput)
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return i.ToFleetMetricAggregationTypePtrOutputWithContext(context.Background())
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricAggregationTypeOutput).ToFleetMetricAggregationTypePtrOutputWithContext(ctx)
}

// FleetMetricAggregationTypePtrInput is an input type that accepts FleetMetricAggregationTypeArgs, FleetMetricAggregationTypePtr and FleetMetricAggregationTypePtrOutput values.
// You can construct a concrete instance of `FleetMetricAggregationTypePtrInput` via:
//
//	        FleetMetricAggregationTypeArgs{...}
//
//	or:
//
//	        nil
type FleetMetricAggregationTypePtrInput interface {
	pulumi.Input

	ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput
	ToFleetMetricAggregationTypePtrOutputWithContext(context.Context) FleetMetricAggregationTypePtrOutput
}

type fleetMetricAggregationTypePtrType FleetMetricAggregationTypeArgs

func FleetMetricAggregationTypePtr(v *FleetMetricAggregationTypeArgs) FleetMetricAggregationTypePtrInput {
	return (*fleetMetricAggregationTypePtrType)(v)
}

func (*fleetMetricAggregationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetMetricAggregationType)(nil)).Elem()
}

func (i *fleetMetricAggregationTypePtrType) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return i.ToFleetMetricAggregationTypePtrOutputWithContext(context.Background())
}

func (i *fleetMetricAggregationTypePtrType) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricAggregationTypePtrOutput)
}

// Aggregation types supported by Fleet Indexing
type FleetMetricAggregationTypeOutput struct{ *pulumi.OutputState }

func (FleetMetricAggregationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMetricAggregationType)(nil)).Elem()
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypeOutput() FleetMetricAggregationTypeOutput {
	return o
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypeOutputWithContext(ctx context.Context) FleetMetricAggregationTypeOutput {
	return o
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return o.ToFleetMetricAggregationTypePtrOutputWithContext(context.Background())
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetMetricAggregationType) *FleetMetricAggregationType {
		return &v
	}).(FleetMetricAggregationTypePtrOutput)
}

// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
func (o FleetMetricAggregationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FleetMetricAggregationType) string { return v.Name }).(pulumi.StringOutput)
}

// Fleet Indexing aggregation type values
func (o FleetMetricAggregationTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetMetricAggregationType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type FleetMetricAggregationTypePtrOutput struct{ *pulumi.OutputState }

func (FleetMetricAggregationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetMetricAggregationType)(nil)).Elem()
}

func (o FleetMetricAggregationTypePtrOutput) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return o
}

func (o FleetMetricAggregationTypePtrOutput) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return o
}

func (o FleetMetricAggregationTypePtrOutput) Elem() FleetMetricAggregationTypeOutput {
	return o.ApplyT(func(v *FleetMetricAggregationType) FleetMetricAggregationType {
		if v != nil {
			return *v
		}
		var ret FleetMetricAggregationType
		return ret
	}).(FleetMetricAggregationTypeOutput)
}

// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
func (o FleetMetricAggregationTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetMetricAggregationType) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Fleet Indexing aggregation type values
func (o FleetMetricAggregationTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetMetricAggregationType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource
type FleetMetricTag struct {
	// The tag's key
	Key string `pulumi:"key"`
	// The tag's value
	Value string `pulumi:"value"`
}

// Allows you to create the criteria to retry a job.
type JobExecutionsRetryConfigProperties struct {
	// The list of criteria that determines how many retries are allowed for each failure type for a job.
	RetryCriteriaList []JobTemplateRetryCriteria `pulumi:"retryCriteriaList"`
}

// JobExecutionsRetryConfigPropertiesInput is an input type that accepts JobExecutionsRetryConfigPropertiesArgs and JobExecutionsRetryConfigPropertiesOutput values.
// You can construct a concrete instance of `JobExecutionsRetryConfigPropertiesInput` via:
//
//	JobExecutionsRetryConfigPropertiesArgs{...}
type JobExecutionsRetryConfigPropertiesInput interface {
	pulumi.Input

	ToJobExecutionsRetryConfigPropertiesOutput() JobExecutionsRetryConfigPropertiesOutput
	ToJobExecutionsRetryConfigPropertiesOutputWithContext(context.Context) JobExecutionsRetryConfigPropertiesOutput
}

// Allows you to create the criteria to retry a job.
type JobExecutionsRetryConfigPropertiesArgs struct {
	// The list of criteria that determines how many retries are allowed for each failure type for a job.
	RetryCriteriaList JobTemplateRetryCriteriaArrayInput `pulumi:"retryCriteriaList"`
}

func (JobExecutionsRetryConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobExecutionsRetryConfigProperties)(nil)).Elem()
}

func (i JobExecutionsRetryConfigPropertiesArgs) ToJobExecutionsRetryConfigPropertiesOutput() JobExecutionsRetryConfigPropertiesOutput {
	return i.ToJobExecutionsRetryConfigPropertiesOutputWithContext(context.Background())
}

func (i JobExecutionsRetryConfigPropertiesArgs) ToJobExecutionsRetryConfigPropertiesOutputWithContext(ctx context.Context) JobExecutionsRetryConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionsRetryConfigPropertiesOutput)
}

func (i JobExecutionsRetryConfigPropertiesArgs) ToJobExecutionsRetryConfigPropertiesPtrOutput() JobExecutionsRetryConfigPropertiesPtrOutput {
	return i.ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i JobExecutionsRetryConfigPropertiesArgs) ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRetryConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionsRetryConfigPropertiesOutput).ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(ctx)
}

// JobExecutionsRetryConfigPropertiesPtrInput is an input type that accepts JobExecutionsRetryConfigPropertiesArgs, JobExecutionsRetryConfigPropertiesPtr and JobExecutionsRetryConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `JobExecutionsRetryConfigPropertiesPtrInput` via:
//
//	        JobExecutionsRetryConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type JobExecutionsRetryConfigPropertiesPtrInput interface {
	pulumi.Input

	ToJobExecutionsRetryConfigPropertiesPtrOutput() JobExecutionsRetryConfigPropertiesPtrOutput
	ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(context.Context) JobExecutionsRetryConfigPropertiesPtrOutput
}

type jobExecutionsRetryConfigPropertiesPtrType JobExecutionsRetryConfigPropertiesArgs

func JobExecutionsRetryConfigPropertiesPtr(v *JobExecutionsRetryConfigPropertiesArgs) JobExecutionsRetryConfigPropertiesPtrInput {
	return (*jobExecutionsRetryConfigPropertiesPtrType)(v)
}

func (*jobExecutionsRetryConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobExecutionsRetryConfigProperties)(nil)).Elem()
}

func (i *jobExecutionsRetryConfigPropertiesPtrType) ToJobExecutionsRetryConfigPropertiesPtrOutput() JobExecutionsRetryConfigPropertiesPtrOutput {
	return i.ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *jobExecutionsRetryConfigPropertiesPtrType) ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRetryConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionsRetryConfigPropertiesPtrOutput)
}

// Allows you to create the criteria to retry a job.
type JobExecutionsRetryConfigPropertiesOutput struct{ *pulumi.OutputState }

func (JobExecutionsRetryConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobExecutionsRetryConfigProperties)(nil)).Elem()
}

func (o JobExecutionsRetryConfigPropertiesOutput) ToJobExecutionsRetryConfigPropertiesOutput() JobExecutionsRetryConfigPropertiesOutput {
	return o
}

func (o JobExecutionsRetryConfigPropertiesOutput) ToJobExecutionsRetryConfigPropertiesOutputWithContext(ctx context.Context) JobExecutionsRetryConfigPropertiesOutput {
	return o
}

func (o JobExecutionsRetryConfigPropertiesOutput) ToJobExecutionsRetryConfigPropertiesPtrOutput() JobExecutionsRetryConfigPropertiesPtrOutput {
	return o.ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o JobExecutionsRetryConfigPropertiesOutput) ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRetryConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobExecutionsRetryConfigProperties) *JobExecutionsRetryConfigProperties {
		return &v
	}).(JobExecutionsRetryConfigPropertiesPtrOutput)
}

// The list of criteria that determines how many retries are allowed for each failure type for a job.
func (o JobExecutionsRetryConfigPropertiesOutput) RetryCriteriaList() JobTemplateRetryCriteriaArrayOutput {
	return o.ApplyT(func(v JobExecutionsRetryConfigProperties) []JobTemplateRetryCriteria { return v.RetryCriteriaList }).(JobTemplateRetryCriteriaArrayOutput)
}

type JobExecutionsRetryConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (JobExecutionsRetryConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobExecutionsRetryConfigProperties)(nil)).Elem()
}

func (o JobExecutionsRetryConfigPropertiesPtrOutput) ToJobExecutionsRetryConfigPropertiesPtrOutput() JobExecutionsRetryConfigPropertiesPtrOutput {
	return o
}

func (o JobExecutionsRetryConfigPropertiesPtrOutput) ToJobExecutionsRetryConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRetryConfigPropertiesPtrOutput {
	return o
}

func (o JobExecutionsRetryConfigPropertiesPtrOutput) Elem() JobExecutionsRetryConfigPropertiesOutput {
	return o.ApplyT(func(v *JobExecutionsRetryConfigProperties) JobExecutionsRetryConfigProperties {
		if v != nil {
			return *v
		}
		var ret JobExecutionsRetryConfigProperties
		return ret
	}).(JobExecutionsRetryConfigPropertiesOutput)
}

// The list of criteria that determines how many retries are allowed for each failure type for a job.
func (o JobExecutionsRetryConfigPropertiesPtrOutput) RetryCriteriaList() JobTemplateRetryCriteriaArrayOutput {
	return o.ApplyT(func(v *JobExecutionsRetryConfigProperties) []JobTemplateRetryCriteria {
		if v == nil {
			return nil
		}
		return v.RetryCriteriaList
	}).(JobTemplateRetryCriteriaArrayOutput)
}

// Allows you to create a staged rollout of a job.
type JobExecutionsRolloutConfigProperties struct {
	// The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
	ExponentialRolloutRate *JobTemplateExponentialRolloutRate `pulumi:"exponentialRolloutRate"`
	// The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.
	MaximumPerMinute *int `pulumi:"maximumPerMinute"`
}

// JobExecutionsRolloutConfigPropertiesInput is an input type that accepts JobExecutionsRolloutConfigPropertiesArgs and JobExecutionsRolloutConfigPropertiesOutput values.
// You can construct a concrete instance of `JobExecutionsRolloutConfigPropertiesInput` via:
//
//	JobExecutionsRolloutConfigPropertiesArgs{...}
type JobExecutionsRolloutConfigPropertiesInput interface {
	pulumi.Input

	ToJobExecutionsRolloutConfigPropertiesOutput() JobExecutionsRolloutConfigPropertiesOutput
	ToJobExecutionsRolloutConfigPropertiesOutputWithContext(context.Context) JobExecutionsRolloutConfigPropertiesOutput
}

// Allows you to create a staged rollout of a job.
type JobExecutionsRolloutConfigPropertiesArgs struct {
	// The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
	ExponentialRolloutRate JobTemplateExponentialRolloutRatePtrInput `pulumi:"exponentialRolloutRate"`
	// The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.
	MaximumPerMinute pulumi.IntPtrInput `pulumi:"maximumPerMinute"`
}

func (JobExecutionsRolloutConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobExecutionsRolloutConfigProperties)(nil)).Elem()
}

func (i JobExecutionsRolloutConfigPropertiesArgs) ToJobExecutionsRolloutConfigPropertiesOutput() JobExecutionsRolloutConfigPropertiesOutput {
	return i.ToJobExecutionsRolloutConfigPropertiesOutputWithContext(context.Background())
}

func (i JobExecutionsRolloutConfigPropertiesArgs) ToJobExecutionsRolloutConfigPropertiesOutputWithContext(ctx context.Context) JobExecutionsRolloutConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionsRolloutConfigPropertiesOutput)
}

func (i JobExecutionsRolloutConfigPropertiesArgs) ToJobExecutionsRolloutConfigPropertiesPtrOutput() JobExecutionsRolloutConfigPropertiesPtrOutput {
	return i.ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i JobExecutionsRolloutConfigPropertiesArgs) ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRolloutConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionsRolloutConfigPropertiesOutput).ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(ctx)
}

// JobExecutionsRolloutConfigPropertiesPtrInput is an input type that accepts JobExecutionsRolloutConfigPropertiesArgs, JobExecutionsRolloutConfigPropertiesPtr and JobExecutionsRolloutConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `JobExecutionsRolloutConfigPropertiesPtrInput` via:
//
//	        JobExecutionsRolloutConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type JobExecutionsRolloutConfigPropertiesPtrInput interface {
	pulumi.Input

	ToJobExecutionsRolloutConfigPropertiesPtrOutput() JobExecutionsRolloutConfigPropertiesPtrOutput
	ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(context.Context) JobExecutionsRolloutConfigPropertiesPtrOutput
}

type jobExecutionsRolloutConfigPropertiesPtrType JobExecutionsRolloutConfigPropertiesArgs

func JobExecutionsRolloutConfigPropertiesPtr(v *JobExecutionsRolloutConfigPropertiesArgs) JobExecutionsRolloutConfigPropertiesPtrInput {
	return (*jobExecutionsRolloutConfigPropertiesPtrType)(v)
}

func (*jobExecutionsRolloutConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobExecutionsRolloutConfigProperties)(nil)).Elem()
}

func (i *jobExecutionsRolloutConfigPropertiesPtrType) ToJobExecutionsRolloutConfigPropertiesPtrOutput() JobExecutionsRolloutConfigPropertiesPtrOutput {
	return i.ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *jobExecutionsRolloutConfigPropertiesPtrType) ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRolloutConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionsRolloutConfigPropertiesPtrOutput)
}

// Allows you to create a staged rollout of a job.
type JobExecutionsRolloutConfigPropertiesOutput struct{ *pulumi.OutputState }

func (JobExecutionsRolloutConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobExecutionsRolloutConfigProperties)(nil)).Elem()
}

func (o JobExecutionsRolloutConfigPropertiesOutput) ToJobExecutionsRolloutConfigPropertiesOutput() JobExecutionsRolloutConfigPropertiesOutput {
	return o
}

func (o JobExecutionsRolloutConfigPropertiesOutput) ToJobExecutionsRolloutConfigPropertiesOutputWithContext(ctx context.Context) JobExecutionsRolloutConfigPropertiesOutput {
	return o
}

func (o JobExecutionsRolloutConfigPropertiesOutput) ToJobExecutionsRolloutConfigPropertiesPtrOutput() JobExecutionsRolloutConfigPropertiesPtrOutput {
	return o.ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o JobExecutionsRolloutConfigPropertiesOutput) ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRolloutConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobExecutionsRolloutConfigProperties) *JobExecutionsRolloutConfigProperties {
		return &v
	}).(JobExecutionsRolloutConfigPropertiesPtrOutput)
}

// The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
func (o JobExecutionsRolloutConfigPropertiesOutput) ExponentialRolloutRate() JobTemplateExponentialRolloutRatePtrOutput {
	return o.ApplyT(func(v JobExecutionsRolloutConfigProperties) *JobTemplateExponentialRolloutRate {
		return v.ExponentialRolloutRate
	}).(JobTemplateExponentialRolloutRatePtrOutput)
}

// The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.
func (o JobExecutionsRolloutConfigPropertiesOutput) MaximumPerMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobExecutionsRolloutConfigProperties) *int { return v.MaximumPerMinute }).(pulumi.IntPtrOutput)
}

type JobExecutionsRolloutConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (JobExecutionsRolloutConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobExecutionsRolloutConfigProperties)(nil)).Elem()
}

func (o JobExecutionsRolloutConfigPropertiesPtrOutput) ToJobExecutionsRolloutConfigPropertiesPtrOutput() JobExecutionsRolloutConfigPropertiesPtrOutput {
	return o
}

func (o JobExecutionsRolloutConfigPropertiesPtrOutput) ToJobExecutionsRolloutConfigPropertiesPtrOutputWithContext(ctx context.Context) JobExecutionsRolloutConfigPropertiesPtrOutput {
	return o
}

func (o JobExecutionsRolloutConfigPropertiesPtrOutput) Elem() JobExecutionsRolloutConfigPropertiesOutput {
	return o.ApplyT(func(v *JobExecutionsRolloutConfigProperties) JobExecutionsRolloutConfigProperties {
		if v != nil {
			return *v
		}
		var ret JobExecutionsRolloutConfigProperties
		return ret
	}).(JobExecutionsRolloutConfigPropertiesOutput)
}

// The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
func (o JobExecutionsRolloutConfigPropertiesPtrOutput) ExponentialRolloutRate() JobTemplateExponentialRolloutRatePtrOutput {
	return o.ApplyT(func(v *JobExecutionsRolloutConfigProperties) *JobTemplateExponentialRolloutRate {
		if v == nil {
			return nil
		}
		return v.ExponentialRolloutRate
	}).(JobTemplateExponentialRolloutRatePtrOutput)
}

// The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.
func (o JobExecutionsRolloutConfigPropertiesPtrOutput) MaximumPerMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobExecutionsRolloutConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumPerMinute
	}).(pulumi.IntPtrOutput)
}

// The criteria that determine when and how a job abort takes place.
type JobTemplateAbortCriteria struct {
	// The type of job action to take to initiate the job abort.
	Action JobTemplateAction `pulumi:"action"`
	// The type of job execution failures that can initiate a job abort.
	FailureType JobTemplateFailureType `pulumi:"failureType"`
	// The minimum number of things which must receive job execution notifications before the job can be aborted.
	MinNumberOfExecutedThings int `pulumi:"minNumberOfExecutedThings"`
	// The minimum percentage of job execution failures that must occur to initiate the job abort.
	ThresholdPercentage float64 `pulumi:"thresholdPercentage"`
}

// JobTemplateAbortCriteriaInput is an input type that accepts JobTemplateAbortCriteriaArgs and JobTemplateAbortCriteriaOutput values.
// You can construct a concrete instance of `JobTemplateAbortCriteriaInput` via:
//
//	JobTemplateAbortCriteriaArgs{...}
type JobTemplateAbortCriteriaInput interface {
	pulumi.Input

	ToJobTemplateAbortCriteriaOutput() JobTemplateAbortCriteriaOutput
	ToJobTemplateAbortCriteriaOutputWithContext(context.Context) JobTemplateAbortCriteriaOutput
}

// The criteria that determine when and how a job abort takes place.
type JobTemplateAbortCriteriaArgs struct {
	// The type of job action to take to initiate the job abort.
	Action JobTemplateActionInput `pulumi:"action"`
	// The type of job execution failures that can initiate a job abort.
	FailureType JobTemplateFailureTypeInput `pulumi:"failureType"`
	// The minimum number of things which must receive job execution notifications before the job can be aborted.
	MinNumberOfExecutedThings pulumi.IntInput `pulumi:"minNumberOfExecutedThings"`
	// The minimum percentage of job execution failures that must occur to initiate the job abort.
	ThresholdPercentage pulumi.Float64Input `pulumi:"thresholdPercentage"`
}

func (JobTemplateAbortCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateAbortCriteria)(nil)).Elem()
}

func (i JobTemplateAbortCriteriaArgs) ToJobTemplateAbortCriteriaOutput() JobTemplateAbortCriteriaOutput {
	return i.ToJobTemplateAbortCriteriaOutputWithContext(context.Background())
}

func (i JobTemplateAbortCriteriaArgs) ToJobTemplateAbortCriteriaOutputWithContext(ctx context.Context) JobTemplateAbortCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateAbortCriteriaOutput)
}

// JobTemplateAbortCriteriaArrayInput is an input type that accepts JobTemplateAbortCriteriaArray and JobTemplateAbortCriteriaArrayOutput values.
// You can construct a concrete instance of `JobTemplateAbortCriteriaArrayInput` via:
//
//	JobTemplateAbortCriteriaArray{ JobTemplateAbortCriteriaArgs{...} }
type JobTemplateAbortCriteriaArrayInput interface {
	pulumi.Input

	ToJobTemplateAbortCriteriaArrayOutput() JobTemplateAbortCriteriaArrayOutput
	ToJobTemplateAbortCriteriaArrayOutputWithContext(context.Context) JobTemplateAbortCriteriaArrayOutput
}

type JobTemplateAbortCriteriaArray []JobTemplateAbortCriteriaInput

func (JobTemplateAbortCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTemplateAbortCriteria)(nil)).Elem()
}

func (i JobTemplateAbortCriteriaArray) ToJobTemplateAbortCriteriaArrayOutput() JobTemplateAbortCriteriaArrayOutput {
	return i.ToJobTemplateAbortCriteriaArrayOutputWithContext(context.Background())
}

func (i JobTemplateAbortCriteriaArray) ToJobTemplateAbortCriteriaArrayOutputWithContext(ctx context.Context) JobTemplateAbortCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateAbortCriteriaArrayOutput)
}

// The criteria that determine when and how a job abort takes place.
type JobTemplateAbortCriteriaOutput struct{ *pulumi.OutputState }

func (JobTemplateAbortCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateAbortCriteria)(nil)).Elem()
}

func (o JobTemplateAbortCriteriaOutput) ToJobTemplateAbortCriteriaOutput() JobTemplateAbortCriteriaOutput {
	return o
}

func (o JobTemplateAbortCriteriaOutput) ToJobTemplateAbortCriteriaOutputWithContext(ctx context.Context) JobTemplateAbortCriteriaOutput {
	return o
}

// The type of job action to take to initiate the job abort.
func (o JobTemplateAbortCriteriaOutput) Action() JobTemplateActionOutput {
	return o.ApplyT(func(v JobTemplateAbortCriteria) JobTemplateAction { return v.Action }).(JobTemplateActionOutput)
}

// The type of job execution failures that can initiate a job abort.
func (o JobTemplateAbortCriteriaOutput) FailureType() JobTemplateFailureTypeOutput {
	return o.ApplyT(func(v JobTemplateAbortCriteria) JobTemplateFailureType { return v.FailureType }).(JobTemplateFailureTypeOutput)
}

// The minimum number of things which must receive job execution notifications before the job can be aborted.
func (o JobTemplateAbortCriteriaOutput) MinNumberOfExecutedThings() pulumi.IntOutput {
	return o.ApplyT(func(v JobTemplateAbortCriteria) int { return v.MinNumberOfExecutedThings }).(pulumi.IntOutput)
}

// The minimum percentage of job execution failures that must occur to initiate the job abort.
func (o JobTemplateAbortCriteriaOutput) ThresholdPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v JobTemplateAbortCriteria) float64 { return v.ThresholdPercentage }).(pulumi.Float64Output)
}

type JobTemplateAbortCriteriaArrayOutput struct{ *pulumi.OutputState }

func (JobTemplateAbortCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTemplateAbortCriteria)(nil)).Elem()
}

func (o JobTemplateAbortCriteriaArrayOutput) ToJobTemplateAbortCriteriaArrayOutput() JobTemplateAbortCriteriaArrayOutput {
	return o
}

func (o JobTemplateAbortCriteriaArrayOutput) ToJobTemplateAbortCriteriaArrayOutputWithContext(ctx context.Context) JobTemplateAbortCriteriaArrayOutput {
	return o
}

func (o JobTemplateAbortCriteriaArrayOutput) Index(i pulumi.IntInput) JobTemplateAbortCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobTemplateAbortCriteria {
		return vs[0].([]JobTemplateAbortCriteria)[vs[1].(int)]
	}).(JobTemplateAbortCriteriaOutput)
}

// Allows you to create an exponential rate of rollout for a job.
type JobTemplateExponentialRolloutRate struct {
	// The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
	BaseRatePerMinute int `pulumi:"baseRatePerMinute"`
	// The exponential factor to increase the rate of rollout for a job.
	IncrementFactor float64 `pulumi:"incrementFactor"`
	// The criteria to initiate the increase in rate of rollout for a job.
	RateIncreaseCriteria JobTemplateRateIncreaseCriteria `pulumi:"rateIncreaseCriteria"`
}

// JobTemplateExponentialRolloutRateInput is an input type that accepts JobTemplateExponentialRolloutRateArgs and JobTemplateExponentialRolloutRateOutput values.
// You can construct a concrete instance of `JobTemplateExponentialRolloutRateInput` via:
//
//	JobTemplateExponentialRolloutRateArgs{...}
type JobTemplateExponentialRolloutRateInput interface {
	pulumi.Input

	ToJobTemplateExponentialRolloutRateOutput() JobTemplateExponentialRolloutRateOutput
	ToJobTemplateExponentialRolloutRateOutputWithContext(context.Context) JobTemplateExponentialRolloutRateOutput
}

// Allows you to create an exponential rate of rollout for a job.
type JobTemplateExponentialRolloutRateArgs struct {
	// The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
	BaseRatePerMinute pulumi.IntInput `pulumi:"baseRatePerMinute"`
	// The exponential factor to increase the rate of rollout for a job.
	IncrementFactor pulumi.Float64Input `pulumi:"incrementFactor"`
	// The criteria to initiate the increase in rate of rollout for a job.
	RateIncreaseCriteria JobTemplateRateIncreaseCriteriaInput `pulumi:"rateIncreaseCriteria"`
}

func (JobTemplateExponentialRolloutRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateExponentialRolloutRate)(nil)).Elem()
}

func (i JobTemplateExponentialRolloutRateArgs) ToJobTemplateExponentialRolloutRateOutput() JobTemplateExponentialRolloutRateOutput {
	return i.ToJobTemplateExponentialRolloutRateOutputWithContext(context.Background())
}

func (i JobTemplateExponentialRolloutRateArgs) ToJobTemplateExponentialRolloutRateOutputWithContext(ctx context.Context) JobTemplateExponentialRolloutRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateExponentialRolloutRateOutput)
}

func (i JobTemplateExponentialRolloutRateArgs) ToJobTemplateExponentialRolloutRatePtrOutput() JobTemplateExponentialRolloutRatePtrOutput {
	return i.ToJobTemplateExponentialRolloutRatePtrOutputWithContext(context.Background())
}

func (i JobTemplateExponentialRolloutRateArgs) ToJobTemplateExponentialRolloutRatePtrOutputWithContext(ctx context.Context) JobTemplateExponentialRolloutRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateExponentialRolloutRateOutput).ToJobTemplateExponentialRolloutRatePtrOutputWithContext(ctx)
}

// JobTemplateExponentialRolloutRatePtrInput is an input type that accepts JobTemplateExponentialRolloutRateArgs, JobTemplateExponentialRolloutRatePtr and JobTemplateExponentialRolloutRatePtrOutput values.
// You can construct a concrete instance of `JobTemplateExponentialRolloutRatePtrInput` via:
//
//	        JobTemplateExponentialRolloutRateArgs{...}
//
//	or:
//
//	        nil
type JobTemplateExponentialRolloutRatePtrInput interface {
	pulumi.Input

	ToJobTemplateExponentialRolloutRatePtrOutput() JobTemplateExponentialRolloutRatePtrOutput
	ToJobTemplateExponentialRolloutRatePtrOutputWithContext(context.Context) JobTemplateExponentialRolloutRatePtrOutput
}

type jobTemplateExponentialRolloutRatePtrType JobTemplateExponentialRolloutRateArgs

func JobTemplateExponentialRolloutRatePtr(v *JobTemplateExponentialRolloutRateArgs) JobTemplateExponentialRolloutRatePtrInput {
	return (*jobTemplateExponentialRolloutRatePtrType)(v)
}

func (*jobTemplateExponentialRolloutRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobTemplateExponentialRolloutRate)(nil)).Elem()
}

func (i *jobTemplateExponentialRolloutRatePtrType) ToJobTemplateExponentialRolloutRatePtrOutput() JobTemplateExponentialRolloutRatePtrOutput {
	return i.ToJobTemplateExponentialRolloutRatePtrOutputWithContext(context.Background())
}

func (i *jobTemplateExponentialRolloutRatePtrType) ToJobTemplateExponentialRolloutRatePtrOutputWithContext(ctx context.Context) JobTemplateExponentialRolloutRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateExponentialRolloutRatePtrOutput)
}

// Allows you to create an exponential rate of rollout for a job.
type JobTemplateExponentialRolloutRateOutput struct{ *pulumi.OutputState }

func (JobTemplateExponentialRolloutRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateExponentialRolloutRate)(nil)).Elem()
}

func (o JobTemplateExponentialRolloutRateOutput) ToJobTemplateExponentialRolloutRateOutput() JobTemplateExponentialRolloutRateOutput {
	return o
}

func (o JobTemplateExponentialRolloutRateOutput) ToJobTemplateExponentialRolloutRateOutputWithContext(ctx context.Context) JobTemplateExponentialRolloutRateOutput {
	return o
}

func (o JobTemplateExponentialRolloutRateOutput) ToJobTemplateExponentialRolloutRatePtrOutput() JobTemplateExponentialRolloutRatePtrOutput {
	return o.ToJobTemplateExponentialRolloutRatePtrOutputWithContext(context.Background())
}

func (o JobTemplateExponentialRolloutRateOutput) ToJobTemplateExponentialRolloutRatePtrOutputWithContext(ctx context.Context) JobTemplateExponentialRolloutRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobTemplateExponentialRolloutRate) *JobTemplateExponentialRolloutRate {
		return &v
	}).(JobTemplateExponentialRolloutRatePtrOutput)
}

// The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
func (o JobTemplateExponentialRolloutRateOutput) BaseRatePerMinute() pulumi.IntOutput {
	return o.ApplyT(func(v JobTemplateExponentialRolloutRate) int { return v.BaseRatePerMinute }).(pulumi.IntOutput)
}

// The exponential factor to increase the rate of rollout for a job.
func (o JobTemplateExponentialRolloutRateOutput) IncrementFactor() pulumi.Float64Output {
	return o.ApplyT(func(v JobTemplateExponentialRolloutRate) float64 { return v.IncrementFactor }).(pulumi.Float64Output)
}

// The criteria to initiate the increase in rate of rollout for a job.
func (o JobTemplateExponentialRolloutRateOutput) RateIncreaseCriteria() JobTemplateRateIncreaseCriteriaOutput {
	return o.ApplyT(func(v JobTemplateExponentialRolloutRate) JobTemplateRateIncreaseCriteria {
		return v.RateIncreaseCriteria
	}).(JobTemplateRateIncreaseCriteriaOutput)
}

type JobTemplateExponentialRolloutRatePtrOutput struct{ *pulumi.OutputState }

func (JobTemplateExponentialRolloutRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobTemplateExponentialRolloutRate)(nil)).Elem()
}

func (o JobTemplateExponentialRolloutRatePtrOutput) ToJobTemplateExponentialRolloutRatePtrOutput() JobTemplateExponentialRolloutRatePtrOutput {
	return o
}

func (o JobTemplateExponentialRolloutRatePtrOutput) ToJobTemplateExponentialRolloutRatePtrOutputWithContext(ctx context.Context) JobTemplateExponentialRolloutRatePtrOutput {
	return o
}

func (o JobTemplateExponentialRolloutRatePtrOutput) Elem() JobTemplateExponentialRolloutRateOutput {
	return o.ApplyT(func(v *JobTemplateExponentialRolloutRate) JobTemplateExponentialRolloutRate {
		if v != nil {
			return *v
		}
		var ret JobTemplateExponentialRolloutRate
		return ret
	}).(JobTemplateExponentialRolloutRateOutput)
}

// The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
func (o JobTemplateExponentialRolloutRatePtrOutput) BaseRatePerMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobTemplateExponentialRolloutRate) *int {
		if v == nil {
			return nil
		}
		return &v.BaseRatePerMinute
	}).(pulumi.IntPtrOutput)
}

// The exponential factor to increase the rate of rollout for a job.
func (o JobTemplateExponentialRolloutRatePtrOutput) IncrementFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JobTemplateExponentialRolloutRate) *float64 {
		if v == nil {
			return nil
		}
		return &v.IncrementFactor
	}).(pulumi.Float64PtrOutput)
}

// The criteria to initiate the increase in rate of rollout for a job.
func (o JobTemplateExponentialRolloutRatePtrOutput) RateIncreaseCriteria() JobTemplateRateIncreaseCriteriaPtrOutput {
	return o.ApplyT(func(v *JobTemplateExponentialRolloutRate) *JobTemplateRateIncreaseCriteria {
		if v == nil {
			return nil
		}
		return &v.RateIncreaseCriteria
	}).(JobTemplateRateIncreaseCriteriaPtrOutput)
}

// Specifies a start time and duration for a scheduled Job.
type JobTemplateMaintenanceWindow struct {
	// Displays the duration of the next maintenance window.
	DurationInMinutes *int `pulumi:"durationInMinutes"`
	// Displays the start time of the next maintenance window.
	StartTime *string `pulumi:"startTime"`
}

// JobTemplateMaintenanceWindowInput is an input type that accepts JobTemplateMaintenanceWindowArgs and JobTemplateMaintenanceWindowOutput values.
// You can construct a concrete instance of `JobTemplateMaintenanceWindowInput` via:
//
//	JobTemplateMaintenanceWindowArgs{...}
type JobTemplateMaintenanceWindowInput interface {
	pulumi.Input

	ToJobTemplateMaintenanceWindowOutput() JobTemplateMaintenanceWindowOutput
	ToJobTemplateMaintenanceWindowOutputWithContext(context.Context) JobTemplateMaintenanceWindowOutput
}

// Specifies a start time and duration for a scheduled Job.
type JobTemplateMaintenanceWindowArgs struct {
	// Displays the duration of the next maintenance window.
	DurationInMinutes pulumi.IntPtrInput `pulumi:"durationInMinutes"`
	// Displays the start time of the next maintenance window.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (JobTemplateMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateMaintenanceWindow)(nil)).Elem()
}

func (i JobTemplateMaintenanceWindowArgs) ToJobTemplateMaintenanceWindowOutput() JobTemplateMaintenanceWindowOutput {
	return i.ToJobTemplateMaintenanceWindowOutputWithContext(context.Background())
}

func (i JobTemplateMaintenanceWindowArgs) ToJobTemplateMaintenanceWindowOutputWithContext(ctx context.Context) JobTemplateMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateMaintenanceWindowOutput)
}

// JobTemplateMaintenanceWindowArrayInput is an input type that accepts JobTemplateMaintenanceWindowArray and JobTemplateMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `JobTemplateMaintenanceWindowArrayInput` via:
//
//	JobTemplateMaintenanceWindowArray{ JobTemplateMaintenanceWindowArgs{...} }
type JobTemplateMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToJobTemplateMaintenanceWindowArrayOutput() JobTemplateMaintenanceWindowArrayOutput
	ToJobTemplateMaintenanceWindowArrayOutputWithContext(context.Context) JobTemplateMaintenanceWindowArrayOutput
}

type JobTemplateMaintenanceWindowArray []JobTemplateMaintenanceWindowInput

func (JobTemplateMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTemplateMaintenanceWindow)(nil)).Elem()
}

func (i JobTemplateMaintenanceWindowArray) ToJobTemplateMaintenanceWindowArrayOutput() JobTemplateMaintenanceWindowArrayOutput {
	return i.ToJobTemplateMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i JobTemplateMaintenanceWindowArray) ToJobTemplateMaintenanceWindowArrayOutputWithContext(ctx context.Context) JobTemplateMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateMaintenanceWindowArrayOutput)
}

// Specifies a start time and duration for a scheduled Job.
type JobTemplateMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (JobTemplateMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateMaintenanceWindow)(nil)).Elem()
}

func (o JobTemplateMaintenanceWindowOutput) ToJobTemplateMaintenanceWindowOutput() JobTemplateMaintenanceWindowOutput {
	return o
}

func (o JobTemplateMaintenanceWindowOutput) ToJobTemplateMaintenanceWindowOutputWithContext(ctx context.Context) JobTemplateMaintenanceWindowOutput {
	return o
}

// Displays the duration of the next maintenance window.
func (o JobTemplateMaintenanceWindowOutput) DurationInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobTemplateMaintenanceWindow) *int { return v.DurationInMinutes }).(pulumi.IntPtrOutput)
}

// Displays the start time of the next maintenance window.
func (o JobTemplateMaintenanceWindowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTemplateMaintenanceWindow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type JobTemplateMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (JobTemplateMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTemplateMaintenanceWindow)(nil)).Elem()
}

func (o JobTemplateMaintenanceWindowArrayOutput) ToJobTemplateMaintenanceWindowArrayOutput() JobTemplateMaintenanceWindowArrayOutput {
	return o
}

func (o JobTemplateMaintenanceWindowArrayOutput) ToJobTemplateMaintenanceWindowArrayOutputWithContext(ctx context.Context) JobTemplateMaintenanceWindowArrayOutput {
	return o
}

func (o JobTemplateMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) JobTemplateMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobTemplateMaintenanceWindow {
		return vs[0].([]JobTemplateMaintenanceWindow)[vs[1].(int)]
	}).(JobTemplateMaintenanceWindowOutput)
}

type JobTemplateRateIncreaseCriteria struct {
	// The threshold for number of notified things that will initiate the increase in rate of rollout.
	NumberOfNotifiedThings *int `pulumi:"numberOfNotifiedThings"`
	// The threshold for number of succeeded things that will initiate the increase in rate of rollout.
	NumberOfSucceededThings *int `pulumi:"numberOfSucceededThings"`
}

// JobTemplateRateIncreaseCriteriaInput is an input type that accepts JobTemplateRateIncreaseCriteriaArgs and JobTemplateRateIncreaseCriteriaOutput values.
// You can construct a concrete instance of `JobTemplateRateIncreaseCriteriaInput` via:
//
//	JobTemplateRateIncreaseCriteriaArgs{...}
type JobTemplateRateIncreaseCriteriaInput interface {
	pulumi.Input

	ToJobTemplateRateIncreaseCriteriaOutput() JobTemplateRateIncreaseCriteriaOutput
	ToJobTemplateRateIncreaseCriteriaOutputWithContext(context.Context) JobTemplateRateIncreaseCriteriaOutput
}

type JobTemplateRateIncreaseCriteriaArgs struct {
	// The threshold for number of notified things that will initiate the increase in rate of rollout.
	NumberOfNotifiedThings pulumi.IntPtrInput `pulumi:"numberOfNotifiedThings"`
	// The threshold for number of succeeded things that will initiate the increase in rate of rollout.
	NumberOfSucceededThings pulumi.IntPtrInput `pulumi:"numberOfSucceededThings"`
}

func (JobTemplateRateIncreaseCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateRateIncreaseCriteria)(nil)).Elem()
}

func (i JobTemplateRateIncreaseCriteriaArgs) ToJobTemplateRateIncreaseCriteriaOutput() JobTemplateRateIncreaseCriteriaOutput {
	return i.ToJobTemplateRateIncreaseCriteriaOutputWithContext(context.Background())
}

func (i JobTemplateRateIncreaseCriteriaArgs) ToJobTemplateRateIncreaseCriteriaOutputWithContext(ctx context.Context) JobTemplateRateIncreaseCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateRateIncreaseCriteriaOutput)
}

func (i JobTemplateRateIncreaseCriteriaArgs) ToJobTemplateRateIncreaseCriteriaPtrOutput() JobTemplateRateIncreaseCriteriaPtrOutput {
	return i.ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(context.Background())
}

func (i JobTemplateRateIncreaseCriteriaArgs) ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(ctx context.Context) JobTemplateRateIncreaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateRateIncreaseCriteriaOutput).ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(ctx)
}

// JobTemplateRateIncreaseCriteriaPtrInput is an input type that accepts JobTemplateRateIncreaseCriteriaArgs, JobTemplateRateIncreaseCriteriaPtr and JobTemplateRateIncreaseCriteriaPtrOutput values.
// You can construct a concrete instance of `JobTemplateRateIncreaseCriteriaPtrInput` via:
//
//	        JobTemplateRateIncreaseCriteriaArgs{...}
//
//	or:
//
//	        nil
type JobTemplateRateIncreaseCriteriaPtrInput interface {
	pulumi.Input

	ToJobTemplateRateIncreaseCriteriaPtrOutput() JobTemplateRateIncreaseCriteriaPtrOutput
	ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(context.Context) JobTemplateRateIncreaseCriteriaPtrOutput
}

type jobTemplateRateIncreaseCriteriaPtrType JobTemplateRateIncreaseCriteriaArgs

func JobTemplateRateIncreaseCriteriaPtr(v *JobTemplateRateIncreaseCriteriaArgs) JobTemplateRateIncreaseCriteriaPtrInput {
	return (*jobTemplateRateIncreaseCriteriaPtrType)(v)
}

func (*jobTemplateRateIncreaseCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobTemplateRateIncreaseCriteria)(nil)).Elem()
}

func (i *jobTemplateRateIncreaseCriteriaPtrType) ToJobTemplateRateIncreaseCriteriaPtrOutput() JobTemplateRateIncreaseCriteriaPtrOutput {
	return i.ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(context.Background())
}

func (i *jobTemplateRateIncreaseCriteriaPtrType) ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(ctx context.Context) JobTemplateRateIncreaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateRateIncreaseCriteriaPtrOutput)
}

type JobTemplateRateIncreaseCriteriaOutput struct{ *pulumi.OutputState }

func (JobTemplateRateIncreaseCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateRateIncreaseCriteria)(nil)).Elem()
}

func (o JobTemplateRateIncreaseCriteriaOutput) ToJobTemplateRateIncreaseCriteriaOutput() JobTemplateRateIncreaseCriteriaOutput {
	return o
}

func (o JobTemplateRateIncreaseCriteriaOutput) ToJobTemplateRateIncreaseCriteriaOutputWithContext(ctx context.Context) JobTemplateRateIncreaseCriteriaOutput {
	return o
}

func (o JobTemplateRateIncreaseCriteriaOutput) ToJobTemplateRateIncreaseCriteriaPtrOutput() JobTemplateRateIncreaseCriteriaPtrOutput {
	return o.ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(context.Background())
}

func (o JobTemplateRateIncreaseCriteriaOutput) ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(ctx context.Context) JobTemplateRateIncreaseCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobTemplateRateIncreaseCriteria) *JobTemplateRateIncreaseCriteria {
		return &v
	}).(JobTemplateRateIncreaseCriteriaPtrOutput)
}

// The threshold for number of notified things that will initiate the increase in rate of rollout.
func (o JobTemplateRateIncreaseCriteriaOutput) NumberOfNotifiedThings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobTemplateRateIncreaseCriteria) *int { return v.NumberOfNotifiedThings }).(pulumi.IntPtrOutput)
}

// The threshold for number of succeeded things that will initiate the increase in rate of rollout.
func (o JobTemplateRateIncreaseCriteriaOutput) NumberOfSucceededThings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobTemplateRateIncreaseCriteria) *int { return v.NumberOfSucceededThings }).(pulumi.IntPtrOutput)
}

type JobTemplateRateIncreaseCriteriaPtrOutput struct{ *pulumi.OutputState }

func (JobTemplateRateIncreaseCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobTemplateRateIncreaseCriteria)(nil)).Elem()
}

func (o JobTemplateRateIncreaseCriteriaPtrOutput) ToJobTemplateRateIncreaseCriteriaPtrOutput() JobTemplateRateIncreaseCriteriaPtrOutput {
	return o
}

func (o JobTemplateRateIncreaseCriteriaPtrOutput) ToJobTemplateRateIncreaseCriteriaPtrOutputWithContext(ctx context.Context) JobTemplateRateIncreaseCriteriaPtrOutput {
	return o
}

func (o JobTemplateRateIncreaseCriteriaPtrOutput) Elem() JobTemplateRateIncreaseCriteriaOutput {
	return o.ApplyT(func(v *JobTemplateRateIncreaseCriteria) JobTemplateRateIncreaseCriteria {
		if v != nil {
			return *v
		}
		var ret JobTemplateRateIncreaseCriteria
		return ret
	}).(JobTemplateRateIncreaseCriteriaOutput)
}

// The threshold for number of notified things that will initiate the increase in rate of rollout.
func (o JobTemplateRateIncreaseCriteriaPtrOutput) NumberOfNotifiedThings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobTemplateRateIncreaseCriteria) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfNotifiedThings
	}).(pulumi.IntPtrOutput)
}

// The threshold for number of succeeded things that will initiate the increase in rate of rollout.
func (o JobTemplateRateIncreaseCriteriaPtrOutput) NumberOfSucceededThings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobTemplateRateIncreaseCriteria) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfSucceededThings
	}).(pulumi.IntPtrOutput)
}

// Specifies how many times a failure type should be retried.
type JobTemplateRetryCriteria struct {
	// The type of job execution failures that can initiate a job retry.
	FailureType *JobTemplateJobRetryFailureType `pulumi:"failureType"`
	// The number of retries allowed for a failure type for the job.
	NumberOfRetries *int `pulumi:"numberOfRetries"`
}

// JobTemplateRetryCriteriaInput is an input type that accepts JobTemplateRetryCriteriaArgs and JobTemplateRetryCriteriaOutput values.
// You can construct a concrete instance of `JobTemplateRetryCriteriaInput` via:
//
//	JobTemplateRetryCriteriaArgs{...}
type JobTemplateRetryCriteriaInput interface {
	pulumi.Input

	ToJobTemplateRetryCriteriaOutput() JobTemplateRetryCriteriaOutput
	ToJobTemplateRetryCriteriaOutputWithContext(context.Context) JobTemplateRetryCriteriaOutput
}

// Specifies how many times a failure type should be retried.
type JobTemplateRetryCriteriaArgs struct {
	// The type of job execution failures that can initiate a job retry.
	FailureType JobTemplateJobRetryFailureTypePtrInput `pulumi:"failureType"`
	// The number of retries allowed for a failure type for the job.
	NumberOfRetries pulumi.IntPtrInput `pulumi:"numberOfRetries"`
}

func (JobTemplateRetryCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateRetryCriteria)(nil)).Elem()
}

func (i JobTemplateRetryCriteriaArgs) ToJobTemplateRetryCriteriaOutput() JobTemplateRetryCriteriaOutput {
	return i.ToJobTemplateRetryCriteriaOutputWithContext(context.Background())
}

func (i JobTemplateRetryCriteriaArgs) ToJobTemplateRetryCriteriaOutputWithContext(ctx context.Context) JobTemplateRetryCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateRetryCriteriaOutput)
}

// JobTemplateRetryCriteriaArrayInput is an input type that accepts JobTemplateRetryCriteriaArray and JobTemplateRetryCriteriaArrayOutput values.
// You can construct a concrete instance of `JobTemplateRetryCriteriaArrayInput` via:
//
//	JobTemplateRetryCriteriaArray{ JobTemplateRetryCriteriaArgs{...} }
type JobTemplateRetryCriteriaArrayInput interface {
	pulumi.Input

	ToJobTemplateRetryCriteriaArrayOutput() JobTemplateRetryCriteriaArrayOutput
	ToJobTemplateRetryCriteriaArrayOutputWithContext(context.Context) JobTemplateRetryCriteriaArrayOutput
}

type JobTemplateRetryCriteriaArray []JobTemplateRetryCriteriaInput

func (JobTemplateRetryCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTemplateRetryCriteria)(nil)).Elem()
}

func (i JobTemplateRetryCriteriaArray) ToJobTemplateRetryCriteriaArrayOutput() JobTemplateRetryCriteriaArrayOutput {
	return i.ToJobTemplateRetryCriteriaArrayOutputWithContext(context.Background())
}

func (i JobTemplateRetryCriteriaArray) ToJobTemplateRetryCriteriaArrayOutputWithContext(ctx context.Context) JobTemplateRetryCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateRetryCriteriaArrayOutput)
}

// Specifies how many times a failure type should be retried.
type JobTemplateRetryCriteriaOutput struct{ *pulumi.OutputState }

func (JobTemplateRetryCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateRetryCriteria)(nil)).Elem()
}

func (o JobTemplateRetryCriteriaOutput) ToJobTemplateRetryCriteriaOutput() JobTemplateRetryCriteriaOutput {
	return o
}

func (o JobTemplateRetryCriteriaOutput) ToJobTemplateRetryCriteriaOutputWithContext(ctx context.Context) JobTemplateRetryCriteriaOutput {
	return o
}

// The type of job execution failures that can initiate a job retry.
func (o JobTemplateRetryCriteriaOutput) FailureType() JobTemplateJobRetryFailureTypePtrOutput {
	return o.ApplyT(func(v JobTemplateRetryCriteria) *JobTemplateJobRetryFailureType { return v.FailureType }).(JobTemplateJobRetryFailureTypePtrOutput)
}

// The number of retries allowed for a failure type for the job.
func (o JobTemplateRetryCriteriaOutput) NumberOfRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobTemplateRetryCriteria) *int { return v.NumberOfRetries }).(pulumi.IntPtrOutput)
}

type JobTemplateRetryCriteriaArrayOutput struct{ *pulumi.OutputState }

func (JobTemplateRetryCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTemplateRetryCriteria)(nil)).Elem()
}

func (o JobTemplateRetryCriteriaArrayOutput) ToJobTemplateRetryCriteriaArrayOutput() JobTemplateRetryCriteriaArrayOutput {
	return o
}

func (o JobTemplateRetryCriteriaArrayOutput) ToJobTemplateRetryCriteriaArrayOutputWithContext(ctx context.Context) JobTemplateRetryCriteriaArrayOutput {
	return o
}

func (o JobTemplateRetryCriteriaArrayOutput) Index(i pulumi.IntInput) JobTemplateRetryCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobTemplateRetryCriteria {
		return vs[0].([]JobTemplateRetryCriteria)[vs[1].(int)]
	}).(JobTemplateRetryCriteriaOutput)
}

// A key-value pair to associate with a resource.
type JobTemplateTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// A structure containing the mqtt topic for metrics export.
type MetricsExportConfigProperties struct {
	// The topic for metrics export.
	MqttTopic string `pulumi:"mqttTopic"`
	// The ARN of the role that grants permission to publish to mqtt topic.
	RoleArn string `pulumi:"roleArn"`
}

// MetricsExportConfigPropertiesInput is an input type that accepts MetricsExportConfigPropertiesArgs and MetricsExportConfigPropertiesOutput values.
// You can construct a concrete instance of `MetricsExportConfigPropertiesInput` via:
//
//	MetricsExportConfigPropertiesArgs{...}
type MetricsExportConfigPropertiesInput interface {
	pulumi.Input

	ToMetricsExportConfigPropertiesOutput() MetricsExportConfigPropertiesOutput
	ToMetricsExportConfigPropertiesOutputWithContext(context.Context) MetricsExportConfigPropertiesOutput
}

// A structure containing the mqtt topic for metrics export.
type MetricsExportConfigPropertiesArgs struct {
	// The topic for metrics export.
	MqttTopic pulumi.StringInput `pulumi:"mqttTopic"`
	// The ARN of the role that grants permission to publish to mqtt topic.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (MetricsExportConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsExportConfigProperties)(nil)).Elem()
}

func (i MetricsExportConfigPropertiesArgs) ToMetricsExportConfigPropertiesOutput() MetricsExportConfigPropertiesOutput {
	return i.ToMetricsExportConfigPropertiesOutputWithContext(context.Background())
}

func (i MetricsExportConfigPropertiesArgs) ToMetricsExportConfigPropertiesOutputWithContext(ctx context.Context) MetricsExportConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsExportConfigPropertiesOutput)
}

func (i MetricsExportConfigPropertiesArgs) ToMetricsExportConfigPropertiesPtrOutput() MetricsExportConfigPropertiesPtrOutput {
	return i.ToMetricsExportConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i MetricsExportConfigPropertiesArgs) ToMetricsExportConfigPropertiesPtrOutputWithContext(ctx context.Context) MetricsExportConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsExportConfigPropertiesOutput).ToMetricsExportConfigPropertiesPtrOutputWithContext(ctx)
}

// MetricsExportConfigPropertiesPtrInput is an input type that accepts MetricsExportConfigPropertiesArgs, MetricsExportConfigPropertiesPtr and MetricsExportConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `MetricsExportConfigPropertiesPtrInput` via:
//
//	        MetricsExportConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type MetricsExportConfigPropertiesPtrInput interface {
	pulumi.Input

	ToMetricsExportConfigPropertiesPtrOutput() MetricsExportConfigPropertiesPtrOutput
	ToMetricsExportConfigPropertiesPtrOutputWithContext(context.Context) MetricsExportConfigPropertiesPtrOutput
}

type metricsExportConfigPropertiesPtrType MetricsExportConfigPropertiesArgs

func MetricsExportConfigPropertiesPtr(v *MetricsExportConfigPropertiesArgs) MetricsExportConfigPropertiesPtrInput {
	return (*metricsExportConfigPropertiesPtrType)(v)
}

func (*metricsExportConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsExportConfigProperties)(nil)).Elem()
}

func (i *metricsExportConfigPropertiesPtrType) ToMetricsExportConfigPropertiesPtrOutput() MetricsExportConfigPropertiesPtrOutput {
	return i.ToMetricsExportConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *metricsExportConfigPropertiesPtrType) ToMetricsExportConfigPropertiesPtrOutputWithContext(ctx context.Context) MetricsExportConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsExportConfigPropertiesPtrOutput)
}

// A structure containing the mqtt topic for metrics export.
type MetricsExportConfigPropertiesOutput struct{ *pulumi.OutputState }

func (MetricsExportConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsExportConfigProperties)(nil)).Elem()
}

func (o MetricsExportConfigPropertiesOutput) ToMetricsExportConfigPropertiesOutput() MetricsExportConfigPropertiesOutput {
	return o
}

func (o MetricsExportConfigPropertiesOutput) ToMetricsExportConfigPropertiesOutputWithContext(ctx context.Context) MetricsExportConfigPropertiesOutput {
	return o
}

func (o MetricsExportConfigPropertiesOutput) ToMetricsExportConfigPropertiesPtrOutput() MetricsExportConfigPropertiesPtrOutput {
	return o.ToMetricsExportConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o MetricsExportConfigPropertiesOutput) ToMetricsExportConfigPropertiesPtrOutputWithContext(ctx context.Context) MetricsExportConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsExportConfigProperties) *MetricsExportConfigProperties {
		return &v
	}).(MetricsExportConfigPropertiesPtrOutput)
}

// The topic for metrics export.
func (o MetricsExportConfigPropertiesOutput) MqttTopic() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsExportConfigProperties) string { return v.MqttTopic }).(pulumi.StringOutput)
}

// The ARN of the role that grants permission to publish to mqtt topic.
func (o MetricsExportConfigPropertiesOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsExportConfigProperties) string { return v.RoleArn }).(pulumi.StringOutput)
}

type MetricsExportConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MetricsExportConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsExportConfigProperties)(nil)).Elem()
}

func (o MetricsExportConfigPropertiesPtrOutput) ToMetricsExportConfigPropertiesPtrOutput() MetricsExportConfigPropertiesPtrOutput {
	return o
}

func (o MetricsExportConfigPropertiesPtrOutput) ToMetricsExportConfigPropertiesPtrOutputWithContext(ctx context.Context) MetricsExportConfigPropertiesPtrOutput {
	return o
}

func (o MetricsExportConfigPropertiesPtrOutput) Elem() MetricsExportConfigPropertiesOutput {
	return o.ApplyT(func(v *MetricsExportConfigProperties) MetricsExportConfigProperties {
		if v != nil {
			return *v
		}
		var ret MetricsExportConfigProperties
		return ret
	}).(MetricsExportConfigPropertiesOutput)
}

// The topic for metrics export.
func (o MetricsExportConfigPropertiesPtrOutput) MqttTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsExportConfigProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MqttTopic
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants permission to publish to mqtt topic.
func (o MetricsExportConfigPropertiesPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsExportConfigProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
type MitigationActionActionParams struct {
	// Specifies the group to which you want to add the devices.
	AddThingsToThingGroupParams *MitigationActionAddThingsToThingGroupParams `pulumi:"addThingsToThingGroupParams"`
	// Specifies the logging level and the role with permissions for logging. You cannot specify a logging level of `DISABLED` .
	EnableIoTLoggingParams *MitigationActionEnableIoTLoggingParams `pulumi:"enableIoTLoggingParams"`
	// Specifies the topic to which the finding should be published.
	PublishFindingToSnsParams *MitigationActionPublishFindingToSnsParams `pulumi:"publishFindingToSnsParams"`
	// Replaces the policy version with a default or blank policy. You specify the template name. Only a value of `BLANK_POLICY` is currently supported.
	ReplaceDefaultPolicyVersionParams *MitigationActionReplaceDefaultPolicyVersionParams `pulumi:"replaceDefaultPolicyVersionParams"`
	// Specifies the new state for the CA certificate. Only a value of `DEACTIVATE` is currently supported.
	UpdateCaCertificateParams *MitigationActionUpdateCaCertificateParams `pulumi:"updateCaCertificateParams"`
	// Specifies the new state for a device certificate. Only a value of `DEACTIVATE` is currently supported.
	UpdateDeviceCertificateParams *MitigationActionUpdateDeviceCertificateParams `pulumi:"updateDeviceCertificateParams"`
}

// MitigationActionActionParamsInput is an input type that accepts MitigationActionActionParamsArgs and MitigationActionActionParamsOutput values.
// You can construct a concrete instance of `MitigationActionActionParamsInput` via:
//
//	MitigationActionActionParamsArgs{...}
type MitigationActionActionParamsInput interface {
	pulumi.Input

	ToMitigationActionActionParamsOutput() MitigationActionActionParamsOutput
	ToMitigationActionActionParamsOutputWithContext(context.Context) MitigationActionActionParamsOutput
}

// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
type MitigationActionActionParamsArgs struct {
	// Specifies the group to which you want to add the devices.
	AddThingsToThingGroupParams MitigationActionAddThingsToThingGroupParamsPtrInput `pulumi:"addThingsToThingGroupParams"`
	// Specifies the logging level and the role with permissions for logging. You cannot specify a logging level of `DISABLED` .
	EnableIoTLoggingParams MitigationActionEnableIoTLoggingParamsPtrInput `pulumi:"enableIoTLoggingParams"`
	// Specifies the topic to which the finding should be published.
	PublishFindingToSnsParams MitigationActionPublishFindingToSnsParamsPtrInput `pulumi:"publishFindingToSnsParams"`
	// Replaces the policy version with a default or blank policy. You specify the template name. Only a value of `BLANK_POLICY` is currently supported.
	ReplaceDefaultPolicyVersionParams MitigationActionReplaceDefaultPolicyVersionParamsPtrInput `pulumi:"replaceDefaultPolicyVersionParams"`
	// Specifies the new state for the CA certificate. Only a value of `DEACTIVATE` is currently supported.
	UpdateCaCertificateParams MitigationActionUpdateCaCertificateParamsPtrInput `pulumi:"updateCaCertificateParams"`
	// Specifies the new state for a device certificate. Only a value of `DEACTIVATE` is currently supported.
	UpdateDeviceCertificateParams MitigationActionUpdateDeviceCertificateParamsPtrInput `pulumi:"updateDeviceCertificateParams"`
}

func (MitigationActionActionParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionActionParams)(nil)).Elem()
}

func (i MitigationActionActionParamsArgs) ToMitigationActionActionParamsOutput() MitigationActionActionParamsOutput {
	return i.ToMitigationActionActionParamsOutputWithContext(context.Background())
}

func (i MitigationActionActionParamsArgs) ToMitigationActionActionParamsOutputWithContext(ctx context.Context) MitigationActionActionParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionActionParamsOutput)
}

// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
type MitigationActionActionParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionActionParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionActionParams)(nil)).Elem()
}

func (o MitigationActionActionParamsOutput) ToMitigationActionActionParamsOutput() MitigationActionActionParamsOutput {
	return o
}

func (o MitigationActionActionParamsOutput) ToMitigationActionActionParamsOutputWithContext(ctx context.Context) MitigationActionActionParamsOutput {
	return o
}

// Specifies the group to which you want to add the devices.
func (o MitigationActionActionParamsOutput) AddThingsToThingGroupParams() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionAddThingsToThingGroupParams {
		return v.AddThingsToThingGroupParams
	}).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

// Specifies the logging level and the role with permissions for logging. You cannot specify a logging level of `DISABLED` .
func (o MitigationActionActionParamsOutput) EnableIoTLoggingParams() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionEnableIoTLoggingParams {
		return v.EnableIoTLoggingParams
	}).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

// Specifies the topic to which the finding should be published.
func (o MitigationActionActionParamsOutput) PublishFindingToSnsParams() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionPublishFindingToSnsParams {
		return v.PublishFindingToSnsParams
	}).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

// Replaces the policy version with a default or blank policy. You specify the template name. Only a value of `BLANK_POLICY` is currently supported.
func (o MitigationActionActionParamsOutput) ReplaceDefaultPolicyVersionParams() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionReplaceDefaultPolicyVersionParams {
		return v.ReplaceDefaultPolicyVersionParams
	}).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

// Specifies the new state for the CA certificate. Only a value of `DEACTIVATE` is currently supported.
func (o MitigationActionActionParamsOutput) UpdateCaCertificateParams() MitigationActionUpdateCaCertificateParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionUpdateCaCertificateParams {
		return v.UpdateCaCertificateParams
	}).(MitigationActionUpdateCaCertificateParamsPtrOutput)
}

// Specifies the new state for a device certificate. Only a value of `DEACTIVATE` is currently supported.
func (o MitigationActionActionParamsOutput) UpdateDeviceCertificateParams() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionUpdateDeviceCertificateParams {
		return v.UpdateDeviceCertificateParams
	}).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

type MitigationActionActionParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionActionParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionActionParams)(nil)).Elem()
}

func (o MitigationActionActionParamsPtrOutput) ToMitigationActionActionParamsPtrOutput() MitigationActionActionParamsPtrOutput {
	return o
}

func (o MitigationActionActionParamsPtrOutput) ToMitigationActionActionParamsPtrOutputWithContext(ctx context.Context) MitigationActionActionParamsPtrOutput {
	return o
}

func (o MitigationActionActionParamsPtrOutput) Elem() MitigationActionActionParamsOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) MitigationActionActionParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionActionParams
		return ret
	}).(MitigationActionActionParamsOutput)
}

// Specifies the group to which you want to add the devices.
func (o MitigationActionActionParamsPtrOutput) AddThingsToThingGroupParams() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionAddThingsToThingGroupParams {
		if v == nil {
			return nil
		}
		return v.AddThingsToThingGroupParams
	}).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

// Specifies the logging level and the role with permissions for logging. You cannot specify a logging level of `DISABLED` .
func (o MitigationActionActionParamsPtrOutput) EnableIoTLoggingParams() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionEnableIoTLoggingParams {
		if v == nil {
			return nil
		}
		return v.EnableIoTLoggingParams
	}).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

// Specifies the topic to which the finding should be published.
func (o MitigationActionActionParamsPtrOutput) PublishFindingToSnsParams() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionPublishFindingToSnsParams {
		if v == nil {
			return nil
		}
		return v.PublishFindingToSnsParams
	}).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

// Replaces the policy version with a default or blank policy. You specify the template name. Only a value of `BLANK_POLICY` is currently supported.
func (o MitigationActionActionParamsPtrOutput) ReplaceDefaultPolicyVersionParams() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionReplaceDefaultPolicyVersionParams {
		if v == nil {
			return nil
		}
		return v.ReplaceDefaultPolicyVersionParams
	}).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

// Specifies the new state for the CA certificate. Only a value of `DEACTIVATE` is currently supported.
func (o MitigationActionActionParamsPtrOutput) UpdateCaCertificateParams() MitigationActionUpdateCaCertificateParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionUpdateCaCertificateParams {
		if v == nil {
			return nil
		}
		return v.UpdateCaCertificateParams
	}).(MitigationActionUpdateCaCertificateParamsPtrOutput)
}

// Specifies the new state for a device certificate. Only a value of `DEACTIVATE` is currently supported.
func (o MitigationActionActionParamsPtrOutput) UpdateDeviceCertificateParams() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionUpdateDeviceCertificateParams {
		if v == nil {
			return nil
		}
		return v.UpdateDeviceCertificateParams
	}).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
type MitigationActionAddThingsToThingGroupParams struct {
	// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
	OverrideDynamicGroups *bool `pulumi:"overrideDynamicGroups"`
	// The list of groups to which you want to add the things that triggered the mitigation action.
	ThingGroupNames []string `pulumi:"thingGroupNames"`
}

// MitigationActionAddThingsToThingGroupParamsInput is an input type that accepts MitigationActionAddThingsToThingGroupParamsArgs and MitigationActionAddThingsToThingGroupParamsOutput values.
// You can construct a concrete instance of `MitigationActionAddThingsToThingGroupParamsInput` via:
//
//	MitigationActionAddThingsToThingGroupParamsArgs{...}
type MitigationActionAddThingsToThingGroupParamsInput interface {
	pulumi.Input

	ToMitigationActionAddThingsToThingGroupParamsOutput() MitigationActionAddThingsToThingGroupParamsOutput
	ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(context.Context) MitigationActionAddThingsToThingGroupParamsOutput
}

// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
type MitigationActionAddThingsToThingGroupParamsArgs struct {
	// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
	OverrideDynamicGroups pulumi.BoolPtrInput `pulumi:"overrideDynamicGroups"`
	// The list of groups to which you want to add the things that triggered the mitigation action.
	ThingGroupNames pulumi.StringArrayInput `pulumi:"thingGroupNames"`
}

func (MitigationActionAddThingsToThingGroupParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsOutput() MitigationActionAddThingsToThingGroupParamsOutput {
	return i.ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(context.Background())
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionAddThingsToThingGroupParamsOutput)
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return i.ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionAddThingsToThingGroupParamsOutput).ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx)
}

// MitigationActionAddThingsToThingGroupParamsPtrInput is an input type that accepts MitigationActionAddThingsToThingGroupParamsArgs, MitigationActionAddThingsToThingGroupParamsPtr and MitigationActionAddThingsToThingGroupParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionAddThingsToThingGroupParamsPtrInput` via:
//
//	        MitigationActionAddThingsToThingGroupParamsArgs{...}
//
//	or:
//
//	        nil
type MitigationActionAddThingsToThingGroupParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput
	ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput
}

type mitigationActionAddThingsToThingGroupParamsPtrType MitigationActionAddThingsToThingGroupParamsArgs

func MitigationActionAddThingsToThingGroupParamsPtr(v *MitigationActionAddThingsToThingGroupParamsArgs) MitigationActionAddThingsToThingGroupParamsPtrInput {
	return (*mitigationActionAddThingsToThingGroupParamsPtrType)(v)
}

func (*mitigationActionAddThingsToThingGroupParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (i *mitigationActionAddThingsToThingGroupParamsPtrType) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return i.ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionAddThingsToThingGroupParamsPtrType) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
type MitigationActionAddThingsToThingGroupParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionAddThingsToThingGroupParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsOutput() MitigationActionAddThingsToThingGroupParamsOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionAddThingsToThingGroupParams) *MitigationActionAddThingsToThingGroupParams {
		return &v
	}).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
func (o MitigationActionAddThingsToThingGroupParamsOutput) OverrideDynamicGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MitigationActionAddThingsToThingGroupParams) *bool { return v.OverrideDynamicGroups }).(pulumi.BoolPtrOutput)
}

// The list of groups to which you want to add the things that triggered the mitigation action.
func (o MitigationActionAddThingsToThingGroupParamsOutput) ThingGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MitigationActionAddThingsToThingGroupParams) []string { return v.ThingGroupNames }).(pulumi.StringArrayOutput)
}

type MitigationActionAddThingsToThingGroupParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionAddThingsToThingGroupParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) Elem() MitigationActionAddThingsToThingGroupParamsOutput {
	return o.ApplyT(func(v *MitigationActionAddThingsToThingGroupParams) MitigationActionAddThingsToThingGroupParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionAddThingsToThingGroupParams
		return ret
	}).(MitigationActionAddThingsToThingGroupParamsOutput)
}

// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) OverrideDynamicGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MitigationActionAddThingsToThingGroupParams) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideDynamicGroups
	}).(pulumi.BoolPtrOutput)
}

// The list of groups to which you want to add the things that triggered the mitigation action.
func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) ThingGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MitigationActionAddThingsToThingGroupParams) []string {
		if v == nil {
			return nil
		}
		return v.ThingGroupNames
	}).(pulumi.StringArrayOutput)
}

// Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
type MitigationActionEnableIoTLoggingParams struct {
	//  Specifies which types of information are logged.
	LogLevel MitigationActionEnableIoTLoggingParamsLogLevel `pulumi:"logLevel"`
	//  The ARN of the IAM role used for logging.
	RoleArnForLogging string `pulumi:"roleArnForLogging"`
}

// MitigationActionEnableIoTLoggingParamsInput is an input type that accepts MitigationActionEnableIoTLoggingParamsArgs and MitigationActionEnableIoTLoggingParamsOutput values.
// You can construct a concrete instance of `MitigationActionEnableIoTLoggingParamsInput` via:
//
//	MitigationActionEnableIoTLoggingParamsArgs{...}
type MitigationActionEnableIoTLoggingParamsInput interface {
	pulumi.Input

	ToMitigationActionEnableIoTLoggingParamsOutput() MitigationActionEnableIoTLoggingParamsOutput
	ToMitigationActionEnableIoTLoggingParamsOutputWithContext(context.Context) MitigationActionEnableIoTLoggingParamsOutput
}

// Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
type MitigationActionEnableIoTLoggingParamsArgs struct {
	//  Specifies which types of information are logged.
	LogLevel MitigationActionEnableIoTLoggingParamsLogLevelInput `pulumi:"logLevel"`
	//  The ARN of the IAM role used for logging.
	RoleArnForLogging pulumi.StringInput `pulumi:"roleArnForLogging"`
}

func (MitigationActionEnableIoTLoggingParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsOutput() MitigationActionEnableIoTLoggingParamsOutput {
	return i.ToMitigationActionEnableIoTLoggingParamsOutputWithContext(context.Background())
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionEnableIoTLoggingParamsOutput)
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return i.ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionEnableIoTLoggingParamsOutput).ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx)
}

// MitigationActionEnableIoTLoggingParamsPtrInput is an input type that accepts MitigationActionEnableIoTLoggingParamsArgs, MitigationActionEnableIoTLoggingParamsPtr and MitigationActionEnableIoTLoggingParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionEnableIoTLoggingParamsPtrInput` via:
//
//	        MitigationActionEnableIoTLoggingParamsArgs{...}
//
//	or:
//
//	        nil
type MitigationActionEnableIoTLoggingParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput
	ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput
}

type mitigationActionEnableIoTLoggingParamsPtrType MitigationActionEnableIoTLoggingParamsArgs

func MitigationActionEnableIoTLoggingParamsPtr(v *MitigationActionEnableIoTLoggingParamsArgs) MitigationActionEnableIoTLoggingParamsPtrInput {
	return (*mitigationActionEnableIoTLoggingParamsPtrType)(v)
}

func (*mitigationActionEnableIoTLoggingParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (i *mitigationActionEnableIoTLoggingParamsPtrType) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return i.ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionEnableIoTLoggingParamsPtrType) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

// Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
type MitigationActionEnableIoTLoggingParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionEnableIoTLoggingParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsOutput() MitigationActionEnableIoTLoggingParamsOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionEnableIoTLoggingParams) *MitigationActionEnableIoTLoggingParams {
		return &v
	}).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

// Specifies which types of information are logged.
func (o MitigationActionEnableIoTLoggingParamsOutput) LogLevel() MitigationActionEnableIoTLoggingParamsLogLevelOutput {
	return o.ApplyT(func(v MitigationActionEnableIoTLoggingParams) MitigationActionEnableIoTLoggingParamsLogLevel {
		return v.LogLevel
	}).(MitigationActionEnableIoTLoggingParamsLogLevelOutput)
}

// The ARN of the IAM role used for logging.
func (o MitigationActionEnableIoTLoggingParamsOutput) RoleArnForLogging() pulumi.StringOutput {
	return o.ApplyT(func(v MitigationActionEnableIoTLoggingParams) string { return v.RoleArnForLogging }).(pulumi.StringOutput)
}

type MitigationActionEnableIoTLoggingParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionEnableIoTLoggingParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (o MitigationActionEnableIoTLoggingParamsPtrOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsPtrOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsPtrOutput) Elem() MitigationActionEnableIoTLoggingParamsOutput {
	return o.ApplyT(func(v *MitigationActionEnableIoTLoggingParams) MitigationActionEnableIoTLoggingParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionEnableIoTLoggingParams
		return ret
	}).(MitigationActionEnableIoTLoggingParamsOutput)
}

// Specifies which types of information are logged.
func (o MitigationActionEnableIoTLoggingParamsPtrOutput) LogLevel() MitigationActionEnableIoTLoggingParamsLogLevelPtrOutput {
	return o.ApplyT(func(v *MitigationActionEnableIoTLoggingParams) *MitigationActionEnableIoTLoggingParamsLogLevel {
		if v == nil {
			return nil
		}
		return &v.LogLevel
	}).(MitigationActionEnableIoTLoggingParamsLogLevelPtrOutput)
}

// The ARN of the IAM role used for logging.
func (o MitigationActionEnableIoTLoggingParamsPtrOutput) RoleArnForLogging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MitigationActionEnableIoTLoggingParams) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArnForLogging
	}).(pulumi.StringPtrOutput)
}

// Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
type MitigationActionPublishFindingToSnsParams struct {
	// The ARN of the topic to which you want to publish the findings.
	TopicArn string `pulumi:"topicArn"`
}

// MitigationActionPublishFindingToSnsParamsInput is an input type that accepts MitigationActionPublishFindingToSnsParamsArgs and MitigationActionPublishFindingToSnsParamsOutput values.
// You can construct a concrete instance of `MitigationActionPublishFindingToSnsParamsInput` via:
//
//	MitigationActionPublishFindingToSnsParamsArgs{...}
type MitigationActionPublishFindingToSnsParamsInput interface {
	pulumi.Input

	ToMitigationActionPublishFindingToSnsParamsOutput() MitigationActionPublishFindingToSnsParamsOutput
	ToMitigationActionPublishFindingToSnsParamsOutputWithContext(context.Context) MitigationActionPublishFindingToSnsParamsOutput
}

// Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
type MitigationActionPublishFindingToSnsParamsArgs struct {
	// The ARN of the topic to which you want to publish the findings.
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (MitigationActionPublishFindingToSnsParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsOutput() MitigationActionPublishFindingToSnsParamsOutput {
	return i.ToMitigationActionPublishFindingToSnsParamsOutputWithContext(context.Background())
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionPublishFindingToSnsParamsOutput)
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return i.ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionPublishFindingToSnsParamsOutput).ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx)
}

// MitigationActionPublishFindingToSnsParamsPtrInput is an input type that accepts MitigationActionPublishFindingToSnsParamsArgs, MitigationActionPublishFindingToSnsParamsPtr and MitigationActionPublishFindingToSnsParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionPublishFindingToSnsParamsPtrInput` via:
//
//	        MitigationActionPublishFindingToSnsParamsArgs{...}
//
//	or:
//
//	        nil
type MitigationActionPublishFindingToSnsParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput
	ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput
}

type mitigationActionPublishFindingToSnsParamsPtrType MitigationActionPublishFindingToSnsParamsArgs

func MitigationActionPublishFindingToSnsParamsPtr(v *MitigationActionPublishFindingToSnsParamsArgs) MitigationActionPublishFindingToSnsParamsPtrInput {
	return (*mitigationActionPublishFindingToSnsParamsPtrType)(v)
}

func (*mitigationActionPublishFindingToSnsParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (i *mitigationActionPublishFindingToSnsParamsPtrType) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return i.ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionPublishFindingToSnsParamsPtrType) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

// Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
type MitigationActionPublishFindingToSnsParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionPublishFindingToSnsParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsOutput() MitigationActionPublishFindingToSnsParamsOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionPublishFindingToSnsParams) *MitigationActionPublishFindingToSnsParams {
		return &v
	}).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

// The ARN of the topic to which you want to publish the findings.
func (o MitigationActionPublishFindingToSnsParamsOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v MitigationActionPublishFindingToSnsParams) string { return v.TopicArn }).(pulumi.StringOutput)
}

type MitigationActionPublishFindingToSnsParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionPublishFindingToSnsParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (o MitigationActionPublishFindingToSnsParamsPtrOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsPtrOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsPtrOutput) Elem() MitigationActionPublishFindingToSnsParamsOutput {
	return o.ApplyT(func(v *MitigationActionPublishFindingToSnsParams) MitigationActionPublishFindingToSnsParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionPublishFindingToSnsParams
		return ret
	}).(MitigationActionPublishFindingToSnsParamsOutput)
}

// The ARN of the topic to which you want to publish the findings.
func (o MitigationActionPublishFindingToSnsParamsPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MitigationActionPublishFindingToSnsParams) *string {
		if v == nil {
			return nil
		}
		return &v.TopicArn
	}).(pulumi.StringPtrOutput)
}

// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
type MitigationActionReplaceDefaultPolicyVersionParams struct {
	// The name of the template to be applied. The only supported value is `BLANK_POLICY` .
	TemplateName MitigationActionReplaceDefaultPolicyVersionParamsTemplateName `pulumi:"templateName"`
}

// MitigationActionReplaceDefaultPolicyVersionParamsInput is an input type that accepts MitigationActionReplaceDefaultPolicyVersionParamsArgs and MitigationActionReplaceDefaultPolicyVersionParamsOutput values.
// You can construct a concrete instance of `MitigationActionReplaceDefaultPolicyVersionParamsInput` via:
//
//	MitigationActionReplaceDefaultPolicyVersionParamsArgs{...}
type MitigationActionReplaceDefaultPolicyVersionParamsInput interface {
	pulumi.Input

	ToMitigationActionReplaceDefaultPolicyVersionParamsOutput() MitigationActionReplaceDefaultPolicyVersionParamsOutput
	ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(context.Context) MitigationActionReplaceDefaultPolicyVersionParamsOutput
}

// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
type MitigationActionReplaceDefaultPolicyVersionParamsArgs struct {
	// The name of the template to be applied. The only supported value is `BLANK_POLICY` .
	TemplateName MitigationActionReplaceDefaultPolicyVersionParamsTemplateNameInput `pulumi:"templateName"`
}

func (MitigationActionReplaceDefaultPolicyVersionParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsOutput() MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return i.ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(context.Background())
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionReplaceDefaultPolicyVersionParamsOutput)
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return i.ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionReplaceDefaultPolicyVersionParamsOutput).ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx)
}

// MitigationActionReplaceDefaultPolicyVersionParamsPtrInput is an input type that accepts MitigationActionReplaceDefaultPolicyVersionParamsArgs, MitigationActionReplaceDefaultPolicyVersionParamsPtr and MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionReplaceDefaultPolicyVersionParamsPtrInput` via:
//
//	        MitigationActionReplaceDefaultPolicyVersionParamsArgs{...}
//
//	or:
//
//	        nil
type MitigationActionReplaceDefaultPolicyVersionParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput
	ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput
}

type mitigationActionReplaceDefaultPolicyVersionParamsPtrType MitigationActionReplaceDefaultPolicyVersionParamsArgs

func MitigationActionReplaceDefaultPolicyVersionParamsPtr(v *MitigationActionReplaceDefaultPolicyVersionParamsArgs) MitigationActionReplaceDefaultPolicyVersionParamsPtrInput {
	return (*mitigationActionReplaceDefaultPolicyVersionParamsPtrType)(v)
}

func (*mitigationActionReplaceDefaultPolicyVersionParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (i *mitigationActionReplaceDefaultPolicyVersionParamsPtrType) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return i.ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionReplaceDefaultPolicyVersionParamsPtrType) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
type MitigationActionReplaceDefaultPolicyVersionParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionReplaceDefaultPolicyVersionParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsOutput() MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionReplaceDefaultPolicyVersionParams) *MitigationActionReplaceDefaultPolicyVersionParams {
		return &v
	}).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

// The name of the template to be applied. The only supported value is `BLANK_POLICY` .
func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) TemplateName() MitigationActionReplaceDefaultPolicyVersionParamsTemplateNameOutput {
	return o.ApplyT(func(v MitigationActionReplaceDefaultPolicyVersionParams) MitigationActionReplaceDefaultPolicyVersionParamsTemplateName {
		return v.TemplateName
	}).(MitigationActionReplaceDefaultPolicyVersionParamsTemplateNameOutput)
}

type MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) Elem() MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return o.ApplyT(func(v *MitigationActionReplaceDefaultPolicyVersionParams) MitigationActionReplaceDefaultPolicyVersionParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionReplaceDefaultPolicyVersionParams
		return ret
	}).(MitigationActionReplaceDefaultPolicyVersionParamsOutput)
}

// The name of the template to be applied. The only supported value is `BLANK_POLICY` .
func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) TemplateName() MitigationActionReplaceDefaultPolicyVersionParamsTemplateNamePtrOutput {
	return o.ApplyT(func(v *MitigationActionReplaceDefaultPolicyVersionParams) *MitigationActionReplaceDefaultPolicyVersionParamsTemplateName {
		if v == nil {
			return nil
		}
		return &v.TemplateName
	}).(MitigationActionReplaceDefaultPolicyVersionParamsTemplateNamePtrOutput)
}

// A key-value pair to associate with a resource.
type MitigationActionTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
type MitigationActionUpdateCaCertificateParams struct {
	// The action that you want to apply to the CA certificate. The only supported value is `DEACTIVATE` .
	Action MitigationActionUpdateCaCertificateParamsAction `pulumi:"action"`
}

// MitigationActionUpdateCaCertificateParamsInput is an input type that accepts MitigationActionUpdateCaCertificateParamsArgs and MitigationActionUpdateCaCertificateParamsOutput values.
// You can construct a concrete instance of `MitigationActionUpdateCaCertificateParamsInput` via:
//
//	MitigationActionUpdateCaCertificateParamsArgs{...}
type MitigationActionUpdateCaCertificateParamsInput interface {
	pulumi.Input

	ToMitigationActionUpdateCaCertificateParamsOutput() MitigationActionUpdateCaCertificateParamsOutput
	ToMitigationActionUpdateCaCertificateParamsOutputWithContext(context.Context) MitigationActionUpdateCaCertificateParamsOutput
}

// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
type MitigationActionUpdateCaCertificateParamsArgs struct {
	// The action that you want to apply to the CA certificate. The only supported value is `DEACTIVATE` .
	Action MitigationActionUpdateCaCertificateParamsActionInput `pulumi:"action"`
}

func (MitigationActionUpdateCaCertificateParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateCaCertificateParams)(nil)).Elem()
}

func (i MitigationActionUpdateCaCertificateParamsArgs) ToMitigationActionUpdateCaCertificateParamsOutput() MitigationActionUpdateCaCertificateParamsOutput {
	return i.ToMitigationActionUpdateCaCertificateParamsOutputWithContext(context.Background())
}

func (i MitigationActionUpdateCaCertificateParamsArgs) ToMitigationActionUpdateCaCertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateCaCertificateParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateCaCertificateParamsOutput)
}

func (i MitigationActionUpdateCaCertificateParamsArgs) ToMitigationActionUpdateCaCertificateParamsPtrOutput() MitigationActionUpdateCaCertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionUpdateCaCertificateParamsArgs) ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCaCertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateCaCertificateParamsOutput).ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(ctx)
}

// MitigationActionUpdateCaCertificateParamsPtrInput is an input type that accepts MitigationActionUpdateCaCertificateParamsArgs, MitigationActionUpdateCaCertificateParamsPtr and MitigationActionUpdateCaCertificateParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionUpdateCaCertificateParamsPtrInput` via:
//
//	        MitigationActionUpdateCaCertificateParamsArgs{...}
//
//	or:
//
//	        nil
type MitigationActionUpdateCaCertificateParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionUpdateCaCertificateParamsPtrOutput() MitigationActionUpdateCaCertificateParamsPtrOutput
	ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(context.Context) MitigationActionUpdateCaCertificateParamsPtrOutput
}

type mitigationActionUpdateCaCertificateParamsPtrType MitigationActionUpdateCaCertificateParamsArgs

func MitigationActionUpdateCaCertificateParamsPtr(v *MitigationActionUpdateCaCertificateParamsArgs) MitigationActionUpdateCaCertificateParamsPtrInput {
	return (*mitigationActionUpdateCaCertificateParamsPtrType)(v)
}

func (*mitigationActionUpdateCaCertificateParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateCaCertificateParams)(nil)).Elem()
}

func (i *mitigationActionUpdateCaCertificateParamsPtrType) ToMitigationActionUpdateCaCertificateParamsPtrOutput() MitigationActionUpdateCaCertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionUpdateCaCertificateParamsPtrType) ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCaCertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateCaCertificateParamsPtrOutput)
}

// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
type MitigationActionUpdateCaCertificateParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateCaCertificateParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateCaCertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateCaCertificateParamsOutput) ToMitigationActionUpdateCaCertificateParamsOutput() MitigationActionUpdateCaCertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateCaCertificateParamsOutput) ToMitigationActionUpdateCaCertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateCaCertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateCaCertificateParamsOutput) ToMitigationActionUpdateCaCertificateParamsPtrOutput() MitigationActionUpdateCaCertificateParamsPtrOutput {
	return o.ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionUpdateCaCertificateParamsOutput) ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCaCertificateParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionUpdateCaCertificateParams) *MitigationActionUpdateCaCertificateParams {
		return &v
	}).(MitigationActionUpdateCaCertificateParamsPtrOutput)
}

// The action that you want to apply to the CA certificate. The only supported value is `DEACTIVATE` .
func (o MitigationActionUpdateCaCertificateParamsOutput) Action() MitigationActionUpdateCaCertificateParamsActionOutput {
	return o.ApplyT(func(v MitigationActionUpdateCaCertificateParams) MitigationActionUpdateCaCertificateParamsAction {
		return v.Action
	}).(MitigationActionUpdateCaCertificateParamsActionOutput)
}

type MitigationActionUpdateCaCertificateParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateCaCertificateParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateCaCertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateCaCertificateParamsPtrOutput) ToMitigationActionUpdateCaCertificateParamsPtrOutput() MitigationActionUpdateCaCertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateCaCertificateParamsPtrOutput) ToMitigationActionUpdateCaCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCaCertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateCaCertificateParamsPtrOutput) Elem() MitigationActionUpdateCaCertificateParamsOutput {
	return o.ApplyT(func(v *MitigationActionUpdateCaCertificateParams) MitigationActionUpdateCaCertificateParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionUpdateCaCertificateParams
		return ret
	}).(MitigationActionUpdateCaCertificateParamsOutput)
}

// The action that you want to apply to the CA certificate. The only supported value is `DEACTIVATE` .
func (o MitigationActionUpdateCaCertificateParamsPtrOutput) Action() MitigationActionUpdateCaCertificateParamsActionPtrOutput {
	return o.ApplyT(func(v *MitigationActionUpdateCaCertificateParams) *MitigationActionUpdateCaCertificateParamsAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(MitigationActionUpdateCaCertificateParamsActionPtrOutput)
}

// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
type MitigationActionUpdateDeviceCertificateParams struct {
	// The action that you want to apply to the device certificate. The only supported value is `DEACTIVATE` .
	Action MitigationActionUpdateDeviceCertificateParamsAction `pulumi:"action"`
}

// MitigationActionUpdateDeviceCertificateParamsInput is an input type that accepts MitigationActionUpdateDeviceCertificateParamsArgs and MitigationActionUpdateDeviceCertificateParamsOutput values.
// You can construct a concrete instance of `MitigationActionUpdateDeviceCertificateParamsInput` via:
//
//	MitigationActionUpdateDeviceCertificateParamsArgs{...}
type MitigationActionUpdateDeviceCertificateParamsInput interface {
	pulumi.Input

	ToMitigationActionUpdateDeviceCertificateParamsOutput() MitigationActionUpdateDeviceCertificateParamsOutput
	ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(context.Context) MitigationActionUpdateDeviceCertificateParamsOutput
}

// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
type MitigationActionUpdateDeviceCertificateParamsArgs struct {
	// The action that you want to apply to the device certificate. The only supported value is `DEACTIVATE` .
	Action MitigationActionUpdateDeviceCertificateParamsActionInput `pulumi:"action"`
}

func (MitigationActionUpdateDeviceCertificateParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsOutput() MitigationActionUpdateDeviceCertificateParamsOutput {
	return i.ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(context.Background())
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateDeviceCertificateParamsOutput)
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateDeviceCertificateParamsOutput).ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx)
}

// MitigationActionUpdateDeviceCertificateParamsPtrInput is an input type that accepts MitigationActionUpdateDeviceCertificateParamsArgs, MitigationActionUpdateDeviceCertificateParamsPtr and MitigationActionUpdateDeviceCertificateParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionUpdateDeviceCertificateParamsPtrInput` via:
//
//	        MitigationActionUpdateDeviceCertificateParamsArgs{...}
//
//	or:
//
//	        nil
type MitigationActionUpdateDeviceCertificateParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput
	ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput
}

type mitigationActionUpdateDeviceCertificateParamsPtrType MitigationActionUpdateDeviceCertificateParamsArgs

func MitigationActionUpdateDeviceCertificateParamsPtr(v *MitigationActionUpdateDeviceCertificateParamsArgs) MitigationActionUpdateDeviceCertificateParamsPtrInput {
	return (*mitigationActionUpdateDeviceCertificateParamsPtrType)(v)
}

func (*mitigationActionUpdateDeviceCertificateParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (i *mitigationActionUpdateDeviceCertificateParamsPtrType) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionUpdateDeviceCertificateParamsPtrType) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
type MitigationActionUpdateDeviceCertificateParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateDeviceCertificateParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsOutput() MitigationActionUpdateDeviceCertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionUpdateDeviceCertificateParams) *MitigationActionUpdateDeviceCertificateParams {
		return &v
	}).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

// The action that you want to apply to the device certificate. The only supported value is `DEACTIVATE` .
func (o MitigationActionUpdateDeviceCertificateParamsOutput) Action() MitigationActionUpdateDeviceCertificateParamsActionOutput {
	return o.ApplyT(func(v MitigationActionUpdateDeviceCertificateParams) MitigationActionUpdateDeviceCertificateParamsAction {
		return v.Action
	}).(MitigationActionUpdateDeviceCertificateParamsActionOutput)
}

type MitigationActionUpdateDeviceCertificateParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateDeviceCertificateParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) Elem() MitigationActionUpdateDeviceCertificateParamsOutput {
	return o.ApplyT(func(v *MitigationActionUpdateDeviceCertificateParams) MitigationActionUpdateDeviceCertificateParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionUpdateDeviceCertificateParams
		return ret
	}).(MitigationActionUpdateDeviceCertificateParamsOutput)
}

// The action that you want to apply to the device certificate. The only supported value is `DEACTIVATE` .
func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) Action() MitigationActionUpdateDeviceCertificateParamsActionPtrOutput {
	return o.ApplyT(func(v *MitigationActionUpdateDeviceCertificateParams) *MitigationActionUpdateDeviceCertificateParamsAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(MitigationActionUpdateDeviceCertificateParamsActionPtrOutput)
}

type PolicyTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// Configuration for pre-signed S3 URLs.
type PresignedUrlConfigProperties struct {
	// How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.
	ExpiresInSec *int `pulumi:"expiresInSec"`
	// The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
	//
	// > For information about addressing the confused deputy problem, see [cross-service confused deputy prevention](https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html) in the *AWS IoT Core developer guide* .
	RoleArn string `pulumi:"roleArn"`
}

// PresignedUrlConfigPropertiesInput is an input type that accepts PresignedUrlConfigPropertiesArgs and PresignedUrlConfigPropertiesOutput values.
// You can construct a concrete instance of `PresignedUrlConfigPropertiesInput` via:
//
//	PresignedUrlConfigPropertiesArgs{...}
type PresignedUrlConfigPropertiesInput interface {
	pulumi.Input

	ToPresignedUrlConfigPropertiesOutput() PresignedUrlConfigPropertiesOutput
	ToPresignedUrlConfigPropertiesOutputWithContext(context.Context) PresignedUrlConfigPropertiesOutput
}

// Configuration for pre-signed S3 URLs.
type PresignedUrlConfigPropertiesArgs struct {
	// How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.
	ExpiresInSec pulumi.IntPtrInput `pulumi:"expiresInSec"`
	// The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
	//
	// > For information about addressing the confused deputy problem, see [cross-service confused deputy prevention](https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html) in the *AWS IoT Core developer guide* .
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (PresignedUrlConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PresignedUrlConfigProperties)(nil)).Elem()
}

func (i PresignedUrlConfigPropertiesArgs) ToPresignedUrlConfigPropertiesOutput() PresignedUrlConfigPropertiesOutput {
	return i.ToPresignedUrlConfigPropertiesOutputWithContext(context.Background())
}

func (i PresignedUrlConfigPropertiesArgs) ToPresignedUrlConfigPropertiesOutputWithContext(ctx context.Context) PresignedUrlConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresignedUrlConfigPropertiesOutput)
}

func (i PresignedUrlConfigPropertiesArgs) ToPresignedUrlConfigPropertiesPtrOutput() PresignedUrlConfigPropertiesPtrOutput {
	return i.ToPresignedUrlConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i PresignedUrlConfigPropertiesArgs) ToPresignedUrlConfigPropertiesPtrOutputWithContext(ctx context.Context) PresignedUrlConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresignedUrlConfigPropertiesOutput).ToPresignedUrlConfigPropertiesPtrOutputWithContext(ctx)
}

// PresignedUrlConfigPropertiesPtrInput is an input type that accepts PresignedUrlConfigPropertiesArgs, PresignedUrlConfigPropertiesPtr and PresignedUrlConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `PresignedUrlConfigPropertiesPtrInput` via:
//
//	        PresignedUrlConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type PresignedUrlConfigPropertiesPtrInput interface {
	pulumi.Input

	ToPresignedUrlConfigPropertiesPtrOutput() PresignedUrlConfigPropertiesPtrOutput
	ToPresignedUrlConfigPropertiesPtrOutputWithContext(context.Context) PresignedUrlConfigPropertiesPtrOutput
}

type presignedUrlConfigPropertiesPtrType PresignedUrlConfigPropertiesArgs

func PresignedUrlConfigPropertiesPtr(v *PresignedUrlConfigPropertiesArgs) PresignedUrlConfigPropertiesPtrInput {
	return (*presignedUrlConfigPropertiesPtrType)(v)
}

func (*presignedUrlConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PresignedUrlConfigProperties)(nil)).Elem()
}

func (i *presignedUrlConfigPropertiesPtrType) ToPresignedUrlConfigPropertiesPtrOutput() PresignedUrlConfigPropertiesPtrOutput {
	return i.ToPresignedUrlConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *presignedUrlConfigPropertiesPtrType) ToPresignedUrlConfigPropertiesPtrOutputWithContext(ctx context.Context) PresignedUrlConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresignedUrlConfigPropertiesPtrOutput)
}

// Configuration for pre-signed S3 URLs.
type PresignedUrlConfigPropertiesOutput struct{ *pulumi.OutputState }

func (PresignedUrlConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PresignedUrlConfigProperties)(nil)).Elem()
}

func (o PresignedUrlConfigPropertiesOutput) ToPresignedUrlConfigPropertiesOutput() PresignedUrlConfigPropertiesOutput {
	return o
}

func (o PresignedUrlConfigPropertiesOutput) ToPresignedUrlConfigPropertiesOutputWithContext(ctx context.Context) PresignedUrlConfigPropertiesOutput {
	return o
}

func (o PresignedUrlConfigPropertiesOutput) ToPresignedUrlConfigPropertiesPtrOutput() PresignedUrlConfigPropertiesPtrOutput {
	return o.ToPresignedUrlConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o PresignedUrlConfigPropertiesOutput) ToPresignedUrlConfigPropertiesPtrOutputWithContext(ctx context.Context) PresignedUrlConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PresignedUrlConfigProperties) *PresignedUrlConfigProperties {
		return &v
	}).(PresignedUrlConfigPropertiesPtrOutput)
}

// How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.
func (o PresignedUrlConfigPropertiesOutput) ExpiresInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PresignedUrlConfigProperties) *int { return v.ExpiresInSec }).(pulumi.IntPtrOutput)
}

// The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
//
// > For information about addressing the confused deputy problem, see [cross-service confused deputy prevention](https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html) in the *AWS IoT Core developer guide* .
func (o PresignedUrlConfigPropertiesOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v PresignedUrlConfigProperties) string { return v.RoleArn }).(pulumi.StringOutput)
}

type PresignedUrlConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PresignedUrlConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PresignedUrlConfigProperties)(nil)).Elem()
}

func (o PresignedUrlConfigPropertiesPtrOutput) ToPresignedUrlConfigPropertiesPtrOutput() PresignedUrlConfigPropertiesPtrOutput {
	return o
}

func (o PresignedUrlConfigPropertiesPtrOutput) ToPresignedUrlConfigPropertiesPtrOutputWithContext(ctx context.Context) PresignedUrlConfigPropertiesPtrOutput {
	return o
}

func (o PresignedUrlConfigPropertiesPtrOutput) Elem() PresignedUrlConfigPropertiesOutput {
	return o.ApplyT(func(v *PresignedUrlConfigProperties) PresignedUrlConfigProperties {
		if v != nil {
			return *v
		}
		var ret PresignedUrlConfigProperties
		return ret
	}).(PresignedUrlConfigPropertiesOutput)
}

// How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.
func (o PresignedUrlConfigPropertiesPtrOutput) ExpiresInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PresignedUrlConfigProperties) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresInSec
	}).(pulumi.IntPtrOutput)
}

// The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
//
// > For information about addressing the confused deputy problem, see [cross-service confused deputy prevention](https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html) in the *AWS IoT Core developer guide* .
func (o PresignedUrlConfigPropertiesPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresignedUrlConfigProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type ProvisioningTemplateProvisioningHook struct {
	// The payload that was sent to the target function. The valid payload is `"2020-04-01"` .
	PayloadVersion *string `pulumi:"payloadVersion"`
	// The ARN of the target function.
	TargetArn *string `pulumi:"targetArn"`
}

// ProvisioningTemplateProvisioningHookInput is an input type that accepts ProvisioningTemplateProvisioningHookArgs and ProvisioningTemplateProvisioningHookOutput values.
// You can construct a concrete instance of `ProvisioningTemplateProvisioningHookInput` via:
//
//	ProvisioningTemplateProvisioningHookArgs{...}
type ProvisioningTemplateProvisioningHookInput interface {
	pulumi.Input

	ToProvisioningTemplateProvisioningHookOutput() ProvisioningTemplateProvisioningHookOutput
	ToProvisioningTemplateProvisioningHookOutputWithContext(context.Context) ProvisioningTemplateProvisioningHookOutput
}

type ProvisioningTemplateProvisioningHookArgs struct {
	// The payload that was sent to the target function. The valid payload is `"2020-04-01"` .
	PayloadVersion pulumi.StringPtrInput `pulumi:"payloadVersion"`
	// The ARN of the target function.
	TargetArn pulumi.StringPtrInput `pulumi:"targetArn"`
}

func (ProvisioningTemplateProvisioningHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookOutput() ProvisioningTemplateProvisioningHookOutput {
	return i.ToProvisioningTemplateProvisioningHookOutputWithContext(context.Background())
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateProvisioningHookOutput)
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return i.ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Background())
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateProvisioningHookOutput).ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx)
}

// ProvisioningTemplateProvisioningHookPtrInput is an input type that accepts ProvisioningTemplateProvisioningHookArgs, ProvisioningTemplateProvisioningHookPtr and ProvisioningTemplateProvisioningHookPtrOutput values.
// You can construct a concrete instance of `ProvisioningTemplateProvisioningHookPtrInput` via:
//
//	        ProvisioningTemplateProvisioningHookArgs{...}
//
//	or:
//
//	        nil
type ProvisioningTemplateProvisioningHookPtrInput interface {
	pulumi.Input

	ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput
	ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Context) ProvisioningTemplateProvisioningHookPtrOutput
}

type provisioningTemplateProvisioningHookPtrType ProvisioningTemplateProvisioningHookArgs

func ProvisioningTemplateProvisioningHookPtr(v *ProvisioningTemplateProvisioningHookArgs) ProvisioningTemplateProvisioningHookPtrInput {
	return (*provisioningTemplateProvisioningHookPtrType)(v)
}

func (*provisioningTemplateProvisioningHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (i *provisioningTemplateProvisioningHookPtrType) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return i.ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Background())
}

func (i *provisioningTemplateProvisioningHookPtrType) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateProvisioningHookPtrOutput)
}

type ProvisioningTemplateProvisioningHookOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateProvisioningHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookOutput() ProvisioningTemplateProvisioningHookOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return o.ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Background())
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningTemplateProvisioningHook) *ProvisioningTemplateProvisioningHook {
		return &v
	}).(ProvisioningTemplateProvisioningHookPtrOutput)
}

// The payload that was sent to the target function. The valid payload is `"2020-04-01"` .
func (o ProvisioningTemplateProvisioningHookOutput) PayloadVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningTemplateProvisioningHook) *string { return v.PayloadVersion }).(pulumi.StringPtrOutput)
}

// The ARN of the target function.
func (o ProvisioningTemplateProvisioningHookOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningTemplateProvisioningHook) *string { return v.TargetArn }).(pulumi.StringPtrOutput)
}

type ProvisioningTemplateProvisioningHookPtrOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateProvisioningHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) Elem() ProvisioningTemplateProvisioningHookOutput {
	return o.ApplyT(func(v *ProvisioningTemplateProvisioningHook) ProvisioningTemplateProvisioningHook {
		if v != nil {
			return *v
		}
		var ret ProvisioningTemplateProvisioningHook
		return ret
	}).(ProvisioningTemplateProvisioningHookOutput)
}

// The payload that was sent to the target function. The valid payload is `"2020-04-01"` .
func (o ProvisioningTemplateProvisioningHookPtrOutput) PayloadVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplateProvisioningHook) *string {
		if v == nil {
			return nil
		}
		return v.PayloadVersion
	}).(pulumi.StringPtrOutput)
}

// The ARN of the target function.
func (o ProvisioningTemplateProvisioningHookPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplateProvisioningHook) *string {
		if v == nil {
			return nil
		}
		return v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type ProvisioningTemplateTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type RoleAliasTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type ScheduledAuditTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// A structure containing the alert target ARN and the role ARN.
type SecurityProfileAlertTarget struct {
	// The ARN of the notification target to which alerts are sent.
	AlertTargetArn string `pulumi:"alertTargetArn"`
	// The ARN of the role that grants permission to send alerts to the notification target.
	RoleArn string `pulumi:"roleArn"`
}

// SecurityProfileAlertTargetInput is an input type that accepts SecurityProfileAlertTargetArgs and SecurityProfileAlertTargetOutput values.
// You can construct a concrete instance of `SecurityProfileAlertTargetInput` via:
//
//	SecurityProfileAlertTargetArgs{...}
type SecurityProfileAlertTargetInput interface {
	pulumi.Input

	ToSecurityProfileAlertTargetOutput() SecurityProfileAlertTargetOutput
	ToSecurityProfileAlertTargetOutputWithContext(context.Context) SecurityProfileAlertTargetOutput
}

// A structure containing the alert target ARN and the role ARN.
type SecurityProfileAlertTargetArgs struct {
	// The ARN of the notification target to which alerts are sent.
	AlertTargetArn pulumi.StringInput `pulumi:"alertTargetArn"`
	// The ARN of the role that grants permission to send alerts to the notification target.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (SecurityProfileAlertTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileAlertTarget)(nil)).Elem()
}

func (i SecurityProfileAlertTargetArgs) ToSecurityProfileAlertTargetOutput() SecurityProfileAlertTargetOutput {
	return i.ToSecurityProfileAlertTargetOutputWithContext(context.Background())
}

func (i SecurityProfileAlertTargetArgs) ToSecurityProfileAlertTargetOutputWithContext(ctx context.Context) SecurityProfileAlertTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileAlertTargetOutput)
}

// SecurityProfileAlertTargetMapInput is an input type that accepts SecurityProfileAlertTargetMap and SecurityProfileAlertTargetMapOutput values.
// You can construct a concrete instance of `SecurityProfileAlertTargetMapInput` via:
//
//	SecurityProfileAlertTargetMap{ "key": SecurityProfileAlertTargetArgs{...} }
type SecurityProfileAlertTargetMapInput interface {
	pulumi.Input

	ToSecurityProfileAlertTargetMapOutput() SecurityProfileAlertTargetMapOutput
	ToSecurityProfileAlertTargetMapOutputWithContext(context.Context) SecurityProfileAlertTargetMapOutput
}

type SecurityProfileAlertTargetMap map[string]SecurityProfileAlertTargetInput

func (SecurityProfileAlertTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SecurityProfileAlertTarget)(nil)).Elem()
}

func (i SecurityProfileAlertTargetMap) ToSecurityProfileAlertTargetMapOutput() SecurityProfileAlertTargetMapOutput {
	return i.ToSecurityProfileAlertTargetMapOutputWithContext(context.Background())
}

func (i SecurityProfileAlertTargetMap) ToSecurityProfileAlertTargetMapOutputWithContext(ctx context.Context) SecurityProfileAlertTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileAlertTargetMapOutput)
}

// A structure containing the alert target ARN and the role ARN.
type SecurityProfileAlertTargetOutput struct{ *pulumi.OutputState }

func (SecurityProfileAlertTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileAlertTarget)(nil)).Elem()
}

func (o SecurityProfileAlertTargetOutput) ToSecurityProfileAlertTargetOutput() SecurityProfileAlertTargetOutput {
	return o
}

func (o SecurityProfileAlertTargetOutput) ToSecurityProfileAlertTargetOutputWithContext(ctx context.Context) SecurityProfileAlertTargetOutput {
	return o
}

// The ARN of the notification target to which alerts are sent.
func (o SecurityProfileAlertTargetOutput) AlertTargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileAlertTarget) string { return v.AlertTargetArn }).(pulumi.StringOutput)
}

// The ARN of the role that grants permission to send alerts to the notification target.
func (o SecurityProfileAlertTargetOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileAlertTarget) string { return v.RoleArn }).(pulumi.StringOutput)
}

type SecurityProfileAlertTargetMapOutput struct{ *pulumi.OutputState }

func (SecurityProfileAlertTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SecurityProfileAlertTarget)(nil)).Elem()
}

func (o SecurityProfileAlertTargetMapOutput) ToSecurityProfileAlertTargetMapOutput() SecurityProfileAlertTargetMapOutput {
	return o
}

func (o SecurityProfileAlertTargetMapOutput) ToSecurityProfileAlertTargetMapOutputWithContext(ctx context.Context) SecurityProfileAlertTargetMapOutput {
	return o
}

func (o SecurityProfileAlertTargetMapOutput) MapIndex(k pulumi.StringInput) SecurityProfileAlertTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SecurityProfileAlertTarget {
		return vs[0].(map[string]SecurityProfileAlertTarget)[vs[1].(string)]
	}).(SecurityProfileAlertTargetOutput)
}

// A security profile behavior.
type SecurityProfileBehavior struct {
	// The criteria that determine if a device is behaving normally in regard to the `metric` .
	//
	// > In the AWS IoT console, you can choose to be sent an alert through Amazon SNS when AWS IoT Device Defender detects that a device is behaving anomalously.
	Criteria *SecurityProfileBehaviorCriteria `pulumi:"criteria"`
	// Value indicates exporting metrics related to the behavior when it is true.
	ExportMetric *bool `pulumi:"exportMetric"`
	// What is measured by the behavior.
	Metric *string `pulumi:"metric"`
	// The dimension of the metric.
	MetricDimension *SecurityProfileMetricDimension `pulumi:"metricDimension"`
	// The name for the behavior.
	Name string `pulumi:"name"`
	// Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
	SuppressAlerts *bool `pulumi:"suppressAlerts"`
}

// SecurityProfileBehaviorInput is an input type that accepts SecurityProfileBehaviorArgs and SecurityProfileBehaviorOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorInput` via:
//
//	SecurityProfileBehaviorArgs{...}
type SecurityProfileBehaviorInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorOutput() SecurityProfileBehaviorOutput
	ToSecurityProfileBehaviorOutputWithContext(context.Context) SecurityProfileBehaviorOutput
}

// A security profile behavior.
type SecurityProfileBehaviorArgs struct {
	// The criteria that determine if a device is behaving normally in regard to the `metric` .
	//
	// > In the AWS IoT console, you can choose to be sent an alert through Amazon SNS when AWS IoT Device Defender detects that a device is behaving anomalously.
	Criteria SecurityProfileBehaviorCriteriaPtrInput `pulumi:"criteria"`
	// Value indicates exporting metrics related to the behavior when it is true.
	ExportMetric pulumi.BoolPtrInput `pulumi:"exportMetric"`
	// What is measured by the behavior.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// The dimension of the metric.
	MetricDimension SecurityProfileMetricDimensionPtrInput `pulumi:"metricDimension"`
	// The name for the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
	SuppressAlerts pulumi.BoolPtrInput `pulumi:"suppressAlerts"`
}

func (SecurityProfileBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehavior)(nil)).Elem()
}

func (i SecurityProfileBehaviorArgs) ToSecurityProfileBehaviorOutput() SecurityProfileBehaviorOutput {
	return i.ToSecurityProfileBehaviorOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorArgs) ToSecurityProfileBehaviorOutputWithContext(ctx context.Context) SecurityProfileBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorOutput)
}

// SecurityProfileBehaviorArrayInput is an input type that accepts SecurityProfileBehaviorArray and SecurityProfileBehaviorArrayOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorArrayInput` via:
//
//	SecurityProfileBehaviorArray{ SecurityProfileBehaviorArgs{...} }
type SecurityProfileBehaviorArrayInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorArrayOutput() SecurityProfileBehaviorArrayOutput
	ToSecurityProfileBehaviorArrayOutputWithContext(context.Context) SecurityProfileBehaviorArrayOutput
}

type SecurityProfileBehaviorArray []SecurityProfileBehaviorInput

func (SecurityProfileBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileBehavior)(nil)).Elem()
}

func (i SecurityProfileBehaviorArray) ToSecurityProfileBehaviorArrayOutput() SecurityProfileBehaviorArrayOutput {
	return i.ToSecurityProfileBehaviorArrayOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorArray) ToSecurityProfileBehaviorArrayOutputWithContext(ctx context.Context) SecurityProfileBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorArrayOutput)
}

// A security profile behavior.
type SecurityProfileBehaviorOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehavior)(nil)).Elem()
}

func (o SecurityProfileBehaviorOutput) ToSecurityProfileBehaviorOutput() SecurityProfileBehaviorOutput {
	return o
}

func (o SecurityProfileBehaviorOutput) ToSecurityProfileBehaviorOutputWithContext(ctx context.Context) SecurityProfileBehaviorOutput {
	return o
}

// The criteria that determine if a device is behaving normally in regard to the `metric` .
//
// > In the AWS IoT console, you can choose to be sent an alert through Amazon SNS when AWS IoT Device Defender detects that a device is behaving anomalously.
func (o SecurityProfileBehaviorOutput) Criteria() SecurityProfileBehaviorCriteriaPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *SecurityProfileBehaviorCriteria { return v.Criteria }).(SecurityProfileBehaviorCriteriaPtrOutput)
}

// Value indicates exporting metrics related to the behavior when it is true.
func (o SecurityProfileBehaviorOutput) ExportMetric() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *bool { return v.ExportMetric }).(pulumi.BoolPtrOutput)
}

// What is measured by the behavior.
func (o SecurityProfileBehaviorOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// The dimension of the metric.
func (o SecurityProfileBehaviorOutput) MetricDimension() SecurityProfileMetricDimensionPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *SecurityProfileMetricDimension { return v.MetricDimension }).(SecurityProfileMetricDimensionPtrOutput)
}

// The name for the behavior.
func (o SecurityProfileBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
func (o SecurityProfileBehaviorOutput) SuppressAlerts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *bool { return v.SuppressAlerts }).(pulumi.BoolPtrOutput)
}

type SecurityProfileBehaviorArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileBehavior)(nil)).Elem()
}

func (o SecurityProfileBehaviorArrayOutput) ToSecurityProfileBehaviorArrayOutput() SecurityProfileBehaviorArrayOutput {
	return o
}

func (o SecurityProfileBehaviorArrayOutput) ToSecurityProfileBehaviorArrayOutputWithContext(ctx context.Context) SecurityProfileBehaviorArrayOutput {
	return o
}

func (o SecurityProfileBehaviorArrayOutput) Index(i pulumi.IntInput) SecurityProfileBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileBehavior {
		return vs[0].([]SecurityProfileBehavior)[vs[1].(int)]
	}).(SecurityProfileBehaviorOutput)
}

// The criteria by which the behavior is determined to be normal.
type SecurityProfileBehaviorCriteria struct {
	// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
	ComparisonOperator *SecurityProfileBehaviorCriteriaComparisonOperator `pulumi:"comparisonOperator"`
	// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
	ConsecutiveDatapointsToAlarm *int `pulumi:"consecutiveDatapointsToAlarm"`
	// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
	ConsecutiveDatapointsToClear *int `pulumi:"consecutiveDatapointsToClear"`
	// Use this to specify the time duration over which the behavior is evaluated.
	DurationSeconds *int `pulumi:"durationSeconds"`
	// The confidence level of the detection model.
	MlDetectionConfig *SecurityProfileMachineLearningDetectionConfig `pulumi:"mlDetectionConfig"`
	// A statistical ranking (percentile)that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
	StatisticalThreshold *SecurityProfileStatisticalThreshold `pulumi:"statisticalThreshold"`
	// The value to be compared with the `metric` .
	Value *SecurityProfileMetricValue `pulumi:"value"`
}

// SecurityProfileBehaviorCriteriaInput is an input type that accepts SecurityProfileBehaviorCriteriaArgs and SecurityProfileBehaviorCriteriaOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorCriteriaInput` via:
//
//	SecurityProfileBehaviorCriteriaArgs{...}
type SecurityProfileBehaviorCriteriaInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorCriteriaOutput() SecurityProfileBehaviorCriteriaOutput
	ToSecurityProfileBehaviorCriteriaOutputWithContext(context.Context) SecurityProfileBehaviorCriteriaOutput
}

// The criteria by which the behavior is determined to be normal.
type SecurityProfileBehaviorCriteriaArgs struct {
	// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
	ComparisonOperator SecurityProfileBehaviorCriteriaComparisonOperatorPtrInput `pulumi:"comparisonOperator"`
	// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
	ConsecutiveDatapointsToAlarm pulumi.IntPtrInput `pulumi:"consecutiveDatapointsToAlarm"`
	// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
	ConsecutiveDatapointsToClear pulumi.IntPtrInput `pulumi:"consecutiveDatapointsToClear"`
	// Use this to specify the time duration over which the behavior is evaluated.
	DurationSeconds pulumi.IntPtrInput `pulumi:"durationSeconds"`
	// The confidence level of the detection model.
	MlDetectionConfig SecurityProfileMachineLearningDetectionConfigPtrInput `pulumi:"mlDetectionConfig"`
	// A statistical ranking (percentile)that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
	StatisticalThreshold SecurityProfileStatisticalThresholdPtrInput `pulumi:"statisticalThreshold"`
	// The value to be compared with the `metric` .
	Value SecurityProfileMetricValuePtrInput `pulumi:"value"`
}

func (SecurityProfileBehaviorCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaOutput() SecurityProfileBehaviorCriteriaOutput {
	return i.ToSecurityProfileBehaviorCriteriaOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorCriteriaOutput)
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return i.ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorCriteriaOutput).ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx)
}

// SecurityProfileBehaviorCriteriaPtrInput is an input type that accepts SecurityProfileBehaviorCriteriaArgs, SecurityProfileBehaviorCriteriaPtr and SecurityProfileBehaviorCriteriaPtrOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorCriteriaPtrInput` via:
//
//	        SecurityProfileBehaviorCriteriaArgs{...}
//
//	or:
//
//	        nil
type SecurityProfileBehaviorCriteriaPtrInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput
	ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Context) SecurityProfileBehaviorCriteriaPtrOutput
}

type securityProfileBehaviorCriteriaPtrType SecurityProfileBehaviorCriteriaArgs

func SecurityProfileBehaviorCriteriaPtr(v *SecurityProfileBehaviorCriteriaArgs) SecurityProfileBehaviorCriteriaPtrInput {
	return (*securityProfileBehaviorCriteriaPtrType)(v)
}

func (*securityProfileBehaviorCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (i *securityProfileBehaviorCriteriaPtrType) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return i.ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Background())
}

func (i *securityProfileBehaviorCriteriaPtrType) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorCriteriaPtrOutput)
}

// The criteria by which the behavior is determined to be normal.
type SecurityProfileBehaviorCriteriaOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaOutput() SecurityProfileBehaviorCriteriaOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return o.ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Background())
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileBehaviorCriteria) *SecurityProfileBehaviorCriteria {
		return &v
	}).(SecurityProfileBehaviorCriteriaPtrOutput)
}

// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
func (o SecurityProfileBehaviorCriteriaOutput) ComparisonOperator() SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileBehaviorCriteriaComparisonOperator {
		return v.ComparisonOperator
	}).(SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput)
}

// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaOutput) ConsecutiveDatapointsToAlarm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *int { return v.ConsecutiveDatapointsToAlarm }).(pulumi.IntPtrOutput)
}

// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaOutput) ConsecutiveDatapointsToClear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *int { return v.ConsecutiveDatapointsToClear }).(pulumi.IntPtrOutput)
}

// Use this to specify the time duration over which the behavior is evaluated.
func (o SecurityProfileBehaviorCriteriaOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

// The confidence level of the detection model.
func (o SecurityProfileBehaviorCriteriaOutput) MlDetectionConfig() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileMachineLearningDetectionConfig {
		return v.MlDetectionConfig
	}).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

// A statistical ranking (percentile)that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
func (o SecurityProfileBehaviorCriteriaOutput) StatisticalThreshold() SecurityProfileStatisticalThresholdPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileStatisticalThreshold {
		return v.StatisticalThreshold
	}).(SecurityProfileStatisticalThresholdPtrOutput)
}

// The value to be compared with the `metric` .
func (o SecurityProfileBehaviorCriteriaOutput) Value() SecurityProfileMetricValuePtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileMetricValue { return v.Value }).(SecurityProfileMetricValuePtrOutput)
}

type SecurityProfileBehaviorCriteriaPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) Elem() SecurityProfileBehaviorCriteriaOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) SecurityProfileBehaviorCriteria {
		if v != nil {
			return *v
		}
		var ret SecurityProfileBehaviorCriteria
		return ret
	}).(SecurityProfileBehaviorCriteriaOutput)
}

// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
func (o SecurityProfileBehaviorCriteriaPtrOutput) ComparisonOperator() SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileBehaviorCriteriaComparisonOperator {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput)
}

// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaPtrOutput) ConsecutiveDatapointsToAlarm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveDatapointsToAlarm
	}).(pulumi.IntPtrOutput)
}

// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaPtrOutput) ConsecutiveDatapointsToClear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveDatapointsToClear
	}).(pulumi.IntPtrOutput)
}

// Use this to specify the time duration over which the behavior is evaluated.
func (o SecurityProfileBehaviorCriteriaPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

// The confidence level of the detection model.
func (o SecurityProfileBehaviorCriteriaPtrOutput) MlDetectionConfig() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileMachineLearningDetectionConfig {
		if v == nil {
			return nil
		}
		return v.MlDetectionConfig
	}).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

// A statistical ranking (percentile)that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
func (o SecurityProfileBehaviorCriteriaPtrOutput) StatisticalThreshold() SecurityProfileStatisticalThresholdPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileStatisticalThreshold {
		if v == nil {
			return nil
		}
		return v.StatisticalThreshold
	}).(SecurityProfileStatisticalThresholdPtrOutput)
}

// The value to be compared with the `metric` .
func (o SecurityProfileBehaviorCriteriaPtrOutput) Value() SecurityProfileMetricValuePtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileMetricValue {
		if v == nil {
			return nil
		}
		return v.Value
	}).(SecurityProfileMetricValuePtrOutput)
}

// The configuration of an ML Detect Security Profile.
type SecurityProfileMachineLearningDetectionConfig struct {
	// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
	ConfidenceLevel *SecurityProfileMachineLearningDetectionConfigConfidenceLevel `pulumi:"confidenceLevel"`
}

// SecurityProfileMachineLearningDetectionConfigInput is an input type that accepts SecurityProfileMachineLearningDetectionConfigArgs and SecurityProfileMachineLearningDetectionConfigOutput values.
// You can construct a concrete instance of `SecurityProfileMachineLearningDetectionConfigInput` via:
//
//	SecurityProfileMachineLearningDetectionConfigArgs{...}
type SecurityProfileMachineLearningDetectionConfigInput interface {
	pulumi.Input

	ToSecurityProfileMachineLearningDetectionConfigOutput() SecurityProfileMachineLearningDetectionConfigOutput
	ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(context.Context) SecurityProfileMachineLearningDetectionConfigOutput
}

// The configuration of an ML Detect Security Profile.
type SecurityProfileMachineLearningDetectionConfigArgs struct {
	// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
	ConfidenceLevel SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrInput `pulumi:"confidenceLevel"`
}

func (SecurityProfileMachineLearningDetectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigOutput() SecurityProfileMachineLearningDetectionConfigOutput {
	return i.ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(context.Background())
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMachineLearningDetectionConfigOutput)
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return i.ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Background())
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMachineLearningDetectionConfigOutput).ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx)
}

// SecurityProfileMachineLearningDetectionConfigPtrInput is an input type that accepts SecurityProfileMachineLearningDetectionConfigArgs, SecurityProfileMachineLearningDetectionConfigPtr and SecurityProfileMachineLearningDetectionConfigPtrOutput values.
// You can construct a concrete instance of `SecurityProfileMachineLearningDetectionConfigPtrInput` via:
//
//	        SecurityProfileMachineLearningDetectionConfigArgs{...}
//
//	or:
//
//	        nil
type SecurityProfileMachineLearningDetectionConfigPtrInput interface {
	pulumi.Input

	ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput
	ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput
}

type securityProfileMachineLearningDetectionConfigPtrType SecurityProfileMachineLearningDetectionConfigArgs

func SecurityProfileMachineLearningDetectionConfigPtr(v *SecurityProfileMachineLearningDetectionConfigArgs) SecurityProfileMachineLearningDetectionConfigPtrInput {
	return (*securityProfileMachineLearningDetectionConfigPtrType)(v)
}

func (*securityProfileMachineLearningDetectionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (i *securityProfileMachineLearningDetectionConfigPtrType) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return i.ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Background())
}

func (i *securityProfileMachineLearningDetectionConfigPtrType) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

// The configuration of an ML Detect Security Profile.
type SecurityProfileMachineLearningDetectionConfigOutput struct{ *pulumi.OutputState }

func (SecurityProfileMachineLearningDetectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigOutput() SecurityProfileMachineLearningDetectionConfigOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Background())
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileMachineLearningDetectionConfig) *SecurityProfileMachineLearningDetectionConfig {
		return &v
	}).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
func (o SecurityProfileMachineLearningDetectionConfigOutput) ConfidenceLevel() SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput {
	return o.ApplyT(func(v SecurityProfileMachineLearningDetectionConfig) *SecurityProfileMachineLearningDetectionConfigConfidenceLevel {
		return v.ConfidenceLevel
	}).(SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput)
}

type SecurityProfileMachineLearningDetectionConfigPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileMachineLearningDetectionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) Elem() SecurityProfileMachineLearningDetectionConfigOutput {
	return o.ApplyT(func(v *SecurityProfileMachineLearningDetectionConfig) SecurityProfileMachineLearningDetectionConfig {
		if v != nil {
			return *v
		}
		var ret SecurityProfileMachineLearningDetectionConfig
		return ret
	}).(SecurityProfileMachineLearningDetectionConfigOutput)
}

// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) ConfidenceLevel() SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMachineLearningDetectionConfig) *SecurityProfileMachineLearningDetectionConfigConfidenceLevel {
		if v == nil {
			return nil
		}
		return v.ConfidenceLevel
	}).(SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput)
}

// The dimension of a metric.
type SecurityProfileMetricDimension struct {
	// A unique identifier for the dimension.
	DimensionName string `pulumi:"dimensionName"`
	// Defines how the dimensionValues of a dimension are interpreted.
	Operator *SecurityProfileMetricDimensionOperator `pulumi:"operator"`
}

// SecurityProfileMetricDimensionInput is an input type that accepts SecurityProfileMetricDimensionArgs and SecurityProfileMetricDimensionOutput values.
// You can construct a concrete instance of `SecurityProfileMetricDimensionInput` via:
//
//	SecurityProfileMetricDimensionArgs{...}
type SecurityProfileMetricDimensionInput interface {
	pulumi.Input

	ToSecurityProfileMetricDimensionOutput() SecurityProfileMetricDimensionOutput
	ToSecurityProfileMetricDimensionOutputWithContext(context.Context) SecurityProfileMetricDimensionOutput
}

// The dimension of a metric.
type SecurityProfileMetricDimensionArgs struct {
	// A unique identifier for the dimension.
	DimensionName pulumi.StringInput `pulumi:"dimensionName"`
	// Defines how the dimensionValues of a dimension are interpreted.
	Operator SecurityProfileMetricDimensionOperatorPtrInput `pulumi:"operator"`
}

func (SecurityProfileMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricDimension)(nil)).Elem()
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionOutput() SecurityProfileMetricDimensionOutput {
	return i.ToSecurityProfileMetricDimensionOutputWithContext(context.Background())
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricDimensionOutput)
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return i.ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Background())
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricDimensionOutput).ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx)
}

// SecurityProfileMetricDimensionPtrInput is an input type that accepts SecurityProfileMetricDimensionArgs, SecurityProfileMetricDimensionPtr and SecurityProfileMetricDimensionPtrOutput values.
// You can construct a concrete instance of `SecurityProfileMetricDimensionPtrInput` via:
//
//	        SecurityProfileMetricDimensionArgs{...}
//
//	or:
//
//	        nil
type SecurityProfileMetricDimensionPtrInput interface {
	pulumi.Input

	ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput
	ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Context) SecurityProfileMetricDimensionPtrOutput
}

type securityProfileMetricDimensionPtrType SecurityProfileMetricDimensionArgs

func SecurityProfileMetricDimensionPtr(v *SecurityProfileMetricDimensionArgs) SecurityProfileMetricDimensionPtrInput {
	return (*securityProfileMetricDimensionPtrType)(v)
}

func (*securityProfileMetricDimensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricDimension)(nil)).Elem()
}

func (i *securityProfileMetricDimensionPtrType) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return i.ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Background())
}

func (i *securityProfileMetricDimensionPtrType) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricDimensionPtrOutput)
}

// The dimension of a metric.
type SecurityProfileMetricDimensionOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricDimension)(nil)).Elem()
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionOutput() SecurityProfileMetricDimensionOutput {
	return o
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionOutput {
	return o
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return o.ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Background())
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileMetricDimension) *SecurityProfileMetricDimension {
		return &v
	}).(SecurityProfileMetricDimensionPtrOutput)
}

// A unique identifier for the dimension.
func (o SecurityProfileMetricDimensionOutput) DimensionName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileMetricDimension) string { return v.DimensionName }).(pulumi.StringOutput)
}

// Defines how the dimensionValues of a dimension are interpreted.
func (o SecurityProfileMetricDimensionOutput) Operator() SecurityProfileMetricDimensionOperatorPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricDimension) *SecurityProfileMetricDimensionOperator { return v.Operator }).(SecurityProfileMetricDimensionOperatorPtrOutput)
}

type SecurityProfileMetricDimensionPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricDimensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricDimension)(nil)).Elem()
}

func (o SecurityProfileMetricDimensionPtrOutput) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return o
}

func (o SecurityProfileMetricDimensionPtrOutput) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return o
}

func (o SecurityProfileMetricDimensionPtrOutput) Elem() SecurityProfileMetricDimensionOutput {
	return o.ApplyT(func(v *SecurityProfileMetricDimension) SecurityProfileMetricDimension {
		if v != nil {
			return *v
		}
		var ret SecurityProfileMetricDimension
		return ret
	}).(SecurityProfileMetricDimensionOutput)
}

// A unique identifier for the dimension.
func (o SecurityProfileMetricDimensionPtrOutput) DimensionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricDimension) *string {
		if v == nil {
			return nil
		}
		return &v.DimensionName
	}).(pulumi.StringPtrOutput)
}

// Defines how the dimensionValues of a dimension are interpreted.
func (o SecurityProfileMetricDimensionPtrOutput) Operator() SecurityProfileMetricDimensionOperatorPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricDimension) *SecurityProfileMetricDimensionOperator {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(SecurityProfileMetricDimensionOperatorPtrOutput)
}

// The metric you want to retain. Dimensions are optional.
type SecurityProfileMetricToRetain struct {
	// The value indicates exporting metrics related to the `MetricToRetain` when it's true.
	ExportMetric *bool `pulumi:"exportMetric"`
	// What is measured by the behavior.
	Metric string `pulumi:"metric"`
	// The dimension of the metric.
	MetricDimension *SecurityProfileMetricDimension `pulumi:"metricDimension"`
}

// SecurityProfileMetricToRetainInput is an input type that accepts SecurityProfileMetricToRetainArgs and SecurityProfileMetricToRetainOutput values.
// You can construct a concrete instance of `SecurityProfileMetricToRetainInput` via:
//
//	SecurityProfileMetricToRetainArgs{...}
type SecurityProfileMetricToRetainInput interface {
	pulumi.Input

	ToSecurityProfileMetricToRetainOutput() SecurityProfileMetricToRetainOutput
	ToSecurityProfileMetricToRetainOutputWithContext(context.Context) SecurityProfileMetricToRetainOutput
}

// The metric you want to retain. Dimensions are optional.
type SecurityProfileMetricToRetainArgs struct {
	// The value indicates exporting metrics related to the `MetricToRetain` when it's true.
	ExportMetric pulumi.BoolPtrInput `pulumi:"exportMetric"`
	// What is measured by the behavior.
	Metric pulumi.StringInput `pulumi:"metric"`
	// The dimension of the metric.
	MetricDimension SecurityProfileMetricDimensionPtrInput `pulumi:"metricDimension"`
}

func (SecurityProfileMetricToRetainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricToRetain)(nil)).Elem()
}

func (i SecurityProfileMetricToRetainArgs) ToSecurityProfileMetricToRetainOutput() SecurityProfileMetricToRetainOutput {
	return i.ToSecurityProfileMetricToRetainOutputWithContext(context.Background())
}

func (i SecurityProfileMetricToRetainArgs) ToSecurityProfileMetricToRetainOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricToRetainOutput)
}

// SecurityProfileMetricToRetainArrayInput is an input type that accepts SecurityProfileMetricToRetainArray and SecurityProfileMetricToRetainArrayOutput values.
// You can construct a concrete instance of `SecurityProfileMetricToRetainArrayInput` via:
//
//	SecurityProfileMetricToRetainArray{ SecurityProfileMetricToRetainArgs{...} }
type SecurityProfileMetricToRetainArrayInput interface {
	pulumi.Input

	ToSecurityProfileMetricToRetainArrayOutput() SecurityProfileMetricToRetainArrayOutput
	ToSecurityProfileMetricToRetainArrayOutputWithContext(context.Context) SecurityProfileMetricToRetainArrayOutput
}

type SecurityProfileMetricToRetainArray []SecurityProfileMetricToRetainInput

func (SecurityProfileMetricToRetainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileMetricToRetain)(nil)).Elem()
}

func (i SecurityProfileMetricToRetainArray) ToSecurityProfileMetricToRetainArrayOutput() SecurityProfileMetricToRetainArrayOutput {
	return i.ToSecurityProfileMetricToRetainArrayOutputWithContext(context.Background())
}

func (i SecurityProfileMetricToRetainArray) ToSecurityProfileMetricToRetainArrayOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricToRetainArrayOutput)
}

// The metric you want to retain. Dimensions are optional.
type SecurityProfileMetricToRetainOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricToRetainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricToRetain)(nil)).Elem()
}

func (o SecurityProfileMetricToRetainOutput) ToSecurityProfileMetricToRetainOutput() SecurityProfileMetricToRetainOutput {
	return o
}

func (o SecurityProfileMetricToRetainOutput) ToSecurityProfileMetricToRetainOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainOutput {
	return o
}

// The value indicates exporting metrics related to the `MetricToRetain` when it's true.
func (o SecurityProfileMetricToRetainOutput) ExportMetric() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricToRetain) *bool { return v.ExportMetric }).(pulumi.BoolPtrOutput)
}

// What is measured by the behavior.
func (o SecurityProfileMetricToRetainOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileMetricToRetain) string { return v.Metric }).(pulumi.StringOutput)
}

// The dimension of the metric.
func (o SecurityProfileMetricToRetainOutput) MetricDimension() SecurityProfileMetricDimensionPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricToRetain) *SecurityProfileMetricDimension { return v.MetricDimension }).(SecurityProfileMetricDimensionPtrOutput)
}

type SecurityProfileMetricToRetainArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricToRetainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileMetricToRetain)(nil)).Elem()
}

func (o SecurityProfileMetricToRetainArrayOutput) ToSecurityProfileMetricToRetainArrayOutput() SecurityProfileMetricToRetainArrayOutput {
	return o
}

func (o SecurityProfileMetricToRetainArrayOutput) ToSecurityProfileMetricToRetainArrayOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainArrayOutput {
	return o
}

func (o SecurityProfileMetricToRetainArrayOutput) Index(i pulumi.IntInput) SecurityProfileMetricToRetainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileMetricToRetain {
		return vs[0].([]SecurityProfileMetricToRetain)[vs[1].(int)]
	}).(SecurityProfileMetricToRetainOutput)
}

// The value to be compared with the metric.
type SecurityProfileMetricValue struct {
	// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
	Cidrs []string `pulumi:"cidrs"`
	// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
	Count *string `pulumi:"count"`
	// The numeral value of a metric.
	Number *float64 `pulumi:"number"`
	// The numeral values of a metric.
	Numbers []float64 `pulumi:"numbers"`
	// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
	Ports []int `pulumi:"ports"`
	// The string values of a metric.
	Strings []string `pulumi:"strings"`
}

// SecurityProfileMetricValueInput is an input type that accepts SecurityProfileMetricValueArgs and SecurityProfileMetricValueOutput values.
// You can construct a concrete instance of `SecurityProfileMetricValueInput` via:
//
//	SecurityProfileMetricValueArgs{...}
type SecurityProfileMetricValueInput interface {
	pulumi.Input

	ToSecurityProfileMetricValueOutput() SecurityProfileMetricValueOutput
	ToSecurityProfileMetricValueOutputWithContext(context.Context) SecurityProfileMetricValueOutput
}

// The value to be compared with the metric.
type SecurityProfileMetricValueArgs struct {
	// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
	Count pulumi.StringPtrInput `pulumi:"count"`
	// The numeral value of a metric.
	Number pulumi.Float64PtrInput `pulumi:"number"`
	// The numeral values of a metric.
	Numbers pulumi.Float64ArrayInput `pulumi:"numbers"`
	// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// The string values of a metric.
	Strings pulumi.StringArrayInput `pulumi:"strings"`
}

func (SecurityProfileMetricValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricValue)(nil)).Elem()
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValueOutput() SecurityProfileMetricValueOutput {
	return i.ToSecurityProfileMetricValueOutputWithContext(context.Background())
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValueOutputWithContext(ctx context.Context) SecurityProfileMetricValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricValueOutput)
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return i.ToSecurityProfileMetricValuePtrOutputWithContext(context.Background())
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricValueOutput).ToSecurityProfileMetricValuePtrOutputWithContext(ctx)
}

// SecurityProfileMetricValuePtrInput is an input type that accepts SecurityProfileMetricValueArgs, SecurityProfileMetricValuePtr and SecurityProfileMetricValuePtrOutput values.
// You can construct a concrete instance of `SecurityProfileMetricValuePtrInput` via:
//
//	        SecurityProfileMetricValueArgs{...}
//
//	or:
//
//	        nil
type SecurityProfileMetricValuePtrInput interface {
	pulumi.Input

	ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput
	ToSecurityProfileMetricValuePtrOutputWithContext(context.Context) SecurityProfileMetricValuePtrOutput
}

type securityProfileMetricValuePtrType SecurityProfileMetricValueArgs

func SecurityProfileMetricValuePtr(v *SecurityProfileMetricValueArgs) SecurityProfileMetricValuePtrInput {
	return (*securityProfileMetricValuePtrType)(v)
}

func (*securityProfileMetricValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricValue)(nil)).Elem()
}

func (i *securityProfileMetricValuePtrType) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return i.ToSecurityProfileMetricValuePtrOutputWithContext(context.Background())
}

func (i *securityProfileMetricValuePtrType) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricValuePtrOutput)
}

// The value to be compared with the metric.
type SecurityProfileMetricValueOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricValue)(nil)).Elem()
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValueOutput() SecurityProfileMetricValueOutput {
	return o
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValueOutputWithContext(ctx context.Context) SecurityProfileMetricValueOutput {
	return o
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return o.ToSecurityProfileMetricValuePtrOutputWithContext(context.Background())
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileMetricValue) *SecurityProfileMetricValue {
		return &v
	}).(SecurityProfileMetricValuePtrOutput)
}

// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValueOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
func (o SecurityProfileMetricValueOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) *string { return v.Count }).(pulumi.StringPtrOutput)
}

// The numeral value of a metric.
func (o SecurityProfileMetricValueOutput) Number() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) *float64 { return v.Number }).(pulumi.Float64PtrOutput)
}

// The numeral values of a metric.
func (o SecurityProfileMetricValueOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []float64 { return v.Numbers }).(pulumi.Float64ArrayOutput)
}

// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValueOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// The string values of a metric.
func (o SecurityProfileMetricValueOutput) Strings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []string { return v.Strings }).(pulumi.StringArrayOutput)
}

type SecurityProfileMetricValuePtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricValue)(nil)).Elem()
}

func (o SecurityProfileMetricValuePtrOutput) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return o
}

func (o SecurityProfileMetricValuePtrOutput) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return o
}

func (o SecurityProfileMetricValuePtrOutput) Elem() SecurityProfileMetricValueOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) SecurityProfileMetricValue {
		if v != nil {
			return *v
		}
		var ret SecurityProfileMetricValue
		return ret
	}).(SecurityProfileMetricValueOutput)
}

// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValuePtrOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []string {
		if v == nil {
			return nil
		}
		return v.Cidrs
	}).(pulumi.StringArrayOutput)
}

// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
func (o SecurityProfileMetricValuePtrOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) *string {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.StringPtrOutput)
}

// The numeral value of a metric.
func (o SecurityProfileMetricValuePtrOutput) Number() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) *float64 {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.Float64PtrOutput)
}

// The numeral values of a metric.
func (o SecurityProfileMetricValuePtrOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []float64 {
		if v == nil {
			return nil
		}
		return v.Numbers
	}).(pulumi.Float64ArrayOutput)
}

// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValuePtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// The string values of a metric.
func (o SecurityProfileMetricValuePtrOutput) Strings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []string {
		if v == nil {
			return nil
		}
		return v.Strings
	}).(pulumi.StringArrayOutput)
}

// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
type SecurityProfileStatisticalThreshold struct {
	// The percentile which resolves to a threshold value by which compliance with a behavior is determined
	Statistic *SecurityProfileStatisticalThresholdStatistic `pulumi:"statistic"`
}

// SecurityProfileStatisticalThresholdInput is an input type that accepts SecurityProfileStatisticalThresholdArgs and SecurityProfileStatisticalThresholdOutput values.
// You can construct a concrete instance of `SecurityProfileStatisticalThresholdInput` via:
//
//	SecurityProfileStatisticalThresholdArgs{...}
type SecurityProfileStatisticalThresholdInput interface {
	pulumi.Input

	ToSecurityProfileStatisticalThresholdOutput() SecurityProfileStatisticalThresholdOutput
	ToSecurityProfileStatisticalThresholdOutputWithContext(context.Context) SecurityProfileStatisticalThresholdOutput
}

// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
type SecurityProfileStatisticalThresholdArgs struct {
	// The percentile which resolves to a threshold value by which compliance with a behavior is determined
	Statistic SecurityProfileStatisticalThresholdStatisticPtrInput `pulumi:"statistic"`
}

func (SecurityProfileStatisticalThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdOutput() SecurityProfileStatisticalThresholdOutput {
	return i.ToSecurityProfileStatisticalThresholdOutputWithContext(context.Background())
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileStatisticalThresholdOutput)
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return i.ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Background())
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileStatisticalThresholdOutput).ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx)
}

// SecurityProfileStatisticalThresholdPtrInput is an input type that accepts SecurityProfileStatisticalThresholdArgs, SecurityProfileStatisticalThresholdPtr and SecurityProfileStatisticalThresholdPtrOutput values.
// You can construct a concrete instance of `SecurityProfileStatisticalThresholdPtrInput` via:
//
//	        SecurityProfileStatisticalThresholdArgs{...}
//
//	or:
//
//	        nil
type SecurityProfileStatisticalThresholdPtrInput interface {
	pulumi.Input

	ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput
	ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Context) SecurityProfileStatisticalThresholdPtrOutput
}

type securityProfileStatisticalThresholdPtrType SecurityProfileStatisticalThresholdArgs

func SecurityProfileStatisticalThresholdPtr(v *SecurityProfileStatisticalThresholdArgs) SecurityProfileStatisticalThresholdPtrInput {
	return (*securityProfileStatisticalThresholdPtrType)(v)
}

func (*securityProfileStatisticalThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (i *securityProfileStatisticalThresholdPtrType) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return i.ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Background())
}

func (i *securityProfileStatisticalThresholdPtrType) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileStatisticalThresholdPtrOutput)
}

// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
type SecurityProfileStatisticalThresholdOutput struct{ *pulumi.OutputState }

func (SecurityProfileStatisticalThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdOutput() SecurityProfileStatisticalThresholdOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return o.ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Background())
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileStatisticalThreshold) *SecurityProfileStatisticalThreshold {
		return &v
	}).(SecurityProfileStatisticalThresholdPtrOutput)
}

// The percentile which resolves to a threshold value by which compliance with a behavior is determined
func (o SecurityProfileStatisticalThresholdOutput) Statistic() SecurityProfileStatisticalThresholdStatisticPtrOutput {
	return o.ApplyT(func(v SecurityProfileStatisticalThreshold) *SecurityProfileStatisticalThresholdStatistic {
		return v.Statistic
	}).(SecurityProfileStatisticalThresholdStatisticPtrOutput)
}

type SecurityProfileStatisticalThresholdPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileStatisticalThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (o SecurityProfileStatisticalThresholdPtrOutput) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdPtrOutput) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdPtrOutput) Elem() SecurityProfileStatisticalThresholdOutput {
	return o.ApplyT(func(v *SecurityProfileStatisticalThreshold) SecurityProfileStatisticalThreshold {
		if v != nil {
			return *v
		}
		var ret SecurityProfileStatisticalThreshold
		return ret
	}).(SecurityProfileStatisticalThresholdOutput)
}

// The percentile which resolves to a threshold value by which compliance with a behavior is determined
func (o SecurityProfileStatisticalThresholdPtrOutput) Statistic() SecurityProfileStatisticalThresholdStatisticPtrOutput {
	return o.ApplyT(func(v *SecurityProfileStatisticalThreshold) *SecurityProfileStatisticalThresholdStatistic {
		if v == nil {
			return nil
		}
		return v.Statistic
	}).(SecurityProfileStatisticalThresholdStatisticPtrOutput)
}

// A key-value pair to associate with a resource.
type SecurityProfileTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type SoftwarePackageTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type SoftwarePackageVersionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type ThingAttributePayload struct {
	// A JSON string containing up to three key-value pair in JSON format. For example:
	//
	// `{\"attributes\":{\"string1\":\"string2\"}}`
	Attributes map[string]string `pulumi:"attributes"`
}

// ThingAttributePayloadInput is an input type that accepts ThingAttributePayloadArgs and ThingAttributePayloadOutput values.
// You can construct a concrete instance of `ThingAttributePayloadInput` via:
//
//	ThingAttributePayloadArgs{...}
type ThingAttributePayloadInput interface {
	pulumi.Input

	ToThingAttributePayloadOutput() ThingAttributePayloadOutput
	ToThingAttributePayloadOutputWithContext(context.Context) ThingAttributePayloadOutput
}

type ThingAttributePayloadArgs struct {
	// A JSON string containing up to three key-value pair in JSON format. For example:
	//
	// `{\"attributes\":{\"string1\":\"string2\"}}`
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
}

func (ThingAttributePayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingAttributePayload)(nil)).Elem()
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadOutput() ThingAttributePayloadOutput {
	return i.ToThingAttributePayloadOutputWithContext(context.Background())
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadOutputWithContext(ctx context.Context) ThingAttributePayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingAttributePayloadOutput)
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return i.ToThingAttributePayloadPtrOutputWithContext(context.Background())
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingAttributePayloadOutput).ToThingAttributePayloadPtrOutputWithContext(ctx)
}

// ThingAttributePayloadPtrInput is an input type that accepts ThingAttributePayloadArgs, ThingAttributePayloadPtr and ThingAttributePayloadPtrOutput values.
// You can construct a concrete instance of `ThingAttributePayloadPtrInput` via:
//
//	        ThingAttributePayloadArgs{...}
//
//	or:
//
//	        nil
type ThingAttributePayloadPtrInput interface {
	pulumi.Input

	ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput
	ToThingAttributePayloadPtrOutputWithContext(context.Context) ThingAttributePayloadPtrOutput
}

type thingAttributePayloadPtrType ThingAttributePayloadArgs

func ThingAttributePayloadPtr(v *ThingAttributePayloadArgs) ThingAttributePayloadPtrInput {
	return (*thingAttributePayloadPtrType)(v)
}

func (*thingAttributePayloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingAttributePayload)(nil)).Elem()
}

func (i *thingAttributePayloadPtrType) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return i.ToThingAttributePayloadPtrOutputWithContext(context.Background())
}

func (i *thingAttributePayloadPtrType) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingAttributePayloadPtrOutput)
}

type ThingAttributePayloadOutput struct{ *pulumi.OutputState }

func (ThingAttributePayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingAttributePayload)(nil)).Elem()
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadOutput() ThingAttributePayloadOutput {
	return o
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadOutputWithContext(ctx context.Context) ThingAttributePayloadOutput {
	return o
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return o.ToThingAttributePayloadPtrOutputWithContext(context.Background())
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThingAttributePayload) *ThingAttributePayload {
		return &v
	}).(ThingAttributePayloadPtrOutput)
}

// A JSON string containing up to three key-value pair in JSON format. For example:
//
// `{\"attributes\":{\"string1\":\"string2\"}}`
func (o ThingAttributePayloadOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ThingAttributePayload) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

type ThingAttributePayloadPtrOutput struct{ *pulumi.OutputState }

func (ThingAttributePayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingAttributePayload)(nil)).Elem()
}

func (o ThingAttributePayloadPtrOutput) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return o
}

func (o ThingAttributePayloadPtrOutput) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return o
}

func (o ThingAttributePayloadPtrOutput) Elem() ThingAttributePayloadOutput {
	return o.ApplyT(func(v *ThingAttributePayload) ThingAttributePayload {
		if v != nil {
			return *v
		}
		var ret ThingAttributePayload
		return ret
	}).(ThingAttributePayloadOutput)
}

// A JSON string containing up to three key-value pair in JSON format. For example:
//
// `{\"attributes\":{\"string1\":\"string2\"}}`
func (o ThingAttributePayloadPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ThingAttributePayload) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

type ThingGroupAttributePayload struct {
	// A JSON string containing up to three key-value pair in JSON format. For example:
	//
	// `{\"attributes\":{\"string1\":\"string2\"}}`
	Attributes map[string]string `pulumi:"attributes"`
}

// ThingGroupAttributePayloadInput is an input type that accepts ThingGroupAttributePayloadArgs and ThingGroupAttributePayloadOutput values.
// You can construct a concrete instance of `ThingGroupAttributePayloadInput` via:
//
//	ThingGroupAttributePayloadArgs{...}
type ThingGroupAttributePayloadInput interface {
	pulumi.Input

	ToThingGroupAttributePayloadOutput() ThingGroupAttributePayloadOutput
	ToThingGroupAttributePayloadOutputWithContext(context.Context) ThingGroupAttributePayloadOutput
}

type ThingGroupAttributePayloadArgs struct {
	// A JSON string containing up to three key-value pair in JSON format. For example:
	//
	// `{\"attributes\":{\"string1\":\"string2\"}}`
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
}

func (ThingGroupAttributePayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingGroupAttributePayload)(nil)).Elem()
}

func (i ThingGroupAttributePayloadArgs) ToThingGroupAttributePayloadOutput() ThingGroupAttributePayloadOutput {
	return i.ToThingGroupAttributePayloadOutputWithContext(context.Background())
}

func (i ThingGroupAttributePayloadArgs) ToThingGroupAttributePayloadOutputWithContext(ctx context.Context) ThingGroupAttributePayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupAttributePayloadOutput)
}

func (i ThingGroupAttributePayloadArgs) ToThingGroupAttributePayloadPtrOutput() ThingGroupAttributePayloadPtrOutput {
	return i.ToThingGroupAttributePayloadPtrOutputWithContext(context.Background())
}

func (i ThingGroupAttributePayloadArgs) ToThingGroupAttributePayloadPtrOutputWithContext(ctx context.Context) ThingGroupAttributePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupAttributePayloadOutput).ToThingGroupAttributePayloadPtrOutputWithContext(ctx)
}

// ThingGroupAttributePayloadPtrInput is an input type that accepts ThingGroupAttributePayloadArgs, ThingGroupAttributePayloadPtr and ThingGroupAttributePayloadPtrOutput values.
// You can construct a concrete instance of `ThingGroupAttributePayloadPtrInput` via:
//
//	        ThingGroupAttributePayloadArgs{...}
//
//	or:
//
//	        nil
type ThingGroupAttributePayloadPtrInput interface {
	pulumi.Input

	ToThingGroupAttributePayloadPtrOutput() ThingGroupAttributePayloadPtrOutput
	ToThingGroupAttributePayloadPtrOutputWithContext(context.Context) ThingGroupAttributePayloadPtrOutput
}

type thingGroupAttributePayloadPtrType ThingGroupAttributePayloadArgs

func ThingGroupAttributePayloadPtr(v *ThingGroupAttributePayloadArgs) ThingGroupAttributePayloadPtrInput {
	return (*thingGroupAttributePayloadPtrType)(v)
}

func (*thingGroupAttributePayloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingGroupAttributePayload)(nil)).Elem()
}

func (i *thingGroupAttributePayloadPtrType) ToThingGroupAttributePayloadPtrOutput() ThingGroupAttributePayloadPtrOutput {
	return i.ToThingGroupAttributePayloadPtrOutputWithContext(context.Background())
}

func (i *thingGroupAttributePayloadPtrType) ToThingGroupAttributePayloadPtrOutputWithContext(ctx context.Context) ThingGroupAttributePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupAttributePayloadPtrOutput)
}

type ThingGroupAttributePayloadOutput struct{ *pulumi.OutputState }

func (ThingGroupAttributePayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingGroupAttributePayload)(nil)).Elem()
}

func (o ThingGroupAttributePayloadOutput) ToThingGroupAttributePayloadOutput() ThingGroupAttributePayloadOutput {
	return o
}

func (o ThingGroupAttributePayloadOutput) ToThingGroupAttributePayloadOutputWithContext(ctx context.Context) ThingGroupAttributePayloadOutput {
	return o
}

func (o ThingGroupAttributePayloadOutput) ToThingGroupAttributePayloadPtrOutput() ThingGroupAttributePayloadPtrOutput {
	return o.ToThingGroupAttributePayloadPtrOutputWithContext(context.Background())
}

func (o ThingGroupAttributePayloadOutput) ToThingGroupAttributePayloadPtrOutputWithContext(ctx context.Context) ThingGroupAttributePayloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThingGroupAttributePayload) *ThingGroupAttributePayload {
		return &v
	}).(ThingGroupAttributePayloadPtrOutput)
}

// A JSON string containing up to three key-value pair in JSON format. For example:
//
// `{\"attributes\":{\"string1\":\"string2\"}}`
func (o ThingGroupAttributePayloadOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ThingGroupAttributePayload) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

type ThingGroupAttributePayloadPtrOutput struct{ *pulumi.OutputState }

func (ThingGroupAttributePayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingGroupAttributePayload)(nil)).Elem()
}

func (o ThingGroupAttributePayloadPtrOutput) ToThingGroupAttributePayloadPtrOutput() ThingGroupAttributePayloadPtrOutput {
	return o
}

func (o ThingGroupAttributePayloadPtrOutput) ToThingGroupAttributePayloadPtrOutputWithContext(ctx context.Context) ThingGroupAttributePayloadPtrOutput {
	return o
}

func (o ThingGroupAttributePayloadPtrOutput) Elem() ThingGroupAttributePayloadOutput {
	return o.ApplyT(func(v *ThingGroupAttributePayload) ThingGroupAttributePayload {
		if v != nil {
			return *v
		}
		var ret ThingGroupAttributePayload
		return ret
	}).(ThingGroupAttributePayloadOutput)
}

// A JSON string containing up to three key-value pair in JSON format. For example:
//
// `{\"attributes\":{\"string1\":\"string2\"}}`
func (o ThingGroupAttributePayloadPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ThingGroupAttributePayload) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

// Thing group properties.
type ThingGroupPropertiesProperties struct {
	// The thing group attributes in JSON format.
	AttributePayload *ThingGroupAttributePayload `pulumi:"attributePayload"`
	// The thing group description.
	ThingGroupDescription *string `pulumi:"thingGroupDescription"`
}

// ThingGroupPropertiesPropertiesInput is an input type that accepts ThingGroupPropertiesPropertiesArgs and ThingGroupPropertiesPropertiesOutput values.
// You can construct a concrete instance of `ThingGroupPropertiesPropertiesInput` via:
//
//	ThingGroupPropertiesPropertiesArgs{...}
type ThingGroupPropertiesPropertiesInput interface {
	pulumi.Input

	ToThingGroupPropertiesPropertiesOutput() ThingGroupPropertiesPropertiesOutput
	ToThingGroupPropertiesPropertiesOutputWithContext(context.Context) ThingGroupPropertiesPropertiesOutput
}

// Thing group properties.
type ThingGroupPropertiesPropertiesArgs struct {
	// The thing group attributes in JSON format.
	AttributePayload ThingGroupAttributePayloadPtrInput `pulumi:"attributePayload"`
	// The thing group description.
	ThingGroupDescription pulumi.StringPtrInput `pulumi:"thingGroupDescription"`
}

func (ThingGroupPropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingGroupPropertiesProperties)(nil)).Elem()
}

func (i ThingGroupPropertiesPropertiesArgs) ToThingGroupPropertiesPropertiesOutput() ThingGroupPropertiesPropertiesOutput {
	return i.ToThingGroupPropertiesPropertiesOutputWithContext(context.Background())
}

func (i ThingGroupPropertiesPropertiesArgs) ToThingGroupPropertiesPropertiesOutputWithContext(ctx context.Context) ThingGroupPropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupPropertiesPropertiesOutput)
}

func (i ThingGroupPropertiesPropertiesArgs) ToThingGroupPropertiesPropertiesPtrOutput() ThingGroupPropertiesPropertiesPtrOutput {
	return i.ToThingGroupPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i ThingGroupPropertiesPropertiesArgs) ToThingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingGroupPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupPropertiesPropertiesOutput).ToThingGroupPropertiesPropertiesPtrOutputWithContext(ctx)
}

// ThingGroupPropertiesPropertiesPtrInput is an input type that accepts ThingGroupPropertiesPropertiesArgs, ThingGroupPropertiesPropertiesPtr and ThingGroupPropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `ThingGroupPropertiesPropertiesPtrInput` via:
//
//	        ThingGroupPropertiesPropertiesArgs{...}
//
//	or:
//
//	        nil
type ThingGroupPropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToThingGroupPropertiesPropertiesPtrOutput() ThingGroupPropertiesPropertiesPtrOutput
	ToThingGroupPropertiesPropertiesPtrOutputWithContext(context.Context) ThingGroupPropertiesPropertiesPtrOutput
}

type thingGroupPropertiesPropertiesPtrType ThingGroupPropertiesPropertiesArgs

func ThingGroupPropertiesPropertiesPtr(v *ThingGroupPropertiesPropertiesArgs) ThingGroupPropertiesPropertiesPtrInput {
	return (*thingGroupPropertiesPropertiesPtrType)(v)
}

func (*thingGroupPropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingGroupPropertiesProperties)(nil)).Elem()
}

func (i *thingGroupPropertiesPropertiesPtrType) ToThingGroupPropertiesPropertiesPtrOutput() ThingGroupPropertiesPropertiesPtrOutput {
	return i.ToThingGroupPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *thingGroupPropertiesPropertiesPtrType) ToThingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingGroupPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingGroupPropertiesPropertiesPtrOutput)
}

// Thing group properties.
type ThingGroupPropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (ThingGroupPropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingGroupPropertiesProperties)(nil)).Elem()
}

func (o ThingGroupPropertiesPropertiesOutput) ToThingGroupPropertiesPropertiesOutput() ThingGroupPropertiesPropertiesOutput {
	return o
}

func (o ThingGroupPropertiesPropertiesOutput) ToThingGroupPropertiesPropertiesOutputWithContext(ctx context.Context) ThingGroupPropertiesPropertiesOutput {
	return o
}

func (o ThingGroupPropertiesPropertiesOutput) ToThingGroupPropertiesPropertiesPtrOutput() ThingGroupPropertiesPropertiesPtrOutput {
	return o.ToThingGroupPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o ThingGroupPropertiesPropertiesOutput) ToThingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingGroupPropertiesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThingGroupPropertiesProperties) *ThingGroupPropertiesProperties {
		return &v
	}).(ThingGroupPropertiesPropertiesPtrOutput)
}

// The thing group attributes in JSON format.
func (o ThingGroupPropertiesPropertiesOutput) AttributePayload() ThingGroupAttributePayloadPtrOutput {
	return o.ApplyT(func(v ThingGroupPropertiesProperties) *ThingGroupAttributePayload { return v.AttributePayload }).(ThingGroupAttributePayloadPtrOutput)
}

// The thing group description.
func (o ThingGroupPropertiesPropertiesOutput) ThingGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThingGroupPropertiesProperties) *string { return v.ThingGroupDescription }).(pulumi.StringPtrOutput)
}

type ThingGroupPropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ThingGroupPropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingGroupPropertiesProperties)(nil)).Elem()
}

func (o ThingGroupPropertiesPropertiesPtrOutput) ToThingGroupPropertiesPropertiesPtrOutput() ThingGroupPropertiesPropertiesPtrOutput {
	return o
}

func (o ThingGroupPropertiesPropertiesPtrOutput) ToThingGroupPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingGroupPropertiesPropertiesPtrOutput {
	return o
}

func (o ThingGroupPropertiesPropertiesPtrOutput) Elem() ThingGroupPropertiesPropertiesOutput {
	return o.ApplyT(func(v *ThingGroupPropertiesProperties) ThingGroupPropertiesProperties {
		if v != nil {
			return *v
		}
		var ret ThingGroupPropertiesProperties
		return ret
	}).(ThingGroupPropertiesPropertiesOutput)
}

// The thing group attributes in JSON format.
func (o ThingGroupPropertiesPropertiesPtrOutput) AttributePayload() ThingGroupAttributePayloadPtrOutput {
	return o.ApplyT(func(v *ThingGroupPropertiesProperties) *ThingGroupAttributePayload {
		if v == nil {
			return nil
		}
		return v.AttributePayload
	}).(ThingGroupAttributePayloadPtrOutput)
}

// The thing group description.
func (o ThingGroupPropertiesPropertiesPtrOutput) ThingGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingGroupPropertiesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ThingGroupDescription
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type ThingGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type ThingTypePropagatingAttribute struct {
	// The attribute associated with the connection details.
	ConnectionAttribute *ThingTypePropagatingAttributeConnectionAttribute `pulumi:"connectionAttribute"`
	// The thing attribute that is propagating for MQTT 5 message enrichment.
	ThingAttribute *string `pulumi:"thingAttribute"`
	// The key of the MQTT 5 user property, which is a key-value pair.
	UserPropertyKey string `pulumi:"userPropertyKey"`
}

// ThingTypePropagatingAttributeInput is an input type that accepts ThingTypePropagatingAttributeArgs and ThingTypePropagatingAttributeOutput values.
// You can construct a concrete instance of `ThingTypePropagatingAttributeInput` via:
//
//	ThingTypePropagatingAttributeArgs{...}
type ThingTypePropagatingAttributeInput interface {
	pulumi.Input

	ToThingTypePropagatingAttributeOutput() ThingTypePropagatingAttributeOutput
	ToThingTypePropagatingAttributeOutputWithContext(context.Context) ThingTypePropagatingAttributeOutput
}

type ThingTypePropagatingAttributeArgs struct {
	// The attribute associated with the connection details.
	ConnectionAttribute ThingTypePropagatingAttributeConnectionAttributePtrInput `pulumi:"connectionAttribute"`
	// The thing attribute that is propagating for MQTT 5 message enrichment.
	ThingAttribute pulumi.StringPtrInput `pulumi:"thingAttribute"`
	// The key of the MQTT 5 user property, which is a key-value pair.
	UserPropertyKey pulumi.StringInput `pulumi:"userPropertyKey"`
}

func (ThingTypePropagatingAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypePropagatingAttribute)(nil)).Elem()
}

func (i ThingTypePropagatingAttributeArgs) ToThingTypePropagatingAttributeOutput() ThingTypePropagatingAttributeOutput {
	return i.ToThingTypePropagatingAttributeOutputWithContext(context.Background())
}

func (i ThingTypePropagatingAttributeArgs) ToThingTypePropagatingAttributeOutputWithContext(ctx context.Context) ThingTypePropagatingAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropagatingAttributeOutput)
}

// ThingTypePropagatingAttributeArrayInput is an input type that accepts ThingTypePropagatingAttributeArray and ThingTypePropagatingAttributeArrayOutput values.
// You can construct a concrete instance of `ThingTypePropagatingAttributeArrayInput` via:
//
//	ThingTypePropagatingAttributeArray{ ThingTypePropagatingAttributeArgs{...} }
type ThingTypePropagatingAttributeArrayInput interface {
	pulumi.Input

	ToThingTypePropagatingAttributeArrayOutput() ThingTypePropagatingAttributeArrayOutput
	ToThingTypePropagatingAttributeArrayOutputWithContext(context.Context) ThingTypePropagatingAttributeArrayOutput
}

type ThingTypePropagatingAttributeArray []ThingTypePropagatingAttributeInput

func (ThingTypePropagatingAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThingTypePropagatingAttribute)(nil)).Elem()
}

func (i ThingTypePropagatingAttributeArray) ToThingTypePropagatingAttributeArrayOutput() ThingTypePropagatingAttributeArrayOutput {
	return i.ToThingTypePropagatingAttributeArrayOutputWithContext(context.Background())
}

func (i ThingTypePropagatingAttributeArray) ToThingTypePropagatingAttributeArrayOutputWithContext(ctx context.Context) ThingTypePropagatingAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropagatingAttributeArrayOutput)
}

type ThingTypePropagatingAttributeOutput struct{ *pulumi.OutputState }

func (ThingTypePropagatingAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypePropagatingAttribute)(nil)).Elem()
}

func (o ThingTypePropagatingAttributeOutput) ToThingTypePropagatingAttributeOutput() ThingTypePropagatingAttributeOutput {
	return o
}

func (o ThingTypePropagatingAttributeOutput) ToThingTypePropagatingAttributeOutputWithContext(ctx context.Context) ThingTypePropagatingAttributeOutput {
	return o
}

// The attribute associated with the connection details.
func (o ThingTypePropagatingAttributeOutput) ConnectionAttribute() ThingTypePropagatingAttributeConnectionAttributePtrOutput {
	return o.ApplyT(func(v ThingTypePropagatingAttribute) *ThingTypePropagatingAttributeConnectionAttribute {
		return v.ConnectionAttribute
	}).(ThingTypePropagatingAttributeConnectionAttributePtrOutput)
}

// The thing attribute that is propagating for MQTT 5 message enrichment.
func (o ThingTypePropagatingAttributeOutput) ThingAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThingTypePropagatingAttribute) *string { return v.ThingAttribute }).(pulumi.StringPtrOutput)
}

// The key of the MQTT 5 user property, which is a key-value pair.
func (o ThingTypePropagatingAttributeOutput) UserPropertyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ThingTypePropagatingAttribute) string { return v.UserPropertyKey }).(pulumi.StringOutput)
}

type ThingTypePropagatingAttributeArrayOutput struct{ *pulumi.OutputState }

func (ThingTypePropagatingAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThingTypePropagatingAttribute)(nil)).Elem()
}

func (o ThingTypePropagatingAttributeArrayOutput) ToThingTypePropagatingAttributeArrayOutput() ThingTypePropagatingAttributeArrayOutput {
	return o
}

func (o ThingTypePropagatingAttributeArrayOutput) ToThingTypePropagatingAttributeArrayOutputWithContext(ctx context.Context) ThingTypePropagatingAttributeArrayOutput {
	return o
}

func (o ThingTypePropagatingAttributeArrayOutput) Index(i pulumi.IntInput) ThingTypePropagatingAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThingTypePropagatingAttribute {
		return vs[0].([]ThingTypePropagatingAttribute)[vs[1].(int)]
	}).(ThingTypePropagatingAttributeOutput)
}

// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
type ThingTypePropertiesProperties struct {
	// The configuration to add user-defined properties to enrich MQTT 5 messages.
	Mqtt5Configuration *ThingTypePropertiesPropertiesMqtt5ConfigurationProperties `pulumi:"mqtt5Configuration"`
	// A list of searchable thing attribute names.
	SearchableAttributes []string `pulumi:"searchableAttributes"`
	// The description of the thing type.
	ThingTypeDescription *string `pulumi:"thingTypeDescription"`
}

// ThingTypePropertiesPropertiesInput is an input type that accepts ThingTypePropertiesPropertiesArgs and ThingTypePropertiesPropertiesOutput values.
// You can construct a concrete instance of `ThingTypePropertiesPropertiesInput` via:
//
//	ThingTypePropertiesPropertiesArgs{...}
type ThingTypePropertiesPropertiesInput interface {
	pulumi.Input

	ToThingTypePropertiesPropertiesOutput() ThingTypePropertiesPropertiesOutput
	ToThingTypePropertiesPropertiesOutputWithContext(context.Context) ThingTypePropertiesPropertiesOutput
}

// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
type ThingTypePropertiesPropertiesArgs struct {
	// The configuration to add user-defined properties to enrich MQTT 5 messages.
	Mqtt5Configuration ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrInput `pulumi:"mqtt5Configuration"`
	// A list of searchable thing attribute names.
	SearchableAttributes pulumi.StringArrayInput `pulumi:"searchableAttributes"`
	// The description of the thing type.
	ThingTypeDescription pulumi.StringPtrInput `pulumi:"thingTypeDescription"`
}

func (ThingTypePropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypePropertiesProperties)(nil)).Elem()
}

func (i ThingTypePropertiesPropertiesArgs) ToThingTypePropertiesPropertiesOutput() ThingTypePropertiesPropertiesOutput {
	return i.ToThingTypePropertiesPropertiesOutputWithContext(context.Background())
}

func (i ThingTypePropertiesPropertiesArgs) ToThingTypePropertiesPropertiesOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPropertiesOutput)
}

func (i ThingTypePropertiesPropertiesArgs) ToThingTypePropertiesPropertiesPtrOutput() ThingTypePropertiesPropertiesPtrOutput {
	return i.ToThingTypePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i ThingTypePropertiesPropertiesArgs) ToThingTypePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPropertiesOutput).ToThingTypePropertiesPropertiesPtrOutputWithContext(ctx)
}

// ThingTypePropertiesPropertiesPtrInput is an input type that accepts ThingTypePropertiesPropertiesArgs, ThingTypePropertiesPropertiesPtr and ThingTypePropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `ThingTypePropertiesPropertiesPtrInput` via:
//
//	        ThingTypePropertiesPropertiesArgs{...}
//
//	or:
//
//	        nil
type ThingTypePropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToThingTypePropertiesPropertiesPtrOutput() ThingTypePropertiesPropertiesPtrOutput
	ToThingTypePropertiesPropertiesPtrOutputWithContext(context.Context) ThingTypePropertiesPropertiesPtrOutput
}

type thingTypePropertiesPropertiesPtrType ThingTypePropertiesPropertiesArgs

func ThingTypePropertiesPropertiesPtr(v *ThingTypePropertiesPropertiesArgs) ThingTypePropertiesPropertiesPtrInput {
	return (*thingTypePropertiesPropertiesPtrType)(v)
}

func (*thingTypePropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingTypePropertiesProperties)(nil)).Elem()
}

func (i *thingTypePropertiesPropertiesPtrType) ToThingTypePropertiesPropertiesPtrOutput() ThingTypePropertiesPropertiesPtrOutput {
	return i.ToThingTypePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *thingTypePropertiesPropertiesPtrType) ToThingTypePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPropertiesPtrOutput)
}

// The thing type properties for the thing type to create. It contains information about the new thing type including a description, a list of searchable thing attribute names, and a list of propagating attributes. After a thing type is created, you can only update `Mqtt5Configuration` .
type ThingTypePropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (ThingTypePropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypePropertiesProperties)(nil)).Elem()
}

func (o ThingTypePropertiesPropertiesOutput) ToThingTypePropertiesPropertiesOutput() ThingTypePropertiesPropertiesOutput {
	return o
}

func (o ThingTypePropertiesPropertiesOutput) ToThingTypePropertiesPropertiesOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesOutput {
	return o
}

func (o ThingTypePropertiesPropertiesOutput) ToThingTypePropertiesPropertiesPtrOutput() ThingTypePropertiesPropertiesPtrOutput {
	return o.ToThingTypePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o ThingTypePropertiesPropertiesOutput) ToThingTypePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThingTypePropertiesProperties) *ThingTypePropertiesProperties {
		return &v
	}).(ThingTypePropertiesPropertiesPtrOutput)
}

// The configuration to add user-defined properties to enrich MQTT 5 messages.
func (o ThingTypePropertiesPropertiesOutput) Mqtt5Configuration() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v ThingTypePropertiesProperties) *ThingTypePropertiesPropertiesMqtt5ConfigurationProperties {
		return v.Mqtt5Configuration
	}).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput)
}

// A list of searchable thing attribute names.
func (o ThingTypePropertiesPropertiesOutput) SearchableAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThingTypePropertiesProperties) []string { return v.SearchableAttributes }).(pulumi.StringArrayOutput)
}

// The description of the thing type.
func (o ThingTypePropertiesPropertiesOutput) ThingTypeDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThingTypePropertiesProperties) *string { return v.ThingTypeDescription }).(pulumi.StringPtrOutput)
}

type ThingTypePropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ThingTypePropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingTypePropertiesProperties)(nil)).Elem()
}

func (o ThingTypePropertiesPropertiesPtrOutput) ToThingTypePropertiesPropertiesPtrOutput() ThingTypePropertiesPropertiesPtrOutput {
	return o
}

func (o ThingTypePropertiesPropertiesPtrOutput) ToThingTypePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesPtrOutput {
	return o
}

func (o ThingTypePropertiesPropertiesPtrOutput) Elem() ThingTypePropertiesPropertiesOutput {
	return o.ApplyT(func(v *ThingTypePropertiesProperties) ThingTypePropertiesProperties {
		if v != nil {
			return *v
		}
		var ret ThingTypePropertiesProperties
		return ret
	}).(ThingTypePropertiesPropertiesOutput)
}

// The configuration to add user-defined properties to enrich MQTT 5 messages.
func (o ThingTypePropertiesPropertiesPtrOutput) Mqtt5Configuration() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *ThingTypePropertiesProperties) *ThingTypePropertiesPropertiesMqtt5ConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.Mqtt5Configuration
	}).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput)
}

// A list of searchable thing attribute names.
func (o ThingTypePropertiesPropertiesPtrOutput) SearchableAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThingTypePropertiesProperties) []string {
		if v == nil {
			return nil
		}
		return v.SearchableAttributes
	}).(pulumi.StringArrayOutput)
}

// The description of the thing type.
func (o ThingTypePropertiesPropertiesPtrOutput) ThingTypeDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingTypePropertiesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ThingTypeDescription
	}).(pulumi.StringPtrOutput)
}

// The configuration to add user-defined properties to enrich MQTT 5 messages.
type ThingTypePropertiesPropertiesMqtt5ConfigurationProperties struct {
	PropagatingAttributes []ThingTypePropagatingAttribute `pulumi:"propagatingAttributes"`
}

// ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesInput is an input type that accepts ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs and ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput values.
// You can construct a concrete instance of `ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesInput` via:
//
//	ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs{...}
type ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesInput interface {
	pulumi.Input

	ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput
	ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutputWithContext(context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput
}

// The configuration to add user-defined properties to enrich MQTT 5 messages.
type ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs struct {
	PropagatingAttributes ThingTypePropagatingAttributeArrayInput `pulumi:"propagatingAttributes"`
}

func (ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypePropertiesPropertiesMqtt5ConfigurationProperties)(nil)).Elem()
}

func (i ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput {
	return i.ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutputWithContext(context.Background())
}

func (i ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput)
}

func (i ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return i.ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput).ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(ctx)
}

// ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrInput is an input type that accepts ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs, ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtr and ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrInput` via:
//
//	        ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput
	ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput
}

type thingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrType ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs

func ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtr(v *ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrInput {
	return (*thingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrType)(v)
}

func (*thingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingTypePropertiesPropertiesMqtt5ConfigurationProperties)(nil)).Elem()
}

func (i *thingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrType) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return i.ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *thingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrType) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput)
}

// The configuration to add user-defined properties to enrich MQTT 5 messages.
type ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypePropertiesPropertiesMqtt5ConfigurationProperties)(nil)).Elem()
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput {
	return o
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput {
	return o
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return o.ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThingTypePropertiesPropertiesMqtt5ConfigurationProperties) *ThingTypePropertiesPropertiesMqtt5ConfigurationProperties {
		return &v
	}).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput)
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput) PropagatingAttributes() ThingTypePropagatingAttributeArrayOutput {
	return o.ApplyT(func(v ThingTypePropertiesPropertiesMqtt5ConfigurationProperties) []ThingTypePropagatingAttribute {
		return v.PropagatingAttributes
	}).(ThingTypePropagatingAttributeArrayOutput)
}

type ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingTypePropertiesPropertiesMqtt5ConfigurationProperties)(nil)).Elem()
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return o
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput) ToThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput {
	return o
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput) Elem() ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput {
	return o.ApplyT(func(v *ThingTypePropertiesPropertiesMqtt5ConfigurationProperties) ThingTypePropertiesPropertiesMqtt5ConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret ThingTypePropertiesPropertiesMqtt5ConfigurationProperties
		return ret
	}).(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput)
}

func (o ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput) PropagatingAttributes() ThingTypePropagatingAttributeArrayOutput {
	return o.ApplyT(func(v *ThingTypePropertiesPropertiesMqtt5ConfigurationProperties) []ThingTypePropagatingAttribute {
		if v == nil {
			return nil
		}
		return v.PropagatingAttributes
	}).(ThingTypePropagatingAttributeArrayOutput)
}

// A key-value pair to associate with a resource.
type ThingTypeTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Specifies the amount of time each device has to finish its execution of the job.
type TimeoutConfigProperties struct {
	// Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal `TIMED_OUT` status.
	InProgressTimeoutInMinutes int `pulumi:"inProgressTimeoutInMinutes"`
}

// TimeoutConfigPropertiesInput is an input type that accepts TimeoutConfigPropertiesArgs and TimeoutConfigPropertiesOutput values.
// You can construct a concrete instance of `TimeoutConfigPropertiesInput` via:
//
//	TimeoutConfigPropertiesArgs{...}
type TimeoutConfigPropertiesInput interface {
	pulumi.Input

	ToTimeoutConfigPropertiesOutput() TimeoutConfigPropertiesOutput
	ToTimeoutConfigPropertiesOutputWithContext(context.Context) TimeoutConfigPropertiesOutput
}

// Specifies the amount of time each device has to finish its execution of the job.
type TimeoutConfigPropertiesArgs struct {
	// Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal `TIMED_OUT` status.
	InProgressTimeoutInMinutes pulumi.IntInput `pulumi:"inProgressTimeoutInMinutes"`
}

func (TimeoutConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeoutConfigProperties)(nil)).Elem()
}

func (i TimeoutConfigPropertiesArgs) ToTimeoutConfigPropertiesOutput() TimeoutConfigPropertiesOutput {
	return i.ToTimeoutConfigPropertiesOutputWithContext(context.Background())
}

func (i TimeoutConfigPropertiesArgs) ToTimeoutConfigPropertiesOutputWithContext(ctx context.Context) TimeoutConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutConfigPropertiesOutput)
}

func (i TimeoutConfigPropertiesArgs) ToTimeoutConfigPropertiesPtrOutput() TimeoutConfigPropertiesPtrOutput {
	return i.ToTimeoutConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i TimeoutConfigPropertiesArgs) ToTimeoutConfigPropertiesPtrOutputWithContext(ctx context.Context) TimeoutConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutConfigPropertiesOutput).ToTimeoutConfigPropertiesPtrOutputWithContext(ctx)
}

// TimeoutConfigPropertiesPtrInput is an input type that accepts TimeoutConfigPropertiesArgs, TimeoutConfigPropertiesPtr and TimeoutConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `TimeoutConfigPropertiesPtrInput` via:
//
//	        TimeoutConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type TimeoutConfigPropertiesPtrInput interface {
	pulumi.Input

	ToTimeoutConfigPropertiesPtrOutput() TimeoutConfigPropertiesPtrOutput
	ToTimeoutConfigPropertiesPtrOutputWithContext(context.Context) TimeoutConfigPropertiesPtrOutput
}

type timeoutConfigPropertiesPtrType TimeoutConfigPropertiesArgs

func TimeoutConfigPropertiesPtr(v *TimeoutConfigPropertiesArgs) TimeoutConfigPropertiesPtrInput {
	return (*timeoutConfigPropertiesPtrType)(v)
}

func (*timeoutConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeoutConfigProperties)(nil)).Elem()
}

func (i *timeoutConfigPropertiesPtrType) ToTimeoutConfigPropertiesPtrOutput() TimeoutConfigPropertiesPtrOutput {
	return i.ToTimeoutConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *timeoutConfigPropertiesPtrType) ToTimeoutConfigPropertiesPtrOutputWithContext(ctx context.Context) TimeoutConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeoutConfigPropertiesPtrOutput)
}

// Specifies the amount of time each device has to finish its execution of the job.
type TimeoutConfigPropertiesOutput struct{ *pulumi.OutputState }

func (TimeoutConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeoutConfigProperties)(nil)).Elem()
}

func (o TimeoutConfigPropertiesOutput) ToTimeoutConfigPropertiesOutput() TimeoutConfigPropertiesOutput {
	return o
}

func (o TimeoutConfigPropertiesOutput) ToTimeoutConfigPropertiesOutputWithContext(ctx context.Context) TimeoutConfigPropertiesOutput {
	return o
}

func (o TimeoutConfigPropertiesOutput) ToTimeoutConfigPropertiesPtrOutput() TimeoutConfigPropertiesPtrOutput {
	return o.ToTimeoutConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o TimeoutConfigPropertiesOutput) ToTimeoutConfigPropertiesPtrOutputWithContext(ctx context.Context) TimeoutConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeoutConfigProperties) *TimeoutConfigProperties {
		return &v
	}).(TimeoutConfigPropertiesPtrOutput)
}

// Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal `TIMED_OUT` status.
func (o TimeoutConfigPropertiesOutput) InProgressTimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v TimeoutConfigProperties) int { return v.InProgressTimeoutInMinutes }).(pulumi.IntOutput)
}

type TimeoutConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TimeoutConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeoutConfigProperties)(nil)).Elem()
}

func (o TimeoutConfigPropertiesPtrOutput) ToTimeoutConfigPropertiesPtrOutput() TimeoutConfigPropertiesPtrOutput {
	return o
}

func (o TimeoutConfigPropertiesPtrOutput) ToTimeoutConfigPropertiesPtrOutputWithContext(ctx context.Context) TimeoutConfigPropertiesPtrOutput {
	return o
}

func (o TimeoutConfigPropertiesPtrOutput) Elem() TimeoutConfigPropertiesOutput {
	return o.ApplyT(func(v *TimeoutConfigProperties) TimeoutConfigProperties {
		if v != nil {
			return *v
		}
		var ret TimeoutConfigProperties
		return ret
	}).(TimeoutConfigPropertiesOutput)
}

// Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal `TIMED_OUT` status.
func (o TimeoutConfigPropertiesPtrOutput) InProgressTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeoutConfigProperties) *int {
		if v == nil {
			return nil
		}
		return &v.InProgressTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

type TopicRuleAction struct {
	// Change the state of a CloudWatch alarm.
	CloudwatchAlarm *TopicRuleCloudwatchAlarmAction `pulumi:"cloudwatchAlarm"`
	// Sends data to CloudWatch.
	CloudwatchLogs *TopicRuleCloudwatchLogsAction `pulumi:"cloudwatchLogs"`
	// Capture a CloudWatch metric.
	CloudwatchMetric *TopicRuleCloudwatchMetricAction `pulumi:"cloudwatchMetric"`
	// Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
	DynamoDBv2 *TopicRuleDynamoDBv2Action `pulumi:"dynamoDBv2"`
	// Write to a DynamoDB table.
	DynamoDb *TopicRuleDynamoDbAction `pulumi:"dynamoDb"`
	// Write data to an Amazon OpenSearch Service domain.
	//
	// > The `Elasticsearch` action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the `OpenSearch` rule action instead. For more information, see [OpenSearchAction](https://docs.aws.amazon.com//iot/latest/apireference/API_OpenSearchAction.html) .
	Elasticsearch *TopicRuleElasticsearchAction `pulumi:"elasticsearch"`
	// Write to an Amazon Kinesis Firehose stream.
	Firehose *TopicRuleFirehoseAction `pulumi:"firehose"`
	// Send data to an HTTPS endpoint.
	Http *TopicRuleHttpAction `pulumi:"http"`
	// Sends message data to an AWS IoT Analytics channel.
	IotAnalytics *TopicRuleIotAnalyticsAction `pulumi:"iotAnalytics"`
	// Sends an input to an AWS IoT Events detector.
	IotEvents *TopicRuleIotEventsAction `pulumi:"iotEvents"`
	// Sends data from the MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
	IotSiteWise *TopicRuleIotSiteWiseAction `pulumi:"iotSiteWise"`
	// Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
	Kafka *TopicRuleKafkaAction `pulumi:"kafka"`
	// Write data to an Amazon Kinesis stream.
	Kinesis *TopicRuleKinesisAction `pulumi:"kinesis"`
	// Invoke a Lambda function.
	Lambda *TopicRuleLambdaAction `pulumi:"lambda"`
	// Sends device location data to [Amazon Location Service](https://docs.aws.amazon.com//location/latest/developerguide/welcome.html) .
	Location *TopicRuleLocationAction `pulumi:"location"`
	// Write data to an Amazon OpenSearch Service domain.
	OpenSearch *TopicRuleOpenSearchAction `pulumi:"openSearch"`
	// Publish to another MQTT topic.
	Republish *TopicRuleRepublishAction `pulumi:"republish"`
	// Write to an Amazon S3 bucket.
	S3 *TopicRuleS3Action `pulumi:"s3"`
	// Publish to an Amazon SNS topic.
	Sns *TopicRuleSnsAction `pulumi:"sns"`
	// Publish to an Amazon SQS queue.
	Sqs *TopicRuleSqsAction `pulumi:"sqs"`
	// Starts execution of a Step Functions state machine.
	StepFunctions *TopicRuleStepFunctionsAction `pulumi:"stepFunctions"`
	// Writes attributes from an MQTT message.
	Timestream *TopicRuleTimestreamAction `pulumi:"timestream"`
}

// TopicRuleActionInput is an input type that accepts TopicRuleActionArgs and TopicRuleActionOutput values.
// You can construct a concrete instance of `TopicRuleActionInput` via:
//
//	TopicRuleActionArgs{...}
type TopicRuleActionInput interface {
	pulumi.Input

	ToTopicRuleActionOutput() TopicRuleActionOutput
	ToTopicRuleActionOutputWithContext(context.Context) TopicRuleActionOutput
}

type TopicRuleActionArgs struct {
	// Change the state of a CloudWatch alarm.
	CloudwatchAlarm TopicRuleCloudwatchAlarmActionPtrInput `pulumi:"cloudwatchAlarm"`
	// Sends data to CloudWatch.
	CloudwatchLogs TopicRuleCloudwatchLogsActionPtrInput `pulumi:"cloudwatchLogs"`
	// Capture a CloudWatch metric.
	CloudwatchMetric TopicRuleCloudwatchMetricActionPtrInput `pulumi:"cloudwatchMetric"`
	// Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
	DynamoDBv2 TopicRuleDynamoDBv2ActionPtrInput `pulumi:"dynamoDBv2"`
	// Write to a DynamoDB table.
	DynamoDb TopicRuleDynamoDbActionPtrInput `pulumi:"dynamoDb"`
	// Write data to an Amazon OpenSearch Service domain.
	//
	// > The `Elasticsearch` action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the `OpenSearch` rule action instead. For more information, see [OpenSearchAction](https://docs.aws.amazon.com//iot/latest/apireference/API_OpenSearchAction.html) .
	Elasticsearch TopicRuleElasticsearchActionPtrInput `pulumi:"elasticsearch"`
	// Write to an Amazon Kinesis Firehose stream.
	Firehose TopicRuleFirehoseActionPtrInput `pulumi:"firehose"`
	// Send data to an HTTPS endpoint.
	Http TopicRuleHttpActionPtrInput `pulumi:"http"`
	// Sends message data to an AWS IoT Analytics channel.
	IotAnalytics TopicRuleIotAnalyticsActionPtrInput `pulumi:"iotAnalytics"`
	// Sends an input to an AWS IoT Events detector.
	IotEvents TopicRuleIotEventsActionPtrInput `pulumi:"iotEvents"`
	// Sends data from the MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
	IotSiteWise TopicRuleIotSiteWiseActionPtrInput `pulumi:"iotSiteWise"`
	// Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
	Kafka TopicRuleKafkaActionPtrInput `pulumi:"kafka"`
	// Write data to an Amazon Kinesis stream.
	Kinesis TopicRuleKinesisActionPtrInput `pulumi:"kinesis"`
	// Invoke a Lambda function.
	Lambda TopicRuleLambdaActionPtrInput `pulumi:"lambda"`
	// Sends device location data to [Amazon Location Service](https://docs.aws.amazon.com//location/latest/developerguide/welcome.html) .
	Location TopicRuleLocationActionPtrInput `pulumi:"location"`
	// Write data to an Amazon OpenSearch Service domain.
	OpenSearch TopicRuleOpenSearchActionPtrInput `pulumi:"openSearch"`
	// Publish to another MQTT topic.
	Republish TopicRuleRepublishActionPtrInput `pulumi:"republish"`
	// Write to an Amazon S3 bucket.
	S3 TopicRuleS3ActionPtrInput `pulumi:"s3"`
	// Publish to an Amazon SNS topic.
	Sns TopicRuleSnsActionPtrInput `pulumi:"sns"`
	// Publish to an Amazon SQS queue.
	Sqs TopicRuleSqsActionPtrInput `pulumi:"sqs"`
	// Starts execution of a Step Functions state machine.
	StepFunctions TopicRuleStepFunctionsActionPtrInput `pulumi:"stepFunctions"`
	// Writes attributes from an MQTT message.
	Timestream TopicRuleTimestreamActionPtrInput `pulumi:"timestream"`
}

func (TopicRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAction)(nil)).Elem()
}

func (i TopicRuleActionArgs) ToTopicRuleActionOutput() TopicRuleActionOutput {
	return i.ToTopicRuleActionOutputWithContext(context.Background())
}

func (i TopicRuleActionArgs) ToTopicRuleActionOutputWithContext(ctx context.Context) TopicRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionOutput)
}

func (i TopicRuleActionArgs) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return i.ToTopicRuleActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleActionArgs) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionOutput).ToTopicRuleActionPtrOutputWithContext(ctx)
}

// TopicRuleActionPtrInput is an input type that accepts TopicRuleActionArgs, TopicRuleActionPtr and TopicRuleActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleActionPtrInput` via:
//
//	        TopicRuleActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleActionPtrInput interface {
	pulumi.Input

	ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput
	ToTopicRuleActionPtrOutputWithContext(context.Context) TopicRuleActionPtrOutput
}

type topicRuleActionPtrType TopicRuleActionArgs

func TopicRuleActionPtr(v *TopicRuleActionArgs) TopicRuleActionPtrInput {
	return (*topicRuleActionPtrType)(v)
}

func (*topicRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleAction)(nil)).Elem()
}

func (i *topicRuleActionPtrType) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return i.ToTopicRuleActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleActionPtrType) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionPtrOutput)
}

// TopicRuleActionArrayInput is an input type that accepts TopicRuleActionArray and TopicRuleActionArrayOutput values.
// You can construct a concrete instance of `TopicRuleActionArrayInput` via:
//
//	TopicRuleActionArray{ TopicRuleActionArgs{...} }
type TopicRuleActionArrayInput interface {
	pulumi.Input

	ToTopicRuleActionArrayOutput() TopicRuleActionArrayOutput
	ToTopicRuleActionArrayOutputWithContext(context.Context) TopicRuleActionArrayOutput
}

type TopicRuleActionArray []TopicRuleActionInput

func (TopicRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAction)(nil)).Elem()
}

func (i TopicRuleActionArray) ToTopicRuleActionArrayOutput() TopicRuleActionArrayOutput {
	return i.ToTopicRuleActionArrayOutputWithContext(context.Background())
}

func (i TopicRuleActionArray) ToTopicRuleActionArrayOutputWithContext(ctx context.Context) TopicRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionArrayOutput)
}

type TopicRuleActionOutput struct{ *pulumi.OutputState }

func (TopicRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAction)(nil)).Elem()
}

func (o TopicRuleActionOutput) ToTopicRuleActionOutput() TopicRuleActionOutput {
	return o
}

func (o TopicRuleActionOutput) ToTopicRuleActionOutputWithContext(ctx context.Context) TopicRuleActionOutput {
	return o
}

func (o TopicRuleActionOutput) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return o.ToTopicRuleActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleActionOutput) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleAction) *TopicRuleAction {
		return &v
	}).(TopicRuleActionPtrOutput)
}

// Change the state of a CloudWatch alarm.
func (o TopicRuleActionOutput) CloudwatchAlarm() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleCloudwatchAlarmAction { return v.CloudwatchAlarm }).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

// Sends data to CloudWatch.
func (o TopicRuleActionOutput) CloudwatchLogs() TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleCloudwatchLogsAction { return v.CloudwatchLogs }).(TopicRuleCloudwatchLogsActionPtrOutput)
}

// Capture a CloudWatch metric.
func (o TopicRuleActionOutput) CloudwatchMetric() TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleCloudwatchMetricAction { return v.CloudwatchMetric }).(TopicRuleCloudwatchMetricActionPtrOutput)
}

// Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
func (o TopicRuleActionOutput) DynamoDBv2() TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleDynamoDBv2Action { return v.DynamoDBv2 }).(TopicRuleDynamoDBv2ActionPtrOutput)
}

// Write to a DynamoDB table.
func (o TopicRuleActionOutput) DynamoDb() TopicRuleDynamoDbActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleDynamoDbAction { return v.DynamoDb }).(TopicRuleDynamoDbActionPtrOutput)
}

// Write data to an Amazon OpenSearch Service domain.
//
// > The `Elasticsearch` action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the `OpenSearch` rule action instead. For more information, see [OpenSearchAction](https://docs.aws.amazon.com//iot/latest/apireference/API_OpenSearchAction.html) .
func (o TopicRuleActionOutput) Elasticsearch() TopicRuleElasticsearchActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleElasticsearchAction { return v.Elasticsearch }).(TopicRuleElasticsearchActionPtrOutput)
}

// Write to an Amazon Kinesis Firehose stream.
func (o TopicRuleActionOutput) Firehose() TopicRuleFirehoseActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleFirehoseAction { return v.Firehose }).(TopicRuleFirehoseActionPtrOutput)
}

// Send data to an HTTPS endpoint.
func (o TopicRuleActionOutput) Http() TopicRuleHttpActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleHttpAction { return v.Http }).(TopicRuleHttpActionPtrOutput)
}

// Sends message data to an AWS IoT Analytics channel.
func (o TopicRuleActionOutput) IotAnalytics() TopicRuleIotAnalyticsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleIotAnalyticsAction { return v.IotAnalytics }).(TopicRuleIotAnalyticsActionPtrOutput)
}

// Sends an input to an AWS IoT Events detector.
func (o TopicRuleActionOutput) IotEvents() TopicRuleIotEventsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleIotEventsAction { return v.IotEvents }).(TopicRuleIotEventsActionPtrOutput)
}

// Sends data from the MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
func (o TopicRuleActionOutput) IotSiteWise() TopicRuleIotSiteWiseActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleIotSiteWiseAction { return v.IotSiteWise }).(TopicRuleIotSiteWiseActionPtrOutput)
}

// Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
func (o TopicRuleActionOutput) Kafka() TopicRuleKafkaActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleKafkaAction { return v.Kafka }).(TopicRuleKafkaActionPtrOutput)
}

// Write data to an Amazon Kinesis stream.
func (o TopicRuleActionOutput) Kinesis() TopicRuleKinesisActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleKinesisAction { return v.Kinesis }).(TopicRuleKinesisActionPtrOutput)
}

// Invoke a Lambda function.
func (o TopicRuleActionOutput) Lambda() TopicRuleLambdaActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleLambdaAction { return v.Lambda }).(TopicRuleLambdaActionPtrOutput)
}

// Sends device location data to [Amazon Location Service](https://docs.aws.amazon.com//location/latest/developerguide/welcome.html) .
func (o TopicRuleActionOutput) Location() TopicRuleLocationActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleLocationAction { return v.Location }).(TopicRuleLocationActionPtrOutput)
}

// Write data to an Amazon OpenSearch Service domain.
func (o TopicRuleActionOutput) OpenSearch() TopicRuleOpenSearchActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleOpenSearchAction { return v.OpenSearch }).(TopicRuleOpenSearchActionPtrOutput)
}

// Publish to another MQTT topic.
func (o TopicRuleActionOutput) Republish() TopicRuleRepublishActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleRepublishAction { return v.Republish }).(TopicRuleRepublishActionPtrOutput)
}

// Write to an Amazon S3 bucket.
func (o TopicRuleActionOutput) S3() TopicRuleS3ActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleS3Action { return v.S3 }).(TopicRuleS3ActionPtrOutput)
}

// Publish to an Amazon SNS topic.
func (o TopicRuleActionOutput) Sns() TopicRuleSnsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleSnsAction { return v.Sns }).(TopicRuleSnsActionPtrOutput)
}

// Publish to an Amazon SQS queue.
func (o TopicRuleActionOutput) Sqs() TopicRuleSqsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleSqsAction { return v.Sqs }).(TopicRuleSqsActionPtrOutput)
}

// Starts execution of a Step Functions state machine.
func (o TopicRuleActionOutput) StepFunctions() TopicRuleStepFunctionsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleStepFunctionsAction { return v.StepFunctions }).(TopicRuleStepFunctionsActionPtrOutput)
}

// Writes attributes from an MQTT message.
func (o TopicRuleActionOutput) Timestream() TopicRuleTimestreamActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleTimestreamAction { return v.Timestream }).(TopicRuleTimestreamActionPtrOutput)
}

type TopicRuleActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleAction)(nil)).Elem()
}

func (o TopicRuleActionPtrOutput) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return o
}

func (o TopicRuleActionPtrOutput) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return o
}

func (o TopicRuleActionPtrOutput) Elem() TopicRuleActionOutput {
	return o.ApplyT(func(v *TopicRuleAction) TopicRuleAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleAction
		return ret
	}).(TopicRuleActionOutput)
}

// Change the state of a CloudWatch alarm.
func (o TopicRuleActionPtrOutput) CloudwatchAlarm() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleCloudwatchAlarmAction {
		if v == nil {
			return nil
		}
		return v.CloudwatchAlarm
	}).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

// Sends data to CloudWatch.
func (o TopicRuleActionPtrOutput) CloudwatchLogs() TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleCloudwatchLogsAction {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(TopicRuleCloudwatchLogsActionPtrOutput)
}

// Capture a CloudWatch metric.
func (o TopicRuleActionPtrOutput) CloudwatchMetric() TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleCloudwatchMetricAction {
		if v == nil {
			return nil
		}
		return v.CloudwatchMetric
	}).(TopicRuleCloudwatchMetricActionPtrOutput)
}

// Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
func (o TopicRuleActionPtrOutput) DynamoDBv2() TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleDynamoDBv2Action {
		if v == nil {
			return nil
		}
		return v.DynamoDBv2
	}).(TopicRuleDynamoDBv2ActionPtrOutput)
}

// Write to a DynamoDB table.
func (o TopicRuleActionPtrOutput) DynamoDb() TopicRuleDynamoDbActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleDynamoDbAction {
		if v == nil {
			return nil
		}
		return v.DynamoDb
	}).(TopicRuleDynamoDbActionPtrOutput)
}

// Write data to an Amazon OpenSearch Service domain.
//
// > The `Elasticsearch` action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the `OpenSearch` rule action instead. For more information, see [OpenSearchAction](https://docs.aws.amazon.com//iot/latest/apireference/API_OpenSearchAction.html) .
func (o TopicRuleActionPtrOutput) Elasticsearch() TopicRuleElasticsearchActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleElasticsearchAction {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(TopicRuleElasticsearchActionPtrOutput)
}

// Write to an Amazon Kinesis Firehose stream.
func (o TopicRuleActionPtrOutput) Firehose() TopicRuleFirehoseActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleFirehoseAction {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(TopicRuleFirehoseActionPtrOutput)
}

// Send data to an HTTPS endpoint.
func (o TopicRuleActionPtrOutput) Http() TopicRuleHttpActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleHttpAction {
		if v == nil {
			return nil
		}
		return v.Http
	}).(TopicRuleHttpActionPtrOutput)
}

// Sends message data to an AWS IoT Analytics channel.
func (o TopicRuleActionPtrOutput) IotAnalytics() TopicRuleIotAnalyticsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleIotAnalyticsAction {
		if v == nil {
			return nil
		}
		return v.IotAnalytics
	}).(TopicRuleIotAnalyticsActionPtrOutput)
}

// Sends an input to an AWS IoT Events detector.
func (o TopicRuleActionPtrOutput) IotEvents() TopicRuleIotEventsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleIotEventsAction {
		if v == nil {
			return nil
		}
		return v.IotEvents
	}).(TopicRuleIotEventsActionPtrOutput)
}

// Sends data from the MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
func (o TopicRuleActionPtrOutput) IotSiteWise() TopicRuleIotSiteWiseActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleIotSiteWiseAction {
		if v == nil {
			return nil
		}
		return v.IotSiteWise
	}).(TopicRuleIotSiteWiseActionPtrOutput)
}

// Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
func (o TopicRuleActionPtrOutput) Kafka() TopicRuleKafkaActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleKafkaAction {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(TopicRuleKafkaActionPtrOutput)
}

// Write data to an Amazon Kinesis stream.
func (o TopicRuleActionPtrOutput) Kinesis() TopicRuleKinesisActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleKinesisAction {
		if v == nil {
			return nil
		}
		return v.Kinesis
	}).(TopicRuleKinesisActionPtrOutput)
}

// Invoke a Lambda function.
func (o TopicRuleActionPtrOutput) Lambda() TopicRuleLambdaActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleLambdaAction {
		if v == nil {
			return nil
		}
		return v.Lambda
	}).(TopicRuleLambdaActionPtrOutput)
}

// Sends device location data to [Amazon Location Service](https://docs.aws.amazon.com//location/latest/developerguide/welcome.html) .
func (o TopicRuleActionPtrOutput) Location() TopicRuleLocationActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleLocationAction {
		if v == nil {
			return nil
		}
		return v.Location
	}).(TopicRuleLocationActionPtrOutput)
}

// Write data to an Amazon OpenSearch Service domain.
func (o TopicRuleActionPtrOutput) OpenSearch() TopicRuleOpenSearchActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleOpenSearchAction {
		if v == nil {
			return nil
		}
		return v.OpenSearch
	}).(TopicRuleOpenSearchActionPtrOutput)
}

// Publish to another MQTT topic.
func (o TopicRuleActionPtrOutput) Republish() TopicRuleRepublishActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleRepublishAction {
		if v == nil {
			return nil
		}
		return v.Republish
	}).(TopicRuleRepublishActionPtrOutput)
}

// Write to an Amazon S3 bucket.
func (o TopicRuleActionPtrOutput) S3() TopicRuleS3ActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleS3Action {
		if v == nil {
			return nil
		}
		return v.S3
	}).(TopicRuleS3ActionPtrOutput)
}

// Publish to an Amazon SNS topic.
func (o TopicRuleActionPtrOutput) Sns() TopicRuleSnsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleSnsAction {
		if v == nil {
			return nil
		}
		return v.Sns
	}).(TopicRuleSnsActionPtrOutput)
}

// Publish to an Amazon SQS queue.
func (o TopicRuleActionPtrOutput) Sqs() TopicRuleSqsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleSqsAction {
		if v == nil {
			return nil
		}
		return v.Sqs
	}).(TopicRuleSqsActionPtrOutput)
}

// Starts execution of a Step Functions state machine.
func (o TopicRuleActionPtrOutput) StepFunctions() TopicRuleStepFunctionsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleStepFunctionsAction {
		if v == nil {
			return nil
		}
		return v.StepFunctions
	}).(TopicRuleStepFunctionsActionPtrOutput)
}

// Writes attributes from an MQTT message.
func (o TopicRuleActionPtrOutput) Timestream() TopicRuleTimestreamActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleTimestreamAction {
		if v == nil {
			return nil
		}
		return v.Timestream
	}).(TopicRuleTimestreamActionPtrOutput)
}

type TopicRuleActionArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAction)(nil)).Elem()
}

func (o TopicRuleActionArrayOutput) ToTopicRuleActionArrayOutput() TopicRuleActionArrayOutput {
	return o
}

func (o TopicRuleActionArrayOutput) ToTopicRuleActionArrayOutputWithContext(ctx context.Context) TopicRuleActionArrayOutput {
	return o
}

func (o TopicRuleActionArrayOutput) Index(i pulumi.IntInput) TopicRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleAction {
		return vs[0].([]TopicRuleAction)[vs[1].(int)]
	}).(TopicRuleActionOutput)
}

type TopicRuleAssetPropertyTimestamp struct {
	// Optional. A string that contains the nanosecond time offset. Accepts substitution templates.
	OffsetInNanos *string `pulumi:"offsetInNanos"`
	// A string that contains the time in seconds since epoch. Accepts substitution templates.
	TimeInSeconds string `pulumi:"timeInSeconds"`
}

// TopicRuleAssetPropertyTimestampInput is an input type that accepts TopicRuleAssetPropertyTimestampArgs and TopicRuleAssetPropertyTimestampOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyTimestampInput` via:
//
//	TopicRuleAssetPropertyTimestampArgs{...}
type TopicRuleAssetPropertyTimestampInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyTimestampOutput() TopicRuleAssetPropertyTimestampOutput
	ToTopicRuleAssetPropertyTimestampOutputWithContext(context.Context) TopicRuleAssetPropertyTimestampOutput
}

type TopicRuleAssetPropertyTimestampArgs struct {
	// Optional. A string that contains the nanosecond time offset. Accepts substitution templates.
	OffsetInNanos pulumi.StringPtrInput `pulumi:"offsetInNanos"`
	// A string that contains the time in seconds since epoch. Accepts substitution templates.
	TimeInSeconds pulumi.StringInput `pulumi:"timeInSeconds"`
}

func (TopicRuleAssetPropertyTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyTimestamp)(nil)).Elem()
}

func (i TopicRuleAssetPropertyTimestampArgs) ToTopicRuleAssetPropertyTimestampOutput() TopicRuleAssetPropertyTimestampOutput {
	return i.ToTopicRuleAssetPropertyTimestampOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyTimestampArgs) ToTopicRuleAssetPropertyTimestampOutputWithContext(ctx context.Context) TopicRuleAssetPropertyTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyTimestampOutput)
}

type TopicRuleAssetPropertyTimestampOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyTimestamp)(nil)).Elem()
}

func (o TopicRuleAssetPropertyTimestampOutput) ToTopicRuleAssetPropertyTimestampOutput() TopicRuleAssetPropertyTimestampOutput {
	return o
}

func (o TopicRuleAssetPropertyTimestampOutput) ToTopicRuleAssetPropertyTimestampOutputWithContext(ctx context.Context) TopicRuleAssetPropertyTimestampOutput {
	return o
}

// Optional. A string that contains the nanosecond time offset. Accepts substitution templates.
func (o TopicRuleAssetPropertyTimestampOutput) OffsetInNanos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyTimestamp) *string { return v.OffsetInNanos }).(pulumi.StringPtrOutput)
}

// A string that contains the time in seconds since epoch. Accepts substitution templates.
func (o TopicRuleAssetPropertyTimestampOutput) TimeInSeconds() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyTimestamp) string { return v.TimeInSeconds }).(pulumi.StringOutput)
}

type TopicRuleAssetPropertyValue struct {
	// Optional. A string that describes the quality of the value. Accepts substitution templates. Must be `GOOD` , `BAD` , or `UNCERTAIN` .
	Quality *string `pulumi:"quality"`
	// The asset property value timestamp.
	Timestamp TopicRuleAssetPropertyTimestamp `pulumi:"timestamp"`
	// The value of the asset property.
	Value TopicRuleAssetPropertyVariant `pulumi:"value"`
}

// TopicRuleAssetPropertyValueInput is an input type that accepts TopicRuleAssetPropertyValueArgs and TopicRuleAssetPropertyValueOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyValueInput` via:
//
//	TopicRuleAssetPropertyValueArgs{...}
type TopicRuleAssetPropertyValueInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyValueOutput() TopicRuleAssetPropertyValueOutput
	ToTopicRuleAssetPropertyValueOutputWithContext(context.Context) TopicRuleAssetPropertyValueOutput
}

type TopicRuleAssetPropertyValueArgs struct {
	// Optional. A string that describes the quality of the value. Accepts substitution templates. Must be `GOOD` , `BAD` , or `UNCERTAIN` .
	Quality pulumi.StringPtrInput `pulumi:"quality"`
	// The asset property value timestamp.
	Timestamp TopicRuleAssetPropertyTimestampInput `pulumi:"timestamp"`
	// The value of the asset property.
	Value TopicRuleAssetPropertyVariantInput `pulumi:"value"`
}

func (TopicRuleAssetPropertyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (i TopicRuleAssetPropertyValueArgs) ToTopicRuleAssetPropertyValueOutput() TopicRuleAssetPropertyValueOutput {
	return i.ToTopicRuleAssetPropertyValueOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyValueArgs) ToTopicRuleAssetPropertyValueOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyValueOutput)
}

// TopicRuleAssetPropertyValueArrayInput is an input type that accepts TopicRuleAssetPropertyValueArray and TopicRuleAssetPropertyValueArrayOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyValueArrayInput` via:
//
//	TopicRuleAssetPropertyValueArray{ TopicRuleAssetPropertyValueArgs{...} }
type TopicRuleAssetPropertyValueArrayInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyValueArrayOutput() TopicRuleAssetPropertyValueArrayOutput
	ToTopicRuleAssetPropertyValueArrayOutputWithContext(context.Context) TopicRuleAssetPropertyValueArrayOutput
}

type TopicRuleAssetPropertyValueArray []TopicRuleAssetPropertyValueInput

func (TopicRuleAssetPropertyValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (i TopicRuleAssetPropertyValueArray) ToTopicRuleAssetPropertyValueArrayOutput() TopicRuleAssetPropertyValueArrayOutput {
	return i.ToTopicRuleAssetPropertyValueArrayOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyValueArray) ToTopicRuleAssetPropertyValueArrayOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyValueArrayOutput)
}

type TopicRuleAssetPropertyValueOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (o TopicRuleAssetPropertyValueOutput) ToTopicRuleAssetPropertyValueOutput() TopicRuleAssetPropertyValueOutput {
	return o
}

func (o TopicRuleAssetPropertyValueOutput) ToTopicRuleAssetPropertyValueOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueOutput {
	return o
}

// Optional. A string that describes the quality of the value. Accepts substitution templates. Must be `GOOD` , `BAD` , or `UNCERTAIN` .
func (o TopicRuleAssetPropertyValueOutput) Quality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyValue) *string { return v.Quality }).(pulumi.StringPtrOutput)
}

// The asset property value timestamp.
func (o TopicRuleAssetPropertyValueOutput) Timestamp() TopicRuleAssetPropertyTimestampOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyValue) TopicRuleAssetPropertyTimestamp { return v.Timestamp }).(TopicRuleAssetPropertyTimestampOutput)
}

// The value of the asset property.
func (o TopicRuleAssetPropertyValueOutput) Value() TopicRuleAssetPropertyVariantOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyValue) TopicRuleAssetPropertyVariant { return v.Value }).(TopicRuleAssetPropertyVariantOutput)
}

type TopicRuleAssetPropertyValueArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (o TopicRuleAssetPropertyValueArrayOutput) ToTopicRuleAssetPropertyValueArrayOutput() TopicRuleAssetPropertyValueArrayOutput {
	return o
}

func (o TopicRuleAssetPropertyValueArrayOutput) ToTopicRuleAssetPropertyValueArrayOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueArrayOutput {
	return o
}

func (o TopicRuleAssetPropertyValueArrayOutput) Index(i pulumi.IntInput) TopicRuleAssetPropertyValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleAssetPropertyValue {
		return vs[0].([]TopicRuleAssetPropertyValue)[vs[1].(int)]
	}).(TopicRuleAssetPropertyValueOutput)
}

type TopicRuleAssetPropertyVariant struct {
	// Optional. A string that contains the boolean value ( `true` or `false` ) of the value entry. Accepts substitution templates.
	BooleanValue *string `pulumi:"booleanValue"`
	// Optional. A string that contains the double value of the value entry. Accepts substitution templates.
	DoubleValue *string `pulumi:"doubleValue"`
	// Optional. A string that contains the integer value of the value entry. Accepts substitution templates.
	IntegerValue *string `pulumi:"integerValue"`
	// Optional. The string value of the value entry. Accepts substitution templates.
	StringValue *string `pulumi:"stringValue"`
}

// TopicRuleAssetPropertyVariantInput is an input type that accepts TopicRuleAssetPropertyVariantArgs and TopicRuleAssetPropertyVariantOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyVariantInput` via:
//
//	TopicRuleAssetPropertyVariantArgs{...}
type TopicRuleAssetPropertyVariantInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyVariantOutput() TopicRuleAssetPropertyVariantOutput
	ToTopicRuleAssetPropertyVariantOutputWithContext(context.Context) TopicRuleAssetPropertyVariantOutput
}

type TopicRuleAssetPropertyVariantArgs struct {
	// Optional. A string that contains the boolean value ( `true` or `false` ) of the value entry. Accepts substitution templates.
	BooleanValue pulumi.StringPtrInput `pulumi:"booleanValue"`
	// Optional. A string that contains the double value of the value entry. Accepts substitution templates.
	DoubleValue pulumi.StringPtrInput `pulumi:"doubleValue"`
	// Optional. A string that contains the integer value of the value entry. Accepts substitution templates.
	IntegerValue pulumi.StringPtrInput `pulumi:"integerValue"`
	// Optional. The string value of the value entry. Accepts substitution templates.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (TopicRuleAssetPropertyVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyVariant)(nil)).Elem()
}

func (i TopicRuleAssetPropertyVariantArgs) ToTopicRuleAssetPropertyVariantOutput() TopicRuleAssetPropertyVariantOutput {
	return i.ToTopicRuleAssetPropertyVariantOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyVariantArgs) ToTopicRuleAssetPropertyVariantOutputWithContext(ctx context.Context) TopicRuleAssetPropertyVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyVariantOutput)
}

type TopicRuleAssetPropertyVariantOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyVariant)(nil)).Elem()
}

func (o TopicRuleAssetPropertyVariantOutput) ToTopicRuleAssetPropertyVariantOutput() TopicRuleAssetPropertyVariantOutput {
	return o
}

func (o TopicRuleAssetPropertyVariantOutput) ToTopicRuleAssetPropertyVariantOutputWithContext(ctx context.Context) TopicRuleAssetPropertyVariantOutput {
	return o
}

// Optional. A string that contains the boolean value ( `true` or `false` ) of the value entry. Accepts substitution templates.
func (o TopicRuleAssetPropertyVariantOutput) BooleanValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.BooleanValue }).(pulumi.StringPtrOutput)
}

// Optional. A string that contains the double value of the value entry. Accepts substitution templates.
func (o TopicRuleAssetPropertyVariantOutput) DoubleValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.DoubleValue }).(pulumi.StringPtrOutput)
}

// Optional. A string that contains the integer value of the value entry. Accepts substitution templates.
func (o TopicRuleAssetPropertyVariantOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.IntegerValue }).(pulumi.StringPtrOutput)
}

// Optional. The string value of the value entry. Accepts substitution templates.
func (o TopicRuleAssetPropertyVariantOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchAlarmAction struct {
	// The CloudWatch alarm name.
	AlarmName string `pulumi:"alarmName"`
	// The IAM role that allows access to the CloudWatch alarm.
	RoleArn string `pulumi:"roleArn"`
	// The reason for the alarm change.
	StateReason string `pulumi:"stateReason"`
	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue string `pulumi:"stateValue"`
}

// TopicRuleCloudwatchAlarmActionInput is an input type that accepts TopicRuleCloudwatchAlarmActionArgs and TopicRuleCloudwatchAlarmActionOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchAlarmActionInput` via:
//
//	TopicRuleCloudwatchAlarmActionArgs{...}
type TopicRuleCloudwatchAlarmActionInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchAlarmActionOutput() TopicRuleCloudwatchAlarmActionOutput
	ToTopicRuleCloudwatchAlarmActionOutputWithContext(context.Context) TopicRuleCloudwatchAlarmActionOutput
}

type TopicRuleCloudwatchAlarmActionArgs struct {
	// The CloudWatch alarm name.
	AlarmName pulumi.StringInput `pulumi:"alarmName"`
	// The IAM role that allows access to the CloudWatch alarm.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The reason for the alarm change.
	StateReason pulumi.StringInput `pulumi:"stateReason"`
	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue pulumi.StringInput `pulumi:"stateValue"`
}

func (TopicRuleCloudwatchAlarmActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionOutput() TopicRuleCloudwatchAlarmActionOutput {
	return i.ToTopicRuleCloudwatchAlarmActionOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmActionOutput)
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return i.ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmActionOutput).ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchAlarmActionPtrInput is an input type that accepts TopicRuleCloudwatchAlarmActionArgs, TopicRuleCloudwatchAlarmActionPtr and TopicRuleCloudwatchAlarmActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchAlarmActionPtrInput` via:
//
//	        TopicRuleCloudwatchAlarmActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleCloudwatchAlarmActionPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput
	ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Context) TopicRuleCloudwatchAlarmActionPtrOutput
}

type topicRuleCloudwatchAlarmActionPtrType TopicRuleCloudwatchAlarmActionArgs

func TopicRuleCloudwatchAlarmActionPtr(v *TopicRuleCloudwatchAlarmActionArgs) TopicRuleCloudwatchAlarmActionPtrInput {
	return (*topicRuleCloudwatchAlarmActionPtrType)(v)
}

func (*topicRuleCloudwatchAlarmActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (i *topicRuleCloudwatchAlarmActionPtrType) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return i.ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchAlarmActionPtrType) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

type TopicRuleCloudwatchAlarmActionOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchAlarmActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionOutput() TopicRuleCloudwatchAlarmActionOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleCloudwatchAlarmAction) *TopicRuleCloudwatchAlarmAction {
		return &v
	}).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

// The CloudWatch alarm name.
func (o TopicRuleCloudwatchAlarmActionOutput) AlarmName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.AlarmName }).(pulumi.StringOutput)
}

// The IAM role that allows access to the CloudWatch alarm.
func (o TopicRuleCloudwatchAlarmActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The reason for the alarm change.
func (o TopicRuleCloudwatchAlarmActionOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.StateReason }).(pulumi.StringOutput)
}

// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
func (o TopicRuleCloudwatchAlarmActionOutput) StateValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.StateValue }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchAlarmActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchAlarmActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) Elem() TopicRuleCloudwatchAlarmActionOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) TopicRuleCloudwatchAlarmAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleCloudwatchAlarmAction
		return ret
	}).(TopicRuleCloudwatchAlarmActionOutput)
}

// The CloudWatch alarm name.
func (o TopicRuleCloudwatchAlarmActionPtrOutput) AlarmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.AlarmName
	}).(pulumi.StringPtrOutput)
}

// The IAM role that allows access to the CloudWatch alarm.
func (o TopicRuleCloudwatchAlarmActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The reason for the alarm change.
func (o TopicRuleCloudwatchAlarmActionPtrOutput) StateReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.StateReason
	}).(pulumi.StringPtrOutput)
}

// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
func (o TopicRuleCloudwatchAlarmActionPtrOutput) StateValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.StateValue
	}).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchLogsAction struct {
	// Indicates whether batches of log records will be extracted and uploaded into CloudWatch.
	BatchMode *bool `pulumi:"batchMode"`
	// The CloudWatch log name.
	LogGroupName string `pulumi:"logGroupName"`
	// The IAM role that allows access to the CloudWatch log.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleCloudwatchLogsActionInput is an input type that accepts TopicRuleCloudwatchLogsActionArgs and TopicRuleCloudwatchLogsActionOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchLogsActionInput` via:
//
//	TopicRuleCloudwatchLogsActionArgs{...}
type TopicRuleCloudwatchLogsActionInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchLogsActionOutput() TopicRuleCloudwatchLogsActionOutput
	ToTopicRuleCloudwatchLogsActionOutputWithContext(context.Context) TopicRuleCloudwatchLogsActionOutput
}

type TopicRuleCloudwatchLogsActionArgs struct {
	// Indicates whether batches of log records will be extracted and uploaded into CloudWatch.
	BatchMode pulumi.BoolPtrInput `pulumi:"batchMode"`
	// The CloudWatch log name.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// The IAM role that allows access to the CloudWatch log.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleCloudwatchLogsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionOutput() TopicRuleCloudwatchLogsActionOutput {
	return i.ToTopicRuleCloudwatchLogsActionOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchLogsActionOutput)
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return i.ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchLogsActionOutput).ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchLogsActionPtrInput is an input type that accepts TopicRuleCloudwatchLogsActionArgs, TopicRuleCloudwatchLogsActionPtr and TopicRuleCloudwatchLogsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchLogsActionPtrInput` via:
//
//	        TopicRuleCloudwatchLogsActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleCloudwatchLogsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput
	ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Context) TopicRuleCloudwatchLogsActionPtrOutput
}

type topicRuleCloudwatchLogsActionPtrType TopicRuleCloudwatchLogsActionArgs

func TopicRuleCloudwatchLogsActionPtr(v *TopicRuleCloudwatchLogsActionArgs) TopicRuleCloudwatchLogsActionPtrInput {
	return (*topicRuleCloudwatchLogsActionPtrType)(v)
}

func (*topicRuleCloudwatchLogsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (i *topicRuleCloudwatchLogsActionPtrType) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return i.ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchLogsActionPtrType) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchLogsActionPtrOutput)
}

type TopicRuleCloudwatchLogsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchLogsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionOutput() TopicRuleCloudwatchLogsActionOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleCloudwatchLogsAction) *TopicRuleCloudwatchLogsAction {
		return &v
	}).(TopicRuleCloudwatchLogsActionPtrOutput)
}

// Indicates whether batches of log records will be extracted and uploaded into CloudWatch.
func (o TopicRuleCloudwatchLogsActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchLogsAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

// The CloudWatch log name.
func (o TopicRuleCloudwatchLogsActionOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchLogsAction) string { return v.LogGroupName }).(pulumi.StringOutput)
}

// The IAM role that allows access to the CloudWatch log.
func (o TopicRuleCloudwatchLogsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchLogsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchLogsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchLogsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) Elem() TopicRuleCloudwatchLogsActionOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) TopicRuleCloudwatchLogsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleCloudwatchLogsAction
		return ret
	}).(TopicRuleCloudwatchLogsActionOutput)
}

// Indicates whether batches of log records will be extracted and uploaded into CloudWatch.
func (o TopicRuleCloudwatchLogsActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch log name.
func (o TopicRuleCloudwatchLogsActionPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The IAM role that allows access to the CloudWatch log.
func (o TopicRuleCloudwatchLogsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchMetricAction struct {
	// The CloudWatch metric name.
	MetricName string `pulumi:"metricName"`
	// The CloudWatch metric namespace name.
	MetricNamespace string `pulumi:"metricNamespace"`
	// An optional [Unix timestamp](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp) .
	MetricTimestamp *string `pulumi:"metricTimestamp"`
	// The [metric unit](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit) supported by CloudWatch.
	MetricUnit string `pulumi:"metricUnit"`
	// The CloudWatch metric value.
	MetricValue string `pulumi:"metricValue"`
	// The IAM role that allows access to the CloudWatch metric.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleCloudwatchMetricActionInput is an input type that accepts TopicRuleCloudwatchMetricActionArgs and TopicRuleCloudwatchMetricActionOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchMetricActionInput` via:
//
//	TopicRuleCloudwatchMetricActionArgs{...}
type TopicRuleCloudwatchMetricActionInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchMetricActionOutput() TopicRuleCloudwatchMetricActionOutput
	ToTopicRuleCloudwatchMetricActionOutputWithContext(context.Context) TopicRuleCloudwatchMetricActionOutput
}

type TopicRuleCloudwatchMetricActionArgs struct {
	// The CloudWatch metric name.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The CloudWatch metric namespace name.
	MetricNamespace pulumi.StringInput `pulumi:"metricNamespace"`
	// An optional [Unix timestamp](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp) .
	MetricTimestamp pulumi.StringPtrInput `pulumi:"metricTimestamp"`
	// The [metric unit](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit) supported by CloudWatch.
	MetricUnit pulumi.StringInput `pulumi:"metricUnit"`
	// The CloudWatch metric value.
	MetricValue pulumi.StringInput `pulumi:"metricValue"`
	// The IAM role that allows access to the CloudWatch metric.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleCloudwatchMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionOutput() TopicRuleCloudwatchMetricActionOutput {
	return i.ToTopicRuleCloudwatchMetricActionOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricActionOutput)
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return i.ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricActionOutput).ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchMetricActionPtrInput is an input type that accepts TopicRuleCloudwatchMetricActionArgs, TopicRuleCloudwatchMetricActionPtr and TopicRuleCloudwatchMetricActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchMetricActionPtrInput` via:
//
//	        TopicRuleCloudwatchMetricActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleCloudwatchMetricActionPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput
	ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Context) TopicRuleCloudwatchMetricActionPtrOutput
}

type topicRuleCloudwatchMetricActionPtrType TopicRuleCloudwatchMetricActionArgs

func TopicRuleCloudwatchMetricActionPtr(v *TopicRuleCloudwatchMetricActionArgs) TopicRuleCloudwatchMetricActionPtrInput {
	return (*topicRuleCloudwatchMetricActionPtrType)(v)
}

func (*topicRuleCloudwatchMetricActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (i *topicRuleCloudwatchMetricActionPtrType) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return i.ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchMetricActionPtrType) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricActionPtrOutput)
}

type TopicRuleCloudwatchMetricActionOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionOutput() TopicRuleCloudwatchMetricActionOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleCloudwatchMetricAction) *TopicRuleCloudwatchMetricAction {
		return &v
	}).(TopicRuleCloudwatchMetricActionPtrOutput)
}

// The CloudWatch metric name.
func (o TopicRuleCloudwatchMetricActionOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricName }).(pulumi.StringOutput)
}

// The CloudWatch metric namespace name.
func (o TopicRuleCloudwatchMetricActionOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

// An optional [Unix timestamp](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp) .
func (o TopicRuleCloudwatchMetricActionOutput) MetricTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) *string { return v.MetricTimestamp }).(pulumi.StringPtrOutput)
}

// The [metric unit](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit) supported by CloudWatch.
func (o TopicRuleCloudwatchMetricActionOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricUnit }).(pulumi.StringOutput)
}

// The CloudWatch metric value.
func (o TopicRuleCloudwatchMetricActionOutput) MetricValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricValue }).(pulumi.StringOutput)
}

// The IAM role that allows access to the CloudWatch metric.
func (o TopicRuleCloudwatchMetricActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchMetricActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchMetricActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) Elem() TopicRuleCloudwatchMetricActionOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) TopicRuleCloudwatchMetricAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleCloudwatchMetricAction
		return ret
	}).(TopicRuleCloudwatchMetricActionOutput)
}

// The CloudWatch metric name.
func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch metric namespace name.
func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricNamespace
	}).(pulumi.StringPtrOutput)
}

// An optional [Unix timestamp](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp) .
func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return v.MetricTimestamp
	}).(pulumi.StringPtrOutput)
}

// The [metric unit](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit) supported by CloudWatch.
func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricUnit
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch metric value.
func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricValue
	}).(pulumi.StringPtrOutput)
}

// The IAM role that allows access to the CloudWatch metric.
func (o TopicRuleCloudwatchMetricActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationHttpUrlDestinationSummary struct {
	// The URL used to confirm the HTTP topic rule destination URL.
	ConfirmationUrl *string `pulumi:"confirmationUrl"`
}

// TopicRuleDestinationHttpUrlDestinationSummaryInput is an input type that accepts TopicRuleDestinationHttpUrlDestinationSummaryArgs and TopicRuleDestinationHttpUrlDestinationSummaryOutput values.
// You can construct a concrete instance of `TopicRuleDestinationHttpUrlDestinationSummaryInput` via:
//
//	TopicRuleDestinationHttpUrlDestinationSummaryArgs{...}
type TopicRuleDestinationHttpUrlDestinationSummaryInput interface {
	pulumi.Input

	ToTopicRuleDestinationHttpUrlDestinationSummaryOutput() TopicRuleDestinationHttpUrlDestinationSummaryOutput
	ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(context.Context) TopicRuleDestinationHttpUrlDestinationSummaryOutput
}

type TopicRuleDestinationHttpUrlDestinationSummaryArgs struct {
	// The URL used to confirm the HTTP topic rule destination URL.
	ConfirmationUrl pulumi.StringPtrInput `pulumi:"confirmationUrl"`
}

func (TopicRuleDestinationHttpUrlDestinationSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryOutput() TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return i.ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(context.Background())
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationHttpUrlDestinationSummaryOutput)
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return i.ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Background())
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationHttpUrlDestinationSummaryOutput).ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx)
}

// TopicRuleDestinationHttpUrlDestinationSummaryPtrInput is an input type that accepts TopicRuleDestinationHttpUrlDestinationSummaryArgs, TopicRuleDestinationHttpUrlDestinationSummaryPtr and TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput values.
// You can construct a concrete instance of `TopicRuleDestinationHttpUrlDestinationSummaryPtrInput` via:
//
//	        TopicRuleDestinationHttpUrlDestinationSummaryArgs{...}
//
//	or:
//
//	        nil
type TopicRuleDestinationHttpUrlDestinationSummaryPtrInput interface {
	pulumi.Input

	ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput
	ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput
}

type topicRuleDestinationHttpUrlDestinationSummaryPtrType TopicRuleDestinationHttpUrlDestinationSummaryArgs

func TopicRuleDestinationHttpUrlDestinationSummaryPtr(v *TopicRuleDestinationHttpUrlDestinationSummaryArgs) TopicRuleDestinationHttpUrlDestinationSummaryPtrInput {
	return (*topicRuleDestinationHttpUrlDestinationSummaryPtrType)(v)
}

func (*topicRuleDestinationHttpUrlDestinationSummaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (i *topicRuleDestinationHttpUrlDestinationSummaryPtrType) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return i.ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Background())
}

func (i *topicRuleDestinationHttpUrlDestinationSummaryPtrType) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput)
}

type TopicRuleDestinationHttpUrlDestinationSummaryOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationHttpUrlDestinationSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryOutput() TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o.ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Background())
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDestinationHttpUrlDestinationSummary) *TopicRuleDestinationHttpUrlDestinationSummary {
		return &v
	}).(TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput)
}

// The URL used to confirm the HTTP topic rule destination URL.
func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDestinationHttpUrlDestinationSummary) *string { return v.ConfirmationUrl }).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) Elem() TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return o.ApplyT(func(v *TopicRuleDestinationHttpUrlDestinationSummary) TopicRuleDestinationHttpUrlDestinationSummary {
		if v != nil {
			return *v
		}
		var ret TopicRuleDestinationHttpUrlDestinationSummary
		return ret
	}).(TopicRuleDestinationHttpUrlDestinationSummaryOutput)
}

// The URL used to confirm the HTTP topic rule destination URL.
func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDestinationHttpUrlDestinationSummary) *string {
		if v == nil {
			return nil
		}
		return v.ConfirmationUrl
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationVpcDestinationProperties struct {
	// The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
	RoleArn *string `pulumi:"roleArn"`
	// The security groups of the VPC destination.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The subnet IDs of the VPC destination.
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

// TopicRuleDestinationVpcDestinationPropertiesInput is an input type that accepts TopicRuleDestinationVpcDestinationPropertiesArgs and TopicRuleDestinationVpcDestinationPropertiesOutput values.
// You can construct a concrete instance of `TopicRuleDestinationVpcDestinationPropertiesInput` via:
//
//	TopicRuleDestinationVpcDestinationPropertiesArgs{...}
type TopicRuleDestinationVpcDestinationPropertiesInput interface {
	pulumi.Input

	ToTopicRuleDestinationVpcDestinationPropertiesOutput() TopicRuleDestinationVpcDestinationPropertiesOutput
	ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(context.Context) TopicRuleDestinationVpcDestinationPropertiesOutput
}

type TopicRuleDestinationVpcDestinationPropertiesArgs struct {
	// The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The security groups of the VPC destination.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The subnet IDs of the VPC destination.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of the VPC.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (TopicRuleDestinationVpcDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesOutput() TopicRuleDestinationVpcDestinationPropertiesOutput {
	return i.ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(context.Background())
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationVpcDestinationPropertiesOutput)
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return i.ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationVpcDestinationPropertiesOutput).ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx)
}

// TopicRuleDestinationVpcDestinationPropertiesPtrInput is an input type that accepts TopicRuleDestinationVpcDestinationPropertiesArgs, TopicRuleDestinationVpcDestinationPropertiesPtr and TopicRuleDestinationVpcDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `TopicRuleDestinationVpcDestinationPropertiesPtrInput` via:
//
//	        TopicRuleDestinationVpcDestinationPropertiesArgs{...}
//
//	or:
//
//	        nil
type TopicRuleDestinationVpcDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput
	ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput
}

type topicRuleDestinationVpcDestinationPropertiesPtrType TopicRuleDestinationVpcDestinationPropertiesArgs

func TopicRuleDestinationVpcDestinationPropertiesPtr(v *TopicRuleDestinationVpcDestinationPropertiesArgs) TopicRuleDestinationVpcDestinationPropertiesPtrInput {
	return (*topicRuleDestinationVpcDestinationPropertiesPtrType)(v)
}

func (*topicRuleDestinationVpcDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (i *topicRuleDestinationVpcDestinationPropertiesPtrType) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return i.ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *topicRuleDestinationVpcDestinationPropertiesPtrType) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationVpcDestinationPropertiesPtrOutput)
}

type TopicRuleDestinationVpcDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationVpcDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesOutput() TopicRuleDestinationVpcDestinationPropertiesOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o.ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDestinationVpcDestinationProperties) *TopicRuleDestinationVpcDestinationProperties {
		return &v
	}).(TopicRuleDestinationVpcDestinationPropertiesPtrOutput)
}

// The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
func (o TopicRuleDestinationVpcDestinationPropertiesOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The security groups of the VPC destination.
func (o TopicRuleDestinationVpcDestinationPropertiesOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The subnet IDs of the VPC destination.
func (o TopicRuleDestinationVpcDestinationPropertiesOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of the VPC.
func (o TopicRuleDestinationVpcDestinationPropertiesOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationVpcDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationVpcDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) Elem() TopicRuleDestinationVpcDestinationPropertiesOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) TopicRuleDestinationVpcDestinationProperties {
		if v != nil {
			return *v
		}
		var ret TopicRuleDestinationVpcDestinationProperties
		return ret
	}).(TopicRuleDestinationVpcDestinationPropertiesOutput)
}

// The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The security groups of the VPC destination.
func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The subnet IDs of the VPC destination.
func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the VPC.
func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDynamoDBv2Action struct {
	// Specifies the DynamoDB table to which the message data will be written. For example:
	//
	// `{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }`
	//
	// Each attribute in the message payload will be written to a separate column in the DynamoDB database.
	PutItem *TopicRulePutItemInput `pulumi:"putItem"`
	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn *string `pulumi:"roleArn"`
}

// TopicRuleDynamoDBv2ActionInput is an input type that accepts TopicRuleDynamoDBv2ActionArgs and TopicRuleDynamoDBv2ActionOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDBv2ActionInput` via:
//
//	TopicRuleDynamoDBv2ActionArgs{...}
type TopicRuleDynamoDBv2ActionInput interface {
	pulumi.Input

	ToTopicRuleDynamoDBv2ActionOutput() TopicRuleDynamoDBv2ActionOutput
	ToTopicRuleDynamoDBv2ActionOutputWithContext(context.Context) TopicRuleDynamoDBv2ActionOutput
}

type TopicRuleDynamoDBv2ActionArgs struct {
	// Specifies the DynamoDB table to which the message data will be written. For example:
	//
	// `{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }`
	//
	// Each attribute in the message payload will be written to a separate column in the DynamoDB database.
	PutItem TopicRulePutItemInputPtrInput `pulumi:"putItem"`
	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (TopicRuleDynamoDBv2ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionOutput() TopicRuleDynamoDBv2ActionOutput {
	return i.ToTopicRuleDynamoDBv2ActionOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBv2ActionOutput)
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return i.ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBv2ActionOutput).ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx)
}

// TopicRuleDynamoDBv2ActionPtrInput is an input type that accepts TopicRuleDynamoDBv2ActionArgs, TopicRuleDynamoDBv2ActionPtr and TopicRuleDynamoDBv2ActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDBv2ActionPtrInput` via:
//
//	        TopicRuleDynamoDBv2ActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleDynamoDBv2ActionPtrInput interface {
	pulumi.Input

	ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput
	ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Context) TopicRuleDynamoDBv2ActionPtrOutput
}

type topicRuleDynamoDBv2ActionPtrType TopicRuleDynamoDBv2ActionArgs

func TopicRuleDynamoDBv2ActionPtr(v *TopicRuleDynamoDBv2ActionArgs) TopicRuleDynamoDBv2ActionPtrInput {
	return (*topicRuleDynamoDBv2ActionPtrType)(v)
}

func (*topicRuleDynamoDBv2ActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (i *topicRuleDynamoDBv2ActionPtrType) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return i.ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleDynamoDBv2ActionPtrType) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBv2ActionPtrOutput)
}

type TopicRuleDynamoDBv2ActionOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDBv2ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionOutput() TopicRuleDynamoDBv2ActionOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDynamoDBv2Action) *TopicRuleDynamoDBv2Action {
		return &v
	}).(TopicRuleDynamoDBv2ActionPtrOutput)
}

// Specifies the DynamoDB table to which the message data will be written. For example:
//
// `{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }`
//
// Each attribute in the message payload will be written to a separate column in the DynamoDB database.
func (o TopicRuleDynamoDBv2ActionOutput) PutItem() TopicRulePutItemInputPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBv2Action) *TopicRulePutItemInput { return v.PutItem }).(TopicRulePutItemInputPtrOutput)
}

// The ARN of the IAM role that grants access to the DynamoDB table.
func (o TopicRuleDynamoDBv2ActionOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBv2Action) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type TopicRuleDynamoDBv2ActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDBv2ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) Elem() TopicRuleDynamoDBv2ActionOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBv2Action) TopicRuleDynamoDBv2Action {
		if v != nil {
			return *v
		}
		var ret TopicRuleDynamoDBv2Action
		return ret
	}).(TopicRuleDynamoDBv2ActionOutput)
}

// Specifies the DynamoDB table to which the message data will be written. For example:
//
// `{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }`
//
// Each attribute in the message payload will be written to a separate column in the DynamoDB database.
func (o TopicRuleDynamoDBv2ActionPtrOutput) PutItem() TopicRulePutItemInputPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBv2Action) *TopicRulePutItemInput {
		if v == nil {
			return nil
		}
		return v.PutItem
	}).(TopicRulePutItemInputPtrOutput)
}

// The ARN of the IAM role that grants access to the DynamoDB table.
func (o TopicRuleDynamoDBv2ActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBv2Action) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDynamoDbAction struct {
	// The hash key name.
	HashKeyField string `pulumi:"hashKeyField"`
	// The hash key type. Valid values are "STRING" or "NUMBER"
	HashKeyType *string `pulumi:"hashKeyType"`
	// The hash key value.
	HashKeyValue string `pulumi:"hashKeyValue"`
	// The action payload. This name can be customized.
	PayloadField *string `pulumi:"payloadField"`
	// The range key name.
	RangeKeyField *string `pulumi:"rangeKeyField"`
	// The range key type. Valid values are "STRING" or "NUMBER"
	RangeKeyType *string `pulumi:"rangeKeyType"`
	// The range key value.
	RangeKeyValue *string `pulumi:"rangeKeyValue"`
	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn string `pulumi:"roleArn"`
	// The name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
}

// TopicRuleDynamoDbActionInput is an input type that accepts TopicRuleDynamoDbActionArgs and TopicRuleDynamoDbActionOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDbActionInput` via:
//
//	TopicRuleDynamoDbActionArgs{...}
type TopicRuleDynamoDbActionInput interface {
	pulumi.Input

	ToTopicRuleDynamoDbActionOutput() TopicRuleDynamoDbActionOutput
	ToTopicRuleDynamoDbActionOutputWithContext(context.Context) TopicRuleDynamoDbActionOutput
}

type TopicRuleDynamoDbActionArgs struct {
	// The hash key name.
	HashKeyField pulumi.StringInput `pulumi:"hashKeyField"`
	// The hash key type. Valid values are "STRING" or "NUMBER"
	HashKeyType pulumi.StringPtrInput `pulumi:"hashKeyType"`
	// The hash key value.
	HashKeyValue pulumi.StringInput `pulumi:"hashKeyValue"`
	// The action payload. This name can be customized.
	PayloadField pulumi.StringPtrInput `pulumi:"payloadField"`
	// The range key name.
	RangeKeyField pulumi.StringPtrInput `pulumi:"rangeKeyField"`
	// The range key type. Valid values are "STRING" or "NUMBER"
	RangeKeyType pulumi.StringPtrInput `pulumi:"rangeKeyType"`
	// The range key value.
	RangeKeyValue pulumi.StringPtrInput `pulumi:"rangeKeyValue"`
	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (TopicRuleDynamoDbActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDbAction)(nil)).Elem()
}

func (i TopicRuleDynamoDbActionArgs) ToTopicRuleDynamoDbActionOutput() TopicRuleDynamoDbActionOutput {
	return i.ToTopicRuleDynamoDbActionOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDbActionArgs) ToTopicRuleDynamoDbActionOutputWithContext(ctx context.Context) TopicRuleDynamoDbActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDbActionOutput)
}

func (i TopicRuleDynamoDbActionArgs) ToTopicRuleDynamoDbActionPtrOutput() TopicRuleDynamoDbActionPtrOutput {
	return i.ToTopicRuleDynamoDbActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDbActionArgs) ToTopicRuleDynamoDbActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDbActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDbActionOutput).ToTopicRuleDynamoDbActionPtrOutputWithContext(ctx)
}

// TopicRuleDynamoDbActionPtrInput is an input type that accepts TopicRuleDynamoDbActionArgs, TopicRuleDynamoDbActionPtr and TopicRuleDynamoDbActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDbActionPtrInput` via:
//
//	        TopicRuleDynamoDbActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleDynamoDbActionPtrInput interface {
	pulumi.Input

	ToTopicRuleDynamoDbActionPtrOutput() TopicRuleDynamoDbActionPtrOutput
	ToTopicRuleDynamoDbActionPtrOutputWithContext(context.Context) TopicRuleDynamoDbActionPtrOutput
}

type topicRuleDynamoDbActionPtrType TopicRuleDynamoDbActionArgs

func TopicRuleDynamoDbActionPtr(v *TopicRuleDynamoDbActionArgs) TopicRuleDynamoDbActionPtrInput {
	return (*topicRuleDynamoDbActionPtrType)(v)
}

func (*topicRuleDynamoDbActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDbAction)(nil)).Elem()
}

func (i *topicRuleDynamoDbActionPtrType) ToTopicRuleDynamoDbActionPtrOutput() TopicRuleDynamoDbActionPtrOutput {
	return i.ToTopicRuleDynamoDbActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleDynamoDbActionPtrType) ToTopicRuleDynamoDbActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDbActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDbActionPtrOutput)
}

type TopicRuleDynamoDbActionOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDbActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDbAction)(nil)).Elem()
}

func (o TopicRuleDynamoDbActionOutput) ToTopicRuleDynamoDbActionOutput() TopicRuleDynamoDbActionOutput {
	return o
}

func (o TopicRuleDynamoDbActionOutput) ToTopicRuleDynamoDbActionOutputWithContext(ctx context.Context) TopicRuleDynamoDbActionOutput {
	return o
}

func (o TopicRuleDynamoDbActionOutput) ToTopicRuleDynamoDbActionPtrOutput() TopicRuleDynamoDbActionPtrOutput {
	return o.ToTopicRuleDynamoDbActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleDynamoDbActionOutput) ToTopicRuleDynamoDbActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDbActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDynamoDbAction) *TopicRuleDynamoDbAction {
		return &v
	}).(TopicRuleDynamoDbActionPtrOutput)
}

// The hash key name.
func (o TopicRuleDynamoDbActionOutput) HashKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) string { return v.HashKeyField }).(pulumi.StringOutput)
}

// The hash key type. Valid values are "STRING" or "NUMBER"
func (o TopicRuleDynamoDbActionOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) *string { return v.HashKeyType }).(pulumi.StringPtrOutput)
}

// The hash key value.
func (o TopicRuleDynamoDbActionOutput) HashKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) string { return v.HashKeyValue }).(pulumi.StringOutput)
}

// The action payload. This name can be customized.
func (o TopicRuleDynamoDbActionOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) *string { return v.PayloadField }).(pulumi.StringPtrOutput)
}

// The range key name.
func (o TopicRuleDynamoDbActionOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) *string { return v.RangeKeyField }).(pulumi.StringPtrOutput)
}

// The range key type. Valid values are "STRING" or "NUMBER"
func (o TopicRuleDynamoDbActionOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) *string { return v.RangeKeyType }).(pulumi.StringPtrOutput)
}

// The range key value.
func (o TopicRuleDynamoDbActionOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) *string { return v.RangeKeyValue }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the DynamoDB table.
func (o TopicRuleDynamoDbActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the DynamoDB table.
func (o TopicRuleDynamoDbActionOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDbAction) string { return v.TableName }).(pulumi.StringOutput)
}

type TopicRuleDynamoDbActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDbActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDbAction)(nil)).Elem()
}

func (o TopicRuleDynamoDbActionPtrOutput) ToTopicRuleDynamoDbActionPtrOutput() TopicRuleDynamoDbActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDbActionPtrOutput) ToTopicRuleDynamoDbActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDbActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDbActionPtrOutput) Elem() TopicRuleDynamoDbActionOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) TopicRuleDynamoDbAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleDynamoDbAction
		return ret
	}).(TopicRuleDynamoDbActionOutput)
}

// The hash key name.
func (o TopicRuleDynamoDbActionPtrOutput) HashKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyField
	}).(pulumi.StringPtrOutput)
}

// The hash key type. Valid values are "STRING" or "NUMBER"
func (o TopicRuleDynamoDbActionPtrOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return v.HashKeyType
	}).(pulumi.StringPtrOutput)
}

// The hash key value.
func (o TopicRuleDynamoDbActionPtrOutput) HashKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyValue
	}).(pulumi.StringPtrOutput)
}

// The action payload. This name can be customized.
func (o TopicRuleDynamoDbActionPtrOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return v.PayloadField
	}).(pulumi.StringPtrOutput)
}

// The range key name.
func (o TopicRuleDynamoDbActionPtrOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyField
	}).(pulumi.StringPtrOutput)
}

// The range key type. Valid values are "STRING" or "NUMBER"
func (o TopicRuleDynamoDbActionPtrOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyType
	}).(pulumi.StringPtrOutput)
}

// The range key value.
func (o TopicRuleDynamoDbActionPtrOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyValue
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the DynamoDB table.
func (o TopicRuleDynamoDbActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the DynamoDB table.
func (o TopicRuleDynamoDbActionPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDbAction) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleElasticsearchAction struct {
	// The endpoint of your OpenSearch domain.
	Endpoint string `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id string `pulumi:"id"`
	// The index where you want to store your data.
	Index string `pulumi:"index"`
	// The IAM role ARN that has access to OpenSearch.
	RoleArn string `pulumi:"roleArn"`
	// The type of document you are storing.
	Type string `pulumi:"type"`
}

// TopicRuleElasticsearchActionInput is an input type that accepts TopicRuleElasticsearchActionArgs and TopicRuleElasticsearchActionOutput values.
// You can construct a concrete instance of `TopicRuleElasticsearchActionInput` via:
//
//	TopicRuleElasticsearchActionArgs{...}
type TopicRuleElasticsearchActionInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchActionOutput() TopicRuleElasticsearchActionOutput
	ToTopicRuleElasticsearchActionOutputWithContext(context.Context) TopicRuleElasticsearchActionOutput
}

type TopicRuleElasticsearchActionArgs struct {
	// The endpoint of your OpenSearch domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id pulumi.StringInput `pulumi:"id"`
	// The index where you want to store your data.
	Index pulumi.StringInput `pulumi:"index"`
	// The IAM role ARN that has access to OpenSearch.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The type of document you are storing.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TopicRuleElasticsearchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearchAction)(nil)).Elem()
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionOutput() TopicRuleElasticsearchActionOutput {
	return i.ToTopicRuleElasticsearchActionOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchActionOutput)
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return i.ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchActionOutput).ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx)
}

// TopicRuleElasticsearchActionPtrInput is an input type that accepts TopicRuleElasticsearchActionArgs, TopicRuleElasticsearchActionPtr and TopicRuleElasticsearchActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleElasticsearchActionPtrInput` via:
//
//	        TopicRuleElasticsearchActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleElasticsearchActionPtrInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput
	ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Context) TopicRuleElasticsearchActionPtrOutput
}

type topicRuleElasticsearchActionPtrType TopicRuleElasticsearchActionArgs

func TopicRuleElasticsearchActionPtr(v *TopicRuleElasticsearchActionArgs) TopicRuleElasticsearchActionPtrInput {
	return (*topicRuleElasticsearchActionPtrType)(v)
}

func (*topicRuleElasticsearchActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearchAction)(nil)).Elem()
}

func (i *topicRuleElasticsearchActionPtrType) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return i.ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleElasticsearchActionPtrType) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchActionPtrOutput)
}

type TopicRuleElasticsearchActionOutput struct{ *pulumi.OutputState }

func (TopicRuleElasticsearchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearchAction)(nil)).Elem()
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionOutput() TopicRuleElasticsearchActionOutput {
	return o
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionOutput {
	return o
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return o.ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleElasticsearchAction) *TopicRuleElasticsearchAction {
		return &v
	}).(TopicRuleElasticsearchActionPtrOutput)
}

// The endpoint of your OpenSearch domain.
func (o TopicRuleElasticsearchActionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleElasticsearchActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Id }).(pulumi.StringOutput)
}

// The index where you want to store your data.
func (o TopicRuleElasticsearchActionOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Index }).(pulumi.StringOutput)
}

// The IAM role ARN that has access to OpenSearch.
func (o TopicRuleElasticsearchActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The type of document you are storing.
func (o TopicRuleElasticsearchActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Type }).(pulumi.StringOutput)
}

type TopicRuleElasticsearchActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleElasticsearchActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearchAction)(nil)).Elem()
}

func (o TopicRuleElasticsearchActionPtrOutput) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return o
}

func (o TopicRuleElasticsearchActionPtrOutput) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return o
}

func (o TopicRuleElasticsearchActionPtrOutput) Elem() TopicRuleElasticsearchActionOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) TopicRuleElasticsearchAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleElasticsearchAction
		return ret
	}).(TopicRuleElasticsearchActionOutput)
}

// The endpoint of your OpenSearch domain.
func (o TopicRuleElasticsearchActionPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleElasticsearchActionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The index where you want to store your data.
func (o TopicRuleElasticsearchActionPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that has access to OpenSearch.
func (o TopicRuleElasticsearchActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The type of document you are storing.
func (o TopicRuleElasticsearchActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TopicRuleFirehoseAction struct {
	// Whether to deliver the Kinesis Data Firehose stream as a batch by using [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) . The default value is `false` .
	//
	// When `batchMode` is `true` and the rule's SQL statement evaluates to an Array, each Array element forms one record in the [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) request. The resulting array can't have more than 500 records.
	BatchMode *bool `pulumi:"batchMode"`
	// The delivery stream name.
	DeliveryStreamName string `pulumi:"deliveryStreamName"`
	// The IAM role that grants access to the Amazon Kinesis Firehose stream.
	RoleArn string `pulumi:"roleArn"`
	// A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `pulumi:"separator"`
}

// TopicRuleFirehoseActionInput is an input type that accepts TopicRuleFirehoseActionArgs and TopicRuleFirehoseActionOutput values.
// You can construct a concrete instance of `TopicRuleFirehoseActionInput` via:
//
//	TopicRuleFirehoseActionArgs{...}
type TopicRuleFirehoseActionInput interface {
	pulumi.Input

	ToTopicRuleFirehoseActionOutput() TopicRuleFirehoseActionOutput
	ToTopicRuleFirehoseActionOutputWithContext(context.Context) TopicRuleFirehoseActionOutput
}

type TopicRuleFirehoseActionArgs struct {
	// Whether to deliver the Kinesis Data Firehose stream as a batch by using [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) . The default value is `false` .
	//
	// When `batchMode` is `true` and the rule's SQL statement evaluates to an Array, each Array element forms one record in the [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) request. The resulting array can't have more than 500 records.
	BatchMode pulumi.BoolPtrInput `pulumi:"batchMode"`
	// The delivery stream name.
	DeliveryStreamName pulumi.StringInput `pulumi:"deliveryStreamName"`
	// The IAM role that grants access to the Amazon Kinesis Firehose stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator pulumi.StringPtrInput `pulumi:"separator"`
}

func (TopicRuleFirehoseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehoseAction)(nil)).Elem()
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionOutput() TopicRuleFirehoseActionOutput {
	return i.ToTopicRuleFirehoseActionOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionOutputWithContext(ctx context.Context) TopicRuleFirehoseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseActionOutput)
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return i.ToTopicRuleFirehoseActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseActionOutput).ToTopicRuleFirehoseActionPtrOutputWithContext(ctx)
}

// TopicRuleFirehoseActionPtrInput is an input type that accepts TopicRuleFirehoseActionArgs, TopicRuleFirehoseActionPtr and TopicRuleFirehoseActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleFirehoseActionPtrInput` via:
//
//	        TopicRuleFirehoseActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleFirehoseActionPtrInput interface {
	pulumi.Input

	ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput
	ToTopicRuleFirehoseActionPtrOutputWithContext(context.Context) TopicRuleFirehoseActionPtrOutput
}

type topicRuleFirehoseActionPtrType TopicRuleFirehoseActionArgs

func TopicRuleFirehoseActionPtr(v *TopicRuleFirehoseActionArgs) TopicRuleFirehoseActionPtrInput {
	return (*topicRuleFirehoseActionPtrType)(v)
}

func (*topicRuleFirehoseActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehoseAction)(nil)).Elem()
}

func (i *topicRuleFirehoseActionPtrType) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return i.ToTopicRuleFirehoseActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleFirehoseActionPtrType) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseActionPtrOutput)
}

type TopicRuleFirehoseActionOutput struct{ *pulumi.OutputState }

func (TopicRuleFirehoseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehoseAction)(nil)).Elem()
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionOutput() TopicRuleFirehoseActionOutput {
	return o
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionOutputWithContext(ctx context.Context) TopicRuleFirehoseActionOutput {
	return o
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return o.ToTopicRuleFirehoseActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleFirehoseAction) *TopicRuleFirehoseAction {
		return &v
	}).(TopicRuleFirehoseActionPtrOutput)
}

// Whether to deliver the Kinesis Data Firehose stream as a batch by using [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) . The default value is `false` .
//
// When `batchMode` is `true` and the rule's SQL statement evaluates to an Array, each Array element forms one record in the [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) request. The resulting array can't have more than 500 records.
func (o TopicRuleFirehoseActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

// The delivery stream name.
func (o TopicRuleFirehoseActionOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

// The IAM role that grants access to the Amazon Kinesis Firehose stream.
func (o TopicRuleFirehoseActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o TopicRuleFirehoseActionOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

type TopicRuleFirehoseActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleFirehoseActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehoseAction)(nil)).Elem()
}

func (o TopicRuleFirehoseActionPtrOutput) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return o
}

func (o TopicRuleFirehoseActionPtrOutput) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return o
}

func (o TopicRuleFirehoseActionPtrOutput) Elem() TopicRuleFirehoseActionOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) TopicRuleFirehoseAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleFirehoseAction
		return ret
	}).(TopicRuleFirehoseActionOutput)
}

// Whether to deliver the Kinesis Data Firehose stream as a batch by using [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) . The default value is `false` .
//
// When `batchMode` is `true` and the rule's SQL statement evaluates to an Array, each Array element forms one record in the [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) request. The resulting array can't have more than 500 records.
func (o TopicRuleFirehoseActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

// The delivery stream name.
func (o TopicRuleFirehoseActionPtrOutput) DeliveryStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStreamName
	}).(pulumi.StringPtrOutput)
}

// The IAM role that grants access to the Amazon Kinesis Firehose stream.
func (o TopicRuleFirehoseActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o TopicRuleFirehoseActionPtrOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *string {
		if v == nil {
			return nil
		}
		return v.Separator
	}).(pulumi.StringPtrOutput)
}

type TopicRuleHttpAction struct {
	// The authentication method to use when sending data to an HTTPS endpoint.
	Auth *TopicRuleHttpAuthorization `pulumi:"auth"`
	// The URL to which AWS IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.
	ConfirmationUrl *string `pulumi:"confirmationUrl"`
	// The HTTP headers to send with the message data.
	Headers []TopicRuleHttpActionHeader `pulumi:"headers"`
	// The endpoint URL. If substitution templates are used in the URL, you must also specify a `confirmationUrl` . If this is a new destination, a new `TopicRuleDestination` is created if possible.
	Url string `pulumi:"url"`
}

// TopicRuleHttpActionInput is an input type that accepts TopicRuleHttpActionArgs and TopicRuleHttpActionOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionInput` via:
//
//	TopicRuleHttpActionArgs{...}
type TopicRuleHttpActionInput interface {
	pulumi.Input

	ToTopicRuleHttpActionOutput() TopicRuleHttpActionOutput
	ToTopicRuleHttpActionOutputWithContext(context.Context) TopicRuleHttpActionOutput
}

type TopicRuleHttpActionArgs struct {
	// The authentication method to use when sending data to an HTTPS endpoint.
	Auth TopicRuleHttpAuthorizationPtrInput `pulumi:"auth"`
	// The URL to which AWS IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.
	ConfirmationUrl pulumi.StringPtrInput `pulumi:"confirmationUrl"`
	// The HTTP headers to send with the message data.
	Headers TopicRuleHttpActionHeaderArrayInput `pulumi:"headers"`
	// The endpoint URL. If substitution templates are used in the URL, you must also specify a `confirmationUrl` . If this is a new destination, a new `TopicRuleDestination` is created if possible.
	Url pulumi.StringInput `pulumi:"url"`
}

func (TopicRuleHttpActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAction)(nil)).Elem()
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionOutput() TopicRuleHttpActionOutput {
	return i.ToTopicRuleHttpActionOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionOutputWithContext(ctx context.Context) TopicRuleHttpActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionOutput)
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return i.ToTopicRuleHttpActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionOutput).ToTopicRuleHttpActionPtrOutputWithContext(ctx)
}

// TopicRuleHttpActionPtrInput is an input type that accepts TopicRuleHttpActionArgs, TopicRuleHttpActionPtr and TopicRuleHttpActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionPtrInput` via:
//
//	        TopicRuleHttpActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleHttpActionPtrInput interface {
	pulumi.Input

	ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput
	ToTopicRuleHttpActionPtrOutputWithContext(context.Context) TopicRuleHttpActionPtrOutput
}

type topicRuleHttpActionPtrType TopicRuleHttpActionArgs

func TopicRuleHttpActionPtr(v *TopicRuleHttpActionArgs) TopicRuleHttpActionPtrInput {
	return (*topicRuleHttpActionPtrType)(v)
}

func (*topicRuleHttpActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAction)(nil)).Elem()
}

func (i *topicRuleHttpActionPtrType) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return i.ToTopicRuleHttpActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleHttpActionPtrType) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionPtrOutput)
}

type TopicRuleHttpActionOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAction)(nil)).Elem()
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionOutput() TopicRuleHttpActionOutput {
	return o
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionOutputWithContext(ctx context.Context) TopicRuleHttpActionOutput {
	return o
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return o.ToTopicRuleHttpActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleHttpAction) *TopicRuleHttpAction {
		return &v
	}).(TopicRuleHttpActionPtrOutput)
}

// The authentication method to use when sending data to an HTTPS endpoint.
func (o TopicRuleHttpActionOutput) Auth() TopicRuleHttpAuthorizationPtrOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) *TopicRuleHttpAuthorization { return v.Auth }).(TopicRuleHttpAuthorizationPtrOutput)
}

// The URL to which AWS IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.
func (o TopicRuleHttpActionOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) *string { return v.ConfirmationUrl }).(pulumi.StringPtrOutput)
}

// The HTTP headers to send with the message data.
func (o TopicRuleHttpActionOutput) Headers() TopicRuleHttpActionHeaderArrayOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) []TopicRuleHttpActionHeader { return v.Headers }).(TopicRuleHttpActionHeaderArrayOutput)
}

// The endpoint URL. If substitution templates are used in the URL, you must also specify a `confirmationUrl` . If this is a new destination, a new `TopicRuleDestination` is created if possible.
func (o TopicRuleHttpActionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) string { return v.Url }).(pulumi.StringOutput)
}

type TopicRuleHttpActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAction)(nil)).Elem()
}

func (o TopicRuleHttpActionPtrOutput) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return o
}

func (o TopicRuleHttpActionPtrOutput) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return o
}

func (o TopicRuleHttpActionPtrOutput) Elem() TopicRuleHttpActionOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) TopicRuleHttpAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleHttpAction
		return ret
	}).(TopicRuleHttpActionOutput)
}

// The authentication method to use when sending data to an HTTPS endpoint.
func (o TopicRuleHttpActionPtrOutput) Auth() TopicRuleHttpAuthorizationPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) *TopicRuleHttpAuthorization {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(TopicRuleHttpAuthorizationPtrOutput)
}

// The URL to which AWS IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.
func (o TopicRuleHttpActionPtrOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) *string {
		if v == nil {
			return nil
		}
		return v.ConfirmationUrl
	}).(pulumi.StringPtrOutput)
}

// The HTTP headers to send with the message data.
func (o TopicRuleHttpActionPtrOutput) Headers() TopicRuleHttpActionHeaderArrayOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) []TopicRuleHttpActionHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(TopicRuleHttpActionHeaderArrayOutput)
}

// The endpoint URL. If substitution templates are used in the URL, you must also specify a `confirmationUrl` . If this is a new destination, a new `TopicRuleDestination` is created if possible.
func (o TopicRuleHttpActionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TopicRuleHttpActionHeader struct {
	// The HTTP header key.
	Key string `pulumi:"key"`
	// The HTTP header value. Substitution templates are supported.
	Value string `pulumi:"value"`
}

// TopicRuleHttpActionHeaderInput is an input type that accepts TopicRuleHttpActionHeaderArgs and TopicRuleHttpActionHeaderOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionHeaderInput` via:
//
//	TopicRuleHttpActionHeaderArgs{...}
type TopicRuleHttpActionHeaderInput interface {
	pulumi.Input

	ToTopicRuleHttpActionHeaderOutput() TopicRuleHttpActionHeaderOutput
	ToTopicRuleHttpActionHeaderOutputWithContext(context.Context) TopicRuleHttpActionHeaderOutput
}

type TopicRuleHttpActionHeaderArgs struct {
	// The HTTP header key.
	Key pulumi.StringInput `pulumi:"key"`
	// The HTTP header value. Substitution templates are supported.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleHttpActionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpActionHeader)(nil)).Elem()
}

func (i TopicRuleHttpActionHeaderArgs) ToTopicRuleHttpActionHeaderOutput() TopicRuleHttpActionHeaderOutput {
	return i.ToTopicRuleHttpActionHeaderOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionHeaderArgs) ToTopicRuleHttpActionHeaderOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionHeaderOutput)
}

// TopicRuleHttpActionHeaderArrayInput is an input type that accepts TopicRuleHttpActionHeaderArray and TopicRuleHttpActionHeaderArrayOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionHeaderArrayInput` via:
//
//	TopicRuleHttpActionHeaderArray{ TopicRuleHttpActionHeaderArgs{...} }
type TopicRuleHttpActionHeaderArrayInput interface {
	pulumi.Input

	ToTopicRuleHttpActionHeaderArrayOutput() TopicRuleHttpActionHeaderArrayOutput
	ToTopicRuleHttpActionHeaderArrayOutputWithContext(context.Context) TopicRuleHttpActionHeaderArrayOutput
}

type TopicRuleHttpActionHeaderArray []TopicRuleHttpActionHeaderInput

func (TopicRuleHttpActionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleHttpActionHeader)(nil)).Elem()
}

func (i TopicRuleHttpActionHeaderArray) ToTopicRuleHttpActionHeaderArrayOutput() TopicRuleHttpActionHeaderArrayOutput {
	return i.ToTopicRuleHttpActionHeaderArrayOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionHeaderArray) ToTopicRuleHttpActionHeaderArrayOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionHeaderArrayOutput)
}

type TopicRuleHttpActionHeaderOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpActionHeader)(nil)).Elem()
}

func (o TopicRuleHttpActionHeaderOutput) ToTopicRuleHttpActionHeaderOutput() TopicRuleHttpActionHeaderOutput {
	return o
}

func (o TopicRuleHttpActionHeaderOutput) ToTopicRuleHttpActionHeaderOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderOutput {
	return o
}

// The HTTP header key.
func (o TopicRuleHttpActionHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleHttpActionHeader) string { return v.Key }).(pulumi.StringOutput)
}

// The HTTP header value. Substitution templates are supported.
func (o TopicRuleHttpActionHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleHttpActionHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleHttpActionHeaderArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleHttpActionHeader)(nil)).Elem()
}

func (o TopicRuleHttpActionHeaderArrayOutput) ToTopicRuleHttpActionHeaderArrayOutput() TopicRuleHttpActionHeaderArrayOutput {
	return o
}

func (o TopicRuleHttpActionHeaderArrayOutput) ToTopicRuleHttpActionHeaderArrayOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderArrayOutput {
	return o
}

func (o TopicRuleHttpActionHeaderArrayOutput) Index(i pulumi.IntInput) TopicRuleHttpActionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleHttpActionHeader {
		return vs[0].([]TopicRuleHttpActionHeader)[vs[1].(int)]
	}).(TopicRuleHttpActionHeaderOutput)
}

type TopicRuleHttpAuthorization struct {
	// Use Sig V4 authorization. For more information, see [Signature Version 4 Signing Process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) .
	Sigv4 *TopicRuleSigV4Authorization `pulumi:"sigv4"`
}

// TopicRuleHttpAuthorizationInput is an input type that accepts TopicRuleHttpAuthorizationArgs and TopicRuleHttpAuthorizationOutput values.
// You can construct a concrete instance of `TopicRuleHttpAuthorizationInput` via:
//
//	TopicRuleHttpAuthorizationArgs{...}
type TopicRuleHttpAuthorizationInput interface {
	pulumi.Input

	ToTopicRuleHttpAuthorizationOutput() TopicRuleHttpAuthorizationOutput
	ToTopicRuleHttpAuthorizationOutputWithContext(context.Context) TopicRuleHttpAuthorizationOutput
}

type TopicRuleHttpAuthorizationArgs struct {
	// Use Sig V4 authorization. For more information, see [Signature Version 4 Signing Process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) .
	Sigv4 TopicRuleSigV4AuthorizationPtrInput `pulumi:"sigv4"`
}

func (TopicRuleHttpAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAuthorization)(nil)).Elem()
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationOutput() TopicRuleHttpAuthorizationOutput {
	return i.ToTopicRuleHttpAuthorizationOutputWithContext(context.Background())
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpAuthorizationOutput)
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return i.ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Background())
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpAuthorizationOutput).ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx)
}

// TopicRuleHttpAuthorizationPtrInput is an input type that accepts TopicRuleHttpAuthorizationArgs, TopicRuleHttpAuthorizationPtr and TopicRuleHttpAuthorizationPtrOutput values.
// You can construct a concrete instance of `TopicRuleHttpAuthorizationPtrInput` via:
//
//	        TopicRuleHttpAuthorizationArgs{...}
//
//	or:
//
//	        nil
type TopicRuleHttpAuthorizationPtrInput interface {
	pulumi.Input

	ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput
	ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Context) TopicRuleHttpAuthorizationPtrOutput
}

type topicRuleHttpAuthorizationPtrType TopicRuleHttpAuthorizationArgs

func TopicRuleHttpAuthorizationPtr(v *TopicRuleHttpAuthorizationArgs) TopicRuleHttpAuthorizationPtrInput {
	return (*topicRuleHttpAuthorizationPtrType)(v)
}

func (*topicRuleHttpAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAuthorization)(nil)).Elem()
}

func (i *topicRuleHttpAuthorizationPtrType) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return i.ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Background())
}

func (i *topicRuleHttpAuthorizationPtrType) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpAuthorizationPtrOutput)
}

type TopicRuleHttpAuthorizationOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAuthorization)(nil)).Elem()
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationOutput() TopicRuleHttpAuthorizationOutput {
	return o
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationOutput {
	return o
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return o.ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Background())
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleHttpAuthorization) *TopicRuleHttpAuthorization {
		return &v
	}).(TopicRuleHttpAuthorizationPtrOutput)
}

// Use Sig V4 authorization. For more information, see [Signature Version 4 Signing Process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) .
func (o TopicRuleHttpAuthorizationOutput) Sigv4() TopicRuleSigV4AuthorizationPtrOutput {
	return o.ApplyT(func(v TopicRuleHttpAuthorization) *TopicRuleSigV4Authorization { return v.Sigv4 }).(TopicRuleSigV4AuthorizationPtrOutput)
}

type TopicRuleHttpAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAuthorization)(nil)).Elem()
}

func (o TopicRuleHttpAuthorizationPtrOutput) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return o
}

func (o TopicRuleHttpAuthorizationPtrOutput) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return o
}

func (o TopicRuleHttpAuthorizationPtrOutput) Elem() TopicRuleHttpAuthorizationOutput {
	return o.ApplyT(func(v *TopicRuleHttpAuthorization) TopicRuleHttpAuthorization {
		if v != nil {
			return *v
		}
		var ret TopicRuleHttpAuthorization
		return ret
	}).(TopicRuleHttpAuthorizationOutput)
}

// Use Sig V4 authorization. For more information, see [Signature Version 4 Signing Process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) .
func (o TopicRuleHttpAuthorizationPtrOutput) Sigv4() TopicRuleSigV4AuthorizationPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAuthorization) *TopicRuleSigV4Authorization {
		if v == nil {
			return nil
		}
		return v.Sigv4
	}).(TopicRuleSigV4AuthorizationPtrOutput)
}

type TopicRuleIotAnalyticsAction struct {
	// Whether to process the action as a batch. The default value is `false` .
	//
	// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by [`BatchPutMessage`](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html) The resulting array can't have more than 100 messages.
	BatchMode *bool `pulumi:"batchMode"`
	// The name of the IoT Analytics channel to which message data will be sent.
	ChannelName string `pulumi:"channelName"`
	// The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleIotAnalyticsActionInput is an input type that accepts TopicRuleIotAnalyticsActionArgs and TopicRuleIotAnalyticsActionOutput values.
// You can construct a concrete instance of `TopicRuleIotAnalyticsActionInput` via:
//
//	TopicRuleIotAnalyticsActionArgs{...}
type TopicRuleIotAnalyticsActionInput interface {
	pulumi.Input

	ToTopicRuleIotAnalyticsActionOutput() TopicRuleIotAnalyticsActionOutput
	ToTopicRuleIotAnalyticsActionOutputWithContext(context.Context) TopicRuleIotAnalyticsActionOutput
}

type TopicRuleIotAnalyticsActionArgs struct {
	// Whether to process the action as a batch. The default value is `false` .
	//
	// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by [`BatchPutMessage`](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html) The resulting array can't have more than 100 messages.
	BatchMode pulumi.BoolPtrInput `pulumi:"batchMode"`
	// The name of the IoT Analytics channel to which message data will be sent.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleIotAnalyticsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionOutput() TopicRuleIotAnalyticsActionOutput {
	return i.ToTopicRuleIotAnalyticsActionOutputWithContext(context.Background())
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticsActionOutput)
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return i.ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticsActionOutput).ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx)
}

// TopicRuleIotAnalyticsActionPtrInput is an input type that accepts TopicRuleIotAnalyticsActionArgs, TopicRuleIotAnalyticsActionPtr and TopicRuleIotAnalyticsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleIotAnalyticsActionPtrInput` via:
//
//	        TopicRuleIotAnalyticsActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleIotAnalyticsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput
	ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Context) TopicRuleIotAnalyticsActionPtrOutput
}

type topicRuleIotAnalyticsActionPtrType TopicRuleIotAnalyticsActionArgs

func TopicRuleIotAnalyticsActionPtr(v *TopicRuleIotAnalyticsActionArgs) TopicRuleIotAnalyticsActionPtrInput {
	return (*topicRuleIotAnalyticsActionPtrType)(v)
}

func (*topicRuleIotAnalyticsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (i *topicRuleIotAnalyticsActionPtrType) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return i.ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleIotAnalyticsActionPtrType) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticsActionPtrOutput)
}

type TopicRuleIotAnalyticsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleIotAnalyticsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionOutput() TopicRuleIotAnalyticsActionOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return o.ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleIotAnalyticsAction) *TopicRuleIotAnalyticsAction {
		return &v
	}).(TopicRuleIotAnalyticsActionPtrOutput)
}

// Whether to process the action as a batch. The default value is `false` .
//
// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by [`BatchPutMessage`](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html) The resulting array can't have more than 100 messages.
func (o TopicRuleIotAnalyticsActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleIotAnalyticsAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

// The name of the IoT Analytics channel to which message data will be sent.
func (o TopicRuleIotAnalyticsActionOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotAnalyticsAction) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).
func (o TopicRuleIotAnalyticsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotAnalyticsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotAnalyticsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleIotAnalyticsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (o TopicRuleIotAnalyticsActionPtrOutput) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionPtrOutput) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionPtrOutput) Elem() TopicRuleIotAnalyticsActionOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) TopicRuleIotAnalyticsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleIotAnalyticsAction
		return ret
	}).(TopicRuleIotAnalyticsActionOutput)
}

// Whether to process the action as a batch. The default value is `false` .
//
// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by [`BatchPutMessage`](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html) The resulting array can't have more than 100 messages.
func (o TopicRuleIotAnalyticsActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

// The name of the IoT Analytics channel to which message data will be sent.
func (o TopicRuleIotAnalyticsActionPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).
func (o TopicRuleIotAnalyticsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleIotEventsAction struct {
	// Whether to process the event actions as a batch. The default value is `false` .
	//
	// When `batchMode` is `true` , you can't specify a `messageId` .
	//
	// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when Events by calling [`BatchPutMessage`](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html) . The resulting array can't have more than 10 messages.
	BatchMode *bool `pulumi:"batchMode"`
	// The name of the AWS IoT Events input.
	InputName string `pulumi:"inputName"`
	// The ID of the message. The default `messageId` is a new UUID value.
	//
	// When `batchMode` is `true` , you can't specify a `messageId` --a new UUID value will be assigned.
	//
	// Assign a value to this property to ensure that only one input (message) with a given `messageId` will be processed by an AWS IoT Events detector.
	MessageId *string `pulumi:"messageId"`
	// The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleIotEventsActionInput is an input type that accepts TopicRuleIotEventsActionArgs and TopicRuleIotEventsActionOutput values.
// You can construct a concrete instance of `TopicRuleIotEventsActionInput` via:
//
//	TopicRuleIotEventsActionArgs{...}
type TopicRuleIotEventsActionInput interface {
	pulumi.Input

	ToTopicRuleIotEventsActionOutput() TopicRuleIotEventsActionOutput
	ToTopicRuleIotEventsActionOutputWithContext(context.Context) TopicRuleIotEventsActionOutput
}

type TopicRuleIotEventsActionArgs struct {
	// Whether to process the event actions as a batch. The default value is `false` .
	//
	// When `batchMode` is `true` , you can't specify a `messageId` .
	//
	// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when Events by calling [`BatchPutMessage`](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html) . The resulting array can't have more than 10 messages.
	BatchMode pulumi.BoolPtrInput `pulumi:"batchMode"`
	// The name of the AWS IoT Events input.
	InputName pulumi.StringInput `pulumi:"inputName"`
	// The ID of the message. The default `messageId` is a new UUID value.
	//
	// When `batchMode` is `true` , you can't specify a `messageId` --a new UUID value will be assigned.
	//
	// Assign a value to this property to ensure that only one input (message) with a given `messageId` will be processed by an AWS IoT Events detector.
	MessageId pulumi.StringPtrInput `pulumi:"messageId"`
	// The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleIotEventsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotEventsAction)(nil)).Elem()
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionOutput() TopicRuleIotEventsActionOutput {
	return i.ToTopicRuleIotEventsActionOutputWithContext(context.Background())
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionOutputWithContext(ctx context.Context) TopicRuleIotEventsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventsActionOutput)
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return i.ToTopicRuleIotEventsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventsActionOutput).ToTopicRuleIotEventsActionPtrOutputWithContext(ctx)
}

// TopicRuleIotEventsActionPtrInput is an input type that accepts TopicRuleIotEventsActionArgs, TopicRuleIotEventsActionPtr and TopicRuleIotEventsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleIotEventsActionPtrInput` via:
//
//	        TopicRuleIotEventsActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleIotEventsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput
	ToTopicRuleIotEventsActionPtrOutputWithContext(context.Context) TopicRuleIotEventsActionPtrOutput
}

type topicRuleIotEventsActionPtrType TopicRuleIotEventsActionArgs

func TopicRuleIotEventsActionPtr(v *TopicRuleIotEventsActionArgs) TopicRuleIotEventsActionPtrInput {
	return (*topicRuleIotEventsActionPtrType)(v)
}

func (*topicRuleIotEventsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotEventsAction)(nil)).Elem()
}

func (i *topicRuleIotEventsActionPtrType) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return i.ToTopicRuleIotEventsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleIotEventsActionPtrType) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventsActionPtrOutput)
}

type TopicRuleIotEventsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleIotEventsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotEventsAction)(nil)).Elem()
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionOutput() TopicRuleIotEventsActionOutput {
	return o
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionOutputWithContext(ctx context.Context) TopicRuleIotEventsActionOutput {
	return o
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return o.ToTopicRuleIotEventsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleIotEventsAction) *TopicRuleIotEventsAction {
		return &v
	}).(TopicRuleIotEventsActionPtrOutput)
}

// Whether to process the event actions as a batch. The default value is `false` .
//
// When `batchMode` is `true` , you can't specify a `messageId` .
//
// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when Events by calling [`BatchPutMessage`](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html) . The resulting array can't have more than 10 messages.
func (o TopicRuleIotEventsActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

// The name of the AWS IoT Events input.
func (o TopicRuleIotEventsActionOutput) InputName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) string { return v.InputName }).(pulumi.StringOutput)
}

// The ID of the message. The default `messageId` is a new UUID value.
//
// When `batchMode` is `true` , you can't specify a `messageId` --a new UUID value will be assigned.
//
// Assign a value to this property to ensure that only one input (message) with a given `messageId` will be processed by an AWS IoT Events detector.
func (o TopicRuleIotEventsActionOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) *string { return v.MessageId }).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").
func (o TopicRuleIotEventsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotEventsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleIotEventsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotEventsAction)(nil)).Elem()
}

func (o TopicRuleIotEventsActionPtrOutput) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return o
}

func (o TopicRuleIotEventsActionPtrOutput) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return o
}

func (o TopicRuleIotEventsActionPtrOutput) Elem() TopicRuleIotEventsActionOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) TopicRuleIotEventsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleIotEventsAction
		return ret
	}).(TopicRuleIotEventsActionOutput)
}

// Whether to process the event actions as a batch. The default value is `false` .
//
// When `batchMode` is `true` , you can't specify a `messageId` .
//
// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when Events by calling [`BatchPutMessage`](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html) . The resulting array can't have more than 10 messages.
func (o TopicRuleIotEventsActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

// The name of the AWS IoT Events input.
func (o TopicRuleIotEventsActionPtrOutput) InputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *string {
		if v == nil {
			return nil
		}
		return &v.InputName
	}).(pulumi.StringPtrOutput)
}

// The ID of the message. The default `messageId` is a new UUID value.
//
// When `batchMode` is `true` , you can't specify a `messageId` --a new UUID value will be assigned.
//
// Assign a value to this property to ensure that only one input (message) with a given `messageId` will be processed by an AWS IoT Events detector.
func (o TopicRuleIotEventsActionPtrOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *string {
		if v == nil {
			return nil
		}
		return v.MessageId
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").
func (o TopicRuleIotEventsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleIotSiteWiseAction struct {
	// A list of asset property value entries.
	PutAssetPropertyValueEntries []TopicRulePutAssetPropertyValueEntry `pulumi:"putAssetPropertyValueEntries"`
	// The ARN of the role that grants AWS IoT permission to send an asset property value to AWS IoT SiteWise. ( `"Action": "iotsitewise:BatchPutAssetPropertyValue"` ). The trust policy can restrict access to specific asset hierarchy paths.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleIotSiteWiseActionInput is an input type that accepts TopicRuleIotSiteWiseActionArgs and TopicRuleIotSiteWiseActionOutput values.
// You can construct a concrete instance of `TopicRuleIotSiteWiseActionInput` via:
//
//	TopicRuleIotSiteWiseActionArgs{...}
type TopicRuleIotSiteWiseActionInput interface {
	pulumi.Input

	ToTopicRuleIotSiteWiseActionOutput() TopicRuleIotSiteWiseActionOutput
	ToTopicRuleIotSiteWiseActionOutputWithContext(context.Context) TopicRuleIotSiteWiseActionOutput
}

type TopicRuleIotSiteWiseActionArgs struct {
	// A list of asset property value entries.
	PutAssetPropertyValueEntries TopicRulePutAssetPropertyValueEntryArrayInput `pulumi:"putAssetPropertyValueEntries"`
	// The ARN of the role that grants AWS IoT permission to send an asset property value to AWS IoT SiteWise. ( `"Action": "iotsitewise:BatchPutAssetPropertyValue"` ). The trust policy can restrict access to specific asset hierarchy paths.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleIotSiteWiseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionOutput() TopicRuleIotSiteWiseActionOutput {
	return i.ToTopicRuleIotSiteWiseActionOutputWithContext(context.Background())
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotSiteWiseActionOutput)
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return i.ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotSiteWiseActionOutput).ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx)
}

// TopicRuleIotSiteWiseActionPtrInput is an input type that accepts TopicRuleIotSiteWiseActionArgs, TopicRuleIotSiteWiseActionPtr and TopicRuleIotSiteWiseActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleIotSiteWiseActionPtrInput` via:
//
//	        TopicRuleIotSiteWiseActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleIotSiteWiseActionPtrInput interface {
	pulumi.Input

	ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput
	ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Context) TopicRuleIotSiteWiseActionPtrOutput
}

type topicRuleIotSiteWiseActionPtrType TopicRuleIotSiteWiseActionArgs

func TopicRuleIotSiteWiseActionPtr(v *TopicRuleIotSiteWiseActionArgs) TopicRuleIotSiteWiseActionPtrInput {
	return (*topicRuleIotSiteWiseActionPtrType)(v)
}

func (*topicRuleIotSiteWiseActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (i *topicRuleIotSiteWiseActionPtrType) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return i.ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleIotSiteWiseActionPtrType) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotSiteWiseActionPtrOutput)
}

type TopicRuleIotSiteWiseActionOutput struct{ *pulumi.OutputState }

func (TopicRuleIotSiteWiseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionOutput() TopicRuleIotSiteWiseActionOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return o.ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleIotSiteWiseAction) *TopicRuleIotSiteWiseAction {
		return &v
	}).(TopicRuleIotSiteWiseActionPtrOutput)
}

// A list of asset property value entries.
func (o TopicRuleIotSiteWiseActionOutput) PutAssetPropertyValueEntries() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o.ApplyT(func(v TopicRuleIotSiteWiseAction) []TopicRulePutAssetPropertyValueEntry {
		return v.PutAssetPropertyValueEntries
	}).(TopicRulePutAssetPropertyValueEntryArrayOutput)
}

// The ARN of the role that grants AWS IoT permission to send an asset property value to AWS IoT SiteWise. ( `"Action": "iotsitewise:BatchPutAssetPropertyValue"` ). The trust policy can restrict access to specific asset hierarchy paths.
func (o TopicRuleIotSiteWiseActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotSiteWiseAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotSiteWiseActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleIotSiteWiseActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (o TopicRuleIotSiteWiseActionPtrOutput) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionPtrOutput) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionPtrOutput) Elem() TopicRuleIotSiteWiseActionOutput {
	return o.ApplyT(func(v *TopicRuleIotSiteWiseAction) TopicRuleIotSiteWiseAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleIotSiteWiseAction
		return ret
	}).(TopicRuleIotSiteWiseActionOutput)
}

// A list of asset property value entries.
func (o TopicRuleIotSiteWiseActionPtrOutput) PutAssetPropertyValueEntries() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o.ApplyT(func(v *TopicRuleIotSiteWiseAction) []TopicRulePutAssetPropertyValueEntry {
		if v == nil {
			return nil
		}
		return v.PutAssetPropertyValueEntries
	}).(TopicRulePutAssetPropertyValueEntryArrayOutput)
}

// The ARN of the role that grants AWS IoT permission to send an asset property value to AWS IoT SiteWise. ( `"Action": "iotsitewise:BatchPutAssetPropertyValue"` ). The trust policy can restrict access to specific asset hierarchy paths.
func (o TopicRuleIotSiteWiseActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotSiteWiseAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleKafkaAction struct {
	// Properties of the Apache Kafka producer client.
	ClientProperties map[string]string `pulumi:"clientProperties"`
	// The ARN of Kafka action's VPC `TopicRuleDestination` .
	DestinationArn string `pulumi:"destinationArn"`
	// The list of Kafka headers that you specify.
	Headers []TopicRuleKafkaActionHeader `pulumi:"headers"`
	// The Kafka message key.
	Key *string `pulumi:"key"`
	// The Kafka message partition.
	Partition *string `pulumi:"partition"`
	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic string `pulumi:"topic"`
}

// TopicRuleKafkaActionInput is an input type that accepts TopicRuleKafkaActionArgs and TopicRuleKafkaActionOutput values.
// You can construct a concrete instance of `TopicRuleKafkaActionInput` via:
//
//	TopicRuleKafkaActionArgs{...}
type TopicRuleKafkaActionInput interface {
	pulumi.Input

	ToTopicRuleKafkaActionOutput() TopicRuleKafkaActionOutput
	ToTopicRuleKafkaActionOutputWithContext(context.Context) TopicRuleKafkaActionOutput
}

type TopicRuleKafkaActionArgs struct {
	// Properties of the Apache Kafka producer client.
	ClientProperties pulumi.StringMapInput `pulumi:"clientProperties"`
	// The ARN of Kafka action's VPC `TopicRuleDestination` .
	DestinationArn pulumi.StringInput `pulumi:"destinationArn"`
	// The list of Kafka headers that you specify.
	Headers TopicRuleKafkaActionHeaderArrayInput `pulumi:"headers"`
	// The Kafka message key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The Kafka message partition.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// The Kafka topic for messages to be sent to the Kafka broker.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (TopicRuleKafkaActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKafkaAction)(nil)).Elem()
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionOutput() TopicRuleKafkaActionOutput {
	return i.ToTopicRuleKafkaActionOutputWithContext(context.Background())
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionOutputWithContext(ctx context.Context) TopicRuleKafkaActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionOutput)
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return i.ToTopicRuleKafkaActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionOutput).ToTopicRuleKafkaActionPtrOutputWithContext(ctx)
}

// TopicRuleKafkaActionPtrInput is an input type that accepts TopicRuleKafkaActionArgs, TopicRuleKafkaActionPtr and TopicRuleKafkaActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleKafkaActionPtrInput` via:
//
//	        TopicRuleKafkaActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleKafkaActionPtrInput interface {
	pulumi.Input

	ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput
	ToTopicRuleKafkaActionPtrOutputWithContext(context.Context) TopicRuleKafkaActionPtrOutput
}

type topicRuleKafkaActionPtrType TopicRuleKafkaActionArgs

func TopicRuleKafkaActionPtr(v *TopicRuleKafkaActionArgs) TopicRuleKafkaActionPtrInput {
	return (*topicRuleKafkaActionPtrType)(v)
}

func (*topicRuleKafkaActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKafkaAction)(nil)).Elem()
}

func (i *topicRuleKafkaActionPtrType) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return i.ToTopicRuleKafkaActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleKafkaActionPtrType) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionPtrOutput)
}

type TopicRuleKafkaActionOutput struct{ *pulumi.OutputState }

func (TopicRuleKafkaActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKafkaAction)(nil)).Elem()
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionOutput() TopicRuleKafkaActionOutput {
	return o
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionOutputWithContext(ctx context.Context) TopicRuleKafkaActionOutput {
	return o
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return o.ToTopicRuleKafkaActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleKafkaAction) *TopicRuleKafkaAction {
		return &v
	}).(TopicRuleKafkaActionPtrOutput)
}

// Properties of the Apache Kafka producer client.
func (o TopicRuleKafkaActionOutput) ClientProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) map[string]string { return v.ClientProperties }).(pulumi.StringMapOutput)
}

// The ARN of Kafka action's VPC `TopicRuleDestination` .
func (o TopicRuleKafkaActionOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) string { return v.DestinationArn }).(pulumi.StringOutput)
}

// The list of Kafka headers that you specify.
func (o TopicRuleKafkaActionOutput) Headers() TopicRuleKafkaActionHeaderArrayOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) []TopicRuleKafkaActionHeader { return v.Headers }).(TopicRuleKafkaActionHeaderArrayOutput)
}

// The Kafka message key.
func (o TopicRuleKafkaActionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The Kafka message partition.
func (o TopicRuleKafkaActionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// The Kafka topic for messages to be sent to the Kafka broker.
func (o TopicRuleKafkaActionOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) string { return v.Topic }).(pulumi.StringOutput)
}

type TopicRuleKafkaActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleKafkaActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKafkaAction)(nil)).Elem()
}

func (o TopicRuleKafkaActionPtrOutput) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return o
}

func (o TopicRuleKafkaActionPtrOutput) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return o
}

func (o TopicRuleKafkaActionPtrOutput) Elem() TopicRuleKafkaActionOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) TopicRuleKafkaAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleKafkaAction
		return ret
	}).(TopicRuleKafkaActionOutput)
}

// Properties of the Apache Kafka producer client.
func (o TopicRuleKafkaActionPtrOutput) ClientProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) map[string]string {
		if v == nil {
			return nil
		}
		return v.ClientProperties
	}).(pulumi.StringMapOutput)
}

// The ARN of Kafka action's VPC `TopicRuleDestination` .
func (o TopicRuleKafkaActionPtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

// The list of Kafka headers that you specify.
func (o TopicRuleKafkaActionPtrOutput) Headers() TopicRuleKafkaActionHeaderArrayOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) []TopicRuleKafkaActionHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(TopicRuleKafkaActionHeaderArrayOutput)
}

// The Kafka message key.
func (o TopicRuleKafkaActionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka message partition.
func (o TopicRuleKafkaActionPtrOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.StringPtrOutput)
}

// The Kafka topic for messages to be sent to the Kafka broker.
func (o TopicRuleKafkaActionPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type TopicRuleKafkaActionHeader struct {
	// The key of the Kafka header.
	Key string `pulumi:"key"`
	// The value of the Kafka header.
	Value string `pulumi:"value"`
}

// TopicRuleKafkaActionHeaderInput is an input type that accepts TopicRuleKafkaActionHeaderArgs and TopicRuleKafkaActionHeaderOutput values.
// You can construct a concrete instance of `TopicRuleKafkaActionHeaderInput` via:
//
//	TopicRuleKafkaActionHeaderArgs{...}
type TopicRuleKafkaActionHeaderInput interface {
	pulumi.Input

	ToTopicRuleKafkaActionHeaderOutput() TopicRuleKafkaActionHeaderOutput
	ToTopicRuleKafkaActionHeaderOutputWithContext(context.Context) TopicRuleKafkaActionHeaderOutput
}

type TopicRuleKafkaActionHeaderArgs struct {
	// The key of the Kafka header.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the Kafka header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleKafkaActionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKafkaActionHeader)(nil)).Elem()
}

func (i TopicRuleKafkaActionHeaderArgs) ToTopicRuleKafkaActionHeaderOutput() TopicRuleKafkaActionHeaderOutput {
	return i.ToTopicRuleKafkaActionHeaderOutputWithContext(context.Background())
}

func (i TopicRuleKafkaActionHeaderArgs) ToTopicRuleKafkaActionHeaderOutputWithContext(ctx context.Context) TopicRuleKafkaActionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionHeaderOutput)
}

// TopicRuleKafkaActionHeaderArrayInput is an input type that accepts TopicRuleKafkaActionHeaderArray and TopicRuleKafkaActionHeaderArrayOutput values.
// You can construct a concrete instance of `TopicRuleKafkaActionHeaderArrayInput` via:
//
//	TopicRuleKafkaActionHeaderArray{ TopicRuleKafkaActionHeaderArgs{...} }
type TopicRuleKafkaActionHeaderArrayInput interface {
	pulumi.Input

	ToTopicRuleKafkaActionHeaderArrayOutput() TopicRuleKafkaActionHeaderArrayOutput
	ToTopicRuleKafkaActionHeaderArrayOutputWithContext(context.Context) TopicRuleKafkaActionHeaderArrayOutput
}

type TopicRuleKafkaActionHeaderArray []TopicRuleKafkaActionHeaderInput

func (TopicRuleKafkaActionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleKafkaActionHeader)(nil)).Elem()
}

func (i TopicRuleKafkaActionHeaderArray) ToTopicRuleKafkaActionHeaderArrayOutput() TopicRuleKafkaActionHeaderArrayOutput {
	return i.ToTopicRuleKafkaActionHeaderArrayOutputWithContext(context.Background())
}

func (i TopicRuleKafkaActionHeaderArray) ToTopicRuleKafkaActionHeaderArrayOutputWithContext(ctx context.Context) TopicRuleKafkaActionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionHeaderArrayOutput)
}

type TopicRuleKafkaActionHeaderOutput struct{ *pulumi.OutputState }

func (TopicRuleKafkaActionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKafkaActionHeader)(nil)).Elem()
}

func (o TopicRuleKafkaActionHeaderOutput) ToTopicRuleKafkaActionHeaderOutput() TopicRuleKafkaActionHeaderOutput {
	return o
}

func (o TopicRuleKafkaActionHeaderOutput) ToTopicRuleKafkaActionHeaderOutputWithContext(ctx context.Context) TopicRuleKafkaActionHeaderOutput {
	return o
}

// The key of the Kafka header.
func (o TopicRuleKafkaActionHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKafkaActionHeader) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the Kafka header.
func (o TopicRuleKafkaActionHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKafkaActionHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleKafkaActionHeaderArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleKafkaActionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleKafkaActionHeader)(nil)).Elem()
}

func (o TopicRuleKafkaActionHeaderArrayOutput) ToTopicRuleKafkaActionHeaderArrayOutput() TopicRuleKafkaActionHeaderArrayOutput {
	return o
}

func (o TopicRuleKafkaActionHeaderArrayOutput) ToTopicRuleKafkaActionHeaderArrayOutputWithContext(ctx context.Context) TopicRuleKafkaActionHeaderArrayOutput {
	return o
}

func (o TopicRuleKafkaActionHeaderArrayOutput) Index(i pulumi.IntInput) TopicRuleKafkaActionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleKafkaActionHeader {
		return vs[0].([]TopicRuleKafkaActionHeader)[vs[1].(int)]
	}).(TopicRuleKafkaActionHeaderOutput)
}

type TopicRuleKinesisAction struct {
	// The partition key.
	PartitionKey *string `pulumi:"partitionKey"`
	// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
	// The name of the Amazon Kinesis stream.
	StreamName string `pulumi:"streamName"`
}

// TopicRuleKinesisActionInput is an input type that accepts TopicRuleKinesisActionArgs and TopicRuleKinesisActionOutput values.
// You can construct a concrete instance of `TopicRuleKinesisActionInput` via:
//
//	TopicRuleKinesisActionArgs{...}
type TopicRuleKinesisActionInput interface {
	pulumi.Input

	ToTopicRuleKinesisActionOutput() TopicRuleKinesisActionOutput
	ToTopicRuleKinesisActionOutputWithContext(context.Context) TopicRuleKinesisActionOutput
}

type TopicRuleKinesisActionArgs struct {
	// The partition key.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Amazon Kinesis stream.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (TopicRuleKinesisActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesisAction)(nil)).Elem()
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionOutput() TopicRuleKinesisActionOutput {
	return i.ToTopicRuleKinesisActionOutputWithContext(context.Background())
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionOutputWithContext(ctx context.Context) TopicRuleKinesisActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisActionOutput)
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return i.ToTopicRuleKinesisActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisActionOutput).ToTopicRuleKinesisActionPtrOutputWithContext(ctx)
}

// TopicRuleKinesisActionPtrInput is an input type that accepts TopicRuleKinesisActionArgs, TopicRuleKinesisActionPtr and TopicRuleKinesisActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleKinesisActionPtrInput` via:
//
//	        TopicRuleKinesisActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleKinesisActionPtrInput interface {
	pulumi.Input

	ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput
	ToTopicRuleKinesisActionPtrOutputWithContext(context.Context) TopicRuleKinesisActionPtrOutput
}

type topicRuleKinesisActionPtrType TopicRuleKinesisActionArgs

func TopicRuleKinesisActionPtr(v *TopicRuleKinesisActionArgs) TopicRuleKinesisActionPtrInput {
	return (*topicRuleKinesisActionPtrType)(v)
}

func (*topicRuleKinesisActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesisAction)(nil)).Elem()
}

func (i *topicRuleKinesisActionPtrType) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return i.ToTopicRuleKinesisActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleKinesisActionPtrType) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisActionPtrOutput)
}

type TopicRuleKinesisActionOutput struct{ *pulumi.OutputState }

func (TopicRuleKinesisActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesisAction)(nil)).Elem()
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionOutput() TopicRuleKinesisActionOutput {
	return o
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionOutputWithContext(ctx context.Context) TopicRuleKinesisActionOutput {
	return o
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return o.ToTopicRuleKinesisActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleKinesisAction) *TopicRuleKinesisAction {
		return &v
	}).(TopicRuleKinesisActionPtrOutput)
}

// The partition key.
func (o TopicRuleKinesisActionOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKinesisAction) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
func (o TopicRuleKinesisActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKinesisAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the Amazon Kinesis stream.
func (o TopicRuleKinesisActionOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKinesisAction) string { return v.StreamName }).(pulumi.StringOutput)
}

type TopicRuleKinesisActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleKinesisActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesisAction)(nil)).Elem()
}

func (o TopicRuleKinesisActionPtrOutput) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return o
}

func (o TopicRuleKinesisActionPtrOutput) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return o
}

func (o TopicRuleKinesisActionPtrOutput) Elem() TopicRuleKinesisActionOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) TopicRuleKinesisAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleKinesisAction
		return ret
	}).(TopicRuleKinesisActionOutput)
}

// The partition key.
func (o TopicRuleKinesisActionPtrOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) *string {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
func (o TopicRuleKinesisActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon Kinesis stream.
func (o TopicRuleKinesisActionPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleLambdaAction struct {
	// The ARN of the Lambda function.
	FunctionArn *string `pulumi:"functionArn"`
}

// TopicRuleLambdaActionInput is an input type that accepts TopicRuleLambdaActionArgs and TopicRuleLambdaActionOutput values.
// You can construct a concrete instance of `TopicRuleLambdaActionInput` via:
//
//	TopicRuleLambdaActionArgs{...}
type TopicRuleLambdaActionInput interface {
	pulumi.Input

	ToTopicRuleLambdaActionOutput() TopicRuleLambdaActionOutput
	ToTopicRuleLambdaActionOutputWithContext(context.Context) TopicRuleLambdaActionOutput
}

type TopicRuleLambdaActionArgs struct {
	// The ARN of the Lambda function.
	FunctionArn pulumi.StringPtrInput `pulumi:"functionArn"`
}

func (TopicRuleLambdaActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLambdaAction)(nil)).Elem()
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionOutput() TopicRuleLambdaActionOutput {
	return i.ToTopicRuleLambdaActionOutputWithContext(context.Background())
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionOutputWithContext(ctx context.Context) TopicRuleLambdaActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaActionOutput)
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return i.ToTopicRuleLambdaActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaActionOutput).ToTopicRuleLambdaActionPtrOutputWithContext(ctx)
}

// TopicRuleLambdaActionPtrInput is an input type that accepts TopicRuleLambdaActionArgs, TopicRuleLambdaActionPtr and TopicRuleLambdaActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleLambdaActionPtrInput` via:
//
//	        TopicRuleLambdaActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleLambdaActionPtrInput interface {
	pulumi.Input

	ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput
	ToTopicRuleLambdaActionPtrOutputWithContext(context.Context) TopicRuleLambdaActionPtrOutput
}

type topicRuleLambdaActionPtrType TopicRuleLambdaActionArgs

func TopicRuleLambdaActionPtr(v *TopicRuleLambdaActionArgs) TopicRuleLambdaActionPtrInput {
	return (*topicRuleLambdaActionPtrType)(v)
}

func (*topicRuleLambdaActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLambdaAction)(nil)).Elem()
}

func (i *topicRuleLambdaActionPtrType) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return i.ToTopicRuleLambdaActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleLambdaActionPtrType) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaActionPtrOutput)
}

type TopicRuleLambdaActionOutput struct{ *pulumi.OutputState }

func (TopicRuleLambdaActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLambdaAction)(nil)).Elem()
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionOutput() TopicRuleLambdaActionOutput {
	return o
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionOutputWithContext(ctx context.Context) TopicRuleLambdaActionOutput {
	return o
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return o.ToTopicRuleLambdaActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleLambdaAction) *TopicRuleLambdaAction {
		return &v
	}).(TopicRuleLambdaActionPtrOutput)
}

// The ARN of the Lambda function.
func (o TopicRuleLambdaActionOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleLambdaAction) *string { return v.FunctionArn }).(pulumi.StringPtrOutput)
}

type TopicRuleLambdaActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleLambdaActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLambdaAction)(nil)).Elem()
}

func (o TopicRuleLambdaActionPtrOutput) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return o
}

func (o TopicRuleLambdaActionPtrOutput) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return o
}

func (o TopicRuleLambdaActionPtrOutput) Elem() TopicRuleLambdaActionOutput {
	return o.ApplyT(func(v *TopicRuleLambdaAction) TopicRuleLambdaAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleLambdaAction
		return ret
	}).(TopicRuleLambdaActionOutput)
}

// The ARN of the Lambda function.
func (o TopicRuleLambdaActionPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLambdaAction) *string {
		if v == nil {
			return nil
		}
		return v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleLocationAction struct {
	// The unique ID of the device providing the location data.
	DeviceId string `pulumi:"deviceId"`
	// A string that evaluates to a double value that represents the latitude of the device's location.
	Latitude string `pulumi:"latitude"`
	// A string that evaluates to a double value that represents the longitude of the device's location.
	Longitude string `pulumi:"longitude"`
	// The IAM role that grants permission to write to the Amazon Location resource.
	RoleArn string `pulumi:"roleArn"`
	// The time that the location data was sampled. The default value is the time the MQTT message was processed.
	Timestamp *TopicRuleTimestamp `pulumi:"timestamp"`
	// The name of the tracker resource in Amazon Location in which the location is updated.
	TrackerName string `pulumi:"trackerName"`
}

// TopicRuleLocationActionInput is an input type that accepts TopicRuleLocationActionArgs and TopicRuleLocationActionOutput values.
// You can construct a concrete instance of `TopicRuleLocationActionInput` via:
//
//	TopicRuleLocationActionArgs{...}
type TopicRuleLocationActionInput interface {
	pulumi.Input

	ToTopicRuleLocationActionOutput() TopicRuleLocationActionOutput
	ToTopicRuleLocationActionOutputWithContext(context.Context) TopicRuleLocationActionOutput
}

type TopicRuleLocationActionArgs struct {
	// The unique ID of the device providing the location data.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// A string that evaluates to a double value that represents the latitude of the device's location.
	Latitude pulumi.StringInput `pulumi:"latitude"`
	// A string that evaluates to a double value that represents the longitude of the device's location.
	Longitude pulumi.StringInput `pulumi:"longitude"`
	// The IAM role that grants permission to write to the Amazon Location resource.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The time that the location data was sampled. The default value is the time the MQTT message was processed.
	Timestamp TopicRuleTimestampPtrInput `pulumi:"timestamp"`
	// The name of the tracker resource in Amazon Location in which the location is updated.
	TrackerName pulumi.StringInput `pulumi:"trackerName"`
}

func (TopicRuleLocationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLocationAction)(nil)).Elem()
}

func (i TopicRuleLocationActionArgs) ToTopicRuleLocationActionOutput() TopicRuleLocationActionOutput {
	return i.ToTopicRuleLocationActionOutputWithContext(context.Background())
}

func (i TopicRuleLocationActionArgs) ToTopicRuleLocationActionOutputWithContext(ctx context.Context) TopicRuleLocationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLocationActionOutput)
}

func (i TopicRuleLocationActionArgs) ToTopicRuleLocationActionPtrOutput() TopicRuleLocationActionPtrOutput {
	return i.ToTopicRuleLocationActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleLocationActionArgs) ToTopicRuleLocationActionPtrOutputWithContext(ctx context.Context) TopicRuleLocationActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLocationActionOutput).ToTopicRuleLocationActionPtrOutputWithContext(ctx)
}

// TopicRuleLocationActionPtrInput is an input type that accepts TopicRuleLocationActionArgs, TopicRuleLocationActionPtr and TopicRuleLocationActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleLocationActionPtrInput` via:
//
//	        TopicRuleLocationActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleLocationActionPtrInput interface {
	pulumi.Input

	ToTopicRuleLocationActionPtrOutput() TopicRuleLocationActionPtrOutput
	ToTopicRuleLocationActionPtrOutputWithContext(context.Context) TopicRuleLocationActionPtrOutput
}

type topicRuleLocationActionPtrType TopicRuleLocationActionArgs

func TopicRuleLocationActionPtr(v *TopicRuleLocationActionArgs) TopicRuleLocationActionPtrInput {
	return (*topicRuleLocationActionPtrType)(v)
}

func (*topicRuleLocationActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLocationAction)(nil)).Elem()
}

func (i *topicRuleLocationActionPtrType) ToTopicRuleLocationActionPtrOutput() TopicRuleLocationActionPtrOutput {
	return i.ToTopicRuleLocationActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleLocationActionPtrType) ToTopicRuleLocationActionPtrOutputWithContext(ctx context.Context) TopicRuleLocationActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLocationActionPtrOutput)
}

type TopicRuleLocationActionOutput struct{ *pulumi.OutputState }

func (TopicRuleLocationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLocationAction)(nil)).Elem()
}

func (o TopicRuleLocationActionOutput) ToTopicRuleLocationActionOutput() TopicRuleLocationActionOutput {
	return o
}

func (o TopicRuleLocationActionOutput) ToTopicRuleLocationActionOutputWithContext(ctx context.Context) TopicRuleLocationActionOutput {
	return o
}

func (o TopicRuleLocationActionOutput) ToTopicRuleLocationActionPtrOutput() TopicRuleLocationActionPtrOutput {
	return o.ToTopicRuleLocationActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleLocationActionOutput) ToTopicRuleLocationActionPtrOutputWithContext(ctx context.Context) TopicRuleLocationActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleLocationAction) *TopicRuleLocationAction {
		return &v
	}).(TopicRuleLocationActionPtrOutput)
}

// The unique ID of the device providing the location data.
func (o TopicRuleLocationActionOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleLocationAction) string { return v.DeviceId }).(pulumi.StringOutput)
}

// A string that evaluates to a double value that represents the latitude of the device's location.
func (o TopicRuleLocationActionOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleLocationAction) string { return v.Latitude }).(pulumi.StringOutput)
}

// A string that evaluates to a double value that represents the longitude of the device's location.
func (o TopicRuleLocationActionOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleLocationAction) string { return v.Longitude }).(pulumi.StringOutput)
}

// The IAM role that grants permission to write to the Amazon Location resource.
func (o TopicRuleLocationActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleLocationAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The time that the location data was sampled. The default value is the time the MQTT message was processed.
func (o TopicRuleLocationActionOutput) Timestamp() TopicRuleTimestampPtrOutput {
	return o.ApplyT(func(v TopicRuleLocationAction) *TopicRuleTimestamp { return v.Timestamp }).(TopicRuleTimestampPtrOutput)
}

// The name of the tracker resource in Amazon Location in which the location is updated.
func (o TopicRuleLocationActionOutput) TrackerName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleLocationAction) string { return v.TrackerName }).(pulumi.StringOutput)
}

type TopicRuleLocationActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleLocationActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLocationAction)(nil)).Elem()
}

func (o TopicRuleLocationActionPtrOutput) ToTopicRuleLocationActionPtrOutput() TopicRuleLocationActionPtrOutput {
	return o
}

func (o TopicRuleLocationActionPtrOutput) ToTopicRuleLocationActionPtrOutputWithContext(ctx context.Context) TopicRuleLocationActionPtrOutput {
	return o
}

func (o TopicRuleLocationActionPtrOutput) Elem() TopicRuleLocationActionOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) TopicRuleLocationAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleLocationAction
		return ret
	}).(TopicRuleLocationActionOutput)
}

// The unique ID of the device providing the location data.
func (o TopicRuleLocationActionPtrOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceId
	}).(pulumi.StringPtrOutput)
}

// A string that evaluates to a double value that represents the latitude of the device's location.
func (o TopicRuleLocationActionPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) *string {
		if v == nil {
			return nil
		}
		return &v.Latitude
	}).(pulumi.StringPtrOutput)
}

// A string that evaluates to a double value that represents the longitude of the device's location.
func (o TopicRuleLocationActionPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) *string {
		if v == nil {
			return nil
		}
		return &v.Longitude
	}).(pulumi.StringPtrOutput)
}

// The IAM role that grants permission to write to the Amazon Location resource.
func (o TopicRuleLocationActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The time that the location data was sampled. The default value is the time the MQTT message was processed.
func (o TopicRuleLocationActionPtrOutput) Timestamp() TopicRuleTimestampPtrOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) *TopicRuleTimestamp {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(TopicRuleTimestampPtrOutput)
}

// The name of the tracker resource in Amazon Location in which the location is updated.
func (o TopicRuleLocationActionPtrOutput) TrackerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLocationAction) *string {
		if v == nil {
			return nil
		}
		return &v.TrackerName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleOpenSearchAction struct {
	// The endpoint of your OpenSearch domain.
	Endpoint string `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id string `pulumi:"id"`
	// The OpenSearch index where you want to store your data.
	Index string `pulumi:"index"`
	// The IAM role ARN that has access to OpenSearch.
	RoleArn string `pulumi:"roleArn"`
	// The type of document you are storing.
	Type string `pulumi:"type"`
}

// TopicRuleOpenSearchActionInput is an input type that accepts TopicRuleOpenSearchActionArgs and TopicRuleOpenSearchActionOutput values.
// You can construct a concrete instance of `TopicRuleOpenSearchActionInput` via:
//
//	TopicRuleOpenSearchActionArgs{...}
type TopicRuleOpenSearchActionInput interface {
	pulumi.Input

	ToTopicRuleOpenSearchActionOutput() TopicRuleOpenSearchActionOutput
	ToTopicRuleOpenSearchActionOutputWithContext(context.Context) TopicRuleOpenSearchActionOutput
}

type TopicRuleOpenSearchActionArgs struct {
	// The endpoint of your OpenSearch domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id pulumi.StringInput `pulumi:"id"`
	// The OpenSearch index where you want to store your data.
	Index pulumi.StringInput `pulumi:"index"`
	// The IAM role ARN that has access to OpenSearch.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The type of document you are storing.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TopicRuleOpenSearchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleOpenSearchAction)(nil)).Elem()
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionOutput() TopicRuleOpenSearchActionOutput {
	return i.ToTopicRuleOpenSearchActionOutputWithContext(context.Background())
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleOpenSearchActionOutput)
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return i.ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleOpenSearchActionOutput).ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx)
}

// TopicRuleOpenSearchActionPtrInput is an input type that accepts TopicRuleOpenSearchActionArgs, TopicRuleOpenSearchActionPtr and TopicRuleOpenSearchActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleOpenSearchActionPtrInput` via:
//
//	        TopicRuleOpenSearchActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleOpenSearchActionPtrInput interface {
	pulumi.Input

	ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput
	ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Context) TopicRuleOpenSearchActionPtrOutput
}

type topicRuleOpenSearchActionPtrType TopicRuleOpenSearchActionArgs

func TopicRuleOpenSearchActionPtr(v *TopicRuleOpenSearchActionArgs) TopicRuleOpenSearchActionPtrInput {
	return (*topicRuleOpenSearchActionPtrType)(v)
}

func (*topicRuleOpenSearchActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleOpenSearchAction)(nil)).Elem()
}

func (i *topicRuleOpenSearchActionPtrType) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return i.ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleOpenSearchActionPtrType) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleOpenSearchActionPtrOutput)
}

type TopicRuleOpenSearchActionOutput struct{ *pulumi.OutputState }

func (TopicRuleOpenSearchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleOpenSearchAction)(nil)).Elem()
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionOutput() TopicRuleOpenSearchActionOutput {
	return o
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionOutput {
	return o
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return o.ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleOpenSearchAction) *TopicRuleOpenSearchAction {
		return &v
	}).(TopicRuleOpenSearchActionPtrOutput)
}

// The endpoint of your OpenSearch domain.
func (o TopicRuleOpenSearchActionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleOpenSearchActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Id }).(pulumi.StringOutput)
}

// The OpenSearch index where you want to store your data.
func (o TopicRuleOpenSearchActionOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Index }).(pulumi.StringOutput)
}

// The IAM role ARN that has access to OpenSearch.
func (o TopicRuleOpenSearchActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The type of document you are storing.
func (o TopicRuleOpenSearchActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Type }).(pulumi.StringOutput)
}

type TopicRuleOpenSearchActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleOpenSearchActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleOpenSearchAction)(nil)).Elem()
}

func (o TopicRuleOpenSearchActionPtrOutput) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return o
}

func (o TopicRuleOpenSearchActionPtrOutput) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return o
}

func (o TopicRuleOpenSearchActionPtrOutput) Elem() TopicRuleOpenSearchActionOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) TopicRuleOpenSearchAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleOpenSearchAction
		return ret
	}).(TopicRuleOpenSearchActionOutput)
}

// The endpoint of your OpenSearch domain.
func (o TopicRuleOpenSearchActionPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleOpenSearchActionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The OpenSearch index where you want to store your data.
func (o TopicRuleOpenSearchActionPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that has access to OpenSearch.
func (o TopicRuleOpenSearchActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The type of document you are storing.
func (o TopicRuleOpenSearchActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TopicRulePayload struct {
	// The actions associated with the rule.
	Actions []TopicRuleAction `pulumi:"actions"`
	// The version of the SQL rules engine to use when evaluating the rule.
	//
	// The default value is 2015-10-08.
	AwsIotSqlVersion *string `pulumi:"awsIotSqlVersion"`
	// The description of the rule.
	Description *string `pulumi:"description"`
	// The action to take when an error occurs.
	ErrorAction *TopicRuleAction `pulumi:"errorAction"`
	// Specifies whether the rule is disabled.
	RuleDisabled *bool `pulumi:"ruleDisabled"`
	// The SQL statement used to query the topic. For more information, see [AWS IoT SQL Reference](https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html) in the *AWS IoT Developer Guide* .
	Sql string `pulumi:"sql"`
}

// TopicRulePayloadInput is an input type that accepts TopicRulePayloadArgs and TopicRulePayloadOutput values.
// You can construct a concrete instance of `TopicRulePayloadInput` via:
//
//	TopicRulePayloadArgs{...}
type TopicRulePayloadInput interface {
	pulumi.Input

	ToTopicRulePayloadOutput() TopicRulePayloadOutput
	ToTopicRulePayloadOutputWithContext(context.Context) TopicRulePayloadOutput
}

type TopicRulePayloadArgs struct {
	// The actions associated with the rule.
	Actions TopicRuleActionArrayInput `pulumi:"actions"`
	// The version of the SQL rules engine to use when evaluating the rule.
	//
	// The default value is 2015-10-08.
	AwsIotSqlVersion pulumi.StringPtrInput `pulumi:"awsIotSqlVersion"`
	// The description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The action to take when an error occurs.
	ErrorAction TopicRuleActionPtrInput `pulumi:"errorAction"`
	// Specifies whether the rule is disabled.
	RuleDisabled pulumi.BoolPtrInput `pulumi:"ruleDisabled"`
	// The SQL statement used to query the topic. For more information, see [AWS IoT SQL Reference](https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html) in the *AWS IoT Developer Guide* .
	Sql pulumi.StringInput `pulumi:"sql"`
}

func (TopicRulePayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePayload)(nil)).Elem()
}

func (i TopicRulePayloadArgs) ToTopicRulePayloadOutput() TopicRulePayloadOutput {
	return i.ToTopicRulePayloadOutputWithContext(context.Background())
}

func (i TopicRulePayloadArgs) ToTopicRulePayloadOutputWithContext(ctx context.Context) TopicRulePayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePayloadOutput)
}

type TopicRulePayloadOutput struct{ *pulumi.OutputState }

func (TopicRulePayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePayload)(nil)).Elem()
}

func (o TopicRulePayloadOutput) ToTopicRulePayloadOutput() TopicRulePayloadOutput {
	return o
}

func (o TopicRulePayloadOutput) ToTopicRulePayloadOutputWithContext(ctx context.Context) TopicRulePayloadOutput {
	return o
}

// The actions associated with the rule.
func (o TopicRulePayloadOutput) Actions() TopicRuleActionArrayOutput {
	return o.ApplyT(func(v TopicRulePayload) []TopicRuleAction { return v.Actions }).(TopicRuleActionArrayOutput)
}

// The version of the SQL rules engine to use when evaluating the rule.
//
// The default value is 2015-10-08.
func (o TopicRulePayloadOutput) AwsIotSqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *string { return v.AwsIotSqlVersion }).(pulumi.StringPtrOutput)
}

// The description of the rule.
func (o TopicRulePayloadOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The action to take when an error occurs.
func (o TopicRulePayloadOutput) ErrorAction() TopicRuleActionPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *TopicRuleAction { return v.ErrorAction }).(TopicRuleActionPtrOutput)
}

// Specifies whether the rule is disabled.
func (o TopicRulePayloadOutput) RuleDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *bool { return v.RuleDisabled }).(pulumi.BoolPtrOutput)
}

// The SQL statement used to query the topic. For more information, see [AWS IoT SQL Reference](https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html) in the *AWS IoT Developer Guide* .
func (o TopicRulePayloadOutput) Sql() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRulePayload) string { return v.Sql }).(pulumi.StringOutput)
}

type TopicRulePayloadPtrOutput struct{ *pulumi.OutputState }

func (TopicRulePayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePayload)(nil)).Elem()
}

func (o TopicRulePayloadPtrOutput) ToTopicRulePayloadPtrOutput() TopicRulePayloadPtrOutput {
	return o
}

func (o TopicRulePayloadPtrOutput) ToTopicRulePayloadPtrOutputWithContext(ctx context.Context) TopicRulePayloadPtrOutput {
	return o
}

func (o TopicRulePayloadPtrOutput) Elem() TopicRulePayloadOutput {
	return o.ApplyT(func(v *TopicRulePayload) TopicRulePayload {
		if v != nil {
			return *v
		}
		var ret TopicRulePayload
		return ret
	}).(TopicRulePayloadOutput)
}

// The actions associated with the rule.
func (o TopicRulePayloadPtrOutput) Actions() TopicRuleActionArrayOutput {
	return o.ApplyT(func(v *TopicRulePayload) []TopicRuleAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TopicRuleActionArrayOutput)
}

// The version of the SQL rules engine to use when evaluating the rule.
//
// The default value is 2015-10-08.
func (o TopicRulePayloadPtrOutput) AwsIotSqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *string {
		if v == nil {
			return nil
		}
		return v.AwsIotSqlVersion
	}).(pulumi.StringPtrOutput)
}

// The description of the rule.
func (o TopicRulePayloadPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The action to take when an error occurs.
func (o TopicRulePayloadPtrOutput) ErrorAction() TopicRuleActionPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *TopicRuleAction {
		if v == nil {
			return nil
		}
		return v.ErrorAction
	}).(TopicRuleActionPtrOutput)
}

// Specifies whether the rule is disabled.
func (o TopicRulePayloadPtrOutput) RuleDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *bool {
		if v == nil {
			return nil
		}
		return v.RuleDisabled
	}).(pulumi.BoolPtrOutput)
}

// The SQL statement used to query the topic. For more information, see [AWS IoT SQL Reference](https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html) in the *AWS IoT Developer Guide* .
func (o TopicRulePayloadPtrOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *string {
		if v == nil {
			return nil
		}
		return &v.Sql
	}).(pulumi.StringPtrOutput)
}

type TopicRulePutAssetPropertyValueEntry struct {
	// The ID of the AWS IoT SiteWise asset. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
	AssetId *string `pulumi:"assetId"`
	// Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID.
	EntryId *string `pulumi:"entryId"`
	// The name of the property alias associated with your asset property. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
	PropertyAlias *string `pulumi:"propertyAlias"`
	// The ID of the asset's property. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
	PropertyId *string `pulumi:"propertyId"`
	// A list of property values to insert that each contain timestamp, quality, and value (TQV) information.
	PropertyValues []TopicRuleAssetPropertyValue `pulumi:"propertyValues"`
}

// TopicRulePutAssetPropertyValueEntryInput is an input type that accepts TopicRulePutAssetPropertyValueEntryArgs and TopicRulePutAssetPropertyValueEntryOutput values.
// You can construct a concrete instance of `TopicRulePutAssetPropertyValueEntryInput` via:
//
//	TopicRulePutAssetPropertyValueEntryArgs{...}
type TopicRulePutAssetPropertyValueEntryInput interface {
	pulumi.Input

	ToTopicRulePutAssetPropertyValueEntryOutput() TopicRulePutAssetPropertyValueEntryOutput
	ToTopicRulePutAssetPropertyValueEntryOutputWithContext(context.Context) TopicRulePutAssetPropertyValueEntryOutput
}

type TopicRulePutAssetPropertyValueEntryArgs struct {
	// The ID of the AWS IoT SiteWise asset. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
	AssetId pulumi.StringPtrInput `pulumi:"assetId"`
	// Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID.
	EntryId pulumi.StringPtrInput `pulumi:"entryId"`
	// The name of the property alias associated with your asset property. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
	PropertyAlias pulumi.StringPtrInput `pulumi:"propertyAlias"`
	// The ID of the asset's property. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
	PropertyId pulumi.StringPtrInput `pulumi:"propertyId"`
	// A list of property values to insert that each contain timestamp, quality, and value (TQV) information.
	PropertyValues TopicRuleAssetPropertyValueArrayInput `pulumi:"propertyValues"`
}

func (TopicRulePutAssetPropertyValueEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (i TopicRulePutAssetPropertyValueEntryArgs) ToTopicRulePutAssetPropertyValueEntryOutput() TopicRulePutAssetPropertyValueEntryOutput {
	return i.ToTopicRulePutAssetPropertyValueEntryOutputWithContext(context.Background())
}

func (i TopicRulePutAssetPropertyValueEntryArgs) ToTopicRulePutAssetPropertyValueEntryOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutAssetPropertyValueEntryOutput)
}

// TopicRulePutAssetPropertyValueEntryArrayInput is an input type that accepts TopicRulePutAssetPropertyValueEntryArray and TopicRulePutAssetPropertyValueEntryArrayOutput values.
// You can construct a concrete instance of `TopicRulePutAssetPropertyValueEntryArrayInput` via:
//
//	TopicRulePutAssetPropertyValueEntryArray{ TopicRulePutAssetPropertyValueEntryArgs{...} }
type TopicRulePutAssetPropertyValueEntryArrayInput interface {
	pulumi.Input

	ToTopicRulePutAssetPropertyValueEntryArrayOutput() TopicRulePutAssetPropertyValueEntryArrayOutput
	ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(context.Context) TopicRulePutAssetPropertyValueEntryArrayOutput
}

type TopicRulePutAssetPropertyValueEntryArray []TopicRulePutAssetPropertyValueEntryInput

func (TopicRulePutAssetPropertyValueEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (i TopicRulePutAssetPropertyValueEntryArray) ToTopicRulePutAssetPropertyValueEntryArrayOutput() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return i.ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(context.Background())
}

func (i TopicRulePutAssetPropertyValueEntryArray) ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutAssetPropertyValueEntryArrayOutput)
}

type TopicRulePutAssetPropertyValueEntryOutput struct{ *pulumi.OutputState }

func (TopicRulePutAssetPropertyValueEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (o TopicRulePutAssetPropertyValueEntryOutput) ToTopicRulePutAssetPropertyValueEntryOutput() TopicRulePutAssetPropertyValueEntryOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryOutput) ToTopicRulePutAssetPropertyValueEntryOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryOutput {
	return o
}

// The ID of the AWS IoT SiteWise asset. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
func (o TopicRulePutAssetPropertyValueEntryOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.AssetId }).(pulumi.StringPtrOutput)
}

// Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID.
func (o TopicRulePutAssetPropertyValueEntryOutput) EntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.EntryId }).(pulumi.StringPtrOutput)
}

// The name of the property alias associated with your asset property. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
func (o TopicRulePutAssetPropertyValueEntryOutput) PropertyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.PropertyAlias }).(pulumi.StringPtrOutput)
}

// The ID of the asset's property. You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId` . Accepts substitution templates.
func (o TopicRulePutAssetPropertyValueEntryOutput) PropertyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.PropertyId }).(pulumi.StringPtrOutput)
}

// A list of property values to insert that each contain timestamp, quality, and value (TQV) information.
func (o TopicRulePutAssetPropertyValueEntryOutput) PropertyValues() TopicRuleAssetPropertyValueArrayOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) []TopicRuleAssetPropertyValue { return v.PropertyValues }).(TopicRuleAssetPropertyValueArrayOutput)
}

type TopicRulePutAssetPropertyValueEntryArrayOutput struct{ *pulumi.OutputState }

func (TopicRulePutAssetPropertyValueEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (o TopicRulePutAssetPropertyValueEntryArrayOutput) ToTopicRulePutAssetPropertyValueEntryArrayOutput() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryArrayOutput) ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryArrayOutput) Index(i pulumi.IntInput) TopicRulePutAssetPropertyValueEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRulePutAssetPropertyValueEntry {
		return vs[0].([]TopicRulePutAssetPropertyValueEntry)[vs[1].(int)]
	}).(TopicRulePutAssetPropertyValueEntryOutput)
}

type TopicRulePutItemInput struct {
	// The table where the message data will be written.
	TableName string `pulumi:"tableName"`
}

// TopicRulePutItemInputInput is an input type that accepts TopicRulePutItemInputArgs and TopicRulePutItemInputOutput values.
// You can construct a concrete instance of `TopicRulePutItemInputInput` via:
//
//	TopicRulePutItemInputArgs{...}
type TopicRulePutItemInputInput interface {
	pulumi.Input

	ToTopicRulePutItemInputOutput() TopicRulePutItemInputOutput
	ToTopicRulePutItemInputOutputWithContext(context.Context) TopicRulePutItemInputOutput
}

type TopicRulePutItemInputArgs struct {
	// The table where the message data will be written.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (TopicRulePutItemInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutItemInput)(nil)).Elem()
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputOutput() TopicRulePutItemInputOutput {
	return i.ToTopicRulePutItemInputOutputWithContext(context.Background())
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputOutputWithContext(ctx context.Context) TopicRulePutItemInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutItemInputOutput)
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return i.ToTopicRulePutItemInputPtrOutputWithContext(context.Background())
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutItemInputOutput).ToTopicRulePutItemInputPtrOutputWithContext(ctx)
}

// TopicRulePutItemInputPtrInput is an input type that accepts TopicRulePutItemInputArgs, TopicRulePutItemInputPtr and TopicRulePutItemInputPtrOutput values.
// You can construct a concrete instance of `TopicRulePutItemInputPtrInput` via:
//
//	        TopicRulePutItemInputArgs{...}
//
//	or:
//
//	        nil
type TopicRulePutItemInputPtrInput interface {
	pulumi.Input

	ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput
	ToTopicRulePutItemInputPtrOutputWithContext(context.Context) TopicRulePutItemInputPtrOutput
}

type topicRulePutItemInputPtrType TopicRulePutItemInputArgs

func TopicRulePutItemInputPtr(v *TopicRulePutItemInputArgs) TopicRulePutItemInputPtrInput {
	return (*topicRulePutItemInputPtrType)(v)
}

func (*topicRulePutItemInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePutItemInput)(nil)).Elem()
}

func (i *topicRulePutItemInputPtrType) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return i.ToTopicRulePutItemInputPtrOutputWithContext(context.Background())
}

func (i *topicRulePutItemInputPtrType) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutItemInputPtrOutput)
}

type TopicRulePutItemInputOutput struct{ *pulumi.OutputState }

func (TopicRulePutItemInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutItemInput)(nil)).Elem()
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputOutput() TopicRulePutItemInputOutput {
	return o
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputOutputWithContext(ctx context.Context) TopicRulePutItemInputOutput {
	return o
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return o.ToTopicRulePutItemInputPtrOutputWithContext(context.Background())
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRulePutItemInput) *TopicRulePutItemInput {
		return &v
	}).(TopicRulePutItemInputPtrOutput)
}

// The table where the message data will be written.
func (o TopicRulePutItemInputOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRulePutItemInput) string { return v.TableName }).(pulumi.StringOutput)
}

type TopicRulePutItemInputPtrOutput struct{ *pulumi.OutputState }

func (TopicRulePutItemInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePutItemInput)(nil)).Elem()
}

func (o TopicRulePutItemInputPtrOutput) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return o
}

func (o TopicRulePutItemInputPtrOutput) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return o
}

func (o TopicRulePutItemInputPtrOutput) Elem() TopicRulePutItemInputOutput {
	return o.ApplyT(func(v *TopicRulePutItemInput) TopicRulePutItemInput {
		if v != nil {
			return *v
		}
		var ret TopicRulePutItemInput
		return ret
	}).(TopicRulePutItemInputOutput)
}

// The table where the message data will be written.
func (o TopicRulePutItemInputPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePutItemInput) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleRepublishAction struct {
	// MQTT Version 5.0 headers information. For more information, see [MQTT](https://docs.aws.amazon.com//iot/latest/developerguide/mqtt.html) in the IoT Core Developer Guide.
	Headers *TopicRuleRepublishActionHeaders `pulumi:"headers"`
	// The Quality of Service (QoS) level to use when republishing messages. The default value is 0.
	Qos *int `pulumi:"qos"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The name of the MQTT topic.
	Topic string `pulumi:"topic"`
}

// TopicRuleRepublishActionInput is an input type that accepts TopicRuleRepublishActionArgs and TopicRuleRepublishActionOutput values.
// You can construct a concrete instance of `TopicRuleRepublishActionInput` via:
//
//	TopicRuleRepublishActionArgs{...}
type TopicRuleRepublishActionInput interface {
	pulumi.Input

	ToTopicRuleRepublishActionOutput() TopicRuleRepublishActionOutput
	ToTopicRuleRepublishActionOutputWithContext(context.Context) TopicRuleRepublishActionOutput
}

type TopicRuleRepublishActionArgs struct {
	// MQTT Version 5.0 headers information. For more information, see [MQTT](https://docs.aws.amazon.com//iot/latest/developerguide/mqtt.html) in the IoT Core Developer Guide.
	Headers TopicRuleRepublishActionHeadersPtrInput `pulumi:"headers"`
	// The Quality of Service (QoS) level to use when republishing messages. The default value is 0.
	Qos pulumi.IntPtrInput `pulumi:"qos"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the MQTT topic.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (TopicRuleRepublishActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublishAction)(nil)).Elem()
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionOutput() TopicRuleRepublishActionOutput {
	return i.ToTopicRuleRepublishActionOutputWithContext(context.Background())
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionOutputWithContext(ctx context.Context) TopicRuleRepublishActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionOutput)
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return i.ToTopicRuleRepublishActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionOutput).ToTopicRuleRepublishActionPtrOutputWithContext(ctx)
}

// TopicRuleRepublishActionPtrInput is an input type that accepts TopicRuleRepublishActionArgs, TopicRuleRepublishActionPtr and TopicRuleRepublishActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleRepublishActionPtrInput` via:
//
//	        TopicRuleRepublishActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleRepublishActionPtrInput interface {
	pulumi.Input

	ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput
	ToTopicRuleRepublishActionPtrOutputWithContext(context.Context) TopicRuleRepublishActionPtrOutput
}

type topicRuleRepublishActionPtrType TopicRuleRepublishActionArgs

func TopicRuleRepublishActionPtr(v *TopicRuleRepublishActionArgs) TopicRuleRepublishActionPtrInput {
	return (*topicRuleRepublishActionPtrType)(v)
}

func (*topicRuleRepublishActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublishAction)(nil)).Elem()
}

func (i *topicRuleRepublishActionPtrType) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return i.ToTopicRuleRepublishActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleRepublishActionPtrType) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionPtrOutput)
}

type TopicRuleRepublishActionOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublishAction)(nil)).Elem()
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionOutput() TopicRuleRepublishActionOutput {
	return o
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionOutputWithContext(ctx context.Context) TopicRuleRepublishActionOutput {
	return o
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return o.ToTopicRuleRepublishActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleRepublishAction) *TopicRuleRepublishAction {
		return &v
	}).(TopicRuleRepublishActionPtrOutput)
}

// MQTT Version 5.0 headers information. For more information, see [MQTT](https://docs.aws.amazon.com//iot/latest/developerguide/mqtt.html) in the IoT Core Developer Guide.
func (o TopicRuleRepublishActionOutput) Headers() TopicRuleRepublishActionHeadersPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) *TopicRuleRepublishActionHeaders { return v.Headers }).(TopicRuleRepublishActionHeadersPtrOutput)
}

// The Quality of Service (QoS) level to use when republishing messages. The default value is 0.
func (o TopicRuleRepublishActionOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) *int { return v.Qos }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleRepublishActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the MQTT topic.
func (o TopicRuleRepublishActionOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) string { return v.Topic }).(pulumi.StringOutput)
}

type TopicRuleRepublishActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublishAction)(nil)).Elem()
}

func (o TopicRuleRepublishActionPtrOutput) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return o
}

func (o TopicRuleRepublishActionPtrOutput) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return o
}

func (o TopicRuleRepublishActionPtrOutput) Elem() TopicRuleRepublishActionOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) TopicRuleRepublishAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleRepublishAction
		return ret
	}).(TopicRuleRepublishActionOutput)
}

// MQTT Version 5.0 headers information. For more information, see [MQTT](https://docs.aws.amazon.com//iot/latest/developerguide/mqtt.html) in the IoT Core Developer Guide.
func (o TopicRuleRepublishActionPtrOutput) Headers() TopicRuleRepublishActionHeadersPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *TopicRuleRepublishActionHeaders {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(TopicRuleRepublishActionHeadersPtrOutput)
}

// The Quality of Service (QoS) level to use when republishing messages. The default value is 0.
func (o TopicRuleRepublishActionPtrOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *int {
		if v == nil {
			return nil
		}
		return v.Qos
	}).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleRepublishActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the MQTT topic.
func (o TopicRuleRepublishActionPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type TopicRuleRepublishActionHeaders struct {
	// A UTF-8 encoded string that describes the content of the publishing message.
	//
	// For more information, see [Content Type](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118) in the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	ContentType *string `pulumi:"contentType"`
	// The base64-encoded binary data used by the sender of the request message to identify which request the response message is for.
	//
	// For more information, see [Correlation Data](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115) in the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	//
	// > This binary data must be base64-encoded.
	CorrelationData *string `pulumi:"correlationData"`
	// A user-defined integer value that represents the message expiry interval at the broker. If the messages haven't been sent to the subscribers within that interval, the message expires and is removed. The value of `messageExpiry` represents the number of seconds before it expires. For more information about the limits of `messageExpiry` , see [Message broker and protocol limits and quotas](https://docs.aws.amazon.com//general/latest/gr/iot-core.html#limits_iot) in the IoT Core Reference Guide.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	MessageExpiry *string `pulumi:"messageExpiry"`
	// An `Enum` string value that indicates whether the payload is formatted as UTF-8.
	//
	// Valid values are `UNSPECIFIED_BYTES` and `UTF8_DATA` .
	//
	// For more information, see [Payload Format Indicator](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111) from the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	PayloadFormatIndicator *string `pulumi:"payloadFormatIndicator"`
	// A UTF-8 encoded string that's used as the topic name for a response message. The response topic is used to describe the topic to which the receiver should publish as part of the request-response flow. The topic must not contain wildcard characters.
	//
	// For more information, see [Response Topic](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114) in the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	ResponseTopic *string `pulumi:"responseTopic"`
	// An array of key-value pairs that you define in the MQTT5 header.
	UserProperties []TopicRuleUserProperty `pulumi:"userProperties"`
}

// TopicRuleRepublishActionHeadersInput is an input type that accepts TopicRuleRepublishActionHeadersArgs and TopicRuleRepublishActionHeadersOutput values.
// You can construct a concrete instance of `TopicRuleRepublishActionHeadersInput` via:
//
//	TopicRuleRepublishActionHeadersArgs{...}
type TopicRuleRepublishActionHeadersInput interface {
	pulumi.Input

	ToTopicRuleRepublishActionHeadersOutput() TopicRuleRepublishActionHeadersOutput
	ToTopicRuleRepublishActionHeadersOutputWithContext(context.Context) TopicRuleRepublishActionHeadersOutput
}

type TopicRuleRepublishActionHeadersArgs struct {
	// A UTF-8 encoded string that describes the content of the publishing message.
	//
	// For more information, see [Content Type](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118) in the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// The base64-encoded binary data used by the sender of the request message to identify which request the response message is for.
	//
	// For more information, see [Correlation Data](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115) in the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	//
	// > This binary data must be base64-encoded.
	CorrelationData pulumi.StringPtrInput `pulumi:"correlationData"`
	// A user-defined integer value that represents the message expiry interval at the broker. If the messages haven't been sent to the subscribers within that interval, the message expires and is removed. The value of `messageExpiry` represents the number of seconds before it expires. For more information about the limits of `messageExpiry` , see [Message broker and protocol limits and quotas](https://docs.aws.amazon.com//general/latest/gr/iot-core.html#limits_iot) in the IoT Core Reference Guide.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	MessageExpiry pulumi.StringPtrInput `pulumi:"messageExpiry"`
	// An `Enum` string value that indicates whether the payload is formatted as UTF-8.
	//
	// Valid values are `UNSPECIFIED_BYTES` and `UTF8_DATA` .
	//
	// For more information, see [Payload Format Indicator](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111) from the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	PayloadFormatIndicator pulumi.StringPtrInput `pulumi:"payloadFormatIndicator"`
	// A UTF-8 encoded string that's used as the topic name for a response message. The response topic is used to describe the topic to which the receiver should publish as part of the request-response flow. The topic must not contain wildcard characters.
	//
	// For more information, see [Response Topic](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114) in the MQTT Version 5.0 specification.
	//
	// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
	ResponseTopic pulumi.StringPtrInput `pulumi:"responseTopic"`
	// An array of key-value pairs that you define in the MQTT5 header.
	UserProperties TopicRuleUserPropertyArrayInput `pulumi:"userProperties"`
}

func (TopicRuleRepublishActionHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublishActionHeaders)(nil)).Elem()
}

func (i TopicRuleRepublishActionHeadersArgs) ToTopicRuleRepublishActionHeadersOutput() TopicRuleRepublishActionHeadersOutput {
	return i.ToTopicRuleRepublishActionHeadersOutputWithContext(context.Background())
}

func (i TopicRuleRepublishActionHeadersArgs) ToTopicRuleRepublishActionHeadersOutputWithContext(ctx context.Context) TopicRuleRepublishActionHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionHeadersOutput)
}

func (i TopicRuleRepublishActionHeadersArgs) ToTopicRuleRepublishActionHeadersPtrOutput() TopicRuleRepublishActionHeadersPtrOutput {
	return i.ToTopicRuleRepublishActionHeadersPtrOutputWithContext(context.Background())
}

func (i TopicRuleRepublishActionHeadersArgs) ToTopicRuleRepublishActionHeadersPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionHeadersOutput).ToTopicRuleRepublishActionHeadersPtrOutputWithContext(ctx)
}

// TopicRuleRepublishActionHeadersPtrInput is an input type that accepts TopicRuleRepublishActionHeadersArgs, TopicRuleRepublishActionHeadersPtr and TopicRuleRepublishActionHeadersPtrOutput values.
// You can construct a concrete instance of `TopicRuleRepublishActionHeadersPtrInput` via:
//
//	        TopicRuleRepublishActionHeadersArgs{...}
//
//	or:
//
//	        nil
type TopicRuleRepublishActionHeadersPtrInput interface {
	pulumi.Input

	ToTopicRuleRepublishActionHeadersPtrOutput() TopicRuleRepublishActionHeadersPtrOutput
	ToTopicRuleRepublishActionHeadersPtrOutputWithContext(context.Context) TopicRuleRepublishActionHeadersPtrOutput
}

type topicRuleRepublishActionHeadersPtrType TopicRuleRepublishActionHeadersArgs

func TopicRuleRepublishActionHeadersPtr(v *TopicRuleRepublishActionHeadersArgs) TopicRuleRepublishActionHeadersPtrInput {
	return (*topicRuleRepublishActionHeadersPtrType)(v)
}

func (*topicRuleRepublishActionHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublishActionHeaders)(nil)).Elem()
}

func (i *topicRuleRepublishActionHeadersPtrType) ToTopicRuleRepublishActionHeadersPtrOutput() TopicRuleRepublishActionHeadersPtrOutput {
	return i.ToTopicRuleRepublishActionHeadersPtrOutputWithContext(context.Background())
}

func (i *topicRuleRepublishActionHeadersPtrType) ToTopicRuleRepublishActionHeadersPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionHeadersPtrOutput)
}

type TopicRuleRepublishActionHeadersOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishActionHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublishActionHeaders)(nil)).Elem()
}

func (o TopicRuleRepublishActionHeadersOutput) ToTopicRuleRepublishActionHeadersOutput() TopicRuleRepublishActionHeadersOutput {
	return o
}

func (o TopicRuleRepublishActionHeadersOutput) ToTopicRuleRepublishActionHeadersOutputWithContext(ctx context.Context) TopicRuleRepublishActionHeadersOutput {
	return o
}

func (o TopicRuleRepublishActionHeadersOutput) ToTopicRuleRepublishActionHeadersPtrOutput() TopicRuleRepublishActionHeadersPtrOutput {
	return o.ToTopicRuleRepublishActionHeadersPtrOutputWithContext(context.Background())
}

func (o TopicRuleRepublishActionHeadersOutput) ToTopicRuleRepublishActionHeadersPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleRepublishActionHeaders) *TopicRuleRepublishActionHeaders {
		return &v
	}).(TopicRuleRepublishActionHeadersPtrOutput)
}

// A UTF-8 encoded string that describes the content of the publishing message.
//
// For more information, see [Content Type](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118) in the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishActionHeaders) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// The base64-encoded binary data used by the sender of the request message to identify which request the response message is for.
//
// For more information, see [Correlation Data](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115) in the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
//
// > This binary data must be base64-encoded.
func (o TopicRuleRepublishActionHeadersOutput) CorrelationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishActionHeaders) *string { return v.CorrelationData }).(pulumi.StringPtrOutput)
}

// A user-defined integer value that represents the message expiry interval at the broker. If the messages haven't been sent to the subscribers within that interval, the message expires and is removed. The value of `messageExpiry` represents the number of seconds before it expires. For more information about the limits of `messageExpiry` , see [Message broker and protocol limits and quotas](https://docs.aws.amazon.com//general/latest/gr/iot-core.html#limits_iot) in the IoT Core Reference Guide.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersOutput) MessageExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishActionHeaders) *string { return v.MessageExpiry }).(pulumi.StringPtrOutput)
}

// An `Enum` string value that indicates whether the payload is formatted as UTF-8.
//
// Valid values are `UNSPECIFIED_BYTES` and `UTF8_DATA` .
//
// For more information, see [Payload Format Indicator](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111) from the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersOutput) PayloadFormatIndicator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishActionHeaders) *string { return v.PayloadFormatIndicator }).(pulumi.StringPtrOutput)
}

// A UTF-8 encoded string that's used as the topic name for a response message. The response topic is used to describe the topic to which the receiver should publish as part of the request-response flow. The topic must not contain wildcard characters.
//
// For more information, see [Response Topic](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114) in the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersOutput) ResponseTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishActionHeaders) *string { return v.ResponseTopic }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs that you define in the MQTT5 header.
func (o TopicRuleRepublishActionHeadersOutput) UserProperties() TopicRuleUserPropertyArrayOutput {
	return o.ApplyT(func(v TopicRuleRepublishActionHeaders) []TopicRuleUserProperty { return v.UserProperties }).(TopicRuleUserPropertyArrayOutput)
}

type TopicRuleRepublishActionHeadersPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishActionHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublishActionHeaders)(nil)).Elem()
}

func (o TopicRuleRepublishActionHeadersPtrOutput) ToTopicRuleRepublishActionHeadersPtrOutput() TopicRuleRepublishActionHeadersPtrOutput {
	return o
}

func (o TopicRuleRepublishActionHeadersPtrOutput) ToTopicRuleRepublishActionHeadersPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionHeadersPtrOutput {
	return o
}

func (o TopicRuleRepublishActionHeadersPtrOutput) Elem() TopicRuleRepublishActionHeadersOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) TopicRuleRepublishActionHeaders {
		if v != nil {
			return *v
		}
		var ret TopicRuleRepublishActionHeaders
		return ret
	}).(TopicRuleRepublishActionHeadersOutput)
}

// A UTF-8 encoded string that describes the content of the publishing message.
//
// For more information, see [Content Type](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118) in the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The base64-encoded binary data used by the sender of the request message to identify which request the response message is for.
//
// For more information, see [Correlation Data](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115) in the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
//
// > This binary data must be base64-encoded.
func (o TopicRuleRepublishActionHeadersPtrOutput) CorrelationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationData
	}).(pulumi.StringPtrOutput)
}

// A user-defined integer value that represents the message expiry interval at the broker. If the messages haven't been sent to the subscribers within that interval, the message expires and is removed. The value of `messageExpiry` represents the number of seconds before it expires. For more information about the limits of `messageExpiry` , see [Message broker and protocol limits and quotas](https://docs.aws.amazon.com//general/latest/gr/iot-core.html#limits_iot) in the IoT Core Reference Guide.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersPtrOutput) MessageExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.MessageExpiry
	}).(pulumi.StringPtrOutput)
}

// An `Enum` string value that indicates whether the payload is formatted as UTF-8.
//
// Valid values are `UNSPECIFIED_BYTES` and `UTF8_DATA` .
//
// For more information, see [Payload Format Indicator](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111) from the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersPtrOutput) PayloadFormatIndicator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.PayloadFormatIndicator
	}).(pulumi.StringPtrOutput)
}

// A UTF-8 encoded string that's used as the topic name for a response message. The response topic is used to describe the topic to which the receiver should publish as part of the request-response flow. The topic must not contain wildcard characters.
//
// For more information, see [Response Topic](https://docs.aws.amazon.com/https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114) in the MQTT Version 5.0 specification.
//
// Supports [substitution templates](https://docs.aws.amazon.com//iot/latest/developerguide/iot-substitution-templates.html) .
func (o TopicRuleRepublishActionHeadersPtrOutput) ResponseTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.ResponseTopic
	}).(pulumi.StringPtrOutput)
}

// An array of key-value pairs that you define in the MQTT5 header.
func (o TopicRuleRepublishActionHeadersPtrOutput) UserProperties() TopicRuleUserPropertyArrayOutput {
	return o.ApplyT(func(v *TopicRuleRepublishActionHeaders) []TopicRuleUserProperty {
		if v == nil {
			return nil
		}
		return v.UserProperties
	}).(TopicRuleUserPropertyArrayOutput)
}

type TopicRuleS3Action struct {
	// The Amazon S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see [S3 canned ACLs](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) .
	CannedAcl *TopicRuleCannedAccessControlList `pulumi:"cannedAcl"`
	// The object key. For more information, see [Actions, resources, and condition keys for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html) .
	Key string `pulumi:"key"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleS3ActionInput is an input type that accepts TopicRuleS3ActionArgs and TopicRuleS3ActionOutput values.
// You can construct a concrete instance of `TopicRuleS3ActionInput` via:
//
//	TopicRuleS3ActionArgs{...}
type TopicRuleS3ActionInput interface {
	pulumi.Input

	ToTopicRuleS3ActionOutput() TopicRuleS3ActionOutput
	ToTopicRuleS3ActionOutputWithContext(context.Context) TopicRuleS3ActionOutput
}

type TopicRuleS3ActionArgs struct {
	// The Amazon S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see [S3 canned ACLs](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) .
	CannedAcl TopicRuleCannedAccessControlListPtrInput `pulumi:"cannedAcl"`
	// The object key. For more information, see [Actions, resources, and condition keys for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html) .
	Key pulumi.StringInput `pulumi:"key"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleS3ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3Action)(nil)).Elem()
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionOutput() TopicRuleS3ActionOutput {
	return i.ToTopicRuleS3ActionOutputWithContext(context.Background())
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionOutputWithContext(ctx context.Context) TopicRuleS3ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3ActionOutput)
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return i.ToTopicRuleS3ActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3ActionOutput).ToTopicRuleS3ActionPtrOutputWithContext(ctx)
}

// TopicRuleS3ActionPtrInput is an input type that accepts TopicRuleS3ActionArgs, TopicRuleS3ActionPtr and TopicRuleS3ActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleS3ActionPtrInput` via:
//
//	        TopicRuleS3ActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleS3ActionPtrInput interface {
	pulumi.Input

	ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput
	ToTopicRuleS3ActionPtrOutputWithContext(context.Context) TopicRuleS3ActionPtrOutput
}

type topicRuleS3ActionPtrType TopicRuleS3ActionArgs

func TopicRuleS3ActionPtr(v *TopicRuleS3ActionArgs) TopicRuleS3ActionPtrInput {
	return (*topicRuleS3ActionPtrType)(v)
}

func (*topicRuleS3ActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3Action)(nil)).Elem()
}

func (i *topicRuleS3ActionPtrType) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return i.ToTopicRuleS3ActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleS3ActionPtrType) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3ActionPtrOutput)
}

type TopicRuleS3ActionOutput struct{ *pulumi.OutputState }

func (TopicRuleS3ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3Action)(nil)).Elem()
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionOutput() TopicRuleS3ActionOutput {
	return o
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionOutputWithContext(ctx context.Context) TopicRuleS3ActionOutput {
	return o
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return o.ToTopicRuleS3ActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleS3Action) *TopicRuleS3Action {
		return &v
	}).(TopicRuleS3ActionPtrOutput)
}

// The Amazon S3 bucket.
func (o TopicRuleS3ActionOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3Action) string { return v.BucketName }).(pulumi.StringOutput)
}

// The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see [S3 canned ACLs](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) .
func (o TopicRuleS3ActionOutput) CannedAcl() TopicRuleCannedAccessControlListPtrOutput {
	return o.ApplyT(func(v TopicRuleS3Action) *TopicRuleCannedAccessControlList { return v.CannedAcl }).(TopicRuleCannedAccessControlListPtrOutput)
}

// The object key. For more information, see [Actions, resources, and condition keys for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html) .
func (o TopicRuleS3ActionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3Action) string { return v.Key }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleS3ActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3Action) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleS3ActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleS3ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3Action)(nil)).Elem()
}

func (o TopicRuleS3ActionPtrOutput) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return o
}

func (o TopicRuleS3ActionPtrOutput) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return o
}

func (o TopicRuleS3ActionPtrOutput) Elem() TopicRuleS3ActionOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) TopicRuleS3Action {
		if v != nil {
			return *v
		}
		var ret TopicRuleS3Action
		return ret
	}).(TopicRuleS3ActionOutput)
}

// The Amazon S3 bucket.
func (o TopicRuleS3ActionPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see [S3 canned ACLs](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) .
func (o TopicRuleS3ActionPtrOutput) CannedAcl() TopicRuleCannedAccessControlListPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *TopicRuleCannedAccessControlList {
		if v == nil {
			return nil
		}
		return v.CannedAcl
	}).(TopicRuleCannedAccessControlListPtrOutput)
}

// The object key. For more information, see [Actions, resources, and condition keys for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html) .
func (o TopicRuleS3ActionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleS3ActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSigV4Authorization struct {
	// The ARN of the signing role.
	RoleArn string `pulumi:"roleArn"`
	// The service name to use while signing with Sig V4.
	ServiceName string `pulumi:"serviceName"`
	// The signing region.
	SigningRegion string `pulumi:"signingRegion"`
}

// TopicRuleSigV4AuthorizationInput is an input type that accepts TopicRuleSigV4AuthorizationArgs and TopicRuleSigV4AuthorizationOutput values.
// You can construct a concrete instance of `TopicRuleSigV4AuthorizationInput` via:
//
//	TopicRuleSigV4AuthorizationArgs{...}
type TopicRuleSigV4AuthorizationInput interface {
	pulumi.Input

	ToTopicRuleSigV4AuthorizationOutput() TopicRuleSigV4AuthorizationOutput
	ToTopicRuleSigV4AuthorizationOutputWithContext(context.Context) TopicRuleSigV4AuthorizationOutput
}

type TopicRuleSigV4AuthorizationArgs struct {
	// The ARN of the signing role.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The service name to use while signing with Sig V4.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The signing region.
	SigningRegion pulumi.StringInput `pulumi:"signingRegion"`
}

func (TopicRuleSigV4AuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSigV4Authorization)(nil)).Elem()
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationOutput() TopicRuleSigV4AuthorizationOutput {
	return i.ToTopicRuleSigV4AuthorizationOutputWithContext(context.Background())
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSigV4AuthorizationOutput)
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return i.ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Background())
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSigV4AuthorizationOutput).ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx)
}

// TopicRuleSigV4AuthorizationPtrInput is an input type that accepts TopicRuleSigV4AuthorizationArgs, TopicRuleSigV4AuthorizationPtr and TopicRuleSigV4AuthorizationPtrOutput values.
// You can construct a concrete instance of `TopicRuleSigV4AuthorizationPtrInput` via:
//
//	        TopicRuleSigV4AuthorizationArgs{...}
//
//	or:
//
//	        nil
type TopicRuleSigV4AuthorizationPtrInput interface {
	pulumi.Input

	ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput
	ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Context) TopicRuleSigV4AuthorizationPtrOutput
}

type topicRuleSigV4AuthorizationPtrType TopicRuleSigV4AuthorizationArgs

func TopicRuleSigV4AuthorizationPtr(v *TopicRuleSigV4AuthorizationArgs) TopicRuleSigV4AuthorizationPtrInput {
	return (*topicRuleSigV4AuthorizationPtrType)(v)
}

func (*topicRuleSigV4AuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSigV4Authorization)(nil)).Elem()
}

func (i *topicRuleSigV4AuthorizationPtrType) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return i.ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Background())
}

func (i *topicRuleSigV4AuthorizationPtrType) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSigV4AuthorizationPtrOutput)
}

type TopicRuleSigV4AuthorizationOutput struct{ *pulumi.OutputState }

func (TopicRuleSigV4AuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSigV4Authorization)(nil)).Elem()
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationOutput() TopicRuleSigV4AuthorizationOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return o.ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Background())
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleSigV4Authorization) *TopicRuleSigV4Authorization {
		return &v
	}).(TopicRuleSigV4AuthorizationPtrOutput)
}

// The ARN of the signing role.
func (o TopicRuleSigV4AuthorizationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSigV4Authorization) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The service name to use while signing with Sig V4.
func (o TopicRuleSigV4AuthorizationOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSigV4Authorization) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The signing region.
func (o TopicRuleSigV4AuthorizationOutput) SigningRegion() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSigV4Authorization) string { return v.SigningRegion }).(pulumi.StringOutput)
}

type TopicRuleSigV4AuthorizationPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSigV4AuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSigV4Authorization)(nil)).Elem()
}

func (o TopicRuleSigV4AuthorizationPtrOutput) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationPtrOutput) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationPtrOutput) Elem() TopicRuleSigV4AuthorizationOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) TopicRuleSigV4Authorization {
		if v != nil {
			return *v
		}
		var ret TopicRuleSigV4Authorization
		return ret
	}).(TopicRuleSigV4AuthorizationOutput)
}

// The ARN of the signing role.
func (o TopicRuleSigV4AuthorizationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The service name to use while signing with Sig V4.
func (o TopicRuleSigV4AuthorizationPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// The signing region.
func (o TopicRuleSigV4AuthorizationPtrOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.SigningRegion
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSnsAction struct {
	// (Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. For more information, see [Amazon SNS Message and JSON Formats](https://docs.aws.amazon.com/sns/latest/dg/json-formats.html) in the *Amazon Simple Notification Service Developer Guide* .
	MessageFormat *string `pulumi:"messageFormat"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The ARN of the SNS topic.
	TargetArn string `pulumi:"targetArn"`
}

// TopicRuleSnsActionInput is an input type that accepts TopicRuleSnsActionArgs and TopicRuleSnsActionOutput values.
// You can construct a concrete instance of `TopicRuleSnsActionInput` via:
//
//	TopicRuleSnsActionArgs{...}
type TopicRuleSnsActionInput interface {
	pulumi.Input

	ToTopicRuleSnsActionOutput() TopicRuleSnsActionOutput
	ToTopicRuleSnsActionOutputWithContext(context.Context) TopicRuleSnsActionOutput
}

type TopicRuleSnsActionArgs struct {
	// (Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. For more information, see [Amazon SNS Message and JSON Formats](https://docs.aws.amazon.com/sns/latest/dg/json-formats.html) in the *Amazon Simple Notification Service Developer Guide* .
	MessageFormat pulumi.StringPtrInput `pulumi:"messageFormat"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The ARN of the SNS topic.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (TopicRuleSnsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSnsAction)(nil)).Elem()
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionOutput() TopicRuleSnsActionOutput {
	return i.ToTopicRuleSnsActionOutputWithContext(context.Background())
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionOutputWithContext(ctx context.Context) TopicRuleSnsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsActionOutput)
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return i.ToTopicRuleSnsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsActionOutput).ToTopicRuleSnsActionPtrOutputWithContext(ctx)
}

// TopicRuleSnsActionPtrInput is an input type that accepts TopicRuleSnsActionArgs, TopicRuleSnsActionPtr and TopicRuleSnsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleSnsActionPtrInput` via:
//
//	        TopicRuleSnsActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleSnsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput
	ToTopicRuleSnsActionPtrOutputWithContext(context.Context) TopicRuleSnsActionPtrOutput
}

type topicRuleSnsActionPtrType TopicRuleSnsActionArgs

func TopicRuleSnsActionPtr(v *TopicRuleSnsActionArgs) TopicRuleSnsActionPtrInput {
	return (*topicRuleSnsActionPtrType)(v)
}

func (*topicRuleSnsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSnsAction)(nil)).Elem()
}

func (i *topicRuleSnsActionPtrType) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return i.ToTopicRuleSnsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleSnsActionPtrType) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsActionPtrOutput)
}

type TopicRuleSnsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleSnsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSnsAction)(nil)).Elem()
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionOutput() TopicRuleSnsActionOutput {
	return o
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionOutputWithContext(ctx context.Context) TopicRuleSnsActionOutput {
	return o
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return o.ToTopicRuleSnsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleSnsAction) *TopicRuleSnsAction {
		return &v
	}).(TopicRuleSnsActionPtrOutput)
}

// (Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. For more information, see [Amazon SNS Message and JSON Formats](https://docs.aws.amazon.com/sns/latest/dg/json-formats.html) in the *Amazon Simple Notification Service Developer Guide* .
func (o TopicRuleSnsActionOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleSnsAction) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSnsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSnsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The ARN of the SNS topic.
func (o TopicRuleSnsActionOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSnsAction) string { return v.TargetArn }).(pulumi.StringOutput)
}

type TopicRuleSnsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSnsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSnsAction)(nil)).Elem()
}

func (o TopicRuleSnsActionPtrOutput) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return o
}

func (o TopicRuleSnsActionPtrOutput) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return o
}

func (o TopicRuleSnsActionPtrOutput) Elem() TopicRuleSnsActionOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) TopicRuleSnsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleSnsAction
		return ret
	}).(TopicRuleSnsActionOutput)
}

// (Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. For more information, see [Amazon SNS Message and JSON Formats](https://docs.aws.amazon.com/sns/latest/dg/json-formats.html) in the *Amazon Simple Notification Service Developer Guide* .
func (o TopicRuleSnsActionPtrOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) *string {
		if v == nil {
			return nil
		}
		return v.MessageFormat
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSnsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the SNS topic.
func (o TopicRuleSnsActionPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) *string {
		if v == nil {
			return nil
		}
		return &v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSqsAction struct {
	// The URL of the Amazon SQS queue.
	QueueUrl string `pulumi:"queueUrl"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// Specifies whether to use Base64 encoding.
	UseBase64 *bool `pulumi:"useBase64"`
}

// TopicRuleSqsActionInput is an input type that accepts TopicRuleSqsActionArgs and TopicRuleSqsActionOutput values.
// You can construct a concrete instance of `TopicRuleSqsActionInput` via:
//
//	TopicRuleSqsActionArgs{...}
type TopicRuleSqsActionInput interface {
	pulumi.Input

	ToTopicRuleSqsActionOutput() TopicRuleSqsActionOutput
	ToTopicRuleSqsActionOutputWithContext(context.Context) TopicRuleSqsActionOutput
}

type TopicRuleSqsActionArgs struct {
	// The URL of the Amazon SQS queue.
	QueueUrl pulumi.StringInput `pulumi:"queueUrl"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies whether to use Base64 encoding.
	UseBase64 pulumi.BoolPtrInput `pulumi:"useBase64"`
}

func (TopicRuleSqsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqsAction)(nil)).Elem()
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionOutput() TopicRuleSqsActionOutput {
	return i.ToTopicRuleSqsActionOutputWithContext(context.Background())
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionOutputWithContext(ctx context.Context) TopicRuleSqsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsActionOutput)
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return i.ToTopicRuleSqsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsActionOutput).ToTopicRuleSqsActionPtrOutputWithContext(ctx)
}

// TopicRuleSqsActionPtrInput is an input type that accepts TopicRuleSqsActionArgs, TopicRuleSqsActionPtr and TopicRuleSqsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleSqsActionPtrInput` via:
//
//	        TopicRuleSqsActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleSqsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput
	ToTopicRuleSqsActionPtrOutputWithContext(context.Context) TopicRuleSqsActionPtrOutput
}

type topicRuleSqsActionPtrType TopicRuleSqsActionArgs

func TopicRuleSqsActionPtr(v *TopicRuleSqsActionArgs) TopicRuleSqsActionPtrInput {
	return (*topicRuleSqsActionPtrType)(v)
}

func (*topicRuleSqsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqsAction)(nil)).Elem()
}

func (i *topicRuleSqsActionPtrType) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return i.ToTopicRuleSqsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleSqsActionPtrType) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsActionPtrOutput)
}

type TopicRuleSqsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleSqsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqsAction)(nil)).Elem()
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionOutput() TopicRuleSqsActionOutput {
	return o
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionOutputWithContext(ctx context.Context) TopicRuleSqsActionOutput {
	return o
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return o.ToTopicRuleSqsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleSqsAction) *TopicRuleSqsAction {
		return &v
	}).(TopicRuleSqsActionPtrOutput)
}

// The URL of the Amazon SQS queue.
func (o TopicRuleSqsActionOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSqsAction) string { return v.QueueUrl }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSqsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSqsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Specifies whether to use Base64 encoding.
func (o TopicRuleSqsActionOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleSqsAction) *bool { return v.UseBase64 }).(pulumi.BoolPtrOutput)
}

type TopicRuleSqsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSqsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqsAction)(nil)).Elem()
}

func (o TopicRuleSqsActionPtrOutput) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return o
}

func (o TopicRuleSqsActionPtrOutput) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return o
}

func (o TopicRuleSqsActionPtrOutput) Elem() TopicRuleSqsActionOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) TopicRuleSqsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleSqsAction
		return ret
	}).(TopicRuleSqsActionOutput)
}

// The URL of the Amazon SQS queue.
func (o TopicRuleSqsActionPtrOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) *string {
		if v == nil {
			return nil
		}
		return &v.QueueUrl
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSqsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to use Base64 encoding.
func (o TopicRuleSqsActionPtrOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) *bool {
		if v == nil {
			return nil
		}
		return v.UseBase64
	}).(pulumi.BoolPtrOutput)
}

type TopicRuleStepFunctionsAction struct {
	// (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
	ExecutionNamePrefix *string `pulumi:"executionNamePrefix"`
	// The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").
	RoleArn string `pulumi:"roleArn"`
	// The name of the Step Functions state machine whose execution will be started.
	StateMachineName string `pulumi:"stateMachineName"`
}

// TopicRuleStepFunctionsActionInput is an input type that accepts TopicRuleStepFunctionsActionArgs and TopicRuleStepFunctionsActionOutput values.
// You can construct a concrete instance of `TopicRuleStepFunctionsActionInput` via:
//
//	TopicRuleStepFunctionsActionArgs{...}
type TopicRuleStepFunctionsActionInput interface {
	pulumi.Input

	ToTopicRuleStepFunctionsActionOutput() TopicRuleStepFunctionsActionOutput
	ToTopicRuleStepFunctionsActionOutputWithContext(context.Context) TopicRuleStepFunctionsActionOutput
}

type TopicRuleStepFunctionsActionArgs struct {
	// (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
	ExecutionNamePrefix pulumi.StringPtrInput `pulumi:"executionNamePrefix"`
	// The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Step Functions state machine whose execution will be started.
	StateMachineName pulumi.StringInput `pulumi:"stateMachineName"`
}

func (TopicRuleStepFunctionsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionOutput() TopicRuleStepFunctionsActionOutput {
	return i.ToTopicRuleStepFunctionsActionOutputWithContext(context.Background())
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionsActionOutput)
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return i.ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionsActionOutput).ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx)
}

// TopicRuleStepFunctionsActionPtrInput is an input type that accepts TopicRuleStepFunctionsActionArgs, TopicRuleStepFunctionsActionPtr and TopicRuleStepFunctionsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleStepFunctionsActionPtrInput` via:
//
//	        TopicRuleStepFunctionsActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleStepFunctionsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput
	ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Context) TopicRuleStepFunctionsActionPtrOutput
}

type topicRuleStepFunctionsActionPtrType TopicRuleStepFunctionsActionArgs

func TopicRuleStepFunctionsActionPtr(v *TopicRuleStepFunctionsActionArgs) TopicRuleStepFunctionsActionPtrInput {
	return (*topicRuleStepFunctionsActionPtrType)(v)
}

func (*topicRuleStepFunctionsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (i *topicRuleStepFunctionsActionPtrType) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return i.ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleStepFunctionsActionPtrType) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionsActionPtrOutput)
}

type TopicRuleStepFunctionsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleStepFunctionsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionOutput() TopicRuleStepFunctionsActionOutput {
	return o
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionOutput {
	return o
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return o.ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleStepFunctionsAction) *TopicRuleStepFunctionsAction {
		return &v
	}).(TopicRuleStepFunctionsActionPtrOutput)
}

// (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
func (o TopicRuleStepFunctionsActionOutput) ExecutionNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleStepFunctionsAction) *string { return v.ExecutionNamePrefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").
func (o TopicRuleStepFunctionsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleStepFunctionsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the Step Functions state machine whose execution will be started.
func (o TopicRuleStepFunctionsActionOutput) StateMachineName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleStepFunctionsAction) string { return v.StateMachineName }).(pulumi.StringOutput)
}

type TopicRuleStepFunctionsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleStepFunctionsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (o TopicRuleStepFunctionsActionPtrOutput) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return o
}

func (o TopicRuleStepFunctionsActionPtrOutput) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return o
}

func (o TopicRuleStepFunctionsActionPtrOutput) Elem() TopicRuleStepFunctionsActionOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) TopicRuleStepFunctionsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleStepFunctionsAction
		return ret
	}).(TopicRuleStepFunctionsActionOutput)
}

// (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
func (o TopicRuleStepFunctionsActionPtrOutput) ExecutionNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionNamePrefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").
func (o TopicRuleStepFunctionsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the Step Functions state machine whose execution will be started.
func (o TopicRuleStepFunctionsActionPtrOutput) StateMachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) *string {
		if v == nil {
			return nil
		}
		return &v.StateMachineName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

type TopicRuleTimestamp struct {
	// The precision of the timestamp value that results from the expression described in `value` .
	Unit *string `pulumi:"unit"`
	// An expression that returns a long epoch time value.
	Value string `pulumi:"value"`
}

// TopicRuleTimestampInput is an input type that accepts TopicRuleTimestampArgs and TopicRuleTimestampOutput values.
// You can construct a concrete instance of `TopicRuleTimestampInput` via:
//
//	TopicRuleTimestampArgs{...}
type TopicRuleTimestampInput interface {
	pulumi.Input

	ToTopicRuleTimestampOutput() TopicRuleTimestampOutput
	ToTopicRuleTimestampOutputWithContext(context.Context) TopicRuleTimestampOutput
}

type TopicRuleTimestampArgs struct {
	// The precision of the timestamp value that results from the expression described in `value` .
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// An expression that returns a long epoch time value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestamp)(nil)).Elem()
}

func (i TopicRuleTimestampArgs) ToTopicRuleTimestampOutput() TopicRuleTimestampOutput {
	return i.ToTopicRuleTimestampOutputWithContext(context.Background())
}

func (i TopicRuleTimestampArgs) ToTopicRuleTimestampOutputWithContext(ctx context.Context) TopicRuleTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestampOutput)
}

func (i TopicRuleTimestampArgs) ToTopicRuleTimestampPtrOutput() TopicRuleTimestampPtrOutput {
	return i.ToTopicRuleTimestampPtrOutputWithContext(context.Background())
}

func (i TopicRuleTimestampArgs) ToTopicRuleTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestampOutput).ToTopicRuleTimestampPtrOutputWithContext(ctx)
}

// TopicRuleTimestampPtrInput is an input type that accepts TopicRuleTimestampArgs, TopicRuleTimestampPtr and TopicRuleTimestampPtrOutput values.
// You can construct a concrete instance of `TopicRuleTimestampPtrInput` via:
//
//	        TopicRuleTimestampArgs{...}
//
//	or:
//
//	        nil
type TopicRuleTimestampPtrInput interface {
	pulumi.Input

	ToTopicRuleTimestampPtrOutput() TopicRuleTimestampPtrOutput
	ToTopicRuleTimestampPtrOutputWithContext(context.Context) TopicRuleTimestampPtrOutput
}

type topicRuleTimestampPtrType TopicRuleTimestampArgs

func TopicRuleTimestampPtr(v *TopicRuleTimestampArgs) TopicRuleTimestampPtrInput {
	return (*topicRuleTimestampPtrType)(v)
}

func (*topicRuleTimestampPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestamp)(nil)).Elem()
}

func (i *topicRuleTimestampPtrType) ToTopicRuleTimestampPtrOutput() TopicRuleTimestampPtrOutput {
	return i.ToTopicRuleTimestampPtrOutputWithContext(context.Background())
}

func (i *topicRuleTimestampPtrType) ToTopicRuleTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestampPtrOutput)
}

type TopicRuleTimestampOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestamp)(nil)).Elem()
}

func (o TopicRuleTimestampOutput) ToTopicRuleTimestampOutput() TopicRuleTimestampOutput {
	return o
}

func (o TopicRuleTimestampOutput) ToTopicRuleTimestampOutputWithContext(ctx context.Context) TopicRuleTimestampOutput {
	return o
}

func (o TopicRuleTimestampOutput) ToTopicRuleTimestampPtrOutput() TopicRuleTimestampPtrOutput {
	return o.ToTopicRuleTimestampPtrOutputWithContext(context.Background())
}

func (o TopicRuleTimestampOutput) ToTopicRuleTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestampPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleTimestamp) *TopicRuleTimestamp {
		return &v
	}).(TopicRuleTimestampPtrOutput)
}

// The precision of the timestamp value that results from the expression described in `value` .
func (o TopicRuleTimestampOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleTimestamp) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// An expression that returns a long epoch time value.
func (o TopicRuleTimestampOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestamp) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleTimestampPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestampPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestamp)(nil)).Elem()
}

func (o TopicRuleTimestampPtrOutput) ToTopicRuleTimestampPtrOutput() TopicRuleTimestampPtrOutput {
	return o
}

func (o TopicRuleTimestampPtrOutput) ToTopicRuleTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestampPtrOutput {
	return o
}

func (o TopicRuleTimestampPtrOutput) Elem() TopicRuleTimestampOutput {
	return o.ApplyT(func(v *TopicRuleTimestamp) TopicRuleTimestamp {
		if v != nil {
			return *v
		}
		var ret TopicRuleTimestamp
		return ret
	}).(TopicRuleTimestampOutput)
}

// The precision of the timestamp value that results from the expression described in `value` .
func (o TopicRuleTimestampPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestamp) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// An expression that returns a long epoch time value.
func (o TopicRuleTimestampPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestamp) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TopicRuleTimestreamAction struct {
	// The name of an Amazon Timestream database that has the table to write records into.
	DatabaseName string `pulumi:"databaseName"`
	// Metadata attributes of the time series that are written in each measure record.
	Dimensions []TopicRuleTimestreamDimension `pulumi:"dimensions"`
	// The Amazon Resource Name (ARN) of the role that grants AWS IoT permission to write to the Timestream database table.
	RoleArn string `pulumi:"roleArn"`
	// The table where the message data will be written.
	TableName string `pulumi:"tableName"`
	// The value to use for the entry's timestamp. If blank, the time that the entry was processed is used.
	Timestamp *TopicRuleTimestreamTimestamp `pulumi:"timestamp"`
}

// TopicRuleTimestreamActionInput is an input type that accepts TopicRuleTimestreamActionArgs and TopicRuleTimestreamActionOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamActionInput` via:
//
//	TopicRuleTimestreamActionArgs{...}
type TopicRuleTimestreamActionInput interface {
	pulumi.Input

	ToTopicRuleTimestreamActionOutput() TopicRuleTimestreamActionOutput
	ToTopicRuleTimestreamActionOutputWithContext(context.Context) TopicRuleTimestreamActionOutput
}

type TopicRuleTimestreamActionArgs struct {
	// The name of an Amazon Timestream database that has the table to write records into.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Metadata attributes of the time series that are written in each measure record.
	Dimensions TopicRuleTimestreamDimensionArrayInput `pulumi:"dimensions"`
	// The Amazon Resource Name (ARN) of the role that grants AWS IoT permission to write to the Timestream database table.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The table where the message data will be written.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// The value to use for the entry's timestamp. If blank, the time that the entry was processed is used.
	Timestamp TopicRuleTimestreamTimestampPtrInput `pulumi:"timestamp"`
}

func (TopicRuleTimestreamActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamAction)(nil)).Elem()
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionOutput() TopicRuleTimestreamActionOutput {
	return i.ToTopicRuleTimestreamActionOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionOutputWithContext(ctx context.Context) TopicRuleTimestreamActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamActionOutput)
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return i.ToTopicRuleTimestreamActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamActionOutput).ToTopicRuleTimestreamActionPtrOutputWithContext(ctx)
}

// TopicRuleTimestreamActionPtrInput is an input type that accepts TopicRuleTimestreamActionArgs, TopicRuleTimestreamActionPtr and TopicRuleTimestreamActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamActionPtrInput` via:
//
//	        TopicRuleTimestreamActionArgs{...}
//
//	or:
//
//	        nil
type TopicRuleTimestreamActionPtrInput interface {
	pulumi.Input

	ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput
	ToTopicRuleTimestreamActionPtrOutputWithContext(context.Context) TopicRuleTimestreamActionPtrOutput
}

type topicRuleTimestreamActionPtrType TopicRuleTimestreamActionArgs

func TopicRuleTimestreamActionPtr(v *TopicRuleTimestreamActionArgs) TopicRuleTimestreamActionPtrInput {
	return (*topicRuleTimestreamActionPtrType)(v)
}

func (*topicRuleTimestreamActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamAction)(nil)).Elem()
}

func (i *topicRuleTimestreamActionPtrType) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return i.ToTopicRuleTimestreamActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleTimestreamActionPtrType) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamActionPtrOutput)
}

type TopicRuleTimestreamActionOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamAction)(nil)).Elem()
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionOutput() TopicRuleTimestreamActionOutput {
	return o
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionOutputWithContext(ctx context.Context) TopicRuleTimestreamActionOutput {
	return o
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return o.ToTopicRuleTimestreamActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleTimestreamAction) *TopicRuleTimestreamAction {
		return &v
	}).(TopicRuleTimestreamActionPtrOutput)
}

// The name of an Amazon Timestream database that has the table to write records into.
func (o TopicRuleTimestreamActionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Metadata attributes of the time series that are written in each measure record.
func (o TopicRuleTimestreamActionOutput) Dimensions() TopicRuleTimestreamDimensionArrayOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) []TopicRuleTimestreamDimension { return v.Dimensions }).(TopicRuleTimestreamDimensionArrayOutput)
}

// The Amazon Resource Name (ARN) of the role that grants AWS IoT permission to write to the Timestream database table.
func (o TopicRuleTimestreamActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The table where the message data will be written.
func (o TopicRuleTimestreamActionOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) string { return v.TableName }).(pulumi.StringOutput)
}

// The value to use for the entry's timestamp. If blank, the time that the entry was processed is used.
func (o TopicRuleTimestreamActionOutput) Timestamp() TopicRuleTimestreamTimestampPtrOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) *TopicRuleTimestreamTimestamp { return v.Timestamp }).(TopicRuleTimestreamTimestampPtrOutput)
}

type TopicRuleTimestreamActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamAction)(nil)).Elem()
}

func (o TopicRuleTimestreamActionPtrOutput) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return o
}

func (o TopicRuleTimestreamActionPtrOutput) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return o
}

func (o TopicRuleTimestreamActionPtrOutput) Elem() TopicRuleTimestreamActionOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) TopicRuleTimestreamAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleTimestreamAction
		return ret
	}).(TopicRuleTimestreamActionOutput)
}

// The name of an Amazon Timestream database that has the table to write records into.
func (o TopicRuleTimestreamActionPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Metadata attributes of the time series that are written in each measure record.
func (o TopicRuleTimestreamActionPtrOutput) Dimensions() TopicRuleTimestreamDimensionArrayOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) []TopicRuleTimestreamDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(TopicRuleTimestreamDimensionArrayOutput)
}

// The Amazon Resource Name (ARN) of the role that grants AWS IoT permission to write to the Timestream database table.
func (o TopicRuleTimestreamActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The table where the message data will be written.
func (o TopicRuleTimestreamActionPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// The value to use for the entry's timestamp. If blank, the time that the entry was processed is used.
func (o TopicRuleTimestreamActionPtrOutput) Timestamp() TopicRuleTimestreamTimestampPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *TopicRuleTimestreamTimestamp {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(TopicRuleTimestreamTimestampPtrOutput)
}

type TopicRuleTimestreamDimension struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// TopicRuleTimestreamDimensionInput is an input type that accepts TopicRuleTimestreamDimensionArgs and TopicRuleTimestreamDimensionOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamDimensionInput` via:
//
//	TopicRuleTimestreamDimensionArgs{...}
type TopicRuleTimestreamDimensionInput interface {
	pulumi.Input

	ToTopicRuleTimestreamDimensionOutput() TopicRuleTimestreamDimensionOutput
	ToTopicRuleTimestreamDimensionOutputWithContext(context.Context) TopicRuleTimestreamDimensionOutput
}

type TopicRuleTimestreamDimensionArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleTimestreamDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamDimension)(nil)).Elem()
}

func (i TopicRuleTimestreamDimensionArgs) ToTopicRuleTimestreamDimensionOutput() TopicRuleTimestreamDimensionOutput {
	return i.ToTopicRuleTimestreamDimensionOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamDimensionArgs) ToTopicRuleTimestreamDimensionOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamDimensionOutput)
}

// TopicRuleTimestreamDimensionArrayInput is an input type that accepts TopicRuleTimestreamDimensionArray and TopicRuleTimestreamDimensionArrayOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamDimensionArrayInput` via:
//
//	TopicRuleTimestreamDimensionArray{ TopicRuleTimestreamDimensionArgs{...} }
type TopicRuleTimestreamDimensionArrayInput interface {
	pulumi.Input

	ToTopicRuleTimestreamDimensionArrayOutput() TopicRuleTimestreamDimensionArrayOutput
	ToTopicRuleTimestreamDimensionArrayOutputWithContext(context.Context) TopicRuleTimestreamDimensionArrayOutput
}

type TopicRuleTimestreamDimensionArray []TopicRuleTimestreamDimensionInput

func (TopicRuleTimestreamDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleTimestreamDimension)(nil)).Elem()
}

func (i TopicRuleTimestreamDimensionArray) ToTopicRuleTimestreamDimensionArrayOutput() TopicRuleTimestreamDimensionArrayOutput {
	return i.ToTopicRuleTimestreamDimensionArrayOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamDimensionArray) ToTopicRuleTimestreamDimensionArrayOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamDimensionArrayOutput)
}

type TopicRuleTimestreamDimensionOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamDimension)(nil)).Elem()
}

func (o TopicRuleTimestreamDimensionOutput) ToTopicRuleTimestreamDimensionOutput() TopicRuleTimestreamDimensionOutput {
	return o
}

func (o TopicRuleTimestreamDimensionOutput) ToTopicRuleTimestreamDimensionOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionOutput {
	return o
}

func (o TopicRuleTimestreamDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamDimension) string { return v.Name }).(pulumi.StringOutput)
}

func (o TopicRuleTimestreamDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamDimension) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleTimestreamDimensionArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleTimestreamDimension)(nil)).Elem()
}

func (o TopicRuleTimestreamDimensionArrayOutput) ToTopicRuleTimestreamDimensionArrayOutput() TopicRuleTimestreamDimensionArrayOutput {
	return o
}

func (o TopicRuleTimestreamDimensionArrayOutput) ToTopicRuleTimestreamDimensionArrayOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionArrayOutput {
	return o
}

func (o TopicRuleTimestreamDimensionArrayOutput) Index(i pulumi.IntInput) TopicRuleTimestreamDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleTimestreamDimension {
		return vs[0].([]TopicRuleTimestreamDimension)[vs[1].(int)]
	}).(TopicRuleTimestreamDimensionOutput)
}

type TopicRuleTimestreamTimestamp struct {
	// The precision of the timestamp value that results from the expression described in `value` .
	Unit string `pulumi:"unit"`
	// An expression that returns a long epoch time value.
	Value string `pulumi:"value"`
}

// TopicRuleTimestreamTimestampInput is an input type that accepts TopicRuleTimestreamTimestampArgs and TopicRuleTimestreamTimestampOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamTimestampInput` via:
//
//	TopicRuleTimestreamTimestampArgs{...}
type TopicRuleTimestreamTimestampInput interface {
	pulumi.Input

	ToTopicRuleTimestreamTimestampOutput() TopicRuleTimestreamTimestampOutput
	ToTopicRuleTimestreamTimestampOutputWithContext(context.Context) TopicRuleTimestreamTimestampOutput
}

type TopicRuleTimestreamTimestampArgs struct {
	// The precision of the timestamp value that results from the expression described in `value` .
	Unit pulumi.StringInput `pulumi:"unit"`
	// An expression that returns a long epoch time value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleTimestreamTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampOutput() TopicRuleTimestreamTimestampOutput {
	return i.ToTopicRuleTimestreamTimestampOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamTimestampOutput)
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return i.ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamTimestampOutput).ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx)
}

// TopicRuleTimestreamTimestampPtrInput is an input type that accepts TopicRuleTimestreamTimestampArgs, TopicRuleTimestreamTimestampPtr and TopicRuleTimestreamTimestampPtrOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamTimestampPtrInput` via:
//
//	        TopicRuleTimestreamTimestampArgs{...}
//
//	or:
//
//	        nil
type TopicRuleTimestreamTimestampPtrInput interface {
	pulumi.Input

	ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput
	ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Context) TopicRuleTimestreamTimestampPtrOutput
}

type topicRuleTimestreamTimestampPtrType TopicRuleTimestreamTimestampArgs

func TopicRuleTimestreamTimestampPtr(v *TopicRuleTimestreamTimestampArgs) TopicRuleTimestreamTimestampPtrInput {
	return (*topicRuleTimestreamTimestampPtrType)(v)
}

func (*topicRuleTimestreamTimestampPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (i *topicRuleTimestreamTimestampPtrType) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return i.ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Background())
}

func (i *topicRuleTimestreamTimestampPtrType) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamTimestampPtrOutput)
}

type TopicRuleTimestreamTimestampOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampOutput() TopicRuleTimestreamTimestampOutput {
	return o
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampOutput {
	return o
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return o.ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Background())
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleTimestreamTimestamp) *TopicRuleTimestreamTimestamp {
		return &v
	}).(TopicRuleTimestreamTimestampPtrOutput)
}

// The precision of the timestamp value that results from the expression described in `value` .
func (o TopicRuleTimestreamTimestampOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamTimestamp) string { return v.Unit }).(pulumi.StringOutput)
}

// An expression that returns a long epoch time value.
func (o TopicRuleTimestreamTimestampOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamTimestamp) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleTimestreamTimestampPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamTimestampPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (o TopicRuleTimestreamTimestampPtrOutput) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return o
}

func (o TopicRuleTimestreamTimestampPtrOutput) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return o
}

func (o TopicRuleTimestreamTimestampPtrOutput) Elem() TopicRuleTimestreamTimestampOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamTimestamp) TopicRuleTimestreamTimestamp {
		if v != nil {
			return *v
		}
		var ret TopicRuleTimestreamTimestamp
		return ret
	}).(TopicRuleTimestreamTimestampOutput)
}

// The precision of the timestamp value that results from the expression described in `value` .
func (o TopicRuleTimestreamTimestampPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamTimestamp) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// An expression that returns a long epoch time value.
func (o TopicRuleTimestreamTimestampPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamTimestamp) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TopicRuleUserProperty struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// TopicRuleUserPropertyInput is an input type that accepts TopicRuleUserPropertyArgs and TopicRuleUserPropertyOutput values.
// You can construct a concrete instance of `TopicRuleUserPropertyInput` via:
//
//	TopicRuleUserPropertyArgs{...}
type TopicRuleUserPropertyInput interface {
	pulumi.Input

	ToTopicRuleUserPropertyOutput() TopicRuleUserPropertyOutput
	ToTopicRuleUserPropertyOutputWithContext(context.Context) TopicRuleUserPropertyOutput
}

type TopicRuleUserPropertyArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleUserPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleUserProperty)(nil)).Elem()
}

func (i TopicRuleUserPropertyArgs) ToTopicRuleUserPropertyOutput() TopicRuleUserPropertyOutput {
	return i.ToTopicRuleUserPropertyOutputWithContext(context.Background())
}

func (i TopicRuleUserPropertyArgs) ToTopicRuleUserPropertyOutputWithContext(ctx context.Context) TopicRuleUserPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleUserPropertyOutput)
}

// TopicRuleUserPropertyArrayInput is an input type that accepts TopicRuleUserPropertyArray and TopicRuleUserPropertyArrayOutput values.
// You can construct a concrete instance of `TopicRuleUserPropertyArrayInput` via:
//
//	TopicRuleUserPropertyArray{ TopicRuleUserPropertyArgs{...} }
type TopicRuleUserPropertyArrayInput interface {
	pulumi.Input

	ToTopicRuleUserPropertyArrayOutput() TopicRuleUserPropertyArrayOutput
	ToTopicRuleUserPropertyArrayOutputWithContext(context.Context) TopicRuleUserPropertyArrayOutput
}

type TopicRuleUserPropertyArray []TopicRuleUserPropertyInput

func (TopicRuleUserPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleUserProperty)(nil)).Elem()
}

func (i TopicRuleUserPropertyArray) ToTopicRuleUserPropertyArrayOutput() TopicRuleUserPropertyArrayOutput {
	return i.ToTopicRuleUserPropertyArrayOutputWithContext(context.Background())
}

func (i TopicRuleUserPropertyArray) ToTopicRuleUserPropertyArrayOutputWithContext(ctx context.Context) TopicRuleUserPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleUserPropertyArrayOutput)
}

type TopicRuleUserPropertyOutput struct{ *pulumi.OutputState }

func (TopicRuleUserPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleUserProperty)(nil)).Elem()
}

func (o TopicRuleUserPropertyOutput) ToTopicRuleUserPropertyOutput() TopicRuleUserPropertyOutput {
	return o
}

func (o TopicRuleUserPropertyOutput) ToTopicRuleUserPropertyOutputWithContext(ctx context.Context) TopicRuleUserPropertyOutput {
	return o
}

func (o TopicRuleUserPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleUserProperty) string { return v.Key }).(pulumi.StringOutput)
}

func (o TopicRuleUserPropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleUserProperty) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleUserPropertyArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleUserPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleUserProperty)(nil)).Elem()
}

func (o TopicRuleUserPropertyArrayOutput) ToTopicRuleUserPropertyArrayOutput() TopicRuleUserPropertyArrayOutput {
	return o
}

func (o TopicRuleUserPropertyArrayOutput) ToTopicRuleUserPropertyArrayOutputWithContext(ctx context.Context) TopicRuleUserPropertyArrayOutput {
	return o
}

func (o TopicRuleUserPropertyArrayOutput) Index(i pulumi.IntInput) TopicRuleUserPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleUserProperty {
		return vs[0].([]TopicRuleUserProperty)[vs[1].(int)]
	}).(TopicRuleUserPropertyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AbortConfigPropertiesInput)(nil)).Elem(), AbortConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AbortConfigPropertiesPtrInput)(nil)).Elem(), AbortConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurationInput)(nil)).Elem(), AccountAuditConfigurationAuditCheckConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurationPtrInput)(nil)).Elem(), AccountAuditConfigurationAuditCheckConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurationsInput)(nil)).Elem(), AccountAuditConfigurationAuditCheckConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetInput)(nil)).Elem(), AccountAuditConfigurationAuditNotificationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetPtrInput)(nil)).Elem(), AccountAuditConfigurationAuditNotificationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetConfigurationsInput)(nil)).Elem(), AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput)(nil)).Elem(), AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupPropertiesPropertiesInput)(nil)).Elem(), BillingGroupPropertiesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupPropertiesPropertiesPtrInput)(nil)).Elem(), BillingGroupPropertiesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaCertificateRegistrationConfigInput)(nil)).Elem(), CaCertificateRegistrationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaCertificateRegistrationConfigPtrInput)(nil)).Elem(), CaCertificateRegistrationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandParameterInput)(nil)).Elem(), CommandParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandParameterArrayInput)(nil)).Elem(), CommandParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandParameterValueInput)(nil)).Elem(), CommandParameterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandParameterValuePtrInput)(nil)).Elem(), CommandParameterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandPayloadInput)(nil)).Elem(), CommandPayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommandPayloadPtrInput)(nil)).Elem(), CommandPayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationAuthorizerConfigInput)(nil)).Elem(), DomainConfigurationAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationAuthorizerConfigPtrInput)(nil)).Elem(), DomainConfigurationAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationClientCertificateConfigInput)(nil)).Elem(), DomainConfigurationClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationClientCertificateConfigPtrInput)(nil)).Elem(), DomainConfigurationClientCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationServerCertificateConfigInput)(nil)).Elem(), DomainConfigurationServerCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationServerCertificateConfigPtrInput)(nil)).Elem(), DomainConfigurationServerCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationTlsConfigInput)(nil)).Elem(), DomainConfigurationTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainConfigurationTlsConfigPtrInput)(nil)).Elem(), DomainConfigurationTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetMetricAggregationTypeInput)(nil)).Elem(), FleetMetricAggregationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetMetricAggregationTypePtrInput)(nil)).Elem(), FleetMetricAggregationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobExecutionsRetryConfigPropertiesInput)(nil)).Elem(), JobExecutionsRetryConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobExecutionsRetryConfigPropertiesPtrInput)(nil)).Elem(), JobExecutionsRetryConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobExecutionsRolloutConfigPropertiesInput)(nil)).Elem(), JobExecutionsRolloutConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobExecutionsRolloutConfigPropertiesPtrInput)(nil)).Elem(), JobExecutionsRolloutConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateAbortCriteriaInput)(nil)).Elem(), JobTemplateAbortCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateAbortCriteriaArrayInput)(nil)).Elem(), JobTemplateAbortCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateExponentialRolloutRateInput)(nil)).Elem(), JobTemplateExponentialRolloutRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateExponentialRolloutRatePtrInput)(nil)).Elem(), JobTemplateExponentialRolloutRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateMaintenanceWindowInput)(nil)).Elem(), JobTemplateMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateMaintenanceWindowArrayInput)(nil)).Elem(), JobTemplateMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateRateIncreaseCriteriaInput)(nil)).Elem(), JobTemplateRateIncreaseCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateRateIncreaseCriteriaPtrInput)(nil)).Elem(), JobTemplateRateIncreaseCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateRetryCriteriaInput)(nil)).Elem(), JobTemplateRetryCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTemplateRetryCriteriaArrayInput)(nil)).Elem(), JobTemplateRetryCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsExportConfigPropertiesInput)(nil)).Elem(), MetricsExportConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsExportConfigPropertiesPtrInput)(nil)).Elem(), MetricsExportConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionActionParamsInput)(nil)).Elem(), MitigationActionActionParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionAddThingsToThingGroupParamsInput)(nil)).Elem(), MitigationActionAddThingsToThingGroupParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionAddThingsToThingGroupParamsPtrInput)(nil)).Elem(), MitigationActionAddThingsToThingGroupParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionEnableIoTLoggingParamsInput)(nil)).Elem(), MitigationActionEnableIoTLoggingParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionEnableIoTLoggingParamsPtrInput)(nil)).Elem(), MitigationActionEnableIoTLoggingParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionPublishFindingToSnsParamsInput)(nil)).Elem(), MitigationActionPublishFindingToSnsParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionPublishFindingToSnsParamsPtrInput)(nil)).Elem(), MitigationActionPublishFindingToSnsParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionReplaceDefaultPolicyVersionParamsInput)(nil)).Elem(), MitigationActionReplaceDefaultPolicyVersionParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionReplaceDefaultPolicyVersionParamsPtrInput)(nil)).Elem(), MitigationActionReplaceDefaultPolicyVersionParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionUpdateCaCertificateParamsInput)(nil)).Elem(), MitigationActionUpdateCaCertificateParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionUpdateCaCertificateParamsPtrInput)(nil)).Elem(), MitigationActionUpdateCaCertificateParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionUpdateDeviceCertificateParamsInput)(nil)).Elem(), MitigationActionUpdateDeviceCertificateParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MitigationActionUpdateDeviceCertificateParamsPtrInput)(nil)).Elem(), MitigationActionUpdateDeviceCertificateParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresignedUrlConfigPropertiesInput)(nil)).Elem(), PresignedUrlConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresignedUrlConfigPropertiesPtrInput)(nil)).Elem(), PresignedUrlConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateProvisioningHookInput)(nil)).Elem(), ProvisioningTemplateProvisioningHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateProvisioningHookPtrInput)(nil)).Elem(), ProvisioningTemplateProvisioningHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileAlertTargetInput)(nil)).Elem(), SecurityProfileAlertTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileAlertTargetMapInput)(nil)).Elem(), SecurityProfileAlertTargetMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileBehaviorInput)(nil)).Elem(), SecurityProfileBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileBehaviorArrayInput)(nil)).Elem(), SecurityProfileBehaviorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileBehaviorCriteriaInput)(nil)).Elem(), SecurityProfileBehaviorCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileBehaviorCriteriaPtrInput)(nil)).Elem(), SecurityProfileBehaviorCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMachineLearningDetectionConfigInput)(nil)).Elem(), SecurityProfileMachineLearningDetectionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMachineLearningDetectionConfigPtrInput)(nil)).Elem(), SecurityProfileMachineLearningDetectionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMetricDimensionInput)(nil)).Elem(), SecurityProfileMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMetricDimensionPtrInput)(nil)).Elem(), SecurityProfileMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMetricToRetainInput)(nil)).Elem(), SecurityProfileMetricToRetainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMetricToRetainArrayInput)(nil)).Elem(), SecurityProfileMetricToRetainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMetricValueInput)(nil)).Elem(), SecurityProfileMetricValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileMetricValuePtrInput)(nil)).Elem(), SecurityProfileMetricValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileStatisticalThresholdInput)(nil)).Elem(), SecurityProfileStatisticalThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileStatisticalThresholdPtrInput)(nil)).Elem(), SecurityProfileStatisticalThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingAttributePayloadInput)(nil)).Elem(), ThingAttributePayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingAttributePayloadPtrInput)(nil)).Elem(), ThingAttributePayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingGroupAttributePayloadInput)(nil)).Elem(), ThingGroupAttributePayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingGroupAttributePayloadPtrInput)(nil)).Elem(), ThingGroupAttributePayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingGroupPropertiesPropertiesInput)(nil)).Elem(), ThingGroupPropertiesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingGroupPropertiesPropertiesPtrInput)(nil)).Elem(), ThingGroupPropertiesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypePropagatingAttributeInput)(nil)).Elem(), ThingTypePropagatingAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypePropagatingAttributeArrayInput)(nil)).Elem(), ThingTypePropagatingAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypePropertiesPropertiesInput)(nil)).Elem(), ThingTypePropertiesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypePropertiesPropertiesPtrInput)(nil)).Elem(), ThingTypePropertiesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesInput)(nil)).Elem(), ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrInput)(nil)).Elem(), ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeoutConfigPropertiesInput)(nil)).Elem(), TimeoutConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeoutConfigPropertiesPtrInput)(nil)).Elem(), TimeoutConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleActionInput)(nil)).Elem(), TopicRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleActionPtrInput)(nil)).Elem(), TopicRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleActionArrayInput)(nil)).Elem(), TopicRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleAssetPropertyTimestampInput)(nil)).Elem(), TopicRuleAssetPropertyTimestampArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleAssetPropertyValueInput)(nil)).Elem(), TopicRuleAssetPropertyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleAssetPropertyValueArrayInput)(nil)).Elem(), TopicRuleAssetPropertyValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleAssetPropertyVariantInput)(nil)).Elem(), TopicRuleAssetPropertyVariantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleCloudwatchAlarmActionInput)(nil)).Elem(), TopicRuleCloudwatchAlarmActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleCloudwatchAlarmActionPtrInput)(nil)).Elem(), TopicRuleCloudwatchAlarmActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleCloudwatchLogsActionInput)(nil)).Elem(), TopicRuleCloudwatchLogsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleCloudwatchLogsActionPtrInput)(nil)).Elem(), TopicRuleCloudwatchLogsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleCloudwatchMetricActionInput)(nil)).Elem(), TopicRuleCloudwatchMetricActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleCloudwatchMetricActionPtrInput)(nil)).Elem(), TopicRuleCloudwatchMetricActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDestinationHttpUrlDestinationSummaryInput)(nil)).Elem(), TopicRuleDestinationHttpUrlDestinationSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDestinationHttpUrlDestinationSummaryPtrInput)(nil)).Elem(), TopicRuleDestinationHttpUrlDestinationSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDestinationVpcDestinationPropertiesInput)(nil)).Elem(), TopicRuleDestinationVpcDestinationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDestinationVpcDestinationPropertiesPtrInput)(nil)).Elem(), TopicRuleDestinationVpcDestinationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDynamoDBv2ActionInput)(nil)).Elem(), TopicRuleDynamoDBv2ActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDynamoDBv2ActionPtrInput)(nil)).Elem(), TopicRuleDynamoDBv2ActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDynamoDbActionInput)(nil)).Elem(), TopicRuleDynamoDbActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleDynamoDbActionPtrInput)(nil)).Elem(), TopicRuleDynamoDbActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleElasticsearchActionInput)(nil)).Elem(), TopicRuleElasticsearchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleElasticsearchActionPtrInput)(nil)).Elem(), TopicRuleElasticsearchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleFirehoseActionInput)(nil)).Elem(), TopicRuleFirehoseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleFirehoseActionPtrInput)(nil)).Elem(), TopicRuleFirehoseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleHttpActionInput)(nil)).Elem(), TopicRuleHttpActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleHttpActionPtrInput)(nil)).Elem(), TopicRuleHttpActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleHttpActionHeaderInput)(nil)).Elem(), TopicRuleHttpActionHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleHttpActionHeaderArrayInput)(nil)).Elem(), TopicRuleHttpActionHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleHttpAuthorizationInput)(nil)).Elem(), TopicRuleHttpAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleHttpAuthorizationPtrInput)(nil)).Elem(), TopicRuleHttpAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleIotAnalyticsActionInput)(nil)).Elem(), TopicRuleIotAnalyticsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleIotAnalyticsActionPtrInput)(nil)).Elem(), TopicRuleIotAnalyticsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleIotEventsActionInput)(nil)).Elem(), TopicRuleIotEventsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleIotEventsActionPtrInput)(nil)).Elem(), TopicRuleIotEventsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleIotSiteWiseActionInput)(nil)).Elem(), TopicRuleIotSiteWiseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleIotSiteWiseActionPtrInput)(nil)).Elem(), TopicRuleIotSiteWiseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleKafkaActionInput)(nil)).Elem(), TopicRuleKafkaActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleKafkaActionPtrInput)(nil)).Elem(), TopicRuleKafkaActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleKafkaActionHeaderInput)(nil)).Elem(), TopicRuleKafkaActionHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleKafkaActionHeaderArrayInput)(nil)).Elem(), TopicRuleKafkaActionHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleKinesisActionInput)(nil)).Elem(), TopicRuleKinesisActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleKinesisActionPtrInput)(nil)).Elem(), TopicRuleKinesisActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleLambdaActionInput)(nil)).Elem(), TopicRuleLambdaActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleLambdaActionPtrInput)(nil)).Elem(), TopicRuleLambdaActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleLocationActionInput)(nil)).Elem(), TopicRuleLocationActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleLocationActionPtrInput)(nil)).Elem(), TopicRuleLocationActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleOpenSearchActionInput)(nil)).Elem(), TopicRuleOpenSearchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleOpenSearchActionPtrInput)(nil)).Elem(), TopicRuleOpenSearchActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRulePayloadInput)(nil)).Elem(), TopicRulePayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRulePutAssetPropertyValueEntryInput)(nil)).Elem(), TopicRulePutAssetPropertyValueEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRulePutAssetPropertyValueEntryArrayInput)(nil)).Elem(), TopicRulePutAssetPropertyValueEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRulePutItemInputInput)(nil)).Elem(), TopicRulePutItemInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRulePutItemInputPtrInput)(nil)).Elem(), TopicRulePutItemInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleRepublishActionInput)(nil)).Elem(), TopicRuleRepublishActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleRepublishActionPtrInput)(nil)).Elem(), TopicRuleRepublishActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleRepublishActionHeadersInput)(nil)).Elem(), TopicRuleRepublishActionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleRepublishActionHeadersPtrInput)(nil)).Elem(), TopicRuleRepublishActionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleS3ActionInput)(nil)).Elem(), TopicRuleS3ActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleS3ActionPtrInput)(nil)).Elem(), TopicRuleS3ActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleSigV4AuthorizationInput)(nil)).Elem(), TopicRuleSigV4AuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleSigV4AuthorizationPtrInput)(nil)).Elem(), TopicRuleSigV4AuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleSnsActionInput)(nil)).Elem(), TopicRuleSnsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleSnsActionPtrInput)(nil)).Elem(), TopicRuleSnsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleSqsActionInput)(nil)).Elem(), TopicRuleSqsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleSqsActionPtrInput)(nil)).Elem(), TopicRuleSqsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleStepFunctionsActionInput)(nil)).Elem(), TopicRuleStepFunctionsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleStepFunctionsActionPtrInput)(nil)).Elem(), TopicRuleStepFunctionsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestampInput)(nil)).Elem(), TopicRuleTimestampArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestampPtrInput)(nil)).Elem(), TopicRuleTimestampArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestreamActionInput)(nil)).Elem(), TopicRuleTimestreamActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestreamActionPtrInput)(nil)).Elem(), TopicRuleTimestreamActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestreamDimensionInput)(nil)).Elem(), TopicRuleTimestreamDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestreamDimensionArrayInput)(nil)).Elem(), TopicRuleTimestreamDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestreamTimestampInput)(nil)).Elem(), TopicRuleTimestreamTimestampArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleTimestreamTimestampPtrInput)(nil)).Elem(), TopicRuleTimestreamTimestampArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleUserPropertyInput)(nil)).Elem(), TopicRuleUserPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TopicRuleUserPropertyArrayInput)(nil)).Elem(), TopicRuleUserPropertyArray{})
	pulumi.RegisterOutputType(AbortConfigPropertiesOutput{})
	pulumi.RegisterOutputType(AbortConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationsOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(BillingGroupPropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(BillingGroupPropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CaCertificateRegistrationConfigOutput{})
	pulumi.RegisterOutputType(CaCertificateRegistrationConfigPtrOutput{})
	pulumi.RegisterOutputType(CommandParameterOutput{})
	pulumi.RegisterOutputType(CommandParameterArrayOutput{})
	pulumi.RegisterOutputType(CommandParameterValueOutput{})
	pulumi.RegisterOutputType(CommandParameterValuePtrOutput{})
	pulumi.RegisterOutputType(CommandPayloadOutput{})
	pulumi.RegisterOutputType(CommandPayloadPtrOutput{})
	pulumi.RegisterOutputType(DomainConfigurationAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(DomainConfigurationAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainConfigurationClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(DomainConfigurationClientCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainConfigurationServerCertificateConfigOutput{})
	pulumi.RegisterOutputType(DomainConfigurationServerCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainConfigurationServerCertificateSummaryOutput{})
	pulumi.RegisterOutputType(DomainConfigurationServerCertificateSummaryArrayOutput{})
	pulumi.RegisterOutputType(DomainConfigurationTlsConfigOutput{})
	pulumi.RegisterOutputType(DomainConfigurationTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(FleetMetricAggregationTypeOutput{})
	pulumi.RegisterOutputType(FleetMetricAggregationTypePtrOutput{})
	pulumi.RegisterOutputType(JobExecutionsRetryConfigPropertiesOutput{})
	pulumi.RegisterOutputType(JobExecutionsRetryConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(JobExecutionsRolloutConfigPropertiesOutput{})
	pulumi.RegisterOutputType(JobExecutionsRolloutConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(JobTemplateAbortCriteriaOutput{})
	pulumi.RegisterOutputType(JobTemplateAbortCriteriaArrayOutput{})
	pulumi.RegisterOutputType(JobTemplateExponentialRolloutRateOutput{})
	pulumi.RegisterOutputType(JobTemplateExponentialRolloutRatePtrOutput{})
	pulumi.RegisterOutputType(JobTemplateMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(JobTemplateMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(JobTemplateRateIncreaseCriteriaOutput{})
	pulumi.RegisterOutputType(JobTemplateRateIncreaseCriteriaPtrOutput{})
	pulumi.RegisterOutputType(JobTemplateRetryCriteriaOutput{})
	pulumi.RegisterOutputType(JobTemplateRetryCriteriaArrayOutput{})
	pulumi.RegisterOutputType(MetricsExportConfigPropertiesOutput{})
	pulumi.RegisterOutputType(MetricsExportConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionActionParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionActionParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionAddThingsToThingGroupParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionAddThingsToThingGroupParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionEnableIoTLoggingParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionEnableIoTLoggingParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionPublishFindingToSnsParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionPublishFindingToSnsParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionReplaceDefaultPolicyVersionParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateCaCertificateParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateCaCertificateParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateDeviceCertificateParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateDeviceCertificateParamsPtrOutput{})
	pulumi.RegisterOutputType(PresignedUrlConfigPropertiesOutput{})
	pulumi.RegisterOutputType(PresignedUrlConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateProvisioningHookOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateProvisioningHookPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileAlertTargetOutput{})
	pulumi.RegisterOutputType(SecurityProfileAlertTargetMapOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorCriteriaOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorCriteriaPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileMachineLearningDetectionConfigOutput{})
	pulumi.RegisterOutputType(SecurityProfileMachineLearningDetectionConfigPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricDimensionOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricDimensionPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricToRetainOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricToRetainArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricValueOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricValuePtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileStatisticalThresholdOutput{})
	pulumi.RegisterOutputType(SecurityProfileStatisticalThresholdPtrOutput{})
	pulumi.RegisterOutputType(ThingAttributePayloadOutput{})
	pulumi.RegisterOutputType(ThingAttributePayloadPtrOutput{})
	pulumi.RegisterOutputType(ThingGroupAttributePayloadOutput{})
	pulumi.RegisterOutputType(ThingGroupAttributePayloadPtrOutput{})
	pulumi.RegisterOutputType(ThingGroupPropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(ThingGroupPropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ThingTypePropagatingAttributeOutput{})
	pulumi.RegisterOutputType(ThingTypePropagatingAttributeArrayOutput{})
	pulumi.RegisterOutputType(ThingTypePropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(ThingTypePropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(ThingTypePropertiesPropertiesMqtt5ConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TimeoutConfigPropertiesOutput{})
	pulumi.RegisterOutputType(TimeoutConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleActionOutput{})
	pulumi.RegisterOutputType(TopicRuleActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleActionArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyTimestampOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyValueOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyValueArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyVariantOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchAlarmActionOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchAlarmActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchLogsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchLogsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchMetricActionOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchMetricActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationHttpUrlDestinationSummaryOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationVpcDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationVpcDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDBv2ActionOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDBv2ActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDbActionOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDbActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchActionOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehoseActionOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehoseActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionHeaderOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionHeaderArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpAuthorizationOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotAnalyticsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleIotAnalyticsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotEventsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleIotEventsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotSiteWiseActionOutput{})
	pulumi.RegisterOutputType(TopicRuleIotSiteWiseActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleKafkaActionOutput{})
	pulumi.RegisterOutputType(TopicRuleKafkaActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleKafkaActionHeaderOutput{})
	pulumi.RegisterOutputType(TopicRuleKafkaActionHeaderArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisActionOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleLambdaActionOutput{})
	pulumi.RegisterOutputType(TopicRuleLambdaActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleLocationActionOutput{})
	pulumi.RegisterOutputType(TopicRuleLocationActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleOpenSearchActionOutput{})
	pulumi.RegisterOutputType(TopicRuleOpenSearchActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRulePayloadOutput{})
	pulumi.RegisterOutputType(TopicRulePayloadPtrOutput{})
	pulumi.RegisterOutputType(TopicRulePutAssetPropertyValueEntryOutput{})
	pulumi.RegisterOutputType(TopicRulePutAssetPropertyValueEntryArrayOutput{})
	pulumi.RegisterOutputType(TopicRulePutItemInputOutput{})
	pulumi.RegisterOutputType(TopicRulePutItemInputPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishActionOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishActionHeadersOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishActionHeadersPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleS3ActionOutput{})
	pulumi.RegisterOutputType(TopicRuleS3ActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSigV4AuthorizationOutput{})
	pulumi.RegisterOutputType(TopicRuleSigV4AuthorizationPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleStepFunctionsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleStepFunctionsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestampOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestampPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamActionOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamDimensionOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamDimensionArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamTimestampOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamTimestampPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleUserPropertyOutput{})
	pulumi.RegisterOutputType(TopicRuleUserPropertyArrayOutput{})
}
