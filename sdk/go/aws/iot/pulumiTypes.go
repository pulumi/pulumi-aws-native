// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The configuration for a specific audit check.
type AccountAuditConfigurationAuditCheckConfiguration struct {
	// True if the check is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// AccountAuditConfigurationAuditCheckConfigurationInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationArgs and AccountAuditConfigurationAuditCheckConfigurationOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationInput` via:
//
//          AccountAuditConfigurationAuditCheckConfigurationArgs{...}
type AccountAuditConfigurationAuditCheckConfigurationInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationOutput() AccountAuditConfigurationAuditCheckConfigurationOutput
	ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationOutput
}

// The configuration for a specific audit check.
type AccountAuditConfigurationAuditCheckConfigurationArgs struct {
	// True if the check is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AccountAuditConfigurationAuditCheckConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationOutput() AccountAuditConfigurationAuditCheckConfigurationOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationOutput)
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationArgs) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationOutput).ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditCheckConfigurationPtrInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationArgs, AccountAuditConfigurationAuditCheckConfigurationPtr and AccountAuditConfigurationAuditCheckConfigurationPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationPtrInput` via:
//
//          AccountAuditConfigurationAuditCheckConfigurationArgs{...}
//
//  or:
//
//          nil
type AccountAuditConfigurationAuditCheckConfigurationPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput
	ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput
}

type accountAuditConfigurationAuditCheckConfigurationPtrType AccountAuditConfigurationAuditCheckConfigurationArgs

func AccountAuditConfigurationAuditCheckConfigurationPtr(v *AccountAuditConfigurationAuditCheckConfigurationArgs) AccountAuditConfigurationAuditCheckConfigurationPtrInput {
	return (*accountAuditConfigurationAuditCheckConfigurationPtrType)(v)
}

func (*accountAuditConfigurationAuditCheckConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditCheckConfigurationPtrType) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditCheckConfigurationPtrType) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// The configuration for a specific audit check.
type AccountAuditConfigurationAuditCheckConfigurationOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationOutput() AccountAuditConfigurationAuditCheckConfigurationOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditCheckConfigurationOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditCheckConfiguration) *AccountAuditConfigurationAuditCheckConfiguration {
		return &v
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

// True if the check is enabled.
func (o AccountAuditConfigurationAuditCheckConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AccountAuditConfigurationAuditCheckConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfiguration)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutput() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) Elem() AccountAuditConfigurationAuditCheckConfigurationOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfiguration) AccountAuditConfigurationAuditCheckConfiguration {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditCheckConfiguration
		return ret
	}).(AccountAuditConfigurationAuditCheckConfigurationOutput)
}

// True if the check is enabled.
func (o AccountAuditConfigurationAuditCheckConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies which audit checks are enabled and disabled for this account.
type AccountAuditConfigurationAuditCheckConfigurations struct {
	AuthenticatedCognitoRoleOverlyPermissiveCheck   *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"authenticatedCognitoRoleOverlyPermissiveCheck"`
	CaCertificateExpiringCheck                      *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"caCertificateExpiringCheck"`
	CaCertificateKeyQualityCheck                    *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"caCertificateKeyQualityCheck"`
	ConflictingClientIdsCheck                       *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"conflictingClientIdsCheck"`
	DeviceCertificateExpiringCheck                  *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"deviceCertificateExpiringCheck"`
	DeviceCertificateKeyQualityCheck                *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"deviceCertificateKeyQualityCheck"`
	DeviceCertificateSharedCheck                    *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"deviceCertificateSharedCheck"`
	IotPolicyOverlyPermissiveCheck                  *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"iotPolicyOverlyPermissiveCheck"`
	IotRoleAliasAllowsAccessToUnusedServicesCheck   *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"iotRoleAliasAllowsAccessToUnusedServicesCheck"`
	IotRoleAliasOverlyPermissiveCheck               *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"iotRoleAliasOverlyPermissiveCheck"`
	LoggingDisabledCheck                            *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"loggingDisabledCheck"`
	RevokedCaCertificateStillActiveCheck            *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"revokedCaCertificateStillActiveCheck"`
	RevokedDeviceCertificateStillActiveCheck        *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"revokedDeviceCertificateStillActiveCheck"`
	UnauthenticatedCognitoRoleOverlyPermissiveCheck *AccountAuditConfigurationAuditCheckConfiguration `pulumi:"unauthenticatedCognitoRoleOverlyPermissiveCheck"`
}

// AccountAuditConfigurationAuditCheckConfigurationsInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationsArgs and AccountAuditConfigurationAuditCheckConfigurationsOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationsInput` via:
//
//          AccountAuditConfigurationAuditCheckConfigurationsArgs{...}
type AccountAuditConfigurationAuditCheckConfigurationsInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationsOutput() AccountAuditConfigurationAuditCheckConfigurationsOutput
	ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationsOutput
}

// Specifies which audit checks are enabled and disabled for this account.
type AccountAuditConfigurationAuditCheckConfigurationsArgs struct {
	AuthenticatedCognitoRoleOverlyPermissiveCheck   AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"authenticatedCognitoRoleOverlyPermissiveCheck"`
	CaCertificateExpiringCheck                      AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"caCertificateExpiringCheck"`
	CaCertificateKeyQualityCheck                    AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"caCertificateKeyQualityCheck"`
	ConflictingClientIdsCheck                       AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"conflictingClientIdsCheck"`
	DeviceCertificateExpiringCheck                  AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"deviceCertificateExpiringCheck"`
	DeviceCertificateKeyQualityCheck                AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"deviceCertificateKeyQualityCheck"`
	DeviceCertificateSharedCheck                    AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"deviceCertificateSharedCheck"`
	IotPolicyOverlyPermissiveCheck                  AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"iotPolicyOverlyPermissiveCheck"`
	IotRoleAliasAllowsAccessToUnusedServicesCheck   AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"iotRoleAliasAllowsAccessToUnusedServicesCheck"`
	IotRoleAliasOverlyPermissiveCheck               AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"iotRoleAliasOverlyPermissiveCheck"`
	LoggingDisabledCheck                            AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"loggingDisabledCheck"`
	RevokedCaCertificateStillActiveCheck            AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"revokedCaCertificateStillActiveCheck"`
	RevokedDeviceCertificateStillActiveCheck        AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"revokedDeviceCertificateStillActiveCheck"`
	UnauthenticatedCognitoRoleOverlyPermissiveCheck AccountAuditConfigurationAuditCheckConfigurationPtrInput `pulumi:"unauthenticatedCognitoRoleOverlyPermissiveCheck"`
}

func (AccountAuditConfigurationAuditCheckConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditCheckConfigurationsArgs) ToAccountAuditConfigurationAuditCheckConfigurationsOutput() AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationsArgs) ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationsOutput)
}

func (i AccountAuditConfigurationAuditCheckConfigurationsArgs) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutput() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditCheckConfigurationsArgs) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationsOutput).ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditCheckConfigurationsPtrInput is an input type that accepts AccountAuditConfigurationAuditCheckConfigurationsArgs, AccountAuditConfigurationAuditCheckConfigurationsPtr and AccountAuditConfigurationAuditCheckConfigurationsPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditCheckConfigurationsPtrInput` via:
//
//          AccountAuditConfigurationAuditCheckConfigurationsArgs{...}
//
//  or:
//
//          nil
type AccountAuditConfigurationAuditCheckConfigurationsPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutput() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput
	ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditCheckConfigurationsPtrOutput
}

type accountAuditConfigurationAuditCheckConfigurationsPtrType AccountAuditConfigurationAuditCheckConfigurationsArgs

func AccountAuditConfigurationAuditCheckConfigurationsPtr(v *AccountAuditConfigurationAuditCheckConfigurationsArgs) AccountAuditConfigurationAuditCheckConfigurationsPtrInput {
	return (*accountAuditConfigurationAuditCheckConfigurationsPtrType)(v)
}

func (*accountAuditConfigurationAuditCheckConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditCheckConfigurationsPtrType) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutput() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return i.ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditCheckConfigurationsPtrType) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditCheckConfigurationsPtrOutput)
}

// Specifies which audit checks are enabled and disabled for this account.
type AccountAuditConfigurationAuditCheckConfigurationsOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ToAccountAuditConfigurationAuditCheckConfigurationsOutput() AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ToAccountAuditConfigurationAuditCheckConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutput() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o.ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfigurations {
		return &v
	}).(AccountAuditConfigurationAuditCheckConfigurationsPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) AuthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.AuthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) CaCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.CaCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) CaCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.CaCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) ConflictingClientIdsCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.ConflictingClientIdsCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) DeviceCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.DeviceCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) DeviceCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.DeviceCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) DeviceCertificateSharedCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.DeviceCertificateSharedCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IotPolicyOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IotPolicyOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IotRoleAliasAllowsAccessToUnusedServicesCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IotRoleAliasAllowsAccessToUnusedServicesCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) IotRoleAliasOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.IotRoleAliasOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) LoggingDisabledCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.LoggingDisabledCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) RevokedCaCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.RevokedCaCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) RevokedDeviceCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.RevokedDeviceCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsOutput) UnauthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		return v.UnauthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

type AccountAuditConfigurationAuditCheckConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditCheckConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutput() AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ToAccountAuditConfigurationAuditCheckConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditCheckConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) Elem() AccountAuditConfigurationAuditCheckConfigurationsOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) AccountAuditConfigurationAuditCheckConfigurations {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditCheckConfigurations
		return ret
	}).(AccountAuditConfigurationAuditCheckConfigurationsOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) AuthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.AuthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) CaCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.CaCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) CaCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.CaCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) ConflictingClientIdsCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.ConflictingClientIdsCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) DeviceCertificateExpiringCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceCertificateExpiringCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) DeviceCertificateKeyQualityCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceCertificateKeyQualityCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) DeviceCertificateSharedCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceCertificateSharedCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IotPolicyOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IotPolicyOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IotRoleAliasAllowsAccessToUnusedServicesCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IotRoleAliasAllowsAccessToUnusedServicesCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) IotRoleAliasOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.IotRoleAliasOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) LoggingDisabledCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.LoggingDisabledCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) RevokedCaCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.RevokedCaCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) RevokedDeviceCertificateStillActiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.RevokedDeviceCertificateStillActiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

func (o AccountAuditConfigurationAuditCheckConfigurationsPtrOutput) UnauthenticatedCognitoRoleOverlyPermissiveCheck() AccountAuditConfigurationAuditCheckConfigurationPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditCheckConfigurations) *AccountAuditConfigurationAuditCheckConfiguration {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedCognitoRoleOverlyPermissiveCheck
	}).(AccountAuditConfigurationAuditCheckConfigurationPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTarget struct {
	// True if notifications to the target are enabled.
	Enabled *bool `pulumi:"enabled"`
	// The ARN of the role that grants permission to send notifications to the target.
	RoleArn *string `pulumi:"roleArn"`
	// The ARN of the target (SNS topic) to which audit notifications are sent.
	TargetArn *string `pulumi:"targetArn"`
}

// AccountAuditConfigurationAuditNotificationTargetInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetArgs and AccountAuditConfigurationAuditNotificationTargetOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetInput` via:
//
//          AccountAuditConfigurationAuditNotificationTargetArgs{...}
type AccountAuditConfigurationAuditNotificationTargetInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetOutput() AccountAuditConfigurationAuditNotificationTargetOutput
	ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetOutput
}

type AccountAuditConfigurationAuditNotificationTargetArgs struct {
	// True if notifications to the target are enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The ARN of the role that grants permission to send notifications to the target.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The ARN of the target (SNS topic) to which audit notifications are sent.
	TargetArn pulumi.StringPtrInput `pulumi:"targetArn"`
}

func (AccountAuditConfigurationAuditNotificationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetOutput() AccountAuditConfigurationAuditNotificationTargetOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetOutput)
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetArgs) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetOutput).ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditNotificationTargetPtrInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetArgs, AccountAuditConfigurationAuditNotificationTargetPtr and AccountAuditConfigurationAuditNotificationTargetPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetPtrInput` via:
//
//          AccountAuditConfigurationAuditNotificationTargetArgs{...}
//
//  or:
//
//          nil
type AccountAuditConfigurationAuditNotificationTargetPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput
	ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput
}

type accountAuditConfigurationAuditNotificationTargetPtrType AccountAuditConfigurationAuditNotificationTargetArgs

func AccountAuditConfigurationAuditNotificationTargetPtr(v *AccountAuditConfigurationAuditNotificationTargetArgs) AccountAuditConfigurationAuditNotificationTargetPtrInput {
	return (*accountAuditConfigurationAuditNotificationTargetPtrType)(v)
}

func (*accountAuditConfigurationAuditNotificationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditNotificationTargetPtrType) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditNotificationTargetPtrType) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTargetOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetOutput() AccountAuditConfigurationAuditNotificationTargetOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditNotificationTargetOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditNotificationTarget) *AccountAuditConfigurationAuditNotificationTarget {
		return &v
	}).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

// True if notifications to the target are enabled.
func (o AccountAuditConfigurationAuditNotificationTargetOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTarget) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ARN of the role that grants permission to send notifications to the target.
func (o AccountAuditConfigurationAuditNotificationTargetOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTarget) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The ARN of the target (SNS topic) to which audit notifications are sent.
func (o AccountAuditConfigurationAuditNotificationTargetOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTarget) *string { return v.TargetArn }).(pulumi.StringPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTargetPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTarget)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutput() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) Elem() AccountAuditConfigurationAuditNotificationTargetOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) AccountAuditConfigurationAuditNotificationTarget {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditNotificationTarget
		return ret
	}).(AccountAuditConfigurationAuditNotificationTargetOutput)
}

// True if notifications to the target are enabled.
func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The ARN of the role that grants permission to send notifications to the target.
func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the target (SNS topic) to which audit notifications are sent.
func (o AccountAuditConfigurationAuditNotificationTargetPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTarget) *string {
		if v == nil {
			return nil
		}
		return v.TargetArn
	}).(pulumi.StringPtrOutput)
}

// Information about the targets to which audit notifications are sent.
type AccountAuditConfigurationAuditNotificationTargetConfigurations struct {
	Sns *AccountAuditConfigurationAuditNotificationTarget `pulumi:"sns"`
}

// AccountAuditConfigurationAuditNotificationTargetConfigurationsInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs and AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetConfigurationsInput` via:
//
//          AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs{...}
type AccountAuditConfigurationAuditNotificationTargetConfigurationsInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput
	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput
}

// Information about the targets to which audit notifications are sent.
type AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs struct {
	Sns AccountAuditConfigurationAuditNotificationTargetPtrInput `pulumi:"sns"`
}

func (AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput)
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Background())
}

func (i AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput).ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx)
}

// AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput is an input type that accepts AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs, AccountAuditConfigurationAuditNotificationTargetConfigurationsPtr and AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput values.
// You can construct a concrete instance of `AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput` via:
//
//          AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs{...}
//
//  or:
//
//          nil
type AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput interface {
	pulumi.Input

	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput
	ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput
}

type accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs

func AccountAuditConfigurationAuditNotificationTargetConfigurationsPtr(v *AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrInput {
	return (*accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType)(v)
}

func (*accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (i *accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return i.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Background())
}

func (i *accountAuditConfigurationAuditNotificationTargetConfigurationsPtrType) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput)
}

// Information about the targets to which audit notifications are sent.
type AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o.ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(context.Background())
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAuditConfigurationAuditNotificationTargetConfigurations) *AccountAuditConfigurationAuditNotificationTargetConfigurations {
		return &v
	}).(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput)
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput) Sns() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ApplyT(func(v AccountAuditConfigurationAuditNotificationTargetConfigurations) *AccountAuditConfigurationAuditNotificationTarget {
		return v.Sns
	}).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

type AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuditConfigurationAuditNotificationTargetConfigurations)(nil)).Elem()
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput() AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) ToAccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutputWithContext(ctx context.Context) AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput {
	return o
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) Elem() AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTargetConfigurations) AccountAuditConfigurationAuditNotificationTargetConfigurations {
		if v != nil {
			return *v
		}
		var ret AccountAuditConfigurationAuditNotificationTargetConfigurations
		return ret
	}).(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput)
}

func (o AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput) Sns() AccountAuditConfigurationAuditNotificationTargetPtrOutput {
	return o.ApplyT(func(v *AccountAuditConfigurationAuditNotificationTargetConfigurations) *AccountAuditConfigurationAuditNotificationTarget {
		if v == nil {
			return nil
		}
		return v.Sns
	}).(AccountAuditConfigurationAuditNotificationTargetPtrOutput)
}

type AuthorizerTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AuthorizerTagInput is an input type that accepts AuthorizerTagArgs and AuthorizerTagOutput values.
// You can construct a concrete instance of `AuthorizerTagInput` via:
//
//          AuthorizerTagArgs{...}
type AuthorizerTagInput interface {
	pulumi.Input

	ToAuthorizerTagOutput() AuthorizerTagOutput
	ToAuthorizerTagOutputWithContext(context.Context) AuthorizerTagOutput
}

type AuthorizerTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AuthorizerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizerTag)(nil)).Elem()
}

func (i AuthorizerTagArgs) ToAuthorizerTagOutput() AuthorizerTagOutput {
	return i.ToAuthorizerTagOutputWithContext(context.Background())
}

func (i AuthorizerTagArgs) ToAuthorizerTagOutputWithContext(ctx context.Context) AuthorizerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerTagOutput)
}

// AuthorizerTagArrayInput is an input type that accepts AuthorizerTagArray and AuthorizerTagArrayOutput values.
// You can construct a concrete instance of `AuthorizerTagArrayInput` via:
//
//          AuthorizerTagArray{ AuthorizerTagArgs{...} }
type AuthorizerTagArrayInput interface {
	pulumi.Input

	ToAuthorizerTagArrayOutput() AuthorizerTagArrayOutput
	ToAuthorizerTagArrayOutputWithContext(context.Context) AuthorizerTagArrayOutput
}

type AuthorizerTagArray []AuthorizerTagInput

func (AuthorizerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizerTag)(nil)).Elem()
}

func (i AuthorizerTagArray) ToAuthorizerTagArrayOutput() AuthorizerTagArrayOutput {
	return i.ToAuthorizerTagArrayOutputWithContext(context.Background())
}

func (i AuthorizerTagArray) ToAuthorizerTagArrayOutputWithContext(ctx context.Context) AuthorizerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerTagArrayOutput)
}

type AuthorizerTagOutput struct{ *pulumi.OutputState }

func (AuthorizerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizerTag)(nil)).Elem()
}

func (o AuthorizerTagOutput) ToAuthorizerTagOutput() AuthorizerTagOutput {
	return o
}

func (o AuthorizerTagOutput) ToAuthorizerTagOutputWithContext(ctx context.Context) AuthorizerTagOutput {
	return o
}

func (o AuthorizerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AuthorizerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizerTag) string { return v.Value }).(pulumi.StringOutput)
}

type AuthorizerTagArrayOutput struct{ *pulumi.OutputState }

func (AuthorizerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizerTag)(nil)).Elem()
}

func (o AuthorizerTagArrayOutput) ToAuthorizerTagArrayOutput() AuthorizerTagArrayOutput {
	return o
}

func (o AuthorizerTagArrayOutput) ToAuthorizerTagArrayOutputWithContext(ctx context.Context) AuthorizerTagArrayOutput {
	return o
}

func (o AuthorizerTagArrayOutput) Index(i pulumi.IntInput) AuthorizerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizerTag {
		return vs[0].([]AuthorizerTag)[vs[1].(int)]
	}).(AuthorizerTagOutput)
}

// A key-value pair to associate with a resource.
type CustomMetricTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// CustomMetricTagInput is an input type that accepts CustomMetricTagArgs and CustomMetricTagOutput values.
// You can construct a concrete instance of `CustomMetricTagInput` via:
//
//          CustomMetricTagArgs{...}
type CustomMetricTagInput interface {
	pulumi.Input

	ToCustomMetricTagOutput() CustomMetricTagOutput
	ToCustomMetricTagOutputWithContext(context.Context) CustomMetricTagOutput
}

// A key-value pair to associate with a resource.
type CustomMetricTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CustomMetricTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomMetricTag)(nil)).Elem()
}

func (i CustomMetricTagArgs) ToCustomMetricTagOutput() CustomMetricTagOutput {
	return i.ToCustomMetricTagOutputWithContext(context.Background())
}

func (i CustomMetricTagArgs) ToCustomMetricTagOutputWithContext(ctx context.Context) CustomMetricTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomMetricTagOutput)
}

// CustomMetricTagArrayInput is an input type that accepts CustomMetricTagArray and CustomMetricTagArrayOutput values.
// You can construct a concrete instance of `CustomMetricTagArrayInput` via:
//
//          CustomMetricTagArray{ CustomMetricTagArgs{...} }
type CustomMetricTagArrayInput interface {
	pulumi.Input

	ToCustomMetricTagArrayOutput() CustomMetricTagArrayOutput
	ToCustomMetricTagArrayOutputWithContext(context.Context) CustomMetricTagArrayOutput
}

type CustomMetricTagArray []CustomMetricTagInput

func (CustomMetricTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomMetricTag)(nil)).Elem()
}

func (i CustomMetricTagArray) ToCustomMetricTagArrayOutput() CustomMetricTagArrayOutput {
	return i.ToCustomMetricTagArrayOutputWithContext(context.Background())
}

func (i CustomMetricTagArray) ToCustomMetricTagArrayOutputWithContext(ctx context.Context) CustomMetricTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomMetricTagArrayOutput)
}

// A key-value pair to associate with a resource.
type CustomMetricTagOutput struct{ *pulumi.OutputState }

func (CustomMetricTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomMetricTag)(nil)).Elem()
}

func (o CustomMetricTagOutput) ToCustomMetricTagOutput() CustomMetricTagOutput {
	return o
}

func (o CustomMetricTagOutput) ToCustomMetricTagOutputWithContext(ctx context.Context) CustomMetricTagOutput {
	return o
}

// The tag's key.
func (o CustomMetricTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CustomMetricTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o CustomMetricTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CustomMetricTag) string { return v.Value }).(pulumi.StringOutput)
}

type CustomMetricTagArrayOutput struct{ *pulumi.OutputState }

func (CustomMetricTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomMetricTag)(nil)).Elem()
}

func (o CustomMetricTagArrayOutput) ToCustomMetricTagArrayOutput() CustomMetricTagArrayOutput {
	return o
}

func (o CustomMetricTagArrayOutput) ToCustomMetricTagArrayOutputWithContext(ctx context.Context) CustomMetricTagArrayOutput {
	return o
}

func (o CustomMetricTagArrayOutput) Index(i pulumi.IntInput) CustomMetricTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomMetricTag {
		return vs[0].([]CustomMetricTag)[vs[1].(int)]
	}).(CustomMetricTagOutput)
}

// A key-value pair to associate with a resource.
type DimensionTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// DimensionTagInput is an input type that accepts DimensionTagArgs and DimensionTagOutput values.
// You can construct a concrete instance of `DimensionTagInput` via:
//
//          DimensionTagArgs{...}
type DimensionTagInput interface {
	pulumi.Input

	ToDimensionTagOutput() DimensionTagOutput
	ToDimensionTagOutputWithContext(context.Context) DimensionTagOutput
}

// A key-value pair to associate with a resource.
type DimensionTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DimensionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DimensionTag)(nil)).Elem()
}

func (i DimensionTagArgs) ToDimensionTagOutput() DimensionTagOutput {
	return i.ToDimensionTagOutputWithContext(context.Background())
}

func (i DimensionTagArgs) ToDimensionTagOutputWithContext(ctx context.Context) DimensionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DimensionTagOutput)
}

// DimensionTagArrayInput is an input type that accepts DimensionTagArray and DimensionTagArrayOutput values.
// You can construct a concrete instance of `DimensionTagArrayInput` via:
//
//          DimensionTagArray{ DimensionTagArgs{...} }
type DimensionTagArrayInput interface {
	pulumi.Input

	ToDimensionTagArrayOutput() DimensionTagArrayOutput
	ToDimensionTagArrayOutputWithContext(context.Context) DimensionTagArrayOutput
}

type DimensionTagArray []DimensionTagInput

func (DimensionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DimensionTag)(nil)).Elem()
}

func (i DimensionTagArray) ToDimensionTagArrayOutput() DimensionTagArrayOutput {
	return i.ToDimensionTagArrayOutputWithContext(context.Background())
}

func (i DimensionTagArray) ToDimensionTagArrayOutputWithContext(ctx context.Context) DimensionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DimensionTagArrayOutput)
}

// A key-value pair to associate with a resource.
type DimensionTagOutput struct{ *pulumi.OutputState }

func (DimensionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DimensionTag)(nil)).Elem()
}

func (o DimensionTagOutput) ToDimensionTagOutput() DimensionTagOutput {
	return o
}

func (o DimensionTagOutput) ToDimensionTagOutputWithContext(ctx context.Context) DimensionTagOutput {
	return o
}

// The tag's key.
func (o DimensionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DimensionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o DimensionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DimensionTag) string { return v.Value }).(pulumi.StringOutput)
}

type DimensionTagArrayOutput struct{ *pulumi.OutputState }

func (DimensionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DimensionTag)(nil)).Elem()
}

func (o DimensionTagArrayOutput) ToDimensionTagArrayOutput() DimensionTagArrayOutput {
	return o
}

func (o DimensionTagArrayOutput) ToDimensionTagArrayOutputWithContext(ctx context.Context) DimensionTagArrayOutput {
	return o
}

func (o DimensionTagArrayOutput) Index(i pulumi.IntInput) DimensionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DimensionTag {
		return vs[0].([]DimensionTag)[vs[1].(int)]
	}).(DimensionTagOutput)
}

type DomainConfigurationAuthorizerConfig struct {
	AllowAuthorizerOverride *bool   `pulumi:"allowAuthorizerOverride"`
	DefaultAuthorizerName   *string `pulumi:"defaultAuthorizerName"`
}

// DomainConfigurationAuthorizerConfigInput is an input type that accepts DomainConfigurationAuthorizerConfigArgs and DomainConfigurationAuthorizerConfigOutput values.
// You can construct a concrete instance of `DomainConfigurationAuthorizerConfigInput` via:
//
//          DomainConfigurationAuthorizerConfigArgs{...}
type DomainConfigurationAuthorizerConfigInput interface {
	pulumi.Input

	ToDomainConfigurationAuthorizerConfigOutput() DomainConfigurationAuthorizerConfigOutput
	ToDomainConfigurationAuthorizerConfigOutputWithContext(context.Context) DomainConfigurationAuthorizerConfigOutput
}

type DomainConfigurationAuthorizerConfigArgs struct {
	AllowAuthorizerOverride pulumi.BoolPtrInput   `pulumi:"allowAuthorizerOverride"`
	DefaultAuthorizerName   pulumi.StringPtrInput `pulumi:"defaultAuthorizerName"`
}

func (DomainConfigurationAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigOutput() DomainConfigurationAuthorizerConfigOutput {
	return i.ToDomainConfigurationAuthorizerConfigOutputWithContext(context.Background())
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationAuthorizerConfigOutput)
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return i.ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i DomainConfigurationAuthorizerConfigArgs) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationAuthorizerConfigOutput).ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx)
}

// DomainConfigurationAuthorizerConfigPtrInput is an input type that accepts DomainConfigurationAuthorizerConfigArgs, DomainConfigurationAuthorizerConfigPtr and DomainConfigurationAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `DomainConfigurationAuthorizerConfigPtrInput` via:
//
//          DomainConfigurationAuthorizerConfigArgs{...}
//
//  or:
//
//          nil
type DomainConfigurationAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput
	ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Context) DomainConfigurationAuthorizerConfigPtrOutput
}

type domainConfigurationAuthorizerConfigPtrType DomainConfigurationAuthorizerConfigArgs

func DomainConfigurationAuthorizerConfigPtr(v *DomainConfigurationAuthorizerConfigArgs) DomainConfigurationAuthorizerConfigPtrInput {
	return (*domainConfigurationAuthorizerConfigPtrType)(v)
}

func (*domainConfigurationAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (i *domainConfigurationAuthorizerConfigPtrType) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return i.ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *domainConfigurationAuthorizerConfigPtrType) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationAuthorizerConfigPtrOutput)
}

type DomainConfigurationAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (DomainConfigurationAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigOutput() DomainConfigurationAuthorizerConfigOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return o.ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o DomainConfigurationAuthorizerConfigOutput) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainConfigurationAuthorizerConfig) *DomainConfigurationAuthorizerConfig {
		return &v
	}).(DomainConfigurationAuthorizerConfigPtrOutput)
}

func (o DomainConfigurationAuthorizerConfigOutput) AllowAuthorizerOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainConfigurationAuthorizerConfig) *bool { return v.AllowAuthorizerOverride }).(pulumi.BoolPtrOutput)
}

func (o DomainConfigurationAuthorizerConfigOutput) DefaultAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationAuthorizerConfig) *string { return v.DefaultAuthorizerName }).(pulumi.StringPtrOutput)
}

type DomainConfigurationAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainConfigurationAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainConfigurationAuthorizerConfig)(nil)).Elem()
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) ToDomainConfigurationAuthorizerConfigPtrOutput() DomainConfigurationAuthorizerConfigPtrOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) ToDomainConfigurationAuthorizerConfigPtrOutputWithContext(ctx context.Context) DomainConfigurationAuthorizerConfigPtrOutput {
	return o
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) Elem() DomainConfigurationAuthorizerConfigOutput {
	return o.ApplyT(func(v *DomainConfigurationAuthorizerConfig) DomainConfigurationAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret DomainConfigurationAuthorizerConfig
		return ret
	}).(DomainConfigurationAuthorizerConfigOutput)
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) AllowAuthorizerOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationAuthorizerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AllowAuthorizerOverride
	}).(pulumi.BoolPtrOutput)
}

func (o DomainConfigurationAuthorizerConfigPtrOutput) DefaultAuthorizerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainConfigurationAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAuthorizerName
	}).(pulumi.StringPtrOutput)
}

type DomainConfigurationServerCertificateSummary struct {
	ServerCertificateArn          *string                                                             `pulumi:"serverCertificateArn"`
	ServerCertificateStatus       *DomainConfigurationServerCertificateSummaryServerCertificateStatus `pulumi:"serverCertificateStatus"`
	ServerCertificateStatusDetail *string                                                             `pulumi:"serverCertificateStatusDetail"`
}

// DomainConfigurationServerCertificateSummaryInput is an input type that accepts DomainConfigurationServerCertificateSummaryArgs and DomainConfigurationServerCertificateSummaryOutput values.
// You can construct a concrete instance of `DomainConfigurationServerCertificateSummaryInput` via:
//
//          DomainConfigurationServerCertificateSummaryArgs{...}
type DomainConfigurationServerCertificateSummaryInput interface {
	pulumi.Input

	ToDomainConfigurationServerCertificateSummaryOutput() DomainConfigurationServerCertificateSummaryOutput
	ToDomainConfigurationServerCertificateSummaryOutputWithContext(context.Context) DomainConfigurationServerCertificateSummaryOutput
}

type DomainConfigurationServerCertificateSummaryArgs struct {
	ServerCertificateArn          pulumi.StringPtrInput                                                      `pulumi:"serverCertificateArn"`
	ServerCertificateStatus       DomainConfigurationServerCertificateSummaryServerCertificateStatusPtrInput `pulumi:"serverCertificateStatus"`
	ServerCertificateStatusDetail pulumi.StringPtrInput                                                      `pulumi:"serverCertificateStatusDetail"`
}

func (DomainConfigurationServerCertificateSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationServerCertificateSummary)(nil)).Elem()
}

func (i DomainConfigurationServerCertificateSummaryArgs) ToDomainConfigurationServerCertificateSummaryOutput() DomainConfigurationServerCertificateSummaryOutput {
	return i.ToDomainConfigurationServerCertificateSummaryOutputWithContext(context.Background())
}

func (i DomainConfigurationServerCertificateSummaryArgs) ToDomainConfigurationServerCertificateSummaryOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationServerCertificateSummaryOutput)
}

// DomainConfigurationServerCertificateSummaryArrayInput is an input type that accepts DomainConfigurationServerCertificateSummaryArray and DomainConfigurationServerCertificateSummaryArrayOutput values.
// You can construct a concrete instance of `DomainConfigurationServerCertificateSummaryArrayInput` via:
//
//          DomainConfigurationServerCertificateSummaryArray{ DomainConfigurationServerCertificateSummaryArgs{...} }
type DomainConfigurationServerCertificateSummaryArrayInput interface {
	pulumi.Input

	ToDomainConfigurationServerCertificateSummaryArrayOutput() DomainConfigurationServerCertificateSummaryArrayOutput
	ToDomainConfigurationServerCertificateSummaryArrayOutputWithContext(context.Context) DomainConfigurationServerCertificateSummaryArrayOutput
}

type DomainConfigurationServerCertificateSummaryArray []DomainConfigurationServerCertificateSummaryInput

func (DomainConfigurationServerCertificateSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainConfigurationServerCertificateSummary)(nil)).Elem()
}

func (i DomainConfigurationServerCertificateSummaryArray) ToDomainConfigurationServerCertificateSummaryArrayOutput() DomainConfigurationServerCertificateSummaryArrayOutput {
	return i.ToDomainConfigurationServerCertificateSummaryArrayOutputWithContext(context.Background())
}

func (i DomainConfigurationServerCertificateSummaryArray) ToDomainConfigurationServerCertificateSummaryArrayOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationServerCertificateSummaryArrayOutput)
}

type DomainConfigurationServerCertificateSummaryOutput struct{ *pulumi.OutputState }

func (DomainConfigurationServerCertificateSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationServerCertificateSummary)(nil)).Elem()
}

func (o DomainConfigurationServerCertificateSummaryOutput) ToDomainConfigurationServerCertificateSummaryOutput() DomainConfigurationServerCertificateSummaryOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryOutput) ToDomainConfigurationServerCertificateSummaryOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateSummaryOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryOutput) ServerCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateSummary) *string { return v.ServerCertificateArn }).(pulumi.StringPtrOutput)
}

func (o DomainConfigurationServerCertificateSummaryOutput) ServerCertificateStatus() DomainConfigurationServerCertificateSummaryServerCertificateStatusPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateSummary) *DomainConfigurationServerCertificateSummaryServerCertificateStatus {
		return v.ServerCertificateStatus
	}).(DomainConfigurationServerCertificateSummaryServerCertificateStatusPtrOutput)
}

func (o DomainConfigurationServerCertificateSummaryOutput) ServerCertificateStatusDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainConfigurationServerCertificateSummary) *string { return v.ServerCertificateStatusDetail }).(pulumi.StringPtrOutput)
}

type DomainConfigurationServerCertificateSummaryArrayOutput struct{ *pulumi.OutputState }

func (DomainConfigurationServerCertificateSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainConfigurationServerCertificateSummary)(nil)).Elem()
}

func (o DomainConfigurationServerCertificateSummaryArrayOutput) ToDomainConfigurationServerCertificateSummaryArrayOutput() DomainConfigurationServerCertificateSummaryArrayOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryArrayOutput) ToDomainConfigurationServerCertificateSummaryArrayOutputWithContext(ctx context.Context) DomainConfigurationServerCertificateSummaryArrayOutput {
	return o
}

func (o DomainConfigurationServerCertificateSummaryArrayOutput) Index(i pulumi.IntInput) DomainConfigurationServerCertificateSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainConfigurationServerCertificateSummary {
		return vs[0].([]DomainConfigurationServerCertificateSummary)[vs[1].(int)]
	}).(DomainConfigurationServerCertificateSummaryOutput)
}

type DomainConfigurationTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DomainConfigurationTagInput is an input type that accepts DomainConfigurationTagArgs and DomainConfigurationTagOutput values.
// You can construct a concrete instance of `DomainConfigurationTagInput` via:
//
//          DomainConfigurationTagArgs{...}
type DomainConfigurationTagInput interface {
	pulumi.Input

	ToDomainConfigurationTagOutput() DomainConfigurationTagOutput
	ToDomainConfigurationTagOutputWithContext(context.Context) DomainConfigurationTagOutput
}

type DomainConfigurationTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DomainConfigurationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationTag)(nil)).Elem()
}

func (i DomainConfigurationTagArgs) ToDomainConfigurationTagOutput() DomainConfigurationTagOutput {
	return i.ToDomainConfigurationTagOutputWithContext(context.Background())
}

func (i DomainConfigurationTagArgs) ToDomainConfigurationTagOutputWithContext(ctx context.Context) DomainConfigurationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationTagOutput)
}

// DomainConfigurationTagArrayInput is an input type that accepts DomainConfigurationTagArray and DomainConfigurationTagArrayOutput values.
// You can construct a concrete instance of `DomainConfigurationTagArrayInput` via:
//
//          DomainConfigurationTagArray{ DomainConfigurationTagArgs{...} }
type DomainConfigurationTagArrayInput interface {
	pulumi.Input

	ToDomainConfigurationTagArrayOutput() DomainConfigurationTagArrayOutput
	ToDomainConfigurationTagArrayOutputWithContext(context.Context) DomainConfigurationTagArrayOutput
}

type DomainConfigurationTagArray []DomainConfigurationTagInput

func (DomainConfigurationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainConfigurationTag)(nil)).Elem()
}

func (i DomainConfigurationTagArray) ToDomainConfigurationTagArrayOutput() DomainConfigurationTagArrayOutput {
	return i.ToDomainConfigurationTagArrayOutputWithContext(context.Background())
}

func (i DomainConfigurationTagArray) ToDomainConfigurationTagArrayOutputWithContext(ctx context.Context) DomainConfigurationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainConfigurationTagArrayOutput)
}

type DomainConfigurationTagOutput struct{ *pulumi.OutputState }

func (DomainConfigurationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainConfigurationTag)(nil)).Elem()
}

func (o DomainConfigurationTagOutput) ToDomainConfigurationTagOutput() DomainConfigurationTagOutput {
	return o
}

func (o DomainConfigurationTagOutput) ToDomainConfigurationTagOutputWithContext(ctx context.Context) DomainConfigurationTagOutput {
	return o
}

func (o DomainConfigurationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DomainConfigurationTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DomainConfigurationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DomainConfigurationTag) string { return v.Value }).(pulumi.StringOutput)
}

type DomainConfigurationTagArrayOutput struct{ *pulumi.OutputState }

func (DomainConfigurationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainConfigurationTag)(nil)).Elem()
}

func (o DomainConfigurationTagArrayOutput) ToDomainConfigurationTagArrayOutput() DomainConfigurationTagArrayOutput {
	return o
}

func (o DomainConfigurationTagArrayOutput) ToDomainConfigurationTagArrayOutputWithContext(ctx context.Context) DomainConfigurationTagArrayOutput {
	return o
}

func (o DomainConfigurationTagArrayOutput) Index(i pulumi.IntInput) DomainConfigurationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainConfigurationTag {
		return vs[0].([]DomainConfigurationTag)[vs[1].(int)]
	}).(DomainConfigurationTagOutput)
}

// Aggregation types supported by Fleet Indexing
type FleetMetricAggregationType struct {
	// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
	Name string `pulumi:"name"`
	// Fleet Indexing aggregation type values
	Values []string `pulumi:"values"`
}

// FleetMetricAggregationTypeInput is an input type that accepts FleetMetricAggregationTypeArgs and FleetMetricAggregationTypeOutput values.
// You can construct a concrete instance of `FleetMetricAggregationTypeInput` via:
//
//          FleetMetricAggregationTypeArgs{...}
type FleetMetricAggregationTypeInput interface {
	pulumi.Input

	ToFleetMetricAggregationTypeOutput() FleetMetricAggregationTypeOutput
	ToFleetMetricAggregationTypeOutputWithContext(context.Context) FleetMetricAggregationTypeOutput
}

// Aggregation types supported by Fleet Indexing
type FleetMetricAggregationTypeArgs struct {
	// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
	Name pulumi.StringInput `pulumi:"name"`
	// Fleet Indexing aggregation type values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (FleetMetricAggregationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMetricAggregationType)(nil)).Elem()
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypeOutput() FleetMetricAggregationTypeOutput {
	return i.ToFleetMetricAggregationTypeOutputWithContext(context.Background())
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypeOutputWithContext(ctx context.Context) FleetMetricAggregationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricAggregationTypeOutput)
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return i.ToFleetMetricAggregationTypePtrOutputWithContext(context.Background())
}

func (i FleetMetricAggregationTypeArgs) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricAggregationTypeOutput).ToFleetMetricAggregationTypePtrOutputWithContext(ctx)
}

// FleetMetricAggregationTypePtrInput is an input type that accepts FleetMetricAggregationTypeArgs, FleetMetricAggregationTypePtr and FleetMetricAggregationTypePtrOutput values.
// You can construct a concrete instance of `FleetMetricAggregationTypePtrInput` via:
//
//          FleetMetricAggregationTypeArgs{...}
//
//  or:
//
//          nil
type FleetMetricAggregationTypePtrInput interface {
	pulumi.Input

	ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput
	ToFleetMetricAggregationTypePtrOutputWithContext(context.Context) FleetMetricAggregationTypePtrOutput
}

type fleetMetricAggregationTypePtrType FleetMetricAggregationTypeArgs

func FleetMetricAggregationTypePtr(v *FleetMetricAggregationTypeArgs) FleetMetricAggregationTypePtrInput {
	return (*fleetMetricAggregationTypePtrType)(v)
}

func (*fleetMetricAggregationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetMetricAggregationType)(nil)).Elem()
}

func (i *fleetMetricAggregationTypePtrType) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return i.ToFleetMetricAggregationTypePtrOutputWithContext(context.Background())
}

func (i *fleetMetricAggregationTypePtrType) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricAggregationTypePtrOutput)
}

// Aggregation types supported by Fleet Indexing
type FleetMetricAggregationTypeOutput struct{ *pulumi.OutputState }

func (FleetMetricAggregationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMetricAggregationType)(nil)).Elem()
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypeOutput() FleetMetricAggregationTypeOutput {
	return o
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypeOutputWithContext(ctx context.Context) FleetMetricAggregationTypeOutput {
	return o
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return o.ToFleetMetricAggregationTypePtrOutputWithContext(context.Background())
}

func (o FleetMetricAggregationTypeOutput) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetMetricAggregationType) *FleetMetricAggregationType {
		return &v
	}).(FleetMetricAggregationTypePtrOutput)
}

// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
func (o FleetMetricAggregationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FleetMetricAggregationType) string { return v.Name }).(pulumi.StringOutput)
}

// Fleet Indexing aggregation type values
func (o FleetMetricAggregationTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetMetricAggregationType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type FleetMetricAggregationTypePtrOutput struct{ *pulumi.OutputState }

func (FleetMetricAggregationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetMetricAggregationType)(nil)).Elem()
}

func (o FleetMetricAggregationTypePtrOutput) ToFleetMetricAggregationTypePtrOutput() FleetMetricAggregationTypePtrOutput {
	return o
}

func (o FleetMetricAggregationTypePtrOutput) ToFleetMetricAggregationTypePtrOutputWithContext(ctx context.Context) FleetMetricAggregationTypePtrOutput {
	return o
}

func (o FleetMetricAggregationTypePtrOutput) Elem() FleetMetricAggregationTypeOutput {
	return o.ApplyT(func(v *FleetMetricAggregationType) FleetMetricAggregationType {
		if v != nil {
			return *v
		}
		var ret FleetMetricAggregationType
		return ret
	}).(FleetMetricAggregationTypeOutput)
}

// Fleet Indexing aggregation type names such as Statistics, Percentiles and Cardinality
func (o FleetMetricAggregationTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetMetricAggregationType) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Fleet Indexing aggregation type values
func (o FleetMetricAggregationTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetMetricAggregationType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource
type FleetMetricTag struct {
	// The tag's key
	Key string `pulumi:"key"`
	// The tag's value
	Value string `pulumi:"value"`
}

// FleetMetricTagInput is an input type that accepts FleetMetricTagArgs and FleetMetricTagOutput values.
// You can construct a concrete instance of `FleetMetricTagInput` via:
//
//          FleetMetricTagArgs{...}
type FleetMetricTagInput interface {
	pulumi.Input

	ToFleetMetricTagOutput() FleetMetricTagOutput
	ToFleetMetricTagOutputWithContext(context.Context) FleetMetricTagOutput
}

// A key-value pair to associate with a resource
type FleetMetricTagArgs struct {
	// The tag's key
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value
	Value pulumi.StringInput `pulumi:"value"`
}

func (FleetMetricTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMetricTag)(nil)).Elem()
}

func (i FleetMetricTagArgs) ToFleetMetricTagOutput() FleetMetricTagOutput {
	return i.ToFleetMetricTagOutputWithContext(context.Background())
}

func (i FleetMetricTagArgs) ToFleetMetricTagOutputWithContext(ctx context.Context) FleetMetricTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricTagOutput)
}

// FleetMetricTagArrayInput is an input type that accepts FleetMetricTagArray and FleetMetricTagArrayOutput values.
// You can construct a concrete instance of `FleetMetricTagArrayInput` via:
//
//          FleetMetricTagArray{ FleetMetricTagArgs{...} }
type FleetMetricTagArrayInput interface {
	pulumi.Input

	ToFleetMetricTagArrayOutput() FleetMetricTagArrayOutput
	ToFleetMetricTagArrayOutputWithContext(context.Context) FleetMetricTagArrayOutput
}

type FleetMetricTagArray []FleetMetricTagInput

func (FleetMetricTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetMetricTag)(nil)).Elem()
}

func (i FleetMetricTagArray) ToFleetMetricTagArrayOutput() FleetMetricTagArrayOutput {
	return i.ToFleetMetricTagArrayOutputWithContext(context.Background())
}

func (i FleetMetricTagArray) ToFleetMetricTagArrayOutputWithContext(ctx context.Context) FleetMetricTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMetricTagArrayOutput)
}

// A key-value pair to associate with a resource
type FleetMetricTagOutput struct{ *pulumi.OutputState }

func (FleetMetricTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMetricTag)(nil)).Elem()
}

func (o FleetMetricTagOutput) ToFleetMetricTagOutput() FleetMetricTagOutput {
	return o
}

func (o FleetMetricTagOutput) ToFleetMetricTagOutputWithContext(ctx context.Context) FleetMetricTagOutput {
	return o
}

// The tag's key
func (o FleetMetricTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FleetMetricTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value
func (o FleetMetricTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FleetMetricTag) string { return v.Value }).(pulumi.StringOutput)
}

type FleetMetricTagArrayOutput struct{ *pulumi.OutputState }

func (FleetMetricTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetMetricTag)(nil)).Elem()
}

func (o FleetMetricTagArrayOutput) ToFleetMetricTagArrayOutput() FleetMetricTagArrayOutput {
	return o
}

func (o FleetMetricTagArrayOutput) ToFleetMetricTagArrayOutputWithContext(ctx context.Context) FleetMetricTagArrayOutput {
	return o
}

func (o FleetMetricTagArrayOutput) Index(i pulumi.IntInput) FleetMetricTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetMetricTag {
		return vs[0].([]FleetMetricTag)[vs[1].(int)]
	}).(FleetMetricTagOutput)
}

// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
type MitigationActionActionParams struct {
	AddThingsToThingGroupParams       *MitigationActionAddThingsToThingGroupParams       `pulumi:"addThingsToThingGroupParams"`
	EnableIoTLoggingParams            *MitigationActionEnableIoTLoggingParams            `pulumi:"enableIoTLoggingParams"`
	PublishFindingToSnsParams         *MitigationActionPublishFindingToSnsParams         `pulumi:"publishFindingToSnsParams"`
	ReplaceDefaultPolicyVersionParams *MitigationActionReplaceDefaultPolicyVersionParams `pulumi:"replaceDefaultPolicyVersionParams"`
	UpdateCACertificateParams         *MitigationActionUpdateCACertificateParams         `pulumi:"updateCACertificateParams"`
	UpdateDeviceCertificateParams     *MitigationActionUpdateDeviceCertificateParams     `pulumi:"updateDeviceCertificateParams"`
}

// MitigationActionActionParamsInput is an input type that accepts MitigationActionActionParamsArgs and MitigationActionActionParamsOutput values.
// You can construct a concrete instance of `MitigationActionActionParamsInput` via:
//
//          MitigationActionActionParamsArgs{...}
type MitigationActionActionParamsInput interface {
	pulumi.Input

	ToMitigationActionActionParamsOutput() MitigationActionActionParamsOutput
	ToMitigationActionActionParamsOutputWithContext(context.Context) MitigationActionActionParamsOutput
}

// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
type MitigationActionActionParamsArgs struct {
	AddThingsToThingGroupParams       MitigationActionAddThingsToThingGroupParamsPtrInput       `pulumi:"addThingsToThingGroupParams"`
	EnableIoTLoggingParams            MitigationActionEnableIoTLoggingParamsPtrInput            `pulumi:"enableIoTLoggingParams"`
	PublishFindingToSnsParams         MitigationActionPublishFindingToSnsParamsPtrInput         `pulumi:"publishFindingToSnsParams"`
	ReplaceDefaultPolicyVersionParams MitigationActionReplaceDefaultPolicyVersionParamsPtrInput `pulumi:"replaceDefaultPolicyVersionParams"`
	UpdateCACertificateParams         MitigationActionUpdateCACertificateParamsPtrInput         `pulumi:"updateCACertificateParams"`
	UpdateDeviceCertificateParams     MitigationActionUpdateDeviceCertificateParamsPtrInput     `pulumi:"updateDeviceCertificateParams"`
}

func (MitigationActionActionParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionActionParams)(nil)).Elem()
}

func (i MitigationActionActionParamsArgs) ToMitigationActionActionParamsOutput() MitigationActionActionParamsOutput {
	return i.ToMitigationActionActionParamsOutputWithContext(context.Background())
}

func (i MitigationActionActionParamsArgs) ToMitigationActionActionParamsOutputWithContext(ctx context.Context) MitigationActionActionParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionActionParamsOutput)
}

func (i MitigationActionActionParamsArgs) ToMitigationActionActionParamsPtrOutput() MitigationActionActionParamsPtrOutput {
	return i.ToMitigationActionActionParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionActionParamsArgs) ToMitigationActionActionParamsPtrOutputWithContext(ctx context.Context) MitigationActionActionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionActionParamsOutput).ToMitigationActionActionParamsPtrOutputWithContext(ctx)
}

// MitigationActionActionParamsPtrInput is an input type that accepts MitigationActionActionParamsArgs, MitigationActionActionParamsPtr and MitigationActionActionParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionActionParamsPtrInput` via:
//
//          MitigationActionActionParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionActionParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionActionParamsPtrOutput() MitigationActionActionParamsPtrOutput
	ToMitigationActionActionParamsPtrOutputWithContext(context.Context) MitigationActionActionParamsPtrOutput
}

type mitigationActionActionParamsPtrType MitigationActionActionParamsArgs

func MitigationActionActionParamsPtr(v *MitigationActionActionParamsArgs) MitigationActionActionParamsPtrInput {
	return (*mitigationActionActionParamsPtrType)(v)
}

func (*mitigationActionActionParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionActionParams)(nil)).Elem()
}

func (i *mitigationActionActionParamsPtrType) ToMitigationActionActionParamsPtrOutput() MitigationActionActionParamsPtrOutput {
	return i.ToMitigationActionActionParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionActionParamsPtrType) ToMitigationActionActionParamsPtrOutputWithContext(ctx context.Context) MitigationActionActionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionActionParamsPtrOutput)
}

// The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
type MitigationActionActionParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionActionParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionActionParams)(nil)).Elem()
}

func (o MitigationActionActionParamsOutput) ToMitigationActionActionParamsOutput() MitigationActionActionParamsOutput {
	return o
}

func (o MitigationActionActionParamsOutput) ToMitigationActionActionParamsOutputWithContext(ctx context.Context) MitigationActionActionParamsOutput {
	return o
}

func (o MitigationActionActionParamsOutput) ToMitigationActionActionParamsPtrOutput() MitigationActionActionParamsPtrOutput {
	return o.ToMitigationActionActionParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionActionParamsOutput) ToMitigationActionActionParamsPtrOutputWithContext(ctx context.Context) MitigationActionActionParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionActionParams) *MitigationActionActionParams {
		return &v
	}).(MitigationActionActionParamsPtrOutput)
}

func (o MitigationActionActionParamsOutput) AddThingsToThingGroupParams() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionAddThingsToThingGroupParams {
		return v.AddThingsToThingGroupParams
	}).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

func (o MitigationActionActionParamsOutput) EnableIoTLoggingParams() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionEnableIoTLoggingParams {
		return v.EnableIoTLoggingParams
	}).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

func (o MitigationActionActionParamsOutput) PublishFindingToSnsParams() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionPublishFindingToSnsParams {
		return v.PublishFindingToSnsParams
	}).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

func (o MitigationActionActionParamsOutput) ReplaceDefaultPolicyVersionParams() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionReplaceDefaultPolicyVersionParams {
		return v.ReplaceDefaultPolicyVersionParams
	}).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

func (o MitigationActionActionParamsOutput) UpdateCACertificateParams() MitigationActionUpdateCACertificateParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionUpdateCACertificateParams {
		return v.UpdateCACertificateParams
	}).(MitigationActionUpdateCACertificateParamsPtrOutput)
}

func (o MitigationActionActionParamsOutput) UpdateDeviceCertificateParams() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ApplyT(func(v MitigationActionActionParams) *MitigationActionUpdateDeviceCertificateParams {
		return v.UpdateDeviceCertificateParams
	}).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

type MitigationActionActionParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionActionParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionActionParams)(nil)).Elem()
}

func (o MitigationActionActionParamsPtrOutput) ToMitigationActionActionParamsPtrOutput() MitigationActionActionParamsPtrOutput {
	return o
}

func (o MitigationActionActionParamsPtrOutput) ToMitigationActionActionParamsPtrOutputWithContext(ctx context.Context) MitigationActionActionParamsPtrOutput {
	return o
}

func (o MitigationActionActionParamsPtrOutput) Elem() MitigationActionActionParamsOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) MitigationActionActionParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionActionParams
		return ret
	}).(MitigationActionActionParamsOutput)
}

func (o MitigationActionActionParamsPtrOutput) AddThingsToThingGroupParams() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionAddThingsToThingGroupParams {
		if v == nil {
			return nil
		}
		return v.AddThingsToThingGroupParams
	}).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

func (o MitigationActionActionParamsPtrOutput) EnableIoTLoggingParams() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionEnableIoTLoggingParams {
		if v == nil {
			return nil
		}
		return v.EnableIoTLoggingParams
	}).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

func (o MitigationActionActionParamsPtrOutput) PublishFindingToSnsParams() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionPublishFindingToSnsParams {
		if v == nil {
			return nil
		}
		return v.PublishFindingToSnsParams
	}).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

func (o MitigationActionActionParamsPtrOutput) ReplaceDefaultPolicyVersionParams() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionReplaceDefaultPolicyVersionParams {
		if v == nil {
			return nil
		}
		return v.ReplaceDefaultPolicyVersionParams
	}).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

func (o MitigationActionActionParamsPtrOutput) UpdateCACertificateParams() MitigationActionUpdateCACertificateParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionUpdateCACertificateParams {
		if v == nil {
			return nil
		}
		return v.UpdateCACertificateParams
	}).(MitigationActionUpdateCACertificateParamsPtrOutput)
}

func (o MitigationActionActionParamsPtrOutput) UpdateDeviceCertificateParams() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ApplyT(func(v *MitigationActionActionParams) *MitigationActionUpdateDeviceCertificateParams {
		if v == nil {
			return nil
		}
		return v.UpdateDeviceCertificateParams
	}).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
type MitigationActionAddThingsToThingGroupParams struct {
	// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
	OverrideDynamicGroups *bool `pulumi:"overrideDynamicGroups"`
	// The list of groups to which you want to add the things that triggered the mitigation action.
	ThingGroupNames []string `pulumi:"thingGroupNames"`
}

// MitigationActionAddThingsToThingGroupParamsInput is an input type that accepts MitigationActionAddThingsToThingGroupParamsArgs and MitigationActionAddThingsToThingGroupParamsOutput values.
// You can construct a concrete instance of `MitigationActionAddThingsToThingGroupParamsInput` via:
//
//          MitigationActionAddThingsToThingGroupParamsArgs{...}
type MitigationActionAddThingsToThingGroupParamsInput interface {
	pulumi.Input

	ToMitigationActionAddThingsToThingGroupParamsOutput() MitigationActionAddThingsToThingGroupParamsOutput
	ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(context.Context) MitigationActionAddThingsToThingGroupParamsOutput
}

// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
type MitigationActionAddThingsToThingGroupParamsArgs struct {
	// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
	OverrideDynamicGroups pulumi.BoolPtrInput `pulumi:"overrideDynamicGroups"`
	// The list of groups to which you want to add the things that triggered the mitigation action.
	ThingGroupNames pulumi.StringArrayInput `pulumi:"thingGroupNames"`
}

func (MitigationActionAddThingsToThingGroupParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsOutput() MitigationActionAddThingsToThingGroupParamsOutput {
	return i.ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(context.Background())
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionAddThingsToThingGroupParamsOutput)
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return i.ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionAddThingsToThingGroupParamsArgs) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionAddThingsToThingGroupParamsOutput).ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx)
}

// MitigationActionAddThingsToThingGroupParamsPtrInput is an input type that accepts MitigationActionAddThingsToThingGroupParamsArgs, MitigationActionAddThingsToThingGroupParamsPtr and MitigationActionAddThingsToThingGroupParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionAddThingsToThingGroupParamsPtrInput` via:
//
//          MitigationActionAddThingsToThingGroupParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionAddThingsToThingGroupParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput
	ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput
}

type mitigationActionAddThingsToThingGroupParamsPtrType MitigationActionAddThingsToThingGroupParamsArgs

func MitigationActionAddThingsToThingGroupParamsPtr(v *MitigationActionAddThingsToThingGroupParamsArgs) MitigationActionAddThingsToThingGroupParamsPtrInput {
	return (*mitigationActionAddThingsToThingGroupParamsPtrType)(v)
}

func (*mitigationActionAddThingsToThingGroupParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (i *mitigationActionAddThingsToThingGroupParamsPtrType) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return i.ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionAddThingsToThingGroupParamsPtrType) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

// Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
type MitigationActionAddThingsToThingGroupParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionAddThingsToThingGroupParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsOutput() MitigationActionAddThingsToThingGroupParamsOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionAddThingsToThingGroupParamsOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionAddThingsToThingGroupParams) *MitigationActionAddThingsToThingGroupParams {
		return &v
	}).(MitigationActionAddThingsToThingGroupParamsPtrOutput)
}

// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
func (o MitigationActionAddThingsToThingGroupParamsOutput) OverrideDynamicGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MitigationActionAddThingsToThingGroupParams) *bool { return v.OverrideDynamicGroups }).(pulumi.BoolPtrOutput)
}

// The list of groups to which you want to add the things that triggered the mitigation action.
func (o MitigationActionAddThingsToThingGroupParamsOutput) ThingGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MitigationActionAddThingsToThingGroupParams) []string { return v.ThingGroupNames }).(pulumi.StringArrayOutput)
}

type MitigationActionAddThingsToThingGroupParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionAddThingsToThingGroupParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionAddThingsToThingGroupParams)(nil)).Elem()
}

func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutput() MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) ToMitigationActionAddThingsToThingGroupParamsPtrOutputWithContext(ctx context.Context) MitigationActionAddThingsToThingGroupParamsPtrOutput {
	return o
}

func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) Elem() MitigationActionAddThingsToThingGroupParamsOutput {
	return o.ApplyT(func(v *MitigationActionAddThingsToThingGroupParams) MitigationActionAddThingsToThingGroupParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionAddThingsToThingGroupParams
		return ret
	}).(MitigationActionAddThingsToThingGroupParamsOutput)
}

// Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) OverrideDynamicGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MitigationActionAddThingsToThingGroupParams) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideDynamicGroups
	}).(pulumi.BoolPtrOutput)
}

// The list of groups to which you want to add the things that triggered the mitigation action.
func (o MitigationActionAddThingsToThingGroupParamsPtrOutput) ThingGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MitigationActionAddThingsToThingGroupParams) []string {
		if v == nil {
			return nil
		}
		return v.ThingGroupNames
	}).(pulumi.StringArrayOutput)
}

// Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
type MitigationActionEnableIoTLoggingParams struct {
	//  Specifies which types of information are logged.
	LogLevel MitigationActionEnableIoTLoggingParamsLogLevel `pulumi:"logLevel"`
	//  The ARN of the IAM role used for logging.
	RoleArnForLogging string `pulumi:"roleArnForLogging"`
}

// MitigationActionEnableIoTLoggingParamsInput is an input type that accepts MitigationActionEnableIoTLoggingParamsArgs and MitigationActionEnableIoTLoggingParamsOutput values.
// You can construct a concrete instance of `MitigationActionEnableIoTLoggingParamsInput` via:
//
//          MitigationActionEnableIoTLoggingParamsArgs{...}
type MitigationActionEnableIoTLoggingParamsInput interface {
	pulumi.Input

	ToMitigationActionEnableIoTLoggingParamsOutput() MitigationActionEnableIoTLoggingParamsOutput
	ToMitigationActionEnableIoTLoggingParamsOutputWithContext(context.Context) MitigationActionEnableIoTLoggingParamsOutput
}

// Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
type MitigationActionEnableIoTLoggingParamsArgs struct {
	//  Specifies which types of information are logged.
	LogLevel MitigationActionEnableIoTLoggingParamsLogLevelInput `pulumi:"logLevel"`
	//  The ARN of the IAM role used for logging.
	RoleArnForLogging pulumi.StringInput `pulumi:"roleArnForLogging"`
}

func (MitigationActionEnableIoTLoggingParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsOutput() MitigationActionEnableIoTLoggingParamsOutput {
	return i.ToMitigationActionEnableIoTLoggingParamsOutputWithContext(context.Background())
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionEnableIoTLoggingParamsOutput)
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return i.ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionEnableIoTLoggingParamsArgs) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionEnableIoTLoggingParamsOutput).ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx)
}

// MitigationActionEnableIoTLoggingParamsPtrInput is an input type that accepts MitigationActionEnableIoTLoggingParamsArgs, MitigationActionEnableIoTLoggingParamsPtr and MitigationActionEnableIoTLoggingParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionEnableIoTLoggingParamsPtrInput` via:
//
//          MitigationActionEnableIoTLoggingParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionEnableIoTLoggingParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput
	ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput
}

type mitigationActionEnableIoTLoggingParamsPtrType MitigationActionEnableIoTLoggingParamsArgs

func MitigationActionEnableIoTLoggingParamsPtr(v *MitigationActionEnableIoTLoggingParamsArgs) MitigationActionEnableIoTLoggingParamsPtrInput {
	return (*mitigationActionEnableIoTLoggingParamsPtrType)(v)
}

func (*mitigationActionEnableIoTLoggingParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (i *mitigationActionEnableIoTLoggingParamsPtrType) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return i.ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionEnableIoTLoggingParamsPtrType) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

// Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
type MitigationActionEnableIoTLoggingParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionEnableIoTLoggingParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsOutput() MitigationActionEnableIoTLoggingParamsOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionEnableIoTLoggingParamsOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionEnableIoTLoggingParams) *MitigationActionEnableIoTLoggingParams {
		return &v
	}).(MitigationActionEnableIoTLoggingParamsPtrOutput)
}

//  Specifies which types of information are logged.
func (o MitigationActionEnableIoTLoggingParamsOutput) LogLevel() MitigationActionEnableIoTLoggingParamsLogLevelOutput {
	return o.ApplyT(func(v MitigationActionEnableIoTLoggingParams) MitigationActionEnableIoTLoggingParamsLogLevel {
		return v.LogLevel
	}).(MitigationActionEnableIoTLoggingParamsLogLevelOutput)
}

//  The ARN of the IAM role used for logging.
func (o MitigationActionEnableIoTLoggingParamsOutput) RoleArnForLogging() pulumi.StringOutput {
	return o.ApplyT(func(v MitigationActionEnableIoTLoggingParams) string { return v.RoleArnForLogging }).(pulumi.StringOutput)
}

type MitigationActionEnableIoTLoggingParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionEnableIoTLoggingParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionEnableIoTLoggingParams)(nil)).Elem()
}

func (o MitigationActionEnableIoTLoggingParamsPtrOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutput() MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsPtrOutput) ToMitigationActionEnableIoTLoggingParamsPtrOutputWithContext(ctx context.Context) MitigationActionEnableIoTLoggingParamsPtrOutput {
	return o
}

func (o MitigationActionEnableIoTLoggingParamsPtrOutput) Elem() MitigationActionEnableIoTLoggingParamsOutput {
	return o.ApplyT(func(v *MitigationActionEnableIoTLoggingParams) MitigationActionEnableIoTLoggingParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionEnableIoTLoggingParams
		return ret
	}).(MitigationActionEnableIoTLoggingParamsOutput)
}

//  Specifies which types of information are logged.
func (o MitigationActionEnableIoTLoggingParamsPtrOutput) LogLevel() MitigationActionEnableIoTLoggingParamsLogLevelPtrOutput {
	return o.ApplyT(func(v *MitigationActionEnableIoTLoggingParams) *MitigationActionEnableIoTLoggingParamsLogLevel {
		if v == nil {
			return nil
		}
		return &v.LogLevel
	}).(MitigationActionEnableIoTLoggingParamsLogLevelPtrOutput)
}

//  The ARN of the IAM role used for logging.
func (o MitigationActionEnableIoTLoggingParamsPtrOutput) RoleArnForLogging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MitigationActionEnableIoTLoggingParams) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArnForLogging
	}).(pulumi.StringPtrOutput)
}

// Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
type MitigationActionPublishFindingToSnsParams struct {
	// The ARN of the topic to which you want to publish the findings.
	TopicArn string `pulumi:"topicArn"`
}

// MitigationActionPublishFindingToSnsParamsInput is an input type that accepts MitigationActionPublishFindingToSnsParamsArgs and MitigationActionPublishFindingToSnsParamsOutput values.
// You can construct a concrete instance of `MitigationActionPublishFindingToSnsParamsInput` via:
//
//          MitigationActionPublishFindingToSnsParamsArgs{...}
type MitigationActionPublishFindingToSnsParamsInput interface {
	pulumi.Input

	ToMitigationActionPublishFindingToSnsParamsOutput() MitigationActionPublishFindingToSnsParamsOutput
	ToMitigationActionPublishFindingToSnsParamsOutputWithContext(context.Context) MitigationActionPublishFindingToSnsParamsOutput
}

// Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
type MitigationActionPublishFindingToSnsParamsArgs struct {
	// The ARN of the topic to which you want to publish the findings.
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (MitigationActionPublishFindingToSnsParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsOutput() MitigationActionPublishFindingToSnsParamsOutput {
	return i.ToMitigationActionPublishFindingToSnsParamsOutputWithContext(context.Background())
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionPublishFindingToSnsParamsOutput)
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return i.ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionPublishFindingToSnsParamsArgs) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionPublishFindingToSnsParamsOutput).ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx)
}

// MitigationActionPublishFindingToSnsParamsPtrInput is an input type that accepts MitigationActionPublishFindingToSnsParamsArgs, MitigationActionPublishFindingToSnsParamsPtr and MitigationActionPublishFindingToSnsParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionPublishFindingToSnsParamsPtrInput` via:
//
//          MitigationActionPublishFindingToSnsParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionPublishFindingToSnsParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput
	ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput
}

type mitigationActionPublishFindingToSnsParamsPtrType MitigationActionPublishFindingToSnsParamsArgs

func MitigationActionPublishFindingToSnsParamsPtr(v *MitigationActionPublishFindingToSnsParamsArgs) MitigationActionPublishFindingToSnsParamsPtrInput {
	return (*mitigationActionPublishFindingToSnsParamsPtrType)(v)
}

func (*mitigationActionPublishFindingToSnsParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (i *mitigationActionPublishFindingToSnsParamsPtrType) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return i.ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionPublishFindingToSnsParamsPtrType) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

// Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
type MitigationActionPublishFindingToSnsParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionPublishFindingToSnsParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsOutput() MitigationActionPublishFindingToSnsParamsOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionPublishFindingToSnsParamsOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionPublishFindingToSnsParams) *MitigationActionPublishFindingToSnsParams {
		return &v
	}).(MitigationActionPublishFindingToSnsParamsPtrOutput)
}

// The ARN of the topic to which you want to publish the findings.
func (o MitigationActionPublishFindingToSnsParamsOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v MitigationActionPublishFindingToSnsParams) string { return v.TopicArn }).(pulumi.StringOutput)
}

type MitigationActionPublishFindingToSnsParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionPublishFindingToSnsParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionPublishFindingToSnsParams)(nil)).Elem()
}

func (o MitigationActionPublishFindingToSnsParamsPtrOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutput() MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsPtrOutput) ToMitigationActionPublishFindingToSnsParamsPtrOutputWithContext(ctx context.Context) MitigationActionPublishFindingToSnsParamsPtrOutput {
	return o
}

func (o MitigationActionPublishFindingToSnsParamsPtrOutput) Elem() MitigationActionPublishFindingToSnsParamsOutput {
	return o.ApplyT(func(v *MitigationActionPublishFindingToSnsParams) MitigationActionPublishFindingToSnsParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionPublishFindingToSnsParams
		return ret
	}).(MitigationActionPublishFindingToSnsParamsOutput)
}

// The ARN of the topic to which you want to publish the findings.
func (o MitigationActionPublishFindingToSnsParamsPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MitigationActionPublishFindingToSnsParams) *string {
		if v == nil {
			return nil
		}
		return &v.TopicArn
	}).(pulumi.StringPtrOutput)
}

// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
type MitigationActionReplaceDefaultPolicyVersionParams struct {
	TemplateName MitigationActionReplaceDefaultPolicyVersionParamsTemplateName `pulumi:"templateName"`
}

// MitigationActionReplaceDefaultPolicyVersionParamsInput is an input type that accepts MitigationActionReplaceDefaultPolicyVersionParamsArgs and MitigationActionReplaceDefaultPolicyVersionParamsOutput values.
// You can construct a concrete instance of `MitigationActionReplaceDefaultPolicyVersionParamsInput` via:
//
//          MitigationActionReplaceDefaultPolicyVersionParamsArgs{...}
type MitigationActionReplaceDefaultPolicyVersionParamsInput interface {
	pulumi.Input

	ToMitigationActionReplaceDefaultPolicyVersionParamsOutput() MitigationActionReplaceDefaultPolicyVersionParamsOutput
	ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(context.Context) MitigationActionReplaceDefaultPolicyVersionParamsOutput
}

// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
type MitigationActionReplaceDefaultPolicyVersionParamsArgs struct {
	TemplateName MitigationActionReplaceDefaultPolicyVersionParamsTemplateNameInput `pulumi:"templateName"`
}

func (MitigationActionReplaceDefaultPolicyVersionParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsOutput() MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return i.ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(context.Background())
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionReplaceDefaultPolicyVersionParamsOutput)
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return i.ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionReplaceDefaultPolicyVersionParamsArgs) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionReplaceDefaultPolicyVersionParamsOutput).ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx)
}

// MitigationActionReplaceDefaultPolicyVersionParamsPtrInput is an input type that accepts MitigationActionReplaceDefaultPolicyVersionParamsArgs, MitigationActionReplaceDefaultPolicyVersionParamsPtr and MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionReplaceDefaultPolicyVersionParamsPtrInput` via:
//
//          MitigationActionReplaceDefaultPolicyVersionParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionReplaceDefaultPolicyVersionParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput
	ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput
}

type mitigationActionReplaceDefaultPolicyVersionParamsPtrType MitigationActionReplaceDefaultPolicyVersionParamsArgs

func MitigationActionReplaceDefaultPolicyVersionParamsPtr(v *MitigationActionReplaceDefaultPolicyVersionParamsArgs) MitigationActionReplaceDefaultPolicyVersionParamsPtrInput {
	return (*mitigationActionReplaceDefaultPolicyVersionParamsPtrType)(v)
}

func (*mitigationActionReplaceDefaultPolicyVersionParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (i *mitigationActionReplaceDefaultPolicyVersionParamsPtrType) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return i.ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionReplaceDefaultPolicyVersionParamsPtrType) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

// Parameters to define a mitigation action that adds a blank policy to restrict permissions.
type MitigationActionReplaceDefaultPolicyVersionParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionReplaceDefaultPolicyVersionParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsOutput() MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionReplaceDefaultPolicyVersionParams) *MitigationActionReplaceDefaultPolicyVersionParams {
		return &v
	}).(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput)
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsOutput) TemplateName() MitigationActionReplaceDefaultPolicyVersionParamsTemplateNameOutput {
	return o.ApplyT(func(v MitigationActionReplaceDefaultPolicyVersionParams) MitigationActionReplaceDefaultPolicyVersionParamsTemplateName {
		return v.TemplateName
	}).(MitigationActionReplaceDefaultPolicyVersionParamsTemplateNameOutput)
}

type MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionReplaceDefaultPolicyVersionParams)(nil)).Elem()
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutput() MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) ToMitigationActionReplaceDefaultPolicyVersionParamsPtrOutputWithContext(ctx context.Context) MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput {
	return o
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) Elem() MitigationActionReplaceDefaultPolicyVersionParamsOutput {
	return o.ApplyT(func(v *MitigationActionReplaceDefaultPolicyVersionParams) MitigationActionReplaceDefaultPolicyVersionParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionReplaceDefaultPolicyVersionParams
		return ret
	}).(MitigationActionReplaceDefaultPolicyVersionParamsOutput)
}

func (o MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput) TemplateName() MitigationActionReplaceDefaultPolicyVersionParamsTemplateNamePtrOutput {
	return o.ApplyT(func(v *MitigationActionReplaceDefaultPolicyVersionParams) *MitigationActionReplaceDefaultPolicyVersionParamsTemplateName {
		if v == nil {
			return nil
		}
		return &v.TemplateName
	}).(MitigationActionReplaceDefaultPolicyVersionParamsTemplateNamePtrOutput)
}

// A key-value pair to associate with a resource.
type MitigationActionTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// MitigationActionTagInput is an input type that accepts MitigationActionTagArgs and MitigationActionTagOutput values.
// You can construct a concrete instance of `MitigationActionTagInput` via:
//
//          MitigationActionTagArgs{...}
type MitigationActionTagInput interface {
	pulumi.Input

	ToMitigationActionTagOutput() MitigationActionTagOutput
	ToMitigationActionTagOutputWithContext(context.Context) MitigationActionTagOutput
}

// A key-value pair to associate with a resource.
type MitigationActionTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (MitigationActionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionTag)(nil)).Elem()
}

func (i MitigationActionTagArgs) ToMitigationActionTagOutput() MitigationActionTagOutput {
	return i.ToMitigationActionTagOutputWithContext(context.Background())
}

func (i MitigationActionTagArgs) ToMitigationActionTagOutputWithContext(ctx context.Context) MitigationActionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionTagOutput)
}

// MitigationActionTagArrayInput is an input type that accepts MitigationActionTagArray and MitigationActionTagArrayOutput values.
// You can construct a concrete instance of `MitigationActionTagArrayInput` via:
//
//          MitigationActionTagArray{ MitigationActionTagArgs{...} }
type MitigationActionTagArrayInput interface {
	pulumi.Input

	ToMitigationActionTagArrayOutput() MitigationActionTagArrayOutput
	ToMitigationActionTagArrayOutputWithContext(context.Context) MitigationActionTagArrayOutput
}

type MitigationActionTagArray []MitigationActionTagInput

func (MitigationActionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MitigationActionTag)(nil)).Elem()
}

func (i MitigationActionTagArray) ToMitigationActionTagArrayOutput() MitigationActionTagArrayOutput {
	return i.ToMitigationActionTagArrayOutputWithContext(context.Background())
}

func (i MitigationActionTagArray) ToMitigationActionTagArrayOutputWithContext(ctx context.Context) MitigationActionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionTagArrayOutput)
}

// A key-value pair to associate with a resource.
type MitigationActionTagOutput struct{ *pulumi.OutputState }

func (MitigationActionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionTag)(nil)).Elem()
}

func (o MitigationActionTagOutput) ToMitigationActionTagOutput() MitigationActionTagOutput {
	return o
}

func (o MitigationActionTagOutput) ToMitigationActionTagOutputWithContext(ctx context.Context) MitigationActionTagOutput {
	return o
}

// The tag's key.
func (o MitigationActionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MitigationActionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o MitigationActionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v MitigationActionTag) string { return v.Value }).(pulumi.StringOutput)
}

type MitigationActionTagArrayOutput struct{ *pulumi.OutputState }

func (MitigationActionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MitigationActionTag)(nil)).Elem()
}

func (o MitigationActionTagArrayOutput) ToMitigationActionTagArrayOutput() MitigationActionTagArrayOutput {
	return o
}

func (o MitigationActionTagArrayOutput) ToMitigationActionTagArrayOutputWithContext(ctx context.Context) MitigationActionTagArrayOutput {
	return o
}

func (o MitigationActionTagArrayOutput) Index(i pulumi.IntInput) MitigationActionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MitigationActionTag {
		return vs[0].([]MitigationActionTag)[vs[1].(int)]
	}).(MitigationActionTagOutput)
}

// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
type MitigationActionUpdateCACertificateParams struct {
	Action MitigationActionUpdateCACertificateParamsAction `pulumi:"action"`
}

// MitigationActionUpdateCACertificateParamsInput is an input type that accepts MitigationActionUpdateCACertificateParamsArgs and MitigationActionUpdateCACertificateParamsOutput values.
// You can construct a concrete instance of `MitigationActionUpdateCACertificateParamsInput` via:
//
//          MitigationActionUpdateCACertificateParamsArgs{...}
type MitigationActionUpdateCACertificateParamsInput interface {
	pulumi.Input

	ToMitigationActionUpdateCACertificateParamsOutput() MitigationActionUpdateCACertificateParamsOutput
	ToMitigationActionUpdateCACertificateParamsOutputWithContext(context.Context) MitigationActionUpdateCACertificateParamsOutput
}

// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
type MitigationActionUpdateCACertificateParamsArgs struct {
	Action MitigationActionUpdateCACertificateParamsActionInput `pulumi:"action"`
}

func (MitigationActionUpdateCACertificateParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateCACertificateParams)(nil)).Elem()
}

func (i MitigationActionUpdateCACertificateParamsArgs) ToMitigationActionUpdateCACertificateParamsOutput() MitigationActionUpdateCACertificateParamsOutput {
	return i.ToMitigationActionUpdateCACertificateParamsOutputWithContext(context.Background())
}

func (i MitigationActionUpdateCACertificateParamsArgs) ToMitigationActionUpdateCACertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateCACertificateParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateCACertificateParamsOutput)
}

func (i MitigationActionUpdateCACertificateParamsArgs) ToMitigationActionUpdateCACertificateParamsPtrOutput() MitigationActionUpdateCACertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionUpdateCACertificateParamsArgs) ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCACertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateCACertificateParamsOutput).ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(ctx)
}

// MitigationActionUpdateCACertificateParamsPtrInput is an input type that accepts MitigationActionUpdateCACertificateParamsArgs, MitigationActionUpdateCACertificateParamsPtr and MitigationActionUpdateCACertificateParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionUpdateCACertificateParamsPtrInput` via:
//
//          MitigationActionUpdateCACertificateParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionUpdateCACertificateParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionUpdateCACertificateParamsPtrOutput() MitigationActionUpdateCACertificateParamsPtrOutput
	ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(context.Context) MitigationActionUpdateCACertificateParamsPtrOutput
}

type mitigationActionUpdateCACertificateParamsPtrType MitigationActionUpdateCACertificateParamsArgs

func MitigationActionUpdateCACertificateParamsPtr(v *MitigationActionUpdateCACertificateParamsArgs) MitigationActionUpdateCACertificateParamsPtrInput {
	return (*mitigationActionUpdateCACertificateParamsPtrType)(v)
}

func (*mitigationActionUpdateCACertificateParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateCACertificateParams)(nil)).Elem()
}

func (i *mitigationActionUpdateCACertificateParamsPtrType) ToMitigationActionUpdateCACertificateParamsPtrOutput() MitigationActionUpdateCACertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionUpdateCACertificateParamsPtrType) ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCACertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateCACertificateParamsPtrOutput)
}

// Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
type MitigationActionUpdateCACertificateParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateCACertificateParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateCACertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateCACertificateParamsOutput) ToMitigationActionUpdateCACertificateParamsOutput() MitigationActionUpdateCACertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateCACertificateParamsOutput) ToMitigationActionUpdateCACertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateCACertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateCACertificateParamsOutput) ToMitigationActionUpdateCACertificateParamsPtrOutput() MitigationActionUpdateCACertificateParamsPtrOutput {
	return o.ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionUpdateCACertificateParamsOutput) ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCACertificateParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionUpdateCACertificateParams) *MitigationActionUpdateCACertificateParams {
		return &v
	}).(MitigationActionUpdateCACertificateParamsPtrOutput)
}

func (o MitigationActionUpdateCACertificateParamsOutput) Action() MitigationActionUpdateCACertificateParamsActionOutput {
	return o.ApplyT(func(v MitigationActionUpdateCACertificateParams) MitigationActionUpdateCACertificateParamsAction {
		return v.Action
	}).(MitigationActionUpdateCACertificateParamsActionOutput)
}

type MitigationActionUpdateCACertificateParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateCACertificateParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateCACertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateCACertificateParamsPtrOutput) ToMitigationActionUpdateCACertificateParamsPtrOutput() MitigationActionUpdateCACertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateCACertificateParamsPtrOutput) ToMitigationActionUpdateCACertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateCACertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateCACertificateParamsPtrOutput) Elem() MitigationActionUpdateCACertificateParamsOutput {
	return o.ApplyT(func(v *MitigationActionUpdateCACertificateParams) MitigationActionUpdateCACertificateParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionUpdateCACertificateParams
		return ret
	}).(MitigationActionUpdateCACertificateParamsOutput)
}

func (o MitigationActionUpdateCACertificateParamsPtrOutput) Action() MitigationActionUpdateCACertificateParamsActionPtrOutput {
	return o.ApplyT(func(v *MitigationActionUpdateCACertificateParams) *MitigationActionUpdateCACertificateParamsAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(MitigationActionUpdateCACertificateParamsActionPtrOutput)
}

// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
type MitigationActionUpdateDeviceCertificateParams struct {
	Action MitigationActionUpdateDeviceCertificateParamsAction `pulumi:"action"`
}

// MitigationActionUpdateDeviceCertificateParamsInput is an input type that accepts MitigationActionUpdateDeviceCertificateParamsArgs and MitigationActionUpdateDeviceCertificateParamsOutput values.
// You can construct a concrete instance of `MitigationActionUpdateDeviceCertificateParamsInput` via:
//
//          MitigationActionUpdateDeviceCertificateParamsArgs{...}
type MitigationActionUpdateDeviceCertificateParamsInput interface {
	pulumi.Input

	ToMitigationActionUpdateDeviceCertificateParamsOutput() MitigationActionUpdateDeviceCertificateParamsOutput
	ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(context.Context) MitigationActionUpdateDeviceCertificateParamsOutput
}

// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
type MitigationActionUpdateDeviceCertificateParamsArgs struct {
	Action MitigationActionUpdateDeviceCertificateParamsActionInput `pulumi:"action"`
}

func (MitigationActionUpdateDeviceCertificateParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsOutput() MitigationActionUpdateDeviceCertificateParamsOutput {
	return i.ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(context.Background())
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateDeviceCertificateParamsOutput)
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Background())
}

func (i MitigationActionUpdateDeviceCertificateParamsArgs) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateDeviceCertificateParamsOutput).ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx)
}

// MitigationActionUpdateDeviceCertificateParamsPtrInput is an input type that accepts MitigationActionUpdateDeviceCertificateParamsArgs, MitigationActionUpdateDeviceCertificateParamsPtr and MitigationActionUpdateDeviceCertificateParamsPtrOutput values.
// You can construct a concrete instance of `MitigationActionUpdateDeviceCertificateParamsPtrInput` via:
//
//          MitigationActionUpdateDeviceCertificateParamsArgs{...}
//
//  or:
//
//          nil
type MitigationActionUpdateDeviceCertificateParamsPtrInput interface {
	pulumi.Input

	ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput
	ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput
}

type mitigationActionUpdateDeviceCertificateParamsPtrType MitigationActionUpdateDeviceCertificateParamsArgs

func MitigationActionUpdateDeviceCertificateParamsPtr(v *MitigationActionUpdateDeviceCertificateParamsArgs) MitigationActionUpdateDeviceCertificateParamsPtrInput {
	return (*mitigationActionUpdateDeviceCertificateParamsPtrType)(v)
}

func (*mitigationActionUpdateDeviceCertificateParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (i *mitigationActionUpdateDeviceCertificateParamsPtrType) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return i.ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Background())
}

func (i *mitigationActionUpdateDeviceCertificateParamsPtrType) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

// Parameters to define a mitigation action that changes the state of the device certificate to inactive.
type MitigationActionUpdateDeviceCertificateParamsOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateDeviceCertificateParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsOutput() MitigationActionUpdateDeviceCertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(context.Background())
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MitigationActionUpdateDeviceCertificateParams) *MitigationActionUpdateDeviceCertificateParams {
		return &v
	}).(MitigationActionUpdateDeviceCertificateParamsPtrOutput)
}

func (o MitigationActionUpdateDeviceCertificateParamsOutput) Action() MitigationActionUpdateDeviceCertificateParamsActionOutput {
	return o.ApplyT(func(v MitigationActionUpdateDeviceCertificateParams) MitigationActionUpdateDeviceCertificateParamsAction {
		return v.Action
	}).(MitigationActionUpdateDeviceCertificateParamsActionOutput)
}

type MitigationActionUpdateDeviceCertificateParamsPtrOutput struct{ *pulumi.OutputState }

func (MitigationActionUpdateDeviceCertificateParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MitigationActionUpdateDeviceCertificateParams)(nil)).Elem()
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutput() MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) ToMitigationActionUpdateDeviceCertificateParamsPtrOutputWithContext(ctx context.Context) MitigationActionUpdateDeviceCertificateParamsPtrOutput {
	return o
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) Elem() MitigationActionUpdateDeviceCertificateParamsOutput {
	return o.ApplyT(func(v *MitigationActionUpdateDeviceCertificateParams) MitigationActionUpdateDeviceCertificateParams {
		if v != nil {
			return *v
		}
		var ret MitigationActionUpdateDeviceCertificateParams
		return ret
	}).(MitigationActionUpdateDeviceCertificateParamsOutput)
}

func (o MitigationActionUpdateDeviceCertificateParamsPtrOutput) Action() MitigationActionUpdateDeviceCertificateParamsActionPtrOutput {
	return o.ApplyT(func(v *MitigationActionUpdateDeviceCertificateParams) *MitigationActionUpdateDeviceCertificateParamsAction {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(MitigationActionUpdateDeviceCertificateParamsActionPtrOutput)
}

type ProvisioningTemplateProvisioningHook struct {
	PayloadVersion *string `pulumi:"payloadVersion"`
	TargetArn      *string `pulumi:"targetArn"`
}

// ProvisioningTemplateProvisioningHookInput is an input type that accepts ProvisioningTemplateProvisioningHookArgs and ProvisioningTemplateProvisioningHookOutput values.
// You can construct a concrete instance of `ProvisioningTemplateProvisioningHookInput` via:
//
//          ProvisioningTemplateProvisioningHookArgs{...}
type ProvisioningTemplateProvisioningHookInput interface {
	pulumi.Input

	ToProvisioningTemplateProvisioningHookOutput() ProvisioningTemplateProvisioningHookOutput
	ToProvisioningTemplateProvisioningHookOutputWithContext(context.Context) ProvisioningTemplateProvisioningHookOutput
}

type ProvisioningTemplateProvisioningHookArgs struct {
	PayloadVersion pulumi.StringPtrInput `pulumi:"payloadVersion"`
	TargetArn      pulumi.StringPtrInput `pulumi:"targetArn"`
}

func (ProvisioningTemplateProvisioningHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookOutput() ProvisioningTemplateProvisioningHookOutput {
	return i.ToProvisioningTemplateProvisioningHookOutputWithContext(context.Background())
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateProvisioningHookOutput)
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return i.ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Background())
}

func (i ProvisioningTemplateProvisioningHookArgs) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateProvisioningHookOutput).ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx)
}

// ProvisioningTemplateProvisioningHookPtrInput is an input type that accepts ProvisioningTemplateProvisioningHookArgs, ProvisioningTemplateProvisioningHookPtr and ProvisioningTemplateProvisioningHookPtrOutput values.
// You can construct a concrete instance of `ProvisioningTemplateProvisioningHookPtrInput` via:
//
//          ProvisioningTemplateProvisioningHookArgs{...}
//
//  or:
//
//          nil
type ProvisioningTemplateProvisioningHookPtrInput interface {
	pulumi.Input

	ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput
	ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Context) ProvisioningTemplateProvisioningHookPtrOutput
}

type provisioningTemplateProvisioningHookPtrType ProvisioningTemplateProvisioningHookArgs

func ProvisioningTemplateProvisioningHookPtr(v *ProvisioningTemplateProvisioningHookArgs) ProvisioningTemplateProvisioningHookPtrInput {
	return (*provisioningTemplateProvisioningHookPtrType)(v)
}

func (*provisioningTemplateProvisioningHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (i *provisioningTemplateProvisioningHookPtrType) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return i.ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Background())
}

func (i *provisioningTemplateProvisioningHookPtrType) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateProvisioningHookPtrOutput)
}

type ProvisioningTemplateProvisioningHookOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateProvisioningHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookOutput() ProvisioningTemplateProvisioningHookOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return o.ToProvisioningTemplateProvisioningHookPtrOutputWithContext(context.Background())
}

func (o ProvisioningTemplateProvisioningHookOutput) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningTemplateProvisioningHook) *ProvisioningTemplateProvisioningHook {
		return &v
	}).(ProvisioningTemplateProvisioningHookPtrOutput)
}

func (o ProvisioningTemplateProvisioningHookOutput) PayloadVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningTemplateProvisioningHook) *string { return v.PayloadVersion }).(pulumi.StringPtrOutput)
}

func (o ProvisioningTemplateProvisioningHookOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningTemplateProvisioningHook) *string { return v.TargetArn }).(pulumi.StringPtrOutput)
}

type ProvisioningTemplateProvisioningHookPtrOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateProvisioningHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplateProvisioningHook)(nil)).Elem()
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) ToProvisioningTemplateProvisioningHookPtrOutput() ProvisioningTemplateProvisioningHookPtrOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) ToProvisioningTemplateProvisioningHookPtrOutputWithContext(ctx context.Context) ProvisioningTemplateProvisioningHookPtrOutput {
	return o
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) Elem() ProvisioningTemplateProvisioningHookOutput {
	return o.ApplyT(func(v *ProvisioningTemplateProvisioningHook) ProvisioningTemplateProvisioningHook {
		if v != nil {
			return *v
		}
		var ret ProvisioningTemplateProvisioningHook
		return ret
	}).(ProvisioningTemplateProvisioningHookOutput)
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) PayloadVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplateProvisioningHook) *string {
		if v == nil {
			return nil
		}
		return v.PayloadVersion
	}).(pulumi.StringPtrOutput)
}

func (o ProvisioningTemplateProvisioningHookPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplateProvisioningHook) *string {
		if v == nil {
			return nil
		}
		return v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type ProvisioningTemplateTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ProvisioningTemplateTagInput is an input type that accepts ProvisioningTemplateTagArgs and ProvisioningTemplateTagOutput values.
// You can construct a concrete instance of `ProvisioningTemplateTagInput` via:
//
//          ProvisioningTemplateTagArgs{...}
type ProvisioningTemplateTagInput interface {
	pulumi.Input

	ToProvisioningTemplateTagOutput() ProvisioningTemplateTagOutput
	ToProvisioningTemplateTagOutputWithContext(context.Context) ProvisioningTemplateTagOutput
}

type ProvisioningTemplateTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProvisioningTemplateTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplateTag)(nil)).Elem()
}

func (i ProvisioningTemplateTagArgs) ToProvisioningTemplateTagOutput() ProvisioningTemplateTagOutput {
	return i.ToProvisioningTemplateTagOutputWithContext(context.Background())
}

func (i ProvisioningTemplateTagArgs) ToProvisioningTemplateTagOutputWithContext(ctx context.Context) ProvisioningTemplateTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateTagOutput)
}

// ProvisioningTemplateTagArrayInput is an input type that accepts ProvisioningTemplateTagArray and ProvisioningTemplateTagArrayOutput values.
// You can construct a concrete instance of `ProvisioningTemplateTagArrayInput` via:
//
//          ProvisioningTemplateTagArray{ ProvisioningTemplateTagArgs{...} }
type ProvisioningTemplateTagArrayInput interface {
	pulumi.Input

	ToProvisioningTemplateTagArrayOutput() ProvisioningTemplateTagArrayOutput
	ToProvisioningTemplateTagArrayOutputWithContext(context.Context) ProvisioningTemplateTagArrayOutput
}

type ProvisioningTemplateTagArray []ProvisioningTemplateTagInput

func (ProvisioningTemplateTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningTemplateTag)(nil)).Elem()
}

func (i ProvisioningTemplateTagArray) ToProvisioningTemplateTagArrayOutput() ProvisioningTemplateTagArrayOutput {
	return i.ToProvisioningTemplateTagArrayOutputWithContext(context.Background())
}

func (i ProvisioningTemplateTagArray) ToProvisioningTemplateTagArrayOutputWithContext(ctx context.Context) ProvisioningTemplateTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateTagArrayOutput)
}

type ProvisioningTemplateTagOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningTemplateTag)(nil)).Elem()
}

func (o ProvisioningTemplateTagOutput) ToProvisioningTemplateTagOutput() ProvisioningTemplateTagOutput {
	return o
}

func (o ProvisioningTemplateTagOutput) ToProvisioningTemplateTagOutputWithContext(ctx context.Context) ProvisioningTemplateTagOutput {
	return o
}

func (o ProvisioningTemplateTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProvisioningTemplateTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProvisioningTemplateTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProvisioningTemplateTag) string { return v.Value }).(pulumi.StringOutput)
}

type ProvisioningTemplateTagArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisioningTemplateTag)(nil)).Elem()
}

func (o ProvisioningTemplateTagArrayOutput) ToProvisioningTemplateTagArrayOutput() ProvisioningTemplateTagArrayOutput {
	return o
}

func (o ProvisioningTemplateTagArrayOutput) ToProvisioningTemplateTagArrayOutputWithContext(ctx context.Context) ProvisioningTemplateTagArrayOutput {
	return o
}

func (o ProvisioningTemplateTagArrayOutput) Index(i pulumi.IntInput) ProvisioningTemplateTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProvisioningTemplateTag {
		return vs[0].([]ProvisioningTemplateTag)[vs[1].(int)]
	}).(ProvisioningTemplateTagOutput)
}

// A key-value pair to associate with a resource.
type ScheduledAuditTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// ScheduledAuditTagInput is an input type that accepts ScheduledAuditTagArgs and ScheduledAuditTagOutput values.
// You can construct a concrete instance of `ScheduledAuditTagInput` via:
//
//          ScheduledAuditTagArgs{...}
type ScheduledAuditTagInput interface {
	pulumi.Input

	ToScheduledAuditTagOutput() ScheduledAuditTagOutput
	ToScheduledAuditTagOutputWithContext(context.Context) ScheduledAuditTagOutput
}

// A key-value pair to associate with a resource.
type ScheduledAuditTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ScheduledAuditTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAuditTag)(nil)).Elem()
}

func (i ScheduledAuditTagArgs) ToScheduledAuditTagOutput() ScheduledAuditTagOutput {
	return i.ToScheduledAuditTagOutputWithContext(context.Background())
}

func (i ScheduledAuditTagArgs) ToScheduledAuditTagOutputWithContext(ctx context.Context) ScheduledAuditTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledAuditTagOutput)
}

// ScheduledAuditTagArrayInput is an input type that accepts ScheduledAuditTagArray and ScheduledAuditTagArrayOutput values.
// You can construct a concrete instance of `ScheduledAuditTagArrayInput` via:
//
//          ScheduledAuditTagArray{ ScheduledAuditTagArgs{...} }
type ScheduledAuditTagArrayInput interface {
	pulumi.Input

	ToScheduledAuditTagArrayOutput() ScheduledAuditTagArrayOutput
	ToScheduledAuditTagArrayOutputWithContext(context.Context) ScheduledAuditTagArrayOutput
}

type ScheduledAuditTagArray []ScheduledAuditTagInput

func (ScheduledAuditTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledAuditTag)(nil)).Elem()
}

func (i ScheduledAuditTagArray) ToScheduledAuditTagArrayOutput() ScheduledAuditTagArrayOutput {
	return i.ToScheduledAuditTagArrayOutputWithContext(context.Background())
}

func (i ScheduledAuditTagArray) ToScheduledAuditTagArrayOutputWithContext(ctx context.Context) ScheduledAuditTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledAuditTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ScheduledAuditTagOutput struct{ *pulumi.OutputState }

func (ScheduledAuditTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAuditTag)(nil)).Elem()
}

func (o ScheduledAuditTagOutput) ToScheduledAuditTagOutput() ScheduledAuditTagOutput {
	return o
}

func (o ScheduledAuditTagOutput) ToScheduledAuditTagOutputWithContext(ctx context.Context) ScheduledAuditTagOutput {
	return o
}

// The tag's key.
func (o ScheduledAuditTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledAuditTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o ScheduledAuditTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledAuditTag) string { return v.Value }).(pulumi.StringOutput)
}

type ScheduledAuditTagArrayOutput struct{ *pulumi.OutputState }

func (ScheduledAuditTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledAuditTag)(nil)).Elem()
}

func (o ScheduledAuditTagArrayOutput) ToScheduledAuditTagArrayOutput() ScheduledAuditTagArrayOutput {
	return o
}

func (o ScheduledAuditTagArrayOutput) ToScheduledAuditTagArrayOutputWithContext(ctx context.Context) ScheduledAuditTagArrayOutput {
	return o
}

func (o ScheduledAuditTagArrayOutput) Index(i pulumi.IntInput) ScheduledAuditTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledAuditTag {
		return vs[0].([]ScheduledAuditTag)[vs[1].(int)]
	}).(ScheduledAuditTagOutput)
}

// A security profile behavior.
type SecurityProfileBehavior struct {
	Criteria *SecurityProfileBehaviorCriteria `pulumi:"criteria"`
	// What is measured by the behavior.
	Metric          *string                         `pulumi:"metric"`
	MetricDimension *SecurityProfileMetricDimension `pulumi:"metricDimension"`
	// The name for the behavior.
	Name string `pulumi:"name"`
	// Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
	SuppressAlerts *bool `pulumi:"suppressAlerts"`
}

// SecurityProfileBehaviorInput is an input type that accepts SecurityProfileBehaviorArgs and SecurityProfileBehaviorOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorInput` via:
//
//          SecurityProfileBehaviorArgs{...}
type SecurityProfileBehaviorInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorOutput() SecurityProfileBehaviorOutput
	ToSecurityProfileBehaviorOutputWithContext(context.Context) SecurityProfileBehaviorOutput
}

// A security profile behavior.
type SecurityProfileBehaviorArgs struct {
	Criteria SecurityProfileBehaviorCriteriaPtrInput `pulumi:"criteria"`
	// What is measured by the behavior.
	Metric          pulumi.StringPtrInput                  `pulumi:"metric"`
	MetricDimension SecurityProfileMetricDimensionPtrInput `pulumi:"metricDimension"`
	// The name for the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
	SuppressAlerts pulumi.BoolPtrInput `pulumi:"suppressAlerts"`
}

func (SecurityProfileBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehavior)(nil)).Elem()
}

func (i SecurityProfileBehaviorArgs) ToSecurityProfileBehaviorOutput() SecurityProfileBehaviorOutput {
	return i.ToSecurityProfileBehaviorOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorArgs) ToSecurityProfileBehaviorOutputWithContext(ctx context.Context) SecurityProfileBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorOutput)
}

// SecurityProfileBehaviorArrayInput is an input type that accepts SecurityProfileBehaviorArray and SecurityProfileBehaviorArrayOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorArrayInput` via:
//
//          SecurityProfileBehaviorArray{ SecurityProfileBehaviorArgs{...} }
type SecurityProfileBehaviorArrayInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorArrayOutput() SecurityProfileBehaviorArrayOutput
	ToSecurityProfileBehaviorArrayOutputWithContext(context.Context) SecurityProfileBehaviorArrayOutput
}

type SecurityProfileBehaviorArray []SecurityProfileBehaviorInput

func (SecurityProfileBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileBehavior)(nil)).Elem()
}

func (i SecurityProfileBehaviorArray) ToSecurityProfileBehaviorArrayOutput() SecurityProfileBehaviorArrayOutput {
	return i.ToSecurityProfileBehaviorArrayOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorArray) ToSecurityProfileBehaviorArrayOutputWithContext(ctx context.Context) SecurityProfileBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorArrayOutput)
}

// A security profile behavior.
type SecurityProfileBehaviorOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehavior)(nil)).Elem()
}

func (o SecurityProfileBehaviorOutput) ToSecurityProfileBehaviorOutput() SecurityProfileBehaviorOutput {
	return o
}

func (o SecurityProfileBehaviorOutput) ToSecurityProfileBehaviorOutputWithContext(ctx context.Context) SecurityProfileBehaviorOutput {
	return o
}

func (o SecurityProfileBehaviorOutput) Criteria() SecurityProfileBehaviorCriteriaPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *SecurityProfileBehaviorCriteria { return v.Criteria }).(SecurityProfileBehaviorCriteriaPtrOutput)
}

// What is measured by the behavior.
func (o SecurityProfileBehaviorOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

func (o SecurityProfileBehaviorOutput) MetricDimension() SecurityProfileMetricDimensionPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *SecurityProfileMetricDimension { return v.MetricDimension }).(SecurityProfileMetricDimensionPtrOutput)
}

// The name for the behavior.
func (o SecurityProfileBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// Manage Detect alarm SNS notifications by setting behavior notification to on or suppressed. Detect will continue to performing device behavior evaluations. However, suppressed alarms wouldn't be forwarded for SNS notification.
func (o SecurityProfileBehaviorOutput) SuppressAlerts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehavior) *bool { return v.SuppressAlerts }).(pulumi.BoolPtrOutput)
}

type SecurityProfileBehaviorArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileBehavior)(nil)).Elem()
}

func (o SecurityProfileBehaviorArrayOutput) ToSecurityProfileBehaviorArrayOutput() SecurityProfileBehaviorArrayOutput {
	return o
}

func (o SecurityProfileBehaviorArrayOutput) ToSecurityProfileBehaviorArrayOutputWithContext(ctx context.Context) SecurityProfileBehaviorArrayOutput {
	return o
}

func (o SecurityProfileBehaviorArrayOutput) Index(i pulumi.IntInput) SecurityProfileBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileBehavior {
		return vs[0].([]SecurityProfileBehavior)[vs[1].(int)]
	}).(SecurityProfileBehaviorOutput)
}

// The criteria by which the behavior is determined to be normal.
type SecurityProfileBehaviorCriteria struct {
	// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
	ComparisonOperator *SecurityProfileBehaviorCriteriaComparisonOperator `pulumi:"comparisonOperator"`
	// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
	ConsecutiveDatapointsToAlarm *int `pulumi:"consecutiveDatapointsToAlarm"`
	// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
	ConsecutiveDatapointsToClear *int `pulumi:"consecutiveDatapointsToClear"`
	// Use this to specify the time duration over which the behavior is evaluated.
	DurationSeconds      *int                                           `pulumi:"durationSeconds"`
	MlDetectionConfig    *SecurityProfileMachineLearningDetectionConfig `pulumi:"mlDetectionConfig"`
	StatisticalThreshold *SecurityProfileStatisticalThreshold           `pulumi:"statisticalThreshold"`
	Value                *SecurityProfileMetricValue                    `pulumi:"value"`
}

// SecurityProfileBehaviorCriteriaInput is an input type that accepts SecurityProfileBehaviorCriteriaArgs and SecurityProfileBehaviorCriteriaOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorCriteriaInput` via:
//
//          SecurityProfileBehaviorCriteriaArgs{...}
type SecurityProfileBehaviorCriteriaInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorCriteriaOutput() SecurityProfileBehaviorCriteriaOutput
	ToSecurityProfileBehaviorCriteriaOutputWithContext(context.Context) SecurityProfileBehaviorCriteriaOutput
}

// The criteria by which the behavior is determined to be normal.
type SecurityProfileBehaviorCriteriaArgs struct {
	// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
	ComparisonOperator SecurityProfileBehaviorCriteriaComparisonOperatorPtrInput `pulumi:"comparisonOperator"`
	// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
	ConsecutiveDatapointsToAlarm pulumi.IntPtrInput `pulumi:"consecutiveDatapointsToAlarm"`
	// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
	ConsecutiveDatapointsToClear pulumi.IntPtrInput `pulumi:"consecutiveDatapointsToClear"`
	// Use this to specify the time duration over which the behavior is evaluated.
	DurationSeconds      pulumi.IntPtrInput                                    `pulumi:"durationSeconds"`
	MlDetectionConfig    SecurityProfileMachineLearningDetectionConfigPtrInput `pulumi:"mlDetectionConfig"`
	StatisticalThreshold SecurityProfileStatisticalThresholdPtrInput           `pulumi:"statisticalThreshold"`
	Value                SecurityProfileMetricValuePtrInput                    `pulumi:"value"`
}

func (SecurityProfileBehaviorCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaOutput() SecurityProfileBehaviorCriteriaOutput {
	return i.ToSecurityProfileBehaviorCriteriaOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorCriteriaOutput)
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return i.ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Background())
}

func (i SecurityProfileBehaviorCriteriaArgs) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorCriteriaOutput).ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx)
}

// SecurityProfileBehaviorCriteriaPtrInput is an input type that accepts SecurityProfileBehaviorCriteriaArgs, SecurityProfileBehaviorCriteriaPtr and SecurityProfileBehaviorCriteriaPtrOutput values.
// You can construct a concrete instance of `SecurityProfileBehaviorCriteriaPtrInput` via:
//
//          SecurityProfileBehaviorCriteriaArgs{...}
//
//  or:
//
//          nil
type SecurityProfileBehaviorCriteriaPtrInput interface {
	pulumi.Input

	ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput
	ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Context) SecurityProfileBehaviorCriteriaPtrOutput
}

type securityProfileBehaviorCriteriaPtrType SecurityProfileBehaviorCriteriaArgs

func SecurityProfileBehaviorCriteriaPtr(v *SecurityProfileBehaviorCriteriaArgs) SecurityProfileBehaviorCriteriaPtrInput {
	return (*securityProfileBehaviorCriteriaPtrType)(v)
}

func (*securityProfileBehaviorCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (i *securityProfileBehaviorCriteriaPtrType) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return i.ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Background())
}

func (i *securityProfileBehaviorCriteriaPtrType) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileBehaviorCriteriaPtrOutput)
}

// The criteria by which the behavior is determined to be normal.
type SecurityProfileBehaviorCriteriaOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaOutput() SecurityProfileBehaviorCriteriaOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return o.ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(context.Background())
}

func (o SecurityProfileBehaviorCriteriaOutput) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileBehaviorCriteria) *SecurityProfileBehaviorCriteria {
		return &v
	}).(SecurityProfileBehaviorCriteriaPtrOutput)
}

// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
func (o SecurityProfileBehaviorCriteriaOutput) ComparisonOperator() SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileBehaviorCriteriaComparisonOperator {
		return v.ComparisonOperator
	}).(SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput)
}

// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaOutput) ConsecutiveDatapointsToAlarm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *int { return v.ConsecutiveDatapointsToAlarm }).(pulumi.IntPtrOutput)
}

// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaOutput) ConsecutiveDatapointsToClear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *int { return v.ConsecutiveDatapointsToClear }).(pulumi.IntPtrOutput)
}

// Use this to specify the time duration over which the behavior is evaluated.
func (o SecurityProfileBehaviorCriteriaOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o SecurityProfileBehaviorCriteriaOutput) MlDetectionConfig() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileMachineLearningDetectionConfig {
		return v.MlDetectionConfig
	}).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

func (o SecurityProfileBehaviorCriteriaOutput) StatisticalThreshold() SecurityProfileStatisticalThresholdPtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileStatisticalThreshold {
		return v.StatisticalThreshold
	}).(SecurityProfileStatisticalThresholdPtrOutput)
}

func (o SecurityProfileBehaviorCriteriaOutput) Value() SecurityProfileMetricValuePtrOutput {
	return o.ApplyT(func(v SecurityProfileBehaviorCriteria) *SecurityProfileMetricValue { return v.Value }).(SecurityProfileMetricValuePtrOutput)
}

type SecurityProfileBehaviorCriteriaPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileBehaviorCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileBehaviorCriteria)(nil)).Elem()
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) ToSecurityProfileBehaviorCriteriaPtrOutput() SecurityProfileBehaviorCriteriaPtrOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) ToSecurityProfileBehaviorCriteriaPtrOutputWithContext(ctx context.Context) SecurityProfileBehaviorCriteriaPtrOutput {
	return o
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) Elem() SecurityProfileBehaviorCriteriaOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) SecurityProfileBehaviorCriteria {
		if v != nil {
			return *v
		}
		var ret SecurityProfileBehaviorCriteria
		return ret
	}).(SecurityProfileBehaviorCriteriaOutput)
}

// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
func (o SecurityProfileBehaviorCriteriaPtrOutput) ComparisonOperator() SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileBehaviorCriteriaComparisonOperator {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(SecurityProfileBehaviorCriteriaComparisonOperatorPtrOutput)
}

// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaPtrOutput) ConsecutiveDatapointsToAlarm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveDatapointsToAlarm
	}).(pulumi.IntPtrOutput)
}

// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
func (o SecurityProfileBehaviorCriteriaPtrOutput) ConsecutiveDatapointsToClear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ConsecutiveDatapointsToClear
	}).(pulumi.IntPtrOutput)
}

// Use this to specify the time duration over which the behavior is evaluated.
func (o SecurityProfileBehaviorCriteriaPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) MlDetectionConfig() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileMachineLearningDetectionConfig {
		if v == nil {
			return nil
		}
		return v.MlDetectionConfig
	}).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) StatisticalThreshold() SecurityProfileStatisticalThresholdPtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileStatisticalThreshold {
		if v == nil {
			return nil
		}
		return v.StatisticalThreshold
	}).(SecurityProfileStatisticalThresholdPtrOutput)
}

func (o SecurityProfileBehaviorCriteriaPtrOutput) Value() SecurityProfileMetricValuePtrOutput {
	return o.ApplyT(func(v *SecurityProfileBehaviorCriteria) *SecurityProfileMetricValue {
		if v == nil {
			return nil
		}
		return v.Value
	}).(SecurityProfileMetricValuePtrOutput)
}

// The configuration of an ML Detect Security Profile.
type SecurityProfileMachineLearningDetectionConfig struct {
	// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
	ConfidenceLevel *SecurityProfileMachineLearningDetectionConfigConfidenceLevel `pulumi:"confidenceLevel"`
}

// SecurityProfileMachineLearningDetectionConfigInput is an input type that accepts SecurityProfileMachineLearningDetectionConfigArgs and SecurityProfileMachineLearningDetectionConfigOutput values.
// You can construct a concrete instance of `SecurityProfileMachineLearningDetectionConfigInput` via:
//
//          SecurityProfileMachineLearningDetectionConfigArgs{...}
type SecurityProfileMachineLearningDetectionConfigInput interface {
	pulumi.Input

	ToSecurityProfileMachineLearningDetectionConfigOutput() SecurityProfileMachineLearningDetectionConfigOutput
	ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(context.Context) SecurityProfileMachineLearningDetectionConfigOutput
}

// The configuration of an ML Detect Security Profile.
type SecurityProfileMachineLearningDetectionConfigArgs struct {
	// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
	ConfidenceLevel SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrInput `pulumi:"confidenceLevel"`
}

func (SecurityProfileMachineLearningDetectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigOutput() SecurityProfileMachineLearningDetectionConfigOutput {
	return i.ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(context.Background())
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMachineLearningDetectionConfigOutput)
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return i.ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Background())
}

func (i SecurityProfileMachineLearningDetectionConfigArgs) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMachineLearningDetectionConfigOutput).ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx)
}

// SecurityProfileMachineLearningDetectionConfigPtrInput is an input type that accepts SecurityProfileMachineLearningDetectionConfigArgs, SecurityProfileMachineLearningDetectionConfigPtr and SecurityProfileMachineLearningDetectionConfigPtrOutput values.
// You can construct a concrete instance of `SecurityProfileMachineLearningDetectionConfigPtrInput` via:
//
//          SecurityProfileMachineLearningDetectionConfigArgs{...}
//
//  or:
//
//          nil
type SecurityProfileMachineLearningDetectionConfigPtrInput interface {
	pulumi.Input

	ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput
	ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput
}

type securityProfileMachineLearningDetectionConfigPtrType SecurityProfileMachineLearningDetectionConfigArgs

func SecurityProfileMachineLearningDetectionConfigPtr(v *SecurityProfileMachineLearningDetectionConfigArgs) SecurityProfileMachineLearningDetectionConfigPtrInput {
	return (*securityProfileMachineLearningDetectionConfigPtrType)(v)
}

func (*securityProfileMachineLearningDetectionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (i *securityProfileMachineLearningDetectionConfigPtrType) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return i.ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Background())
}

func (i *securityProfileMachineLearningDetectionConfigPtrType) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

// The configuration of an ML Detect Security Profile.
type SecurityProfileMachineLearningDetectionConfigOutput struct{ *pulumi.OutputState }

func (SecurityProfileMachineLearningDetectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigOutput() SecurityProfileMachineLearningDetectionConfigOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(context.Background())
}

func (o SecurityProfileMachineLearningDetectionConfigOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileMachineLearningDetectionConfig) *SecurityProfileMachineLearningDetectionConfig {
		return &v
	}).(SecurityProfileMachineLearningDetectionConfigPtrOutput)
}

// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
func (o SecurityProfileMachineLearningDetectionConfigOutput) ConfidenceLevel() SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput {
	return o.ApplyT(func(v SecurityProfileMachineLearningDetectionConfig) *SecurityProfileMachineLearningDetectionConfigConfidenceLevel {
		return v.ConfidenceLevel
	}).(SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput)
}

type SecurityProfileMachineLearningDetectionConfigPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileMachineLearningDetectionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMachineLearningDetectionConfig)(nil)).Elem()
}

func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutput() SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) ToSecurityProfileMachineLearningDetectionConfigPtrOutputWithContext(ctx context.Context) SecurityProfileMachineLearningDetectionConfigPtrOutput {
	return o
}

func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) Elem() SecurityProfileMachineLearningDetectionConfigOutput {
	return o.ApplyT(func(v *SecurityProfileMachineLearningDetectionConfig) SecurityProfileMachineLearningDetectionConfig {
		if v != nil {
			return *v
		}
		var ret SecurityProfileMachineLearningDetectionConfig
		return ret
	}).(SecurityProfileMachineLearningDetectionConfigOutput)
}

// The sensitivity of anomalous behavior evaluation. Can be Low, Medium, or High.
func (o SecurityProfileMachineLearningDetectionConfigPtrOutput) ConfidenceLevel() SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMachineLearningDetectionConfig) *SecurityProfileMachineLearningDetectionConfigConfidenceLevel {
		if v == nil {
			return nil
		}
		return v.ConfidenceLevel
	}).(SecurityProfileMachineLearningDetectionConfigConfidenceLevelPtrOutput)
}

// The dimension of a metric.
type SecurityProfileMetricDimension struct {
	// A unique identifier for the dimension.
	DimensionName string `pulumi:"dimensionName"`
	// Defines how the dimensionValues of a dimension are interpreted.
	Operator *SecurityProfileMetricDimensionOperator `pulumi:"operator"`
}

// SecurityProfileMetricDimensionInput is an input type that accepts SecurityProfileMetricDimensionArgs and SecurityProfileMetricDimensionOutput values.
// You can construct a concrete instance of `SecurityProfileMetricDimensionInput` via:
//
//          SecurityProfileMetricDimensionArgs{...}
type SecurityProfileMetricDimensionInput interface {
	pulumi.Input

	ToSecurityProfileMetricDimensionOutput() SecurityProfileMetricDimensionOutput
	ToSecurityProfileMetricDimensionOutputWithContext(context.Context) SecurityProfileMetricDimensionOutput
}

// The dimension of a metric.
type SecurityProfileMetricDimensionArgs struct {
	// A unique identifier for the dimension.
	DimensionName pulumi.StringInput `pulumi:"dimensionName"`
	// Defines how the dimensionValues of a dimension are interpreted.
	Operator SecurityProfileMetricDimensionOperatorPtrInput `pulumi:"operator"`
}

func (SecurityProfileMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricDimension)(nil)).Elem()
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionOutput() SecurityProfileMetricDimensionOutput {
	return i.ToSecurityProfileMetricDimensionOutputWithContext(context.Background())
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricDimensionOutput)
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return i.ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Background())
}

func (i SecurityProfileMetricDimensionArgs) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricDimensionOutput).ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx)
}

// SecurityProfileMetricDimensionPtrInput is an input type that accepts SecurityProfileMetricDimensionArgs, SecurityProfileMetricDimensionPtr and SecurityProfileMetricDimensionPtrOutput values.
// You can construct a concrete instance of `SecurityProfileMetricDimensionPtrInput` via:
//
//          SecurityProfileMetricDimensionArgs{...}
//
//  or:
//
//          nil
type SecurityProfileMetricDimensionPtrInput interface {
	pulumi.Input

	ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput
	ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Context) SecurityProfileMetricDimensionPtrOutput
}

type securityProfileMetricDimensionPtrType SecurityProfileMetricDimensionArgs

func SecurityProfileMetricDimensionPtr(v *SecurityProfileMetricDimensionArgs) SecurityProfileMetricDimensionPtrInput {
	return (*securityProfileMetricDimensionPtrType)(v)
}

func (*securityProfileMetricDimensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricDimension)(nil)).Elem()
}

func (i *securityProfileMetricDimensionPtrType) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return i.ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Background())
}

func (i *securityProfileMetricDimensionPtrType) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricDimensionPtrOutput)
}

// The dimension of a metric.
type SecurityProfileMetricDimensionOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricDimension)(nil)).Elem()
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionOutput() SecurityProfileMetricDimensionOutput {
	return o
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionOutput {
	return o
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return o.ToSecurityProfileMetricDimensionPtrOutputWithContext(context.Background())
}

func (o SecurityProfileMetricDimensionOutput) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileMetricDimension) *SecurityProfileMetricDimension {
		return &v
	}).(SecurityProfileMetricDimensionPtrOutput)
}

// A unique identifier for the dimension.
func (o SecurityProfileMetricDimensionOutput) DimensionName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileMetricDimension) string { return v.DimensionName }).(pulumi.StringOutput)
}

// Defines how the dimensionValues of a dimension are interpreted.
func (o SecurityProfileMetricDimensionOutput) Operator() SecurityProfileMetricDimensionOperatorPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricDimension) *SecurityProfileMetricDimensionOperator { return v.Operator }).(SecurityProfileMetricDimensionOperatorPtrOutput)
}

type SecurityProfileMetricDimensionPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricDimensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricDimension)(nil)).Elem()
}

func (o SecurityProfileMetricDimensionPtrOutput) ToSecurityProfileMetricDimensionPtrOutput() SecurityProfileMetricDimensionPtrOutput {
	return o
}

func (o SecurityProfileMetricDimensionPtrOutput) ToSecurityProfileMetricDimensionPtrOutputWithContext(ctx context.Context) SecurityProfileMetricDimensionPtrOutput {
	return o
}

func (o SecurityProfileMetricDimensionPtrOutput) Elem() SecurityProfileMetricDimensionOutput {
	return o.ApplyT(func(v *SecurityProfileMetricDimension) SecurityProfileMetricDimension {
		if v != nil {
			return *v
		}
		var ret SecurityProfileMetricDimension
		return ret
	}).(SecurityProfileMetricDimensionOutput)
}

// A unique identifier for the dimension.
func (o SecurityProfileMetricDimensionPtrOutput) DimensionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricDimension) *string {
		if v == nil {
			return nil
		}
		return &v.DimensionName
	}).(pulumi.StringPtrOutput)
}

// Defines how the dimensionValues of a dimension are interpreted.
func (o SecurityProfileMetricDimensionPtrOutput) Operator() SecurityProfileMetricDimensionOperatorPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricDimension) *SecurityProfileMetricDimensionOperator {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(SecurityProfileMetricDimensionOperatorPtrOutput)
}

// The metric you want to retain. Dimensions are optional.
type SecurityProfileMetricToRetain struct {
	// What is measured by the behavior.
	Metric          string                          `pulumi:"metric"`
	MetricDimension *SecurityProfileMetricDimension `pulumi:"metricDimension"`
}

// SecurityProfileMetricToRetainInput is an input type that accepts SecurityProfileMetricToRetainArgs and SecurityProfileMetricToRetainOutput values.
// You can construct a concrete instance of `SecurityProfileMetricToRetainInput` via:
//
//          SecurityProfileMetricToRetainArgs{...}
type SecurityProfileMetricToRetainInput interface {
	pulumi.Input

	ToSecurityProfileMetricToRetainOutput() SecurityProfileMetricToRetainOutput
	ToSecurityProfileMetricToRetainOutputWithContext(context.Context) SecurityProfileMetricToRetainOutput
}

// The metric you want to retain. Dimensions are optional.
type SecurityProfileMetricToRetainArgs struct {
	// What is measured by the behavior.
	Metric          pulumi.StringInput                     `pulumi:"metric"`
	MetricDimension SecurityProfileMetricDimensionPtrInput `pulumi:"metricDimension"`
}

func (SecurityProfileMetricToRetainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricToRetain)(nil)).Elem()
}

func (i SecurityProfileMetricToRetainArgs) ToSecurityProfileMetricToRetainOutput() SecurityProfileMetricToRetainOutput {
	return i.ToSecurityProfileMetricToRetainOutputWithContext(context.Background())
}

func (i SecurityProfileMetricToRetainArgs) ToSecurityProfileMetricToRetainOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricToRetainOutput)
}

// SecurityProfileMetricToRetainArrayInput is an input type that accepts SecurityProfileMetricToRetainArray and SecurityProfileMetricToRetainArrayOutput values.
// You can construct a concrete instance of `SecurityProfileMetricToRetainArrayInput` via:
//
//          SecurityProfileMetricToRetainArray{ SecurityProfileMetricToRetainArgs{...} }
type SecurityProfileMetricToRetainArrayInput interface {
	pulumi.Input

	ToSecurityProfileMetricToRetainArrayOutput() SecurityProfileMetricToRetainArrayOutput
	ToSecurityProfileMetricToRetainArrayOutputWithContext(context.Context) SecurityProfileMetricToRetainArrayOutput
}

type SecurityProfileMetricToRetainArray []SecurityProfileMetricToRetainInput

func (SecurityProfileMetricToRetainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileMetricToRetain)(nil)).Elem()
}

func (i SecurityProfileMetricToRetainArray) ToSecurityProfileMetricToRetainArrayOutput() SecurityProfileMetricToRetainArrayOutput {
	return i.ToSecurityProfileMetricToRetainArrayOutputWithContext(context.Background())
}

func (i SecurityProfileMetricToRetainArray) ToSecurityProfileMetricToRetainArrayOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricToRetainArrayOutput)
}

// The metric you want to retain. Dimensions are optional.
type SecurityProfileMetricToRetainOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricToRetainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricToRetain)(nil)).Elem()
}

func (o SecurityProfileMetricToRetainOutput) ToSecurityProfileMetricToRetainOutput() SecurityProfileMetricToRetainOutput {
	return o
}

func (o SecurityProfileMetricToRetainOutput) ToSecurityProfileMetricToRetainOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainOutput {
	return o
}

// What is measured by the behavior.
func (o SecurityProfileMetricToRetainOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileMetricToRetain) string { return v.Metric }).(pulumi.StringOutput)
}

func (o SecurityProfileMetricToRetainOutput) MetricDimension() SecurityProfileMetricDimensionPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricToRetain) *SecurityProfileMetricDimension { return v.MetricDimension }).(SecurityProfileMetricDimensionPtrOutput)
}

type SecurityProfileMetricToRetainArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricToRetainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileMetricToRetain)(nil)).Elem()
}

func (o SecurityProfileMetricToRetainArrayOutput) ToSecurityProfileMetricToRetainArrayOutput() SecurityProfileMetricToRetainArrayOutput {
	return o
}

func (o SecurityProfileMetricToRetainArrayOutput) ToSecurityProfileMetricToRetainArrayOutputWithContext(ctx context.Context) SecurityProfileMetricToRetainArrayOutput {
	return o
}

func (o SecurityProfileMetricToRetainArrayOutput) Index(i pulumi.IntInput) SecurityProfileMetricToRetainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileMetricToRetain {
		return vs[0].([]SecurityProfileMetricToRetain)[vs[1].(int)]
	}).(SecurityProfileMetricToRetainOutput)
}

// The value to be compared with the metric.
type SecurityProfileMetricValue struct {
	// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
	Cidrs []string `pulumi:"cidrs"`
	// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
	Count *string `pulumi:"count"`
	// The numeral value of a metric.
	Number *float64 `pulumi:"number"`
	// The numeral values of a metric.
	Numbers []float64 `pulumi:"numbers"`
	// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
	Ports []int `pulumi:"ports"`
	// The string values of a metric.
	Strings []string `pulumi:"strings"`
}

// SecurityProfileMetricValueInput is an input type that accepts SecurityProfileMetricValueArgs and SecurityProfileMetricValueOutput values.
// You can construct a concrete instance of `SecurityProfileMetricValueInput` via:
//
//          SecurityProfileMetricValueArgs{...}
type SecurityProfileMetricValueInput interface {
	pulumi.Input

	ToSecurityProfileMetricValueOutput() SecurityProfileMetricValueOutput
	ToSecurityProfileMetricValueOutputWithContext(context.Context) SecurityProfileMetricValueOutput
}

// The value to be compared with the metric.
type SecurityProfileMetricValueArgs struct {
	// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
	Count pulumi.StringPtrInput `pulumi:"count"`
	// The numeral value of a metric.
	Number pulumi.Float64PtrInput `pulumi:"number"`
	// The numeral values of a metric.
	Numbers pulumi.Float64ArrayInput `pulumi:"numbers"`
	// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
	Ports pulumi.IntArrayInput `pulumi:"ports"`
	// The string values of a metric.
	Strings pulumi.StringArrayInput `pulumi:"strings"`
}

func (SecurityProfileMetricValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricValue)(nil)).Elem()
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValueOutput() SecurityProfileMetricValueOutput {
	return i.ToSecurityProfileMetricValueOutputWithContext(context.Background())
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValueOutputWithContext(ctx context.Context) SecurityProfileMetricValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricValueOutput)
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return i.ToSecurityProfileMetricValuePtrOutputWithContext(context.Background())
}

func (i SecurityProfileMetricValueArgs) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricValueOutput).ToSecurityProfileMetricValuePtrOutputWithContext(ctx)
}

// SecurityProfileMetricValuePtrInput is an input type that accepts SecurityProfileMetricValueArgs, SecurityProfileMetricValuePtr and SecurityProfileMetricValuePtrOutput values.
// You can construct a concrete instance of `SecurityProfileMetricValuePtrInput` via:
//
//          SecurityProfileMetricValueArgs{...}
//
//  or:
//
//          nil
type SecurityProfileMetricValuePtrInput interface {
	pulumi.Input

	ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput
	ToSecurityProfileMetricValuePtrOutputWithContext(context.Context) SecurityProfileMetricValuePtrOutput
}

type securityProfileMetricValuePtrType SecurityProfileMetricValueArgs

func SecurityProfileMetricValuePtr(v *SecurityProfileMetricValueArgs) SecurityProfileMetricValuePtrInput {
	return (*securityProfileMetricValuePtrType)(v)
}

func (*securityProfileMetricValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricValue)(nil)).Elem()
}

func (i *securityProfileMetricValuePtrType) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return i.ToSecurityProfileMetricValuePtrOutputWithContext(context.Background())
}

func (i *securityProfileMetricValuePtrType) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileMetricValuePtrOutput)
}

// The value to be compared with the metric.
type SecurityProfileMetricValueOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileMetricValue)(nil)).Elem()
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValueOutput() SecurityProfileMetricValueOutput {
	return o
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValueOutputWithContext(ctx context.Context) SecurityProfileMetricValueOutput {
	return o
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return o.ToSecurityProfileMetricValuePtrOutputWithContext(context.Background())
}

func (o SecurityProfileMetricValueOutput) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileMetricValue) *SecurityProfileMetricValue {
		return &v
	}).(SecurityProfileMetricValuePtrOutput)
}

// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValueOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
func (o SecurityProfileMetricValueOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) *string { return v.Count }).(pulumi.StringPtrOutput)
}

// The numeral value of a metric.
func (o SecurityProfileMetricValueOutput) Number() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) *float64 { return v.Number }).(pulumi.Float64PtrOutput)
}

// The numeral values of a metric.
func (o SecurityProfileMetricValueOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []float64 { return v.Numbers }).(pulumi.Float64ArrayOutput)
}

// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValueOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// The string values of a metric.
func (o SecurityProfileMetricValueOutput) Strings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityProfileMetricValue) []string { return v.Strings }).(pulumi.StringArrayOutput)
}

type SecurityProfileMetricValuePtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileMetricValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileMetricValue)(nil)).Elem()
}

func (o SecurityProfileMetricValuePtrOutput) ToSecurityProfileMetricValuePtrOutput() SecurityProfileMetricValuePtrOutput {
	return o
}

func (o SecurityProfileMetricValuePtrOutput) ToSecurityProfileMetricValuePtrOutputWithContext(ctx context.Context) SecurityProfileMetricValuePtrOutput {
	return o
}

func (o SecurityProfileMetricValuePtrOutput) Elem() SecurityProfileMetricValueOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) SecurityProfileMetricValue {
		if v != nil {
			return *v
		}
		var ret SecurityProfileMetricValue
		return ret
	}).(SecurityProfileMetricValueOutput)
}

// If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValuePtrOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []string {
		if v == nil {
			return nil
		}
		return v.Cidrs
	}).(pulumi.StringArrayOutput)
}

// If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
func (o SecurityProfileMetricValuePtrOutput) Count() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) *string {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.StringPtrOutput)
}

// The numeral value of a metric.
func (o SecurityProfileMetricValuePtrOutput) Number() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) *float64 {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.Float64PtrOutput)
}

// The numeral values of a metric.
func (o SecurityProfileMetricValuePtrOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []float64 {
		if v == nil {
			return nil
		}
		return v.Numbers
	}).(pulumi.Float64ArrayOutput)
}

// If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
func (o SecurityProfileMetricValuePtrOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []int {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.IntArrayOutput)
}

// The string values of a metric.
func (o SecurityProfileMetricValuePtrOutput) Strings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityProfileMetricValue) []string {
		if v == nil {
			return nil
		}
		return v.Strings
	}).(pulumi.StringArrayOutput)
}

// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
type SecurityProfileStatisticalThreshold struct {
	// The percentile which resolves to a threshold value by which compliance with a behavior is determined
	Statistic *SecurityProfileStatisticalThresholdStatistic `pulumi:"statistic"`
}

// SecurityProfileStatisticalThresholdInput is an input type that accepts SecurityProfileStatisticalThresholdArgs and SecurityProfileStatisticalThresholdOutput values.
// You can construct a concrete instance of `SecurityProfileStatisticalThresholdInput` via:
//
//          SecurityProfileStatisticalThresholdArgs{...}
type SecurityProfileStatisticalThresholdInput interface {
	pulumi.Input

	ToSecurityProfileStatisticalThresholdOutput() SecurityProfileStatisticalThresholdOutput
	ToSecurityProfileStatisticalThresholdOutputWithContext(context.Context) SecurityProfileStatisticalThresholdOutput
}

// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
type SecurityProfileStatisticalThresholdArgs struct {
	// The percentile which resolves to a threshold value by which compliance with a behavior is determined
	Statistic SecurityProfileStatisticalThresholdStatisticPtrInput `pulumi:"statistic"`
}

func (SecurityProfileStatisticalThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdOutput() SecurityProfileStatisticalThresholdOutput {
	return i.ToSecurityProfileStatisticalThresholdOutputWithContext(context.Background())
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileStatisticalThresholdOutput)
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return i.ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Background())
}

func (i SecurityProfileStatisticalThresholdArgs) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileStatisticalThresholdOutput).ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx)
}

// SecurityProfileStatisticalThresholdPtrInput is an input type that accepts SecurityProfileStatisticalThresholdArgs, SecurityProfileStatisticalThresholdPtr and SecurityProfileStatisticalThresholdPtrOutput values.
// You can construct a concrete instance of `SecurityProfileStatisticalThresholdPtrInput` via:
//
//          SecurityProfileStatisticalThresholdArgs{...}
//
//  or:
//
//          nil
type SecurityProfileStatisticalThresholdPtrInput interface {
	pulumi.Input

	ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput
	ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Context) SecurityProfileStatisticalThresholdPtrOutput
}

type securityProfileStatisticalThresholdPtrType SecurityProfileStatisticalThresholdArgs

func SecurityProfileStatisticalThresholdPtr(v *SecurityProfileStatisticalThresholdArgs) SecurityProfileStatisticalThresholdPtrInput {
	return (*securityProfileStatisticalThresholdPtrType)(v)
}

func (*securityProfileStatisticalThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (i *securityProfileStatisticalThresholdPtrType) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return i.ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Background())
}

func (i *securityProfileStatisticalThresholdPtrType) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileStatisticalThresholdPtrOutput)
}

// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
type SecurityProfileStatisticalThresholdOutput struct{ *pulumi.OutputState }

func (SecurityProfileStatisticalThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdOutput() SecurityProfileStatisticalThresholdOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return o.ToSecurityProfileStatisticalThresholdPtrOutputWithContext(context.Background())
}

func (o SecurityProfileStatisticalThresholdOutput) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityProfileStatisticalThreshold) *SecurityProfileStatisticalThreshold {
		return &v
	}).(SecurityProfileStatisticalThresholdPtrOutput)
}

// The percentile which resolves to a threshold value by which compliance with a behavior is determined
func (o SecurityProfileStatisticalThresholdOutput) Statistic() SecurityProfileStatisticalThresholdStatisticPtrOutput {
	return o.ApplyT(func(v SecurityProfileStatisticalThreshold) *SecurityProfileStatisticalThresholdStatistic {
		return v.Statistic
	}).(SecurityProfileStatisticalThresholdStatisticPtrOutput)
}

type SecurityProfileStatisticalThresholdPtrOutput struct{ *pulumi.OutputState }

func (SecurityProfileStatisticalThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileStatisticalThreshold)(nil)).Elem()
}

func (o SecurityProfileStatisticalThresholdPtrOutput) ToSecurityProfileStatisticalThresholdPtrOutput() SecurityProfileStatisticalThresholdPtrOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdPtrOutput) ToSecurityProfileStatisticalThresholdPtrOutputWithContext(ctx context.Context) SecurityProfileStatisticalThresholdPtrOutput {
	return o
}

func (o SecurityProfileStatisticalThresholdPtrOutput) Elem() SecurityProfileStatisticalThresholdOutput {
	return o.ApplyT(func(v *SecurityProfileStatisticalThreshold) SecurityProfileStatisticalThreshold {
		if v != nil {
			return *v
		}
		var ret SecurityProfileStatisticalThreshold
		return ret
	}).(SecurityProfileStatisticalThresholdOutput)
}

// The percentile which resolves to a threshold value by which compliance with a behavior is determined
func (o SecurityProfileStatisticalThresholdPtrOutput) Statistic() SecurityProfileStatisticalThresholdStatisticPtrOutput {
	return o.ApplyT(func(v *SecurityProfileStatisticalThreshold) *SecurityProfileStatisticalThresholdStatistic {
		if v == nil {
			return nil
		}
		return v.Statistic
	}).(SecurityProfileStatisticalThresholdStatisticPtrOutput)
}

// A key-value pair to associate with a resource.
type SecurityProfileTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// SecurityProfileTagInput is an input type that accepts SecurityProfileTagArgs and SecurityProfileTagOutput values.
// You can construct a concrete instance of `SecurityProfileTagInput` via:
//
//          SecurityProfileTagArgs{...}
type SecurityProfileTagInput interface {
	pulumi.Input

	ToSecurityProfileTagOutput() SecurityProfileTagOutput
	ToSecurityProfileTagOutputWithContext(context.Context) SecurityProfileTagOutput
}

// A key-value pair to associate with a resource.
type SecurityProfileTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileTag)(nil)).Elem()
}

func (i SecurityProfileTagArgs) ToSecurityProfileTagOutput() SecurityProfileTagOutput {
	return i.ToSecurityProfileTagOutputWithContext(context.Background())
}

func (i SecurityProfileTagArgs) ToSecurityProfileTagOutputWithContext(ctx context.Context) SecurityProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileTagOutput)
}

// SecurityProfileTagArrayInput is an input type that accepts SecurityProfileTagArray and SecurityProfileTagArrayOutput values.
// You can construct a concrete instance of `SecurityProfileTagArrayInput` via:
//
//          SecurityProfileTagArray{ SecurityProfileTagArgs{...} }
type SecurityProfileTagArrayInput interface {
	pulumi.Input

	ToSecurityProfileTagArrayOutput() SecurityProfileTagArrayOutput
	ToSecurityProfileTagArrayOutputWithContext(context.Context) SecurityProfileTagArrayOutput
}

type SecurityProfileTagArray []SecurityProfileTagInput

func (SecurityProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileTag)(nil)).Elem()
}

func (i SecurityProfileTagArray) ToSecurityProfileTagArrayOutput() SecurityProfileTagArrayOutput {
	return i.ToSecurityProfileTagArrayOutputWithContext(context.Background())
}

func (i SecurityProfileTagArray) ToSecurityProfileTagArrayOutputWithContext(ctx context.Context) SecurityProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileTagArrayOutput)
}

// A key-value pair to associate with a resource.
type SecurityProfileTagOutput struct{ *pulumi.OutputState }

func (SecurityProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileTag)(nil)).Elem()
}

func (o SecurityProfileTagOutput) ToSecurityProfileTagOutput() SecurityProfileTagOutput {
	return o
}

func (o SecurityProfileTagOutput) ToSecurityProfileTagOutputWithContext(ctx context.Context) SecurityProfileTagOutput {
	return o
}

// The tag's key.
func (o SecurityProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o SecurityProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityProfileTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileTag)(nil)).Elem()
}

func (o SecurityProfileTagArrayOutput) ToSecurityProfileTagArrayOutput() SecurityProfileTagArrayOutput {
	return o
}

func (o SecurityProfileTagArrayOutput) ToSecurityProfileTagArrayOutputWithContext(ctx context.Context) SecurityProfileTagArrayOutput {
	return o
}

func (o SecurityProfileTagArrayOutput) Index(i pulumi.IntInput) SecurityProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileTag {
		return vs[0].([]SecurityProfileTag)[vs[1].(int)]
	}).(SecurityProfileTagOutput)
}

type ThingAttributePayload struct {
	Attributes interface{} `pulumi:"attributes"`
}

// ThingAttributePayloadInput is an input type that accepts ThingAttributePayloadArgs and ThingAttributePayloadOutput values.
// You can construct a concrete instance of `ThingAttributePayloadInput` via:
//
//          ThingAttributePayloadArgs{...}
type ThingAttributePayloadInput interface {
	pulumi.Input

	ToThingAttributePayloadOutput() ThingAttributePayloadOutput
	ToThingAttributePayloadOutputWithContext(context.Context) ThingAttributePayloadOutput
}

type ThingAttributePayloadArgs struct {
	Attributes pulumi.Input `pulumi:"attributes"`
}

func (ThingAttributePayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingAttributePayload)(nil)).Elem()
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadOutput() ThingAttributePayloadOutput {
	return i.ToThingAttributePayloadOutputWithContext(context.Background())
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadOutputWithContext(ctx context.Context) ThingAttributePayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingAttributePayloadOutput)
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return i.ToThingAttributePayloadPtrOutputWithContext(context.Background())
}

func (i ThingAttributePayloadArgs) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingAttributePayloadOutput).ToThingAttributePayloadPtrOutputWithContext(ctx)
}

// ThingAttributePayloadPtrInput is an input type that accepts ThingAttributePayloadArgs, ThingAttributePayloadPtr and ThingAttributePayloadPtrOutput values.
// You can construct a concrete instance of `ThingAttributePayloadPtrInput` via:
//
//          ThingAttributePayloadArgs{...}
//
//  or:
//
//          nil
type ThingAttributePayloadPtrInput interface {
	pulumi.Input

	ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput
	ToThingAttributePayloadPtrOutputWithContext(context.Context) ThingAttributePayloadPtrOutput
}

type thingAttributePayloadPtrType ThingAttributePayloadArgs

func ThingAttributePayloadPtr(v *ThingAttributePayloadArgs) ThingAttributePayloadPtrInput {
	return (*thingAttributePayloadPtrType)(v)
}

func (*thingAttributePayloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingAttributePayload)(nil)).Elem()
}

func (i *thingAttributePayloadPtrType) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return i.ToThingAttributePayloadPtrOutputWithContext(context.Background())
}

func (i *thingAttributePayloadPtrType) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingAttributePayloadPtrOutput)
}

type ThingAttributePayloadOutput struct{ *pulumi.OutputState }

func (ThingAttributePayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingAttributePayload)(nil)).Elem()
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadOutput() ThingAttributePayloadOutput {
	return o
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadOutputWithContext(ctx context.Context) ThingAttributePayloadOutput {
	return o
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return o.ToThingAttributePayloadPtrOutputWithContext(context.Background())
}

func (o ThingAttributePayloadOutput) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThingAttributePayload) *ThingAttributePayload {
		return &v
	}).(ThingAttributePayloadPtrOutput)
}

func (o ThingAttributePayloadOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v ThingAttributePayload) interface{} { return v.Attributes }).(pulumi.AnyOutput)
}

type ThingAttributePayloadPtrOutput struct{ *pulumi.OutputState }

func (ThingAttributePayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingAttributePayload)(nil)).Elem()
}

func (o ThingAttributePayloadPtrOutput) ToThingAttributePayloadPtrOutput() ThingAttributePayloadPtrOutput {
	return o
}

func (o ThingAttributePayloadPtrOutput) ToThingAttributePayloadPtrOutputWithContext(ctx context.Context) ThingAttributePayloadPtrOutput {
	return o
}

func (o ThingAttributePayloadPtrOutput) Elem() ThingAttributePayloadOutput {
	return o.ApplyT(func(v *ThingAttributePayload) ThingAttributePayload {
		if v != nil {
			return *v
		}
		var ret ThingAttributePayload
		return ret
	}).(ThingAttributePayloadOutput)
}

func (o ThingAttributePayloadPtrOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v *ThingAttributePayload) interface{} {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.AnyOutput)
}

type TopicRuleAction struct {
	CloudwatchAlarm  *TopicRuleCloudwatchAlarmAction  `pulumi:"cloudwatchAlarm"`
	CloudwatchLogs   *TopicRuleCloudwatchLogsAction   `pulumi:"cloudwatchLogs"`
	CloudwatchMetric *TopicRuleCloudwatchMetricAction `pulumi:"cloudwatchMetric"`
	DynamoDB         *TopicRuleDynamoDBAction         `pulumi:"dynamoDB"`
	DynamoDBv2       *TopicRuleDynamoDBv2Action       `pulumi:"dynamoDBv2"`
	Elasticsearch    *TopicRuleElasticsearchAction    `pulumi:"elasticsearch"`
	Firehose         *TopicRuleFirehoseAction         `pulumi:"firehose"`
	Http             *TopicRuleHttpAction             `pulumi:"http"`
	IotAnalytics     *TopicRuleIotAnalyticsAction     `pulumi:"iotAnalytics"`
	IotEvents        *TopicRuleIotEventsAction        `pulumi:"iotEvents"`
	IotSiteWise      *TopicRuleIotSiteWiseAction      `pulumi:"iotSiteWise"`
	Kafka            *TopicRuleKafkaAction            `pulumi:"kafka"`
	Kinesis          *TopicRuleKinesisAction          `pulumi:"kinesis"`
	Lambda           *TopicRuleLambdaAction           `pulumi:"lambda"`
	OpenSearch       *TopicRuleOpenSearchAction       `pulumi:"openSearch"`
	Republish        *TopicRuleRepublishAction        `pulumi:"republish"`
	S3               *TopicRuleS3Action               `pulumi:"s3"`
	Sns              *TopicRuleSnsAction              `pulumi:"sns"`
	Sqs              *TopicRuleSqsAction              `pulumi:"sqs"`
	StepFunctions    *TopicRuleStepFunctionsAction    `pulumi:"stepFunctions"`
	Timestream       *TopicRuleTimestreamAction       `pulumi:"timestream"`
}

// TopicRuleActionInput is an input type that accepts TopicRuleActionArgs and TopicRuleActionOutput values.
// You can construct a concrete instance of `TopicRuleActionInput` via:
//
//          TopicRuleActionArgs{...}
type TopicRuleActionInput interface {
	pulumi.Input

	ToTopicRuleActionOutput() TopicRuleActionOutput
	ToTopicRuleActionOutputWithContext(context.Context) TopicRuleActionOutput
}

type TopicRuleActionArgs struct {
	CloudwatchAlarm  TopicRuleCloudwatchAlarmActionPtrInput  `pulumi:"cloudwatchAlarm"`
	CloudwatchLogs   TopicRuleCloudwatchLogsActionPtrInput   `pulumi:"cloudwatchLogs"`
	CloudwatchMetric TopicRuleCloudwatchMetricActionPtrInput `pulumi:"cloudwatchMetric"`
	DynamoDB         TopicRuleDynamoDBActionPtrInput         `pulumi:"dynamoDB"`
	DynamoDBv2       TopicRuleDynamoDBv2ActionPtrInput       `pulumi:"dynamoDBv2"`
	Elasticsearch    TopicRuleElasticsearchActionPtrInput    `pulumi:"elasticsearch"`
	Firehose         TopicRuleFirehoseActionPtrInput         `pulumi:"firehose"`
	Http             TopicRuleHttpActionPtrInput             `pulumi:"http"`
	IotAnalytics     TopicRuleIotAnalyticsActionPtrInput     `pulumi:"iotAnalytics"`
	IotEvents        TopicRuleIotEventsActionPtrInput        `pulumi:"iotEvents"`
	IotSiteWise      TopicRuleIotSiteWiseActionPtrInput      `pulumi:"iotSiteWise"`
	Kafka            TopicRuleKafkaActionPtrInput            `pulumi:"kafka"`
	Kinesis          TopicRuleKinesisActionPtrInput          `pulumi:"kinesis"`
	Lambda           TopicRuleLambdaActionPtrInput           `pulumi:"lambda"`
	OpenSearch       TopicRuleOpenSearchActionPtrInput       `pulumi:"openSearch"`
	Republish        TopicRuleRepublishActionPtrInput        `pulumi:"republish"`
	S3               TopicRuleS3ActionPtrInput               `pulumi:"s3"`
	Sns              TopicRuleSnsActionPtrInput              `pulumi:"sns"`
	Sqs              TopicRuleSqsActionPtrInput              `pulumi:"sqs"`
	StepFunctions    TopicRuleStepFunctionsActionPtrInput    `pulumi:"stepFunctions"`
	Timestream       TopicRuleTimestreamActionPtrInput       `pulumi:"timestream"`
}

func (TopicRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAction)(nil)).Elem()
}

func (i TopicRuleActionArgs) ToTopicRuleActionOutput() TopicRuleActionOutput {
	return i.ToTopicRuleActionOutputWithContext(context.Background())
}

func (i TopicRuleActionArgs) ToTopicRuleActionOutputWithContext(ctx context.Context) TopicRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionOutput)
}

func (i TopicRuleActionArgs) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return i.ToTopicRuleActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleActionArgs) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionOutput).ToTopicRuleActionPtrOutputWithContext(ctx)
}

// TopicRuleActionPtrInput is an input type that accepts TopicRuleActionArgs, TopicRuleActionPtr and TopicRuleActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleActionPtrInput` via:
//
//          TopicRuleActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleActionPtrInput interface {
	pulumi.Input

	ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput
	ToTopicRuleActionPtrOutputWithContext(context.Context) TopicRuleActionPtrOutput
}

type topicRuleActionPtrType TopicRuleActionArgs

func TopicRuleActionPtr(v *TopicRuleActionArgs) TopicRuleActionPtrInput {
	return (*topicRuleActionPtrType)(v)
}

func (*topicRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleAction)(nil)).Elem()
}

func (i *topicRuleActionPtrType) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return i.ToTopicRuleActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleActionPtrType) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionPtrOutput)
}

// TopicRuleActionArrayInput is an input type that accepts TopicRuleActionArray and TopicRuleActionArrayOutput values.
// You can construct a concrete instance of `TopicRuleActionArrayInput` via:
//
//          TopicRuleActionArray{ TopicRuleActionArgs{...} }
type TopicRuleActionArrayInput interface {
	pulumi.Input

	ToTopicRuleActionArrayOutput() TopicRuleActionArrayOutput
	ToTopicRuleActionArrayOutputWithContext(context.Context) TopicRuleActionArrayOutput
}

type TopicRuleActionArray []TopicRuleActionInput

func (TopicRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAction)(nil)).Elem()
}

func (i TopicRuleActionArray) ToTopicRuleActionArrayOutput() TopicRuleActionArrayOutput {
	return i.ToTopicRuleActionArrayOutputWithContext(context.Background())
}

func (i TopicRuleActionArray) ToTopicRuleActionArrayOutputWithContext(ctx context.Context) TopicRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleActionArrayOutput)
}

type TopicRuleActionOutput struct{ *pulumi.OutputState }

func (TopicRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAction)(nil)).Elem()
}

func (o TopicRuleActionOutput) ToTopicRuleActionOutput() TopicRuleActionOutput {
	return o
}

func (o TopicRuleActionOutput) ToTopicRuleActionOutputWithContext(ctx context.Context) TopicRuleActionOutput {
	return o
}

func (o TopicRuleActionOutput) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return o.ToTopicRuleActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleActionOutput) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleAction) *TopicRuleAction {
		return &v
	}).(TopicRuleActionPtrOutput)
}

func (o TopicRuleActionOutput) CloudwatchAlarm() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleCloudwatchAlarmAction { return v.CloudwatchAlarm }).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

func (o TopicRuleActionOutput) CloudwatchLogs() TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleCloudwatchLogsAction { return v.CloudwatchLogs }).(TopicRuleCloudwatchLogsActionPtrOutput)
}

func (o TopicRuleActionOutput) CloudwatchMetric() TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleCloudwatchMetricAction { return v.CloudwatchMetric }).(TopicRuleCloudwatchMetricActionPtrOutput)
}

func (o TopicRuleActionOutput) DynamoDB() TopicRuleDynamoDBActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleDynamoDBAction { return v.DynamoDB }).(TopicRuleDynamoDBActionPtrOutput)
}

func (o TopicRuleActionOutput) DynamoDBv2() TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleDynamoDBv2Action { return v.DynamoDBv2 }).(TopicRuleDynamoDBv2ActionPtrOutput)
}

func (o TopicRuleActionOutput) Elasticsearch() TopicRuleElasticsearchActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleElasticsearchAction { return v.Elasticsearch }).(TopicRuleElasticsearchActionPtrOutput)
}

func (o TopicRuleActionOutput) Firehose() TopicRuleFirehoseActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleFirehoseAction { return v.Firehose }).(TopicRuleFirehoseActionPtrOutput)
}

func (o TopicRuleActionOutput) Http() TopicRuleHttpActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleHttpAction { return v.Http }).(TopicRuleHttpActionPtrOutput)
}

func (o TopicRuleActionOutput) IotAnalytics() TopicRuleIotAnalyticsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleIotAnalyticsAction { return v.IotAnalytics }).(TopicRuleIotAnalyticsActionPtrOutput)
}

func (o TopicRuleActionOutput) IotEvents() TopicRuleIotEventsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleIotEventsAction { return v.IotEvents }).(TopicRuleIotEventsActionPtrOutput)
}

func (o TopicRuleActionOutput) IotSiteWise() TopicRuleIotSiteWiseActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleIotSiteWiseAction { return v.IotSiteWise }).(TopicRuleIotSiteWiseActionPtrOutput)
}

func (o TopicRuleActionOutput) Kafka() TopicRuleKafkaActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleKafkaAction { return v.Kafka }).(TopicRuleKafkaActionPtrOutput)
}

func (o TopicRuleActionOutput) Kinesis() TopicRuleKinesisActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleKinesisAction { return v.Kinesis }).(TopicRuleKinesisActionPtrOutput)
}

func (o TopicRuleActionOutput) Lambda() TopicRuleLambdaActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleLambdaAction { return v.Lambda }).(TopicRuleLambdaActionPtrOutput)
}

func (o TopicRuleActionOutput) OpenSearch() TopicRuleOpenSearchActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleOpenSearchAction { return v.OpenSearch }).(TopicRuleOpenSearchActionPtrOutput)
}

func (o TopicRuleActionOutput) Republish() TopicRuleRepublishActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleRepublishAction { return v.Republish }).(TopicRuleRepublishActionPtrOutput)
}

func (o TopicRuleActionOutput) S3() TopicRuleS3ActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleS3Action { return v.S3 }).(TopicRuleS3ActionPtrOutput)
}

func (o TopicRuleActionOutput) Sns() TopicRuleSnsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleSnsAction { return v.Sns }).(TopicRuleSnsActionPtrOutput)
}

func (o TopicRuleActionOutput) Sqs() TopicRuleSqsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleSqsAction { return v.Sqs }).(TopicRuleSqsActionPtrOutput)
}

func (o TopicRuleActionOutput) StepFunctions() TopicRuleStepFunctionsActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleStepFunctionsAction { return v.StepFunctions }).(TopicRuleStepFunctionsActionPtrOutput)
}

func (o TopicRuleActionOutput) Timestream() TopicRuleTimestreamActionPtrOutput {
	return o.ApplyT(func(v TopicRuleAction) *TopicRuleTimestreamAction { return v.Timestream }).(TopicRuleTimestreamActionPtrOutput)
}

type TopicRuleActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleAction)(nil)).Elem()
}

func (o TopicRuleActionPtrOutput) ToTopicRuleActionPtrOutput() TopicRuleActionPtrOutput {
	return o
}

func (o TopicRuleActionPtrOutput) ToTopicRuleActionPtrOutputWithContext(ctx context.Context) TopicRuleActionPtrOutput {
	return o
}

func (o TopicRuleActionPtrOutput) Elem() TopicRuleActionOutput {
	return o.ApplyT(func(v *TopicRuleAction) TopicRuleAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleAction
		return ret
	}).(TopicRuleActionOutput)
}

func (o TopicRuleActionPtrOutput) CloudwatchAlarm() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleCloudwatchAlarmAction {
		if v == nil {
			return nil
		}
		return v.CloudwatchAlarm
	}).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) CloudwatchLogs() TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleCloudwatchLogsAction {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(TopicRuleCloudwatchLogsActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) CloudwatchMetric() TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleCloudwatchMetricAction {
		if v == nil {
			return nil
		}
		return v.CloudwatchMetric
	}).(TopicRuleCloudwatchMetricActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) DynamoDB() TopicRuleDynamoDBActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleDynamoDBAction {
		if v == nil {
			return nil
		}
		return v.DynamoDB
	}).(TopicRuleDynamoDBActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) DynamoDBv2() TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleDynamoDBv2Action {
		if v == nil {
			return nil
		}
		return v.DynamoDBv2
	}).(TopicRuleDynamoDBv2ActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Elasticsearch() TopicRuleElasticsearchActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleElasticsearchAction {
		if v == nil {
			return nil
		}
		return v.Elasticsearch
	}).(TopicRuleElasticsearchActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Firehose() TopicRuleFirehoseActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleFirehoseAction {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(TopicRuleFirehoseActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Http() TopicRuleHttpActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleHttpAction {
		if v == nil {
			return nil
		}
		return v.Http
	}).(TopicRuleHttpActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) IotAnalytics() TopicRuleIotAnalyticsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleIotAnalyticsAction {
		if v == nil {
			return nil
		}
		return v.IotAnalytics
	}).(TopicRuleIotAnalyticsActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) IotEvents() TopicRuleIotEventsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleIotEventsAction {
		if v == nil {
			return nil
		}
		return v.IotEvents
	}).(TopicRuleIotEventsActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) IotSiteWise() TopicRuleIotSiteWiseActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleIotSiteWiseAction {
		if v == nil {
			return nil
		}
		return v.IotSiteWise
	}).(TopicRuleIotSiteWiseActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Kafka() TopicRuleKafkaActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleKafkaAction {
		if v == nil {
			return nil
		}
		return v.Kafka
	}).(TopicRuleKafkaActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Kinesis() TopicRuleKinesisActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleKinesisAction {
		if v == nil {
			return nil
		}
		return v.Kinesis
	}).(TopicRuleKinesisActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Lambda() TopicRuleLambdaActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleLambdaAction {
		if v == nil {
			return nil
		}
		return v.Lambda
	}).(TopicRuleLambdaActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) OpenSearch() TopicRuleOpenSearchActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleOpenSearchAction {
		if v == nil {
			return nil
		}
		return v.OpenSearch
	}).(TopicRuleOpenSearchActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Republish() TopicRuleRepublishActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleRepublishAction {
		if v == nil {
			return nil
		}
		return v.Republish
	}).(TopicRuleRepublishActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) S3() TopicRuleS3ActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleS3Action {
		if v == nil {
			return nil
		}
		return v.S3
	}).(TopicRuleS3ActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Sns() TopicRuleSnsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleSnsAction {
		if v == nil {
			return nil
		}
		return v.Sns
	}).(TopicRuleSnsActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Sqs() TopicRuleSqsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleSqsAction {
		if v == nil {
			return nil
		}
		return v.Sqs
	}).(TopicRuleSqsActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) StepFunctions() TopicRuleStepFunctionsActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleStepFunctionsAction {
		if v == nil {
			return nil
		}
		return v.StepFunctions
	}).(TopicRuleStepFunctionsActionPtrOutput)
}

func (o TopicRuleActionPtrOutput) Timestream() TopicRuleTimestreamActionPtrOutput {
	return o.ApplyT(func(v *TopicRuleAction) *TopicRuleTimestreamAction {
		if v == nil {
			return nil
		}
		return v.Timestream
	}).(TopicRuleTimestreamActionPtrOutput)
}

type TopicRuleActionArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAction)(nil)).Elem()
}

func (o TopicRuleActionArrayOutput) ToTopicRuleActionArrayOutput() TopicRuleActionArrayOutput {
	return o
}

func (o TopicRuleActionArrayOutput) ToTopicRuleActionArrayOutputWithContext(ctx context.Context) TopicRuleActionArrayOutput {
	return o
}

func (o TopicRuleActionArrayOutput) Index(i pulumi.IntInput) TopicRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleAction {
		return vs[0].([]TopicRuleAction)[vs[1].(int)]
	}).(TopicRuleActionOutput)
}

type TopicRuleAssetPropertyTimestamp struct {
	OffsetInNanos *string `pulumi:"offsetInNanos"`
	TimeInSeconds string  `pulumi:"timeInSeconds"`
}

// TopicRuleAssetPropertyTimestampInput is an input type that accepts TopicRuleAssetPropertyTimestampArgs and TopicRuleAssetPropertyTimestampOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyTimestampInput` via:
//
//          TopicRuleAssetPropertyTimestampArgs{...}
type TopicRuleAssetPropertyTimestampInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyTimestampOutput() TopicRuleAssetPropertyTimestampOutput
	ToTopicRuleAssetPropertyTimestampOutputWithContext(context.Context) TopicRuleAssetPropertyTimestampOutput
}

type TopicRuleAssetPropertyTimestampArgs struct {
	OffsetInNanos pulumi.StringPtrInput `pulumi:"offsetInNanos"`
	TimeInSeconds pulumi.StringInput    `pulumi:"timeInSeconds"`
}

func (TopicRuleAssetPropertyTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyTimestamp)(nil)).Elem()
}

func (i TopicRuleAssetPropertyTimestampArgs) ToTopicRuleAssetPropertyTimestampOutput() TopicRuleAssetPropertyTimestampOutput {
	return i.ToTopicRuleAssetPropertyTimestampOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyTimestampArgs) ToTopicRuleAssetPropertyTimestampOutputWithContext(ctx context.Context) TopicRuleAssetPropertyTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyTimestampOutput)
}

type TopicRuleAssetPropertyTimestampOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyTimestamp)(nil)).Elem()
}

func (o TopicRuleAssetPropertyTimestampOutput) ToTopicRuleAssetPropertyTimestampOutput() TopicRuleAssetPropertyTimestampOutput {
	return o
}

func (o TopicRuleAssetPropertyTimestampOutput) ToTopicRuleAssetPropertyTimestampOutputWithContext(ctx context.Context) TopicRuleAssetPropertyTimestampOutput {
	return o
}

func (o TopicRuleAssetPropertyTimestampOutput) OffsetInNanos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyTimestamp) *string { return v.OffsetInNanos }).(pulumi.StringPtrOutput)
}

func (o TopicRuleAssetPropertyTimestampOutput) TimeInSeconds() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyTimestamp) string { return v.TimeInSeconds }).(pulumi.StringOutput)
}

type TopicRuleAssetPropertyValue struct {
	Quality   *string                         `pulumi:"quality"`
	Timestamp TopicRuleAssetPropertyTimestamp `pulumi:"timestamp"`
	Value     TopicRuleAssetPropertyVariant   `pulumi:"value"`
}

// TopicRuleAssetPropertyValueInput is an input type that accepts TopicRuleAssetPropertyValueArgs and TopicRuleAssetPropertyValueOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyValueInput` via:
//
//          TopicRuleAssetPropertyValueArgs{...}
type TopicRuleAssetPropertyValueInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyValueOutput() TopicRuleAssetPropertyValueOutput
	ToTopicRuleAssetPropertyValueOutputWithContext(context.Context) TopicRuleAssetPropertyValueOutput
}

type TopicRuleAssetPropertyValueArgs struct {
	Quality   pulumi.StringPtrInput                `pulumi:"quality"`
	Timestamp TopicRuleAssetPropertyTimestampInput `pulumi:"timestamp"`
	Value     TopicRuleAssetPropertyVariantInput   `pulumi:"value"`
}

func (TopicRuleAssetPropertyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (i TopicRuleAssetPropertyValueArgs) ToTopicRuleAssetPropertyValueOutput() TopicRuleAssetPropertyValueOutput {
	return i.ToTopicRuleAssetPropertyValueOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyValueArgs) ToTopicRuleAssetPropertyValueOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyValueOutput)
}

// TopicRuleAssetPropertyValueArrayInput is an input type that accepts TopicRuleAssetPropertyValueArray and TopicRuleAssetPropertyValueArrayOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyValueArrayInput` via:
//
//          TopicRuleAssetPropertyValueArray{ TopicRuleAssetPropertyValueArgs{...} }
type TopicRuleAssetPropertyValueArrayInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyValueArrayOutput() TopicRuleAssetPropertyValueArrayOutput
	ToTopicRuleAssetPropertyValueArrayOutputWithContext(context.Context) TopicRuleAssetPropertyValueArrayOutput
}

type TopicRuleAssetPropertyValueArray []TopicRuleAssetPropertyValueInput

func (TopicRuleAssetPropertyValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (i TopicRuleAssetPropertyValueArray) ToTopicRuleAssetPropertyValueArrayOutput() TopicRuleAssetPropertyValueArrayOutput {
	return i.ToTopicRuleAssetPropertyValueArrayOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyValueArray) ToTopicRuleAssetPropertyValueArrayOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyValueArrayOutput)
}

type TopicRuleAssetPropertyValueOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (o TopicRuleAssetPropertyValueOutput) ToTopicRuleAssetPropertyValueOutput() TopicRuleAssetPropertyValueOutput {
	return o
}

func (o TopicRuleAssetPropertyValueOutput) ToTopicRuleAssetPropertyValueOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueOutput {
	return o
}

func (o TopicRuleAssetPropertyValueOutput) Quality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyValue) *string { return v.Quality }).(pulumi.StringPtrOutput)
}

func (o TopicRuleAssetPropertyValueOutput) Timestamp() TopicRuleAssetPropertyTimestampOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyValue) TopicRuleAssetPropertyTimestamp { return v.Timestamp }).(TopicRuleAssetPropertyTimestampOutput)
}

func (o TopicRuleAssetPropertyValueOutput) Value() TopicRuleAssetPropertyVariantOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyValue) TopicRuleAssetPropertyVariant { return v.Value }).(TopicRuleAssetPropertyVariantOutput)
}

type TopicRuleAssetPropertyValueArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleAssetPropertyValue)(nil)).Elem()
}

func (o TopicRuleAssetPropertyValueArrayOutput) ToTopicRuleAssetPropertyValueArrayOutput() TopicRuleAssetPropertyValueArrayOutput {
	return o
}

func (o TopicRuleAssetPropertyValueArrayOutput) ToTopicRuleAssetPropertyValueArrayOutputWithContext(ctx context.Context) TopicRuleAssetPropertyValueArrayOutput {
	return o
}

func (o TopicRuleAssetPropertyValueArrayOutput) Index(i pulumi.IntInput) TopicRuleAssetPropertyValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleAssetPropertyValue {
		return vs[0].([]TopicRuleAssetPropertyValue)[vs[1].(int)]
	}).(TopicRuleAssetPropertyValueOutput)
}

type TopicRuleAssetPropertyVariant struct {
	BooleanValue *string `pulumi:"booleanValue"`
	DoubleValue  *string `pulumi:"doubleValue"`
	IntegerValue *string `pulumi:"integerValue"`
	StringValue  *string `pulumi:"stringValue"`
}

// TopicRuleAssetPropertyVariantInput is an input type that accepts TopicRuleAssetPropertyVariantArgs and TopicRuleAssetPropertyVariantOutput values.
// You can construct a concrete instance of `TopicRuleAssetPropertyVariantInput` via:
//
//          TopicRuleAssetPropertyVariantArgs{...}
type TopicRuleAssetPropertyVariantInput interface {
	pulumi.Input

	ToTopicRuleAssetPropertyVariantOutput() TopicRuleAssetPropertyVariantOutput
	ToTopicRuleAssetPropertyVariantOutputWithContext(context.Context) TopicRuleAssetPropertyVariantOutput
}

type TopicRuleAssetPropertyVariantArgs struct {
	BooleanValue pulumi.StringPtrInput `pulumi:"booleanValue"`
	DoubleValue  pulumi.StringPtrInput `pulumi:"doubleValue"`
	IntegerValue pulumi.StringPtrInput `pulumi:"integerValue"`
	StringValue  pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (TopicRuleAssetPropertyVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyVariant)(nil)).Elem()
}

func (i TopicRuleAssetPropertyVariantArgs) ToTopicRuleAssetPropertyVariantOutput() TopicRuleAssetPropertyVariantOutput {
	return i.ToTopicRuleAssetPropertyVariantOutputWithContext(context.Background())
}

func (i TopicRuleAssetPropertyVariantArgs) ToTopicRuleAssetPropertyVariantOutputWithContext(ctx context.Context) TopicRuleAssetPropertyVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleAssetPropertyVariantOutput)
}

type TopicRuleAssetPropertyVariantOutput struct{ *pulumi.OutputState }

func (TopicRuleAssetPropertyVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleAssetPropertyVariant)(nil)).Elem()
}

func (o TopicRuleAssetPropertyVariantOutput) ToTopicRuleAssetPropertyVariantOutput() TopicRuleAssetPropertyVariantOutput {
	return o
}

func (o TopicRuleAssetPropertyVariantOutput) ToTopicRuleAssetPropertyVariantOutputWithContext(ctx context.Context) TopicRuleAssetPropertyVariantOutput {
	return o
}

func (o TopicRuleAssetPropertyVariantOutput) BooleanValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.BooleanValue }).(pulumi.StringPtrOutput)
}

func (o TopicRuleAssetPropertyVariantOutput) DoubleValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.DoubleValue }).(pulumi.StringPtrOutput)
}

func (o TopicRuleAssetPropertyVariantOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.IntegerValue }).(pulumi.StringPtrOutput)
}

func (o TopicRuleAssetPropertyVariantOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleAssetPropertyVariant) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchAlarmAction struct {
	AlarmName   string `pulumi:"alarmName"`
	RoleArn     string `pulumi:"roleArn"`
	StateReason string `pulumi:"stateReason"`
	StateValue  string `pulumi:"stateValue"`
}

// TopicRuleCloudwatchAlarmActionInput is an input type that accepts TopicRuleCloudwatchAlarmActionArgs and TopicRuleCloudwatchAlarmActionOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchAlarmActionInput` via:
//
//          TopicRuleCloudwatchAlarmActionArgs{...}
type TopicRuleCloudwatchAlarmActionInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchAlarmActionOutput() TopicRuleCloudwatchAlarmActionOutput
	ToTopicRuleCloudwatchAlarmActionOutputWithContext(context.Context) TopicRuleCloudwatchAlarmActionOutput
}

type TopicRuleCloudwatchAlarmActionArgs struct {
	AlarmName   pulumi.StringInput `pulumi:"alarmName"`
	RoleArn     pulumi.StringInput `pulumi:"roleArn"`
	StateReason pulumi.StringInput `pulumi:"stateReason"`
	StateValue  pulumi.StringInput `pulumi:"stateValue"`
}

func (TopicRuleCloudwatchAlarmActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionOutput() TopicRuleCloudwatchAlarmActionOutput {
	return i.ToTopicRuleCloudwatchAlarmActionOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmActionOutput)
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return i.ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchAlarmActionArgs) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmActionOutput).ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchAlarmActionPtrInput is an input type that accepts TopicRuleCloudwatchAlarmActionArgs, TopicRuleCloudwatchAlarmActionPtr and TopicRuleCloudwatchAlarmActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchAlarmActionPtrInput` via:
//
//          TopicRuleCloudwatchAlarmActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleCloudwatchAlarmActionPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput
	ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Context) TopicRuleCloudwatchAlarmActionPtrOutput
}

type topicRuleCloudwatchAlarmActionPtrType TopicRuleCloudwatchAlarmActionArgs

func TopicRuleCloudwatchAlarmActionPtr(v *TopicRuleCloudwatchAlarmActionArgs) TopicRuleCloudwatchAlarmActionPtrInput {
	return (*topicRuleCloudwatchAlarmActionPtrType)(v)
}

func (*topicRuleCloudwatchAlarmActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (i *topicRuleCloudwatchAlarmActionPtrType) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return i.ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchAlarmActionPtrType) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

type TopicRuleCloudwatchAlarmActionOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchAlarmActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionOutput() TopicRuleCloudwatchAlarmActionOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchAlarmActionOutput) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleCloudwatchAlarmAction) *TopicRuleCloudwatchAlarmAction {
		return &v
	}).(TopicRuleCloudwatchAlarmActionPtrOutput)
}

func (o TopicRuleCloudwatchAlarmActionOutput) AlarmName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.AlarmName }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchAlarmActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchAlarmActionOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.StateReason }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchAlarmActionOutput) StateValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarmAction) string { return v.StateValue }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchAlarmActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchAlarmActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchAlarmAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) ToTopicRuleCloudwatchAlarmActionPtrOutput() TopicRuleCloudwatchAlarmActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) ToTopicRuleCloudwatchAlarmActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) Elem() TopicRuleCloudwatchAlarmActionOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) TopicRuleCloudwatchAlarmAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleCloudwatchAlarmAction
		return ret
	}).(TopicRuleCloudwatchAlarmActionOutput)
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) AlarmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.AlarmName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) StateReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.StateReason
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchAlarmActionPtrOutput) StateValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarmAction) *string {
		if v == nil {
			return nil
		}
		return &v.StateValue
	}).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchLogsAction struct {
	LogGroupName string `pulumi:"logGroupName"`
	RoleArn      string `pulumi:"roleArn"`
}

// TopicRuleCloudwatchLogsActionInput is an input type that accepts TopicRuleCloudwatchLogsActionArgs and TopicRuleCloudwatchLogsActionOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchLogsActionInput` via:
//
//          TopicRuleCloudwatchLogsActionArgs{...}
type TopicRuleCloudwatchLogsActionInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchLogsActionOutput() TopicRuleCloudwatchLogsActionOutput
	ToTopicRuleCloudwatchLogsActionOutputWithContext(context.Context) TopicRuleCloudwatchLogsActionOutput
}

type TopicRuleCloudwatchLogsActionArgs struct {
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	RoleArn      pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleCloudwatchLogsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionOutput() TopicRuleCloudwatchLogsActionOutput {
	return i.ToTopicRuleCloudwatchLogsActionOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchLogsActionOutput)
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return i.ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchLogsActionArgs) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchLogsActionOutput).ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchLogsActionPtrInput is an input type that accepts TopicRuleCloudwatchLogsActionArgs, TopicRuleCloudwatchLogsActionPtr and TopicRuleCloudwatchLogsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchLogsActionPtrInput` via:
//
//          TopicRuleCloudwatchLogsActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleCloudwatchLogsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput
	ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Context) TopicRuleCloudwatchLogsActionPtrOutput
}

type topicRuleCloudwatchLogsActionPtrType TopicRuleCloudwatchLogsActionArgs

func TopicRuleCloudwatchLogsActionPtr(v *TopicRuleCloudwatchLogsActionArgs) TopicRuleCloudwatchLogsActionPtrInput {
	return (*topicRuleCloudwatchLogsActionPtrType)(v)
}

func (*topicRuleCloudwatchLogsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (i *topicRuleCloudwatchLogsActionPtrType) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return i.ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchLogsActionPtrType) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchLogsActionPtrOutput)
}

type TopicRuleCloudwatchLogsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchLogsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionOutput() TopicRuleCloudwatchLogsActionOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchLogsActionOutput) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleCloudwatchLogsAction) *TopicRuleCloudwatchLogsAction {
		return &v
	}).(TopicRuleCloudwatchLogsActionPtrOutput)
}

func (o TopicRuleCloudwatchLogsActionOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchLogsAction) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchLogsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchLogsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchLogsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchLogsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchLogsAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) ToTopicRuleCloudwatchLogsActionPtrOutput() TopicRuleCloudwatchLogsActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) ToTopicRuleCloudwatchLogsActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchLogsActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) Elem() TopicRuleCloudwatchLogsActionOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) TopicRuleCloudwatchLogsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleCloudwatchLogsAction
		return ret
	}).(TopicRuleCloudwatchLogsActionOutput)
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchLogsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchLogsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchMetricAction struct {
	MetricName      string  `pulumi:"metricName"`
	MetricNamespace string  `pulumi:"metricNamespace"`
	MetricTimestamp *string `pulumi:"metricTimestamp"`
	MetricUnit      string  `pulumi:"metricUnit"`
	MetricValue     string  `pulumi:"metricValue"`
	RoleArn         string  `pulumi:"roleArn"`
}

// TopicRuleCloudwatchMetricActionInput is an input type that accepts TopicRuleCloudwatchMetricActionArgs and TopicRuleCloudwatchMetricActionOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchMetricActionInput` via:
//
//          TopicRuleCloudwatchMetricActionArgs{...}
type TopicRuleCloudwatchMetricActionInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchMetricActionOutput() TopicRuleCloudwatchMetricActionOutput
	ToTopicRuleCloudwatchMetricActionOutputWithContext(context.Context) TopicRuleCloudwatchMetricActionOutput
}

type TopicRuleCloudwatchMetricActionArgs struct {
	MetricName      pulumi.StringInput    `pulumi:"metricName"`
	MetricNamespace pulumi.StringInput    `pulumi:"metricNamespace"`
	MetricTimestamp pulumi.StringPtrInput `pulumi:"metricTimestamp"`
	MetricUnit      pulumi.StringInput    `pulumi:"metricUnit"`
	MetricValue     pulumi.StringInput    `pulumi:"metricValue"`
	RoleArn         pulumi.StringInput    `pulumi:"roleArn"`
}

func (TopicRuleCloudwatchMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionOutput() TopicRuleCloudwatchMetricActionOutput {
	return i.ToTopicRuleCloudwatchMetricActionOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricActionOutput)
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return i.ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchMetricActionArgs) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricActionOutput).ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchMetricActionPtrInput is an input type that accepts TopicRuleCloudwatchMetricActionArgs, TopicRuleCloudwatchMetricActionPtr and TopicRuleCloudwatchMetricActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchMetricActionPtrInput` via:
//
//          TopicRuleCloudwatchMetricActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleCloudwatchMetricActionPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput
	ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Context) TopicRuleCloudwatchMetricActionPtrOutput
}

type topicRuleCloudwatchMetricActionPtrType TopicRuleCloudwatchMetricActionArgs

func TopicRuleCloudwatchMetricActionPtr(v *TopicRuleCloudwatchMetricActionArgs) TopicRuleCloudwatchMetricActionPtrInput {
	return (*topicRuleCloudwatchMetricActionPtrType)(v)
}

func (*topicRuleCloudwatchMetricActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (i *topicRuleCloudwatchMetricActionPtrType) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return i.ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchMetricActionPtrType) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricActionPtrOutput)
}

type TopicRuleCloudwatchMetricActionOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionOutput() TopicRuleCloudwatchMetricActionOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchMetricActionOutput) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleCloudwatchMetricAction) *TopicRuleCloudwatchMetricAction {
		return &v
	}).(TopicRuleCloudwatchMetricActionPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchMetricActionOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchMetricActionOutput) MetricTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) *string { return v.MetricTimestamp }).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricUnit }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchMetricActionOutput) MetricValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.MetricValue }).(pulumi.StringOutput)
}

func (o TopicRuleCloudwatchMetricActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetricAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchMetricActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchMetricActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchMetricAction)(nil)).Elem()
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) ToTopicRuleCloudwatchMetricActionPtrOutput() TopicRuleCloudwatchMetricActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) ToTopicRuleCloudwatchMetricActionPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricActionPtrOutput {
	return o
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) Elem() TopicRuleCloudwatchMetricActionOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) TopicRuleCloudwatchMetricAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleCloudwatchMetricAction
		return ret
	}).(TopicRuleCloudwatchMetricActionOutput)
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricNamespace
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return v.MetricTimestamp
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricUnit
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) MetricValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.MetricValue
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleCloudwatchMetricActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetricAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationHttpUrlDestinationSummary struct {
	ConfirmationUrl *string `pulumi:"confirmationUrl"`
}

// TopicRuleDestinationHttpUrlDestinationSummaryInput is an input type that accepts TopicRuleDestinationHttpUrlDestinationSummaryArgs and TopicRuleDestinationHttpUrlDestinationSummaryOutput values.
// You can construct a concrete instance of `TopicRuleDestinationHttpUrlDestinationSummaryInput` via:
//
//          TopicRuleDestinationHttpUrlDestinationSummaryArgs{...}
type TopicRuleDestinationHttpUrlDestinationSummaryInput interface {
	pulumi.Input

	ToTopicRuleDestinationHttpUrlDestinationSummaryOutput() TopicRuleDestinationHttpUrlDestinationSummaryOutput
	ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(context.Context) TopicRuleDestinationHttpUrlDestinationSummaryOutput
}

type TopicRuleDestinationHttpUrlDestinationSummaryArgs struct {
	ConfirmationUrl pulumi.StringPtrInput `pulumi:"confirmationUrl"`
}

func (TopicRuleDestinationHttpUrlDestinationSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryOutput() TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return i.ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(context.Background())
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationHttpUrlDestinationSummaryOutput)
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return i.ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Background())
}

func (i TopicRuleDestinationHttpUrlDestinationSummaryArgs) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationHttpUrlDestinationSummaryOutput).ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx)
}

// TopicRuleDestinationHttpUrlDestinationSummaryPtrInput is an input type that accepts TopicRuleDestinationHttpUrlDestinationSummaryArgs, TopicRuleDestinationHttpUrlDestinationSummaryPtr and TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput values.
// You can construct a concrete instance of `TopicRuleDestinationHttpUrlDestinationSummaryPtrInput` via:
//
//          TopicRuleDestinationHttpUrlDestinationSummaryArgs{...}
//
//  or:
//
//          nil
type TopicRuleDestinationHttpUrlDestinationSummaryPtrInput interface {
	pulumi.Input

	ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput
	ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput
}

type topicRuleDestinationHttpUrlDestinationSummaryPtrType TopicRuleDestinationHttpUrlDestinationSummaryArgs

func TopicRuleDestinationHttpUrlDestinationSummaryPtr(v *TopicRuleDestinationHttpUrlDestinationSummaryArgs) TopicRuleDestinationHttpUrlDestinationSummaryPtrInput {
	return (*topicRuleDestinationHttpUrlDestinationSummaryPtrType)(v)
}

func (*topicRuleDestinationHttpUrlDestinationSummaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (i *topicRuleDestinationHttpUrlDestinationSummaryPtrType) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return i.ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Background())
}

func (i *topicRuleDestinationHttpUrlDestinationSummaryPtrType) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput)
}

type TopicRuleDestinationHttpUrlDestinationSummaryOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationHttpUrlDestinationSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryOutput() TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o.ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(context.Background())
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDestinationHttpUrlDestinationSummary) *TopicRuleDestinationHttpUrlDestinationSummary {
		return &v
	}).(TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput)
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDestinationHttpUrlDestinationSummary) *string { return v.ConfirmationUrl }).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationHttpUrlDestinationSummary)(nil)).Elem()
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutput() TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ToTopicRuleDestinationHttpUrlDestinationSummaryPtrOutputWithContext(ctx context.Context) TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput {
	return o
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) Elem() TopicRuleDestinationHttpUrlDestinationSummaryOutput {
	return o.ApplyT(func(v *TopicRuleDestinationHttpUrlDestinationSummary) TopicRuleDestinationHttpUrlDestinationSummary {
		if v != nil {
			return *v
		}
		var ret TopicRuleDestinationHttpUrlDestinationSummary
		return ret
	}).(TopicRuleDestinationHttpUrlDestinationSummaryOutput)
}

func (o TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDestinationHttpUrlDestinationSummary) *string {
		if v == nil {
			return nil
		}
		return v.ConfirmationUrl
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationVpcDestinationProperties struct {
	RoleArn        *string  `pulumi:"roleArn"`
	SecurityGroups []string `pulumi:"securityGroups"`
	SubnetIds      []string `pulumi:"subnetIds"`
	VpcId          *string  `pulumi:"vpcId"`
}

// TopicRuleDestinationVpcDestinationPropertiesInput is an input type that accepts TopicRuleDestinationVpcDestinationPropertiesArgs and TopicRuleDestinationVpcDestinationPropertiesOutput values.
// You can construct a concrete instance of `TopicRuleDestinationVpcDestinationPropertiesInput` via:
//
//          TopicRuleDestinationVpcDestinationPropertiesArgs{...}
type TopicRuleDestinationVpcDestinationPropertiesInput interface {
	pulumi.Input

	ToTopicRuleDestinationVpcDestinationPropertiesOutput() TopicRuleDestinationVpcDestinationPropertiesOutput
	ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(context.Context) TopicRuleDestinationVpcDestinationPropertiesOutput
}

type TopicRuleDestinationVpcDestinationPropertiesArgs struct {
	RoleArn        pulumi.StringPtrInput   `pulumi:"roleArn"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	SubnetIds      pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId          pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (TopicRuleDestinationVpcDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesOutput() TopicRuleDestinationVpcDestinationPropertiesOutput {
	return i.ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(context.Background())
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationVpcDestinationPropertiesOutput)
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return i.ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i TopicRuleDestinationVpcDestinationPropertiesArgs) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationVpcDestinationPropertiesOutput).ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx)
}

// TopicRuleDestinationVpcDestinationPropertiesPtrInput is an input type that accepts TopicRuleDestinationVpcDestinationPropertiesArgs, TopicRuleDestinationVpcDestinationPropertiesPtr and TopicRuleDestinationVpcDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `TopicRuleDestinationVpcDestinationPropertiesPtrInput` via:
//
//          TopicRuleDestinationVpcDestinationPropertiesArgs{...}
//
//  or:
//
//          nil
type TopicRuleDestinationVpcDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput
	ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput
}

type topicRuleDestinationVpcDestinationPropertiesPtrType TopicRuleDestinationVpcDestinationPropertiesArgs

func TopicRuleDestinationVpcDestinationPropertiesPtr(v *TopicRuleDestinationVpcDestinationPropertiesArgs) TopicRuleDestinationVpcDestinationPropertiesPtrInput {
	return (*topicRuleDestinationVpcDestinationPropertiesPtrType)(v)
}

func (*topicRuleDestinationVpcDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (i *topicRuleDestinationVpcDestinationPropertiesPtrType) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return i.ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *topicRuleDestinationVpcDestinationPropertiesPtrType) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDestinationVpcDestinationPropertiesPtrOutput)
}

type TopicRuleDestinationVpcDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationVpcDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesOutput() TopicRuleDestinationVpcDestinationPropertiesOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o.ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDestinationVpcDestinationProperties) *TopicRuleDestinationVpcDestinationProperties {
		return &v
	}).(TopicRuleDestinationVpcDestinationPropertiesPtrOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDestinationVpcDestinationProperties) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type TopicRuleDestinationVpcDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDestinationVpcDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDestinationVpcDestinationProperties)(nil)).Elem()
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutput() TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) ToTopicRuleDestinationVpcDestinationPropertiesPtrOutputWithContext(ctx context.Context) TopicRuleDestinationVpcDestinationPropertiesPtrOutput {
	return o
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) Elem() TopicRuleDestinationVpcDestinationPropertiesOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) TopicRuleDestinationVpcDestinationProperties {
		if v != nil {
			return *v
		}
		var ret TopicRuleDestinationVpcDestinationProperties
		return ret
	}).(TopicRuleDestinationVpcDestinationPropertiesOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o TopicRuleDestinationVpcDestinationPropertiesPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDestinationVpcDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDynamoDBAction struct {
	HashKeyField  string  `pulumi:"hashKeyField"`
	HashKeyType   *string `pulumi:"hashKeyType"`
	HashKeyValue  string  `pulumi:"hashKeyValue"`
	PayloadField  *string `pulumi:"payloadField"`
	RangeKeyField *string `pulumi:"rangeKeyField"`
	RangeKeyType  *string `pulumi:"rangeKeyType"`
	RangeKeyValue *string `pulumi:"rangeKeyValue"`
	RoleArn       string  `pulumi:"roleArn"`
	TableName     string  `pulumi:"tableName"`
}

// TopicRuleDynamoDBActionInput is an input type that accepts TopicRuleDynamoDBActionArgs and TopicRuleDynamoDBActionOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDBActionInput` via:
//
//          TopicRuleDynamoDBActionArgs{...}
type TopicRuleDynamoDBActionInput interface {
	pulumi.Input

	ToTopicRuleDynamoDBActionOutput() TopicRuleDynamoDBActionOutput
	ToTopicRuleDynamoDBActionOutputWithContext(context.Context) TopicRuleDynamoDBActionOutput
}

type TopicRuleDynamoDBActionArgs struct {
	HashKeyField  pulumi.StringInput    `pulumi:"hashKeyField"`
	HashKeyType   pulumi.StringPtrInput `pulumi:"hashKeyType"`
	HashKeyValue  pulumi.StringInput    `pulumi:"hashKeyValue"`
	PayloadField  pulumi.StringPtrInput `pulumi:"payloadField"`
	RangeKeyField pulumi.StringPtrInput `pulumi:"rangeKeyField"`
	RangeKeyType  pulumi.StringPtrInput `pulumi:"rangeKeyType"`
	RangeKeyValue pulumi.StringPtrInput `pulumi:"rangeKeyValue"`
	RoleArn       pulumi.StringInput    `pulumi:"roleArn"`
	TableName     pulumi.StringInput    `pulumi:"tableName"`
}

func (TopicRuleDynamoDBActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDBAction)(nil)).Elem()
}

func (i TopicRuleDynamoDBActionArgs) ToTopicRuleDynamoDBActionOutput() TopicRuleDynamoDBActionOutput {
	return i.ToTopicRuleDynamoDBActionOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDBActionArgs) ToTopicRuleDynamoDBActionOutputWithContext(ctx context.Context) TopicRuleDynamoDBActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBActionOutput)
}

func (i TopicRuleDynamoDBActionArgs) ToTopicRuleDynamoDBActionPtrOutput() TopicRuleDynamoDBActionPtrOutput {
	return i.ToTopicRuleDynamoDBActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDBActionArgs) ToTopicRuleDynamoDBActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBActionOutput).ToTopicRuleDynamoDBActionPtrOutputWithContext(ctx)
}

// TopicRuleDynamoDBActionPtrInput is an input type that accepts TopicRuleDynamoDBActionArgs, TopicRuleDynamoDBActionPtr and TopicRuleDynamoDBActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDBActionPtrInput` via:
//
//          TopicRuleDynamoDBActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleDynamoDBActionPtrInput interface {
	pulumi.Input

	ToTopicRuleDynamoDBActionPtrOutput() TopicRuleDynamoDBActionPtrOutput
	ToTopicRuleDynamoDBActionPtrOutputWithContext(context.Context) TopicRuleDynamoDBActionPtrOutput
}

type topicRuleDynamoDBActionPtrType TopicRuleDynamoDBActionArgs

func TopicRuleDynamoDBActionPtr(v *TopicRuleDynamoDBActionArgs) TopicRuleDynamoDBActionPtrInput {
	return (*topicRuleDynamoDBActionPtrType)(v)
}

func (*topicRuleDynamoDBActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDBAction)(nil)).Elem()
}

func (i *topicRuleDynamoDBActionPtrType) ToTopicRuleDynamoDBActionPtrOutput() TopicRuleDynamoDBActionPtrOutput {
	return i.ToTopicRuleDynamoDBActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleDynamoDBActionPtrType) ToTopicRuleDynamoDBActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBActionPtrOutput)
}

type TopicRuleDynamoDBActionOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDBActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDBAction)(nil)).Elem()
}

func (o TopicRuleDynamoDBActionOutput) ToTopicRuleDynamoDBActionOutput() TopicRuleDynamoDBActionOutput {
	return o
}

func (o TopicRuleDynamoDBActionOutput) ToTopicRuleDynamoDBActionOutputWithContext(ctx context.Context) TopicRuleDynamoDBActionOutput {
	return o
}

func (o TopicRuleDynamoDBActionOutput) ToTopicRuleDynamoDBActionPtrOutput() TopicRuleDynamoDBActionPtrOutput {
	return o.ToTopicRuleDynamoDBActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleDynamoDBActionOutput) ToTopicRuleDynamoDBActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDynamoDBAction) *TopicRuleDynamoDBAction {
		return &v
	}).(TopicRuleDynamoDBActionPtrOutput)
}

func (o TopicRuleDynamoDBActionOutput) HashKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) string { return v.HashKeyField }).(pulumi.StringOutput)
}

func (o TopicRuleDynamoDBActionOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) *string { return v.HashKeyType }).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionOutput) HashKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) string { return v.HashKeyValue }).(pulumi.StringOutput)
}

func (o TopicRuleDynamoDBActionOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) *string { return v.PayloadField }).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) *string { return v.RangeKeyField }).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) *string { return v.RangeKeyType }).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) *string { return v.RangeKeyValue }).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleDynamoDBActionOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBAction) string { return v.TableName }).(pulumi.StringOutput)
}

type TopicRuleDynamoDBActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDBActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDBAction)(nil)).Elem()
}

func (o TopicRuleDynamoDBActionPtrOutput) ToTopicRuleDynamoDBActionPtrOutput() TopicRuleDynamoDBActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDBActionPtrOutput) ToTopicRuleDynamoDBActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDBActionPtrOutput) Elem() TopicRuleDynamoDBActionOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) TopicRuleDynamoDBAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleDynamoDBAction
		return ret
	}).(TopicRuleDynamoDBActionOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) HashKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyField
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return v.HashKeyType
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) HashKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyValue
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return v.PayloadField
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyField
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyType
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyValue
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleDynamoDBActionPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBAction) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDynamoDBv2Action struct {
	PutItem *TopicRulePutItemInput `pulumi:"putItem"`
	RoleArn *string                `pulumi:"roleArn"`
}

// TopicRuleDynamoDBv2ActionInput is an input type that accepts TopicRuleDynamoDBv2ActionArgs and TopicRuleDynamoDBv2ActionOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDBv2ActionInput` via:
//
//          TopicRuleDynamoDBv2ActionArgs{...}
type TopicRuleDynamoDBv2ActionInput interface {
	pulumi.Input

	ToTopicRuleDynamoDBv2ActionOutput() TopicRuleDynamoDBv2ActionOutput
	ToTopicRuleDynamoDBv2ActionOutputWithContext(context.Context) TopicRuleDynamoDBv2ActionOutput
}

type TopicRuleDynamoDBv2ActionArgs struct {
	PutItem TopicRulePutItemInputPtrInput `pulumi:"putItem"`
	RoleArn pulumi.StringPtrInput         `pulumi:"roleArn"`
}

func (TopicRuleDynamoDBv2ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionOutput() TopicRuleDynamoDBv2ActionOutput {
	return i.ToTopicRuleDynamoDBv2ActionOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBv2ActionOutput)
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return i.ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleDynamoDBv2ActionArgs) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBv2ActionOutput).ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx)
}

// TopicRuleDynamoDBv2ActionPtrInput is an input type that accepts TopicRuleDynamoDBv2ActionArgs, TopicRuleDynamoDBv2ActionPtr and TopicRuleDynamoDBv2ActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleDynamoDBv2ActionPtrInput` via:
//
//          TopicRuleDynamoDBv2ActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleDynamoDBv2ActionPtrInput interface {
	pulumi.Input

	ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput
	ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Context) TopicRuleDynamoDBv2ActionPtrOutput
}

type topicRuleDynamoDBv2ActionPtrType TopicRuleDynamoDBv2ActionArgs

func TopicRuleDynamoDBv2ActionPtr(v *TopicRuleDynamoDBv2ActionArgs) TopicRuleDynamoDBv2ActionPtrInput {
	return (*topicRuleDynamoDBv2ActionPtrType)(v)
}

func (*topicRuleDynamoDBv2ActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (i *topicRuleDynamoDBv2ActionPtrType) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return i.ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleDynamoDBv2ActionPtrType) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamoDBv2ActionPtrOutput)
}

type TopicRuleDynamoDBv2ActionOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDBv2ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionOutput() TopicRuleDynamoDBv2ActionOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleDynamoDBv2ActionOutput) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleDynamoDBv2Action) *TopicRuleDynamoDBv2Action {
		return &v
	}).(TopicRuleDynamoDBv2ActionPtrOutput)
}

func (o TopicRuleDynamoDBv2ActionOutput) PutItem() TopicRulePutItemInputPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBv2Action) *TopicRulePutItemInput { return v.PutItem }).(TopicRulePutItemInputPtrOutput)
}

func (o TopicRuleDynamoDBv2ActionOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamoDBv2Action) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type TopicRuleDynamoDBv2ActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamoDBv2ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamoDBv2Action)(nil)).Elem()
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) ToTopicRuleDynamoDBv2ActionPtrOutput() TopicRuleDynamoDBv2ActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) ToTopicRuleDynamoDBv2ActionPtrOutputWithContext(ctx context.Context) TopicRuleDynamoDBv2ActionPtrOutput {
	return o
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) Elem() TopicRuleDynamoDBv2ActionOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBv2Action) TopicRuleDynamoDBv2Action {
		if v != nil {
			return *v
		}
		var ret TopicRuleDynamoDBv2Action
		return ret
	}).(TopicRuleDynamoDBv2ActionOutput)
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) PutItem() TopicRulePutItemInputPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBv2Action) *TopicRulePutItemInput {
		if v == nil {
			return nil
		}
		return v.PutItem
	}).(TopicRulePutItemInputPtrOutput)
}

func (o TopicRuleDynamoDBv2ActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamoDBv2Action) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleElasticsearchAction struct {
	Endpoint string `pulumi:"endpoint"`
	Id       string `pulumi:"id"`
	Index    string `pulumi:"index"`
	RoleArn  string `pulumi:"roleArn"`
	Type     string `pulumi:"type"`
}

// TopicRuleElasticsearchActionInput is an input type that accepts TopicRuleElasticsearchActionArgs and TopicRuleElasticsearchActionOutput values.
// You can construct a concrete instance of `TopicRuleElasticsearchActionInput` via:
//
//          TopicRuleElasticsearchActionArgs{...}
type TopicRuleElasticsearchActionInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchActionOutput() TopicRuleElasticsearchActionOutput
	ToTopicRuleElasticsearchActionOutputWithContext(context.Context) TopicRuleElasticsearchActionOutput
}

type TopicRuleElasticsearchActionArgs struct {
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	Id       pulumi.StringInput `pulumi:"id"`
	Index    pulumi.StringInput `pulumi:"index"`
	RoleArn  pulumi.StringInput `pulumi:"roleArn"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (TopicRuleElasticsearchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearchAction)(nil)).Elem()
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionOutput() TopicRuleElasticsearchActionOutput {
	return i.ToTopicRuleElasticsearchActionOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchActionOutput)
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return i.ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchActionArgs) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchActionOutput).ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx)
}

// TopicRuleElasticsearchActionPtrInput is an input type that accepts TopicRuleElasticsearchActionArgs, TopicRuleElasticsearchActionPtr and TopicRuleElasticsearchActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleElasticsearchActionPtrInput` via:
//
//          TopicRuleElasticsearchActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleElasticsearchActionPtrInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput
	ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Context) TopicRuleElasticsearchActionPtrOutput
}

type topicRuleElasticsearchActionPtrType TopicRuleElasticsearchActionArgs

func TopicRuleElasticsearchActionPtr(v *TopicRuleElasticsearchActionArgs) TopicRuleElasticsearchActionPtrInput {
	return (*topicRuleElasticsearchActionPtrType)(v)
}

func (*topicRuleElasticsearchActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearchAction)(nil)).Elem()
}

func (i *topicRuleElasticsearchActionPtrType) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return i.ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleElasticsearchActionPtrType) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchActionPtrOutput)
}

type TopicRuleElasticsearchActionOutput struct{ *pulumi.OutputState }

func (TopicRuleElasticsearchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearchAction)(nil)).Elem()
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionOutput() TopicRuleElasticsearchActionOutput {
	return o
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionOutput {
	return o
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return o.ToTopicRuleElasticsearchActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleElasticsearchActionOutput) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleElasticsearchAction) *TopicRuleElasticsearchAction {
		return &v
	}).(TopicRuleElasticsearchActionPtrOutput)
}

func (o TopicRuleElasticsearchActionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o TopicRuleElasticsearchActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Id }).(pulumi.StringOutput)
}

func (o TopicRuleElasticsearchActionOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Index }).(pulumi.StringOutput)
}

func (o TopicRuleElasticsearchActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleElasticsearchActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearchAction) string { return v.Type }).(pulumi.StringOutput)
}

type TopicRuleElasticsearchActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleElasticsearchActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearchAction)(nil)).Elem()
}

func (o TopicRuleElasticsearchActionPtrOutput) ToTopicRuleElasticsearchActionPtrOutput() TopicRuleElasticsearchActionPtrOutput {
	return o
}

func (o TopicRuleElasticsearchActionPtrOutput) ToTopicRuleElasticsearchActionPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchActionPtrOutput {
	return o
}

func (o TopicRuleElasticsearchActionPtrOutput) Elem() TopicRuleElasticsearchActionOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) TopicRuleElasticsearchAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleElasticsearchAction
		return ret
	}).(TopicRuleElasticsearchActionOutput)
}

func (o TopicRuleElasticsearchActionPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleElasticsearchActionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleElasticsearchActionPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleElasticsearchActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleElasticsearchActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TopicRuleFirehoseAction struct {
	BatchMode          *bool   `pulumi:"batchMode"`
	DeliveryStreamName string  `pulumi:"deliveryStreamName"`
	RoleArn            string  `pulumi:"roleArn"`
	Separator          *string `pulumi:"separator"`
}

// TopicRuleFirehoseActionInput is an input type that accepts TopicRuleFirehoseActionArgs and TopicRuleFirehoseActionOutput values.
// You can construct a concrete instance of `TopicRuleFirehoseActionInput` via:
//
//          TopicRuleFirehoseActionArgs{...}
type TopicRuleFirehoseActionInput interface {
	pulumi.Input

	ToTopicRuleFirehoseActionOutput() TopicRuleFirehoseActionOutput
	ToTopicRuleFirehoseActionOutputWithContext(context.Context) TopicRuleFirehoseActionOutput
}

type TopicRuleFirehoseActionArgs struct {
	BatchMode          pulumi.BoolPtrInput   `pulumi:"batchMode"`
	DeliveryStreamName pulumi.StringInput    `pulumi:"deliveryStreamName"`
	RoleArn            pulumi.StringInput    `pulumi:"roleArn"`
	Separator          pulumi.StringPtrInput `pulumi:"separator"`
}

func (TopicRuleFirehoseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehoseAction)(nil)).Elem()
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionOutput() TopicRuleFirehoseActionOutput {
	return i.ToTopicRuleFirehoseActionOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionOutputWithContext(ctx context.Context) TopicRuleFirehoseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseActionOutput)
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return i.ToTopicRuleFirehoseActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseActionArgs) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseActionOutput).ToTopicRuleFirehoseActionPtrOutputWithContext(ctx)
}

// TopicRuleFirehoseActionPtrInput is an input type that accepts TopicRuleFirehoseActionArgs, TopicRuleFirehoseActionPtr and TopicRuleFirehoseActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleFirehoseActionPtrInput` via:
//
//          TopicRuleFirehoseActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleFirehoseActionPtrInput interface {
	pulumi.Input

	ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput
	ToTopicRuleFirehoseActionPtrOutputWithContext(context.Context) TopicRuleFirehoseActionPtrOutput
}

type topicRuleFirehoseActionPtrType TopicRuleFirehoseActionArgs

func TopicRuleFirehoseActionPtr(v *TopicRuleFirehoseActionArgs) TopicRuleFirehoseActionPtrInput {
	return (*topicRuleFirehoseActionPtrType)(v)
}

func (*topicRuleFirehoseActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehoseAction)(nil)).Elem()
}

func (i *topicRuleFirehoseActionPtrType) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return i.ToTopicRuleFirehoseActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleFirehoseActionPtrType) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseActionPtrOutput)
}

type TopicRuleFirehoseActionOutput struct{ *pulumi.OutputState }

func (TopicRuleFirehoseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehoseAction)(nil)).Elem()
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionOutput() TopicRuleFirehoseActionOutput {
	return o
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionOutputWithContext(ctx context.Context) TopicRuleFirehoseActionOutput {
	return o
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return o.ToTopicRuleFirehoseActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleFirehoseActionOutput) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleFirehoseAction) *TopicRuleFirehoseAction {
		return &v
	}).(TopicRuleFirehoseActionPtrOutput)
}

func (o TopicRuleFirehoseActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

func (o TopicRuleFirehoseActionOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

func (o TopicRuleFirehoseActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleFirehoseActionOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleFirehoseAction) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

type TopicRuleFirehoseActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleFirehoseActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehoseAction)(nil)).Elem()
}

func (o TopicRuleFirehoseActionPtrOutput) ToTopicRuleFirehoseActionPtrOutput() TopicRuleFirehoseActionPtrOutput {
	return o
}

func (o TopicRuleFirehoseActionPtrOutput) ToTopicRuleFirehoseActionPtrOutputWithContext(ctx context.Context) TopicRuleFirehoseActionPtrOutput {
	return o
}

func (o TopicRuleFirehoseActionPtrOutput) Elem() TopicRuleFirehoseActionOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) TopicRuleFirehoseAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleFirehoseAction
		return ret
	}).(TopicRuleFirehoseActionOutput)
}

func (o TopicRuleFirehoseActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

func (o TopicRuleFirehoseActionPtrOutput) DeliveryStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStreamName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleFirehoseActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleFirehoseActionPtrOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehoseAction) *string {
		if v == nil {
			return nil
		}
		return v.Separator
	}).(pulumi.StringPtrOutput)
}

type TopicRuleHttpAction struct {
	Auth            *TopicRuleHttpAuthorization `pulumi:"auth"`
	ConfirmationUrl *string                     `pulumi:"confirmationUrl"`
	Headers         []TopicRuleHttpActionHeader `pulumi:"headers"`
	Url             string                      `pulumi:"url"`
}

// TopicRuleHttpActionInput is an input type that accepts TopicRuleHttpActionArgs and TopicRuleHttpActionOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionInput` via:
//
//          TopicRuleHttpActionArgs{...}
type TopicRuleHttpActionInput interface {
	pulumi.Input

	ToTopicRuleHttpActionOutput() TopicRuleHttpActionOutput
	ToTopicRuleHttpActionOutputWithContext(context.Context) TopicRuleHttpActionOutput
}

type TopicRuleHttpActionArgs struct {
	Auth            TopicRuleHttpAuthorizationPtrInput  `pulumi:"auth"`
	ConfirmationUrl pulumi.StringPtrInput               `pulumi:"confirmationUrl"`
	Headers         TopicRuleHttpActionHeaderArrayInput `pulumi:"headers"`
	Url             pulumi.StringInput                  `pulumi:"url"`
}

func (TopicRuleHttpActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAction)(nil)).Elem()
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionOutput() TopicRuleHttpActionOutput {
	return i.ToTopicRuleHttpActionOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionOutputWithContext(ctx context.Context) TopicRuleHttpActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionOutput)
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return i.ToTopicRuleHttpActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionArgs) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionOutput).ToTopicRuleHttpActionPtrOutputWithContext(ctx)
}

// TopicRuleHttpActionPtrInput is an input type that accepts TopicRuleHttpActionArgs, TopicRuleHttpActionPtr and TopicRuleHttpActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionPtrInput` via:
//
//          TopicRuleHttpActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleHttpActionPtrInput interface {
	pulumi.Input

	ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput
	ToTopicRuleHttpActionPtrOutputWithContext(context.Context) TopicRuleHttpActionPtrOutput
}

type topicRuleHttpActionPtrType TopicRuleHttpActionArgs

func TopicRuleHttpActionPtr(v *TopicRuleHttpActionArgs) TopicRuleHttpActionPtrInput {
	return (*topicRuleHttpActionPtrType)(v)
}

func (*topicRuleHttpActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAction)(nil)).Elem()
}

func (i *topicRuleHttpActionPtrType) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return i.ToTopicRuleHttpActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleHttpActionPtrType) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionPtrOutput)
}

type TopicRuleHttpActionOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAction)(nil)).Elem()
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionOutput() TopicRuleHttpActionOutput {
	return o
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionOutputWithContext(ctx context.Context) TopicRuleHttpActionOutput {
	return o
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return o.ToTopicRuleHttpActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleHttpActionOutput) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleHttpAction) *TopicRuleHttpAction {
		return &v
	}).(TopicRuleHttpActionPtrOutput)
}

func (o TopicRuleHttpActionOutput) Auth() TopicRuleHttpAuthorizationPtrOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) *TopicRuleHttpAuthorization { return v.Auth }).(TopicRuleHttpAuthorizationPtrOutput)
}

func (o TopicRuleHttpActionOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) *string { return v.ConfirmationUrl }).(pulumi.StringPtrOutput)
}

func (o TopicRuleHttpActionOutput) Headers() TopicRuleHttpActionHeaderArrayOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) []TopicRuleHttpActionHeader { return v.Headers }).(TopicRuleHttpActionHeaderArrayOutput)
}

func (o TopicRuleHttpActionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleHttpAction) string { return v.Url }).(pulumi.StringOutput)
}

type TopicRuleHttpActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAction)(nil)).Elem()
}

func (o TopicRuleHttpActionPtrOutput) ToTopicRuleHttpActionPtrOutput() TopicRuleHttpActionPtrOutput {
	return o
}

func (o TopicRuleHttpActionPtrOutput) ToTopicRuleHttpActionPtrOutputWithContext(ctx context.Context) TopicRuleHttpActionPtrOutput {
	return o
}

func (o TopicRuleHttpActionPtrOutput) Elem() TopicRuleHttpActionOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) TopicRuleHttpAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleHttpAction
		return ret
	}).(TopicRuleHttpActionOutput)
}

func (o TopicRuleHttpActionPtrOutput) Auth() TopicRuleHttpAuthorizationPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) *TopicRuleHttpAuthorization {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(TopicRuleHttpAuthorizationPtrOutput)
}

func (o TopicRuleHttpActionPtrOutput) ConfirmationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) *string {
		if v == nil {
			return nil
		}
		return v.ConfirmationUrl
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleHttpActionPtrOutput) Headers() TopicRuleHttpActionHeaderArrayOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) []TopicRuleHttpActionHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(TopicRuleHttpActionHeaderArrayOutput)
}

func (o TopicRuleHttpActionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAction) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TopicRuleHttpActionHeader struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// TopicRuleHttpActionHeaderInput is an input type that accepts TopicRuleHttpActionHeaderArgs and TopicRuleHttpActionHeaderOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionHeaderInput` via:
//
//          TopicRuleHttpActionHeaderArgs{...}
type TopicRuleHttpActionHeaderInput interface {
	pulumi.Input

	ToTopicRuleHttpActionHeaderOutput() TopicRuleHttpActionHeaderOutput
	ToTopicRuleHttpActionHeaderOutputWithContext(context.Context) TopicRuleHttpActionHeaderOutput
}

type TopicRuleHttpActionHeaderArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleHttpActionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpActionHeader)(nil)).Elem()
}

func (i TopicRuleHttpActionHeaderArgs) ToTopicRuleHttpActionHeaderOutput() TopicRuleHttpActionHeaderOutput {
	return i.ToTopicRuleHttpActionHeaderOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionHeaderArgs) ToTopicRuleHttpActionHeaderOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionHeaderOutput)
}

// TopicRuleHttpActionHeaderArrayInput is an input type that accepts TopicRuleHttpActionHeaderArray and TopicRuleHttpActionHeaderArrayOutput values.
// You can construct a concrete instance of `TopicRuleHttpActionHeaderArrayInput` via:
//
//          TopicRuleHttpActionHeaderArray{ TopicRuleHttpActionHeaderArgs{...} }
type TopicRuleHttpActionHeaderArrayInput interface {
	pulumi.Input

	ToTopicRuleHttpActionHeaderArrayOutput() TopicRuleHttpActionHeaderArrayOutput
	ToTopicRuleHttpActionHeaderArrayOutputWithContext(context.Context) TopicRuleHttpActionHeaderArrayOutput
}

type TopicRuleHttpActionHeaderArray []TopicRuleHttpActionHeaderInput

func (TopicRuleHttpActionHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleHttpActionHeader)(nil)).Elem()
}

func (i TopicRuleHttpActionHeaderArray) ToTopicRuleHttpActionHeaderArrayOutput() TopicRuleHttpActionHeaderArrayOutput {
	return i.ToTopicRuleHttpActionHeaderArrayOutputWithContext(context.Background())
}

func (i TopicRuleHttpActionHeaderArray) ToTopicRuleHttpActionHeaderArrayOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpActionHeaderArrayOutput)
}

type TopicRuleHttpActionHeaderOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpActionHeader)(nil)).Elem()
}

func (o TopicRuleHttpActionHeaderOutput) ToTopicRuleHttpActionHeaderOutput() TopicRuleHttpActionHeaderOutput {
	return o
}

func (o TopicRuleHttpActionHeaderOutput) ToTopicRuleHttpActionHeaderOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderOutput {
	return o
}

func (o TopicRuleHttpActionHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleHttpActionHeader) string { return v.Key }).(pulumi.StringOutput)
}

func (o TopicRuleHttpActionHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleHttpActionHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleHttpActionHeaderArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpActionHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleHttpActionHeader)(nil)).Elem()
}

func (o TopicRuleHttpActionHeaderArrayOutput) ToTopicRuleHttpActionHeaderArrayOutput() TopicRuleHttpActionHeaderArrayOutput {
	return o
}

func (o TopicRuleHttpActionHeaderArrayOutput) ToTopicRuleHttpActionHeaderArrayOutputWithContext(ctx context.Context) TopicRuleHttpActionHeaderArrayOutput {
	return o
}

func (o TopicRuleHttpActionHeaderArrayOutput) Index(i pulumi.IntInput) TopicRuleHttpActionHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleHttpActionHeader {
		return vs[0].([]TopicRuleHttpActionHeader)[vs[1].(int)]
	}).(TopicRuleHttpActionHeaderOutput)
}

type TopicRuleHttpAuthorization struct {
	Sigv4 *TopicRuleSigV4Authorization `pulumi:"sigv4"`
}

// TopicRuleHttpAuthorizationInput is an input type that accepts TopicRuleHttpAuthorizationArgs and TopicRuleHttpAuthorizationOutput values.
// You can construct a concrete instance of `TopicRuleHttpAuthorizationInput` via:
//
//          TopicRuleHttpAuthorizationArgs{...}
type TopicRuleHttpAuthorizationInput interface {
	pulumi.Input

	ToTopicRuleHttpAuthorizationOutput() TopicRuleHttpAuthorizationOutput
	ToTopicRuleHttpAuthorizationOutputWithContext(context.Context) TopicRuleHttpAuthorizationOutput
}

type TopicRuleHttpAuthorizationArgs struct {
	Sigv4 TopicRuleSigV4AuthorizationPtrInput `pulumi:"sigv4"`
}

func (TopicRuleHttpAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAuthorization)(nil)).Elem()
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationOutput() TopicRuleHttpAuthorizationOutput {
	return i.ToTopicRuleHttpAuthorizationOutputWithContext(context.Background())
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpAuthorizationOutput)
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return i.ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Background())
}

func (i TopicRuleHttpAuthorizationArgs) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpAuthorizationOutput).ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx)
}

// TopicRuleHttpAuthorizationPtrInput is an input type that accepts TopicRuleHttpAuthorizationArgs, TopicRuleHttpAuthorizationPtr and TopicRuleHttpAuthorizationPtrOutput values.
// You can construct a concrete instance of `TopicRuleHttpAuthorizationPtrInput` via:
//
//          TopicRuleHttpAuthorizationArgs{...}
//
//  or:
//
//          nil
type TopicRuleHttpAuthorizationPtrInput interface {
	pulumi.Input

	ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput
	ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Context) TopicRuleHttpAuthorizationPtrOutput
}

type topicRuleHttpAuthorizationPtrType TopicRuleHttpAuthorizationArgs

func TopicRuleHttpAuthorizationPtr(v *TopicRuleHttpAuthorizationArgs) TopicRuleHttpAuthorizationPtrInput {
	return (*topicRuleHttpAuthorizationPtrType)(v)
}

func (*topicRuleHttpAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAuthorization)(nil)).Elem()
}

func (i *topicRuleHttpAuthorizationPtrType) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return i.ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Background())
}

func (i *topicRuleHttpAuthorizationPtrType) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleHttpAuthorizationPtrOutput)
}

type TopicRuleHttpAuthorizationOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleHttpAuthorization)(nil)).Elem()
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationOutput() TopicRuleHttpAuthorizationOutput {
	return o
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationOutput {
	return o
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return o.ToTopicRuleHttpAuthorizationPtrOutputWithContext(context.Background())
}

func (o TopicRuleHttpAuthorizationOutput) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleHttpAuthorization) *TopicRuleHttpAuthorization {
		return &v
	}).(TopicRuleHttpAuthorizationPtrOutput)
}

func (o TopicRuleHttpAuthorizationOutput) Sigv4() TopicRuleSigV4AuthorizationPtrOutput {
	return o.ApplyT(func(v TopicRuleHttpAuthorization) *TopicRuleSigV4Authorization { return v.Sigv4 }).(TopicRuleSigV4AuthorizationPtrOutput)
}

type TopicRuleHttpAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleHttpAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleHttpAuthorization)(nil)).Elem()
}

func (o TopicRuleHttpAuthorizationPtrOutput) ToTopicRuleHttpAuthorizationPtrOutput() TopicRuleHttpAuthorizationPtrOutput {
	return o
}

func (o TopicRuleHttpAuthorizationPtrOutput) ToTopicRuleHttpAuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleHttpAuthorizationPtrOutput {
	return o
}

func (o TopicRuleHttpAuthorizationPtrOutput) Elem() TopicRuleHttpAuthorizationOutput {
	return o.ApplyT(func(v *TopicRuleHttpAuthorization) TopicRuleHttpAuthorization {
		if v != nil {
			return *v
		}
		var ret TopicRuleHttpAuthorization
		return ret
	}).(TopicRuleHttpAuthorizationOutput)
}

func (o TopicRuleHttpAuthorizationPtrOutput) Sigv4() TopicRuleSigV4AuthorizationPtrOutput {
	return o.ApplyT(func(v *TopicRuleHttpAuthorization) *TopicRuleSigV4Authorization {
		if v == nil {
			return nil
		}
		return v.Sigv4
	}).(TopicRuleSigV4AuthorizationPtrOutput)
}

type TopicRuleIotAnalyticsAction struct {
	BatchMode   *bool  `pulumi:"batchMode"`
	ChannelName string `pulumi:"channelName"`
	RoleArn     string `pulumi:"roleArn"`
}

// TopicRuleIotAnalyticsActionInput is an input type that accepts TopicRuleIotAnalyticsActionArgs and TopicRuleIotAnalyticsActionOutput values.
// You can construct a concrete instance of `TopicRuleIotAnalyticsActionInput` via:
//
//          TopicRuleIotAnalyticsActionArgs{...}
type TopicRuleIotAnalyticsActionInput interface {
	pulumi.Input

	ToTopicRuleIotAnalyticsActionOutput() TopicRuleIotAnalyticsActionOutput
	ToTopicRuleIotAnalyticsActionOutputWithContext(context.Context) TopicRuleIotAnalyticsActionOutput
}

type TopicRuleIotAnalyticsActionArgs struct {
	BatchMode   pulumi.BoolPtrInput `pulumi:"batchMode"`
	ChannelName pulumi.StringInput  `pulumi:"channelName"`
	RoleArn     pulumi.StringInput  `pulumi:"roleArn"`
}

func (TopicRuleIotAnalyticsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionOutput() TopicRuleIotAnalyticsActionOutput {
	return i.ToTopicRuleIotAnalyticsActionOutputWithContext(context.Background())
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticsActionOutput)
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return i.ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleIotAnalyticsActionArgs) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticsActionOutput).ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx)
}

// TopicRuleIotAnalyticsActionPtrInput is an input type that accepts TopicRuleIotAnalyticsActionArgs, TopicRuleIotAnalyticsActionPtr and TopicRuleIotAnalyticsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleIotAnalyticsActionPtrInput` via:
//
//          TopicRuleIotAnalyticsActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleIotAnalyticsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput
	ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Context) TopicRuleIotAnalyticsActionPtrOutput
}

type topicRuleIotAnalyticsActionPtrType TopicRuleIotAnalyticsActionArgs

func TopicRuleIotAnalyticsActionPtr(v *TopicRuleIotAnalyticsActionArgs) TopicRuleIotAnalyticsActionPtrInput {
	return (*topicRuleIotAnalyticsActionPtrType)(v)
}

func (*topicRuleIotAnalyticsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (i *topicRuleIotAnalyticsActionPtrType) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return i.ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleIotAnalyticsActionPtrType) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticsActionPtrOutput)
}

type TopicRuleIotAnalyticsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleIotAnalyticsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionOutput() TopicRuleIotAnalyticsActionOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return o.ToTopicRuleIotAnalyticsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleIotAnalyticsActionOutput) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleIotAnalyticsAction) *TopicRuleIotAnalyticsAction {
		return &v
	}).(TopicRuleIotAnalyticsActionPtrOutput)
}

func (o TopicRuleIotAnalyticsActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleIotAnalyticsAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

func (o TopicRuleIotAnalyticsActionOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotAnalyticsAction) string { return v.ChannelName }).(pulumi.StringOutput)
}

func (o TopicRuleIotAnalyticsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotAnalyticsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotAnalyticsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleIotAnalyticsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotAnalyticsAction)(nil)).Elem()
}

func (o TopicRuleIotAnalyticsActionPtrOutput) ToTopicRuleIotAnalyticsActionPtrOutput() TopicRuleIotAnalyticsActionPtrOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionPtrOutput) ToTopicRuleIotAnalyticsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotAnalyticsActionPtrOutput {
	return o
}

func (o TopicRuleIotAnalyticsActionPtrOutput) Elem() TopicRuleIotAnalyticsActionOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) TopicRuleIotAnalyticsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleIotAnalyticsAction
		return ret
	}).(TopicRuleIotAnalyticsActionOutput)
}

func (o TopicRuleIotAnalyticsActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

func (o TopicRuleIotAnalyticsActionPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleIotAnalyticsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotAnalyticsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleIotEventsAction struct {
	BatchMode *bool   `pulumi:"batchMode"`
	InputName string  `pulumi:"inputName"`
	MessageId *string `pulumi:"messageId"`
	RoleArn   string  `pulumi:"roleArn"`
}

// TopicRuleIotEventsActionInput is an input type that accepts TopicRuleIotEventsActionArgs and TopicRuleIotEventsActionOutput values.
// You can construct a concrete instance of `TopicRuleIotEventsActionInput` via:
//
//          TopicRuleIotEventsActionArgs{...}
type TopicRuleIotEventsActionInput interface {
	pulumi.Input

	ToTopicRuleIotEventsActionOutput() TopicRuleIotEventsActionOutput
	ToTopicRuleIotEventsActionOutputWithContext(context.Context) TopicRuleIotEventsActionOutput
}

type TopicRuleIotEventsActionArgs struct {
	BatchMode pulumi.BoolPtrInput   `pulumi:"batchMode"`
	InputName pulumi.StringInput    `pulumi:"inputName"`
	MessageId pulumi.StringPtrInput `pulumi:"messageId"`
	RoleArn   pulumi.StringInput    `pulumi:"roleArn"`
}

func (TopicRuleIotEventsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotEventsAction)(nil)).Elem()
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionOutput() TopicRuleIotEventsActionOutput {
	return i.ToTopicRuleIotEventsActionOutputWithContext(context.Background())
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionOutputWithContext(ctx context.Context) TopicRuleIotEventsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventsActionOutput)
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return i.ToTopicRuleIotEventsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleIotEventsActionArgs) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventsActionOutput).ToTopicRuleIotEventsActionPtrOutputWithContext(ctx)
}

// TopicRuleIotEventsActionPtrInput is an input type that accepts TopicRuleIotEventsActionArgs, TopicRuleIotEventsActionPtr and TopicRuleIotEventsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleIotEventsActionPtrInput` via:
//
//          TopicRuleIotEventsActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleIotEventsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput
	ToTopicRuleIotEventsActionPtrOutputWithContext(context.Context) TopicRuleIotEventsActionPtrOutput
}

type topicRuleIotEventsActionPtrType TopicRuleIotEventsActionArgs

func TopicRuleIotEventsActionPtr(v *TopicRuleIotEventsActionArgs) TopicRuleIotEventsActionPtrInput {
	return (*topicRuleIotEventsActionPtrType)(v)
}

func (*topicRuleIotEventsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotEventsAction)(nil)).Elem()
}

func (i *topicRuleIotEventsActionPtrType) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return i.ToTopicRuleIotEventsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleIotEventsActionPtrType) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventsActionPtrOutput)
}

type TopicRuleIotEventsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleIotEventsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotEventsAction)(nil)).Elem()
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionOutput() TopicRuleIotEventsActionOutput {
	return o
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionOutputWithContext(ctx context.Context) TopicRuleIotEventsActionOutput {
	return o
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return o.ToTopicRuleIotEventsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleIotEventsActionOutput) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleIotEventsAction) *TopicRuleIotEventsAction {
		return &v
	}).(TopicRuleIotEventsActionPtrOutput)
}

func (o TopicRuleIotEventsActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

func (o TopicRuleIotEventsActionOutput) InputName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) string { return v.InputName }).(pulumi.StringOutput)
}

func (o TopicRuleIotEventsActionOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) *string { return v.MessageId }).(pulumi.StringPtrOutput)
}

func (o TopicRuleIotEventsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotEventsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotEventsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleIotEventsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotEventsAction)(nil)).Elem()
}

func (o TopicRuleIotEventsActionPtrOutput) ToTopicRuleIotEventsActionPtrOutput() TopicRuleIotEventsActionPtrOutput {
	return o
}

func (o TopicRuleIotEventsActionPtrOutput) ToTopicRuleIotEventsActionPtrOutputWithContext(ctx context.Context) TopicRuleIotEventsActionPtrOutput {
	return o
}

func (o TopicRuleIotEventsActionPtrOutput) Elem() TopicRuleIotEventsActionOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) TopicRuleIotEventsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleIotEventsAction
		return ret
	}).(TopicRuleIotEventsActionOutput)
}

func (o TopicRuleIotEventsActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

func (o TopicRuleIotEventsActionPtrOutput) InputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *string {
		if v == nil {
			return nil
		}
		return &v.InputName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleIotEventsActionPtrOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *string {
		if v == nil {
			return nil
		}
		return v.MessageId
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleIotEventsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotEventsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleIotSiteWiseAction struct {
	PutAssetPropertyValueEntries []TopicRulePutAssetPropertyValueEntry `pulumi:"putAssetPropertyValueEntries"`
	RoleArn                      string                                `pulumi:"roleArn"`
}

// TopicRuleIotSiteWiseActionInput is an input type that accepts TopicRuleIotSiteWiseActionArgs and TopicRuleIotSiteWiseActionOutput values.
// You can construct a concrete instance of `TopicRuleIotSiteWiseActionInput` via:
//
//          TopicRuleIotSiteWiseActionArgs{...}
type TopicRuleIotSiteWiseActionInput interface {
	pulumi.Input

	ToTopicRuleIotSiteWiseActionOutput() TopicRuleIotSiteWiseActionOutput
	ToTopicRuleIotSiteWiseActionOutputWithContext(context.Context) TopicRuleIotSiteWiseActionOutput
}

type TopicRuleIotSiteWiseActionArgs struct {
	PutAssetPropertyValueEntries TopicRulePutAssetPropertyValueEntryArrayInput `pulumi:"putAssetPropertyValueEntries"`
	RoleArn                      pulumi.StringInput                            `pulumi:"roleArn"`
}

func (TopicRuleIotSiteWiseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionOutput() TopicRuleIotSiteWiseActionOutput {
	return i.ToTopicRuleIotSiteWiseActionOutputWithContext(context.Background())
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotSiteWiseActionOutput)
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return i.ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleIotSiteWiseActionArgs) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotSiteWiseActionOutput).ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx)
}

// TopicRuleIotSiteWiseActionPtrInput is an input type that accepts TopicRuleIotSiteWiseActionArgs, TopicRuleIotSiteWiseActionPtr and TopicRuleIotSiteWiseActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleIotSiteWiseActionPtrInput` via:
//
//          TopicRuleIotSiteWiseActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleIotSiteWiseActionPtrInput interface {
	pulumi.Input

	ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput
	ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Context) TopicRuleIotSiteWiseActionPtrOutput
}

type topicRuleIotSiteWiseActionPtrType TopicRuleIotSiteWiseActionArgs

func TopicRuleIotSiteWiseActionPtr(v *TopicRuleIotSiteWiseActionArgs) TopicRuleIotSiteWiseActionPtrInput {
	return (*topicRuleIotSiteWiseActionPtrType)(v)
}

func (*topicRuleIotSiteWiseActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (i *topicRuleIotSiteWiseActionPtrType) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return i.ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleIotSiteWiseActionPtrType) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotSiteWiseActionPtrOutput)
}

type TopicRuleIotSiteWiseActionOutput struct{ *pulumi.OutputState }

func (TopicRuleIotSiteWiseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionOutput() TopicRuleIotSiteWiseActionOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return o.ToTopicRuleIotSiteWiseActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleIotSiteWiseActionOutput) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleIotSiteWiseAction) *TopicRuleIotSiteWiseAction {
		return &v
	}).(TopicRuleIotSiteWiseActionPtrOutput)
}

func (o TopicRuleIotSiteWiseActionOutput) PutAssetPropertyValueEntries() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o.ApplyT(func(v TopicRuleIotSiteWiseAction) []TopicRulePutAssetPropertyValueEntry {
		return v.PutAssetPropertyValueEntries
	}).(TopicRulePutAssetPropertyValueEntryArrayOutput)
}

func (o TopicRuleIotSiteWiseActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotSiteWiseAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotSiteWiseActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleIotSiteWiseActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleIotSiteWiseAction)(nil)).Elem()
}

func (o TopicRuleIotSiteWiseActionPtrOutput) ToTopicRuleIotSiteWiseActionPtrOutput() TopicRuleIotSiteWiseActionPtrOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionPtrOutput) ToTopicRuleIotSiteWiseActionPtrOutputWithContext(ctx context.Context) TopicRuleIotSiteWiseActionPtrOutput {
	return o
}

func (o TopicRuleIotSiteWiseActionPtrOutput) Elem() TopicRuleIotSiteWiseActionOutput {
	return o.ApplyT(func(v *TopicRuleIotSiteWiseAction) TopicRuleIotSiteWiseAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleIotSiteWiseAction
		return ret
	}).(TopicRuleIotSiteWiseActionOutput)
}

func (o TopicRuleIotSiteWiseActionPtrOutput) PutAssetPropertyValueEntries() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o.ApplyT(func(v *TopicRuleIotSiteWiseAction) []TopicRulePutAssetPropertyValueEntry {
		if v == nil {
			return nil
		}
		return v.PutAssetPropertyValueEntries
	}).(TopicRulePutAssetPropertyValueEntryArrayOutput)
}

func (o TopicRuleIotSiteWiseActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleIotSiteWiseAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleKafkaAction struct {
	ClientProperties interface{} `pulumi:"clientProperties"`
	DestinationArn   string      `pulumi:"destinationArn"`
	Key              *string     `pulumi:"key"`
	Partition        *string     `pulumi:"partition"`
	Topic            string      `pulumi:"topic"`
}

// TopicRuleKafkaActionInput is an input type that accepts TopicRuleKafkaActionArgs and TopicRuleKafkaActionOutput values.
// You can construct a concrete instance of `TopicRuleKafkaActionInput` via:
//
//          TopicRuleKafkaActionArgs{...}
type TopicRuleKafkaActionInput interface {
	pulumi.Input

	ToTopicRuleKafkaActionOutput() TopicRuleKafkaActionOutput
	ToTopicRuleKafkaActionOutputWithContext(context.Context) TopicRuleKafkaActionOutput
}

type TopicRuleKafkaActionArgs struct {
	ClientProperties pulumi.Input          `pulumi:"clientProperties"`
	DestinationArn   pulumi.StringInput    `pulumi:"destinationArn"`
	Key              pulumi.StringPtrInput `pulumi:"key"`
	Partition        pulumi.StringPtrInput `pulumi:"partition"`
	Topic            pulumi.StringInput    `pulumi:"topic"`
}

func (TopicRuleKafkaActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKafkaAction)(nil)).Elem()
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionOutput() TopicRuleKafkaActionOutput {
	return i.ToTopicRuleKafkaActionOutputWithContext(context.Background())
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionOutputWithContext(ctx context.Context) TopicRuleKafkaActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionOutput)
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return i.ToTopicRuleKafkaActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleKafkaActionArgs) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionOutput).ToTopicRuleKafkaActionPtrOutputWithContext(ctx)
}

// TopicRuleKafkaActionPtrInput is an input type that accepts TopicRuleKafkaActionArgs, TopicRuleKafkaActionPtr and TopicRuleKafkaActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleKafkaActionPtrInput` via:
//
//          TopicRuleKafkaActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleKafkaActionPtrInput interface {
	pulumi.Input

	ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput
	ToTopicRuleKafkaActionPtrOutputWithContext(context.Context) TopicRuleKafkaActionPtrOutput
}

type topicRuleKafkaActionPtrType TopicRuleKafkaActionArgs

func TopicRuleKafkaActionPtr(v *TopicRuleKafkaActionArgs) TopicRuleKafkaActionPtrInput {
	return (*topicRuleKafkaActionPtrType)(v)
}

func (*topicRuleKafkaActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKafkaAction)(nil)).Elem()
}

func (i *topicRuleKafkaActionPtrType) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return i.ToTopicRuleKafkaActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleKafkaActionPtrType) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKafkaActionPtrOutput)
}

type TopicRuleKafkaActionOutput struct{ *pulumi.OutputState }

func (TopicRuleKafkaActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKafkaAction)(nil)).Elem()
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionOutput() TopicRuleKafkaActionOutput {
	return o
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionOutputWithContext(ctx context.Context) TopicRuleKafkaActionOutput {
	return o
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return o.ToTopicRuleKafkaActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleKafkaActionOutput) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleKafkaAction) *TopicRuleKafkaAction {
		return &v
	}).(TopicRuleKafkaActionPtrOutput)
}

func (o TopicRuleKafkaActionOutput) ClientProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) interface{} { return v.ClientProperties }).(pulumi.AnyOutput)
}

func (o TopicRuleKafkaActionOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) string { return v.DestinationArn }).(pulumi.StringOutput)
}

func (o TopicRuleKafkaActionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o TopicRuleKafkaActionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

func (o TopicRuleKafkaActionOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKafkaAction) string { return v.Topic }).(pulumi.StringOutput)
}

type TopicRuleKafkaActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleKafkaActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKafkaAction)(nil)).Elem()
}

func (o TopicRuleKafkaActionPtrOutput) ToTopicRuleKafkaActionPtrOutput() TopicRuleKafkaActionPtrOutput {
	return o
}

func (o TopicRuleKafkaActionPtrOutput) ToTopicRuleKafkaActionPtrOutputWithContext(ctx context.Context) TopicRuleKafkaActionPtrOutput {
	return o
}

func (o TopicRuleKafkaActionPtrOutput) Elem() TopicRuleKafkaActionOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) TopicRuleKafkaAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleKafkaAction
		return ret
	}).(TopicRuleKafkaActionOutput)
}

func (o TopicRuleKafkaActionPtrOutput) ClientProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) interface{} {
		if v == nil {
			return nil
		}
		return v.ClientProperties
	}).(pulumi.AnyOutput)
}

func (o TopicRuleKafkaActionPtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleKafkaActionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleKafkaActionPtrOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleKafkaActionPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKafkaAction) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type TopicRuleKinesisAction struct {
	PartitionKey *string `pulumi:"partitionKey"`
	RoleArn      string  `pulumi:"roleArn"`
	StreamName   string  `pulumi:"streamName"`
}

// TopicRuleKinesisActionInput is an input type that accepts TopicRuleKinesisActionArgs and TopicRuleKinesisActionOutput values.
// You can construct a concrete instance of `TopicRuleKinesisActionInput` via:
//
//          TopicRuleKinesisActionArgs{...}
type TopicRuleKinesisActionInput interface {
	pulumi.Input

	ToTopicRuleKinesisActionOutput() TopicRuleKinesisActionOutput
	ToTopicRuleKinesisActionOutputWithContext(context.Context) TopicRuleKinesisActionOutput
}

type TopicRuleKinesisActionArgs struct {
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	RoleArn      pulumi.StringInput    `pulumi:"roleArn"`
	StreamName   pulumi.StringInput    `pulumi:"streamName"`
}

func (TopicRuleKinesisActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesisAction)(nil)).Elem()
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionOutput() TopicRuleKinesisActionOutput {
	return i.ToTopicRuleKinesisActionOutputWithContext(context.Background())
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionOutputWithContext(ctx context.Context) TopicRuleKinesisActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisActionOutput)
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return i.ToTopicRuleKinesisActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleKinesisActionArgs) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisActionOutput).ToTopicRuleKinesisActionPtrOutputWithContext(ctx)
}

// TopicRuleKinesisActionPtrInput is an input type that accepts TopicRuleKinesisActionArgs, TopicRuleKinesisActionPtr and TopicRuleKinesisActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleKinesisActionPtrInput` via:
//
//          TopicRuleKinesisActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleKinesisActionPtrInput interface {
	pulumi.Input

	ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput
	ToTopicRuleKinesisActionPtrOutputWithContext(context.Context) TopicRuleKinesisActionPtrOutput
}

type topicRuleKinesisActionPtrType TopicRuleKinesisActionArgs

func TopicRuleKinesisActionPtr(v *TopicRuleKinesisActionArgs) TopicRuleKinesisActionPtrInput {
	return (*topicRuleKinesisActionPtrType)(v)
}

func (*topicRuleKinesisActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesisAction)(nil)).Elem()
}

func (i *topicRuleKinesisActionPtrType) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return i.ToTopicRuleKinesisActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleKinesisActionPtrType) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisActionPtrOutput)
}

type TopicRuleKinesisActionOutput struct{ *pulumi.OutputState }

func (TopicRuleKinesisActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesisAction)(nil)).Elem()
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionOutput() TopicRuleKinesisActionOutput {
	return o
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionOutputWithContext(ctx context.Context) TopicRuleKinesisActionOutput {
	return o
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return o.ToTopicRuleKinesisActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleKinesisActionOutput) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleKinesisAction) *TopicRuleKinesisAction {
		return &v
	}).(TopicRuleKinesisActionPtrOutput)
}

func (o TopicRuleKinesisActionOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKinesisAction) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

func (o TopicRuleKinesisActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKinesisAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleKinesisActionOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKinesisAction) string { return v.StreamName }).(pulumi.StringOutput)
}

type TopicRuleKinesisActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleKinesisActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesisAction)(nil)).Elem()
}

func (o TopicRuleKinesisActionPtrOutput) ToTopicRuleKinesisActionPtrOutput() TopicRuleKinesisActionPtrOutput {
	return o
}

func (o TopicRuleKinesisActionPtrOutput) ToTopicRuleKinesisActionPtrOutputWithContext(ctx context.Context) TopicRuleKinesisActionPtrOutput {
	return o
}

func (o TopicRuleKinesisActionPtrOutput) Elem() TopicRuleKinesisActionOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) TopicRuleKinesisAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleKinesisAction
		return ret
	}).(TopicRuleKinesisActionOutput)
}

func (o TopicRuleKinesisActionPtrOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) *string {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleKinesisActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleKinesisActionPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesisAction) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleLambdaAction struct {
	FunctionArn *string `pulumi:"functionArn"`
}

// TopicRuleLambdaActionInput is an input type that accepts TopicRuleLambdaActionArgs and TopicRuleLambdaActionOutput values.
// You can construct a concrete instance of `TopicRuleLambdaActionInput` via:
//
//          TopicRuleLambdaActionArgs{...}
type TopicRuleLambdaActionInput interface {
	pulumi.Input

	ToTopicRuleLambdaActionOutput() TopicRuleLambdaActionOutput
	ToTopicRuleLambdaActionOutputWithContext(context.Context) TopicRuleLambdaActionOutput
}

type TopicRuleLambdaActionArgs struct {
	FunctionArn pulumi.StringPtrInput `pulumi:"functionArn"`
}

func (TopicRuleLambdaActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLambdaAction)(nil)).Elem()
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionOutput() TopicRuleLambdaActionOutput {
	return i.ToTopicRuleLambdaActionOutputWithContext(context.Background())
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionOutputWithContext(ctx context.Context) TopicRuleLambdaActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaActionOutput)
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return i.ToTopicRuleLambdaActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleLambdaActionArgs) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaActionOutput).ToTopicRuleLambdaActionPtrOutputWithContext(ctx)
}

// TopicRuleLambdaActionPtrInput is an input type that accepts TopicRuleLambdaActionArgs, TopicRuleLambdaActionPtr and TopicRuleLambdaActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleLambdaActionPtrInput` via:
//
//          TopicRuleLambdaActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleLambdaActionPtrInput interface {
	pulumi.Input

	ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput
	ToTopicRuleLambdaActionPtrOutputWithContext(context.Context) TopicRuleLambdaActionPtrOutput
}

type topicRuleLambdaActionPtrType TopicRuleLambdaActionArgs

func TopicRuleLambdaActionPtr(v *TopicRuleLambdaActionArgs) TopicRuleLambdaActionPtrInput {
	return (*topicRuleLambdaActionPtrType)(v)
}

func (*topicRuleLambdaActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLambdaAction)(nil)).Elem()
}

func (i *topicRuleLambdaActionPtrType) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return i.ToTopicRuleLambdaActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleLambdaActionPtrType) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaActionPtrOutput)
}

type TopicRuleLambdaActionOutput struct{ *pulumi.OutputState }

func (TopicRuleLambdaActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLambdaAction)(nil)).Elem()
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionOutput() TopicRuleLambdaActionOutput {
	return o
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionOutputWithContext(ctx context.Context) TopicRuleLambdaActionOutput {
	return o
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return o.ToTopicRuleLambdaActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleLambdaActionOutput) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleLambdaAction) *TopicRuleLambdaAction {
		return &v
	}).(TopicRuleLambdaActionPtrOutput)
}

func (o TopicRuleLambdaActionOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleLambdaAction) *string { return v.FunctionArn }).(pulumi.StringPtrOutput)
}

type TopicRuleLambdaActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleLambdaActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLambdaAction)(nil)).Elem()
}

func (o TopicRuleLambdaActionPtrOutput) ToTopicRuleLambdaActionPtrOutput() TopicRuleLambdaActionPtrOutput {
	return o
}

func (o TopicRuleLambdaActionPtrOutput) ToTopicRuleLambdaActionPtrOutputWithContext(ctx context.Context) TopicRuleLambdaActionPtrOutput {
	return o
}

func (o TopicRuleLambdaActionPtrOutput) Elem() TopicRuleLambdaActionOutput {
	return o.ApplyT(func(v *TopicRuleLambdaAction) TopicRuleLambdaAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleLambdaAction
		return ret
	}).(TopicRuleLambdaActionOutput)
}

func (o TopicRuleLambdaActionPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLambdaAction) *string {
		if v == nil {
			return nil
		}
		return v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleOpenSearchAction struct {
	Endpoint string `pulumi:"endpoint"`
	Id       string `pulumi:"id"`
	Index    string `pulumi:"index"`
	RoleArn  string `pulumi:"roleArn"`
	Type     string `pulumi:"type"`
}

// TopicRuleOpenSearchActionInput is an input type that accepts TopicRuleOpenSearchActionArgs and TopicRuleOpenSearchActionOutput values.
// You can construct a concrete instance of `TopicRuleOpenSearchActionInput` via:
//
//          TopicRuleOpenSearchActionArgs{...}
type TopicRuleOpenSearchActionInput interface {
	pulumi.Input

	ToTopicRuleOpenSearchActionOutput() TopicRuleOpenSearchActionOutput
	ToTopicRuleOpenSearchActionOutputWithContext(context.Context) TopicRuleOpenSearchActionOutput
}

type TopicRuleOpenSearchActionArgs struct {
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	Id       pulumi.StringInput `pulumi:"id"`
	Index    pulumi.StringInput `pulumi:"index"`
	RoleArn  pulumi.StringInput `pulumi:"roleArn"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (TopicRuleOpenSearchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleOpenSearchAction)(nil)).Elem()
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionOutput() TopicRuleOpenSearchActionOutput {
	return i.ToTopicRuleOpenSearchActionOutputWithContext(context.Background())
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleOpenSearchActionOutput)
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return i.ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleOpenSearchActionArgs) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleOpenSearchActionOutput).ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx)
}

// TopicRuleOpenSearchActionPtrInput is an input type that accepts TopicRuleOpenSearchActionArgs, TopicRuleOpenSearchActionPtr and TopicRuleOpenSearchActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleOpenSearchActionPtrInput` via:
//
//          TopicRuleOpenSearchActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleOpenSearchActionPtrInput interface {
	pulumi.Input

	ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput
	ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Context) TopicRuleOpenSearchActionPtrOutput
}

type topicRuleOpenSearchActionPtrType TopicRuleOpenSearchActionArgs

func TopicRuleOpenSearchActionPtr(v *TopicRuleOpenSearchActionArgs) TopicRuleOpenSearchActionPtrInput {
	return (*topicRuleOpenSearchActionPtrType)(v)
}

func (*topicRuleOpenSearchActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleOpenSearchAction)(nil)).Elem()
}

func (i *topicRuleOpenSearchActionPtrType) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return i.ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleOpenSearchActionPtrType) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleOpenSearchActionPtrOutput)
}

type TopicRuleOpenSearchActionOutput struct{ *pulumi.OutputState }

func (TopicRuleOpenSearchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleOpenSearchAction)(nil)).Elem()
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionOutput() TopicRuleOpenSearchActionOutput {
	return o
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionOutput {
	return o
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return o.ToTopicRuleOpenSearchActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleOpenSearchActionOutput) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleOpenSearchAction) *TopicRuleOpenSearchAction {
		return &v
	}).(TopicRuleOpenSearchActionPtrOutput)
}

func (o TopicRuleOpenSearchActionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o TopicRuleOpenSearchActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Id }).(pulumi.StringOutput)
}

func (o TopicRuleOpenSearchActionOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Index }).(pulumi.StringOutput)
}

func (o TopicRuleOpenSearchActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleOpenSearchActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleOpenSearchAction) string { return v.Type }).(pulumi.StringOutput)
}

type TopicRuleOpenSearchActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleOpenSearchActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleOpenSearchAction)(nil)).Elem()
}

func (o TopicRuleOpenSearchActionPtrOutput) ToTopicRuleOpenSearchActionPtrOutput() TopicRuleOpenSearchActionPtrOutput {
	return o
}

func (o TopicRuleOpenSearchActionPtrOutput) ToTopicRuleOpenSearchActionPtrOutputWithContext(ctx context.Context) TopicRuleOpenSearchActionPtrOutput {
	return o
}

func (o TopicRuleOpenSearchActionPtrOutput) Elem() TopicRuleOpenSearchActionOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) TopicRuleOpenSearchAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleOpenSearchAction
		return ret
	}).(TopicRuleOpenSearchActionOutput)
}

func (o TopicRuleOpenSearchActionPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleOpenSearchActionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleOpenSearchActionPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleOpenSearchActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleOpenSearchActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleOpenSearchAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TopicRulePayload struct {
	Actions          []TopicRuleAction `pulumi:"actions"`
	AwsIotSqlVersion *string           `pulumi:"awsIotSqlVersion"`
	Description      *string           `pulumi:"description"`
	ErrorAction      *TopicRuleAction  `pulumi:"errorAction"`
	RuleDisabled     *bool             `pulumi:"ruleDisabled"`
	Sql              string            `pulumi:"sql"`
}

// TopicRulePayloadInput is an input type that accepts TopicRulePayloadArgs and TopicRulePayloadOutput values.
// You can construct a concrete instance of `TopicRulePayloadInput` via:
//
//          TopicRulePayloadArgs{...}
type TopicRulePayloadInput interface {
	pulumi.Input

	ToTopicRulePayloadOutput() TopicRulePayloadOutput
	ToTopicRulePayloadOutputWithContext(context.Context) TopicRulePayloadOutput
}

type TopicRulePayloadArgs struct {
	Actions          TopicRuleActionArrayInput `pulumi:"actions"`
	AwsIotSqlVersion pulumi.StringPtrInput     `pulumi:"awsIotSqlVersion"`
	Description      pulumi.StringPtrInput     `pulumi:"description"`
	ErrorAction      TopicRuleActionPtrInput   `pulumi:"errorAction"`
	RuleDisabled     pulumi.BoolPtrInput       `pulumi:"ruleDisabled"`
	Sql              pulumi.StringInput        `pulumi:"sql"`
}

func (TopicRulePayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePayload)(nil)).Elem()
}

func (i TopicRulePayloadArgs) ToTopicRulePayloadOutput() TopicRulePayloadOutput {
	return i.ToTopicRulePayloadOutputWithContext(context.Background())
}

func (i TopicRulePayloadArgs) ToTopicRulePayloadOutputWithContext(ctx context.Context) TopicRulePayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePayloadOutput)
}

func (i TopicRulePayloadArgs) ToTopicRulePayloadPtrOutput() TopicRulePayloadPtrOutput {
	return i.ToTopicRulePayloadPtrOutputWithContext(context.Background())
}

func (i TopicRulePayloadArgs) ToTopicRulePayloadPtrOutputWithContext(ctx context.Context) TopicRulePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePayloadOutput).ToTopicRulePayloadPtrOutputWithContext(ctx)
}

// TopicRulePayloadPtrInput is an input type that accepts TopicRulePayloadArgs, TopicRulePayloadPtr and TopicRulePayloadPtrOutput values.
// You can construct a concrete instance of `TopicRulePayloadPtrInput` via:
//
//          TopicRulePayloadArgs{...}
//
//  or:
//
//          nil
type TopicRulePayloadPtrInput interface {
	pulumi.Input

	ToTopicRulePayloadPtrOutput() TopicRulePayloadPtrOutput
	ToTopicRulePayloadPtrOutputWithContext(context.Context) TopicRulePayloadPtrOutput
}

type topicRulePayloadPtrType TopicRulePayloadArgs

func TopicRulePayloadPtr(v *TopicRulePayloadArgs) TopicRulePayloadPtrInput {
	return (*topicRulePayloadPtrType)(v)
}

func (*topicRulePayloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePayload)(nil)).Elem()
}

func (i *topicRulePayloadPtrType) ToTopicRulePayloadPtrOutput() TopicRulePayloadPtrOutput {
	return i.ToTopicRulePayloadPtrOutputWithContext(context.Background())
}

func (i *topicRulePayloadPtrType) ToTopicRulePayloadPtrOutputWithContext(ctx context.Context) TopicRulePayloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePayloadPtrOutput)
}

type TopicRulePayloadOutput struct{ *pulumi.OutputState }

func (TopicRulePayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePayload)(nil)).Elem()
}

func (o TopicRulePayloadOutput) ToTopicRulePayloadOutput() TopicRulePayloadOutput {
	return o
}

func (o TopicRulePayloadOutput) ToTopicRulePayloadOutputWithContext(ctx context.Context) TopicRulePayloadOutput {
	return o
}

func (o TopicRulePayloadOutput) ToTopicRulePayloadPtrOutput() TopicRulePayloadPtrOutput {
	return o.ToTopicRulePayloadPtrOutputWithContext(context.Background())
}

func (o TopicRulePayloadOutput) ToTopicRulePayloadPtrOutputWithContext(ctx context.Context) TopicRulePayloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRulePayload) *TopicRulePayload {
		return &v
	}).(TopicRulePayloadPtrOutput)
}

func (o TopicRulePayloadOutput) Actions() TopicRuleActionArrayOutput {
	return o.ApplyT(func(v TopicRulePayload) []TopicRuleAction { return v.Actions }).(TopicRuleActionArrayOutput)
}

func (o TopicRulePayloadOutput) AwsIotSqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *string { return v.AwsIotSqlVersion }).(pulumi.StringPtrOutput)
}

func (o TopicRulePayloadOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicRulePayloadOutput) ErrorAction() TopicRuleActionPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *TopicRuleAction { return v.ErrorAction }).(TopicRuleActionPtrOutput)
}

func (o TopicRulePayloadOutput) RuleDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRulePayload) *bool { return v.RuleDisabled }).(pulumi.BoolPtrOutput)
}

func (o TopicRulePayloadOutput) Sql() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRulePayload) string { return v.Sql }).(pulumi.StringOutput)
}

type TopicRulePayloadPtrOutput struct{ *pulumi.OutputState }

func (TopicRulePayloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePayload)(nil)).Elem()
}

func (o TopicRulePayloadPtrOutput) ToTopicRulePayloadPtrOutput() TopicRulePayloadPtrOutput {
	return o
}

func (o TopicRulePayloadPtrOutput) ToTopicRulePayloadPtrOutputWithContext(ctx context.Context) TopicRulePayloadPtrOutput {
	return o
}

func (o TopicRulePayloadPtrOutput) Elem() TopicRulePayloadOutput {
	return o.ApplyT(func(v *TopicRulePayload) TopicRulePayload {
		if v != nil {
			return *v
		}
		var ret TopicRulePayload
		return ret
	}).(TopicRulePayloadOutput)
}

func (o TopicRulePayloadPtrOutput) Actions() TopicRuleActionArrayOutput {
	return o.ApplyT(func(v *TopicRulePayload) []TopicRuleAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TopicRuleActionArrayOutput)
}

func (o TopicRulePayloadPtrOutput) AwsIotSqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *string {
		if v == nil {
			return nil
		}
		return v.AwsIotSqlVersion
	}).(pulumi.StringPtrOutput)
}

func (o TopicRulePayloadPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TopicRulePayloadPtrOutput) ErrorAction() TopicRuleActionPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *TopicRuleAction {
		if v == nil {
			return nil
		}
		return v.ErrorAction
	}).(TopicRuleActionPtrOutput)
}

func (o TopicRulePayloadPtrOutput) RuleDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *bool {
		if v == nil {
			return nil
		}
		return v.RuleDisabled
	}).(pulumi.BoolPtrOutput)
}

func (o TopicRulePayloadPtrOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePayload) *string {
		if v == nil {
			return nil
		}
		return &v.Sql
	}).(pulumi.StringPtrOutput)
}

type TopicRulePutAssetPropertyValueEntry struct {
	AssetId        *string                       `pulumi:"assetId"`
	EntryId        *string                       `pulumi:"entryId"`
	PropertyAlias  *string                       `pulumi:"propertyAlias"`
	PropertyId     *string                       `pulumi:"propertyId"`
	PropertyValues []TopicRuleAssetPropertyValue `pulumi:"propertyValues"`
}

// TopicRulePutAssetPropertyValueEntryInput is an input type that accepts TopicRulePutAssetPropertyValueEntryArgs and TopicRulePutAssetPropertyValueEntryOutput values.
// You can construct a concrete instance of `TopicRulePutAssetPropertyValueEntryInput` via:
//
//          TopicRulePutAssetPropertyValueEntryArgs{...}
type TopicRulePutAssetPropertyValueEntryInput interface {
	pulumi.Input

	ToTopicRulePutAssetPropertyValueEntryOutput() TopicRulePutAssetPropertyValueEntryOutput
	ToTopicRulePutAssetPropertyValueEntryOutputWithContext(context.Context) TopicRulePutAssetPropertyValueEntryOutput
}

type TopicRulePutAssetPropertyValueEntryArgs struct {
	AssetId        pulumi.StringPtrInput                 `pulumi:"assetId"`
	EntryId        pulumi.StringPtrInput                 `pulumi:"entryId"`
	PropertyAlias  pulumi.StringPtrInput                 `pulumi:"propertyAlias"`
	PropertyId     pulumi.StringPtrInput                 `pulumi:"propertyId"`
	PropertyValues TopicRuleAssetPropertyValueArrayInput `pulumi:"propertyValues"`
}

func (TopicRulePutAssetPropertyValueEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (i TopicRulePutAssetPropertyValueEntryArgs) ToTopicRulePutAssetPropertyValueEntryOutput() TopicRulePutAssetPropertyValueEntryOutput {
	return i.ToTopicRulePutAssetPropertyValueEntryOutputWithContext(context.Background())
}

func (i TopicRulePutAssetPropertyValueEntryArgs) ToTopicRulePutAssetPropertyValueEntryOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutAssetPropertyValueEntryOutput)
}

// TopicRulePutAssetPropertyValueEntryArrayInput is an input type that accepts TopicRulePutAssetPropertyValueEntryArray and TopicRulePutAssetPropertyValueEntryArrayOutput values.
// You can construct a concrete instance of `TopicRulePutAssetPropertyValueEntryArrayInput` via:
//
//          TopicRulePutAssetPropertyValueEntryArray{ TopicRulePutAssetPropertyValueEntryArgs{...} }
type TopicRulePutAssetPropertyValueEntryArrayInput interface {
	pulumi.Input

	ToTopicRulePutAssetPropertyValueEntryArrayOutput() TopicRulePutAssetPropertyValueEntryArrayOutput
	ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(context.Context) TopicRulePutAssetPropertyValueEntryArrayOutput
}

type TopicRulePutAssetPropertyValueEntryArray []TopicRulePutAssetPropertyValueEntryInput

func (TopicRulePutAssetPropertyValueEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (i TopicRulePutAssetPropertyValueEntryArray) ToTopicRulePutAssetPropertyValueEntryArrayOutput() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return i.ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(context.Background())
}

func (i TopicRulePutAssetPropertyValueEntryArray) ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutAssetPropertyValueEntryArrayOutput)
}

type TopicRulePutAssetPropertyValueEntryOutput struct{ *pulumi.OutputState }

func (TopicRulePutAssetPropertyValueEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (o TopicRulePutAssetPropertyValueEntryOutput) ToTopicRulePutAssetPropertyValueEntryOutput() TopicRulePutAssetPropertyValueEntryOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryOutput) ToTopicRulePutAssetPropertyValueEntryOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.AssetId }).(pulumi.StringPtrOutput)
}

func (o TopicRulePutAssetPropertyValueEntryOutput) EntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.EntryId }).(pulumi.StringPtrOutput)
}

func (o TopicRulePutAssetPropertyValueEntryOutput) PropertyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.PropertyAlias }).(pulumi.StringPtrOutput)
}

func (o TopicRulePutAssetPropertyValueEntryOutput) PropertyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) *string { return v.PropertyId }).(pulumi.StringPtrOutput)
}

func (o TopicRulePutAssetPropertyValueEntryOutput) PropertyValues() TopicRuleAssetPropertyValueArrayOutput {
	return o.ApplyT(func(v TopicRulePutAssetPropertyValueEntry) []TopicRuleAssetPropertyValue { return v.PropertyValues }).(TopicRuleAssetPropertyValueArrayOutput)
}

type TopicRulePutAssetPropertyValueEntryArrayOutput struct{ *pulumi.OutputState }

func (TopicRulePutAssetPropertyValueEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRulePutAssetPropertyValueEntry)(nil)).Elem()
}

func (o TopicRulePutAssetPropertyValueEntryArrayOutput) ToTopicRulePutAssetPropertyValueEntryArrayOutput() TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryArrayOutput) ToTopicRulePutAssetPropertyValueEntryArrayOutputWithContext(ctx context.Context) TopicRulePutAssetPropertyValueEntryArrayOutput {
	return o
}

func (o TopicRulePutAssetPropertyValueEntryArrayOutput) Index(i pulumi.IntInput) TopicRulePutAssetPropertyValueEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRulePutAssetPropertyValueEntry {
		return vs[0].([]TopicRulePutAssetPropertyValueEntry)[vs[1].(int)]
	}).(TopicRulePutAssetPropertyValueEntryOutput)
}

type TopicRulePutItemInput struct {
	TableName string `pulumi:"tableName"`
}

// TopicRulePutItemInputInput is an input type that accepts TopicRulePutItemInputArgs and TopicRulePutItemInputOutput values.
// You can construct a concrete instance of `TopicRulePutItemInputInput` via:
//
//          TopicRulePutItemInputArgs{...}
type TopicRulePutItemInputInput interface {
	pulumi.Input

	ToTopicRulePutItemInputOutput() TopicRulePutItemInputOutput
	ToTopicRulePutItemInputOutputWithContext(context.Context) TopicRulePutItemInputOutput
}

type TopicRulePutItemInputArgs struct {
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (TopicRulePutItemInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutItemInput)(nil)).Elem()
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputOutput() TopicRulePutItemInputOutput {
	return i.ToTopicRulePutItemInputOutputWithContext(context.Background())
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputOutputWithContext(ctx context.Context) TopicRulePutItemInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutItemInputOutput)
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return i.ToTopicRulePutItemInputPtrOutputWithContext(context.Background())
}

func (i TopicRulePutItemInputArgs) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutItemInputOutput).ToTopicRulePutItemInputPtrOutputWithContext(ctx)
}

// TopicRulePutItemInputPtrInput is an input type that accepts TopicRulePutItemInputArgs, TopicRulePutItemInputPtr and TopicRulePutItemInputPtrOutput values.
// You can construct a concrete instance of `TopicRulePutItemInputPtrInput` via:
//
//          TopicRulePutItemInputArgs{...}
//
//  or:
//
//          nil
type TopicRulePutItemInputPtrInput interface {
	pulumi.Input

	ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput
	ToTopicRulePutItemInputPtrOutputWithContext(context.Context) TopicRulePutItemInputPtrOutput
}

type topicRulePutItemInputPtrType TopicRulePutItemInputArgs

func TopicRulePutItemInputPtr(v *TopicRulePutItemInputArgs) TopicRulePutItemInputPtrInput {
	return (*topicRulePutItemInputPtrType)(v)
}

func (*topicRulePutItemInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePutItemInput)(nil)).Elem()
}

func (i *topicRulePutItemInputPtrType) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return i.ToTopicRulePutItemInputPtrOutputWithContext(context.Background())
}

func (i *topicRulePutItemInputPtrType) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRulePutItemInputPtrOutput)
}

type TopicRulePutItemInputOutput struct{ *pulumi.OutputState }

func (TopicRulePutItemInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRulePutItemInput)(nil)).Elem()
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputOutput() TopicRulePutItemInputOutput {
	return o
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputOutputWithContext(ctx context.Context) TopicRulePutItemInputOutput {
	return o
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return o.ToTopicRulePutItemInputPtrOutputWithContext(context.Background())
}

func (o TopicRulePutItemInputOutput) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRulePutItemInput) *TopicRulePutItemInput {
		return &v
	}).(TopicRulePutItemInputPtrOutput)
}

func (o TopicRulePutItemInputOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRulePutItemInput) string { return v.TableName }).(pulumi.StringOutput)
}

type TopicRulePutItemInputPtrOutput struct{ *pulumi.OutputState }

func (TopicRulePutItemInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRulePutItemInput)(nil)).Elem()
}

func (o TopicRulePutItemInputPtrOutput) ToTopicRulePutItemInputPtrOutput() TopicRulePutItemInputPtrOutput {
	return o
}

func (o TopicRulePutItemInputPtrOutput) ToTopicRulePutItemInputPtrOutputWithContext(ctx context.Context) TopicRulePutItemInputPtrOutput {
	return o
}

func (o TopicRulePutItemInputPtrOutput) Elem() TopicRulePutItemInputOutput {
	return o.ApplyT(func(v *TopicRulePutItemInput) TopicRulePutItemInput {
		if v != nil {
			return *v
		}
		var ret TopicRulePutItemInput
		return ret
	}).(TopicRulePutItemInputOutput)
}

func (o TopicRulePutItemInputPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRulePutItemInput) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleRepublishAction struct {
	Qos     *int   `pulumi:"qos"`
	RoleArn string `pulumi:"roleArn"`
	Topic   string `pulumi:"topic"`
}

// TopicRuleRepublishActionInput is an input type that accepts TopicRuleRepublishActionArgs and TopicRuleRepublishActionOutput values.
// You can construct a concrete instance of `TopicRuleRepublishActionInput` via:
//
//          TopicRuleRepublishActionArgs{...}
type TopicRuleRepublishActionInput interface {
	pulumi.Input

	ToTopicRuleRepublishActionOutput() TopicRuleRepublishActionOutput
	ToTopicRuleRepublishActionOutputWithContext(context.Context) TopicRuleRepublishActionOutput
}

type TopicRuleRepublishActionArgs struct {
	Qos     pulumi.IntPtrInput `pulumi:"qos"`
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	Topic   pulumi.StringInput `pulumi:"topic"`
}

func (TopicRuleRepublishActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublishAction)(nil)).Elem()
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionOutput() TopicRuleRepublishActionOutput {
	return i.ToTopicRuleRepublishActionOutputWithContext(context.Background())
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionOutputWithContext(ctx context.Context) TopicRuleRepublishActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionOutput)
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return i.ToTopicRuleRepublishActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleRepublishActionArgs) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionOutput).ToTopicRuleRepublishActionPtrOutputWithContext(ctx)
}

// TopicRuleRepublishActionPtrInput is an input type that accepts TopicRuleRepublishActionArgs, TopicRuleRepublishActionPtr and TopicRuleRepublishActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleRepublishActionPtrInput` via:
//
//          TopicRuleRepublishActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleRepublishActionPtrInput interface {
	pulumi.Input

	ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput
	ToTopicRuleRepublishActionPtrOutputWithContext(context.Context) TopicRuleRepublishActionPtrOutput
}

type topicRuleRepublishActionPtrType TopicRuleRepublishActionArgs

func TopicRuleRepublishActionPtr(v *TopicRuleRepublishActionArgs) TopicRuleRepublishActionPtrInput {
	return (*topicRuleRepublishActionPtrType)(v)
}

func (*topicRuleRepublishActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublishAction)(nil)).Elem()
}

func (i *topicRuleRepublishActionPtrType) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return i.ToTopicRuleRepublishActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleRepublishActionPtrType) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishActionPtrOutput)
}

type TopicRuleRepublishActionOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublishAction)(nil)).Elem()
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionOutput() TopicRuleRepublishActionOutput {
	return o
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionOutputWithContext(ctx context.Context) TopicRuleRepublishActionOutput {
	return o
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return o.ToTopicRuleRepublishActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleRepublishActionOutput) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleRepublishAction) *TopicRuleRepublishAction {
		return &v
	}).(TopicRuleRepublishActionPtrOutput)
}

func (o TopicRuleRepublishActionOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) *int { return v.Qos }).(pulumi.IntPtrOutput)
}

func (o TopicRuleRepublishActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleRepublishActionOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleRepublishAction) string { return v.Topic }).(pulumi.StringOutput)
}

type TopicRuleRepublishActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublishAction)(nil)).Elem()
}

func (o TopicRuleRepublishActionPtrOutput) ToTopicRuleRepublishActionPtrOutput() TopicRuleRepublishActionPtrOutput {
	return o
}

func (o TopicRuleRepublishActionPtrOutput) ToTopicRuleRepublishActionPtrOutputWithContext(ctx context.Context) TopicRuleRepublishActionPtrOutput {
	return o
}

func (o TopicRuleRepublishActionPtrOutput) Elem() TopicRuleRepublishActionOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) TopicRuleRepublishAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleRepublishAction
		return ret
	}).(TopicRuleRepublishActionOutput)
}

func (o TopicRuleRepublishActionPtrOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *int {
		if v == nil {
			return nil
		}
		return v.Qos
	}).(pulumi.IntPtrOutput)
}

func (o TopicRuleRepublishActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleRepublishActionPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublishAction) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type TopicRuleS3Action struct {
	BucketName string                            `pulumi:"bucketName"`
	CannedAcl  *TopicRuleCannedAccessControlList `pulumi:"cannedAcl"`
	Key        string                            `pulumi:"key"`
	RoleArn    string                            `pulumi:"roleArn"`
}

// TopicRuleS3ActionInput is an input type that accepts TopicRuleS3ActionArgs and TopicRuleS3ActionOutput values.
// You can construct a concrete instance of `TopicRuleS3ActionInput` via:
//
//          TopicRuleS3ActionArgs{...}
type TopicRuleS3ActionInput interface {
	pulumi.Input

	ToTopicRuleS3ActionOutput() TopicRuleS3ActionOutput
	ToTopicRuleS3ActionOutputWithContext(context.Context) TopicRuleS3ActionOutput
}

type TopicRuleS3ActionArgs struct {
	BucketName pulumi.StringInput                       `pulumi:"bucketName"`
	CannedAcl  TopicRuleCannedAccessControlListPtrInput `pulumi:"cannedAcl"`
	Key        pulumi.StringInput                       `pulumi:"key"`
	RoleArn    pulumi.StringInput                       `pulumi:"roleArn"`
}

func (TopicRuleS3ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3Action)(nil)).Elem()
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionOutput() TopicRuleS3ActionOutput {
	return i.ToTopicRuleS3ActionOutputWithContext(context.Background())
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionOutputWithContext(ctx context.Context) TopicRuleS3ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3ActionOutput)
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return i.ToTopicRuleS3ActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleS3ActionArgs) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3ActionOutput).ToTopicRuleS3ActionPtrOutputWithContext(ctx)
}

// TopicRuleS3ActionPtrInput is an input type that accepts TopicRuleS3ActionArgs, TopicRuleS3ActionPtr and TopicRuleS3ActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleS3ActionPtrInput` via:
//
//          TopicRuleS3ActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleS3ActionPtrInput interface {
	pulumi.Input

	ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput
	ToTopicRuleS3ActionPtrOutputWithContext(context.Context) TopicRuleS3ActionPtrOutput
}

type topicRuleS3ActionPtrType TopicRuleS3ActionArgs

func TopicRuleS3ActionPtr(v *TopicRuleS3ActionArgs) TopicRuleS3ActionPtrInput {
	return (*topicRuleS3ActionPtrType)(v)
}

func (*topicRuleS3ActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3Action)(nil)).Elem()
}

func (i *topicRuleS3ActionPtrType) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return i.ToTopicRuleS3ActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleS3ActionPtrType) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3ActionPtrOutput)
}

type TopicRuleS3ActionOutput struct{ *pulumi.OutputState }

func (TopicRuleS3ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3Action)(nil)).Elem()
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionOutput() TopicRuleS3ActionOutput {
	return o
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionOutputWithContext(ctx context.Context) TopicRuleS3ActionOutput {
	return o
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return o.ToTopicRuleS3ActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleS3ActionOutput) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleS3Action) *TopicRuleS3Action {
		return &v
	}).(TopicRuleS3ActionPtrOutput)
}

func (o TopicRuleS3ActionOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3Action) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o TopicRuleS3ActionOutput) CannedAcl() TopicRuleCannedAccessControlListPtrOutput {
	return o.ApplyT(func(v TopicRuleS3Action) *TopicRuleCannedAccessControlList { return v.CannedAcl }).(TopicRuleCannedAccessControlListPtrOutput)
}

func (o TopicRuleS3ActionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3Action) string { return v.Key }).(pulumi.StringOutput)
}

func (o TopicRuleS3ActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3Action) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleS3ActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleS3ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3Action)(nil)).Elem()
}

func (o TopicRuleS3ActionPtrOutput) ToTopicRuleS3ActionPtrOutput() TopicRuleS3ActionPtrOutput {
	return o
}

func (o TopicRuleS3ActionPtrOutput) ToTopicRuleS3ActionPtrOutputWithContext(ctx context.Context) TopicRuleS3ActionPtrOutput {
	return o
}

func (o TopicRuleS3ActionPtrOutput) Elem() TopicRuleS3ActionOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) TopicRuleS3Action {
		if v != nil {
			return *v
		}
		var ret TopicRuleS3Action
		return ret
	}).(TopicRuleS3ActionOutput)
}

func (o TopicRuleS3ActionPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleS3ActionPtrOutput) CannedAcl() TopicRuleCannedAccessControlListPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *TopicRuleCannedAccessControlList {
		if v == nil {
			return nil
		}
		return v.CannedAcl
	}).(TopicRuleCannedAccessControlListPtrOutput)
}

func (o TopicRuleS3ActionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleS3ActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3Action) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSigV4Authorization struct {
	RoleArn       string `pulumi:"roleArn"`
	ServiceName   string `pulumi:"serviceName"`
	SigningRegion string `pulumi:"signingRegion"`
}

// TopicRuleSigV4AuthorizationInput is an input type that accepts TopicRuleSigV4AuthorizationArgs and TopicRuleSigV4AuthorizationOutput values.
// You can construct a concrete instance of `TopicRuleSigV4AuthorizationInput` via:
//
//          TopicRuleSigV4AuthorizationArgs{...}
type TopicRuleSigV4AuthorizationInput interface {
	pulumi.Input

	ToTopicRuleSigV4AuthorizationOutput() TopicRuleSigV4AuthorizationOutput
	ToTopicRuleSigV4AuthorizationOutputWithContext(context.Context) TopicRuleSigV4AuthorizationOutput
}

type TopicRuleSigV4AuthorizationArgs struct {
	RoleArn       pulumi.StringInput `pulumi:"roleArn"`
	ServiceName   pulumi.StringInput `pulumi:"serviceName"`
	SigningRegion pulumi.StringInput `pulumi:"signingRegion"`
}

func (TopicRuleSigV4AuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSigV4Authorization)(nil)).Elem()
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationOutput() TopicRuleSigV4AuthorizationOutput {
	return i.ToTopicRuleSigV4AuthorizationOutputWithContext(context.Background())
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSigV4AuthorizationOutput)
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return i.ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Background())
}

func (i TopicRuleSigV4AuthorizationArgs) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSigV4AuthorizationOutput).ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx)
}

// TopicRuleSigV4AuthorizationPtrInput is an input type that accepts TopicRuleSigV4AuthorizationArgs, TopicRuleSigV4AuthorizationPtr and TopicRuleSigV4AuthorizationPtrOutput values.
// You can construct a concrete instance of `TopicRuleSigV4AuthorizationPtrInput` via:
//
//          TopicRuleSigV4AuthorizationArgs{...}
//
//  or:
//
//          nil
type TopicRuleSigV4AuthorizationPtrInput interface {
	pulumi.Input

	ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput
	ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Context) TopicRuleSigV4AuthorizationPtrOutput
}

type topicRuleSigV4AuthorizationPtrType TopicRuleSigV4AuthorizationArgs

func TopicRuleSigV4AuthorizationPtr(v *TopicRuleSigV4AuthorizationArgs) TopicRuleSigV4AuthorizationPtrInput {
	return (*topicRuleSigV4AuthorizationPtrType)(v)
}

func (*topicRuleSigV4AuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSigV4Authorization)(nil)).Elem()
}

func (i *topicRuleSigV4AuthorizationPtrType) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return i.ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Background())
}

func (i *topicRuleSigV4AuthorizationPtrType) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSigV4AuthorizationPtrOutput)
}

type TopicRuleSigV4AuthorizationOutput struct{ *pulumi.OutputState }

func (TopicRuleSigV4AuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSigV4Authorization)(nil)).Elem()
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationOutput() TopicRuleSigV4AuthorizationOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return o.ToTopicRuleSigV4AuthorizationPtrOutputWithContext(context.Background())
}

func (o TopicRuleSigV4AuthorizationOutput) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleSigV4Authorization) *TopicRuleSigV4Authorization {
		return &v
	}).(TopicRuleSigV4AuthorizationPtrOutput)
}

func (o TopicRuleSigV4AuthorizationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSigV4Authorization) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleSigV4AuthorizationOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSigV4Authorization) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o TopicRuleSigV4AuthorizationOutput) SigningRegion() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSigV4Authorization) string { return v.SigningRegion }).(pulumi.StringOutput)
}

type TopicRuleSigV4AuthorizationPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSigV4AuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSigV4Authorization)(nil)).Elem()
}

func (o TopicRuleSigV4AuthorizationPtrOutput) ToTopicRuleSigV4AuthorizationPtrOutput() TopicRuleSigV4AuthorizationPtrOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationPtrOutput) ToTopicRuleSigV4AuthorizationPtrOutputWithContext(ctx context.Context) TopicRuleSigV4AuthorizationPtrOutput {
	return o
}

func (o TopicRuleSigV4AuthorizationPtrOutput) Elem() TopicRuleSigV4AuthorizationOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) TopicRuleSigV4Authorization {
		if v != nil {
			return *v
		}
		var ret TopicRuleSigV4Authorization
		return ret
	}).(TopicRuleSigV4AuthorizationOutput)
}

func (o TopicRuleSigV4AuthorizationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleSigV4AuthorizationPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleSigV4AuthorizationPtrOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSigV4Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.SigningRegion
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSnsAction struct {
	MessageFormat *string `pulumi:"messageFormat"`
	RoleArn       string  `pulumi:"roleArn"`
	TargetArn     string  `pulumi:"targetArn"`
}

// TopicRuleSnsActionInput is an input type that accepts TopicRuleSnsActionArgs and TopicRuleSnsActionOutput values.
// You can construct a concrete instance of `TopicRuleSnsActionInput` via:
//
//          TopicRuleSnsActionArgs{...}
type TopicRuleSnsActionInput interface {
	pulumi.Input

	ToTopicRuleSnsActionOutput() TopicRuleSnsActionOutput
	ToTopicRuleSnsActionOutputWithContext(context.Context) TopicRuleSnsActionOutput
}

type TopicRuleSnsActionArgs struct {
	MessageFormat pulumi.StringPtrInput `pulumi:"messageFormat"`
	RoleArn       pulumi.StringInput    `pulumi:"roleArn"`
	TargetArn     pulumi.StringInput    `pulumi:"targetArn"`
}

func (TopicRuleSnsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSnsAction)(nil)).Elem()
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionOutput() TopicRuleSnsActionOutput {
	return i.ToTopicRuleSnsActionOutputWithContext(context.Background())
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionOutputWithContext(ctx context.Context) TopicRuleSnsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsActionOutput)
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return i.ToTopicRuleSnsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleSnsActionArgs) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsActionOutput).ToTopicRuleSnsActionPtrOutputWithContext(ctx)
}

// TopicRuleSnsActionPtrInput is an input type that accepts TopicRuleSnsActionArgs, TopicRuleSnsActionPtr and TopicRuleSnsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleSnsActionPtrInput` via:
//
//          TopicRuleSnsActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleSnsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput
	ToTopicRuleSnsActionPtrOutputWithContext(context.Context) TopicRuleSnsActionPtrOutput
}

type topicRuleSnsActionPtrType TopicRuleSnsActionArgs

func TopicRuleSnsActionPtr(v *TopicRuleSnsActionArgs) TopicRuleSnsActionPtrInput {
	return (*topicRuleSnsActionPtrType)(v)
}

func (*topicRuleSnsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSnsAction)(nil)).Elem()
}

func (i *topicRuleSnsActionPtrType) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return i.ToTopicRuleSnsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleSnsActionPtrType) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsActionPtrOutput)
}

type TopicRuleSnsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleSnsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSnsAction)(nil)).Elem()
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionOutput() TopicRuleSnsActionOutput {
	return o
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionOutputWithContext(ctx context.Context) TopicRuleSnsActionOutput {
	return o
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return o.ToTopicRuleSnsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleSnsActionOutput) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleSnsAction) *TopicRuleSnsAction {
		return &v
	}).(TopicRuleSnsActionPtrOutput)
}

func (o TopicRuleSnsActionOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleSnsAction) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

func (o TopicRuleSnsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSnsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleSnsActionOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSnsAction) string { return v.TargetArn }).(pulumi.StringOutput)
}

type TopicRuleSnsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSnsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSnsAction)(nil)).Elem()
}

func (o TopicRuleSnsActionPtrOutput) ToTopicRuleSnsActionPtrOutput() TopicRuleSnsActionPtrOutput {
	return o
}

func (o TopicRuleSnsActionPtrOutput) ToTopicRuleSnsActionPtrOutputWithContext(ctx context.Context) TopicRuleSnsActionPtrOutput {
	return o
}

func (o TopicRuleSnsActionPtrOutput) Elem() TopicRuleSnsActionOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) TopicRuleSnsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleSnsAction
		return ret
	}).(TopicRuleSnsActionOutput)
}

func (o TopicRuleSnsActionPtrOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) *string {
		if v == nil {
			return nil
		}
		return v.MessageFormat
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleSnsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleSnsActionPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSnsAction) *string {
		if v == nil {
			return nil
		}
		return &v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSqsAction struct {
	QueueUrl  string `pulumi:"queueUrl"`
	RoleArn   string `pulumi:"roleArn"`
	UseBase64 *bool  `pulumi:"useBase64"`
}

// TopicRuleSqsActionInput is an input type that accepts TopicRuleSqsActionArgs and TopicRuleSqsActionOutput values.
// You can construct a concrete instance of `TopicRuleSqsActionInput` via:
//
//          TopicRuleSqsActionArgs{...}
type TopicRuleSqsActionInput interface {
	pulumi.Input

	ToTopicRuleSqsActionOutput() TopicRuleSqsActionOutput
	ToTopicRuleSqsActionOutputWithContext(context.Context) TopicRuleSqsActionOutput
}

type TopicRuleSqsActionArgs struct {
	QueueUrl  pulumi.StringInput  `pulumi:"queueUrl"`
	RoleArn   pulumi.StringInput  `pulumi:"roleArn"`
	UseBase64 pulumi.BoolPtrInput `pulumi:"useBase64"`
}

func (TopicRuleSqsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqsAction)(nil)).Elem()
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionOutput() TopicRuleSqsActionOutput {
	return i.ToTopicRuleSqsActionOutputWithContext(context.Background())
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionOutputWithContext(ctx context.Context) TopicRuleSqsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsActionOutput)
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return i.ToTopicRuleSqsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleSqsActionArgs) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsActionOutput).ToTopicRuleSqsActionPtrOutputWithContext(ctx)
}

// TopicRuleSqsActionPtrInput is an input type that accepts TopicRuleSqsActionArgs, TopicRuleSqsActionPtr and TopicRuleSqsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleSqsActionPtrInput` via:
//
//          TopicRuleSqsActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleSqsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput
	ToTopicRuleSqsActionPtrOutputWithContext(context.Context) TopicRuleSqsActionPtrOutput
}

type topicRuleSqsActionPtrType TopicRuleSqsActionArgs

func TopicRuleSqsActionPtr(v *TopicRuleSqsActionArgs) TopicRuleSqsActionPtrInput {
	return (*topicRuleSqsActionPtrType)(v)
}

func (*topicRuleSqsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqsAction)(nil)).Elem()
}

func (i *topicRuleSqsActionPtrType) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return i.ToTopicRuleSqsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleSqsActionPtrType) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsActionPtrOutput)
}

type TopicRuleSqsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleSqsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqsAction)(nil)).Elem()
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionOutput() TopicRuleSqsActionOutput {
	return o
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionOutputWithContext(ctx context.Context) TopicRuleSqsActionOutput {
	return o
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return o.ToTopicRuleSqsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleSqsActionOutput) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleSqsAction) *TopicRuleSqsAction {
		return &v
	}).(TopicRuleSqsActionPtrOutput)
}

func (o TopicRuleSqsActionOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSqsAction) string { return v.QueueUrl }).(pulumi.StringOutput)
}

func (o TopicRuleSqsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSqsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleSqsActionOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleSqsAction) *bool { return v.UseBase64 }).(pulumi.BoolPtrOutput)
}

type TopicRuleSqsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSqsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqsAction)(nil)).Elem()
}

func (o TopicRuleSqsActionPtrOutput) ToTopicRuleSqsActionPtrOutput() TopicRuleSqsActionPtrOutput {
	return o
}

func (o TopicRuleSqsActionPtrOutput) ToTopicRuleSqsActionPtrOutputWithContext(ctx context.Context) TopicRuleSqsActionPtrOutput {
	return o
}

func (o TopicRuleSqsActionPtrOutput) Elem() TopicRuleSqsActionOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) TopicRuleSqsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleSqsAction
		return ret
	}).(TopicRuleSqsActionOutput)
}

func (o TopicRuleSqsActionPtrOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) *string {
		if v == nil {
			return nil
		}
		return &v.QueueUrl
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleSqsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleSqsActionPtrOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqsAction) *bool {
		if v == nil {
			return nil
		}
		return v.UseBase64
	}).(pulumi.BoolPtrOutput)
}

type TopicRuleStepFunctionsAction struct {
	ExecutionNamePrefix *string `pulumi:"executionNamePrefix"`
	RoleArn             string  `pulumi:"roleArn"`
	StateMachineName    string  `pulumi:"stateMachineName"`
}

// TopicRuleStepFunctionsActionInput is an input type that accepts TopicRuleStepFunctionsActionArgs and TopicRuleStepFunctionsActionOutput values.
// You can construct a concrete instance of `TopicRuleStepFunctionsActionInput` via:
//
//          TopicRuleStepFunctionsActionArgs{...}
type TopicRuleStepFunctionsActionInput interface {
	pulumi.Input

	ToTopicRuleStepFunctionsActionOutput() TopicRuleStepFunctionsActionOutput
	ToTopicRuleStepFunctionsActionOutputWithContext(context.Context) TopicRuleStepFunctionsActionOutput
}

type TopicRuleStepFunctionsActionArgs struct {
	ExecutionNamePrefix pulumi.StringPtrInput `pulumi:"executionNamePrefix"`
	RoleArn             pulumi.StringInput    `pulumi:"roleArn"`
	StateMachineName    pulumi.StringInput    `pulumi:"stateMachineName"`
}

func (TopicRuleStepFunctionsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionOutput() TopicRuleStepFunctionsActionOutput {
	return i.ToTopicRuleStepFunctionsActionOutputWithContext(context.Background())
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionsActionOutput)
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return i.ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleStepFunctionsActionArgs) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionsActionOutput).ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx)
}

// TopicRuleStepFunctionsActionPtrInput is an input type that accepts TopicRuleStepFunctionsActionArgs, TopicRuleStepFunctionsActionPtr and TopicRuleStepFunctionsActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleStepFunctionsActionPtrInput` via:
//
//          TopicRuleStepFunctionsActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleStepFunctionsActionPtrInput interface {
	pulumi.Input

	ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput
	ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Context) TopicRuleStepFunctionsActionPtrOutput
}

type topicRuleStepFunctionsActionPtrType TopicRuleStepFunctionsActionArgs

func TopicRuleStepFunctionsActionPtr(v *TopicRuleStepFunctionsActionArgs) TopicRuleStepFunctionsActionPtrInput {
	return (*topicRuleStepFunctionsActionPtrType)(v)
}

func (*topicRuleStepFunctionsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (i *topicRuleStepFunctionsActionPtrType) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return i.ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleStepFunctionsActionPtrType) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionsActionPtrOutput)
}

type TopicRuleStepFunctionsActionOutput struct{ *pulumi.OutputState }

func (TopicRuleStepFunctionsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionOutput() TopicRuleStepFunctionsActionOutput {
	return o
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionOutput {
	return o
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return o.ToTopicRuleStepFunctionsActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleStepFunctionsActionOutput) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleStepFunctionsAction) *TopicRuleStepFunctionsAction {
		return &v
	}).(TopicRuleStepFunctionsActionPtrOutput)
}

func (o TopicRuleStepFunctionsActionOutput) ExecutionNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleStepFunctionsAction) *string { return v.ExecutionNamePrefix }).(pulumi.StringPtrOutput)
}

func (o TopicRuleStepFunctionsActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleStepFunctionsAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleStepFunctionsActionOutput) StateMachineName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleStepFunctionsAction) string { return v.StateMachineName }).(pulumi.StringOutput)
}

type TopicRuleStepFunctionsActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleStepFunctionsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleStepFunctionsAction)(nil)).Elem()
}

func (o TopicRuleStepFunctionsActionPtrOutput) ToTopicRuleStepFunctionsActionPtrOutput() TopicRuleStepFunctionsActionPtrOutput {
	return o
}

func (o TopicRuleStepFunctionsActionPtrOutput) ToTopicRuleStepFunctionsActionPtrOutputWithContext(ctx context.Context) TopicRuleStepFunctionsActionPtrOutput {
	return o
}

func (o TopicRuleStepFunctionsActionPtrOutput) Elem() TopicRuleStepFunctionsActionOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) TopicRuleStepFunctionsAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleStepFunctionsAction
		return ret
	}).(TopicRuleStepFunctionsActionOutput)
}

func (o TopicRuleStepFunctionsActionPtrOutput) ExecutionNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionNamePrefix
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleStepFunctionsActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleStepFunctionsActionPtrOutput) StateMachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleStepFunctionsAction) *string {
		if v == nil {
			return nil
		}
		return &v.StateMachineName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// TopicRuleTagInput is an input type that accepts TopicRuleTagArgs and TopicRuleTagOutput values.
// You can construct a concrete instance of `TopicRuleTagInput` via:
//
//          TopicRuleTagArgs{...}
type TopicRuleTagInput interface {
	pulumi.Input

	ToTopicRuleTagOutput() TopicRuleTagOutput
	ToTopicRuleTagOutputWithContext(context.Context) TopicRuleTagOutput
}

type TopicRuleTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTag)(nil)).Elem()
}

func (i TopicRuleTagArgs) ToTopicRuleTagOutput() TopicRuleTagOutput {
	return i.ToTopicRuleTagOutputWithContext(context.Background())
}

func (i TopicRuleTagArgs) ToTopicRuleTagOutputWithContext(ctx context.Context) TopicRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTagOutput)
}

// TopicRuleTagArrayInput is an input type that accepts TopicRuleTagArray and TopicRuleTagArrayOutput values.
// You can construct a concrete instance of `TopicRuleTagArrayInput` via:
//
//          TopicRuleTagArray{ TopicRuleTagArgs{...} }
type TopicRuleTagArrayInput interface {
	pulumi.Input

	ToTopicRuleTagArrayOutput() TopicRuleTagArrayOutput
	ToTopicRuleTagArrayOutputWithContext(context.Context) TopicRuleTagArrayOutput
}

type TopicRuleTagArray []TopicRuleTagInput

func (TopicRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleTag)(nil)).Elem()
}

func (i TopicRuleTagArray) ToTopicRuleTagArrayOutput() TopicRuleTagArrayOutput {
	return i.ToTopicRuleTagArrayOutputWithContext(context.Background())
}

func (i TopicRuleTagArray) ToTopicRuleTagArrayOutputWithContext(ctx context.Context) TopicRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTagArrayOutput)
}

type TopicRuleTagOutput struct{ *pulumi.OutputState }

func (TopicRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTag)(nil)).Elem()
}

func (o TopicRuleTagOutput) ToTopicRuleTagOutput() TopicRuleTagOutput {
	return o
}

func (o TopicRuleTagOutput) ToTopicRuleTagOutputWithContext(ctx context.Context) TopicRuleTagOutput {
	return o
}

func (o TopicRuleTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o TopicRuleTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTag) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleTagArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleTag)(nil)).Elem()
}

func (o TopicRuleTagArrayOutput) ToTopicRuleTagArrayOutput() TopicRuleTagArrayOutput {
	return o
}

func (o TopicRuleTagArrayOutput) ToTopicRuleTagArrayOutputWithContext(ctx context.Context) TopicRuleTagArrayOutput {
	return o
}

func (o TopicRuleTagArrayOutput) Index(i pulumi.IntInput) TopicRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleTag {
		return vs[0].([]TopicRuleTag)[vs[1].(int)]
	}).(TopicRuleTagOutput)
}

type TopicRuleTimestreamAction struct {
	BatchMode    *bool                          `pulumi:"batchMode"`
	DatabaseName string                         `pulumi:"databaseName"`
	Dimensions   []TopicRuleTimestreamDimension `pulumi:"dimensions"`
	RoleArn      string                         `pulumi:"roleArn"`
	TableName    string                         `pulumi:"tableName"`
	Timestamp    *TopicRuleTimestreamTimestamp  `pulumi:"timestamp"`
}

// TopicRuleTimestreamActionInput is an input type that accepts TopicRuleTimestreamActionArgs and TopicRuleTimestreamActionOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamActionInput` via:
//
//          TopicRuleTimestreamActionArgs{...}
type TopicRuleTimestreamActionInput interface {
	pulumi.Input

	ToTopicRuleTimestreamActionOutput() TopicRuleTimestreamActionOutput
	ToTopicRuleTimestreamActionOutputWithContext(context.Context) TopicRuleTimestreamActionOutput
}

type TopicRuleTimestreamActionArgs struct {
	BatchMode    pulumi.BoolPtrInput                    `pulumi:"batchMode"`
	DatabaseName pulumi.StringInput                     `pulumi:"databaseName"`
	Dimensions   TopicRuleTimestreamDimensionArrayInput `pulumi:"dimensions"`
	RoleArn      pulumi.StringInput                     `pulumi:"roleArn"`
	TableName    pulumi.StringInput                     `pulumi:"tableName"`
	Timestamp    TopicRuleTimestreamTimestampPtrInput   `pulumi:"timestamp"`
}

func (TopicRuleTimestreamActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamAction)(nil)).Elem()
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionOutput() TopicRuleTimestreamActionOutput {
	return i.ToTopicRuleTimestreamActionOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionOutputWithContext(ctx context.Context) TopicRuleTimestreamActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamActionOutput)
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return i.ToTopicRuleTimestreamActionPtrOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamActionArgs) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamActionOutput).ToTopicRuleTimestreamActionPtrOutputWithContext(ctx)
}

// TopicRuleTimestreamActionPtrInput is an input type that accepts TopicRuleTimestreamActionArgs, TopicRuleTimestreamActionPtr and TopicRuleTimestreamActionPtrOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamActionPtrInput` via:
//
//          TopicRuleTimestreamActionArgs{...}
//
//  or:
//
//          nil
type TopicRuleTimestreamActionPtrInput interface {
	pulumi.Input

	ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput
	ToTopicRuleTimestreamActionPtrOutputWithContext(context.Context) TopicRuleTimestreamActionPtrOutput
}

type topicRuleTimestreamActionPtrType TopicRuleTimestreamActionArgs

func TopicRuleTimestreamActionPtr(v *TopicRuleTimestreamActionArgs) TopicRuleTimestreamActionPtrInput {
	return (*topicRuleTimestreamActionPtrType)(v)
}

func (*topicRuleTimestreamActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamAction)(nil)).Elem()
}

func (i *topicRuleTimestreamActionPtrType) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return i.ToTopicRuleTimestreamActionPtrOutputWithContext(context.Background())
}

func (i *topicRuleTimestreamActionPtrType) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamActionPtrOutput)
}

type TopicRuleTimestreamActionOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamAction)(nil)).Elem()
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionOutput() TopicRuleTimestreamActionOutput {
	return o
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionOutputWithContext(ctx context.Context) TopicRuleTimestreamActionOutput {
	return o
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return o.ToTopicRuleTimestreamActionPtrOutputWithContext(context.Background())
}

func (o TopicRuleTimestreamActionOutput) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleTimestreamAction) *TopicRuleTimestreamAction {
		return &v
	}).(TopicRuleTimestreamActionPtrOutput)
}

func (o TopicRuleTimestreamActionOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) *bool { return v.BatchMode }).(pulumi.BoolPtrOutput)
}

func (o TopicRuleTimestreamActionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o TopicRuleTimestreamActionOutput) Dimensions() TopicRuleTimestreamDimensionArrayOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) []TopicRuleTimestreamDimension { return v.Dimensions }).(TopicRuleTimestreamDimensionArrayOutput)
}

func (o TopicRuleTimestreamActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o TopicRuleTimestreamActionOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) string { return v.TableName }).(pulumi.StringOutput)
}

func (o TopicRuleTimestreamActionOutput) Timestamp() TopicRuleTimestreamTimestampPtrOutput {
	return o.ApplyT(func(v TopicRuleTimestreamAction) *TopicRuleTimestreamTimestamp { return v.Timestamp }).(TopicRuleTimestreamTimestampPtrOutput)
}

type TopicRuleTimestreamActionPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamAction)(nil)).Elem()
}

func (o TopicRuleTimestreamActionPtrOutput) ToTopicRuleTimestreamActionPtrOutput() TopicRuleTimestreamActionPtrOutput {
	return o
}

func (o TopicRuleTimestreamActionPtrOutput) ToTopicRuleTimestreamActionPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamActionPtrOutput {
	return o
}

func (o TopicRuleTimestreamActionPtrOutput) Elem() TopicRuleTimestreamActionOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) TopicRuleTimestreamAction {
		if v != nil {
			return *v
		}
		var ret TopicRuleTimestreamAction
		return ret
	}).(TopicRuleTimestreamActionOutput)
}

func (o TopicRuleTimestreamActionPtrOutput) BatchMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *bool {
		if v == nil {
			return nil
		}
		return v.BatchMode
	}).(pulumi.BoolPtrOutput)
}

func (o TopicRuleTimestreamActionPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleTimestreamActionPtrOutput) Dimensions() TopicRuleTimestreamDimensionArrayOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) []TopicRuleTimestreamDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(TopicRuleTimestreamDimensionArrayOutput)
}

func (o TopicRuleTimestreamActionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleTimestreamActionPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleTimestreamActionPtrOutput) Timestamp() TopicRuleTimestreamTimestampPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamAction) *TopicRuleTimestreamTimestamp {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(TopicRuleTimestreamTimestampPtrOutput)
}

type TopicRuleTimestreamDimension struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// TopicRuleTimestreamDimensionInput is an input type that accepts TopicRuleTimestreamDimensionArgs and TopicRuleTimestreamDimensionOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamDimensionInput` via:
//
//          TopicRuleTimestreamDimensionArgs{...}
type TopicRuleTimestreamDimensionInput interface {
	pulumi.Input

	ToTopicRuleTimestreamDimensionOutput() TopicRuleTimestreamDimensionOutput
	ToTopicRuleTimestreamDimensionOutputWithContext(context.Context) TopicRuleTimestreamDimensionOutput
}

type TopicRuleTimestreamDimensionArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleTimestreamDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamDimension)(nil)).Elem()
}

func (i TopicRuleTimestreamDimensionArgs) ToTopicRuleTimestreamDimensionOutput() TopicRuleTimestreamDimensionOutput {
	return i.ToTopicRuleTimestreamDimensionOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamDimensionArgs) ToTopicRuleTimestreamDimensionOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamDimensionOutput)
}

// TopicRuleTimestreamDimensionArrayInput is an input type that accepts TopicRuleTimestreamDimensionArray and TopicRuleTimestreamDimensionArrayOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamDimensionArrayInput` via:
//
//          TopicRuleTimestreamDimensionArray{ TopicRuleTimestreamDimensionArgs{...} }
type TopicRuleTimestreamDimensionArrayInput interface {
	pulumi.Input

	ToTopicRuleTimestreamDimensionArrayOutput() TopicRuleTimestreamDimensionArrayOutput
	ToTopicRuleTimestreamDimensionArrayOutputWithContext(context.Context) TopicRuleTimestreamDimensionArrayOutput
}

type TopicRuleTimestreamDimensionArray []TopicRuleTimestreamDimensionInput

func (TopicRuleTimestreamDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleTimestreamDimension)(nil)).Elem()
}

func (i TopicRuleTimestreamDimensionArray) ToTopicRuleTimestreamDimensionArrayOutput() TopicRuleTimestreamDimensionArrayOutput {
	return i.ToTopicRuleTimestreamDimensionArrayOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamDimensionArray) ToTopicRuleTimestreamDimensionArrayOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamDimensionArrayOutput)
}

type TopicRuleTimestreamDimensionOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamDimension)(nil)).Elem()
}

func (o TopicRuleTimestreamDimensionOutput) ToTopicRuleTimestreamDimensionOutput() TopicRuleTimestreamDimensionOutput {
	return o
}

func (o TopicRuleTimestreamDimensionOutput) ToTopicRuleTimestreamDimensionOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionOutput {
	return o
}

func (o TopicRuleTimestreamDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamDimension) string { return v.Name }).(pulumi.StringOutput)
}

func (o TopicRuleTimestreamDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamDimension) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleTimestreamDimensionArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleTimestreamDimension)(nil)).Elem()
}

func (o TopicRuleTimestreamDimensionArrayOutput) ToTopicRuleTimestreamDimensionArrayOutput() TopicRuleTimestreamDimensionArrayOutput {
	return o
}

func (o TopicRuleTimestreamDimensionArrayOutput) ToTopicRuleTimestreamDimensionArrayOutputWithContext(ctx context.Context) TopicRuleTimestreamDimensionArrayOutput {
	return o
}

func (o TopicRuleTimestreamDimensionArrayOutput) Index(i pulumi.IntInput) TopicRuleTimestreamDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleTimestreamDimension {
		return vs[0].([]TopicRuleTimestreamDimension)[vs[1].(int)]
	}).(TopicRuleTimestreamDimensionOutput)
}

type TopicRuleTimestreamTimestamp struct {
	Unit  string `pulumi:"unit"`
	Value string `pulumi:"value"`
}

// TopicRuleTimestreamTimestampInput is an input type that accepts TopicRuleTimestreamTimestampArgs and TopicRuleTimestreamTimestampOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamTimestampInput` via:
//
//          TopicRuleTimestreamTimestampArgs{...}
type TopicRuleTimestreamTimestampInput interface {
	pulumi.Input

	ToTopicRuleTimestreamTimestampOutput() TopicRuleTimestreamTimestampOutput
	ToTopicRuleTimestreamTimestampOutputWithContext(context.Context) TopicRuleTimestreamTimestampOutput
}

type TopicRuleTimestreamTimestampArgs struct {
	Unit  pulumi.StringInput `pulumi:"unit"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TopicRuleTimestreamTimestampArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampOutput() TopicRuleTimestreamTimestampOutput {
	return i.ToTopicRuleTimestreamTimestampOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamTimestampOutput)
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return i.ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Background())
}

func (i TopicRuleTimestreamTimestampArgs) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamTimestampOutput).ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx)
}

// TopicRuleTimestreamTimestampPtrInput is an input type that accepts TopicRuleTimestreamTimestampArgs, TopicRuleTimestreamTimestampPtr and TopicRuleTimestreamTimestampPtrOutput values.
// You can construct a concrete instance of `TopicRuleTimestreamTimestampPtrInput` via:
//
//          TopicRuleTimestreamTimestampArgs{...}
//
//  or:
//
//          nil
type TopicRuleTimestreamTimestampPtrInput interface {
	pulumi.Input

	ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput
	ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Context) TopicRuleTimestreamTimestampPtrOutput
}

type topicRuleTimestreamTimestampPtrType TopicRuleTimestreamTimestampArgs

func TopicRuleTimestreamTimestampPtr(v *TopicRuleTimestreamTimestampArgs) TopicRuleTimestreamTimestampPtrInput {
	return (*topicRuleTimestreamTimestampPtrType)(v)
}

func (*topicRuleTimestreamTimestampPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (i *topicRuleTimestreamTimestampPtrType) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return i.ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Background())
}

func (i *topicRuleTimestreamTimestampPtrType) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleTimestreamTimestampPtrOutput)
}

type TopicRuleTimestreamTimestampOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamTimestampOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampOutput() TopicRuleTimestreamTimestampOutput {
	return o
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampOutput {
	return o
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return o.ToTopicRuleTimestreamTimestampPtrOutputWithContext(context.Background())
}

func (o TopicRuleTimestreamTimestampOutput) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopicRuleTimestreamTimestamp) *TopicRuleTimestreamTimestamp {
		return &v
	}).(TopicRuleTimestreamTimestampPtrOutput)
}

func (o TopicRuleTimestreamTimestampOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamTimestamp) string { return v.Unit }).(pulumi.StringOutput)
}

func (o TopicRuleTimestreamTimestampOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleTimestreamTimestamp) string { return v.Value }).(pulumi.StringOutput)
}

type TopicRuleTimestreamTimestampPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleTimestreamTimestampPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleTimestreamTimestamp)(nil)).Elem()
}

func (o TopicRuleTimestreamTimestampPtrOutput) ToTopicRuleTimestreamTimestampPtrOutput() TopicRuleTimestreamTimestampPtrOutput {
	return o
}

func (o TopicRuleTimestreamTimestampPtrOutput) ToTopicRuleTimestreamTimestampPtrOutputWithContext(ctx context.Context) TopicRuleTimestreamTimestampPtrOutput {
	return o
}

func (o TopicRuleTimestreamTimestampPtrOutput) Elem() TopicRuleTimestreamTimestampOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamTimestamp) TopicRuleTimestreamTimestamp {
		if v != nil {
			return *v
		}
		var ret TopicRuleTimestreamTimestamp
		return ret
	}).(TopicRuleTimestreamTimestampOutput)
}

func (o TopicRuleTimestreamTimestampPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamTimestamp) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o TopicRuleTimestreamTimestampPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleTimestreamTimestamp) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationsOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditCheckConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetPtrOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetConfigurationsOutput{})
	pulumi.RegisterOutputType(AccountAuditConfigurationAuditNotificationTargetConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(AuthorizerTagOutput{})
	pulumi.RegisterOutputType(AuthorizerTagArrayOutput{})
	pulumi.RegisterOutputType(CustomMetricTagOutput{})
	pulumi.RegisterOutputType(CustomMetricTagArrayOutput{})
	pulumi.RegisterOutputType(DimensionTagOutput{})
	pulumi.RegisterOutputType(DimensionTagArrayOutput{})
	pulumi.RegisterOutputType(DomainConfigurationAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(DomainConfigurationAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainConfigurationServerCertificateSummaryOutput{})
	pulumi.RegisterOutputType(DomainConfigurationServerCertificateSummaryArrayOutput{})
	pulumi.RegisterOutputType(DomainConfigurationTagOutput{})
	pulumi.RegisterOutputType(DomainConfigurationTagArrayOutput{})
	pulumi.RegisterOutputType(FleetMetricAggregationTypeOutput{})
	pulumi.RegisterOutputType(FleetMetricAggregationTypePtrOutput{})
	pulumi.RegisterOutputType(FleetMetricTagOutput{})
	pulumi.RegisterOutputType(FleetMetricTagArrayOutput{})
	pulumi.RegisterOutputType(MitigationActionActionParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionActionParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionAddThingsToThingGroupParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionAddThingsToThingGroupParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionEnableIoTLoggingParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionEnableIoTLoggingParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionPublishFindingToSnsParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionPublishFindingToSnsParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionReplaceDefaultPolicyVersionParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionReplaceDefaultPolicyVersionParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionTagOutput{})
	pulumi.RegisterOutputType(MitigationActionTagArrayOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateCACertificateParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateCACertificateParamsPtrOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateDeviceCertificateParamsOutput{})
	pulumi.RegisterOutputType(MitigationActionUpdateDeviceCertificateParamsPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateProvisioningHookOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateProvisioningHookPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateTagOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateTagArrayOutput{})
	pulumi.RegisterOutputType(ScheduledAuditTagOutput{})
	pulumi.RegisterOutputType(ScheduledAuditTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorCriteriaOutput{})
	pulumi.RegisterOutputType(SecurityProfileBehaviorCriteriaPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileMachineLearningDetectionConfigOutput{})
	pulumi.RegisterOutputType(SecurityProfileMachineLearningDetectionConfigPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricDimensionOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricDimensionPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricToRetainOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricToRetainArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricValueOutput{})
	pulumi.RegisterOutputType(SecurityProfileMetricValuePtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileStatisticalThresholdOutput{})
	pulumi.RegisterOutputType(SecurityProfileStatisticalThresholdPtrOutput{})
	pulumi.RegisterOutputType(SecurityProfileTagOutput{})
	pulumi.RegisterOutputType(SecurityProfileTagArrayOutput{})
	pulumi.RegisterOutputType(ThingAttributePayloadOutput{})
	pulumi.RegisterOutputType(ThingAttributePayloadPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleActionOutput{})
	pulumi.RegisterOutputType(TopicRuleActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleActionArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyTimestampOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyValueOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyValueArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleAssetPropertyVariantOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchAlarmActionOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchAlarmActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchLogsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchLogsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchMetricActionOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchMetricActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationHttpUrlDestinationSummaryOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationHttpUrlDestinationSummaryPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationVpcDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(TopicRuleDestinationVpcDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDBActionOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDBActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDBv2ActionOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamoDBv2ActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchActionOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehoseActionOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehoseActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionHeaderOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpActionHeaderArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpAuthorizationOutput{})
	pulumi.RegisterOutputType(TopicRuleHttpAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotAnalyticsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleIotAnalyticsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotEventsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleIotEventsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotSiteWiseActionOutput{})
	pulumi.RegisterOutputType(TopicRuleIotSiteWiseActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleKafkaActionOutput{})
	pulumi.RegisterOutputType(TopicRuleKafkaActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisActionOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleLambdaActionOutput{})
	pulumi.RegisterOutputType(TopicRuleLambdaActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleOpenSearchActionOutput{})
	pulumi.RegisterOutputType(TopicRuleOpenSearchActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRulePayloadOutput{})
	pulumi.RegisterOutputType(TopicRulePayloadPtrOutput{})
	pulumi.RegisterOutputType(TopicRulePutAssetPropertyValueEntryOutput{})
	pulumi.RegisterOutputType(TopicRulePutAssetPropertyValueEntryArrayOutput{})
	pulumi.RegisterOutputType(TopicRulePutItemInputOutput{})
	pulumi.RegisterOutputType(TopicRulePutItemInputPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishActionOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleS3ActionOutput{})
	pulumi.RegisterOutputType(TopicRuleS3ActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSigV4AuthorizationOutput{})
	pulumi.RegisterOutputType(TopicRuleSigV4AuthorizationPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleStepFunctionsActionOutput{})
	pulumi.RegisterOutputType(TopicRuleStepFunctionsActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleTagOutput{})
	pulumi.RegisterOutputType(TopicRuleTagArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamActionOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamActionPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamDimensionOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamDimensionArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamTimestampOutput{})
	pulumi.RegisterOutputType(TopicRuleTimestreamTimestampPtrOutput{})
}
