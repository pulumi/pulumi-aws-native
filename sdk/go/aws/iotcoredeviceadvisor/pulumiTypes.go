// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotcoredeviceadvisor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type SuiteDefinitionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// SuiteDefinitionTagInput is an input type that accepts SuiteDefinitionTagArgs and SuiteDefinitionTagOutput values.
// You can construct a concrete instance of `SuiteDefinitionTagInput` via:
//
//          SuiteDefinitionTagArgs{...}
type SuiteDefinitionTagInput interface {
	pulumi.Input

	ToSuiteDefinitionTagOutput() SuiteDefinitionTagOutput
	ToSuiteDefinitionTagOutputWithContext(context.Context) SuiteDefinitionTagOutput
}

// A key-value pair to associate with a resource.
type SuiteDefinitionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SuiteDefinitionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SuiteDefinitionTag)(nil)).Elem()
}

func (i SuiteDefinitionTagArgs) ToSuiteDefinitionTagOutput() SuiteDefinitionTagOutput {
	return i.ToSuiteDefinitionTagOutputWithContext(context.Background())
}

func (i SuiteDefinitionTagArgs) ToSuiteDefinitionTagOutputWithContext(ctx context.Context) SuiteDefinitionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuiteDefinitionTagOutput)
}

// SuiteDefinitionTagArrayInput is an input type that accepts SuiteDefinitionTagArray and SuiteDefinitionTagArrayOutput values.
// You can construct a concrete instance of `SuiteDefinitionTagArrayInput` via:
//
//          SuiteDefinitionTagArray{ SuiteDefinitionTagArgs{...} }
type SuiteDefinitionTagArrayInput interface {
	pulumi.Input

	ToSuiteDefinitionTagArrayOutput() SuiteDefinitionTagArrayOutput
	ToSuiteDefinitionTagArrayOutputWithContext(context.Context) SuiteDefinitionTagArrayOutput
}

type SuiteDefinitionTagArray []SuiteDefinitionTagInput

func (SuiteDefinitionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuiteDefinitionTag)(nil)).Elem()
}

func (i SuiteDefinitionTagArray) ToSuiteDefinitionTagArrayOutput() SuiteDefinitionTagArrayOutput {
	return i.ToSuiteDefinitionTagArrayOutputWithContext(context.Background())
}

func (i SuiteDefinitionTagArray) ToSuiteDefinitionTagArrayOutputWithContext(ctx context.Context) SuiteDefinitionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuiteDefinitionTagArrayOutput)
}

// A key-value pair to associate with a resource.
type SuiteDefinitionTagOutput struct{ *pulumi.OutputState }

func (SuiteDefinitionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SuiteDefinitionTag)(nil)).Elem()
}

func (o SuiteDefinitionTagOutput) ToSuiteDefinitionTagOutput() SuiteDefinitionTagOutput {
	return o
}

func (o SuiteDefinitionTagOutput) ToSuiteDefinitionTagOutputWithContext(ctx context.Context) SuiteDefinitionTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o SuiteDefinitionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SuiteDefinitionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o SuiteDefinitionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SuiteDefinitionTag) string { return v.Value }).(pulumi.StringOutput)
}

type SuiteDefinitionTagArrayOutput struct{ *pulumi.OutputState }

func (SuiteDefinitionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuiteDefinitionTag)(nil)).Elem()
}

func (o SuiteDefinitionTagArrayOutput) ToSuiteDefinitionTagArrayOutput() SuiteDefinitionTagArrayOutput {
	return o
}

func (o SuiteDefinitionTagArrayOutput) ToSuiteDefinitionTagArrayOutputWithContext(ctx context.Context) SuiteDefinitionTagArrayOutput {
	return o
}

func (o SuiteDefinitionTagArrayOutput) Index(i pulumi.IntInput) SuiteDefinitionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SuiteDefinitionTag {
		return vs[0].([]SuiteDefinitionTag)[vs[1].(int)]
	}).(SuiteDefinitionTagOutput)
}

func init() {
	pulumi.RegisterOutputType(SuiteDefinitionTagOutput{})
	pulumi.RegisterOutputType(SuiteDefinitionTagArrayOutput{})
}
