// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotcoredeviceadvisor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// The configuration of the Suite Definition. Listed below are the required elements of the `SuiteDefinitionConfiguration` .
//
// - ***devicePermissionRoleArn*** - The device permission arn.
//
// This is a required element.
//
// *Type:* String
// - ***devices*** - The list of configured devices under test. For more information on devices under test, see [DeviceUnderTest](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_DeviceUnderTest.html)
//
// Not a required element.
//
// *Type:* List of devices under test
// - ***intendedForQualification*** - The tests intended for qualification in a suite.
//
// Not a required element.
//
// *Type:* Boolean
// - ***rootGroup*** - The test suite root group. For more information on creating and using root groups see the [Device Advisor workflow](https://docs.aws.amazon.com/iot/latest/developerguide/device-advisor-workflow.html) .
//
// This is a required element.
//
// *Type:* String
// - ***suiteDefinitionName*** - The Suite Definition Configuration name.
//
// This is a required element.
//
// *Type:* String
type SuiteDefinitionConfigurationProperties struct {
	// Gets the device permission ARN. This is a required parameter.
	DevicePermissionRoleArn string `pulumi:"devicePermissionRoleArn"`
	// Gets the devices configured.
	Devices []SuiteDefinitionDeviceUnderTest `pulumi:"devices"`
	// Gets the tests intended for qualification in a suite.
	IntendedForQualification *bool `pulumi:"intendedForQualification"`
	// Gets the test suite root group. This is a required parameter. For updating or creating the latest qualification suite, if `intendedForQualification` is set to true, `rootGroup` can be an empty string. If `intendedForQualification` is false, `rootGroup` cannot be an empty string. If `rootGroup` is empty, and `intendedForQualification` is set to true, all the qualification tests are included, and the configuration is default.
	//
	// For a qualification suite, the minimum length is 0, and the maximum is 2048. For a non-qualification suite, the minimum length is 1, and the maximum is 2048.
	RootGroup string `pulumi:"rootGroup"`
	// Gets the suite definition name. This is a required parameter.
	SuiteDefinitionName *string `pulumi:"suiteDefinitionName"`
}

// SuiteDefinitionConfigurationPropertiesInput is an input type that accepts SuiteDefinitionConfigurationPropertiesArgs and SuiteDefinitionConfigurationPropertiesOutput values.
// You can construct a concrete instance of `SuiteDefinitionConfigurationPropertiesInput` via:
//
//	SuiteDefinitionConfigurationPropertiesArgs{...}
type SuiteDefinitionConfigurationPropertiesInput interface {
	pulumi.Input

	ToSuiteDefinitionConfigurationPropertiesOutput() SuiteDefinitionConfigurationPropertiesOutput
	ToSuiteDefinitionConfigurationPropertiesOutputWithContext(context.Context) SuiteDefinitionConfigurationPropertiesOutput
}

// The configuration of the Suite Definition. Listed below are the required elements of the `SuiteDefinitionConfiguration` .
//
// - ***devicePermissionRoleArn*** - The device permission arn.
//
// This is a required element.
//
// *Type:* String
// - ***devices*** - The list of configured devices under test. For more information on devices under test, see [DeviceUnderTest](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_DeviceUnderTest.html)
//
// Not a required element.
//
// *Type:* List of devices under test
// - ***intendedForQualification*** - The tests intended for qualification in a suite.
//
// Not a required element.
//
// *Type:* Boolean
// - ***rootGroup*** - The test suite root group. For more information on creating and using root groups see the [Device Advisor workflow](https://docs.aws.amazon.com/iot/latest/developerguide/device-advisor-workflow.html) .
//
// This is a required element.
//
// *Type:* String
// - ***suiteDefinitionName*** - The Suite Definition Configuration name.
//
// This is a required element.
//
// *Type:* String
type SuiteDefinitionConfigurationPropertiesArgs struct {
	// Gets the device permission ARN. This is a required parameter.
	DevicePermissionRoleArn pulumi.StringInput `pulumi:"devicePermissionRoleArn"`
	// Gets the devices configured.
	Devices SuiteDefinitionDeviceUnderTestArrayInput `pulumi:"devices"`
	// Gets the tests intended for qualification in a suite.
	IntendedForQualification pulumi.BoolPtrInput `pulumi:"intendedForQualification"`
	// Gets the test suite root group. This is a required parameter. For updating or creating the latest qualification suite, if `intendedForQualification` is set to true, `rootGroup` can be an empty string. If `intendedForQualification` is false, `rootGroup` cannot be an empty string. If `rootGroup` is empty, and `intendedForQualification` is set to true, all the qualification tests are included, and the configuration is default.
	//
	// For a qualification suite, the minimum length is 0, and the maximum is 2048. For a non-qualification suite, the minimum length is 1, and the maximum is 2048.
	RootGroup pulumi.StringInput `pulumi:"rootGroup"`
	// Gets the suite definition name. This is a required parameter.
	SuiteDefinitionName pulumi.StringPtrInput `pulumi:"suiteDefinitionName"`
}

func (SuiteDefinitionConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SuiteDefinitionConfigurationProperties)(nil)).Elem()
}

func (i SuiteDefinitionConfigurationPropertiesArgs) ToSuiteDefinitionConfigurationPropertiesOutput() SuiteDefinitionConfigurationPropertiesOutput {
	return i.ToSuiteDefinitionConfigurationPropertiesOutputWithContext(context.Background())
}

func (i SuiteDefinitionConfigurationPropertiesArgs) ToSuiteDefinitionConfigurationPropertiesOutputWithContext(ctx context.Context) SuiteDefinitionConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuiteDefinitionConfigurationPropertiesOutput)
}

// The configuration of the Suite Definition. Listed below are the required elements of the `SuiteDefinitionConfiguration` .
//
// - ***devicePermissionRoleArn*** - The device permission arn.
//
// This is a required element.
//
// *Type:* String
// - ***devices*** - The list of configured devices under test. For more information on devices under test, see [DeviceUnderTest](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_DeviceUnderTest.html)
//
// Not a required element.
//
// *Type:* List of devices under test
// - ***intendedForQualification*** - The tests intended for qualification in a suite.
//
// Not a required element.
//
// *Type:* Boolean
// - ***rootGroup*** - The test suite root group. For more information on creating and using root groups see the [Device Advisor workflow](https://docs.aws.amazon.com/iot/latest/developerguide/device-advisor-workflow.html) .
//
// This is a required element.
//
// *Type:* String
// - ***suiteDefinitionName*** - The Suite Definition Configuration name.
//
// This is a required element.
//
// *Type:* String
type SuiteDefinitionConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (SuiteDefinitionConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SuiteDefinitionConfigurationProperties)(nil)).Elem()
}

func (o SuiteDefinitionConfigurationPropertiesOutput) ToSuiteDefinitionConfigurationPropertiesOutput() SuiteDefinitionConfigurationPropertiesOutput {
	return o
}

func (o SuiteDefinitionConfigurationPropertiesOutput) ToSuiteDefinitionConfigurationPropertiesOutputWithContext(ctx context.Context) SuiteDefinitionConfigurationPropertiesOutput {
	return o
}

// Gets the device permission ARN. This is a required parameter.
func (o SuiteDefinitionConfigurationPropertiesOutput) DevicePermissionRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v SuiteDefinitionConfigurationProperties) string { return v.DevicePermissionRoleArn }).(pulumi.StringOutput)
}

// Gets the devices configured.
func (o SuiteDefinitionConfigurationPropertiesOutput) Devices() SuiteDefinitionDeviceUnderTestArrayOutput {
	return o.ApplyT(func(v SuiteDefinitionConfigurationProperties) []SuiteDefinitionDeviceUnderTest { return v.Devices }).(SuiteDefinitionDeviceUnderTestArrayOutput)
}

// Gets the tests intended for qualification in a suite.
func (o SuiteDefinitionConfigurationPropertiesOutput) IntendedForQualification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SuiteDefinitionConfigurationProperties) *bool { return v.IntendedForQualification }).(pulumi.BoolPtrOutput)
}

// Gets the test suite root group. This is a required parameter. For updating or creating the latest qualification suite, if `intendedForQualification` is set to true, `rootGroup` can be an empty string. If `intendedForQualification` is false, `rootGroup` cannot be an empty string. If `rootGroup` is empty, and `intendedForQualification` is set to true, all the qualification tests are included, and the configuration is default.
//
// For a qualification suite, the minimum length is 0, and the maximum is 2048. For a non-qualification suite, the minimum length is 1, and the maximum is 2048.
func (o SuiteDefinitionConfigurationPropertiesOutput) RootGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SuiteDefinitionConfigurationProperties) string { return v.RootGroup }).(pulumi.StringOutput)
}

// Gets the suite definition name. This is a required parameter.
func (o SuiteDefinitionConfigurationPropertiesOutput) SuiteDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SuiteDefinitionConfigurationProperties) *string { return v.SuiteDefinitionName }).(pulumi.StringPtrOutput)
}

type SuiteDefinitionConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SuiteDefinitionConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SuiteDefinitionConfigurationProperties)(nil)).Elem()
}

func (o SuiteDefinitionConfigurationPropertiesPtrOutput) ToSuiteDefinitionConfigurationPropertiesPtrOutput() SuiteDefinitionConfigurationPropertiesPtrOutput {
	return o
}

func (o SuiteDefinitionConfigurationPropertiesPtrOutput) ToSuiteDefinitionConfigurationPropertiesPtrOutputWithContext(ctx context.Context) SuiteDefinitionConfigurationPropertiesPtrOutput {
	return o
}

func (o SuiteDefinitionConfigurationPropertiesPtrOutput) Elem() SuiteDefinitionConfigurationPropertiesOutput {
	return o.ApplyT(func(v *SuiteDefinitionConfigurationProperties) SuiteDefinitionConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret SuiteDefinitionConfigurationProperties
		return ret
	}).(SuiteDefinitionConfigurationPropertiesOutput)
}

// Gets the device permission ARN. This is a required parameter.
func (o SuiteDefinitionConfigurationPropertiesPtrOutput) DevicePermissionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SuiteDefinitionConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DevicePermissionRoleArn
	}).(pulumi.StringPtrOutput)
}

// Gets the devices configured.
func (o SuiteDefinitionConfigurationPropertiesPtrOutput) Devices() SuiteDefinitionDeviceUnderTestArrayOutput {
	return o.ApplyT(func(v *SuiteDefinitionConfigurationProperties) []SuiteDefinitionDeviceUnderTest {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(SuiteDefinitionDeviceUnderTestArrayOutput)
}

// Gets the tests intended for qualification in a suite.
func (o SuiteDefinitionConfigurationPropertiesPtrOutput) IntendedForQualification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SuiteDefinitionConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IntendedForQualification
	}).(pulumi.BoolPtrOutput)
}

// Gets the test suite root group. This is a required parameter. For updating or creating the latest qualification suite, if `intendedForQualification` is set to true, `rootGroup` can be an empty string. If `intendedForQualification` is false, `rootGroup` cannot be an empty string. If `rootGroup` is empty, and `intendedForQualification` is set to true, all the qualification tests are included, and the configuration is default.
//
// For a qualification suite, the minimum length is 0, and the maximum is 2048. For a non-qualification suite, the minimum length is 1, and the maximum is 2048.
func (o SuiteDefinitionConfigurationPropertiesPtrOutput) RootGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SuiteDefinitionConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RootGroup
	}).(pulumi.StringPtrOutput)
}

// Gets the suite definition name. This is a required parameter.
func (o SuiteDefinitionConfigurationPropertiesPtrOutput) SuiteDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SuiteDefinitionConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.SuiteDefinitionName
	}).(pulumi.StringPtrOutput)
}

type SuiteDefinitionDeviceUnderTest struct {
	CertificateArn *string `pulumi:"certificateArn"`
	ThingArn       *string `pulumi:"thingArn"`
}

// SuiteDefinitionDeviceUnderTestInput is an input type that accepts SuiteDefinitionDeviceUnderTestArgs and SuiteDefinitionDeviceUnderTestOutput values.
// You can construct a concrete instance of `SuiteDefinitionDeviceUnderTestInput` via:
//
//	SuiteDefinitionDeviceUnderTestArgs{...}
type SuiteDefinitionDeviceUnderTestInput interface {
	pulumi.Input

	ToSuiteDefinitionDeviceUnderTestOutput() SuiteDefinitionDeviceUnderTestOutput
	ToSuiteDefinitionDeviceUnderTestOutputWithContext(context.Context) SuiteDefinitionDeviceUnderTestOutput
}

type SuiteDefinitionDeviceUnderTestArgs struct {
	CertificateArn pulumi.StringPtrInput `pulumi:"certificateArn"`
	ThingArn       pulumi.StringPtrInput `pulumi:"thingArn"`
}

func (SuiteDefinitionDeviceUnderTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SuiteDefinitionDeviceUnderTest)(nil)).Elem()
}

func (i SuiteDefinitionDeviceUnderTestArgs) ToSuiteDefinitionDeviceUnderTestOutput() SuiteDefinitionDeviceUnderTestOutput {
	return i.ToSuiteDefinitionDeviceUnderTestOutputWithContext(context.Background())
}

func (i SuiteDefinitionDeviceUnderTestArgs) ToSuiteDefinitionDeviceUnderTestOutputWithContext(ctx context.Context) SuiteDefinitionDeviceUnderTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuiteDefinitionDeviceUnderTestOutput)
}

// SuiteDefinitionDeviceUnderTestArrayInput is an input type that accepts SuiteDefinitionDeviceUnderTestArray and SuiteDefinitionDeviceUnderTestArrayOutput values.
// You can construct a concrete instance of `SuiteDefinitionDeviceUnderTestArrayInput` via:
//
//	SuiteDefinitionDeviceUnderTestArray{ SuiteDefinitionDeviceUnderTestArgs{...} }
type SuiteDefinitionDeviceUnderTestArrayInput interface {
	pulumi.Input

	ToSuiteDefinitionDeviceUnderTestArrayOutput() SuiteDefinitionDeviceUnderTestArrayOutput
	ToSuiteDefinitionDeviceUnderTestArrayOutputWithContext(context.Context) SuiteDefinitionDeviceUnderTestArrayOutput
}

type SuiteDefinitionDeviceUnderTestArray []SuiteDefinitionDeviceUnderTestInput

func (SuiteDefinitionDeviceUnderTestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuiteDefinitionDeviceUnderTest)(nil)).Elem()
}

func (i SuiteDefinitionDeviceUnderTestArray) ToSuiteDefinitionDeviceUnderTestArrayOutput() SuiteDefinitionDeviceUnderTestArrayOutput {
	return i.ToSuiteDefinitionDeviceUnderTestArrayOutputWithContext(context.Background())
}

func (i SuiteDefinitionDeviceUnderTestArray) ToSuiteDefinitionDeviceUnderTestArrayOutputWithContext(ctx context.Context) SuiteDefinitionDeviceUnderTestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuiteDefinitionDeviceUnderTestArrayOutput)
}

type SuiteDefinitionDeviceUnderTestOutput struct{ *pulumi.OutputState }

func (SuiteDefinitionDeviceUnderTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SuiteDefinitionDeviceUnderTest)(nil)).Elem()
}

func (o SuiteDefinitionDeviceUnderTestOutput) ToSuiteDefinitionDeviceUnderTestOutput() SuiteDefinitionDeviceUnderTestOutput {
	return o
}

func (o SuiteDefinitionDeviceUnderTestOutput) ToSuiteDefinitionDeviceUnderTestOutputWithContext(ctx context.Context) SuiteDefinitionDeviceUnderTestOutput {
	return o
}

func (o SuiteDefinitionDeviceUnderTestOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SuiteDefinitionDeviceUnderTest) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SuiteDefinitionDeviceUnderTestOutput) ThingArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SuiteDefinitionDeviceUnderTest) *string { return v.ThingArn }).(pulumi.StringPtrOutput)
}

type SuiteDefinitionDeviceUnderTestArrayOutput struct{ *pulumi.OutputState }

func (SuiteDefinitionDeviceUnderTestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SuiteDefinitionDeviceUnderTest)(nil)).Elem()
}

func (o SuiteDefinitionDeviceUnderTestArrayOutput) ToSuiteDefinitionDeviceUnderTestArrayOutput() SuiteDefinitionDeviceUnderTestArrayOutput {
	return o
}

func (o SuiteDefinitionDeviceUnderTestArrayOutput) ToSuiteDefinitionDeviceUnderTestArrayOutputWithContext(ctx context.Context) SuiteDefinitionDeviceUnderTestArrayOutput {
	return o
}

func (o SuiteDefinitionDeviceUnderTestArrayOutput) Index(i pulumi.IntInput) SuiteDefinitionDeviceUnderTestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SuiteDefinitionDeviceUnderTest {
		return vs[0].([]SuiteDefinitionDeviceUnderTest)[vs[1].(int)]
	}).(SuiteDefinitionDeviceUnderTestOutput)
}

// A key-value pair to associate with a resource.
type SuiteDefinitionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SuiteDefinitionConfigurationPropertiesInput)(nil)).Elem(), SuiteDefinitionConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuiteDefinitionDeviceUnderTestInput)(nil)).Elem(), SuiteDefinitionDeviceUnderTestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuiteDefinitionDeviceUnderTestArrayInput)(nil)).Elem(), SuiteDefinitionDeviceUnderTestArray{})
	pulumi.RegisterOutputType(SuiteDefinitionConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(SuiteDefinitionConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SuiteDefinitionDeviceUnderTestOutput{})
	pulumi.RegisterOutputType(SuiteDefinitionDeviceUnderTestArrayOutput{})
}
