// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotcoredeviceadvisor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
func LookupSuiteDefinition(ctx *pulumi.Context, args *LookupSuiteDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupSuiteDefinitionResult, error) {
	var rv LookupSuiteDefinitionResult
	err := ctx.Invoke("aws-native:iotcoredeviceadvisor:getSuiteDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSuiteDefinitionArgs struct {
	// The unique identifier for the suite definition.
	SuiteDefinitionId string `pulumi:"suiteDefinitionId"`
}

type LookupSuiteDefinitionResult struct {
	// The Amazon Resource name for the suite definition.
	SuiteDefinitionArn           *string                                 `pulumi:"suiteDefinitionArn"`
	SuiteDefinitionConfiguration *SuiteDefinitionConfigurationProperties `pulumi:"suiteDefinitionConfiguration"`
	// The unique identifier for the suite definition.
	SuiteDefinitionId *string `pulumi:"suiteDefinitionId"`
	// The suite definition version of a test suite.
	SuiteDefinitionVersion *string `pulumi:"suiteDefinitionVersion"`
	// An array of key-value pairs to apply to this resource.
	Tags []SuiteDefinitionTag `pulumi:"tags"`
}

func LookupSuiteDefinitionOutput(ctx *pulumi.Context, args LookupSuiteDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupSuiteDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSuiteDefinitionResult, error) {
			args := v.(LookupSuiteDefinitionArgs)
			r, err := LookupSuiteDefinition(ctx, &args, opts...)
			return *r, err
		}).(LookupSuiteDefinitionResultOutput)
}

type LookupSuiteDefinitionOutputArgs struct {
	// The unique identifier for the suite definition.
	SuiteDefinitionId pulumi.StringInput `pulumi:"suiteDefinitionId"`
}

func (LookupSuiteDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSuiteDefinitionArgs)(nil)).Elem()
}

type LookupSuiteDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupSuiteDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSuiteDefinitionResult)(nil)).Elem()
}

func (o LookupSuiteDefinitionResultOutput) ToLookupSuiteDefinitionResultOutput() LookupSuiteDefinitionResultOutput {
	return o
}

func (o LookupSuiteDefinitionResultOutput) ToLookupSuiteDefinitionResultOutputWithContext(ctx context.Context) LookupSuiteDefinitionResultOutput {
	return o
}

// The Amazon Resource name for the suite definition.
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *string { return v.SuiteDefinitionArn }).(pulumi.StringPtrOutput)
}

func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionConfiguration() SuiteDefinitionConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *SuiteDefinitionConfigurationProperties {
		return v.SuiteDefinitionConfiguration
	}).(SuiteDefinitionConfigurationPropertiesPtrOutput)
}

// The unique identifier for the suite definition.
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *string { return v.SuiteDefinitionId }).(pulumi.StringPtrOutput)
}

// The suite definition version of a test suite.
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *string { return v.SuiteDefinitionVersion }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupSuiteDefinitionResultOutput) Tags() SuiteDefinitionTagArrayOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) []SuiteDefinitionTag { return v.Tags }).(SuiteDefinitionTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSuiteDefinitionResultOutput{})
}
