// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotcoredeviceadvisor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
func LookupSuiteDefinition(ctx *pulumi.Context, args *LookupSuiteDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupSuiteDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSuiteDefinitionResult
	err := ctx.Invoke("aws-native:iotcoredeviceadvisor:getSuiteDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSuiteDefinitionArgs struct {
	// The unique identifier for the suite definition.
	SuiteDefinitionId string `pulumi:"suiteDefinitionId"`
}

type LookupSuiteDefinitionResult struct {
	// The Amazon Resource name for the suite definition.
	SuiteDefinitionArn *string `pulumi:"suiteDefinitionArn"`
	// The configuration of the Suite Definition. Listed below are the required elements of the `SuiteDefinitionConfiguration` .
	//
	// - ***devicePermissionRoleArn*** - The device permission arn.
	//
	// This is a required element.
	//
	// *Type:* String
	// - ***devices*** - The list of configured devices under test. For more information on devices under test, see [DeviceUnderTest](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_DeviceUnderTest.html)
	//
	// Not a required element.
	//
	// *Type:* List of devices under test
	// - ***intendedForQualification*** - The tests intended for qualification in a suite.
	//
	// Not a required element.
	//
	// *Type:* Boolean
	// - ***rootGroup*** - The test suite root group. For more information on creating and using root groups see the [Device Advisor workflow](https://docs.aws.amazon.com/iot/latest/developerguide/device-advisor-workflow.html) .
	//
	// This is a required element.
	//
	// *Type:* String
	// - ***suiteDefinitionName*** - The Suite Definition Configuration name.
	//
	// This is a required element.
	//
	// *Type:* String
	SuiteDefinitionConfiguration *SuiteDefinitionConfigurationProperties `pulumi:"suiteDefinitionConfiguration"`
	// The unique identifier for the suite definition.
	SuiteDefinitionId *string `pulumi:"suiteDefinitionId"`
	// The suite definition version of a test suite.
	SuiteDefinitionVersion *string `pulumi:"suiteDefinitionVersion"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupSuiteDefinitionOutput(ctx *pulumi.Context, args LookupSuiteDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupSuiteDefinitionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSuiteDefinitionResultOutput, error) {
			args := v.(LookupSuiteDefinitionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iotcoredeviceadvisor:getSuiteDefinition", args, LookupSuiteDefinitionResultOutput{}, options).(LookupSuiteDefinitionResultOutput), nil
		}).(LookupSuiteDefinitionResultOutput)
}

type LookupSuiteDefinitionOutputArgs struct {
	// The unique identifier for the suite definition.
	SuiteDefinitionId pulumi.StringInput `pulumi:"suiteDefinitionId"`
}

func (LookupSuiteDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSuiteDefinitionArgs)(nil)).Elem()
}

type LookupSuiteDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupSuiteDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSuiteDefinitionResult)(nil)).Elem()
}

func (o LookupSuiteDefinitionResultOutput) ToLookupSuiteDefinitionResultOutput() LookupSuiteDefinitionResultOutput {
	return o
}

func (o LookupSuiteDefinitionResultOutput) ToLookupSuiteDefinitionResultOutputWithContext(ctx context.Context) LookupSuiteDefinitionResultOutput {
	return o
}

// The Amazon Resource name for the suite definition.
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *string { return v.SuiteDefinitionArn }).(pulumi.StringPtrOutput)
}

// The configuration of the Suite Definition. Listed below are the required elements of the `SuiteDefinitionConfiguration` .
//
// - ***devicePermissionRoleArn*** - The device permission arn.
//
// This is a required element.
//
// *Type:* String
// - ***devices*** - The list of configured devices under test. For more information on devices under test, see [DeviceUnderTest](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdeviceadvisor_DeviceUnderTest.html)
//
// Not a required element.
//
// *Type:* List of devices under test
// - ***intendedForQualification*** - The tests intended for qualification in a suite.
//
// Not a required element.
//
// *Type:* Boolean
// - ***rootGroup*** - The test suite root group. For more information on creating and using root groups see the [Device Advisor workflow](https://docs.aws.amazon.com/iot/latest/developerguide/device-advisor-workflow.html) .
//
// This is a required element.
//
// *Type:* String
// - ***suiteDefinitionName*** - The Suite Definition Configuration name.
//
// This is a required element.
//
// *Type:* String
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionConfiguration() SuiteDefinitionConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *SuiteDefinitionConfigurationProperties {
		return v.SuiteDefinitionConfiguration
	}).(SuiteDefinitionConfigurationPropertiesPtrOutput)
}

// The unique identifier for the suite definition.
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *string { return v.SuiteDefinitionId }).(pulumi.StringPtrOutput)
}

// The suite definition version of a test suite.
func (o LookupSuiteDefinitionResultOutput) SuiteDefinitionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) *string { return v.SuiteDefinitionVersion }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupSuiteDefinitionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupSuiteDefinitionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSuiteDefinitionResultOutput{})
}
