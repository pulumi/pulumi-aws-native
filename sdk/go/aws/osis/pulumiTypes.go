// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Key-value pairs to configure buffering.
type PipelineBufferOptions struct {
	// Whether persistent buffering should be enabled.
	PersistentBufferEnabled bool `pulumi:"persistentBufferEnabled"`
}

// PipelineBufferOptionsInput is an input type that accepts PipelineBufferOptionsArgs and PipelineBufferOptionsOutput values.
// You can construct a concrete instance of `PipelineBufferOptionsInput` via:
//
//	PipelineBufferOptionsArgs{...}
type PipelineBufferOptionsInput interface {
	pulumi.Input

	ToPipelineBufferOptionsOutput() PipelineBufferOptionsOutput
	ToPipelineBufferOptionsOutputWithContext(context.Context) PipelineBufferOptionsOutput
}

// Key-value pairs to configure buffering.
type PipelineBufferOptionsArgs struct {
	// Whether persistent buffering should be enabled.
	PersistentBufferEnabled pulumi.BoolInput `pulumi:"persistentBufferEnabled"`
}

func (PipelineBufferOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBufferOptions)(nil)).Elem()
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsOutput() PipelineBufferOptionsOutput {
	return i.ToPipelineBufferOptionsOutputWithContext(context.Background())
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsOutputWithContext(ctx context.Context) PipelineBufferOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBufferOptionsOutput)
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return i.ToPipelineBufferOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineBufferOptionsArgs) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBufferOptionsOutput).ToPipelineBufferOptionsPtrOutputWithContext(ctx)
}

// PipelineBufferOptionsPtrInput is an input type that accepts PipelineBufferOptionsArgs, PipelineBufferOptionsPtr and PipelineBufferOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineBufferOptionsPtrInput` via:
//
//	        PipelineBufferOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineBufferOptionsPtrInput interface {
	pulumi.Input

	ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput
	ToPipelineBufferOptionsPtrOutputWithContext(context.Context) PipelineBufferOptionsPtrOutput
}

type pipelineBufferOptionsPtrType PipelineBufferOptionsArgs

func PipelineBufferOptionsPtr(v *PipelineBufferOptionsArgs) PipelineBufferOptionsPtrInput {
	return (*pipelineBufferOptionsPtrType)(v)
}

func (*pipelineBufferOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineBufferOptions)(nil)).Elem()
}

func (i *pipelineBufferOptionsPtrType) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return i.ToPipelineBufferOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineBufferOptionsPtrType) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBufferOptionsPtrOutput)
}

// Key-value pairs to configure buffering.
type PipelineBufferOptionsOutput struct{ *pulumi.OutputState }

func (PipelineBufferOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBufferOptions)(nil)).Elem()
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsOutput() PipelineBufferOptionsOutput {
	return o
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsOutputWithContext(ctx context.Context) PipelineBufferOptionsOutput {
	return o
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return o.ToPipelineBufferOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineBufferOptionsOutput) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineBufferOptions) *PipelineBufferOptions {
		return &v
	}).(PipelineBufferOptionsPtrOutput)
}

// Whether persistent buffering should be enabled.
func (o PipelineBufferOptionsOutput) PersistentBufferEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PipelineBufferOptions) bool { return v.PersistentBufferEnabled }).(pulumi.BoolOutput)
}

type PipelineBufferOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineBufferOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineBufferOptions)(nil)).Elem()
}

func (o PipelineBufferOptionsPtrOutput) ToPipelineBufferOptionsPtrOutput() PipelineBufferOptionsPtrOutput {
	return o
}

func (o PipelineBufferOptionsPtrOutput) ToPipelineBufferOptionsPtrOutputWithContext(ctx context.Context) PipelineBufferOptionsPtrOutput {
	return o
}

func (o PipelineBufferOptionsPtrOutput) Elem() PipelineBufferOptionsOutput {
	return o.ApplyT(func(v *PipelineBufferOptions) PipelineBufferOptions {
		if v != nil {
			return *v
		}
		var ret PipelineBufferOptions
		return ret
	}).(PipelineBufferOptionsOutput)
}

// Whether persistent buffering should be enabled.
func (o PipelineBufferOptionsPtrOutput) PersistentBufferEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PipelineBufferOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.PersistentBufferEnabled
	}).(pulumi.BoolPtrOutput)
}

// Key-value pairs to configure encryption at rest.
type PipelineEncryptionAtRestOptions struct {
	// The KMS key to use for encrypting data. By default an AWS owned key is used
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

// PipelineEncryptionAtRestOptionsInput is an input type that accepts PipelineEncryptionAtRestOptionsArgs and PipelineEncryptionAtRestOptionsOutput values.
// You can construct a concrete instance of `PipelineEncryptionAtRestOptionsInput` via:
//
//	PipelineEncryptionAtRestOptionsArgs{...}
type PipelineEncryptionAtRestOptionsInput interface {
	pulumi.Input

	ToPipelineEncryptionAtRestOptionsOutput() PipelineEncryptionAtRestOptionsOutput
	ToPipelineEncryptionAtRestOptionsOutputWithContext(context.Context) PipelineEncryptionAtRestOptionsOutput
}

// Key-value pairs to configure encryption at rest.
type PipelineEncryptionAtRestOptionsArgs struct {
	// The KMS key to use for encrypting data. By default an AWS owned key is used
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
}

func (PipelineEncryptionAtRestOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsOutput() PipelineEncryptionAtRestOptionsOutput {
	return i.ToPipelineEncryptionAtRestOptionsOutputWithContext(context.Background())
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionAtRestOptionsOutput)
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return i.ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineEncryptionAtRestOptionsArgs) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionAtRestOptionsOutput).ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx)
}

// PipelineEncryptionAtRestOptionsPtrInput is an input type that accepts PipelineEncryptionAtRestOptionsArgs, PipelineEncryptionAtRestOptionsPtr and PipelineEncryptionAtRestOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineEncryptionAtRestOptionsPtrInput` via:
//
//	        PipelineEncryptionAtRestOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineEncryptionAtRestOptionsPtrInput interface {
	pulumi.Input

	ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput
	ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Context) PipelineEncryptionAtRestOptionsPtrOutput
}

type pipelineEncryptionAtRestOptionsPtrType PipelineEncryptionAtRestOptionsArgs

func PipelineEncryptionAtRestOptionsPtr(v *PipelineEncryptionAtRestOptionsArgs) PipelineEncryptionAtRestOptionsPtrInput {
	return (*pipelineEncryptionAtRestOptionsPtrType)(v)
}

func (*pipelineEncryptionAtRestOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (i *pipelineEncryptionAtRestOptionsPtrType) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return i.ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineEncryptionAtRestOptionsPtrType) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionAtRestOptionsPtrOutput)
}

// Key-value pairs to configure encryption at rest.
type PipelineEncryptionAtRestOptionsOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionAtRestOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsOutput() PipelineEncryptionAtRestOptionsOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return o.ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineEncryptionAtRestOptionsOutput) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineEncryptionAtRestOptions) *PipelineEncryptionAtRestOptions {
		return &v
	}).(PipelineEncryptionAtRestOptionsPtrOutput)
}

// The KMS key to use for encrypting data. By default an AWS owned key is used
func (o PipelineEncryptionAtRestOptionsOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineEncryptionAtRestOptions) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

type PipelineEncryptionAtRestOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionAtRestOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionAtRestOptions)(nil)).Elem()
}

func (o PipelineEncryptionAtRestOptionsPtrOutput) ToPipelineEncryptionAtRestOptionsPtrOutput() PipelineEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsPtrOutput) ToPipelineEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) PipelineEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o PipelineEncryptionAtRestOptionsPtrOutput) Elem() PipelineEncryptionAtRestOptionsOutput {
	return o.ApplyT(func(v *PipelineEncryptionAtRestOptions) PipelineEncryptionAtRestOptions {
		if v != nil {
			return *v
		}
		var ret PipelineEncryptionAtRestOptions
		return ret
	}).(PipelineEncryptionAtRestOptionsOutput)
}

// The KMS key to use for encrypting data. By default an AWS owned key is used
func (o PipelineEncryptionAtRestOptionsPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineEncryptionAtRestOptions) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Key-value pairs to configure log publishing.
type PipelineLogPublishingOptions struct {
	// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
	CloudWatchLogDestination *PipelineLogPublishingOptionsCloudWatchLogDestinationProperties `pulumi:"cloudWatchLogDestination"`
	// Whether logs should be published.
	IsLoggingEnabled *bool `pulumi:"isLoggingEnabled"`
}

// PipelineLogPublishingOptionsInput is an input type that accepts PipelineLogPublishingOptionsArgs and PipelineLogPublishingOptionsOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsInput` via:
//
//	PipelineLogPublishingOptionsArgs{...}
type PipelineLogPublishingOptionsInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsOutput() PipelineLogPublishingOptionsOutput
	ToPipelineLogPublishingOptionsOutputWithContext(context.Context) PipelineLogPublishingOptionsOutput
}

// Key-value pairs to configure log publishing.
type PipelineLogPublishingOptionsArgs struct {
	// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
	CloudWatchLogDestination PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrInput `pulumi:"cloudWatchLogDestination"`
	// Whether logs should be published.
	IsLoggingEnabled pulumi.BoolPtrInput `pulumi:"isLoggingEnabled"`
}

func (PipelineLogPublishingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptions)(nil)).Elem()
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsOutput() PipelineLogPublishingOptionsOutput {
	return i.ToPipelineLogPublishingOptionsOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsOutput)
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return i.ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsArgs) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsOutput).ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx)
}

// PipelineLogPublishingOptionsPtrInput is an input type that accepts PipelineLogPublishingOptionsArgs, PipelineLogPublishingOptionsPtr and PipelineLogPublishingOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsPtrInput` via:
//
//	        PipelineLogPublishingOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineLogPublishingOptionsPtrInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput
	ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Context) PipelineLogPublishingOptionsPtrOutput
}

type pipelineLogPublishingOptionsPtrType PipelineLogPublishingOptionsArgs

func PipelineLogPublishingOptionsPtr(v *PipelineLogPublishingOptionsArgs) PipelineLogPublishingOptionsPtrInput {
	return (*pipelineLogPublishingOptionsPtrType)(v)
}

func (*pipelineLogPublishingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptions)(nil)).Elem()
}

func (i *pipelineLogPublishingOptionsPtrType) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return i.ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineLogPublishingOptionsPtrType) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsPtrOutput)
}

// Key-value pairs to configure log publishing.
type PipelineLogPublishingOptionsOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptions)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsOutput() PipelineLogPublishingOptionsOutput {
	return o
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsOutput {
	return o
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return o.ToPipelineLogPublishingOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineLogPublishingOptionsOutput) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineLogPublishingOptions) *PipelineLogPublishingOptions {
		return &v
	}).(PipelineLogPublishingOptionsPtrOutput)
}

// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
func (o PipelineLogPublishingOptionsOutput) CloudWatchLogDestination() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v PipelineLogPublishingOptions) *PipelineLogPublishingOptionsCloudWatchLogDestinationProperties {
		return v.CloudWatchLogDestination
	}).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput)
}

// Whether logs should be published.
func (o PipelineLogPublishingOptionsOutput) IsLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PipelineLogPublishingOptions) *bool { return v.IsLoggingEnabled }).(pulumi.BoolPtrOutput)
}

type PipelineLogPublishingOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptions)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsPtrOutput) ToPipelineLogPublishingOptionsPtrOutput() PipelineLogPublishingOptionsPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsPtrOutput) ToPipelineLogPublishingOptionsPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsPtrOutput) Elem() PipelineLogPublishingOptionsOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptions) PipelineLogPublishingOptions {
		if v != nil {
			return *v
		}
		var ret PipelineLogPublishingOptions
		return ret
	}).(PipelineLogPublishingOptionsOutput)
}

// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
func (o PipelineLogPublishingOptionsPtrOutput) CloudWatchLogDestination() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptions) *PipelineLogPublishingOptionsCloudWatchLogDestinationProperties {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogDestination
	}).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput)
}

// Whether logs should be published.
func (o PipelineLogPublishingOptionsPtrOutput) IsLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
type PipelineLogPublishingOptionsCloudWatchLogDestinationProperties struct {
	LogGroup string `pulumi:"logGroup"`
}

// PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesInput is an input type that accepts PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs and PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesInput` via:
//
//	PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs{...}
type PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput
	ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutputWithContext(context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput
}

// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
type PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs struct {
	LogGroup pulumi.StringInput `pulumi:"logGroup"`
}

func (PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptionsCloudWatchLogDestinationProperties)(nil)).Elem()
}

func (i PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput {
	return i.ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput)
}

func (i PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return i.ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput).ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(ctx)
}

// PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrInput is an input type that accepts PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs, PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtr and PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput values.
// You can construct a concrete instance of `PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrInput` via:
//
//	        PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs{...}
//
//	or:
//
//	        nil
type PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrInput interface {
	pulumi.Input

	ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput
	ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput
}

type pipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrType PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs

func PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtr(v *PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrInput {
	return (*pipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrType)(v)
}

func (*pipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptionsCloudWatchLogDestinationProperties)(nil)).Elem()
}

func (i *pipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrType) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return i.ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (i *pipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrType) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput)
}

// The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
type PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogPublishingOptionsCloudWatchLogDestinationProperties)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return o.ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(context.Background())
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineLogPublishingOptionsCloudWatchLogDestinationProperties) *PipelineLogPublishingOptionsCloudWatchLogDestinationProperties {
		return &v
	}).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput)
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput) LogGroup() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLogPublishingOptionsCloudWatchLogDestinationProperties) string { return v.LogGroup }).(pulumi.StringOutput)
}

type PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLogPublishingOptionsCloudWatchLogDestinationProperties)(nil)).Elem()
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput) ToPipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutputWithContext(ctx context.Context) PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput {
	return o
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput) Elem() PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptionsCloudWatchLogDestinationProperties) PipelineLogPublishingOptionsCloudWatchLogDestinationProperties {
		if v != nil {
			return *v
		}
		var ret PipelineLogPublishingOptionsCloudWatchLogDestinationProperties
		return ret
	}).(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput)
}

func (o PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLogPublishingOptionsCloudWatchLogDestinationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroup
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type PipelineTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// PipelineTagInput is an input type that accepts PipelineTagArgs and PipelineTagOutput values.
// You can construct a concrete instance of `PipelineTagInput` via:
//
//	PipelineTagArgs{...}
type PipelineTagInput interface {
	pulumi.Input

	ToPipelineTagOutput() PipelineTagOutput
	ToPipelineTagOutputWithContext(context.Context) PipelineTagOutput
}

// A key-value pair to associate with a resource.
type PipelineTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PipelineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (i PipelineTagArgs) ToPipelineTagOutput() PipelineTagOutput {
	return i.ToPipelineTagOutputWithContext(context.Background())
}

func (i PipelineTagArgs) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagOutput)
}

// PipelineTagArrayInput is an input type that accepts PipelineTagArray and PipelineTagArrayOutput values.
// You can construct a concrete instance of `PipelineTagArrayInput` via:
//
//	PipelineTagArray{ PipelineTagArgs{...} }
type PipelineTagArrayInput interface {
	pulumi.Input

	ToPipelineTagArrayOutput() PipelineTagArrayOutput
	ToPipelineTagArrayOutputWithContext(context.Context) PipelineTagArrayOutput
}

type PipelineTagArray []PipelineTagInput

func (PipelineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (i PipelineTagArray) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return i.ToPipelineTagArrayOutputWithContext(context.Background())
}

func (i PipelineTagArray) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagArrayOutput)
}

// A key-value pair to associate with a resource.
type PipelineTagOutput struct{ *pulumi.OutputState }

func (PipelineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (o PipelineTagOutput) ToPipelineTagOutput() PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o PipelineTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o PipelineTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Value }).(pulumi.StringOutput)
}

type PipelineTagArrayOutput struct{ *pulumi.OutputState }

func (PipelineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) Index(i pulumi.IntInput) PipelineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTag {
		return vs[0].([]PipelineTag)[vs[1].(int)]
	}).(PipelineTagOutput)
}

// An OpenSearch Ingestion Service-managed VPC endpoint that will access one or more pipelines.
type PipelineVpcEndpoint struct {
	// The unique identifier of the endpoint.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// The ID for your VPC. AWS Privatelink generates this value when you create a VPC.
	VpcId      *string             `pulumi:"vpcId"`
	VpcOptions *PipelineVpcOptions `pulumi:"vpcOptions"`
}

// An OpenSearch Ingestion Service-managed VPC endpoint that will access one or more pipelines.
type PipelineVpcEndpointOutput struct{ *pulumi.OutputState }

func (PipelineVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVpcEndpoint)(nil)).Elem()
}

func (o PipelineVpcEndpointOutput) ToPipelineVpcEndpointOutput() PipelineVpcEndpointOutput {
	return o
}

func (o PipelineVpcEndpointOutput) ToPipelineVpcEndpointOutputWithContext(ctx context.Context) PipelineVpcEndpointOutput {
	return o
}

// The unique identifier of the endpoint.
func (o PipelineVpcEndpointOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineVpcEndpoint) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

// The ID for your VPC. AWS Privatelink generates this value when you create a VPC.
func (o PipelineVpcEndpointOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineVpcEndpoint) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func (o PipelineVpcEndpointOutput) VpcOptions() PipelineVpcOptionsPtrOutput {
	return o.ApplyT(func(v PipelineVpcEndpoint) *PipelineVpcOptions { return v.VpcOptions }).(PipelineVpcOptionsPtrOutput)
}

type PipelineVpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (PipelineVpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineVpcEndpoint)(nil)).Elem()
}

func (o PipelineVpcEndpointArrayOutput) ToPipelineVpcEndpointArrayOutput() PipelineVpcEndpointArrayOutput {
	return o
}

func (o PipelineVpcEndpointArrayOutput) ToPipelineVpcEndpointArrayOutputWithContext(ctx context.Context) PipelineVpcEndpointArrayOutput {
	return o
}

func (o PipelineVpcEndpointArrayOutput) Index(i pulumi.IntInput) PipelineVpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineVpcEndpoint {
		return vs[0].([]PipelineVpcEndpoint)[vs[1].(int)]
	}).(PipelineVpcEndpointOutput)
}

// Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion Service creates the pipeline with a public endpoint.
type PipelineVpcOptions struct {
	// A list of security groups associated with the VPC endpoint.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs associated with the VPC endpoint.
	SubnetIds []string `pulumi:"subnetIds"`
}

// PipelineVpcOptionsInput is an input type that accepts PipelineVpcOptionsArgs and PipelineVpcOptionsOutput values.
// You can construct a concrete instance of `PipelineVpcOptionsInput` via:
//
//	PipelineVpcOptionsArgs{...}
type PipelineVpcOptionsInput interface {
	pulumi.Input

	ToPipelineVpcOptionsOutput() PipelineVpcOptionsOutput
	ToPipelineVpcOptionsOutputWithContext(context.Context) PipelineVpcOptionsOutput
}

// Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion Service creates the pipeline with a public endpoint.
type PipelineVpcOptionsArgs struct {
	// A list of security groups associated with the VPC endpoint.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs associated with the VPC endpoint.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (PipelineVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVpcOptions)(nil)).Elem()
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsOutput() PipelineVpcOptionsOutput {
	return i.ToPipelineVpcOptionsOutputWithContext(context.Background())
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsOutputWithContext(ctx context.Context) PipelineVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVpcOptionsOutput)
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return i.ToPipelineVpcOptionsPtrOutputWithContext(context.Background())
}

func (i PipelineVpcOptionsArgs) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVpcOptionsOutput).ToPipelineVpcOptionsPtrOutputWithContext(ctx)
}

// PipelineVpcOptionsPtrInput is an input type that accepts PipelineVpcOptionsArgs, PipelineVpcOptionsPtr and PipelineVpcOptionsPtrOutput values.
// You can construct a concrete instance of `PipelineVpcOptionsPtrInput` via:
//
//	        PipelineVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type PipelineVpcOptionsPtrInput interface {
	pulumi.Input

	ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput
	ToPipelineVpcOptionsPtrOutputWithContext(context.Context) PipelineVpcOptionsPtrOutput
}

type pipelineVpcOptionsPtrType PipelineVpcOptionsArgs

func PipelineVpcOptionsPtr(v *PipelineVpcOptionsArgs) PipelineVpcOptionsPtrInput {
	return (*pipelineVpcOptionsPtrType)(v)
}

func (*pipelineVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineVpcOptions)(nil)).Elem()
}

func (i *pipelineVpcOptionsPtrType) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return i.ToPipelineVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *pipelineVpcOptionsPtrType) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVpcOptionsPtrOutput)
}

// Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion Service creates the pipeline with a public endpoint.
type PipelineVpcOptionsOutput struct{ *pulumi.OutputState }

func (PipelineVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVpcOptions)(nil)).Elem()
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsOutput() PipelineVpcOptionsOutput {
	return o
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsOutputWithContext(ctx context.Context) PipelineVpcOptionsOutput {
	return o
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return o.ToPipelineVpcOptionsPtrOutputWithContext(context.Background())
}

func (o PipelineVpcOptionsOutput) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineVpcOptions) *PipelineVpcOptions {
		return &v
	}).(PipelineVpcOptionsPtrOutput)
}

// A list of security groups associated with the VPC endpoint.
func (o PipelineVpcOptionsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineVpcOptions) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnet IDs associated with the VPC endpoint.
func (o PipelineVpcOptionsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineVpcOptions) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type PipelineVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (PipelineVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineVpcOptions)(nil)).Elem()
}

func (o PipelineVpcOptionsPtrOutput) ToPipelineVpcOptionsPtrOutput() PipelineVpcOptionsPtrOutput {
	return o
}

func (o PipelineVpcOptionsPtrOutput) ToPipelineVpcOptionsPtrOutputWithContext(ctx context.Context) PipelineVpcOptionsPtrOutput {
	return o
}

func (o PipelineVpcOptionsPtrOutput) Elem() PipelineVpcOptionsOutput {
	return o.ApplyT(func(v *PipelineVpcOptions) PipelineVpcOptions {
		if v != nil {
			return *v
		}
		var ret PipelineVpcOptions
		return ret
	}).(PipelineVpcOptionsOutput)
}

// A list of security groups associated with the VPC endpoint.
func (o PipelineVpcOptionsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs associated with the VPC endpoint.
func (o PipelineVpcOptionsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBufferOptionsInput)(nil)).Elem(), PipelineBufferOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBufferOptionsPtrInput)(nil)).Elem(), PipelineBufferOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineEncryptionAtRestOptionsInput)(nil)).Elem(), PipelineEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineEncryptionAtRestOptionsPtrInput)(nil)).Elem(), PipelineEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsInput)(nil)).Elem(), PipelineLogPublishingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsPtrInput)(nil)).Elem(), PipelineLogPublishingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesInput)(nil)).Elem(), PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrInput)(nil)).Elem(), PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagInput)(nil)).Elem(), PipelineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagArrayInput)(nil)).Elem(), PipelineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVpcOptionsInput)(nil)).Elem(), PipelineVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVpcOptionsPtrInput)(nil)).Elem(), PipelineVpcOptionsArgs{})
	pulumi.RegisterOutputType(PipelineBufferOptionsOutput{})
	pulumi.RegisterOutputType(PipelineBufferOptionsPtrOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionAtRestOptionsOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionAtRestOptionsPtrOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsPtrOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesOutput{})
	pulumi.RegisterOutputType(PipelineLogPublishingOptionsCloudWatchLogDestinationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PipelineTagOutput{})
	pulumi.RegisterOutputType(PipelineTagArrayOutput{})
	pulumi.RegisterOutputType(PipelineVpcEndpointOutput{})
	pulumi.RegisterOutputType(PipelineVpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(PipelineVpcOptionsOutput{})
	pulumi.RegisterOutputType(PipelineVpcOptionsPtrOutput{})
}
