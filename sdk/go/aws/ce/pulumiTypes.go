// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnomalySubscriptionSubscriber struct {
	Address string                               `pulumi:"address"`
	Status  *AnomalySubscriptionSubscriberStatus `pulumi:"status"`
	Type    AnomalySubscriptionSubscriberType    `pulumi:"type"`
}

// AnomalySubscriptionSubscriberInput is an input type that accepts AnomalySubscriptionSubscriberArgs and AnomalySubscriptionSubscriberOutput values.
// You can construct a concrete instance of `AnomalySubscriptionSubscriberInput` via:
//
//          AnomalySubscriptionSubscriberArgs{...}
type AnomalySubscriptionSubscriberInput interface {
	pulumi.Input

	ToAnomalySubscriptionSubscriberOutput() AnomalySubscriptionSubscriberOutput
	ToAnomalySubscriptionSubscriberOutputWithContext(context.Context) AnomalySubscriptionSubscriberOutput
}

type AnomalySubscriptionSubscriberArgs struct {
	Address pulumi.StringInput                          `pulumi:"address"`
	Status  AnomalySubscriptionSubscriberStatusPtrInput `pulumi:"status"`
	Type    AnomalySubscriptionSubscriberTypeInput      `pulumi:"type"`
}

func (AnomalySubscriptionSubscriberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (i AnomalySubscriptionSubscriberArgs) ToAnomalySubscriptionSubscriberOutput() AnomalySubscriptionSubscriberOutput {
	return i.ToAnomalySubscriptionSubscriberOutputWithContext(context.Background())
}

func (i AnomalySubscriptionSubscriberArgs) ToAnomalySubscriptionSubscriberOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalySubscriptionSubscriberOutput)
}

// AnomalySubscriptionSubscriberArrayInput is an input type that accepts AnomalySubscriptionSubscriberArray and AnomalySubscriptionSubscriberArrayOutput values.
// You can construct a concrete instance of `AnomalySubscriptionSubscriberArrayInput` via:
//
//          AnomalySubscriptionSubscriberArray{ AnomalySubscriptionSubscriberArgs{...} }
type AnomalySubscriptionSubscriberArrayInput interface {
	pulumi.Input

	ToAnomalySubscriptionSubscriberArrayOutput() AnomalySubscriptionSubscriberArrayOutput
	ToAnomalySubscriptionSubscriberArrayOutputWithContext(context.Context) AnomalySubscriptionSubscriberArrayOutput
}

type AnomalySubscriptionSubscriberArray []AnomalySubscriptionSubscriberInput

func (AnomalySubscriptionSubscriberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (i AnomalySubscriptionSubscriberArray) ToAnomalySubscriptionSubscriberArrayOutput() AnomalySubscriptionSubscriberArrayOutput {
	return i.ToAnomalySubscriptionSubscriberArrayOutputWithContext(context.Background())
}

func (i AnomalySubscriptionSubscriberArray) ToAnomalySubscriptionSubscriberArrayOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalySubscriptionSubscriberArrayOutput)
}

type AnomalySubscriptionSubscriberOutput struct{ *pulumi.OutputState }

func (AnomalySubscriptionSubscriberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (o AnomalySubscriptionSubscriberOutput) ToAnomalySubscriptionSubscriberOutput() AnomalySubscriptionSubscriberOutput {
	return o
}

func (o AnomalySubscriptionSubscriberOutput) ToAnomalySubscriptionSubscriberOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberOutput {
	return o
}

func (o AnomalySubscriptionSubscriberOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalySubscriptionSubscriber) string { return v.Address }).(pulumi.StringOutput)
}

func (o AnomalySubscriptionSubscriberOutput) Status() AnomalySubscriptionSubscriberStatusPtrOutput {
	return o.ApplyT(func(v AnomalySubscriptionSubscriber) *AnomalySubscriptionSubscriberStatus { return v.Status }).(AnomalySubscriptionSubscriberStatusPtrOutput)
}

func (o AnomalySubscriptionSubscriberOutput) Type() AnomalySubscriptionSubscriberTypeOutput {
	return o.ApplyT(func(v AnomalySubscriptionSubscriber) AnomalySubscriptionSubscriberType { return v.Type }).(AnomalySubscriptionSubscriberTypeOutput)
}

type AnomalySubscriptionSubscriberArrayOutput struct{ *pulumi.OutputState }

func (AnomalySubscriptionSubscriberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (o AnomalySubscriptionSubscriberArrayOutput) ToAnomalySubscriptionSubscriberArrayOutput() AnomalySubscriptionSubscriberArrayOutput {
	return o
}

func (o AnomalySubscriptionSubscriberArrayOutput) ToAnomalySubscriptionSubscriberArrayOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberArrayOutput {
	return o
}

func (o AnomalySubscriptionSubscriberArrayOutput) Index(i pulumi.IntInput) AnomalySubscriptionSubscriberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnomalySubscriptionSubscriber {
		return vs[0].([]AnomalySubscriptionSubscriber)[vs[1].(int)]
	}).(AnomalySubscriptionSubscriberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalySubscriptionSubscriberInput)(nil)).Elem(), AnomalySubscriptionSubscriberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalySubscriptionSubscriberArrayInput)(nil)).Elem(), AnomalySubscriptionSubscriberArray{})
	pulumi.RegisterOutputType(AnomalySubscriptionSubscriberOutput{})
	pulumi.RegisterOutputType(AnomalySubscriptionSubscriberArrayOutput{})
}
