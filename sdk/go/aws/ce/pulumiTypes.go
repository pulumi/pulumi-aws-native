// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type AnomalyMonitorResourceTag struct {
	// The key name for the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// AnomalyMonitorResourceTagInput is an input type that accepts AnomalyMonitorResourceTagArgs and AnomalyMonitorResourceTagOutput values.
// You can construct a concrete instance of `AnomalyMonitorResourceTagInput` via:
//
//          AnomalyMonitorResourceTagArgs{...}
type AnomalyMonitorResourceTagInput interface {
	pulumi.Input

	ToAnomalyMonitorResourceTagOutput() AnomalyMonitorResourceTagOutput
	ToAnomalyMonitorResourceTagOutputWithContext(context.Context) AnomalyMonitorResourceTagOutput
}

// A key-value pair to associate with a resource.
type AnomalyMonitorResourceTagArgs struct {
	// The key name for the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AnomalyMonitorResourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalyMonitorResourceTag)(nil)).Elem()
}

func (i AnomalyMonitorResourceTagArgs) ToAnomalyMonitorResourceTagOutput() AnomalyMonitorResourceTagOutput {
	return i.ToAnomalyMonitorResourceTagOutputWithContext(context.Background())
}

func (i AnomalyMonitorResourceTagArgs) ToAnomalyMonitorResourceTagOutputWithContext(ctx context.Context) AnomalyMonitorResourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyMonitorResourceTagOutput)
}

// AnomalyMonitorResourceTagArrayInput is an input type that accepts AnomalyMonitorResourceTagArray and AnomalyMonitorResourceTagArrayOutput values.
// You can construct a concrete instance of `AnomalyMonitorResourceTagArrayInput` via:
//
//          AnomalyMonitorResourceTagArray{ AnomalyMonitorResourceTagArgs{...} }
type AnomalyMonitorResourceTagArrayInput interface {
	pulumi.Input

	ToAnomalyMonitorResourceTagArrayOutput() AnomalyMonitorResourceTagArrayOutput
	ToAnomalyMonitorResourceTagArrayOutputWithContext(context.Context) AnomalyMonitorResourceTagArrayOutput
}

type AnomalyMonitorResourceTagArray []AnomalyMonitorResourceTagInput

func (AnomalyMonitorResourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalyMonitorResourceTag)(nil)).Elem()
}

func (i AnomalyMonitorResourceTagArray) ToAnomalyMonitorResourceTagArrayOutput() AnomalyMonitorResourceTagArrayOutput {
	return i.ToAnomalyMonitorResourceTagArrayOutputWithContext(context.Background())
}

func (i AnomalyMonitorResourceTagArray) ToAnomalyMonitorResourceTagArrayOutputWithContext(ctx context.Context) AnomalyMonitorResourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyMonitorResourceTagArrayOutput)
}

// A key-value pair to associate with a resource.
type AnomalyMonitorResourceTagOutput struct{ *pulumi.OutputState }

func (AnomalyMonitorResourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalyMonitorResourceTag)(nil)).Elem()
}

func (o AnomalyMonitorResourceTagOutput) ToAnomalyMonitorResourceTagOutput() AnomalyMonitorResourceTagOutput {
	return o
}

func (o AnomalyMonitorResourceTagOutput) ToAnomalyMonitorResourceTagOutputWithContext(ctx context.Context) AnomalyMonitorResourceTagOutput {
	return o
}

// The key name for the tag.
func (o AnomalyMonitorResourceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyMonitorResourceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o AnomalyMonitorResourceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyMonitorResourceTag) string { return v.Value }).(pulumi.StringOutput)
}

type AnomalyMonitorResourceTagArrayOutput struct{ *pulumi.OutputState }

func (AnomalyMonitorResourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalyMonitorResourceTag)(nil)).Elem()
}

func (o AnomalyMonitorResourceTagArrayOutput) ToAnomalyMonitorResourceTagArrayOutput() AnomalyMonitorResourceTagArrayOutput {
	return o
}

func (o AnomalyMonitorResourceTagArrayOutput) ToAnomalyMonitorResourceTagArrayOutputWithContext(ctx context.Context) AnomalyMonitorResourceTagArrayOutput {
	return o
}

func (o AnomalyMonitorResourceTagArrayOutput) Index(i pulumi.IntInput) AnomalyMonitorResourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnomalyMonitorResourceTag {
		return vs[0].([]AnomalyMonitorResourceTag)[vs[1].(int)]
	}).(AnomalyMonitorResourceTagOutput)
}

// A key-value pair to associate with a resource.
type AnomalySubscriptionResourceTag struct {
	// The key name for the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// AnomalySubscriptionResourceTagInput is an input type that accepts AnomalySubscriptionResourceTagArgs and AnomalySubscriptionResourceTagOutput values.
// You can construct a concrete instance of `AnomalySubscriptionResourceTagInput` via:
//
//          AnomalySubscriptionResourceTagArgs{...}
type AnomalySubscriptionResourceTagInput interface {
	pulumi.Input

	ToAnomalySubscriptionResourceTagOutput() AnomalySubscriptionResourceTagOutput
	ToAnomalySubscriptionResourceTagOutputWithContext(context.Context) AnomalySubscriptionResourceTagOutput
}

// A key-value pair to associate with a resource.
type AnomalySubscriptionResourceTagArgs struct {
	// The key name for the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AnomalySubscriptionResourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalySubscriptionResourceTag)(nil)).Elem()
}

func (i AnomalySubscriptionResourceTagArgs) ToAnomalySubscriptionResourceTagOutput() AnomalySubscriptionResourceTagOutput {
	return i.ToAnomalySubscriptionResourceTagOutputWithContext(context.Background())
}

func (i AnomalySubscriptionResourceTagArgs) ToAnomalySubscriptionResourceTagOutputWithContext(ctx context.Context) AnomalySubscriptionResourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalySubscriptionResourceTagOutput)
}

// AnomalySubscriptionResourceTagArrayInput is an input type that accepts AnomalySubscriptionResourceTagArray and AnomalySubscriptionResourceTagArrayOutput values.
// You can construct a concrete instance of `AnomalySubscriptionResourceTagArrayInput` via:
//
//          AnomalySubscriptionResourceTagArray{ AnomalySubscriptionResourceTagArgs{...} }
type AnomalySubscriptionResourceTagArrayInput interface {
	pulumi.Input

	ToAnomalySubscriptionResourceTagArrayOutput() AnomalySubscriptionResourceTagArrayOutput
	ToAnomalySubscriptionResourceTagArrayOutputWithContext(context.Context) AnomalySubscriptionResourceTagArrayOutput
}

type AnomalySubscriptionResourceTagArray []AnomalySubscriptionResourceTagInput

func (AnomalySubscriptionResourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalySubscriptionResourceTag)(nil)).Elem()
}

func (i AnomalySubscriptionResourceTagArray) ToAnomalySubscriptionResourceTagArrayOutput() AnomalySubscriptionResourceTagArrayOutput {
	return i.ToAnomalySubscriptionResourceTagArrayOutputWithContext(context.Background())
}

func (i AnomalySubscriptionResourceTagArray) ToAnomalySubscriptionResourceTagArrayOutputWithContext(ctx context.Context) AnomalySubscriptionResourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalySubscriptionResourceTagArrayOutput)
}

// A key-value pair to associate with a resource.
type AnomalySubscriptionResourceTagOutput struct{ *pulumi.OutputState }

func (AnomalySubscriptionResourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalySubscriptionResourceTag)(nil)).Elem()
}

func (o AnomalySubscriptionResourceTagOutput) ToAnomalySubscriptionResourceTagOutput() AnomalySubscriptionResourceTagOutput {
	return o
}

func (o AnomalySubscriptionResourceTagOutput) ToAnomalySubscriptionResourceTagOutputWithContext(ctx context.Context) AnomalySubscriptionResourceTagOutput {
	return o
}

// The key name for the tag.
func (o AnomalySubscriptionResourceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalySubscriptionResourceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o AnomalySubscriptionResourceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalySubscriptionResourceTag) string { return v.Value }).(pulumi.StringOutput)
}

type AnomalySubscriptionResourceTagArrayOutput struct{ *pulumi.OutputState }

func (AnomalySubscriptionResourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalySubscriptionResourceTag)(nil)).Elem()
}

func (o AnomalySubscriptionResourceTagArrayOutput) ToAnomalySubscriptionResourceTagArrayOutput() AnomalySubscriptionResourceTagArrayOutput {
	return o
}

func (o AnomalySubscriptionResourceTagArrayOutput) ToAnomalySubscriptionResourceTagArrayOutputWithContext(ctx context.Context) AnomalySubscriptionResourceTagArrayOutput {
	return o
}

func (o AnomalySubscriptionResourceTagArrayOutput) Index(i pulumi.IntInput) AnomalySubscriptionResourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnomalySubscriptionResourceTag {
		return vs[0].([]AnomalySubscriptionResourceTag)[vs[1].(int)]
	}).(AnomalySubscriptionResourceTagOutput)
}

type AnomalySubscriptionSubscriber struct {
	Address string                               `pulumi:"address"`
	Status  *AnomalySubscriptionSubscriberStatus `pulumi:"status"`
	Type    AnomalySubscriptionSubscriberType    `pulumi:"type"`
}

// AnomalySubscriptionSubscriberInput is an input type that accepts AnomalySubscriptionSubscriberArgs and AnomalySubscriptionSubscriberOutput values.
// You can construct a concrete instance of `AnomalySubscriptionSubscriberInput` via:
//
//          AnomalySubscriptionSubscriberArgs{...}
type AnomalySubscriptionSubscriberInput interface {
	pulumi.Input

	ToAnomalySubscriptionSubscriberOutput() AnomalySubscriptionSubscriberOutput
	ToAnomalySubscriptionSubscriberOutputWithContext(context.Context) AnomalySubscriptionSubscriberOutput
}

type AnomalySubscriptionSubscriberArgs struct {
	Address pulumi.StringInput                          `pulumi:"address"`
	Status  AnomalySubscriptionSubscriberStatusPtrInput `pulumi:"status"`
	Type    AnomalySubscriptionSubscriberTypeInput      `pulumi:"type"`
}

func (AnomalySubscriptionSubscriberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (i AnomalySubscriptionSubscriberArgs) ToAnomalySubscriptionSubscriberOutput() AnomalySubscriptionSubscriberOutput {
	return i.ToAnomalySubscriptionSubscriberOutputWithContext(context.Background())
}

func (i AnomalySubscriptionSubscriberArgs) ToAnomalySubscriptionSubscriberOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalySubscriptionSubscriberOutput)
}

// AnomalySubscriptionSubscriberArrayInput is an input type that accepts AnomalySubscriptionSubscriberArray and AnomalySubscriptionSubscriberArrayOutput values.
// You can construct a concrete instance of `AnomalySubscriptionSubscriberArrayInput` via:
//
//          AnomalySubscriptionSubscriberArray{ AnomalySubscriptionSubscriberArgs{...} }
type AnomalySubscriptionSubscriberArrayInput interface {
	pulumi.Input

	ToAnomalySubscriptionSubscriberArrayOutput() AnomalySubscriptionSubscriberArrayOutput
	ToAnomalySubscriptionSubscriberArrayOutputWithContext(context.Context) AnomalySubscriptionSubscriberArrayOutput
}

type AnomalySubscriptionSubscriberArray []AnomalySubscriptionSubscriberInput

func (AnomalySubscriptionSubscriberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (i AnomalySubscriptionSubscriberArray) ToAnomalySubscriptionSubscriberArrayOutput() AnomalySubscriptionSubscriberArrayOutput {
	return i.ToAnomalySubscriptionSubscriberArrayOutputWithContext(context.Background())
}

func (i AnomalySubscriptionSubscriberArray) ToAnomalySubscriptionSubscriberArrayOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalySubscriptionSubscriberArrayOutput)
}

type AnomalySubscriptionSubscriberOutput struct{ *pulumi.OutputState }

func (AnomalySubscriptionSubscriberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (o AnomalySubscriptionSubscriberOutput) ToAnomalySubscriptionSubscriberOutput() AnomalySubscriptionSubscriberOutput {
	return o
}

func (o AnomalySubscriptionSubscriberOutput) ToAnomalySubscriptionSubscriberOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberOutput {
	return o
}

func (o AnomalySubscriptionSubscriberOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalySubscriptionSubscriber) string { return v.Address }).(pulumi.StringOutput)
}

func (o AnomalySubscriptionSubscriberOutput) Status() AnomalySubscriptionSubscriberStatusPtrOutput {
	return o.ApplyT(func(v AnomalySubscriptionSubscriber) *AnomalySubscriptionSubscriberStatus { return v.Status }).(AnomalySubscriptionSubscriberStatusPtrOutput)
}

func (o AnomalySubscriptionSubscriberOutput) Type() AnomalySubscriptionSubscriberTypeOutput {
	return o.ApplyT(func(v AnomalySubscriptionSubscriber) AnomalySubscriptionSubscriberType { return v.Type }).(AnomalySubscriptionSubscriberTypeOutput)
}

type AnomalySubscriptionSubscriberArrayOutput struct{ *pulumi.OutputState }

func (AnomalySubscriptionSubscriberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnomalySubscriptionSubscriber)(nil)).Elem()
}

func (o AnomalySubscriptionSubscriberArrayOutput) ToAnomalySubscriptionSubscriberArrayOutput() AnomalySubscriptionSubscriberArrayOutput {
	return o
}

func (o AnomalySubscriptionSubscriberArrayOutput) ToAnomalySubscriptionSubscriberArrayOutputWithContext(ctx context.Context) AnomalySubscriptionSubscriberArrayOutput {
	return o
}

func (o AnomalySubscriptionSubscriberArrayOutput) Index(i pulumi.IntInput) AnomalySubscriptionSubscriberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnomalySubscriptionSubscriber {
		return vs[0].([]AnomalySubscriptionSubscriber)[vs[1].(int)]
	}).(AnomalySubscriptionSubscriberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalyMonitorResourceTagInput)(nil)).Elem(), AnomalyMonitorResourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalyMonitorResourceTagArrayInput)(nil)).Elem(), AnomalyMonitorResourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalySubscriptionResourceTagInput)(nil)).Elem(), AnomalySubscriptionResourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalySubscriptionResourceTagArrayInput)(nil)).Elem(), AnomalySubscriptionResourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalySubscriptionSubscriberInput)(nil)).Elem(), AnomalySubscriptionSubscriberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalySubscriptionSubscriberArrayInput)(nil)).Elem(), AnomalySubscriptionSubscriberArray{})
	pulumi.RegisterOutputType(AnomalyMonitorResourceTagOutput{})
	pulumi.RegisterOutputType(AnomalyMonitorResourceTagArrayOutput{})
	pulumi.RegisterOutputType(AnomalySubscriptionResourceTagOutput{})
	pulumi.RegisterOutputType(AnomalySubscriptionResourceTagArrayOutput{})
	pulumi.RegisterOutputType(AnomalySubscriptionSubscriberOutput{})
	pulumi.RegisterOutputType(AnomalySubscriptionSubscriberArrayOutput{})
}
