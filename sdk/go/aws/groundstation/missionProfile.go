// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package groundstation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS Ground Station Mission Profile resource type for CloudFormation.
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/groundstation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := groundstation.NewMissionProfile(ctx, "myMissionProfile", &groundstation.MissionProfileArgs{
//				Name:                                pulumi.String("My Mission Profile"),
//				ContactPrePassDurationSeconds:       pulumi.Int(120),
//				ContactPostPassDurationSeconds:      pulumi.Int(180),
//				MinimumViableContactDurationSeconds: pulumi.Int(300),
//				TrackingConfigArn:                   pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/tracking/00000000-0000-0000-0000-000000000000"),
//				DataflowEdges: groundstation.MissionProfileDataflowEdgeArray{
//					&groundstation.MissionProfileDataflowEdgeArgs{
//						Source:      pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/antenna-downlink/11111111-1111-1111-1111-111111111111"),
//						Destination: pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/22222222-2222-2222-2222-222222222222"),
//					},
//					&groundstation.MissionProfileDataflowEdgeArgs{
//						Source:      pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/33333333-3333-3333-3333-333333333333"),
//						Destination: pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/antenna-uplink/44444444-4444-4444-4444-444444444444"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/groundstation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := groundstation.NewMissionProfile(ctx, "myMissionProfile", &groundstation.MissionProfileArgs{
//				Name:                                pulumi.String("Mission Profile"),
//				ContactPrePassDurationSeconds:       pulumi.Int(120),
//				ContactPostPassDurationSeconds:      pulumi.Int(180),
//				MinimumViableContactDurationSeconds: pulumi.Int(300),
//				TrackingConfigArn:                   pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/tracking/00000000-0000-0000-0000-000000000000"),
//				DataflowEdges: groundstation.MissionProfileDataflowEdgeArray{
//					&groundstation.MissionProfileDataflowEdgeArgs{
//						Source:      pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/antenna-downlink/11111111-1111-1111-1111-111111111111"),
//						Destination: pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/22222222-2222-2222-2222-222222222222"),
//					},
//					&groundstation.MissionProfileDataflowEdgeArgs{
//						Source:      pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/33333333-3333-3333-3333-333333333333"),
//						Destination: pulumi.String("arn:aws:groundstation:us-east-2:1234567890:config/antenna-uplink/44444444-4444-4444-4444-444444444444"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type MissionProfile struct {
	pulumi.CustomResourceState

	// The ARN of the mission profile, such as `arn:aws:groundstation:us-east-2:1234567890:mission-profile/9940bf3b-d2ba-427e-9906-842b5e5d2296` .
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the mission profile, such as `9940bf3b-d2ba-427e-9906-842b5e5d2296` .
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// Post-pass time needed after the contact.
	ContactPostPassDurationSeconds pulumi.IntPtrOutput `pulumi:"contactPostPassDurationSeconds"`
	// Pre-pass time needed before the contact.
	ContactPrePassDurationSeconds pulumi.IntPtrOutput `pulumi:"contactPrePassDurationSeconds"`
	// A dataflow edge defines from where and to where data will flow during a contact.
	DataflowEdges MissionProfileDataflowEdgeArrayOutput `pulumi:"dataflowEdges"`
	// Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
	MinimumViableContactDurationSeconds pulumi.IntOutput `pulumi:"minimumViableContactDurationSeconds"`
	// A name used to identify a mission profile.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region of the mission profile.
	Region pulumi.StringOutput `pulumi:"region"`
	// The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
	StreamsKmsKey MissionProfileStreamsKmsKeyPtrOutput `pulumi:"streamsKmsKey"`
	// The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
	StreamsKmsRole pulumi.StringPtrOutput `pulumi:"streamsKmsRole"`
	// Tags assigned to the mission profile.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
	TrackingConfigArn pulumi.StringOutput `pulumi:"trackingConfigArn"`
}

// NewMissionProfile registers a new resource with the given unique name, arguments, and options.
func NewMissionProfile(ctx *pulumi.Context,
	name string, args *MissionProfileArgs, opts ...pulumi.ResourceOption) (*MissionProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataflowEdges == nil {
		return nil, errors.New("invalid value for required argument 'DataflowEdges'")
	}
	if args.MinimumViableContactDurationSeconds == nil {
		return nil, errors.New("invalid value for required argument 'MinimumViableContactDurationSeconds'")
	}
	if args.TrackingConfigArn == nil {
		return nil, errors.New("invalid value for required argument 'TrackingConfigArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MissionProfile
	err := ctx.RegisterResource("aws-native:groundstation:MissionProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMissionProfile gets an existing MissionProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMissionProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MissionProfileState, opts ...pulumi.ResourceOption) (*MissionProfile, error) {
	var resource MissionProfile
	err := ctx.ReadResource("aws-native:groundstation:MissionProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MissionProfile resources.
type missionProfileState struct {
}

type MissionProfileState struct {
}

func (MissionProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*missionProfileState)(nil)).Elem()
}

type missionProfileArgs struct {
	// Post-pass time needed after the contact.
	ContactPostPassDurationSeconds *int `pulumi:"contactPostPassDurationSeconds"`
	// Pre-pass time needed before the contact.
	ContactPrePassDurationSeconds *int `pulumi:"contactPrePassDurationSeconds"`
	// A dataflow edge defines from where and to where data will flow during a contact.
	DataflowEdges []MissionProfileDataflowEdge `pulumi:"dataflowEdges"`
	// Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
	MinimumViableContactDurationSeconds int `pulumi:"minimumViableContactDurationSeconds"`
	// A name used to identify a mission profile.
	Name *string `pulumi:"name"`
	// The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
	StreamsKmsKey *MissionProfileStreamsKmsKey `pulumi:"streamsKmsKey"`
	// The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
	StreamsKmsRole *string `pulumi:"streamsKmsRole"`
	// Tags assigned to the mission profile.
	Tags []aws.Tag `pulumi:"tags"`
	// The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
	TrackingConfigArn string `pulumi:"trackingConfigArn"`
}

// The set of arguments for constructing a MissionProfile resource.
type MissionProfileArgs struct {
	// Post-pass time needed after the contact.
	ContactPostPassDurationSeconds pulumi.IntPtrInput
	// Pre-pass time needed before the contact.
	ContactPrePassDurationSeconds pulumi.IntPtrInput
	// A dataflow edge defines from where and to where data will flow during a contact.
	DataflowEdges MissionProfileDataflowEdgeArrayInput
	// Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
	MinimumViableContactDurationSeconds pulumi.IntInput
	// A name used to identify a mission profile.
	Name pulumi.StringPtrInput
	// The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
	StreamsKmsKey MissionProfileStreamsKmsKeyPtrInput
	// The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
	StreamsKmsRole pulumi.StringPtrInput
	// Tags assigned to the mission profile.
	Tags aws.TagArrayInput
	// The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
	TrackingConfigArn pulumi.StringInput
}

func (MissionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*missionProfileArgs)(nil)).Elem()
}

type MissionProfileInput interface {
	pulumi.Input

	ToMissionProfileOutput() MissionProfileOutput
	ToMissionProfileOutputWithContext(ctx context.Context) MissionProfileOutput
}

func (*MissionProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**MissionProfile)(nil)).Elem()
}

func (i *MissionProfile) ToMissionProfileOutput() MissionProfileOutput {
	return i.ToMissionProfileOutputWithContext(context.Background())
}

func (i *MissionProfile) ToMissionProfileOutputWithContext(ctx context.Context) MissionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MissionProfileOutput)
}

type MissionProfileOutput struct{ *pulumi.OutputState }

func (MissionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MissionProfile)(nil)).Elem()
}

func (o MissionProfileOutput) ToMissionProfileOutput() MissionProfileOutput {
	return o
}

func (o MissionProfileOutput) ToMissionProfileOutputWithContext(ctx context.Context) MissionProfileOutput {
	return o
}

// The ARN of the mission profile, such as `arn:aws:groundstation:us-east-2:1234567890:mission-profile/9940bf3b-d2ba-427e-9906-842b5e5d2296` .
func (o MissionProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the mission profile, such as `9940bf3b-d2ba-427e-9906-842b5e5d2296` .
func (o MissionProfileOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// Post-pass time needed after the contact.
func (o MissionProfileOutput) ContactPostPassDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.IntPtrOutput { return v.ContactPostPassDurationSeconds }).(pulumi.IntPtrOutput)
}

// Pre-pass time needed before the contact.
func (o MissionProfileOutput) ContactPrePassDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.IntPtrOutput { return v.ContactPrePassDurationSeconds }).(pulumi.IntPtrOutput)
}

// A dataflow edge defines from where and to where data will flow during a contact.
func (o MissionProfileOutput) DataflowEdges() MissionProfileDataflowEdgeArrayOutput {
	return o.ApplyT(func(v *MissionProfile) MissionProfileDataflowEdgeArrayOutput { return v.DataflowEdges }).(MissionProfileDataflowEdgeArrayOutput)
}

// Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
func (o MissionProfileOutput) MinimumViableContactDurationSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.IntOutput { return v.MinimumViableContactDurationSeconds }).(pulumi.IntOutput)
}

// A name used to identify a mission profile.
func (o MissionProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region of the mission profile.
func (o MissionProfileOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
func (o MissionProfileOutput) StreamsKmsKey() MissionProfileStreamsKmsKeyPtrOutput {
	return o.ApplyT(func(v *MissionProfile) MissionProfileStreamsKmsKeyPtrOutput { return v.StreamsKmsKey }).(MissionProfileStreamsKmsKeyPtrOutput)
}

// The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
func (o MissionProfileOutput) StreamsKmsRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.StringPtrOutput { return v.StreamsKmsRole }).(pulumi.StringPtrOutput)
}

// Tags assigned to the mission profile.
func (o MissionProfileOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MissionProfile) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
func (o MissionProfileOutput) TrackingConfigArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MissionProfile) pulumi.StringOutput { return v.TrackingConfigArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MissionProfileInput)(nil)).Elem(), &MissionProfile{})
	pulumi.RegisterOutputType(MissionProfileOutput{})
}
