// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdbelastic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::DocDBElastic::Cluster Amazon DocumentDB (with MongoDB compatibility) Elastic Scale resource describes a Cluster
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("aws-native:docdbelastic:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	ClusterArn string `pulumi:"clusterArn"`
}

type LookupClusterResult struct {
	// The number of days for which automatic snapshots are retained.
	BackupRetentionPeriod *int    `pulumi:"backupRetentionPeriod"`
	ClusterArn            *string `pulumi:"clusterArn"`
	// The URL used to connect to the elastic cluster.
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// The daily time range during which automated backups are created if automated backups are enabled, as determined by `backupRetentionPeriod` .
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
	//
	// *Format* : `ddd:hh24:mi-ddd:hh24:mi`
	//
	// *Default* : a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.
	//
	// *Valid days* : Mon, Tue, Wed, Thu, Fri, Sat, Sun
	//
	// *Constraints* : Minimum 30-minute window.
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// The number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
	ShardCapacity *int `pulumi:"shardCapacity"`
	// The number of shards assigned to the elastic cluster. Maximum is 32.
	ShardCount *int `pulumi:"shardCount"`
	// The number of replica instances applying to all shards in the cluster. A `shardInstanceCount` value of 1 means there is one writer instance, and any additional instances are replicas that can be used for reads and to improve availability.
	ShardInstanceCount *int `pulumi:"shardInstanceCount"`
	// The Amazon EC2 subnet IDs for the new elastic cluster.
	SubnetIds []string `pulumi:"subnetIds"`
	// The tags to be assigned to the new elastic cluster.
	Tags []aws.Tag `pulumi:"tags"`
	// A list of EC2 VPC security groups to associate with the new elastic cluster.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResult, error) {
			args := v.(LookupClusterArgs)
			r, err := LookupCluster(ctx, &args, opts...)
			var s LookupClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterResultOutput)
}

type LookupClusterOutputArgs struct {
	ClusterArn pulumi.StringInput `pulumi:"clusterArn"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

// The number of days for which automatic snapshots are retained.
func (o LookupClusterResultOutput) BackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *int { return v.BackupRetentionPeriod }).(pulumi.IntPtrOutput)
}

func (o LookupClusterResultOutput) ClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.ClusterArn }).(pulumi.StringPtrOutput)
}

// The URL used to connect to the elastic cluster.
func (o LookupClusterResultOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.ClusterEndpoint }).(pulumi.StringPtrOutput)
}

// The daily time range during which automated backups are created if automated backups are enabled, as determined by `backupRetentionPeriod` .
func (o LookupClusterResultOutput) PreferredBackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.PreferredBackupWindow }).(pulumi.StringPtrOutput)
}

// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
//
// *Format* : `ddd:hh24:mi-ddd:hh24:mi`
//
// *Default* : a 30-minute window selected at random from an 8-hour block of time for each AWS Region , occurring on a random day of the week.
//
// *Valid days* : Mon, Tue, Wed, Thu, Fri, Sat, Sun
//
// *Constraints* : Minimum 30-minute window.
func (o LookupClusterResultOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.PreferredMaintenanceWindow }).(pulumi.StringPtrOutput)
}

// The number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
func (o LookupClusterResultOutput) ShardCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *int { return v.ShardCapacity }).(pulumi.IntPtrOutput)
}

// The number of shards assigned to the elastic cluster. Maximum is 32.
func (o LookupClusterResultOutput) ShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *int { return v.ShardCount }).(pulumi.IntPtrOutput)
}

// The number of replica instances applying to all shards in the cluster. A `shardInstanceCount` value of 1 means there is one writer instance, and any additional instances are replicas that can be used for reads and to improve availability.
func (o LookupClusterResultOutput) ShardInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *int { return v.ShardInstanceCount }).(pulumi.IntPtrOutput)
}

// The Amazon EC2 subnet IDs for the new elastic cluster.
func (o LookupClusterResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The tags to be assigned to the new elastic cluster.
func (o LookupClusterResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// A list of EC2 VPC security groups to associate with the new elastic cluster.
func (o LookupClusterResultOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
