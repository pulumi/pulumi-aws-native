// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cur

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::CUR::ReportDefinition resource creates a Cost & Usage Report with user-defined settings. You can use this resource to define settings like time granularity (hourly, daily, monthly), file format (Parquet, CSV), and S3 bucket for delivery of these reports.
//
// Deprecated: ReportDefinition is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ReportDefinition struct {
	pulumi.CustomResourceState

	// A list of manifests that you want Amazon Web Services to create for this report.
	AdditionalArtifacts ReportDefinitionAdditionalArtifactsItemArrayOutput `pulumi:"additionalArtifacts"`
	// A list of strings that indicate additional content that Amazon Web Services includes in the report, such as individual resource IDs.
	AdditionalSchemaElements ReportDefinitionAdditionalSchemaElementsItemArrayOutput `pulumi:"additionalSchemaElements"`
	// The Amazon resource name of the billing view. You can get this value by using the billing view service public APIs.
	BillingViewArn pulumi.StringPtrOutput `pulumi:"billingViewArn"`
	// The compression format that AWS uses for the report.
	Compression ReportDefinitionCompressionOutput `pulumi:"compression"`
	// The format that AWS saves the report in.
	Format ReportDefinitionFormatOutput `pulumi:"format"`
	// Whether you want Amazon Web Services to update your reports after they have been finalized if Amazon Web Services detects charges related to previous months. These charges can include refunds, credits, or support fees.
	RefreshClosedReports pulumi.BoolOutput `pulumi:"refreshClosedReports"`
	// The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.
	ReportName pulumi.StringOutput `pulumi:"reportName"`
	// Whether you want Amazon Web Services to overwrite the previous version of each report or to deliver the report in addition to the previous versions.
	ReportVersioning ReportDefinitionReportVersioningOutput `pulumi:"reportVersioning"`
	// The S3 bucket where AWS delivers the report.
	S3Bucket pulumi.StringOutput `pulumi:"s3Bucket"`
	// The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
	S3Prefix pulumi.StringOutput `pulumi:"s3Prefix"`
	// The region of the S3 bucket that AWS delivers the report into.
	S3Region pulumi.StringOutput `pulumi:"s3Region"`
	// The granularity of the line items in the report.
	TimeUnit ReportDefinitionTimeUnitOutput `pulumi:"timeUnit"`
}

// NewReportDefinition registers a new resource with the given unique name, arguments, and options.
func NewReportDefinition(ctx *pulumi.Context,
	name string, args *ReportDefinitionArgs, opts ...pulumi.ResourceOption) (*ReportDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Compression == nil {
		return nil, errors.New("invalid value for required argument 'Compression'")
	}
	if args.Format == nil {
		return nil, errors.New("invalid value for required argument 'Format'")
	}
	if args.RefreshClosedReports == nil {
		return nil, errors.New("invalid value for required argument 'RefreshClosedReports'")
	}
	if args.ReportName == nil {
		return nil, errors.New("invalid value for required argument 'ReportName'")
	}
	if args.ReportVersioning == nil {
		return nil, errors.New("invalid value for required argument 'ReportVersioning'")
	}
	if args.S3Bucket == nil {
		return nil, errors.New("invalid value for required argument 'S3Bucket'")
	}
	if args.S3Prefix == nil {
		return nil, errors.New("invalid value for required argument 'S3Prefix'")
	}
	if args.S3Region == nil {
		return nil, errors.New("invalid value for required argument 'S3Region'")
	}
	if args.TimeUnit == nil {
		return nil, errors.New("invalid value for required argument 'TimeUnit'")
	}
	var resource ReportDefinition
	err := ctx.RegisterResource("aws-native:cur:ReportDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportDefinition gets an existing ReportDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportDefinitionState, opts ...pulumi.ResourceOption) (*ReportDefinition, error) {
	var resource ReportDefinition
	err := ctx.ReadResource("aws-native:cur:ReportDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportDefinition resources.
type reportDefinitionState struct {
}

type ReportDefinitionState struct {
}

func (ReportDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportDefinitionState)(nil)).Elem()
}

type reportDefinitionArgs struct {
	// A list of manifests that you want Amazon Web Services to create for this report.
	AdditionalArtifacts []ReportDefinitionAdditionalArtifactsItem `pulumi:"additionalArtifacts"`
	// A list of strings that indicate additional content that Amazon Web Services includes in the report, such as individual resource IDs.
	AdditionalSchemaElements []ReportDefinitionAdditionalSchemaElementsItem `pulumi:"additionalSchemaElements"`
	// The Amazon resource name of the billing view. You can get this value by using the billing view service public APIs.
	BillingViewArn *string `pulumi:"billingViewArn"`
	// The compression format that AWS uses for the report.
	Compression ReportDefinitionCompression `pulumi:"compression"`
	// The format that AWS saves the report in.
	Format ReportDefinitionFormat `pulumi:"format"`
	// Whether you want Amazon Web Services to update your reports after they have been finalized if Amazon Web Services detects charges related to previous months. These charges can include refunds, credits, or support fees.
	RefreshClosedReports bool `pulumi:"refreshClosedReports"`
	// The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.
	ReportName string `pulumi:"reportName"`
	// Whether you want Amazon Web Services to overwrite the previous version of each report or to deliver the report in addition to the previous versions.
	ReportVersioning ReportDefinitionReportVersioning `pulumi:"reportVersioning"`
	// The S3 bucket where AWS delivers the report.
	S3Bucket string `pulumi:"s3Bucket"`
	// The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
	S3Prefix string `pulumi:"s3Prefix"`
	// The region of the S3 bucket that AWS delivers the report into.
	S3Region string `pulumi:"s3Region"`
	// The granularity of the line items in the report.
	TimeUnit ReportDefinitionTimeUnit `pulumi:"timeUnit"`
}

// The set of arguments for constructing a ReportDefinition resource.
type ReportDefinitionArgs struct {
	// A list of manifests that you want Amazon Web Services to create for this report.
	AdditionalArtifacts ReportDefinitionAdditionalArtifactsItemArrayInput
	// A list of strings that indicate additional content that Amazon Web Services includes in the report, such as individual resource IDs.
	AdditionalSchemaElements ReportDefinitionAdditionalSchemaElementsItemArrayInput
	// The Amazon resource name of the billing view. You can get this value by using the billing view service public APIs.
	BillingViewArn pulumi.StringPtrInput
	// The compression format that AWS uses for the report.
	Compression ReportDefinitionCompressionInput
	// The format that AWS saves the report in.
	Format ReportDefinitionFormatInput
	// Whether you want Amazon Web Services to update your reports after they have been finalized if Amazon Web Services detects charges related to previous months. These charges can include refunds, credits, or support fees.
	RefreshClosedReports pulumi.BoolInput
	// The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.
	ReportName pulumi.StringInput
	// Whether you want Amazon Web Services to overwrite the previous version of each report or to deliver the report in addition to the previous versions.
	ReportVersioning ReportDefinitionReportVersioningInput
	// The S3 bucket where AWS delivers the report.
	S3Bucket pulumi.StringInput
	// The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
	S3Prefix pulumi.StringInput
	// The region of the S3 bucket that AWS delivers the report into.
	S3Region pulumi.StringInput
	// The granularity of the line items in the report.
	TimeUnit ReportDefinitionTimeUnitInput
}

func (ReportDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportDefinitionArgs)(nil)).Elem()
}

type ReportDefinitionInput interface {
	pulumi.Input

	ToReportDefinitionOutput() ReportDefinitionOutput
	ToReportDefinitionOutputWithContext(ctx context.Context) ReportDefinitionOutput
}

func (*ReportDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDefinition)(nil))
}

func (i *ReportDefinition) ToReportDefinitionOutput() ReportDefinitionOutput {
	return i.ToReportDefinitionOutputWithContext(context.Background())
}

func (i *ReportDefinition) ToReportDefinitionOutputWithContext(ctx context.Context) ReportDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDefinitionOutput)
}

type ReportDefinitionOutput struct{ *pulumi.OutputState }

func (ReportDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDefinition)(nil))
}

func (o ReportDefinitionOutput) ToReportDefinitionOutput() ReportDefinitionOutput {
	return o
}

func (o ReportDefinitionOutput) ToReportDefinitionOutputWithContext(ctx context.Context) ReportDefinitionOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReportDefinitionInput)(nil)).Elem(), &ReportDefinition{})
	pulumi.RegisterOutputType(ReportDefinitionOutput{})
}
