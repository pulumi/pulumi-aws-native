// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cur

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::CUR::ReportDefinition resource creates a Cost & Usage Report with user-defined settings. You can use this resource to define settings like time granularity (hourly, daily, monthly), file format (Parquet, CSV), and S3 bucket for delivery of these reports.
func LookupReportDefinition(ctx *pulumi.Context, args *LookupReportDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupReportDefinitionResult, error) {
	var rv LookupReportDefinitionResult
	err := ctx.Invoke("aws-native:cur:getReportDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupReportDefinitionArgs struct {
	// The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.
	ReportName string `pulumi:"reportName"`
}

type LookupReportDefinitionResult struct {
	// A list of manifests that you want Amazon Web Services to create for this report.
	AdditionalArtifacts []ReportDefinitionAdditionalArtifactsItem `pulumi:"additionalArtifacts"`
	// The compression format that AWS uses for the report.
	Compression *ReportDefinitionCompression `pulumi:"compression"`
	// The format that AWS saves the report in.
	Format *ReportDefinitionFormat `pulumi:"format"`
	// Whether you want Amazon Web Services to update your reports after they have been finalized if Amazon Web Services detects charges related to previous months. These charges can include refunds, credits, or support fees.
	RefreshClosedReports *bool `pulumi:"refreshClosedReports"`
	// The S3 bucket where AWS delivers the report.
	S3Bucket *string `pulumi:"s3Bucket"`
	// The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
	S3Prefix *string `pulumi:"s3Prefix"`
	// The region of the S3 bucket that AWS delivers the report into.
	S3Region *string `pulumi:"s3Region"`
}

func LookupReportDefinitionOutput(ctx *pulumi.Context, args LookupReportDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupReportDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReportDefinitionResult, error) {
			args := v.(LookupReportDefinitionArgs)
			r, err := LookupReportDefinition(ctx, &args, opts...)
			var s LookupReportDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReportDefinitionResultOutput)
}

type LookupReportDefinitionOutputArgs struct {
	// The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces.
	ReportName pulumi.StringInput `pulumi:"reportName"`
}

func (LookupReportDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReportDefinitionArgs)(nil)).Elem()
}

type LookupReportDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupReportDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReportDefinitionResult)(nil)).Elem()
}

func (o LookupReportDefinitionResultOutput) ToLookupReportDefinitionResultOutput() LookupReportDefinitionResultOutput {
	return o
}

func (o LookupReportDefinitionResultOutput) ToLookupReportDefinitionResultOutputWithContext(ctx context.Context) LookupReportDefinitionResultOutput {
	return o
}

// A list of manifests that you want Amazon Web Services to create for this report.
func (o LookupReportDefinitionResultOutput) AdditionalArtifacts() ReportDefinitionAdditionalArtifactsItemArrayOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) []ReportDefinitionAdditionalArtifactsItem {
		return v.AdditionalArtifacts
	}).(ReportDefinitionAdditionalArtifactsItemArrayOutput)
}

// The compression format that AWS uses for the report.
func (o LookupReportDefinitionResultOutput) Compression() ReportDefinitionCompressionPtrOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) *ReportDefinitionCompression { return v.Compression }).(ReportDefinitionCompressionPtrOutput)
}

// The format that AWS saves the report in.
func (o LookupReportDefinitionResultOutput) Format() ReportDefinitionFormatPtrOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) *ReportDefinitionFormat { return v.Format }).(ReportDefinitionFormatPtrOutput)
}

// Whether you want Amazon Web Services to update your reports after they have been finalized if Amazon Web Services detects charges related to previous months. These charges can include refunds, credits, or support fees.
func (o LookupReportDefinitionResultOutput) RefreshClosedReports() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) *bool { return v.RefreshClosedReports }).(pulumi.BoolPtrOutput)
}

// The S3 bucket where AWS delivers the report.
func (o LookupReportDefinitionResultOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) *string { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

// The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces.
func (o LookupReportDefinitionResultOutput) S3Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) *string { return v.S3Prefix }).(pulumi.StringPtrOutput)
}

// The region of the S3 bucket that AWS delivers the report into.
func (o LookupReportDefinitionResultOutput) S3Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) *string { return v.S3Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReportDefinitionResultOutput{})
}
