// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A custom key-value pair associated with a resource within your organization.
type AccountTag struct {
	// The key identifier, or name, of the tag.
	Key string `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value string `pulumi:"value"`
}

// AccountTagInput is an input type that accepts AccountTagArgs and AccountTagOutput values.
// You can construct a concrete instance of `AccountTagInput` via:
//
//	AccountTagArgs{...}
type AccountTagInput interface {
	pulumi.Input

	ToAccountTagOutput() AccountTagOutput
	ToAccountTagOutputWithContext(context.Context) AccountTagOutput
}

// A custom key-value pair associated with a resource within your organization.
type AccountTagArgs struct {
	// The key identifier, or name, of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AccountTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountTag)(nil)).Elem()
}

func (i AccountTagArgs) ToAccountTagOutput() AccountTagOutput {
	return i.ToAccountTagOutputWithContext(context.Background())
}

func (i AccountTagArgs) ToAccountTagOutputWithContext(ctx context.Context) AccountTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTagOutput)
}

// AccountTagArrayInput is an input type that accepts AccountTagArray and AccountTagArrayOutput values.
// You can construct a concrete instance of `AccountTagArrayInput` via:
//
//	AccountTagArray{ AccountTagArgs{...} }
type AccountTagArrayInput interface {
	pulumi.Input

	ToAccountTagArrayOutput() AccountTagArrayOutput
	ToAccountTagArrayOutputWithContext(context.Context) AccountTagArrayOutput
}

type AccountTagArray []AccountTagInput

func (AccountTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountTag)(nil)).Elem()
}

func (i AccountTagArray) ToAccountTagArrayOutput() AccountTagArrayOutput {
	return i.ToAccountTagArrayOutputWithContext(context.Background())
}

func (i AccountTagArray) ToAccountTagArrayOutputWithContext(ctx context.Context) AccountTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTagArrayOutput)
}

// A custom key-value pair associated with a resource within your organization.
type AccountTagOutput struct{ *pulumi.OutputState }

func (AccountTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountTag)(nil)).Elem()
}

func (o AccountTagOutput) ToAccountTagOutput() AccountTagOutput {
	return o
}

func (o AccountTagOutput) ToAccountTagOutputWithContext(ctx context.Context) AccountTagOutput {
	return o
}

// The key identifier, or name, of the tag.
func (o AccountTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
func (o AccountTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTag) string { return v.Value }).(pulumi.StringOutput)
}

type AccountTagArrayOutput struct{ *pulumi.OutputState }

func (AccountTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountTag)(nil)).Elem()
}

func (o AccountTagArrayOutput) ToAccountTagArrayOutput() AccountTagArrayOutput {
	return o
}

func (o AccountTagArrayOutput) ToAccountTagArrayOutputWithContext(ctx context.Context) AccountTagArrayOutput {
	return o
}

func (o AccountTagArrayOutput) Index(i pulumi.IntInput) AccountTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountTag {
		return vs[0].([]AccountTag)[vs[1].(int)]
	}).(AccountTagOutput)
}

// A custom key-value pair associated with a resource within your organization.
type OrganizationalUnitTag struct {
	// The key identifier, or name, of the tag.
	Key string `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value string `pulumi:"value"`
}

// OrganizationalUnitTagInput is an input type that accepts OrganizationalUnitTagArgs and OrganizationalUnitTagOutput values.
// You can construct a concrete instance of `OrganizationalUnitTagInput` via:
//
//	OrganizationalUnitTagArgs{...}
type OrganizationalUnitTagInput interface {
	pulumi.Input

	ToOrganizationalUnitTagOutput() OrganizationalUnitTagOutput
	ToOrganizationalUnitTagOutputWithContext(context.Context) OrganizationalUnitTagOutput
}

// A custom key-value pair associated with a resource within your organization.
type OrganizationalUnitTagArgs struct {
	// The key identifier, or name, of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OrganizationalUnitTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitTag)(nil)).Elem()
}

func (i OrganizationalUnitTagArgs) ToOrganizationalUnitTagOutput() OrganizationalUnitTagOutput {
	return i.ToOrganizationalUnitTagOutputWithContext(context.Background())
}

func (i OrganizationalUnitTagArgs) ToOrganizationalUnitTagOutputWithContext(ctx context.Context) OrganizationalUnitTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitTagOutput)
}

// OrganizationalUnitTagArrayInput is an input type that accepts OrganizationalUnitTagArray and OrganizationalUnitTagArrayOutput values.
// You can construct a concrete instance of `OrganizationalUnitTagArrayInput` via:
//
//	OrganizationalUnitTagArray{ OrganizationalUnitTagArgs{...} }
type OrganizationalUnitTagArrayInput interface {
	pulumi.Input

	ToOrganizationalUnitTagArrayOutput() OrganizationalUnitTagArrayOutput
	ToOrganizationalUnitTagArrayOutputWithContext(context.Context) OrganizationalUnitTagArrayOutput
}

type OrganizationalUnitTagArray []OrganizationalUnitTagInput

func (OrganizationalUnitTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitTag)(nil)).Elem()
}

func (i OrganizationalUnitTagArray) ToOrganizationalUnitTagArrayOutput() OrganizationalUnitTagArrayOutput {
	return i.ToOrganizationalUnitTagArrayOutputWithContext(context.Background())
}

func (i OrganizationalUnitTagArray) ToOrganizationalUnitTagArrayOutputWithContext(ctx context.Context) OrganizationalUnitTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitTagArrayOutput)
}

// A custom key-value pair associated with a resource within your organization.
type OrganizationalUnitTagOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitTag)(nil)).Elem()
}

func (o OrganizationalUnitTagOutput) ToOrganizationalUnitTagOutput() OrganizationalUnitTagOutput {
	return o
}

func (o OrganizationalUnitTagOutput) ToOrganizationalUnitTagOutputWithContext(ctx context.Context) OrganizationalUnitTagOutput {
	return o
}

// The key identifier, or name, of the tag.
func (o OrganizationalUnitTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
func (o OrganizationalUnitTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitTag) string { return v.Value }).(pulumi.StringOutput)
}

type OrganizationalUnitTagArrayOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitTag)(nil)).Elem()
}

func (o OrganizationalUnitTagArrayOutput) ToOrganizationalUnitTagArrayOutput() OrganizationalUnitTagArrayOutput {
	return o
}

func (o OrganizationalUnitTagArrayOutput) ToOrganizationalUnitTagArrayOutputWithContext(ctx context.Context) OrganizationalUnitTagArrayOutput {
	return o
}

func (o OrganizationalUnitTagArrayOutput) Index(i pulumi.IntInput) OrganizationalUnitTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationalUnitTag {
		return vs[0].([]OrganizationalUnitTag)[vs[1].(int)]
	}).(OrganizationalUnitTagOutput)
}

// A custom key-value pair associated with a resource within your organization.
type PolicyTag struct {
	// The key identifier, or name, of the tag.
	Key string `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value string `pulumi:"value"`
}

// PolicyTagInput is an input type that accepts PolicyTagArgs and PolicyTagOutput values.
// You can construct a concrete instance of `PolicyTagInput` via:
//
//	PolicyTagArgs{...}
type PolicyTagInput interface {
	pulumi.Input

	ToPolicyTagOutput() PolicyTagOutput
	ToPolicyTagOutputWithContext(context.Context) PolicyTagOutput
}

// A custom key-value pair associated with a resource within your organization.
type PolicyTagArgs struct {
	// The key identifier, or name, of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTag)(nil)).Elem()
}

func (i PolicyTagArgs) ToPolicyTagOutput() PolicyTagOutput {
	return i.ToPolicyTagOutputWithContext(context.Background())
}

func (i PolicyTagArgs) ToPolicyTagOutputWithContext(ctx context.Context) PolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTagOutput)
}

// PolicyTagArrayInput is an input type that accepts PolicyTagArray and PolicyTagArrayOutput values.
// You can construct a concrete instance of `PolicyTagArrayInput` via:
//
//	PolicyTagArray{ PolicyTagArgs{...} }
type PolicyTagArrayInput interface {
	pulumi.Input

	ToPolicyTagArrayOutput() PolicyTagArrayOutput
	ToPolicyTagArrayOutputWithContext(context.Context) PolicyTagArrayOutput
}

type PolicyTagArray []PolicyTagInput

func (PolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTag)(nil)).Elem()
}

func (i PolicyTagArray) ToPolicyTagArrayOutput() PolicyTagArrayOutput {
	return i.ToPolicyTagArrayOutputWithContext(context.Background())
}

func (i PolicyTagArray) ToPolicyTagArrayOutputWithContext(ctx context.Context) PolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTagArrayOutput)
}

// A custom key-value pair associated with a resource within your organization.
type PolicyTagOutput struct{ *pulumi.OutputState }

func (PolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTag)(nil)).Elem()
}

func (o PolicyTagOutput) ToPolicyTagOutput() PolicyTagOutput {
	return o
}

func (o PolicyTagOutput) ToPolicyTagOutputWithContext(ctx context.Context) PolicyTagOutput {
	return o
}

// The key identifier, or name, of the tag.
func (o PolicyTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
func (o PolicyTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTag) string { return v.Value }).(pulumi.StringOutput)
}

type PolicyTagArrayOutput struct{ *pulumi.OutputState }

func (PolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTag)(nil)).Elem()
}

func (o PolicyTagArrayOutput) ToPolicyTagArrayOutput() PolicyTagArrayOutput {
	return o
}

func (o PolicyTagArrayOutput) ToPolicyTagArrayOutputWithContext(ctx context.Context) PolicyTagArrayOutput {
	return o
}

func (o PolicyTagArrayOutput) Index(i pulumi.IntInput) PolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTag {
		return vs[0].([]PolicyTag)[vs[1].(int)]
	}).(PolicyTagOutput)
}

// A custom key-value pair associated with a resource within your organization.
type ResourcePolicyTag struct {
	// The key identifier, or name, of the tag.
	Key string `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value string `pulumi:"value"`
}

// ResourcePolicyTagInput is an input type that accepts ResourcePolicyTagArgs and ResourcePolicyTagOutput values.
// You can construct a concrete instance of `ResourcePolicyTagInput` via:
//
//	ResourcePolicyTagArgs{...}
type ResourcePolicyTagInput interface {
	pulumi.Input

	ToResourcePolicyTagOutput() ResourcePolicyTagOutput
	ToResourcePolicyTagOutputWithContext(context.Context) ResourcePolicyTagOutput
}

// A custom key-value pair associated with a resource within your organization.
type ResourcePolicyTagArgs struct {
	// The key identifier, or name, of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResourcePolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyTag)(nil)).Elem()
}

func (i ResourcePolicyTagArgs) ToResourcePolicyTagOutput() ResourcePolicyTagOutput {
	return i.ToResourcePolicyTagOutputWithContext(context.Background())
}

func (i ResourcePolicyTagArgs) ToResourcePolicyTagOutputWithContext(ctx context.Context) ResourcePolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyTagOutput)
}

// ResourcePolicyTagArrayInput is an input type that accepts ResourcePolicyTagArray and ResourcePolicyTagArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyTagArrayInput` via:
//
//	ResourcePolicyTagArray{ ResourcePolicyTagArgs{...} }
type ResourcePolicyTagArrayInput interface {
	pulumi.Input

	ToResourcePolicyTagArrayOutput() ResourcePolicyTagArrayOutput
	ToResourcePolicyTagArrayOutputWithContext(context.Context) ResourcePolicyTagArrayOutput
}

type ResourcePolicyTagArray []ResourcePolicyTagInput

func (ResourcePolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyTag)(nil)).Elem()
}

func (i ResourcePolicyTagArray) ToResourcePolicyTagArrayOutput() ResourcePolicyTagArrayOutput {
	return i.ToResourcePolicyTagArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyTagArray) ToResourcePolicyTagArrayOutputWithContext(ctx context.Context) ResourcePolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyTagArrayOutput)
}

// A custom key-value pair associated with a resource within your organization.
type ResourcePolicyTagOutput struct{ *pulumi.OutputState }

func (ResourcePolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyTag)(nil)).Elem()
}

func (o ResourcePolicyTagOutput) ToResourcePolicyTagOutput() ResourcePolicyTagOutput {
	return o
}

func (o ResourcePolicyTagOutput) ToResourcePolicyTagOutputWithContext(ctx context.Context) ResourcePolicyTagOutput {
	return o
}

// The key identifier, or name, of the tag.
func (o ResourcePolicyTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePolicyTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string value that's associated with the key of the tag. You can set the value of a tag to an empty string, but you can't set the value of a tag to null.
func (o ResourcePolicyTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePolicyTag) string { return v.Value }).(pulumi.StringOutput)
}

type ResourcePolicyTagArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyTag)(nil)).Elem()
}

func (o ResourcePolicyTagArrayOutput) ToResourcePolicyTagArrayOutput() ResourcePolicyTagArrayOutput {
	return o
}

func (o ResourcePolicyTagArrayOutput) ToResourcePolicyTagArrayOutputWithContext(ctx context.Context) ResourcePolicyTagArrayOutput {
	return o
}

func (o ResourcePolicyTagArrayOutput) Index(i pulumi.IntInput) ResourcePolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePolicyTag {
		return vs[0].([]ResourcePolicyTag)[vs[1].(int)]
	}).(ResourcePolicyTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTagInput)(nil)).Elem(), AccountTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTagArrayInput)(nil)).Elem(), AccountTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationalUnitTagInput)(nil)).Elem(), OrganizationalUnitTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationalUnitTagArrayInput)(nil)).Elem(), OrganizationalUnitTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTagInput)(nil)).Elem(), PolicyTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTagArrayInput)(nil)).Elem(), PolicyTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyTagInput)(nil)).Elem(), ResourcePolicyTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyTagArrayInput)(nil)).Elem(), ResourcePolicyTagArray{})
	pulumi.RegisterOutputType(AccountTagOutput{})
	pulumi.RegisterOutputType(AccountTagArrayOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitTagOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyTagOutput{})
	pulumi.RegisterOutputType(PolicyTagArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyTagOutput{})
	pulumi.RegisterOutputType(ResourcePolicyTagArrayOutput{})
}
