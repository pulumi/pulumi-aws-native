// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rekognition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::Rekognition::Collection type creates an Amazon Rekognition Collection. A collection is a logical grouping of information about detected faces which can later be referenced for searches on the group
func LookupCollection(ctx *pulumi.Context, args *LookupCollectionArgs, opts ...pulumi.InvokeOption) (*LookupCollectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCollectionResult
	err := ctx.Invoke("aws-native:rekognition:getCollection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCollectionArgs struct {
	// ID for the collection that you are creating.
	CollectionId string `pulumi:"collectionId"`
}

type LookupCollectionResult struct {
	// Returns the Amazon Resource Name of the collection.
	Arn *string `pulumi:"arn"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCollectionOutput(ctx *pulumi.Context, args LookupCollectionOutputArgs, opts ...pulumi.InvokeOption) LookupCollectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCollectionResultOutput, error) {
			args := v.(LookupCollectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:rekognition:getCollection", args, LookupCollectionResultOutput{}, options).(LookupCollectionResultOutput), nil
		}).(LookupCollectionResultOutput)
}

type LookupCollectionOutputArgs struct {
	// ID for the collection that you are creating.
	CollectionId pulumi.StringInput `pulumi:"collectionId"`
}

func (LookupCollectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCollectionArgs)(nil)).Elem()
}

type LookupCollectionResultOutput struct{ *pulumi.OutputState }

func (LookupCollectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCollectionResult)(nil)).Elem()
}

func (o LookupCollectionResultOutput) ToLookupCollectionResultOutput() LookupCollectionResultOutput {
	return o
}

func (o LookupCollectionResultOutput) ToLookupCollectionResultOutputWithContext(ctx context.Context) LookupCollectionResultOutput {
	return o
}

// Returns the Amazon Resource Name of the collection.
func (o LookupCollectionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCollectionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupCollectionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCollectionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCollectionResultOutput{})
}
