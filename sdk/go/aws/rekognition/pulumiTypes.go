// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rekognition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type CollectionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// CollectionTagInput is an input type that accepts CollectionTagArgs and CollectionTagOutput values.
// You can construct a concrete instance of `CollectionTagInput` via:
//
//          CollectionTagArgs{...}
type CollectionTagInput interface {
	pulumi.Input

	ToCollectionTagOutput() CollectionTagOutput
	ToCollectionTagOutputWithContext(context.Context) CollectionTagOutput
}

// A key-value pair to associate with a resource.
type CollectionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CollectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionTag)(nil)).Elem()
}

func (i CollectionTagArgs) ToCollectionTagOutput() CollectionTagOutput {
	return i.ToCollectionTagOutputWithContext(context.Background())
}

func (i CollectionTagArgs) ToCollectionTagOutputWithContext(ctx context.Context) CollectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionTagOutput)
}

// CollectionTagArrayInput is an input type that accepts CollectionTagArray and CollectionTagArrayOutput values.
// You can construct a concrete instance of `CollectionTagArrayInput` via:
//
//          CollectionTagArray{ CollectionTagArgs{...} }
type CollectionTagArrayInput interface {
	pulumi.Input

	ToCollectionTagArrayOutput() CollectionTagArrayOutput
	ToCollectionTagArrayOutputWithContext(context.Context) CollectionTagArrayOutput
}

type CollectionTagArray []CollectionTagInput

func (CollectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CollectionTag)(nil)).Elem()
}

func (i CollectionTagArray) ToCollectionTagArrayOutput() CollectionTagArrayOutput {
	return i.ToCollectionTagArrayOutputWithContext(context.Background())
}

func (i CollectionTagArray) ToCollectionTagArrayOutputWithContext(ctx context.Context) CollectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionTagArrayOutput)
}

// A key-value pair to associate with a resource.
type CollectionTagOutput struct{ *pulumi.OutputState }

func (CollectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionTag)(nil)).Elem()
}

func (o CollectionTagOutput) ToCollectionTagOutput() CollectionTagOutput {
	return o
}

func (o CollectionTagOutput) ToCollectionTagOutputWithContext(ctx context.Context) CollectionTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CollectionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CollectionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionTag) string { return v.Value }).(pulumi.StringOutput)
}

type CollectionTagArrayOutput struct{ *pulumi.OutputState }

func (CollectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CollectionTag)(nil)).Elem()
}

func (o CollectionTagArrayOutput) ToCollectionTagArrayOutput() CollectionTagArrayOutput {
	return o
}

func (o CollectionTagArrayOutput) ToCollectionTagArrayOutputWithContext(ctx context.Context) CollectionTagArrayOutput {
	return o
}

func (o CollectionTagArrayOutput) Index(i pulumi.IntInput) CollectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CollectionTag {
		return vs[0].([]CollectionTag)[vs[1].(int)]
	}).(CollectionTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionTagInput)(nil)).Elem(), CollectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionTagArrayInput)(nil)).Elem(), CollectionTagArray{})
	pulumi.RegisterOutputType(CollectionTagOutput{})
	pulumi.RegisterOutputType(CollectionTagArrayOutput{})
}
