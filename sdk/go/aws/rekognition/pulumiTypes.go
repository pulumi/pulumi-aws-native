// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rekognition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type CollectionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// CollectionTagInput is an input type that accepts CollectionTagArgs and CollectionTagOutput values.
// You can construct a concrete instance of `CollectionTagInput` via:
//
//          CollectionTagArgs{...}
type CollectionTagInput interface {
	pulumi.Input

	ToCollectionTagOutput() CollectionTagOutput
	ToCollectionTagOutputWithContext(context.Context) CollectionTagOutput
}

// A key-value pair to associate with a resource.
type CollectionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CollectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionTag)(nil)).Elem()
}

func (i CollectionTagArgs) ToCollectionTagOutput() CollectionTagOutput {
	return i.ToCollectionTagOutputWithContext(context.Background())
}

func (i CollectionTagArgs) ToCollectionTagOutputWithContext(ctx context.Context) CollectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionTagOutput)
}

// CollectionTagArrayInput is an input type that accepts CollectionTagArray and CollectionTagArrayOutput values.
// You can construct a concrete instance of `CollectionTagArrayInput` via:
//
//          CollectionTagArray{ CollectionTagArgs{...} }
type CollectionTagArrayInput interface {
	pulumi.Input

	ToCollectionTagArrayOutput() CollectionTagArrayOutput
	ToCollectionTagArrayOutputWithContext(context.Context) CollectionTagArrayOutput
}

type CollectionTagArray []CollectionTagInput

func (CollectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CollectionTag)(nil)).Elem()
}

func (i CollectionTagArray) ToCollectionTagArrayOutput() CollectionTagArrayOutput {
	return i.ToCollectionTagArrayOutputWithContext(context.Background())
}

func (i CollectionTagArray) ToCollectionTagArrayOutputWithContext(ctx context.Context) CollectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionTagArrayOutput)
}

// A key-value pair to associate with a resource.
type CollectionTagOutput struct{ *pulumi.OutputState }

func (CollectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionTag)(nil)).Elem()
}

func (o CollectionTagOutput) ToCollectionTagOutput() CollectionTagOutput {
	return o
}

func (o CollectionTagOutput) ToCollectionTagOutputWithContext(ctx context.Context) CollectionTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CollectionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CollectionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionTag) string { return v.Value }).(pulumi.StringOutput)
}

type CollectionTagArrayOutput struct{ *pulumi.OutputState }

func (CollectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CollectionTag)(nil)).Elem()
}

func (o CollectionTagArrayOutput) ToCollectionTagArrayOutput() CollectionTagArrayOutput {
	return o
}

func (o CollectionTagArrayOutput) ToCollectionTagArrayOutputWithContext(ctx context.Context) CollectionTagArrayOutput {
	return o
}

func (o CollectionTagArrayOutput) Index(i pulumi.IntInput) CollectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CollectionTag {
		return vs[0].([]CollectionTag)[vs[1].(int)]
	}).(CollectionTagOutput)
}

// A bounding box denoting a region of interest in the frame to be analyzed.
type StreamProcessorBoundingBox struct {
	Height float64 `pulumi:"height"`
	Left   float64 `pulumi:"left"`
	Top    float64 `pulumi:"top"`
	Width  float64 `pulumi:"width"`
}

// StreamProcessorBoundingBoxInput is an input type that accepts StreamProcessorBoundingBoxArgs and StreamProcessorBoundingBoxOutput values.
// You can construct a concrete instance of `StreamProcessorBoundingBoxInput` via:
//
//          StreamProcessorBoundingBoxArgs{...}
type StreamProcessorBoundingBoxInput interface {
	pulumi.Input

	ToStreamProcessorBoundingBoxOutput() StreamProcessorBoundingBoxOutput
	ToStreamProcessorBoundingBoxOutputWithContext(context.Context) StreamProcessorBoundingBoxOutput
}

// A bounding box denoting a region of interest in the frame to be analyzed.
type StreamProcessorBoundingBoxArgs struct {
	Height pulumi.Float64Input `pulumi:"height"`
	Left   pulumi.Float64Input `pulumi:"left"`
	Top    pulumi.Float64Input `pulumi:"top"`
	Width  pulumi.Float64Input `pulumi:"width"`
}

func (StreamProcessorBoundingBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorBoundingBox)(nil)).Elem()
}

func (i StreamProcessorBoundingBoxArgs) ToStreamProcessorBoundingBoxOutput() StreamProcessorBoundingBoxOutput {
	return i.ToStreamProcessorBoundingBoxOutputWithContext(context.Background())
}

func (i StreamProcessorBoundingBoxArgs) ToStreamProcessorBoundingBoxOutputWithContext(ctx context.Context) StreamProcessorBoundingBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorBoundingBoxOutput)
}

// StreamProcessorBoundingBoxArrayInput is an input type that accepts StreamProcessorBoundingBoxArray and StreamProcessorBoundingBoxArrayOutput values.
// You can construct a concrete instance of `StreamProcessorBoundingBoxArrayInput` via:
//
//          StreamProcessorBoundingBoxArray{ StreamProcessorBoundingBoxArgs{...} }
type StreamProcessorBoundingBoxArrayInput interface {
	pulumi.Input

	ToStreamProcessorBoundingBoxArrayOutput() StreamProcessorBoundingBoxArrayOutput
	ToStreamProcessorBoundingBoxArrayOutputWithContext(context.Context) StreamProcessorBoundingBoxArrayOutput
}

type StreamProcessorBoundingBoxArray []StreamProcessorBoundingBoxInput

func (StreamProcessorBoundingBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamProcessorBoundingBox)(nil)).Elem()
}

func (i StreamProcessorBoundingBoxArray) ToStreamProcessorBoundingBoxArrayOutput() StreamProcessorBoundingBoxArrayOutput {
	return i.ToStreamProcessorBoundingBoxArrayOutputWithContext(context.Background())
}

func (i StreamProcessorBoundingBoxArray) ToStreamProcessorBoundingBoxArrayOutputWithContext(ctx context.Context) StreamProcessorBoundingBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorBoundingBoxArrayOutput)
}

// A bounding box denoting a region of interest in the frame to be analyzed.
type StreamProcessorBoundingBoxOutput struct{ *pulumi.OutputState }

func (StreamProcessorBoundingBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorBoundingBox)(nil)).Elem()
}

func (o StreamProcessorBoundingBoxOutput) ToStreamProcessorBoundingBoxOutput() StreamProcessorBoundingBoxOutput {
	return o
}

func (o StreamProcessorBoundingBoxOutput) ToStreamProcessorBoundingBoxOutputWithContext(ctx context.Context) StreamProcessorBoundingBoxOutput {
	return o
}

func (o StreamProcessorBoundingBoxOutput) Height() pulumi.Float64Output {
	return o.ApplyT(func(v StreamProcessorBoundingBox) float64 { return v.Height }).(pulumi.Float64Output)
}

func (o StreamProcessorBoundingBoxOutput) Left() pulumi.Float64Output {
	return o.ApplyT(func(v StreamProcessorBoundingBox) float64 { return v.Left }).(pulumi.Float64Output)
}

func (o StreamProcessorBoundingBoxOutput) Top() pulumi.Float64Output {
	return o.ApplyT(func(v StreamProcessorBoundingBox) float64 { return v.Top }).(pulumi.Float64Output)
}

func (o StreamProcessorBoundingBoxOutput) Width() pulumi.Float64Output {
	return o.ApplyT(func(v StreamProcessorBoundingBox) float64 { return v.Width }).(pulumi.Float64Output)
}

type StreamProcessorBoundingBoxArrayOutput struct{ *pulumi.OutputState }

func (StreamProcessorBoundingBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamProcessorBoundingBox)(nil)).Elem()
}

func (o StreamProcessorBoundingBoxArrayOutput) ToStreamProcessorBoundingBoxArrayOutput() StreamProcessorBoundingBoxArrayOutput {
	return o
}

func (o StreamProcessorBoundingBoxArrayOutput) ToStreamProcessorBoundingBoxArrayOutputWithContext(ctx context.Context) StreamProcessorBoundingBoxArrayOutput {
	return o
}

func (o StreamProcessorBoundingBoxArrayOutput) Index(i pulumi.IntInput) StreamProcessorBoundingBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamProcessorBoundingBox {
		return vs[0].([]StreamProcessorBoundingBox)[vs[1].(int)]
	}).(StreamProcessorBoundingBoxOutput)
}

// Connected home settings to use on a streaming video. Note that either ConnectedHomeSettings or FaceSearchSettings should be set. Not both
type StreamProcessorConnectedHomeSettings struct {
	Labels []string `pulumi:"labels"`
	// Minimum object class match confidence score that must be met to return a result for a recognized object.
	MinConfidence *float64 `pulumi:"minConfidence"`
}

// StreamProcessorConnectedHomeSettingsInput is an input type that accepts StreamProcessorConnectedHomeSettingsArgs and StreamProcessorConnectedHomeSettingsOutput values.
// You can construct a concrete instance of `StreamProcessorConnectedHomeSettingsInput` via:
//
//          StreamProcessorConnectedHomeSettingsArgs{...}
type StreamProcessorConnectedHomeSettingsInput interface {
	pulumi.Input

	ToStreamProcessorConnectedHomeSettingsOutput() StreamProcessorConnectedHomeSettingsOutput
	ToStreamProcessorConnectedHomeSettingsOutputWithContext(context.Context) StreamProcessorConnectedHomeSettingsOutput
}

// Connected home settings to use on a streaming video. Note that either ConnectedHomeSettings or FaceSearchSettings should be set. Not both
type StreamProcessorConnectedHomeSettingsArgs struct {
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Minimum object class match confidence score that must be met to return a result for a recognized object.
	MinConfidence pulumi.Float64PtrInput `pulumi:"minConfidence"`
}

func (StreamProcessorConnectedHomeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorConnectedHomeSettings)(nil)).Elem()
}

func (i StreamProcessorConnectedHomeSettingsArgs) ToStreamProcessorConnectedHomeSettingsOutput() StreamProcessorConnectedHomeSettingsOutput {
	return i.ToStreamProcessorConnectedHomeSettingsOutputWithContext(context.Background())
}

func (i StreamProcessorConnectedHomeSettingsArgs) ToStreamProcessorConnectedHomeSettingsOutputWithContext(ctx context.Context) StreamProcessorConnectedHomeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorConnectedHomeSettingsOutput)
}

func (i StreamProcessorConnectedHomeSettingsArgs) ToStreamProcessorConnectedHomeSettingsPtrOutput() StreamProcessorConnectedHomeSettingsPtrOutput {
	return i.ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(context.Background())
}

func (i StreamProcessorConnectedHomeSettingsArgs) ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorConnectedHomeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorConnectedHomeSettingsOutput).ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(ctx)
}

// StreamProcessorConnectedHomeSettingsPtrInput is an input type that accepts StreamProcessorConnectedHomeSettingsArgs, StreamProcessorConnectedHomeSettingsPtr and StreamProcessorConnectedHomeSettingsPtrOutput values.
// You can construct a concrete instance of `StreamProcessorConnectedHomeSettingsPtrInput` via:
//
//          StreamProcessorConnectedHomeSettingsArgs{...}
//
//  or:
//
//          nil
type StreamProcessorConnectedHomeSettingsPtrInput interface {
	pulumi.Input

	ToStreamProcessorConnectedHomeSettingsPtrOutput() StreamProcessorConnectedHomeSettingsPtrOutput
	ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(context.Context) StreamProcessorConnectedHomeSettingsPtrOutput
}

type streamProcessorConnectedHomeSettingsPtrType StreamProcessorConnectedHomeSettingsArgs

func StreamProcessorConnectedHomeSettingsPtr(v *StreamProcessorConnectedHomeSettingsArgs) StreamProcessorConnectedHomeSettingsPtrInput {
	return (*streamProcessorConnectedHomeSettingsPtrType)(v)
}

func (*streamProcessorConnectedHomeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorConnectedHomeSettings)(nil)).Elem()
}

func (i *streamProcessorConnectedHomeSettingsPtrType) ToStreamProcessorConnectedHomeSettingsPtrOutput() StreamProcessorConnectedHomeSettingsPtrOutput {
	return i.ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(context.Background())
}

func (i *streamProcessorConnectedHomeSettingsPtrType) ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorConnectedHomeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorConnectedHomeSettingsPtrOutput)
}

// Connected home settings to use on a streaming video. Note that either ConnectedHomeSettings or FaceSearchSettings should be set. Not both
type StreamProcessorConnectedHomeSettingsOutput struct{ *pulumi.OutputState }

func (StreamProcessorConnectedHomeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorConnectedHomeSettings)(nil)).Elem()
}

func (o StreamProcessorConnectedHomeSettingsOutput) ToStreamProcessorConnectedHomeSettingsOutput() StreamProcessorConnectedHomeSettingsOutput {
	return o
}

func (o StreamProcessorConnectedHomeSettingsOutput) ToStreamProcessorConnectedHomeSettingsOutputWithContext(ctx context.Context) StreamProcessorConnectedHomeSettingsOutput {
	return o
}

func (o StreamProcessorConnectedHomeSettingsOutput) ToStreamProcessorConnectedHomeSettingsPtrOutput() StreamProcessorConnectedHomeSettingsPtrOutput {
	return o.ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(context.Background())
}

func (o StreamProcessorConnectedHomeSettingsOutput) ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorConnectedHomeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamProcessorConnectedHomeSettings) *StreamProcessorConnectedHomeSettings {
		return &v
	}).(StreamProcessorConnectedHomeSettingsPtrOutput)
}

func (o StreamProcessorConnectedHomeSettingsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StreamProcessorConnectedHomeSettings) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Minimum object class match confidence score that must be met to return a result for a recognized object.
func (o StreamProcessorConnectedHomeSettingsOutput) MinConfidence() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StreamProcessorConnectedHomeSettings) *float64 { return v.MinConfidence }).(pulumi.Float64PtrOutput)
}

type StreamProcessorConnectedHomeSettingsPtrOutput struct{ *pulumi.OutputState }

func (StreamProcessorConnectedHomeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorConnectedHomeSettings)(nil)).Elem()
}

func (o StreamProcessorConnectedHomeSettingsPtrOutput) ToStreamProcessorConnectedHomeSettingsPtrOutput() StreamProcessorConnectedHomeSettingsPtrOutput {
	return o
}

func (o StreamProcessorConnectedHomeSettingsPtrOutput) ToStreamProcessorConnectedHomeSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorConnectedHomeSettingsPtrOutput {
	return o
}

func (o StreamProcessorConnectedHomeSettingsPtrOutput) Elem() StreamProcessorConnectedHomeSettingsOutput {
	return o.ApplyT(func(v *StreamProcessorConnectedHomeSettings) StreamProcessorConnectedHomeSettings {
		if v != nil {
			return *v
		}
		var ret StreamProcessorConnectedHomeSettings
		return ret
	}).(StreamProcessorConnectedHomeSettingsOutput)
}

func (o StreamProcessorConnectedHomeSettingsPtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StreamProcessorConnectedHomeSettings) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// Minimum object class match confidence score that must be met to return a result for a recognized object.
func (o StreamProcessorConnectedHomeSettingsPtrOutput) MinConfidence() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *StreamProcessorConnectedHomeSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.MinConfidence
	}).(pulumi.Float64PtrOutput)
}

// Indicates whether Rekognition is allowed to store the video stream data for model-training.
type StreamProcessorDataSharingPreference struct {
	// Flag to enable data-sharing
	OptIn bool `pulumi:"optIn"`
}

// StreamProcessorDataSharingPreferenceInput is an input type that accepts StreamProcessorDataSharingPreferenceArgs and StreamProcessorDataSharingPreferenceOutput values.
// You can construct a concrete instance of `StreamProcessorDataSharingPreferenceInput` via:
//
//          StreamProcessorDataSharingPreferenceArgs{...}
type StreamProcessorDataSharingPreferenceInput interface {
	pulumi.Input

	ToStreamProcessorDataSharingPreferenceOutput() StreamProcessorDataSharingPreferenceOutput
	ToStreamProcessorDataSharingPreferenceOutputWithContext(context.Context) StreamProcessorDataSharingPreferenceOutput
}

// Indicates whether Rekognition is allowed to store the video stream data for model-training.
type StreamProcessorDataSharingPreferenceArgs struct {
	// Flag to enable data-sharing
	OptIn pulumi.BoolInput `pulumi:"optIn"`
}

func (StreamProcessorDataSharingPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorDataSharingPreference)(nil)).Elem()
}

func (i StreamProcessorDataSharingPreferenceArgs) ToStreamProcessorDataSharingPreferenceOutput() StreamProcessorDataSharingPreferenceOutput {
	return i.ToStreamProcessorDataSharingPreferenceOutputWithContext(context.Background())
}

func (i StreamProcessorDataSharingPreferenceArgs) ToStreamProcessorDataSharingPreferenceOutputWithContext(ctx context.Context) StreamProcessorDataSharingPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorDataSharingPreferenceOutput)
}

func (i StreamProcessorDataSharingPreferenceArgs) ToStreamProcessorDataSharingPreferencePtrOutput() StreamProcessorDataSharingPreferencePtrOutput {
	return i.ToStreamProcessorDataSharingPreferencePtrOutputWithContext(context.Background())
}

func (i StreamProcessorDataSharingPreferenceArgs) ToStreamProcessorDataSharingPreferencePtrOutputWithContext(ctx context.Context) StreamProcessorDataSharingPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorDataSharingPreferenceOutput).ToStreamProcessorDataSharingPreferencePtrOutputWithContext(ctx)
}

// StreamProcessorDataSharingPreferencePtrInput is an input type that accepts StreamProcessorDataSharingPreferenceArgs, StreamProcessorDataSharingPreferencePtr and StreamProcessorDataSharingPreferencePtrOutput values.
// You can construct a concrete instance of `StreamProcessorDataSharingPreferencePtrInput` via:
//
//          StreamProcessorDataSharingPreferenceArgs{...}
//
//  or:
//
//          nil
type StreamProcessorDataSharingPreferencePtrInput interface {
	pulumi.Input

	ToStreamProcessorDataSharingPreferencePtrOutput() StreamProcessorDataSharingPreferencePtrOutput
	ToStreamProcessorDataSharingPreferencePtrOutputWithContext(context.Context) StreamProcessorDataSharingPreferencePtrOutput
}

type streamProcessorDataSharingPreferencePtrType StreamProcessorDataSharingPreferenceArgs

func StreamProcessorDataSharingPreferencePtr(v *StreamProcessorDataSharingPreferenceArgs) StreamProcessorDataSharingPreferencePtrInput {
	return (*streamProcessorDataSharingPreferencePtrType)(v)
}

func (*streamProcessorDataSharingPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorDataSharingPreference)(nil)).Elem()
}

func (i *streamProcessorDataSharingPreferencePtrType) ToStreamProcessorDataSharingPreferencePtrOutput() StreamProcessorDataSharingPreferencePtrOutput {
	return i.ToStreamProcessorDataSharingPreferencePtrOutputWithContext(context.Background())
}

func (i *streamProcessorDataSharingPreferencePtrType) ToStreamProcessorDataSharingPreferencePtrOutputWithContext(ctx context.Context) StreamProcessorDataSharingPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorDataSharingPreferencePtrOutput)
}

// Indicates whether Rekognition is allowed to store the video stream data for model-training.
type StreamProcessorDataSharingPreferenceOutput struct{ *pulumi.OutputState }

func (StreamProcessorDataSharingPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorDataSharingPreference)(nil)).Elem()
}

func (o StreamProcessorDataSharingPreferenceOutput) ToStreamProcessorDataSharingPreferenceOutput() StreamProcessorDataSharingPreferenceOutput {
	return o
}

func (o StreamProcessorDataSharingPreferenceOutput) ToStreamProcessorDataSharingPreferenceOutputWithContext(ctx context.Context) StreamProcessorDataSharingPreferenceOutput {
	return o
}

func (o StreamProcessorDataSharingPreferenceOutput) ToStreamProcessorDataSharingPreferencePtrOutput() StreamProcessorDataSharingPreferencePtrOutput {
	return o.ToStreamProcessorDataSharingPreferencePtrOutputWithContext(context.Background())
}

func (o StreamProcessorDataSharingPreferenceOutput) ToStreamProcessorDataSharingPreferencePtrOutputWithContext(ctx context.Context) StreamProcessorDataSharingPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamProcessorDataSharingPreference) *StreamProcessorDataSharingPreference {
		return &v
	}).(StreamProcessorDataSharingPreferencePtrOutput)
}

// Flag to enable data-sharing
func (o StreamProcessorDataSharingPreferenceOutput) OptIn() pulumi.BoolOutput {
	return o.ApplyT(func(v StreamProcessorDataSharingPreference) bool { return v.OptIn }).(pulumi.BoolOutput)
}

type StreamProcessorDataSharingPreferencePtrOutput struct{ *pulumi.OutputState }

func (StreamProcessorDataSharingPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorDataSharingPreference)(nil)).Elem()
}

func (o StreamProcessorDataSharingPreferencePtrOutput) ToStreamProcessorDataSharingPreferencePtrOutput() StreamProcessorDataSharingPreferencePtrOutput {
	return o
}

func (o StreamProcessorDataSharingPreferencePtrOutput) ToStreamProcessorDataSharingPreferencePtrOutputWithContext(ctx context.Context) StreamProcessorDataSharingPreferencePtrOutput {
	return o
}

func (o StreamProcessorDataSharingPreferencePtrOutput) Elem() StreamProcessorDataSharingPreferenceOutput {
	return o.ApplyT(func(v *StreamProcessorDataSharingPreference) StreamProcessorDataSharingPreference {
		if v != nil {
			return *v
		}
		var ret StreamProcessorDataSharingPreference
		return ret
	}).(StreamProcessorDataSharingPreferenceOutput)
}

// Flag to enable data-sharing
func (o StreamProcessorDataSharingPreferencePtrOutput) OptIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StreamProcessorDataSharingPreference) *bool {
		if v == nil {
			return nil
		}
		return &v.OptIn
	}).(pulumi.BoolPtrOutput)
}

// Face search settings to use on a streaming video. Note that either FaceSearchSettings or ConnectedHomeSettings should be set. Not both
type StreamProcessorFaceSearchSettings struct {
	// The ID of a collection that contains faces that you want to search for.
	CollectionId string `pulumi:"collectionId"`
	// Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
	FaceMatchThreshold *float64 `pulumi:"faceMatchThreshold"`
}

// StreamProcessorFaceSearchSettingsInput is an input type that accepts StreamProcessorFaceSearchSettingsArgs and StreamProcessorFaceSearchSettingsOutput values.
// You can construct a concrete instance of `StreamProcessorFaceSearchSettingsInput` via:
//
//          StreamProcessorFaceSearchSettingsArgs{...}
type StreamProcessorFaceSearchSettingsInput interface {
	pulumi.Input

	ToStreamProcessorFaceSearchSettingsOutput() StreamProcessorFaceSearchSettingsOutput
	ToStreamProcessorFaceSearchSettingsOutputWithContext(context.Context) StreamProcessorFaceSearchSettingsOutput
}

// Face search settings to use on a streaming video. Note that either FaceSearchSettings or ConnectedHomeSettings should be set. Not both
type StreamProcessorFaceSearchSettingsArgs struct {
	// The ID of a collection that contains faces that you want to search for.
	CollectionId pulumi.StringInput `pulumi:"collectionId"`
	// Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
	FaceMatchThreshold pulumi.Float64PtrInput `pulumi:"faceMatchThreshold"`
}

func (StreamProcessorFaceSearchSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorFaceSearchSettings)(nil)).Elem()
}

func (i StreamProcessorFaceSearchSettingsArgs) ToStreamProcessorFaceSearchSettingsOutput() StreamProcessorFaceSearchSettingsOutput {
	return i.ToStreamProcessorFaceSearchSettingsOutputWithContext(context.Background())
}

func (i StreamProcessorFaceSearchSettingsArgs) ToStreamProcessorFaceSearchSettingsOutputWithContext(ctx context.Context) StreamProcessorFaceSearchSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorFaceSearchSettingsOutput)
}

func (i StreamProcessorFaceSearchSettingsArgs) ToStreamProcessorFaceSearchSettingsPtrOutput() StreamProcessorFaceSearchSettingsPtrOutput {
	return i.ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(context.Background())
}

func (i StreamProcessorFaceSearchSettingsArgs) ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorFaceSearchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorFaceSearchSettingsOutput).ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(ctx)
}

// StreamProcessorFaceSearchSettingsPtrInput is an input type that accepts StreamProcessorFaceSearchSettingsArgs, StreamProcessorFaceSearchSettingsPtr and StreamProcessorFaceSearchSettingsPtrOutput values.
// You can construct a concrete instance of `StreamProcessorFaceSearchSettingsPtrInput` via:
//
//          StreamProcessorFaceSearchSettingsArgs{...}
//
//  or:
//
//          nil
type StreamProcessorFaceSearchSettingsPtrInput interface {
	pulumi.Input

	ToStreamProcessorFaceSearchSettingsPtrOutput() StreamProcessorFaceSearchSettingsPtrOutput
	ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(context.Context) StreamProcessorFaceSearchSettingsPtrOutput
}

type streamProcessorFaceSearchSettingsPtrType StreamProcessorFaceSearchSettingsArgs

func StreamProcessorFaceSearchSettingsPtr(v *StreamProcessorFaceSearchSettingsArgs) StreamProcessorFaceSearchSettingsPtrInput {
	return (*streamProcessorFaceSearchSettingsPtrType)(v)
}

func (*streamProcessorFaceSearchSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorFaceSearchSettings)(nil)).Elem()
}

func (i *streamProcessorFaceSearchSettingsPtrType) ToStreamProcessorFaceSearchSettingsPtrOutput() StreamProcessorFaceSearchSettingsPtrOutput {
	return i.ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(context.Background())
}

func (i *streamProcessorFaceSearchSettingsPtrType) ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorFaceSearchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorFaceSearchSettingsPtrOutput)
}

// Face search settings to use on a streaming video. Note that either FaceSearchSettings or ConnectedHomeSettings should be set. Not both
type StreamProcessorFaceSearchSettingsOutput struct{ *pulumi.OutputState }

func (StreamProcessorFaceSearchSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorFaceSearchSettings)(nil)).Elem()
}

func (o StreamProcessorFaceSearchSettingsOutput) ToStreamProcessorFaceSearchSettingsOutput() StreamProcessorFaceSearchSettingsOutput {
	return o
}

func (o StreamProcessorFaceSearchSettingsOutput) ToStreamProcessorFaceSearchSettingsOutputWithContext(ctx context.Context) StreamProcessorFaceSearchSettingsOutput {
	return o
}

func (o StreamProcessorFaceSearchSettingsOutput) ToStreamProcessorFaceSearchSettingsPtrOutput() StreamProcessorFaceSearchSettingsPtrOutput {
	return o.ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(context.Background())
}

func (o StreamProcessorFaceSearchSettingsOutput) ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorFaceSearchSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamProcessorFaceSearchSettings) *StreamProcessorFaceSearchSettings {
		return &v
	}).(StreamProcessorFaceSearchSettingsPtrOutput)
}

// The ID of a collection that contains faces that you want to search for.
func (o StreamProcessorFaceSearchSettingsOutput) CollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorFaceSearchSettings) string { return v.CollectionId }).(pulumi.StringOutput)
}

// Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
func (o StreamProcessorFaceSearchSettingsOutput) FaceMatchThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StreamProcessorFaceSearchSettings) *float64 { return v.FaceMatchThreshold }).(pulumi.Float64PtrOutput)
}

type StreamProcessorFaceSearchSettingsPtrOutput struct{ *pulumi.OutputState }

func (StreamProcessorFaceSearchSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorFaceSearchSettings)(nil)).Elem()
}

func (o StreamProcessorFaceSearchSettingsPtrOutput) ToStreamProcessorFaceSearchSettingsPtrOutput() StreamProcessorFaceSearchSettingsPtrOutput {
	return o
}

func (o StreamProcessorFaceSearchSettingsPtrOutput) ToStreamProcessorFaceSearchSettingsPtrOutputWithContext(ctx context.Context) StreamProcessorFaceSearchSettingsPtrOutput {
	return o
}

func (o StreamProcessorFaceSearchSettingsPtrOutput) Elem() StreamProcessorFaceSearchSettingsOutput {
	return o.ApplyT(func(v *StreamProcessorFaceSearchSettings) StreamProcessorFaceSearchSettings {
		if v != nil {
			return *v
		}
		var ret StreamProcessorFaceSearchSettings
		return ret
	}).(StreamProcessorFaceSearchSettingsOutput)
}

// The ID of a collection that contains faces that you want to search for.
func (o StreamProcessorFaceSearchSettingsPtrOutput) CollectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamProcessorFaceSearchSettings) *string {
		if v == nil {
			return nil
		}
		return &v.CollectionId
	}).(pulumi.StringPtrOutput)
}

// Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
func (o StreamProcessorFaceSearchSettingsPtrOutput) FaceMatchThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *StreamProcessorFaceSearchSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.FaceMatchThreshold
	}).(pulumi.Float64PtrOutput)
}

// The Amazon Kinesis Data Stream stream to which the Amazon Rekognition stream processor streams the analysis results, as part of face search feature.
type StreamProcessorKinesisDataStream struct {
	// ARN of the Kinesis Data Stream stream.
	Arn string `pulumi:"arn"`
}

// StreamProcessorKinesisDataStreamInput is an input type that accepts StreamProcessorKinesisDataStreamArgs and StreamProcessorKinesisDataStreamOutput values.
// You can construct a concrete instance of `StreamProcessorKinesisDataStreamInput` via:
//
//          StreamProcessorKinesisDataStreamArgs{...}
type StreamProcessorKinesisDataStreamInput interface {
	pulumi.Input

	ToStreamProcessorKinesisDataStreamOutput() StreamProcessorKinesisDataStreamOutput
	ToStreamProcessorKinesisDataStreamOutputWithContext(context.Context) StreamProcessorKinesisDataStreamOutput
}

// The Amazon Kinesis Data Stream stream to which the Amazon Rekognition stream processor streams the analysis results, as part of face search feature.
type StreamProcessorKinesisDataStreamArgs struct {
	// ARN of the Kinesis Data Stream stream.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (StreamProcessorKinesisDataStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorKinesisDataStream)(nil)).Elem()
}

func (i StreamProcessorKinesisDataStreamArgs) ToStreamProcessorKinesisDataStreamOutput() StreamProcessorKinesisDataStreamOutput {
	return i.ToStreamProcessorKinesisDataStreamOutputWithContext(context.Background())
}

func (i StreamProcessorKinesisDataStreamArgs) ToStreamProcessorKinesisDataStreamOutputWithContext(ctx context.Context) StreamProcessorKinesisDataStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorKinesisDataStreamOutput)
}

func (i StreamProcessorKinesisDataStreamArgs) ToStreamProcessorKinesisDataStreamPtrOutput() StreamProcessorKinesisDataStreamPtrOutput {
	return i.ToStreamProcessorKinesisDataStreamPtrOutputWithContext(context.Background())
}

func (i StreamProcessorKinesisDataStreamArgs) ToStreamProcessorKinesisDataStreamPtrOutputWithContext(ctx context.Context) StreamProcessorKinesisDataStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorKinesisDataStreamOutput).ToStreamProcessorKinesisDataStreamPtrOutputWithContext(ctx)
}

// StreamProcessorKinesisDataStreamPtrInput is an input type that accepts StreamProcessorKinesisDataStreamArgs, StreamProcessorKinesisDataStreamPtr and StreamProcessorKinesisDataStreamPtrOutput values.
// You can construct a concrete instance of `StreamProcessorKinesisDataStreamPtrInput` via:
//
//          StreamProcessorKinesisDataStreamArgs{...}
//
//  or:
//
//          nil
type StreamProcessorKinesisDataStreamPtrInput interface {
	pulumi.Input

	ToStreamProcessorKinesisDataStreamPtrOutput() StreamProcessorKinesisDataStreamPtrOutput
	ToStreamProcessorKinesisDataStreamPtrOutputWithContext(context.Context) StreamProcessorKinesisDataStreamPtrOutput
}

type streamProcessorKinesisDataStreamPtrType StreamProcessorKinesisDataStreamArgs

func StreamProcessorKinesisDataStreamPtr(v *StreamProcessorKinesisDataStreamArgs) StreamProcessorKinesisDataStreamPtrInput {
	return (*streamProcessorKinesisDataStreamPtrType)(v)
}

func (*streamProcessorKinesisDataStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorKinesisDataStream)(nil)).Elem()
}

func (i *streamProcessorKinesisDataStreamPtrType) ToStreamProcessorKinesisDataStreamPtrOutput() StreamProcessorKinesisDataStreamPtrOutput {
	return i.ToStreamProcessorKinesisDataStreamPtrOutputWithContext(context.Background())
}

func (i *streamProcessorKinesisDataStreamPtrType) ToStreamProcessorKinesisDataStreamPtrOutputWithContext(ctx context.Context) StreamProcessorKinesisDataStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorKinesisDataStreamPtrOutput)
}

// The Amazon Kinesis Data Stream stream to which the Amazon Rekognition stream processor streams the analysis results, as part of face search feature.
type StreamProcessorKinesisDataStreamOutput struct{ *pulumi.OutputState }

func (StreamProcessorKinesisDataStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorKinesisDataStream)(nil)).Elem()
}

func (o StreamProcessorKinesisDataStreamOutput) ToStreamProcessorKinesisDataStreamOutput() StreamProcessorKinesisDataStreamOutput {
	return o
}

func (o StreamProcessorKinesisDataStreamOutput) ToStreamProcessorKinesisDataStreamOutputWithContext(ctx context.Context) StreamProcessorKinesisDataStreamOutput {
	return o
}

func (o StreamProcessorKinesisDataStreamOutput) ToStreamProcessorKinesisDataStreamPtrOutput() StreamProcessorKinesisDataStreamPtrOutput {
	return o.ToStreamProcessorKinesisDataStreamPtrOutputWithContext(context.Background())
}

func (o StreamProcessorKinesisDataStreamOutput) ToStreamProcessorKinesisDataStreamPtrOutputWithContext(ctx context.Context) StreamProcessorKinesisDataStreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamProcessorKinesisDataStream) *StreamProcessorKinesisDataStream {
		return &v
	}).(StreamProcessorKinesisDataStreamPtrOutput)
}

// ARN of the Kinesis Data Stream stream.
func (o StreamProcessorKinesisDataStreamOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorKinesisDataStream) string { return v.Arn }).(pulumi.StringOutput)
}

type StreamProcessorKinesisDataStreamPtrOutput struct{ *pulumi.OutputState }

func (StreamProcessorKinesisDataStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorKinesisDataStream)(nil)).Elem()
}

func (o StreamProcessorKinesisDataStreamPtrOutput) ToStreamProcessorKinesisDataStreamPtrOutput() StreamProcessorKinesisDataStreamPtrOutput {
	return o
}

func (o StreamProcessorKinesisDataStreamPtrOutput) ToStreamProcessorKinesisDataStreamPtrOutputWithContext(ctx context.Context) StreamProcessorKinesisDataStreamPtrOutput {
	return o
}

func (o StreamProcessorKinesisDataStreamPtrOutput) Elem() StreamProcessorKinesisDataStreamOutput {
	return o.ApplyT(func(v *StreamProcessorKinesisDataStream) StreamProcessorKinesisDataStream {
		if v != nil {
			return *v
		}
		var ret StreamProcessorKinesisDataStream
		return ret
	}).(StreamProcessorKinesisDataStreamOutput)
}

// ARN of the Kinesis Data Stream stream.
func (o StreamProcessorKinesisDataStreamPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamProcessorKinesisDataStream) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// The Kinesis Video Stream that streams the source video.
type StreamProcessorKinesisVideoStream struct {
	// ARN of the Kinesis Video Stream that streams the source video.
	Arn string `pulumi:"arn"`
}

// StreamProcessorKinesisVideoStreamInput is an input type that accepts StreamProcessorKinesisVideoStreamArgs and StreamProcessorKinesisVideoStreamOutput values.
// You can construct a concrete instance of `StreamProcessorKinesisVideoStreamInput` via:
//
//          StreamProcessorKinesisVideoStreamArgs{...}
type StreamProcessorKinesisVideoStreamInput interface {
	pulumi.Input

	ToStreamProcessorKinesisVideoStreamOutput() StreamProcessorKinesisVideoStreamOutput
	ToStreamProcessorKinesisVideoStreamOutputWithContext(context.Context) StreamProcessorKinesisVideoStreamOutput
}

// The Kinesis Video Stream that streams the source video.
type StreamProcessorKinesisVideoStreamArgs struct {
	// ARN of the Kinesis Video Stream that streams the source video.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (StreamProcessorKinesisVideoStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorKinesisVideoStream)(nil)).Elem()
}

func (i StreamProcessorKinesisVideoStreamArgs) ToStreamProcessorKinesisVideoStreamOutput() StreamProcessorKinesisVideoStreamOutput {
	return i.ToStreamProcessorKinesisVideoStreamOutputWithContext(context.Background())
}

func (i StreamProcessorKinesisVideoStreamArgs) ToStreamProcessorKinesisVideoStreamOutputWithContext(ctx context.Context) StreamProcessorKinesisVideoStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorKinesisVideoStreamOutput)
}

// The Kinesis Video Stream that streams the source video.
type StreamProcessorKinesisVideoStreamOutput struct{ *pulumi.OutputState }

func (StreamProcessorKinesisVideoStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorKinesisVideoStream)(nil)).Elem()
}

func (o StreamProcessorKinesisVideoStreamOutput) ToStreamProcessorKinesisVideoStreamOutput() StreamProcessorKinesisVideoStreamOutput {
	return o
}

func (o StreamProcessorKinesisVideoStreamOutput) ToStreamProcessorKinesisVideoStreamOutputWithContext(ctx context.Context) StreamProcessorKinesisVideoStreamOutput {
	return o
}

// ARN of the Kinesis Video Stream that streams the source video.
func (o StreamProcessorKinesisVideoStreamOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorKinesisVideoStream) string { return v.Arn }).(pulumi.StringOutput)
}

// The ARN of the SNS notification channel where events of interests are published, as part of connected home feature.
type StreamProcessorNotificationChannel struct {
	// ARN of the SNS topic.
	Arn string `pulumi:"arn"`
}

// StreamProcessorNotificationChannelInput is an input type that accepts StreamProcessorNotificationChannelArgs and StreamProcessorNotificationChannelOutput values.
// You can construct a concrete instance of `StreamProcessorNotificationChannelInput` via:
//
//          StreamProcessorNotificationChannelArgs{...}
type StreamProcessorNotificationChannelInput interface {
	pulumi.Input

	ToStreamProcessorNotificationChannelOutput() StreamProcessorNotificationChannelOutput
	ToStreamProcessorNotificationChannelOutputWithContext(context.Context) StreamProcessorNotificationChannelOutput
}

// The ARN of the SNS notification channel where events of interests are published, as part of connected home feature.
type StreamProcessorNotificationChannelArgs struct {
	// ARN of the SNS topic.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (StreamProcessorNotificationChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorNotificationChannel)(nil)).Elem()
}

func (i StreamProcessorNotificationChannelArgs) ToStreamProcessorNotificationChannelOutput() StreamProcessorNotificationChannelOutput {
	return i.ToStreamProcessorNotificationChannelOutputWithContext(context.Background())
}

func (i StreamProcessorNotificationChannelArgs) ToStreamProcessorNotificationChannelOutputWithContext(ctx context.Context) StreamProcessorNotificationChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorNotificationChannelOutput)
}

func (i StreamProcessorNotificationChannelArgs) ToStreamProcessorNotificationChannelPtrOutput() StreamProcessorNotificationChannelPtrOutput {
	return i.ToStreamProcessorNotificationChannelPtrOutputWithContext(context.Background())
}

func (i StreamProcessorNotificationChannelArgs) ToStreamProcessorNotificationChannelPtrOutputWithContext(ctx context.Context) StreamProcessorNotificationChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorNotificationChannelOutput).ToStreamProcessorNotificationChannelPtrOutputWithContext(ctx)
}

// StreamProcessorNotificationChannelPtrInput is an input type that accepts StreamProcessorNotificationChannelArgs, StreamProcessorNotificationChannelPtr and StreamProcessorNotificationChannelPtrOutput values.
// You can construct a concrete instance of `StreamProcessorNotificationChannelPtrInput` via:
//
//          StreamProcessorNotificationChannelArgs{...}
//
//  or:
//
//          nil
type StreamProcessorNotificationChannelPtrInput interface {
	pulumi.Input

	ToStreamProcessorNotificationChannelPtrOutput() StreamProcessorNotificationChannelPtrOutput
	ToStreamProcessorNotificationChannelPtrOutputWithContext(context.Context) StreamProcessorNotificationChannelPtrOutput
}

type streamProcessorNotificationChannelPtrType StreamProcessorNotificationChannelArgs

func StreamProcessorNotificationChannelPtr(v *StreamProcessorNotificationChannelArgs) StreamProcessorNotificationChannelPtrInput {
	return (*streamProcessorNotificationChannelPtrType)(v)
}

func (*streamProcessorNotificationChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorNotificationChannel)(nil)).Elem()
}

func (i *streamProcessorNotificationChannelPtrType) ToStreamProcessorNotificationChannelPtrOutput() StreamProcessorNotificationChannelPtrOutput {
	return i.ToStreamProcessorNotificationChannelPtrOutputWithContext(context.Background())
}

func (i *streamProcessorNotificationChannelPtrType) ToStreamProcessorNotificationChannelPtrOutputWithContext(ctx context.Context) StreamProcessorNotificationChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorNotificationChannelPtrOutput)
}

// The ARN of the SNS notification channel where events of interests are published, as part of connected home feature.
type StreamProcessorNotificationChannelOutput struct{ *pulumi.OutputState }

func (StreamProcessorNotificationChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorNotificationChannel)(nil)).Elem()
}

func (o StreamProcessorNotificationChannelOutput) ToStreamProcessorNotificationChannelOutput() StreamProcessorNotificationChannelOutput {
	return o
}

func (o StreamProcessorNotificationChannelOutput) ToStreamProcessorNotificationChannelOutputWithContext(ctx context.Context) StreamProcessorNotificationChannelOutput {
	return o
}

func (o StreamProcessorNotificationChannelOutput) ToStreamProcessorNotificationChannelPtrOutput() StreamProcessorNotificationChannelPtrOutput {
	return o.ToStreamProcessorNotificationChannelPtrOutputWithContext(context.Background())
}

func (o StreamProcessorNotificationChannelOutput) ToStreamProcessorNotificationChannelPtrOutputWithContext(ctx context.Context) StreamProcessorNotificationChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamProcessorNotificationChannel) *StreamProcessorNotificationChannel {
		return &v
	}).(StreamProcessorNotificationChannelPtrOutput)
}

// ARN of the SNS topic.
func (o StreamProcessorNotificationChannelOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorNotificationChannel) string { return v.Arn }).(pulumi.StringOutput)
}

type StreamProcessorNotificationChannelPtrOutput struct{ *pulumi.OutputState }

func (StreamProcessorNotificationChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorNotificationChannel)(nil)).Elem()
}

func (o StreamProcessorNotificationChannelPtrOutput) ToStreamProcessorNotificationChannelPtrOutput() StreamProcessorNotificationChannelPtrOutput {
	return o
}

func (o StreamProcessorNotificationChannelPtrOutput) ToStreamProcessorNotificationChannelPtrOutputWithContext(ctx context.Context) StreamProcessorNotificationChannelPtrOutput {
	return o
}

func (o StreamProcessorNotificationChannelPtrOutput) Elem() StreamProcessorNotificationChannelOutput {
	return o.ApplyT(func(v *StreamProcessorNotificationChannel) StreamProcessorNotificationChannel {
		if v != nil {
			return *v
		}
		var ret StreamProcessorNotificationChannel
		return ret
	}).(StreamProcessorNotificationChannelOutput)
}

// ARN of the SNS topic.
func (o StreamProcessorNotificationChannelPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamProcessorNotificationChannel) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// An (X, Y) cartesian coordinate denoting a point on the frame
type StreamProcessorPoint struct {
	// The X coordinate of the point.
	X float64 `pulumi:"x"`
	// The Y coordinate of the point.
	Y float64 `pulumi:"y"`
}

// StreamProcessorPointInput is an input type that accepts StreamProcessorPointArgs and StreamProcessorPointOutput values.
// You can construct a concrete instance of `StreamProcessorPointInput` via:
//
//          StreamProcessorPointArgs{...}
type StreamProcessorPointInput interface {
	pulumi.Input

	ToStreamProcessorPointOutput() StreamProcessorPointOutput
	ToStreamProcessorPointOutputWithContext(context.Context) StreamProcessorPointOutput
}

// An (X, Y) cartesian coordinate denoting a point on the frame
type StreamProcessorPointArgs struct {
	// The X coordinate of the point.
	X pulumi.Float64Input `pulumi:"x"`
	// The Y coordinate of the point.
	Y pulumi.Float64Input `pulumi:"y"`
}

func (StreamProcessorPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorPoint)(nil)).Elem()
}

func (i StreamProcessorPointArgs) ToStreamProcessorPointOutput() StreamProcessorPointOutput {
	return i.ToStreamProcessorPointOutputWithContext(context.Background())
}

func (i StreamProcessorPointArgs) ToStreamProcessorPointOutputWithContext(ctx context.Context) StreamProcessorPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorPointOutput)
}

// StreamProcessorPointArrayInput is an input type that accepts StreamProcessorPointArray and StreamProcessorPointArrayOutput values.
// You can construct a concrete instance of `StreamProcessorPointArrayInput` via:
//
//          StreamProcessorPointArray{ StreamProcessorPointArgs{...} }
type StreamProcessorPointArrayInput interface {
	pulumi.Input

	ToStreamProcessorPointArrayOutput() StreamProcessorPointArrayOutput
	ToStreamProcessorPointArrayOutputWithContext(context.Context) StreamProcessorPointArrayOutput
}

type StreamProcessorPointArray []StreamProcessorPointInput

func (StreamProcessorPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamProcessorPoint)(nil)).Elem()
}

func (i StreamProcessorPointArray) ToStreamProcessorPointArrayOutput() StreamProcessorPointArrayOutput {
	return i.ToStreamProcessorPointArrayOutputWithContext(context.Background())
}

func (i StreamProcessorPointArray) ToStreamProcessorPointArrayOutputWithContext(ctx context.Context) StreamProcessorPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorPointArrayOutput)
}

// An (X, Y) cartesian coordinate denoting a point on the frame
type StreamProcessorPointOutput struct{ *pulumi.OutputState }

func (StreamProcessorPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorPoint)(nil)).Elem()
}

func (o StreamProcessorPointOutput) ToStreamProcessorPointOutput() StreamProcessorPointOutput {
	return o
}

func (o StreamProcessorPointOutput) ToStreamProcessorPointOutputWithContext(ctx context.Context) StreamProcessorPointOutput {
	return o
}

// The X coordinate of the point.
func (o StreamProcessorPointOutput) X() pulumi.Float64Output {
	return o.ApplyT(func(v StreamProcessorPoint) float64 { return v.X }).(pulumi.Float64Output)
}

// The Y coordinate of the point.
func (o StreamProcessorPointOutput) Y() pulumi.Float64Output {
	return o.ApplyT(func(v StreamProcessorPoint) float64 { return v.Y }).(pulumi.Float64Output)
}

type StreamProcessorPointArrayOutput struct{ *pulumi.OutputState }

func (StreamProcessorPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamProcessorPoint)(nil)).Elem()
}

func (o StreamProcessorPointArrayOutput) ToStreamProcessorPointArrayOutput() StreamProcessorPointArrayOutput {
	return o
}

func (o StreamProcessorPointArrayOutput) ToStreamProcessorPointArrayOutputWithContext(ctx context.Context) StreamProcessorPointArrayOutput {
	return o
}

func (o StreamProcessorPointArrayOutput) Index(i pulumi.IntInput) StreamProcessorPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamProcessorPoint {
		return vs[0].([]StreamProcessorPoint)[vs[1].(int)]
	}).(StreamProcessorPointOutput)
}

// The S3 location in customer's account where inference output & artifacts are stored, as part of connected home feature.
type StreamProcessorS3Destination struct {
	// Name of the S3 bucket.
	BucketName string `pulumi:"bucketName"`
	// The object key prefix path where the results will be stored. Default is no prefix path
	ObjectKeyPrefix *string `pulumi:"objectKeyPrefix"`
}

// StreamProcessorS3DestinationInput is an input type that accepts StreamProcessorS3DestinationArgs and StreamProcessorS3DestinationOutput values.
// You can construct a concrete instance of `StreamProcessorS3DestinationInput` via:
//
//          StreamProcessorS3DestinationArgs{...}
type StreamProcessorS3DestinationInput interface {
	pulumi.Input

	ToStreamProcessorS3DestinationOutput() StreamProcessorS3DestinationOutput
	ToStreamProcessorS3DestinationOutputWithContext(context.Context) StreamProcessorS3DestinationOutput
}

// The S3 location in customer's account where inference output & artifacts are stored, as part of connected home feature.
type StreamProcessorS3DestinationArgs struct {
	// Name of the S3 bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key prefix path where the results will be stored. Default is no prefix path
	ObjectKeyPrefix pulumi.StringPtrInput `pulumi:"objectKeyPrefix"`
}

func (StreamProcessorS3DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorS3Destination)(nil)).Elem()
}

func (i StreamProcessorS3DestinationArgs) ToStreamProcessorS3DestinationOutput() StreamProcessorS3DestinationOutput {
	return i.ToStreamProcessorS3DestinationOutputWithContext(context.Background())
}

func (i StreamProcessorS3DestinationArgs) ToStreamProcessorS3DestinationOutputWithContext(ctx context.Context) StreamProcessorS3DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorS3DestinationOutput)
}

func (i StreamProcessorS3DestinationArgs) ToStreamProcessorS3DestinationPtrOutput() StreamProcessorS3DestinationPtrOutput {
	return i.ToStreamProcessorS3DestinationPtrOutputWithContext(context.Background())
}

func (i StreamProcessorS3DestinationArgs) ToStreamProcessorS3DestinationPtrOutputWithContext(ctx context.Context) StreamProcessorS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorS3DestinationOutput).ToStreamProcessorS3DestinationPtrOutputWithContext(ctx)
}

// StreamProcessorS3DestinationPtrInput is an input type that accepts StreamProcessorS3DestinationArgs, StreamProcessorS3DestinationPtr and StreamProcessorS3DestinationPtrOutput values.
// You can construct a concrete instance of `StreamProcessorS3DestinationPtrInput` via:
//
//          StreamProcessorS3DestinationArgs{...}
//
//  or:
//
//          nil
type StreamProcessorS3DestinationPtrInput interface {
	pulumi.Input

	ToStreamProcessorS3DestinationPtrOutput() StreamProcessorS3DestinationPtrOutput
	ToStreamProcessorS3DestinationPtrOutputWithContext(context.Context) StreamProcessorS3DestinationPtrOutput
}

type streamProcessorS3DestinationPtrType StreamProcessorS3DestinationArgs

func StreamProcessorS3DestinationPtr(v *StreamProcessorS3DestinationArgs) StreamProcessorS3DestinationPtrInput {
	return (*streamProcessorS3DestinationPtrType)(v)
}

func (*streamProcessorS3DestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorS3Destination)(nil)).Elem()
}

func (i *streamProcessorS3DestinationPtrType) ToStreamProcessorS3DestinationPtrOutput() StreamProcessorS3DestinationPtrOutput {
	return i.ToStreamProcessorS3DestinationPtrOutputWithContext(context.Background())
}

func (i *streamProcessorS3DestinationPtrType) ToStreamProcessorS3DestinationPtrOutputWithContext(ctx context.Context) StreamProcessorS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorS3DestinationPtrOutput)
}

// The S3 location in customer's account where inference output & artifacts are stored, as part of connected home feature.
type StreamProcessorS3DestinationOutput struct{ *pulumi.OutputState }

func (StreamProcessorS3DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorS3Destination)(nil)).Elem()
}

func (o StreamProcessorS3DestinationOutput) ToStreamProcessorS3DestinationOutput() StreamProcessorS3DestinationOutput {
	return o
}

func (o StreamProcessorS3DestinationOutput) ToStreamProcessorS3DestinationOutputWithContext(ctx context.Context) StreamProcessorS3DestinationOutput {
	return o
}

func (o StreamProcessorS3DestinationOutput) ToStreamProcessorS3DestinationPtrOutput() StreamProcessorS3DestinationPtrOutput {
	return o.ToStreamProcessorS3DestinationPtrOutputWithContext(context.Background())
}

func (o StreamProcessorS3DestinationOutput) ToStreamProcessorS3DestinationPtrOutputWithContext(ctx context.Context) StreamProcessorS3DestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamProcessorS3Destination) *StreamProcessorS3Destination {
		return &v
	}).(StreamProcessorS3DestinationPtrOutput)
}

// Name of the S3 bucket.
func (o StreamProcessorS3DestinationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorS3Destination) string { return v.BucketName }).(pulumi.StringOutput)
}

// The object key prefix path where the results will be stored. Default is no prefix path
func (o StreamProcessorS3DestinationOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamProcessorS3Destination) *string { return v.ObjectKeyPrefix }).(pulumi.StringPtrOutput)
}

type StreamProcessorS3DestinationPtrOutput struct{ *pulumi.OutputState }

func (StreamProcessorS3DestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamProcessorS3Destination)(nil)).Elem()
}

func (o StreamProcessorS3DestinationPtrOutput) ToStreamProcessorS3DestinationPtrOutput() StreamProcessorS3DestinationPtrOutput {
	return o
}

func (o StreamProcessorS3DestinationPtrOutput) ToStreamProcessorS3DestinationPtrOutputWithContext(ctx context.Context) StreamProcessorS3DestinationPtrOutput {
	return o
}

func (o StreamProcessorS3DestinationPtrOutput) Elem() StreamProcessorS3DestinationOutput {
	return o.ApplyT(func(v *StreamProcessorS3Destination) StreamProcessorS3Destination {
		if v != nil {
			return *v
		}
		var ret StreamProcessorS3Destination
		return ret
	}).(StreamProcessorS3DestinationOutput)
}

// Name of the S3 bucket.
func (o StreamProcessorS3DestinationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamProcessorS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The object key prefix path where the results will be stored. Default is no prefix path
func (o StreamProcessorS3DestinationPtrOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamProcessorS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKeyPrefix
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type StreamProcessorTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// StreamProcessorTagInput is an input type that accepts StreamProcessorTagArgs and StreamProcessorTagOutput values.
// You can construct a concrete instance of `StreamProcessorTagInput` via:
//
//          StreamProcessorTagArgs{...}
type StreamProcessorTagInput interface {
	pulumi.Input

	ToStreamProcessorTagOutput() StreamProcessorTagOutput
	ToStreamProcessorTagOutputWithContext(context.Context) StreamProcessorTagOutput
}

// A key-value pair to associate with a resource.
type StreamProcessorTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (StreamProcessorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorTag)(nil)).Elem()
}

func (i StreamProcessorTagArgs) ToStreamProcessorTagOutput() StreamProcessorTagOutput {
	return i.ToStreamProcessorTagOutputWithContext(context.Background())
}

func (i StreamProcessorTagArgs) ToStreamProcessorTagOutputWithContext(ctx context.Context) StreamProcessorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorTagOutput)
}

// StreamProcessorTagArrayInput is an input type that accepts StreamProcessorTagArray and StreamProcessorTagArrayOutput values.
// You can construct a concrete instance of `StreamProcessorTagArrayInput` via:
//
//          StreamProcessorTagArray{ StreamProcessorTagArgs{...} }
type StreamProcessorTagArrayInput interface {
	pulumi.Input

	ToStreamProcessorTagArrayOutput() StreamProcessorTagArrayOutput
	ToStreamProcessorTagArrayOutputWithContext(context.Context) StreamProcessorTagArrayOutput
}

type StreamProcessorTagArray []StreamProcessorTagInput

func (StreamProcessorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamProcessorTag)(nil)).Elem()
}

func (i StreamProcessorTagArray) ToStreamProcessorTagArrayOutput() StreamProcessorTagArrayOutput {
	return i.ToStreamProcessorTagArrayOutputWithContext(context.Background())
}

func (i StreamProcessorTagArray) ToStreamProcessorTagArrayOutputWithContext(ctx context.Context) StreamProcessorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorTagArrayOutput)
}

// A key-value pair to associate with a resource.
type StreamProcessorTagOutput struct{ *pulumi.OutputState }

func (StreamProcessorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamProcessorTag)(nil)).Elem()
}

func (o StreamProcessorTagOutput) ToStreamProcessorTagOutput() StreamProcessorTagOutput {
	return o
}

func (o StreamProcessorTagOutput) ToStreamProcessorTagOutputWithContext(ctx context.Context) StreamProcessorTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o StreamProcessorTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o StreamProcessorTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StreamProcessorTag) string { return v.Value }).(pulumi.StringOutput)
}

type StreamProcessorTagArrayOutput struct{ *pulumi.OutputState }

func (StreamProcessorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StreamProcessorTag)(nil)).Elem()
}

func (o StreamProcessorTagArrayOutput) ToStreamProcessorTagArrayOutput() StreamProcessorTagArrayOutput {
	return o
}

func (o StreamProcessorTagArrayOutput) ToStreamProcessorTagArrayOutputWithContext(ctx context.Context) StreamProcessorTagArrayOutput {
	return o
}

func (o StreamProcessorTagArrayOutput) Index(i pulumi.IntInput) StreamProcessorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StreamProcessorTag {
		return vs[0].([]StreamProcessorTag)[vs[1].(int)]
	}).(StreamProcessorTagOutput)
}

type StreamProcessorPointArrayArray []StreamProcessorPointArrayInput

func (StreamProcessorPointArrayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]StreamProcessorPoint)(nil)).Elem()
}

func (i StreamProcessorPointArrayArray) ToStreamProcessorPointArrayArrayOutput() StreamProcessorPointArrayArrayOutput {
	return i.ToStreamProcessorPointArrayArrayOutputWithContext(context.Background())
}

func (i StreamProcessorPointArrayArray) ToStreamProcessorPointArrayArrayOutputWithContext(ctx context.Context) StreamProcessorPointArrayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamProcessorPointArrayArrayOutput)
}

// StreamProcessorPointArrayArrayInput is an input type that accepts StreamProcessorPointArrayArray and StreamProcessorPointArrayArrayOutput values.
// You can construct a concrete instance of `StreamProcessorPointArrayArrayInput` via:
//
//          StreamProcessorPointArrayArray{ StreamProcessorPointArray{ StreamProcessorPointArgs{...} } }
type StreamProcessorPointArrayArrayInput interface {
	pulumi.Input

	ToStreamProcessorPointArrayArrayOutput() StreamProcessorPointArrayArrayOutput
	ToStreamProcessorPointArrayArrayOutputWithContext(context.Context) StreamProcessorPointArrayArrayOutput
}

type StreamProcessorPointArrayArrayOutput struct{ *pulumi.OutputState }

func (StreamProcessorPointArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]StreamProcessorPoint)(nil)).Elem()
}

func (o StreamProcessorPointArrayArrayOutput) ToStreamProcessorPointArrayArrayOutput() StreamProcessorPointArrayArrayOutput {
	return o
}

func (o StreamProcessorPointArrayArrayOutput) ToStreamProcessorPointArrayArrayOutputWithContext(ctx context.Context) StreamProcessorPointArrayArrayOutput {
	return o
}

func (o StreamProcessorPointArrayArrayOutput) Index(i pulumi.IntInput) StreamProcessorPointArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) []StreamProcessorPoint {
		return vs[0].([][]StreamProcessorPoint)[vs[1].(int)]
	}).(StreamProcessorPointArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionTagInput)(nil)).Elem(), CollectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionTagArrayInput)(nil)).Elem(), CollectionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorBoundingBoxInput)(nil)).Elem(), StreamProcessorBoundingBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorBoundingBoxArrayInput)(nil)).Elem(), StreamProcessorBoundingBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorConnectedHomeSettingsInput)(nil)).Elem(), StreamProcessorConnectedHomeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorConnectedHomeSettingsPtrInput)(nil)).Elem(), StreamProcessorConnectedHomeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorDataSharingPreferenceInput)(nil)).Elem(), StreamProcessorDataSharingPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorDataSharingPreferencePtrInput)(nil)).Elem(), StreamProcessorDataSharingPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorFaceSearchSettingsInput)(nil)).Elem(), StreamProcessorFaceSearchSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorFaceSearchSettingsPtrInput)(nil)).Elem(), StreamProcessorFaceSearchSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorKinesisDataStreamInput)(nil)).Elem(), StreamProcessorKinesisDataStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorKinesisDataStreamPtrInput)(nil)).Elem(), StreamProcessorKinesisDataStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorKinesisVideoStreamInput)(nil)).Elem(), StreamProcessorKinesisVideoStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorNotificationChannelInput)(nil)).Elem(), StreamProcessorNotificationChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorNotificationChannelPtrInput)(nil)).Elem(), StreamProcessorNotificationChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorPointInput)(nil)).Elem(), StreamProcessorPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorPointArrayInput)(nil)).Elem(), StreamProcessorPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorS3DestinationInput)(nil)).Elem(), StreamProcessorS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorS3DestinationPtrInput)(nil)).Elem(), StreamProcessorS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorTagInput)(nil)).Elem(), StreamProcessorTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorTagArrayInput)(nil)).Elem(), StreamProcessorTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamProcessorPointArrayArrayInput)(nil)).Elem(), StreamProcessorPointArrayArray{})
	pulumi.RegisterOutputType(CollectionTagOutput{})
	pulumi.RegisterOutputType(CollectionTagArrayOutput{})
	pulumi.RegisterOutputType(StreamProcessorBoundingBoxOutput{})
	pulumi.RegisterOutputType(StreamProcessorBoundingBoxArrayOutput{})
	pulumi.RegisterOutputType(StreamProcessorConnectedHomeSettingsOutput{})
	pulumi.RegisterOutputType(StreamProcessorConnectedHomeSettingsPtrOutput{})
	pulumi.RegisterOutputType(StreamProcessorDataSharingPreferenceOutput{})
	pulumi.RegisterOutputType(StreamProcessorDataSharingPreferencePtrOutput{})
	pulumi.RegisterOutputType(StreamProcessorFaceSearchSettingsOutput{})
	pulumi.RegisterOutputType(StreamProcessorFaceSearchSettingsPtrOutput{})
	pulumi.RegisterOutputType(StreamProcessorKinesisDataStreamOutput{})
	pulumi.RegisterOutputType(StreamProcessorKinesisDataStreamPtrOutput{})
	pulumi.RegisterOutputType(StreamProcessorKinesisVideoStreamOutput{})
	pulumi.RegisterOutputType(StreamProcessorNotificationChannelOutput{})
	pulumi.RegisterOutputType(StreamProcessorNotificationChannelPtrOutput{})
	pulumi.RegisterOutputType(StreamProcessorPointOutput{})
	pulumi.RegisterOutputType(StreamProcessorPointArrayOutput{})
	pulumi.RegisterOutputType(StreamProcessorS3DestinationOutput{})
	pulumi.RegisterOutputType(StreamProcessorS3DestinationPtrOutput{})
	pulumi.RegisterOutputType(StreamProcessorTagOutput{})
	pulumi.RegisterOutputType(StreamProcessorTagArrayOutput{})
	pulumi.RegisterOutputType(StreamProcessorPointArrayArrayOutput{})
}
