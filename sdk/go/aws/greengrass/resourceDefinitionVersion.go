// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package greengrass

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Greengrass::ResourceDefinitionVersion
//
// Deprecated: ResourceDefinitionVersion is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ResourceDefinitionVersion struct {
	pulumi.CustomResourceState

	ResourceDefinitionId pulumi.StringOutput                                  `pulumi:"resourceDefinitionId"`
	Resources            ResourceDefinitionVersionResourceInstanceArrayOutput `pulumi:"resources"`
}

// NewResourceDefinitionVersion registers a new resource with the given unique name, arguments, and options.
func NewResourceDefinitionVersion(ctx *pulumi.Context,
	name string, args *ResourceDefinitionVersionArgs, opts ...pulumi.ResourceOption) (*ResourceDefinitionVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceDefinitionId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceDefinitionId'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	var resource ResourceDefinitionVersion
	err := ctx.RegisterResource("aws-native:greengrass:ResourceDefinitionVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceDefinitionVersion gets an existing ResourceDefinitionVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceDefinitionVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceDefinitionVersionState, opts ...pulumi.ResourceOption) (*ResourceDefinitionVersion, error) {
	var resource ResourceDefinitionVersion
	err := ctx.ReadResource("aws-native:greengrass:ResourceDefinitionVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceDefinitionVersion resources.
type resourceDefinitionVersionState struct {
}

type ResourceDefinitionVersionState struct {
}

func (ResourceDefinitionVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceDefinitionVersionState)(nil)).Elem()
}

type resourceDefinitionVersionArgs struct {
	ResourceDefinitionId string                                      `pulumi:"resourceDefinitionId"`
	Resources            []ResourceDefinitionVersionResourceInstance `pulumi:"resources"`
}

// The set of arguments for constructing a ResourceDefinitionVersion resource.
type ResourceDefinitionVersionArgs struct {
	ResourceDefinitionId pulumi.StringInput
	Resources            ResourceDefinitionVersionResourceInstanceArrayInput
}

func (ResourceDefinitionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceDefinitionVersionArgs)(nil)).Elem()
}

type ResourceDefinitionVersionInput interface {
	pulumi.Input

	ToResourceDefinitionVersionOutput() ResourceDefinitionVersionOutput
	ToResourceDefinitionVersionOutputWithContext(ctx context.Context) ResourceDefinitionVersionOutput
}

func (*ResourceDefinitionVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDefinitionVersion)(nil))
}

func (i *ResourceDefinitionVersion) ToResourceDefinitionVersionOutput() ResourceDefinitionVersionOutput {
	return i.ToResourceDefinitionVersionOutputWithContext(context.Background())
}

func (i *ResourceDefinitionVersion) ToResourceDefinitionVersionOutputWithContext(ctx context.Context) ResourceDefinitionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDefinitionVersionOutput)
}

type ResourceDefinitionVersionOutput struct{ *pulumi.OutputState }

func (ResourceDefinitionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDefinitionVersion)(nil))
}

func (o ResourceDefinitionVersionOutput) ToResourceDefinitionVersionOutput() ResourceDefinitionVersionOutput {
	return o
}

func (o ResourceDefinitionVersionOutput) ToResourceDefinitionVersionOutputWithContext(ctx context.Context) ResourceDefinitionVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ResourceDefinitionVersionOutput{})
}
