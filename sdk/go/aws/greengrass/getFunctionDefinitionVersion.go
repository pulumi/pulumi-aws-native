// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package greengrass

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Greengrass::FunctionDefinitionVersion
func LookupFunctionDefinitionVersion(ctx *pulumi.Context, args *LookupFunctionDefinitionVersionArgs, opts ...pulumi.InvokeOption) (*LookupFunctionDefinitionVersionResult, error) {
	var rv LookupFunctionDefinitionVersionResult
	err := ctx.Invoke("aws-native:greengrass:getFunctionDefinitionVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFunctionDefinitionVersionArgs struct {
	Id string `pulumi:"id"`
}

type LookupFunctionDefinitionVersionResult struct {
	Id *string `pulumi:"id"`
}

func LookupFunctionDefinitionVersionOutput(ctx *pulumi.Context, args LookupFunctionDefinitionVersionOutputArgs, opts ...pulumi.InvokeOption) LookupFunctionDefinitionVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFunctionDefinitionVersionResult, error) {
			args := v.(LookupFunctionDefinitionVersionArgs)
			r, err := LookupFunctionDefinitionVersion(ctx, &args, opts...)
			var s LookupFunctionDefinitionVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFunctionDefinitionVersionResultOutput)
}

type LookupFunctionDefinitionVersionOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupFunctionDefinitionVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionDefinitionVersionArgs)(nil)).Elem()
}

type LookupFunctionDefinitionVersionResultOutput struct{ *pulumi.OutputState }

func (LookupFunctionDefinitionVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionDefinitionVersionResult)(nil)).Elem()
}

func (o LookupFunctionDefinitionVersionResultOutput) ToLookupFunctionDefinitionVersionResultOutput() LookupFunctionDefinitionVersionResultOutput {
	return o
}

func (o LookupFunctionDefinitionVersionResultOutput) ToLookupFunctionDefinitionVersionResultOutputWithContext(ctx context.Context) LookupFunctionDefinitionVersionResultOutput {
	return o
}

func (o LookupFunctionDefinitionVersionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFunctionDefinitionVersionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFunctionDefinitionVersionResultOutput{})
}
