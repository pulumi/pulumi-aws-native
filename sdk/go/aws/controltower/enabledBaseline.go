// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package controltower

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ControlTower::EnabledBaseline Resource Type
type EnabledBaseline struct {
	pulumi.CustomResourceState

	// The specific `Baseline` enabled as part of the `EnabledBaseline` resource.
	BaselineIdentifier pulumi.StringOutput `pulumi:"baselineIdentifier"`
	// The enabled version of the `Baseline` .
	BaselineVersion pulumi.StringOutput `pulumi:"baselineVersion"`
	// The ARN of the `EnabledBaseline` resource.
	EnabledBaselineIdentifier pulumi.StringOutput `pulumi:"enabledBaselineIdentifier"`
	// A key-value parameter to an `EnabledBaseline` resource.
	Parameters EnabledBaselineParameterArrayOutput `pulumi:"parameters"`
	// A key-value parameter to an `EnabledBaseline` resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The target on which to enable the `Baseline` .
	TargetIdentifier pulumi.StringOutput `pulumi:"targetIdentifier"`
}

// NewEnabledBaseline registers a new resource with the given unique name, arguments, and options.
func NewEnabledBaseline(ctx *pulumi.Context,
	name string, args *EnabledBaselineArgs, opts ...pulumi.ResourceOption) (*EnabledBaseline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BaselineIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'BaselineIdentifier'")
	}
	if args.BaselineVersion == nil {
		return nil, errors.New("invalid value for required argument 'BaselineVersion'")
	}
	if args.TargetIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'TargetIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"baselineIdentifier",
		"targetIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnabledBaseline
	err := ctx.RegisterResource("aws-native:controltower:EnabledBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnabledBaseline gets an existing EnabledBaseline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnabledBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnabledBaselineState, opts ...pulumi.ResourceOption) (*EnabledBaseline, error) {
	var resource EnabledBaseline
	err := ctx.ReadResource("aws-native:controltower:EnabledBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnabledBaseline resources.
type enabledBaselineState struct {
}

type EnabledBaselineState struct {
}

func (EnabledBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*enabledBaselineState)(nil)).Elem()
}

type enabledBaselineArgs struct {
	// The specific `Baseline` enabled as part of the `EnabledBaseline` resource.
	BaselineIdentifier string `pulumi:"baselineIdentifier"`
	// The enabled version of the `Baseline` .
	BaselineVersion string `pulumi:"baselineVersion"`
	// A key-value parameter to an `EnabledBaseline` resource.
	Parameters []EnabledBaselineParameter `pulumi:"parameters"`
	// A key-value parameter to an `EnabledBaseline` resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The target on which to enable the `Baseline` .
	TargetIdentifier string `pulumi:"targetIdentifier"`
}

// The set of arguments for constructing a EnabledBaseline resource.
type EnabledBaselineArgs struct {
	// The specific `Baseline` enabled as part of the `EnabledBaseline` resource.
	BaselineIdentifier pulumi.StringInput
	// The enabled version of the `Baseline` .
	BaselineVersion pulumi.StringInput
	// A key-value parameter to an `EnabledBaseline` resource.
	Parameters EnabledBaselineParameterArrayInput
	// A key-value parameter to an `EnabledBaseline` resource.
	Tags aws.TagArrayInput
	// The target on which to enable the `Baseline` .
	TargetIdentifier pulumi.StringInput
}

func (EnabledBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*enabledBaselineArgs)(nil)).Elem()
}

type EnabledBaselineInput interface {
	pulumi.Input

	ToEnabledBaselineOutput() EnabledBaselineOutput
	ToEnabledBaselineOutputWithContext(ctx context.Context) EnabledBaselineOutput
}

func (*EnabledBaseline) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledBaseline)(nil)).Elem()
}

func (i *EnabledBaseline) ToEnabledBaselineOutput() EnabledBaselineOutput {
	return i.ToEnabledBaselineOutputWithContext(context.Background())
}

func (i *EnabledBaseline) ToEnabledBaselineOutputWithContext(ctx context.Context) EnabledBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledBaselineOutput)
}

type EnabledBaselineOutput struct{ *pulumi.OutputState }

func (EnabledBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledBaseline)(nil)).Elem()
}

func (o EnabledBaselineOutput) ToEnabledBaselineOutput() EnabledBaselineOutput {
	return o
}

func (o EnabledBaselineOutput) ToEnabledBaselineOutputWithContext(ctx context.Context) EnabledBaselineOutput {
	return o
}

// The specific `Baseline` enabled as part of the `EnabledBaseline` resource.
func (o EnabledBaselineOutput) BaselineIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnabledBaseline) pulumi.StringOutput { return v.BaselineIdentifier }).(pulumi.StringOutput)
}

// The enabled version of the `Baseline` .
func (o EnabledBaselineOutput) BaselineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *EnabledBaseline) pulumi.StringOutput { return v.BaselineVersion }).(pulumi.StringOutput)
}

// The ARN of the `EnabledBaseline` resource.
func (o EnabledBaselineOutput) EnabledBaselineIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnabledBaseline) pulumi.StringOutput { return v.EnabledBaselineIdentifier }).(pulumi.StringOutput)
}

// A key-value parameter to an `EnabledBaseline` resource.
func (o EnabledBaselineOutput) Parameters() EnabledBaselineParameterArrayOutput {
	return o.ApplyT(func(v *EnabledBaseline) EnabledBaselineParameterArrayOutput { return v.Parameters }).(EnabledBaselineParameterArrayOutput)
}

// A key-value parameter to an `EnabledBaseline` resource.
func (o EnabledBaselineOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *EnabledBaseline) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The target on which to enable the `Baseline` .
func (o EnabledBaselineOutput) TargetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnabledBaseline) pulumi.StringOutput { return v.TargetIdentifier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnabledBaselineInput)(nil)).Elem(), &EnabledBaseline{})
	pulumi.RegisterOutputType(EnabledBaselineOutput{})
}
