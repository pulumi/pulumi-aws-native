// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package forecast

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DatasetAttributesItemProperties struct {
	// Name of the dataset field
	AttributeName *string `pulumi:"attributeName"`
	// Data type of the field
	AttributeType *DatasetAttributesItemPropertiesAttributeType `pulumi:"attributeType"`
}

// DatasetAttributesItemPropertiesInput is an input type that accepts DatasetAttributesItemPropertiesArgs and DatasetAttributesItemPropertiesOutput values.
// You can construct a concrete instance of `DatasetAttributesItemPropertiesInput` via:
//
//	DatasetAttributesItemPropertiesArgs{...}
type DatasetAttributesItemPropertiesInput interface {
	pulumi.Input

	ToDatasetAttributesItemPropertiesOutput() DatasetAttributesItemPropertiesOutput
	ToDatasetAttributesItemPropertiesOutputWithContext(context.Context) DatasetAttributesItemPropertiesOutput
}

type DatasetAttributesItemPropertiesArgs struct {
	// Name of the dataset field
	AttributeName pulumi.StringPtrInput `pulumi:"attributeName"`
	// Data type of the field
	AttributeType DatasetAttributesItemPropertiesAttributeTypePtrInput `pulumi:"attributeType"`
}

func (DatasetAttributesItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAttributesItemProperties)(nil)).Elem()
}

func (i DatasetAttributesItemPropertiesArgs) ToDatasetAttributesItemPropertiesOutput() DatasetAttributesItemPropertiesOutput {
	return i.ToDatasetAttributesItemPropertiesOutputWithContext(context.Background())
}

func (i DatasetAttributesItemPropertiesArgs) ToDatasetAttributesItemPropertiesOutputWithContext(ctx context.Context) DatasetAttributesItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAttributesItemPropertiesOutput)
}

// DatasetAttributesItemPropertiesArrayInput is an input type that accepts DatasetAttributesItemPropertiesArray and DatasetAttributesItemPropertiesArrayOutput values.
// You can construct a concrete instance of `DatasetAttributesItemPropertiesArrayInput` via:
//
//	DatasetAttributesItemPropertiesArray{ DatasetAttributesItemPropertiesArgs{...} }
type DatasetAttributesItemPropertiesArrayInput interface {
	pulumi.Input

	ToDatasetAttributesItemPropertiesArrayOutput() DatasetAttributesItemPropertiesArrayOutput
	ToDatasetAttributesItemPropertiesArrayOutputWithContext(context.Context) DatasetAttributesItemPropertiesArrayOutput
}

type DatasetAttributesItemPropertiesArray []DatasetAttributesItemPropertiesInput

func (DatasetAttributesItemPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAttributesItemProperties)(nil)).Elem()
}

func (i DatasetAttributesItemPropertiesArray) ToDatasetAttributesItemPropertiesArrayOutput() DatasetAttributesItemPropertiesArrayOutput {
	return i.ToDatasetAttributesItemPropertiesArrayOutputWithContext(context.Background())
}

func (i DatasetAttributesItemPropertiesArray) ToDatasetAttributesItemPropertiesArrayOutputWithContext(ctx context.Context) DatasetAttributesItemPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAttributesItemPropertiesArrayOutput)
}

type DatasetAttributesItemPropertiesOutput struct{ *pulumi.OutputState }

func (DatasetAttributesItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAttributesItemProperties)(nil)).Elem()
}

func (o DatasetAttributesItemPropertiesOutput) ToDatasetAttributesItemPropertiesOutput() DatasetAttributesItemPropertiesOutput {
	return o
}

func (o DatasetAttributesItemPropertiesOutput) ToDatasetAttributesItemPropertiesOutputWithContext(ctx context.Context) DatasetAttributesItemPropertiesOutput {
	return o
}

// Name of the dataset field
func (o DatasetAttributesItemPropertiesOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetAttributesItemProperties) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

// Data type of the field
func (o DatasetAttributesItemPropertiesOutput) AttributeType() DatasetAttributesItemPropertiesAttributeTypePtrOutput {
	return o.ApplyT(func(v DatasetAttributesItemProperties) *DatasetAttributesItemPropertiesAttributeType {
		return v.AttributeType
	}).(DatasetAttributesItemPropertiesAttributeTypePtrOutput)
}

type DatasetAttributesItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (DatasetAttributesItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAttributesItemProperties)(nil)).Elem()
}

func (o DatasetAttributesItemPropertiesArrayOutput) ToDatasetAttributesItemPropertiesArrayOutput() DatasetAttributesItemPropertiesArrayOutput {
	return o
}

func (o DatasetAttributesItemPropertiesArrayOutput) ToDatasetAttributesItemPropertiesArrayOutputWithContext(ctx context.Context) DatasetAttributesItemPropertiesArrayOutput {
	return o
}

func (o DatasetAttributesItemPropertiesArrayOutput) Index(i pulumi.IntInput) DatasetAttributesItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetAttributesItemProperties {
		return vs[0].([]DatasetAttributesItemProperties)[vs[1].(int)]
	}).(DatasetAttributesItemPropertiesOutput)
}

// A key-value pair to associate with a resource.
type DatasetGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type EncryptionConfigProperties struct {
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	RoleArn   *string `pulumi:"roleArn"`
}

// EncryptionConfigPropertiesInput is an input type that accepts EncryptionConfigPropertiesArgs and EncryptionConfigPropertiesOutput values.
// You can construct a concrete instance of `EncryptionConfigPropertiesInput` via:
//
//	EncryptionConfigPropertiesArgs{...}
type EncryptionConfigPropertiesInput interface {
	pulumi.Input

	ToEncryptionConfigPropertiesOutput() EncryptionConfigPropertiesOutput
	ToEncryptionConfigPropertiesOutputWithContext(context.Context) EncryptionConfigPropertiesOutput
}

type EncryptionConfigPropertiesArgs struct {
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (EncryptionConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigProperties)(nil)).Elem()
}

func (i EncryptionConfigPropertiesArgs) ToEncryptionConfigPropertiesOutput() EncryptionConfigPropertiesOutput {
	return i.ToEncryptionConfigPropertiesOutputWithContext(context.Background())
}

func (i EncryptionConfigPropertiesArgs) ToEncryptionConfigPropertiesOutputWithContext(ctx context.Context) EncryptionConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigPropertiesOutput)
}

func (i EncryptionConfigPropertiesArgs) ToEncryptionConfigPropertiesPtrOutput() EncryptionConfigPropertiesPtrOutput {
	return i.ToEncryptionConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionConfigPropertiesArgs) ToEncryptionConfigPropertiesPtrOutputWithContext(ctx context.Context) EncryptionConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigPropertiesOutput).ToEncryptionConfigPropertiesPtrOutputWithContext(ctx)
}

// EncryptionConfigPropertiesPtrInput is an input type that accepts EncryptionConfigPropertiesArgs, EncryptionConfigPropertiesPtr and EncryptionConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionConfigPropertiesPtrInput` via:
//
//	        EncryptionConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionConfigPropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionConfigPropertiesPtrOutput() EncryptionConfigPropertiesPtrOutput
	ToEncryptionConfigPropertiesPtrOutputWithContext(context.Context) EncryptionConfigPropertiesPtrOutput
}

type encryptionConfigPropertiesPtrType EncryptionConfigPropertiesArgs

func EncryptionConfigPropertiesPtr(v *EncryptionConfigPropertiesArgs) EncryptionConfigPropertiesPtrInput {
	return (*encryptionConfigPropertiesPtrType)(v)
}

func (*encryptionConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigProperties)(nil)).Elem()
}

func (i *encryptionConfigPropertiesPtrType) ToEncryptionConfigPropertiesPtrOutput() EncryptionConfigPropertiesPtrOutput {
	return i.ToEncryptionConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionConfigPropertiesPtrType) ToEncryptionConfigPropertiesPtrOutputWithContext(ctx context.Context) EncryptionConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigPropertiesPtrOutput)
}

type EncryptionConfigPropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigProperties)(nil)).Elem()
}

func (o EncryptionConfigPropertiesOutput) ToEncryptionConfigPropertiesOutput() EncryptionConfigPropertiesOutput {
	return o
}

func (o EncryptionConfigPropertiesOutput) ToEncryptionConfigPropertiesOutputWithContext(ctx context.Context) EncryptionConfigPropertiesOutput {
	return o
}

func (o EncryptionConfigPropertiesOutput) ToEncryptionConfigPropertiesPtrOutput() EncryptionConfigPropertiesPtrOutput {
	return o.ToEncryptionConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionConfigPropertiesOutput) ToEncryptionConfigPropertiesPtrOutputWithContext(ctx context.Context) EncryptionConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionConfigProperties) *EncryptionConfigProperties {
		return &v
	}).(EncryptionConfigPropertiesPtrOutput)
}

func (o EncryptionConfigPropertiesOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionConfigProperties) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o EncryptionConfigPropertiesOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionConfigProperties) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type EncryptionConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigProperties)(nil)).Elem()
}

func (o EncryptionConfigPropertiesPtrOutput) ToEncryptionConfigPropertiesPtrOutput() EncryptionConfigPropertiesPtrOutput {
	return o
}

func (o EncryptionConfigPropertiesPtrOutput) ToEncryptionConfigPropertiesPtrOutputWithContext(ctx context.Context) EncryptionConfigPropertiesPtrOutput {
	return o
}

func (o EncryptionConfigPropertiesPtrOutput) Elem() EncryptionConfigPropertiesOutput {
	return o.ApplyT(func(v *EncryptionConfigProperties) EncryptionConfigProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionConfigProperties
		return ret
	}).(EncryptionConfigPropertiesOutput)
}

func (o EncryptionConfigPropertiesPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

func (o EncryptionConfigPropertiesPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type SchemaProperties struct {
	Attributes []DatasetAttributesItemProperties `pulumi:"attributes"`
}

// SchemaPropertiesInput is an input type that accepts SchemaPropertiesArgs and SchemaPropertiesOutput values.
// You can construct a concrete instance of `SchemaPropertiesInput` via:
//
//	SchemaPropertiesArgs{...}
type SchemaPropertiesInput interface {
	pulumi.Input

	ToSchemaPropertiesOutput() SchemaPropertiesOutput
	ToSchemaPropertiesOutputWithContext(context.Context) SchemaPropertiesOutput
}

type SchemaPropertiesArgs struct {
	Attributes DatasetAttributesItemPropertiesArrayInput `pulumi:"attributes"`
}

func (SchemaPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaProperties)(nil)).Elem()
}

func (i SchemaPropertiesArgs) ToSchemaPropertiesOutput() SchemaPropertiesOutput {
	return i.ToSchemaPropertiesOutputWithContext(context.Background())
}

func (i SchemaPropertiesArgs) ToSchemaPropertiesOutputWithContext(ctx context.Context) SchemaPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaPropertiesOutput)
}

type SchemaPropertiesOutput struct{ *pulumi.OutputState }

func (SchemaPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaProperties)(nil)).Elem()
}

func (o SchemaPropertiesOutput) ToSchemaPropertiesOutput() SchemaPropertiesOutput {
	return o
}

func (o SchemaPropertiesOutput) ToSchemaPropertiesOutputWithContext(ctx context.Context) SchemaPropertiesOutput {
	return o
}

func (o SchemaPropertiesOutput) Attributes() DatasetAttributesItemPropertiesArrayOutput {
	return o.ApplyT(func(v SchemaProperties) []DatasetAttributesItemProperties { return v.Attributes }).(DatasetAttributesItemPropertiesArrayOutput)
}

type SchemaPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SchemaPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaProperties)(nil)).Elem()
}

func (o SchemaPropertiesPtrOutput) ToSchemaPropertiesPtrOutput() SchemaPropertiesPtrOutput {
	return o
}

func (o SchemaPropertiesPtrOutput) ToSchemaPropertiesPtrOutputWithContext(ctx context.Context) SchemaPropertiesPtrOutput {
	return o
}

func (o SchemaPropertiesPtrOutput) Elem() SchemaPropertiesOutput {
	return o.ApplyT(func(v *SchemaProperties) SchemaProperties {
		if v != nil {
			return *v
		}
		var ret SchemaProperties
		return ret
	}).(SchemaPropertiesOutput)
}

func (o SchemaPropertiesPtrOutput) Attributes() DatasetAttributesItemPropertiesArrayOutput {
	return o.ApplyT(func(v *SchemaProperties) []DatasetAttributesItemProperties {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(DatasetAttributesItemPropertiesArrayOutput)
}

// A key-value pair to associate with a resource.
type TagsItemProperties struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetAttributesItemPropertiesInput)(nil)).Elem(), DatasetAttributesItemPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetAttributesItemPropertiesArrayInput)(nil)).Elem(), DatasetAttributesItemPropertiesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionConfigPropertiesInput)(nil)).Elem(), EncryptionConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionConfigPropertiesPtrInput)(nil)).Elem(), EncryptionConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaPropertiesInput)(nil)).Elem(), SchemaPropertiesArgs{})
	pulumi.RegisterOutputType(DatasetAttributesItemPropertiesOutput{})
	pulumi.RegisterOutputType(DatasetAttributesItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(EncryptionConfigPropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SchemaPropertiesOutput{})
	pulumi.RegisterOutputType(SchemaPropertiesPtrOutput{})
}
