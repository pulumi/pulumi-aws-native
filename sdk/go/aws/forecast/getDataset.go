// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package forecast

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type Definition for AWS::Forecast::Dataset
func LookupDataset(ctx *pulumi.Context, args *LookupDatasetArgs, opts ...pulumi.InvokeOption) (*LookupDatasetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatasetResult
	err := ctx.Invoke("aws-native:forecast:getDataset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatasetArgs struct {
	// The Amazon Resource Name (ARN) of the dataset.
	Arn string `pulumi:"arn"`
}

type LookupDatasetResult struct {
	// The Amazon Resource Name (ARN) of the dataset.
	Arn *string `pulumi:"arn"`
	// Frequency of data collection. This parameter is required for RELATED_TIME_SERIES
	DataFrequency *string `pulumi:"dataFrequency"`
	// The dataset type
	DatasetType *DatasetType `pulumi:"datasetType"`
	// The domain associated with the dataset
	Domain *DatasetDomain `pulumi:"domain"`
	// A Key Management Service (KMS) key and the Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.
	EncryptionConfig *EncryptionConfigProperties `pulumi:"encryptionConfig"`
	// The schema for the dataset. The schema attributes and their order must match the fields in your data. The dataset `Domain` and `DatasetType` that you choose determine the minimum required fields in your training data. For information about the required fields for a specific dataset domain and type, see [Dataset Domains and Dataset Types](https://docs.aws.amazon.com/forecast/latest/dg/howitworks-domains-ds-types.html) .
	Schema *SchemaProperties `pulumi:"schema"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDatasetOutput(ctx *pulumi.Context, args LookupDatasetOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDatasetResultOutput, error) {
			args := v.(LookupDatasetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:forecast:getDataset", args, LookupDatasetResultOutput{}, options).(LookupDatasetResultOutput), nil
		}).(LookupDatasetResultOutput)
}

type LookupDatasetOutputArgs struct {
	// The Amazon Resource Name (ARN) of the dataset.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupDatasetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetArgs)(nil)).Elem()
}

type LookupDatasetResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetResult)(nil)).Elem()
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutput() LookupDatasetResultOutput {
	return o
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutputWithContext(ctx context.Context) LookupDatasetResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the dataset.
func (o LookupDatasetResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Frequency of data collection. This parameter is required for RELATED_TIME_SERIES
func (o LookupDatasetResultOutput) DataFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DataFrequency }).(pulumi.StringPtrOutput)
}

// The dataset type
func (o LookupDatasetResultOutput) DatasetType() DatasetTypePtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *DatasetType { return v.DatasetType }).(DatasetTypePtrOutput)
}

// The domain associated with the dataset
func (o LookupDatasetResultOutput) Domain() DatasetDomainPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *DatasetDomain { return v.Domain }).(DatasetDomainPtrOutput)
}

// A Key Management Service (KMS) key and the Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.
func (o LookupDatasetResultOutput) EncryptionConfig() EncryptionConfigPropertiesPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *EncryptionConfigProperties { return v.EncryptionConfig }).(EncryptionConfigPropertiesPtrOutput)
}

// The schema for the dataset. The schema attributes and their order must match the fields in your data. The dataset `Domain` and `DatasetType` that you choose determine the minimum required fields in your training data. For information about the required fields for a specific dataset domain and type, see [Dataset Domains and Dataset Types](https://docs.aws.amazon.com/forecast/latest/dg/howitworks-domains-ds-types.html) .
func (o LookupDatasetResultOutput) Schema() SchemaPropertiesPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *SchemaProperties { return v.Schema }).(SchemaPropertiesPtrOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
func (o LookupDatasetResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetResultOutput{})
}
