// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codegurureviewer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A key-value pair to associate with a resource.
type RepositoryAssociationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
	Value string `pulumi:"value"`
}

// RepositoryAssociationTagInput is an input type that accepts RepositoryAssociationTagArgs and RepositoryAssociationTagOutput values.
// You can construct a concrete instance of `RepositoryAssociationTagInput` via:
//
//          RepositoryAssociationTagArgs{...}
type RepositoryAssociationTagInput interface {
	pulumi.Input

	ToRepositoryAssociationTagOutput() RepositoryAssociationTagOutput
	ToRepositoryAssociationTagOutputWithContext(context.Context) RepositoryAssociationTagOutput
}

// A key-value pair to associate with a resource.
type RepositoryAssociationTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RepositoryAssociationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAssociationTag)(nil)).Elem()
}

func (i RepositoryAssociationTagArgs) ToRepositoryAssociationTagOutput() RepositoryAssociationTagOutput {
	return i.ToRepositoryAssociationTagOutputWithContext(context.Background())
}

func (i RepositoryAssociationTagArgs) ToRepositoryAssociationTagOutputWithContext(ctx context.Context) RepositoryAssociationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAssociationTagOutput)
}

// RepositoryAssociationTagArrayInput is an input type that accepts RepositoryAssociationTagArray and RepositoryAssociationTagArrayOutput values.
// You can construct a concrete instance of `RepositoryAssociationTagArrayInput` via:
//
//          RepositoryAssociationTagArray{ RepositoryAssociationTagArgs{...} }
type RepositoryAssociationTagArrayInput interface {
	pulumi.Input

	ToRepositoryAssociationTagArrayOutput() RepositoryAssociationTagArrayOutput
	ToRepositoryAssociationTagArrayOutputWithContext(context.Context) RepositoryAssociationTagArrayOutput
}

type RepositoryAssociationTagArray []RepositoryAssociationTagInput

func (RepositoryAssociationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryAssociationTag)(nil)).Elem()
}

func (i RepositoryAssociationTagArray) ToRepositoryAssociationTagArrayOutput() RepositoryAssociationTagArrayOutput {
	return i.ToRepositoryAssociationTagArrayOutputWithContext(context.Background())
}

func (i RepositoryAssociationTagArray) ToRepositoryAssociationTagArrayOutputWithContext(ctx context.Context) RepositoryAssociationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAssociationTagArrayOutput)
}

// A key-value pair to associate with a resource.
type RepositoryAssociationTagOutput struct{ *pulumi.OutputState }

func (RepositoryAssociationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAssociationTag)(nil)).Elem()
}

func (o RepositoryAssociationTagOutput) ToRepositoryAssociationTagOutput() RepositoryAssociationTagOutput {
	return o
}

func (o RepositoryAssociationTagOutput) ToRepositoryAssociationTagOutputWithContext(ctx context.Context) RepositoryAssociationTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
func (o RepositoryAssociationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAssociationTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
func (o RepositoryAssociationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAssociationTag) string { return v.Value }).(pulumi.StringOutput)
}

type RepositoryAssociationTagArrayOutput struct{ *pulumi.OutputState }

func (RepositoryAssociationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryAssociationTag)(nil)).Elem()
}

func (o RepositoryAssociationTagArrayOutput) ToRepositoryAssociationTagArrayOutput() RepositoryAssociationTagArrayOutput {
	return o
}

func (o RepositoryAssociationTagArrayOutput) ToRepositoryAssociationTagArrayOutputWithContext(ctx context.Context) RepositoryAssociationTagArrayOutput {
	return o
}

func (o RepositoryAssociationTagArrayOutput) Index(i pulumi.IntInput) RepositoryAssociationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryAssociationTag {
		return vs[0].([]RepositoryAssociationTag)[vs[1].(int)]
	}).(RepositoryAssociationTagOutput)
}

func init() {
	pulumi.RegisterOutputType(RepositoryAssociationTagOutput{})
	pulumi.RegisterOutputType(RepositoryAssociationTagArrayOutput{})
}
