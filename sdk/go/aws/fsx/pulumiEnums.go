// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataRepositoryAssociationEventType string

const (
	DataRepositoryAssociationEventTypeNew     = DataRepositoryAssociationEventType("NEW")
	DataRepositoryAssociationEventTypeChanged = DataRepositoryAssociationEventType("CHANGED")
	DataRepositoryAssociationEventTypeDeleted = DataRepositoryAssociationEventType("DELETED")
)

func (DataRepositoryAssociationEventType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationEventType)(nil)).Elem()
}

func (e DataRepositoryAssociationEventType) ToDataRepositoryAssociationEventTypeOutput() DataRepositoryAssociationEventTypeOutput {
	return pulumi.ToOutput(e).(DataRepositoryAssociationEventTypeOutput)
}

func (e DataRepositoryAssociationEventType) ToDataRepositoryAssociationEventTypeOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataRepositoryAssociationEventTypeOutput)
}

func (e DataRepositoryAssociationEventType) ToDataRepositoryAssociationEventTypePtrOutput() DataRepositoryAssociationEventTypePtrOutput {
	return e.ToDataRepositoryAssociationEventTypePtrOutputWithContext(context.Background())
}

func (e DataRepositoryAssociationEventType) ToDataRepositoryAssociationEventTypePtrOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypePtrOutput {
	return DataRepositoryAssociationEventType(e).ToDataRepositoryAssociationEventTypeOutputWithContext(ctx).ToDataRepositoryAssociationEventTypePtrOutputWithContext(ctx)
}

func (e DataRepositoryAssociationEventType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataRepositoryAssociationEventType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataRepositoryAssociationEventType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataRepositoryAssociationEventType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataRepositoryAssociationEventTypeOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationEventTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationEventType)(nil)).Elem()
}

func (o DataRepositoryAssociationEventTypeOutput) ToDataRepositoryAssociationEventTypeOutput() DataRepositoryAssociationEventTypeOutput {
	return o
}

func (o DataRepositoryAssociationEventTypeOutput) ToDataRepositoryAssociationEventTypeOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypeOutput {
	return o
}

func (o DataRepositoryAssociationEventTypeOutput) ToDataRepositoryAssociationEventTypePtrOutput() DataRepositoryAssociationEventTypePtrOutput {
	return o.ToDataRepositoryAssociationEventTypePtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationEventTypeOutput) ToDataRepositoryAssociationEventTypePtrOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationEventType) *DataRepositoryAssociationEventType {
		return &v
	}).(DataRepositoryAssociationEventTypePtrOutput)
}

func (o DataRepositoryAssociationEventTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationEventTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataRepositoryAssociationEventType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataRepositoryAssociationEventTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationEventTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataRepositoryAssociationEventType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataRepositoryAssociationEventTypePtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationEventTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationEventType)(nil)).Elem()
}

func (o DataRepositoryAssociationEventTypePtrOutput) ToDataRepositoryAssociationEventTypePtrOutput() DataRepositoryAssociationEventTypePtrOutput {
	return o
}

func (o DataRepositoryAssociationEventTypePtrOutput) ToDataRepositoryAssociationEventTypePtrOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypePtrOutput {
	return o
}

func (o DataRepositoryAssociationEventTypePtrOutput) Elem() DataRepositoryAssociationEventTypeOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationEventType) DataRepositoryAssociationEventType {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationEventType
		return ret
	}).(DataRepositoryAssociationEventTypeOutput)
}

func (o DataRepositoryAssociationEventTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationEventTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataRepositoryAssociationEventType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataRepositoryAssociationEventTypeInput is an input type that accepts DataRepositoryAssociationEventTypeArgs and DataRepositoryAssociationEventTypeOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationEventTypeInput` via:
//
//	DataRepositoryAssociationEventTypeArgs{...}
type DataRepositoryAssociationEventTypeInput interface {
	pulumi.Input

	ToDataRepositoryAssociationEventTypeOutput() DataRepositoryAssociationEventTypeOutput
	ToDataRepositoryAssociationEventTypeOutputWithContext(context.Context) DataRepositoryAssociationEventTypeOutput
}

var dataRepositoryAssociationEventTypePtrType = reflect.TypeOf((**DataRepositoryAssociationEventType)(nil)).Elem()

type DataRepositoryAssociationEventTypePtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationEventTypePtrOutput() DataRepositoryAssociationEventTypePtrOutput
	ToDataRepositoryAssociationEventTypePtrOutputWithContext(context.Context) DataRepositoryAssociationEventTypePtrOutput
}

type dataRepositoryAssociationEventTypePtr string

func DataRepositoryAssociationEventTypePtr(v string) DataRepositoryAssociationEventTypePtrInput {
	return (*dataRepositoryAssociationEventTypePtr)(&v)
}

func (*dataRepositoryAssociationEventTypePtr) ElementType() reflect.Type {
	return dataRepositoryAssociationEventTypePtrType
}

func (in *dataRepositoryAssociationEventTypePtr) ToDataRepositoryAssociationEventTypePtrOutput() DataRepositoryAssociationEventTypePtrOutput {
	return pulumi.ToOutput(in).(DataRepositoryAssociationEventTypePtrOutput)
}

func (in *dataRepositoryAssociationEventTypePtr) ToDataRepositoryAssociationEventTypePtrOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataRepositoryAssociationEventTypePtrOutput)
}

// DataRepositoryAssociationEventTypeArrayInput is an input type that accepts DataRepositoryAssociationEventTypeArray and DataRepositoryAssociationEventTypeArrayOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationEventTypeArrayInput` via:
//
//	DataRepositoryAssociationEventTypeArray{ DataRepositoryAssociationEventTypeArgs{...} }
type DataRepositoryAssociationEventTypeArrayInput interface {
	pulumi.Input

	ToDataRepositoryAssociationEventTypeArrayOutput() DataRepositoryAssociationEventTypeArrayOutput
	ToDataRepositoryAssociationEventTypeArrayOutputWithContext(context.Context) DataRepositoryAssociationEventTypeArrayOutput
}

type DataRepositoryAssociationEventTypeArray []DataRepositoryAssociationEventType

func (DataRepositoryAssociationEventTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataRepositoryAssociationEventType)(nil)).Elem()
}

func (i DataRepositoryAssociationEventTypeArray) ToDataRepositoryAssociationEventTypeArrayOutput() DataRepositoryAssociationEventTypeArrayOutput {
	return i.ToDataRepositoryAssociationEventTypeArrayOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationEventTypeArray) ToDataRepositoryAssociationEventTypeArrayOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationEventTypeArrayOutput)
}

type DataRepositoryAssociationEventTypeArrayOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationEventTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataRepositoryAssociationEventType)(nil)).Elem()
}

func (o DataRepositoryAssociationEventTypeArrayOutput) ToDataRepositoryAssociationEventTypeArrayOutput() DataRepositoryAssociationEventTypeArrayOutput {
	return o
}

func (o DataRepositoryAssociationEventTypeArrayOutput) ToDataRepositoryAssociationEventTypeArrayOutputWithContext(ctx context.Context) DataRepositoryAssociationEventTypeArrayOutput {
	return o
}

func (o DataRepositoryAssociationEventTypeArrayOutput) Index(i pulumi.IntInput) DataRepositoryAssociationEventTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataRepositoryAssociationEventType {
		return vs[0].([]DataRepositoryAssociationEventType)[vs[1].(int)]
	}).(DataRepositoryAssociationEventTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationEventTypeInput)(nil)).Elem(), DataRepositoryAssociationEventType("NEW"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationEventTypePtrInput)(nil)).Elem(), DataRepositoryAssociationEventType("NEW"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationEventTypeArrayInput)(nil)).Elem(), DataRepositoryAssociationEventTypeArray{})
	pulumi.RegisterOutputType(DataRepositoryAssociationEventTypeOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationEventTypePtrOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationEventTypeArrayOutput{})
}
