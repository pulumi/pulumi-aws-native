// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Describes a data repository association's automatic export policy. The “AutoExportPolicy“ defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
//
//	The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
type DataRepositoryAssociationAutoExportPolicy struct {
	// The ``AutoExportPolicy`` can have the following event values:
	//   +   ``NEW`` - New files and directories are automatically exported to the data repository as they are added to the file system.
	//   +   ``CHANGED`` - Changes to files and directories on the file system are automatically exported to the data repository.
	//   +   ``DELETED`` - Files and directories are automatically deleted on the data repository when they are deleted on the file system.
	//
	//  You can define any combination of event types for your ``AutoExportPolicy``.
	Events []DataRepositoryAssociationEventType `pulumi:"events"`
}

// DataRepositoryAssociationAutoExportPolicyInput is an input type that accepts DataRepositoryAssociationAutoExportPolicyArgs and DataRepositoryAssociationAutoExportPolicyOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationAutoExportPolicyInput` via:
//
//	DataRepositoryAssociationAutoExportPolicyArgs{...}
type DataRepositoryAssociationAutoExportPolicyInput interface {
	pulumi.Input

	ToDataRepositoryAssociationAutoExportPolicyOutput() DataRepositoryAssociationAutoExportPolicyOutput
	ToDataRepositoryAssociationAutoExportPolicyOutputWithContext(context.Context) DataRepositoryAssociationAutoExportPolicyOutput
}

// Describes a data repository association's automatic export policy. The “AutoExportPolicy“ defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
//
//	The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
type DataRepositoryAssociationAutoExportPolicyArgs struct {
	// The ``AutoExportPolicy`` can have the following event values:
	//   +   ``NEW`` - New files and directories are automatically exported to the data repository as they are added to the file system.
	//   +   ``CHANGED`` - Changes to files and directories on the file system are automatically exported to the data repository.
	//   +   ``DELETED`` - Files and directories are automatically deleted on the data repository when they are deleted on the file system.
	//
	//  You can define any combination of event types for your ``AutoExportPolicy``.
	Events DataRepositoryAssociationEventTypeArrayInput `pulumi:"events"`
}

func (DataRepositoryAssociationAutoExportPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationAutoExportPolicy)(nil)).Elem()
}

func (i DataRepositoryAssociationAutoExportPolicyArgs) ToDataRepositoryAssociationAutoExportPolicyOutput() DataRepositoryAssociationAutoExportPolicyOutput {
	return i.ToDataRepositoryAssociationAutoExportPolicyOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationAutoExportPolicyArgs) ToDataRepositoryAssociationAutoExportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoExportPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationAutoExportPolicyOutput)
}

func (i DataRepositoryAssociationAutoExportPolicyArgs) ToDataRepositoryAssociationAutoExportPolicyPtrOutput() DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationAutoExportPolicyArgs) ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationAutoExportPolicyOutput).ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(ctx)
}

// DataRepositoryAssociationAutoExportPolicyPtrInput is an input type that accepts DataRepositoryAssociationAutoExportPolicyArgs, DataRepositoryAssociationAutoExportPolicyPtr and DataRepositoryAssociationAutoExportPolicyPtrOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationAutoExportPolicyPtrInput` via:
//
//	        DataRepositoryAssociationAutoExportPolicyArgs{...}
//
//	or:
//
//	        nil
type DataRepositoryAssociationAutoExportPolicyPtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationAutoExportPolicyPtrOutput() DataRepositoryAssociationAutoExportPolicyPtrOutput
	ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(context.Context) DataRepositoryAssociationAutoExportPolicyPtrOutput
}

type dataRepositoryAssociationAutoExportPolicyPtrType DataRepositoryAssociationAutoExportPolicyArgs

func DataRepositoryAssociationAutoExportPolicyPtr(v *DataRepositoryAssociationAutoExportPolicyArgs) DataRepositoryAssociationAutoExportPolicyPtrInput {
	return (*dataRepositoryAssociationAutoExportPolicyPtrType)(v)
}

func (*dataRepositoryAssociationAutoExportPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationAutoExportPolicy)(nil)).Elem()
}

func (i *dataRepositoryAssociationAutoExportPolicyPtrType) ToDataRepositoryAssociationAutoExportPolicyPtrOutput() DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(context.Background())
}

func (i *dataRepositoryAssociationAutoExportPolicyPtrType) ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationAutoExportPolicyPtrOutput)
}

// Describes a data repository association's automatic export policy. The “AutoExportPolicy“ defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
//
//	The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
type DataRepositoryAssociationAutoExportPolicyOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationAutoExportPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationAutoExportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationAutoExportPolicyOutput) ToDataRepositoryAssociationAutoExportPolicyOutput() DataRepositoryAssociationAutoExportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationAutoExportPolicyOutput) ToDataRepositoryAssociationAutoExportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoExportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationAutoExportPolicyOutput) ToDataRepositoryAssociationAutoExportPolicyPtrOutput() DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return o.ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationAutoExportPolicyOutput) ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationAutoExportPolicy) *DataRepositoryAssociationAutoExportPolicy {
		return &v
	}).(DataRepositoryAssociationAutoExportPolicyPtrOutput)
}

// The “AutoExportPolicy“ can have the following event values:
//
//   - “NEW“ - New files and directories are automatically exported to the data repository as they are added to the file system.
//
//   - “CHANGED“ - Changes to files and directories on the file system are automatically exported to the data repository.
//
//   - “DELETED“ - Files and directories are automatically deleted on the data repository when they are deleted on the file system.
//
//     You can define any combination of event types for your “AutoExportPolicy“.
func (o DataRepositoryAssociationAutoExportPolicyOutput) Events() DataRepositoryAssociationEventTypeArrayOutput {
	return o.ApplyT(func(v DataRepositoryAssociationAutoExportPolicy) []DataRepositoryAssociationEventType {
		return v.Events
	}).(DataRepositoryAssociationEventTypeArrayOutput)
}

type DataRepositoryAssociationAutoExportPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationAutoExportPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationAutoExportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationAutoExportPolicyPtrOutput) ToDataRepositoryAssociationAutoExportPolicyPtrOutput() DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationAutoExportPolicyPtrOutput) ToDataRepositoryAssociationAutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationAutoExportPolicyPtrOutput) Elem() DataRepositoryAssociationAutoExportPolicyOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationAutoExportPolicy) DataRepositoryAssociationAutoExportPolicy {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationAutoExportPolicy
		return ret
	}).(DataRepositoryAssociationAutoExportPolicyOutput)
}

// The “AutoExportPolicy“ can have the following event values:
//
//   - “NEW“ - New files and directories are automatically exported to the data repository as they are added to the file system.
//
//   - “CHANGED“ - Changes to files and directories on the file system are automatically exported to the data repository.
//
//   - “DELETED“ - Files and directories are automatically deleted on the data repository when they are deleted on the file system.
//
//     You can define any combination of event types for your “AutoExportPolicy“.
func (o DataRepositoryAssociationAutoExportPolicyPtrOutput) Events() DataRepositoryAssociationEventTypeArrayOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationAutoExportPolicy) []DataRepositoryAssociationEventType {
		if v == nil {
			return nil
		}
		return v.Events
	}).(DataRepositoryAssociationEventTypeArrayOutput)
}

// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
//
//	The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
type DataRepositoryAssociationAutoImportPolicy struct {
	// The ``AutoImportPolicy`` can have the following event values:
	//   +   ``NEW`` - Amazon FSx automatically imports metadata of files added to the linked S3 bucket that do not currently exist in the FSx file system.
	//   +   ``CHANGED`` - Amazon FSx automatically updates file metadata and invalidates existing file content on the file system as files change in the data repository.
	//   +   ``DELETED`` - Amazon FSx automatically deletes files on the file system as corresponding files are deleted in the data repository.
	//
	//  You can define any combination of event types for your ``AutoImportPolicy``.
	Events []DataRepositoryAssociationEventType `pulumi:"events"`
}

// DataRepositoryAssociationAutoImportPolicyInput is an input type that accepts DataRepositoryAssociationAutoImportPolicyArgs and DataRepositoryAssociationAutoImportPolicyOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationAutoImportPolicyInput` via:
//
//	DataRepositoryAssociationAutoImportPolicyArgs{...}
type DataRepositoryAssociationAutoImportPolicyInput interface {
	pulumi.Input

	ToDataRepositoryAssociationAutoImportPolicyOutput() DataRepositoryAssociationAutoImportPolicyOutput
	ToDataRepositoryAssociationAutoImportPolicyOutputWithContext(context.Context) DataRepositoryAssociationAutoImportPolicyOutput
}

// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
//
//	The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
type DataRepositoryAssociationAutoImportPolicyArgs struct {
	// The ``AutoImportPolicy`` can have the following event values:
	//   +   ``NEW`` - Amazon FSx automatically imports metadata of files added to the linked S3 bucket that do not currently exist in the FSx file system.
	//   +   ``CHANGED`` - Amazon FSx automatically updates file metadata and invalidates existing file content on the file system as files change in the data repository.
	//   +   ``DELETED`` - Amazon FSx automatically deletes files on the file system as corresponding files are deleted in the data repository.
	//
	//  You can define any combination of event types for your ``AutoImportPolicy``.
	Events DataRepositoryAssociationEventTypeArrayInput `pulumi:"events"`
}

func (DataRepositoryAssociationAutoImportPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationAutoImportPolicy)(nil)).Elem()
}

func (i DataRepositoryAssociationAutoImportPolicyArgs) ToDataRepositoryAssociationAutoImportPolicyOutput() DataRepositoryAssociationAutoImportPolicyOutput {
	return i.ToDataRepositoryAssociationAutoImportPolicyOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationAutoImportPolicyArgs) ToDataRepositoryAssociationAutoImportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoImportPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationAutoImportPolicyOutput)
}

func (i DataRepositoryAssociationAutoImportPolicyArgs) ToDataRepositoryAssociationAutoImportPolicyPtrOutput() DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationAutoImportPolicyArgs) ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationAutoImportPolicyOutput).ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(ctx)
}

// DataRepositoryAssociationAutoImportPolicyPtrInput is an input type that accepts DataRepositoryAssociationAutoImportPolicyArgs, DataRepositoryAssociationAutoImportPolicyPtr and DataRepositoryAssociationAutoImportPolicyPtrOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationAutoImportPolicyPtrInput` via:
//
//	        DataRepositoryAssociationAutoImportPolicyArgs{...}
//
//	or:
//
//	        nil
type DataRepositoryAssociationAutoImportPolicyPtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationAutoImportPolicyPtrOutput() DataRepositoryAssociationAutoImportPolicyPtrOutput
	ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(context.Context) DataRepositoryAssociationAutoImportPolicyPtrOutput
}

type dataRepositoryAssociationAutoImportPolicyPtrType DataRepositoryAssociationAutoImportPolicyArgs

func DataRepositoryAssociationAutoImportPolicyPtr(v *DataRepositoryAssociationAutoImportPolicyArgs) DataRepositoryAssociationAutoImportPolicyPtrInput {
	return (*dataRepositoryAssociationAutoImportPolicyPtrType)(v)
}

func (*dataRepositoryAssociationAutoImportPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationAutoImportPolicy)(nil)).Elem()
}

func (i *dataRepositoryAssociationAutoImportPolicyPtrType) ToDataRepositoryAssociationAutoImportPolicyPtrOutput() DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(context.Background())
}

func (i *dataRepositoryAssociationAutoImportPolicyPtrType) ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationAutoImportPolicyPtrOutput)
}

// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
//
//	The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
type DataRepositoryAssociationAutoImportPolicyOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationAutoImportPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationAutoImportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationAutoImportPolicyOutput) ToDataRepositoryAssociationAutoImportPolicyOutput() DataRepositoryAssociationAutoImportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationAutoImportPolicyOutput) ToDataRepositoryAssociationAutoImportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoImportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationAutoImportPolicyOutput) ToDataRepositoryAssociationAutoImportPolicyPtrOutput() DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return o.ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationAutoImportPolicyOutput) ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationAutoImportPolicy) *DataRepositoryAssociationAutoImportPolicy {
		return &v
	}).(DataRepositoryAssociationAutoImportPolicyPtrOutput)
}

// The “AutoImportPolicy“ can have the following event values:
//
//   - “NEW“ - Amazon FSx automatically imports metadata of files added to the linked S3 bucket that do not currently exist in the FSx file system.
//
//   - “CHANGED“ - Amazon FSx automatically updates file metadata and invalidates existing file content on the file system as files change in the data repository.
//
//   - “DELETED“ - Amazon FSx automatically deletes files on the file system as corresponding files are deleted in the data repository.
//
//     You can define any combination of event types for your “AutoImportPolicy“.
func (o DataRepositoryAssociationAutoImportPolicyOutput) Events() DataRepositoryAssociationEventTypeArrayOutput {
	return o.ApplyT(func(v DataRepositoryAssociationAutoImportPolicy) []DataRepositoryAssociationEventType {
		return v.Events
	}).(DataRepositoryAssociationEventTypeArrayOutput)
}

type DataRepositoryAssociationAutoImportPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationAutoImportPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationAutoImportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationAutoImportPolicyPtrOutput) ToDataRepositoryAssociationAutoImportPolicyPtrOutput() DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationAutoImportPolicyPtrOutput) ToDataRepositoryAssociationAutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationAutoImportPolicyPtrOutput) Elem() DataRepositoryAssociationAutoImportPolicyOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationAutoImportPolicy) DataRepositoryAssociationAutoImportPolicy {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationAutoImportPolicy
		return ret
	}).(DataRepositoryAssociationAutoImportPolicyOutput)
}

// The “AutoImportPolicy“ can have the following event values:
//
//   - “NEW“ - Amazon FSx automatically imports metadata of files added to the linked S3 bucket that do not currently exist in the FSx file system.
//
//   - “CHANGED“ - Amazon FSx automatically updates file metadata and invalidates existing file content on the file system as files change in the data repository.
//
//   - “DELETED“ - Amazon FSx automatically deletes files on the file system as corresponding files are deleted in the data repository.
//
//     You can define any combination of event types for your “AutoImportPolicy“.
func (o DataRepositoryAssociationAutoImportPolicyPtrOutput) Events() DataRepositoryAssociationEventTypeArrayOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationAutoImportPolicy) []DataRepositoryAssociationEventType {
		if v == nil {
			return nil
		}
		return v.Events
	}).(DataRepositoryAssociationEventTypeArrayOutput)
}

// The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository.
type DataRepositoryAssociationS3 struct {
	// Describes a data repository association's automatic export policy. The ``AutoExportPolicy`` defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
	//  The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
	AutoExportPolicy *DataRepositoryAssociationAutoExportPolicy `pulumi:"autoExportPolicy"`
	// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
	//  The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
	AutoImportPolicy *DataRepositoryAssociationAutoImportPolicy `pulumi:"autoImportPolicy"`
}

// DataRepositoryAssociationS3Input is an input type that accepts DataRepositoryAssociationS3Args and DataRepositoryAssociationS3Output values.
// You can construct a concrete instance of `DataRepositoryAssociationS3Input` via:
//
//	DataRepositoryAssociationS3Args{...}
type DataRepositoryAssociationS3Input interface {
	pulumi.Input

	ToDataRepositoryAssociationS3Output() DataRepositoryAssociationS3Output
	ToDataRepositoryAssociationS3OutputWithContext(context.Context) DataRepositoryAssociationS3Output
}

// The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository.
type DataRepositoryAssociationS3Args struct {
	// Describes a data repository association's automatic export policy. The ``AutoExportPolicy`` defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
	//  The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
	AutoExportPolicy DataRepositoryAssociationAutoExportPolicyPtrInput `pulumi:"autoExportPolicy"`
	// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
	//  The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
	AutoImportPolicy DataRepositoryAssociationAutoImportPolicyPtrInput `pulumi:"autoImportPolicy"`
}

func (DataRepositoryAssociationS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3)(nil)).Elem()
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3Output() DataRepositoryAssociationS3Output {
	return i.ToDataRepositoryAssociationS3OutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3OutputWithContext(ctx context.Context) DataRepositoryAssociationS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3Output)
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return i.ToDataRepositoryAssociationS3PtrOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3Output).ToDataRepositoryAssociationS3PtrOutputWithContext(ctx)
}

// DataRepositoryAssociationS3PtrInput is an input type that accepts DataRepositoryAssociationS3Args, DataRepositoryAssociationS3Ptr and DataRepositoryAssociationS3PtrOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationS3PtrInput` via:
//
//	        DataRepositoryAssociationS3Args{...}
//
//	or:
//
//	        nil
type DataRepositoryAssociationS3PtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput
	ToDataRepositoryAssociationS3PtrOutputWithContext(context.Context) DataRepositoryAssociationS3PtrOutput
}

type dataRepositoryAssociationS3PtrType DataRepositoryAssociationS3Args

func DataRepositoryAssociationS3Ptr(v *DataRepositoryAssociationS3Args) DataRepositoryAssociationS3PtrInput {
	return (*dataRepositoryAssociationS3PtrType)(v)
}

func (*dataRepositoryAssociationS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3)(nil)).Elem()
}

func (i *dataRepositoryAssociationS3PtrType) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return i.ToDataRepositoryAssociationS3PtrOutputWithContext(context.Background())
}

func (i *dataRepositoryAssociationS3PtrType) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3PtrOutput)
}

// The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository.
type DataRepositoryAssociationS3Output struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3)(nil)).Elem()
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3Output() DataRepositoryAssociationS3Output {
	return o
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3OutputWithContext(ctx context.Context) DataRepositoryAssociationS3Output {
	return o
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return o.ToDataRepositoryAssociationS3PtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationS3) *DataRepositoryAssociationS3 {
		return &v
	}).(DataRepositoryAssociationS3PtrOutput)
}

// Describes a data repository association's automatic export policy. The “AutoExportPolicy“ defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
//
//	The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
func (o DataRepositoryAssociationS3Output) AutoExportPolicy() DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return o.ApplyT(func(v DataRepositoryAssociationS3) *DataRepositoryAssociationAutoExportPolicy {
		return v.AutoExportPolicy
	}).(DataRepositoryAssociationAutoExportPolicyPtrOutput)
}

// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
//
//	The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
func (o DataRepositoryAssociationS3Output) AutoImportPolicy() DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return o.ApplyT(func(v DataRepositoryAssociationS3) *DataRepositoryAssociationAutoImportPolicy {
		return v.AutoImportPolicy
	}).(DataRepositoryAssociationAutoImportPolicyPtrOutput)
}

type DataRepositoryAssociationS3PtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3)(nil)).Elem()
}

func (o DataRepositoryAssociationS3PtrOutput) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return o
}

func (o DataRepositoryAssociationS3PtrOutput) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return o
}

func (o DataRepositoryAssociationS3PtrOutput) Elem() DataRepositoryAssociationS3Output {
	return o.ApplyT(func(v *DataRepositoryAssociationS3) DataRepositoryAssociationS3 {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationS3
		return ret
	}).(DataRepositoryAssociationS3Output)
}

// Describes a data repository association's automatic export policy. The “AutoExportPolicy“ defines the types of updated objects on the file system that will be automatically exported to the data repository. As you create, modify, or delete files, Amazon FSx for Lustre automatically exports the defined changes asynchronously once your application finishes modifying the file.
//
//	The ``AutoExportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
func (o DataRepositoryAssociationS3PtrOutput) AutoExportPolicy() DataRepositoryAssociationAutoExportPolicyPtrOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3) *DataRepositoryAssociationAutoExportPolicy {
		if v == nil {
			return nil
		}
		return v.AutoExportPolicy
	}).(DataRepositoryAssociationAutoExportPolicyPtrOutput)
}

// Describes the data repository association's automatic import policy. The AutoImportPolicy defines how Amazon FSx keeps your file metadata and directory listings up to date by importing changes to your Amazon FSx for Lustre file system as you modify objects in a linked S3 bucket.
//
//	The ``AutoImportPolicy`` is only supported on Amazon FSx for Lustre file systems with a data repository association.
func (o DataRepositoryAssociationS3PtrOutput) AutoImportPolicy() DataRepositoryAssociationAutoImportPolicyPtrOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3) *DataRepositoryAssociationAutoImportPolicy {
		if v == nil {
			return nil
		}
		return v.AutoImportPolicy
	}).(DataRepositoryAssociationAutoImportPolicyPtrOutput)
}

// Specifies a key-value pair for a resource tag.
type DataRepositoryAssociationTag struct {
	// A value that specifies the ``TagKey``, the name of the tag. Tag keys must be unique for the resource to which they are attached.
	Key string `pulumi:"key"`
	// A value that specifies the ``TagValue``, the value assigned to the corresponding tag key. Tag values can be null and don't have to be unique in a tag set. For example, you can have a key-value pair in a tag set of ``finances : April`` and also of ``payroll : April``.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationAutoExportPolicyInput)(nil)).Elem(), DataRepositoryAssociationAutoExportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationAutoExportPolicyPtrInput)(nil)).Elem(), DataRepositoryAssociationAutoExportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationAutoImportPolicyInput)(nil)).Elem(), DataRepositoryAssociationAutoImportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationAutoImportPolicyPtrInput)(nil)).Elem(), DataRepositoryAssociationAutoImportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3Input)(nil)).Elem(), DataRepositoryAssociationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3PtrInput)(nil)).Elem(), DataRepositoryAssociationS3Args{})
	pulumi.RegisterOutputType(DataRepositoryAssociationAutoExportPolicyOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationAutoExportPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationAutoImportPolicyOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationAutoImportPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3Output{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3PtrOutput{})
}
