// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::FSx::StorageVirtualMachine
//
// Deprecated: StorageVirtualMachine is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type StorageVirtualMachine struct {
	pulumi.CustomResourceState

	ActiveDirectoryConfiguration StorageVirtualMachineActiveDirectoryConfigurationPtrOutput `pulumi:"activeDirectoryConfiguration"`
	FileSystemId                 pulumi.StringOutput                                        `pulumi:"fileSystemId"`
	Name                         pulumi.StringOutput                                        `pulumi:"name"`
	ResourceARN                  pulumi.StringOutput                                        `pulumi:"resourceARN"`
	RootVolumeSecurityStyle      pulumi.StringPtrOutput                                     `pulumi:"rootVolumeSecurityStyle"`
	StorageVirtualMachineId      pulumi.StringOutput                                        `pulumi:"storageVirtualMachineId"`
	SvmAdminPassword             pulumi.StringPtrOutput                                     `pulumi:"svmAdminPassword"`
	Tags                         StorageVirtualMachineTagArrayOutput                        `pulumi:"tags"`
	UUID                         pulumi.StringOutput                                        `pulumi:"uUID"`
}

// NewStorageVirtualMachine registers a new resource with the given unique name, arguments, and options.
func NewStorageVirtualMachine(ctx *pulumi.Context,
	name string, args *StorageVirtualMachineArgs, opts ...pulumi.ResourceOption) (*StorageVirtualMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemId'")
	}
	var resource StorageVirtualMachine
	err := ctx.RegisterResource("aws-native:fsx:StorageVirtualMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageVirtualMachine gets an existing StorageVirtualMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageVirtualMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageVirtualMachineState, opts ...pulumi.ResourceOption) (*StorageVirtualMachine, error) {
	var resource StorageVirtualMachine
	err := ctx.ReadResource("aws-native:fsx:StorageVirtualMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageVirtualMachine resources.
type storageVirtualMachineState struct {
}

type StorageVirtualMachineState struct {
}

func (StorageVirtualMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageVirtualMachineState)(nil)).Elem()
}

type storageVirtualMachineArgs struct {
	ActiveDirectoryConfiguration *StorageVirtualMachineActiveDirectoryConfiguration `pulumi:"activeDirectoryConfiguration"`
	FileSystemId                 string                                             `pulumi:"fileSystemId"`
	Name                         *string                                            `pulumi:"name"`
	RootVolumeSecurityStyle      *string                                            `pulumi:"rootVolumeSecurityStyle"`
	SvmAdminPassword             *string                                            `pulumi:"svmAdminPassword"`
	Tags                         []StorageVirtualMachineTag                         `pulumi:"tags"`
}

// The set of arguments for constructing a StorageVirtualMachine resource.
type StorageVirtualMachineArgs struct {
	ActiveDirectoryConfiguration StorageVirtualMachineActiveDirectoryConfigurationPtrInput
	FileSystemId                 pulumi.StringInput
	Name                         pulumi.StringPtrInput
	RootVolumeSecurityStyle      pulumi.StringPtrInput
	SvmAdminPassword             pulumi.StringPtrInput
	Tags                         StorageVirtualMachineTagArrayInput
}

func (StorageVirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageVirtualMachineArgs)(nil)).Elem()
}

type StorageVirtualMachineInput interface {
	pulumi.Input

	ToStorageVirtualMachineOutput() StorageVirtualMachineOutput
	ToStorageVirtualMachineOutputWithContext(ctx context.Context) StorageVirtualMachineOutput
}

func (*StorageVirtualMachine) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageVirtualMachine)(nil)).Elem()
}

func (i *StorageVirtualMachine) ToStorageVirtualMachineOutput() StorageVirtualMachineOutput {
	return i.ToStorageVirtualMachineOutputWithContext(context.Background())
}

func (i *StorageVirtualMachine) ToStorageVirtualMachineOutputWithContext(ctx context.Context) StorageVirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageVirtualMachineOutput)
}

type StorageVirtualMachineOutput struct{ *pulumi.OutputState }

func (StorageVirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageVirtualMachine)(nil)).Elem()
}

func (o StorageVirtualMachineOutput) ToStorageVirtualMachineOutput() StorageVirtualMachineOutput {
	return o
}

func (o StorageVirtualMachineOutput) ToStorageVirtualMachineOutputWithContext(ctx context.Context) StorageVirtualMachineOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageVirtualMachineInput)(nil)).Elem(), &StorageVirtualMachine{})
	pulumi.RegisterOutputType(StorageVirtualMachineOutput{})
}
