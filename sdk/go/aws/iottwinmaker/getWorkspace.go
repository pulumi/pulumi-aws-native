// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iottwinmaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::IoTTwinMaker::Workspace
func LookupWorkspace(ctx *pulumi.Context, args *LookupWorkspaceArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceResult, error) {
	var rv LookupWorkspaceResult
	err := ctx.Invoke("aws-native:iottwinmaker:getWorkspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkspaceArgs struct {
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

type LookupWorkspaceResult struct {
	// The ARN of the workspace.
	Arn *string `pulumi:"arn"`
	// The date and time when the workspace was created.
	CreationDateTime *string `pulumi:"creationDateTime"`
	// The description of the workspace.
	Description *string `pulumi:"description"`
	// The ARN of the execution role associated with the workspace.
	Role *string `pulumi:"role"`
	// The ARN of the S3 bucket where resources associated with the workspace are stored.
	S3Location *string `pulumi:"s3Location"`
	// A map of key-value pairs to associate with a resource.
	Tags interface{} `pulumi:"tags"`
	// The date and time of the current update.
	UpdateDateTime *string `pulumi:"updateDateTime"`
}

func LookupWorkspaceOutput(ctx *pulumi.Context, args LookupWorkspaceOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceResult, error) {
			args := v.(LookupWorkspaceArgs)
			r, err := LookupWorkspace(ctx, &args, opts...)
			var s LookupWorkspaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceResultOutput)
}

type LookupWorkspaceOutputArgs struct {
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceArgs)(nil)).Elem()
}

type LookupWorkspaceResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceResult)(nil)).Elem()
}

func (o LookupWorkspaceResultOutput) ToLookupWorkspaceResultOutput() LookupWorkspaceResultOutput {
	return o
}

func (o LookupWorkspaceResultOutput) ToLookupWorkspaceResultOutputWithContext(ctx context.Context) LookupWorkspaceResultOutput {
	return o
}

// The ARN of the workspace.
func (o LookupWorkspaceResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The date and time when the workspace was created.
func (o LookupWorkspaceResultOutput) CreationDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.CreationDateTime }).(pulumi.StringPtrOutput)
}

// The description of the workspace.
func (o LookupWorkspaceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ARN of the execution role associated with the workspace.
func (o LookupWorkspaceResultOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The ARN of the S3 bucket where resources associated with the workspace are stored.
func (o LookupWorkspaceResultOutput) S3Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.S3Location }).(pulumi.StringPtrOutput)
}

// A map of key-value pairs to associate with a resource.
func (o LookupWorkspaceResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

// The date and time of the current update.
func (o LookupWorkspaceResultOutput) UpdateDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceResult) *string { return v.UpdateDateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceResultOutput{})
}
