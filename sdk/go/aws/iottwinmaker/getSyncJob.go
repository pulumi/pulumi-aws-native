// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iottwinmaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::IoTTwinMaker::SyncJob
func LookupSyncJob(ctx *pulumi.Context, args *LookupSyncJobArgs, opts ...pulumi.InvokeOption) (*LookupSyncJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSyncJobResult
	err := ctx.Invoke("aws-native:iottwinmaker:getSyncJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSyncJobArgs struct {
	// The source of the SyncJob.
	SyncSource string `pulumi:"syncSource"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

type LookupSyncJobResult struct {
	// The ARN of the SyncJob.
	Arn *string `pulumi:"arn"`
	// The date and time when the sync job was created.
	CreationDateTime *string `pulumi:"creationDateTime"`
	// The state of SyncJob.
	State *string `pulumi:"state"`
	// The date and time when the sync job was updated.
	UpdateDateTime *string `pulumi:"updateDateTime"`
}

func LookupSyncJobOutput(ctx *pulumi.Context, args LookupSyncJobOutputArgs, opts ...pulumi.InvokeOption) LookupSyncJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSyncJobResult, error) {
			args := v.(LookupSyncJobArgs)
			r, err := LookupSyncJob(ctx, &args, opts...)
			var s LookupSyncJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSyncJobResultOutput)
}

type LookupSyncJobOutputArgs struct {
	// The source of the SyncJob.
	SyncSource pulumi.StringInput `pulumi:"syncSource"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupSyncJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSyncJobArgs)(nil)).Elem()
}

type LookupSyncJobResultOutput struct{ *pulumi.OutputState }

func (LookupSyncJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSyncJobResult)(nil)).Elem()
}

func (o LookupSyncJobResultOutput) ToLookupSyncJobResultOutput() LookupSyncJobResultOutput {
	return o
}

func (o LookupSyncJobResultOutput) ToLookupSyncJobResultOutputWithContext(ctx context.Context) LookupSyncJobResultOutput {
	return o
}

// The ARN of the SyncJob.
func (o LookupSyncJobResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncJobResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The date and time when the sync job was created.
func (o LookupSyncJobResultOutput) CreationDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncJobResult) *string { return v.CreationDateTime }).(pulumi.StringPtrOutput)
}

// The state of SyncJob.
func (o LookupSyncJobResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncJobResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time when the sync job was updated.
func (o LookupSyncJobResultOutput) UpdateDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyncJobResult) *string { return v.UpdateDateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSyncJobResultOutput{})
}
