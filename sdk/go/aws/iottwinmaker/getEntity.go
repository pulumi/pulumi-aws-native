// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iottwinmaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::IoTTwinMaker::Entity
func LookupEntity(ctx *pulumi.Context, args *LookupEntityArgs, opts ...pulumi.InvokeOption) (*LookupEntityResult, error) {
	var rv LookupEntityResult
	err := ctx.Invoke("aws-native:iottwinmaker:getEntity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEntityArgs struct {
	// The ID of the entity.
	EntityId string `pulumi:"entityId"`
	// The ID of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

type LookupEntityResult struct {
	// The ARN of the entity.
	Arn *string `pulumi:"arn"`
	// A map that sets information about a component type.
	Components interface{} `pulumi:"components"`
	// The date and time when the entity was created.
	CreationDateTime *string `pulumi:"creationDateTime"`
	// The description of the entity.
	Description *string `pulumi:"description"`
	// The name of the entity.
	EntityName *string `pulumi:"entityName"`
	// A Boolean value that specifies whether the entity has child entities or not.
	HasChildEntities *bool `pulumi:"hasChildEntities"`
	// The ID of the parent entity.
	ParentEntityId *string `pulumi:"parentEntityId"`
	// The current status of the entity.
	Status *EntityStatus `pulumi:"status"`
	// A key-value pair to associate with a resource.
	Tags interface{} `pulumi:"tags"`
	// The last date and time when the entity was updated.
	UpdateDateTime *string `pulumi:"updateDateTime"`
}

func LookupEntityOutput(ctx *pulumi.Context, args LookupEntityOutputArgs, opts ...pulumi.InvokeOption) LookupEntityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEntityResult, error) {
			args := v.(LookupEntityArgs)
			r, err := LookupEntity(ctx, &args, opts...)
			var s LookupEntityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEntityResultOutput)
}

type LookupEntityOutputArgs struct {
	// The ID of the entity.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// The ID of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupEntityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntityArgs)(nil)).Elem()
}

type LookupEntityResultOutput struct{ *pulumi.OutputState }

func (LookupEntityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntityResult)(nil)).Elem()
}

func (o LookupEntityResultOutput) ToLookupEntityResultOutput() LookupEntityResultOutput {
	return o
}

func (o LookupEntityResultOutput) ToLookupEntityResultOutputWithContext(ctx context.Context) LookupEntityResultOutput {
	return o
}

// The ARN of the entity.
func (o LookupEntityResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// A map that sets information about a component type.
func (o LookupEntityResultOutput) Components() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupEntityResult) interface{} { return v.Components }).(pulumi.AnyOutput)
}

// The date and time when the entity was created.
func (o LookupEntityResultOutput) CreationDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *string { return v.CreationDateTime }).(pulumi.StringPtrOutput)
}

// The description of the entity.
func (o LookupEntityResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the entity.
func (o LookupEntityResultOutput) EntityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *string { return v.EntityName }).(pulumi.StringPtrOutput)
}

// A Boolean value that specifies whether the entity has child entities or not.
func (o LookupEntityResultOutput) HasChildEntities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *bool { return v.HasChildEntities }).(pulumi.BoolPtrOutput)
}

// The ID of the parent entity.
func (o LookupEntityResultOutput) ParentEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *string { return v.ParentEntityId }).(pulumi.StringPtrOutput)
}

// The current status of the entity.
func (o LookupEntityResultOutput) Status() EntityStatusPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *EntityStatus { return v.Status }).(EntityStatusPtrOutput)
}

// A key-value pair to associate with a resource.
func (o LookupEntityResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupEntityResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

// The last date and time when the entity was updated.
func (o LookupEntityResultOutput) UpdateDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntityResult) *string { return v.UpdateDateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntityResultOutput{})
}
