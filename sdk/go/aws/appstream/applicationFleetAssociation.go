// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::ApplicationFleetAssociation
type ApplicationFleetAssociation struct {
	pulumi.CustomResourceState

	ApplicationArn pulumi.StringOutput `pulumi:"applicationArn"`
	FleetName      pulumi.StringOutput `pulumi:"fleetName"`
}

// NewApplicationFleetAssociation registers a new resource with the given unique name, arguments, and options.
func NewApplicationFleetAssociation(ctx *pulumi.Context,
	name string, args *ApplicationFleetAssociationArgs, opts ...pulumi.ResourceOption) (*ApplicationFleetAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationArn == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationArn'")
	}
	if args.FleetName == nil {
		return nil, errors.New("invalid value for required argument 'FleetName'")
	}
	var resource ApplicationFleetAssociation
	err := ctx.RegisterResource("aws-native:appstream:ApplicationFleetAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationFleetAssociation gets an existing ApplicationFleetAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationFleetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationFleetAssociationState, opts ...pulumi.ResourceOption) (*ApplicationFleetAssociation, error) {
	var resource ApplicationFleetAssociation
	err := ctx.ReadResource("aws-native:appstream:ApplicationFleetAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationFleetAssociation resources.
type applicationFleetAssociationState struct {
}

type ApplicationFleetAssociationState struct {
}

func (ApplicationFleetAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationFleetAssociationState)(nil)).Elem()
}

type applicationFleetAssociationArgs struct {
	ApplicationArn string `pulumi:"applicationArn"`
	FleetName      string `pulumi:"fleetName"`
}

// The set of arguments for constructing a ApplicationFleetAssociation resource.
type ApplicationFleetAssociationArgs struct {
	ApplicationArn pulumi.StringInput
	FleetName      pulumi.StringInput
}

func (ApplicationFleetAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationFleetAssociationArgs)(nil)).Elem()
}

type ApplicationFleetAssociationInput interface {
	pulumi.Input

	ToApplicationFleetAssociationOutput() ApplicationFleetAssociationOutput
	ToApplicationFleetAssociationOutputWithContext(ctx context.Context) ApplicationFleetAssociationOutput
}

func (*ApplicationFleetAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationFleetAssociation)(nil))
}

func (i *ApplicationFleetAssociation) ToApplicationFleetAssociationOutput() ApplicationFleetAssociationOutput {
	return i.ToApplicationFleetAssociationOutputWithContext(context.Background())
}

func (i *ApplicationFleetAssociation) ToApplicationFleetAssociationOutputWithContext(ctx context.Context) ApplicationFleetAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationFleetAssociationOutput)
}

type ApplicationFleetAssociationOutput struct{ *pulumi.OutputState }

func (ApplicationFleetAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationFleetAssociation)(nil))
}

func (o ApplicationFleetAssociationOutput) ToApplicationFleetAssociationOutput() ApplicationFleetAssociationOutput {
	return o
}

func (o ApplicationFleetAssociationOutput) ToApplicationFleetAssociationOutputWithContext(ctx context.Context) ApplicationFleetAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationFleetAssociationInput)(nil)).Elem(), &ApplicationFleetAssociation{})
	pulumi.RegisterOutputType(ApplicationFleetAssociationOutput{})
}
