// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::Application
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationResult
	err := ctx.Invoke("aws-native:appstream:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationArgs struct {
	// The ARN of the application.
	Arn string `pulumi:"arn"`
}

type LookupApplicationResult struct {
	// The app block ARN with which the application should be associated.
	AppBlockArn *string `pulumi:"appBlockArn"`
	// The ARN of the application.
	Arn *string `pulumi:"arn"`
	// The time when the application was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The description of the application.
	Description *string `pulumi:"description"`
	// The display name of the application. This name is visible to users in the application catalog.
	DisplayName *string `pulumi:"displayName"`
	// The S3 location of the application icon.
	IconS3Location *ApplicationS3Location `pulumi:"iconS3Location"`
	// The launch parameters of the application.
	LaunchParameters *string `pulumi:"launchParameters"`
	// The launch path of the application.
	LaunchPath *string `pulumi:"launchPath"`
	// The working directory of the application.
	WorkingDirectory *string `pulumi:"workingDirectory"`
}

func LookupApplicationOutput(ctx *pulumi.Context, args LookupApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationResult, error) {
			args := v.(LookupApplicationArgs)
			r, err := LookupApplication(ctx, &args, opts...)
			var s LookupApplicationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApplicationResultOutput)
}

type LookupApplicationOutputArgs struct {
	// The ARN of the application.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationArgs)(nil)).Elem()
}

type LookupApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationResult)(nil)).Elem()
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutput() LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutputWithContext(ctx context.Context) LookupApplicationResultOutput {
	return o
}

// The app block ARN with which the application should be associated.
func (o LookupApplicationResultOutput) AppBlockArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.AppBlockArn }).(pulumi.StringPtrOutput)
}

// The ARN of the application.
func (o LookupApplicationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The time when the application was created.
func (o LookupApplicationResultOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The description of the application.
func (o LookupApplicationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the application. This name is visible to users in the application catalog.
func (o LookupApplicationResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The S3 location of the application icon.
func (o LookupApplicationResultOutput) IconS3Location() ApplicationS3LocationPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *ApplicationS3Location { return v.IconS3Location }).(ApplicationS3LocationPtrOutput)
}

// The launch parameters of the application.
func (o LookupApplicationResultOutput) LaunchParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.LaunchParameters }).(pulumi.StringPtrOutput)
}

// The launch path of the application.
func (o LookupApplicationResultOutput) LaunchPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.LaunchPath }).(pulumi.StringPtrOutput)
}

// The working directory of the application.
func (o LookupApplicationResultOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationResultOutput{})
}
