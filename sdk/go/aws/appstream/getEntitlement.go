// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::Entitlement
func LookupEntitlement(ctx *pulumi.Context, args *LookupEntitlementArgs, opts ...pulumi.InvokeOption) (*LookupEntitlementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEntitlementResult
	err := ctx.Invoke("aws-native:appstream:getEntitlement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEntitlementArgs struct {
	// The name of the entitlement.
	Name string `pulumi:"name"`
	// The name of the stack.
	StackName string `pulumi:"stackName"`
}

type LookupEntitlementResult struct {
	// Specifies whether to entitle all apps or only selected apps.
	AppVisibility *string `pulumi:"appVisibility"`
	// An attribute that belongs to an entitlement. Application entitlements work by matching a supported SAML 2.0 attribute name to a value when a user identity federates to an AppStream 2.0 SAML application.
	Attributes []EntitlementAttribute `pulumi:"attributes"`
	// The time when the entitlement was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The description of the entitlement.
	Description *string `pulumi:"description"`
	// The time when the entitlement was last modified.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
}

func LookupEntitlementOutput(ctx *pulumi.Context, args LookupEntitlementOutputArgs, opts ...pulumi.InvokeOption) LookupEntitlementResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEntitlementResult, error) {
			args := v.(LookupEntitlementArgs)
			r, err := LookupEntitlement(ctx, &args, opts...)
			var s LookupEntitlementResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEntitlementResultOutput)
}

type LookupEntitlementOutputArgs struct {
	// The name of the entitlement.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the stack.
	StackName pulumi.StringInput `pulumi:"stackName"`
}

func (LookupEntitlementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntitlementArgs)(nil)).Elem()
}

type LookupEntitlementResultOutput struct{ *pulumi.OutputState }

func (LookupEntitlementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntitlementResult)(nil)).Elem()
}

func (o LookupEntitlementResultOutput) ToLookupEntitlementResultOutput() LookupEntitlementResultOutput {
	return o
}

func (o LookupEntitlementResultOutput) ToLookupEntitlementResultOutputWithContext(ctx context.Context) LookupEntitlementResultOutput {
	return o
}

// Specifies whether to entitle all apps or only selected apps.
func (o LookupEntitlementResultOutput) AppVisibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntitlementResult) *string { return v.AppVisibility }).(pulumi.StringPtrOutput)
}

// An attribute that belongs to an entitlement. Application entitlements work by matching a supported SAML 2.0 attribute name to a value when a user identity federates to an AppStream 2.0 SAML application.
func (o LookupEntitlementResultOutput) Attributes() EntitlementAttributeArrayOutput {
	return o.ApplyT(func(v LookupEntitlementResult) []EntitlementAttribute { return v.Attributes }).(EntitlementAttributeArrayOutput)
}

// The time when the entitlement was created.
func (o LookupEntitlementResultOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntitlementResult) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The description of the entitlement.
func (o LookupEntitlementResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntitlementResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The time when the entitlement was last modified.
func (o LookupEntitlementResultOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEntitlementResult) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntitlementResultOutput{})
}
