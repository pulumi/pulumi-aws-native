// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::ImageBuilder
//
// Deprecated: ImageBuilder is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ImageBuilder struct {
	pulumi.CustomResourceState

	AccessEndpoints             ImageBuilderAccessEndpointArrayOutput `pulumi:"accessEndpoints"`
	AppstreamAgentVersion       pulumi.StringPtrOutput                `pulumi:"appstreamAgentVersion"`
	Description                 pulumi.StringPtrOutput                `pulumi:"description"`
	DisplayName                 pulumi.StringPtrOutput                `pulumi:"displayName"`
	DomainJoinInfo              ImageBuilderDomainJoinInfoPtrOutput   `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess pulumi.BoolPtrOutput                  `pulumi:"enableDefaultInternetAccess"`
	IamRoleArn                  pulumi.StringPtrOutput                `pulumi:"iamRoleArn"`
	ImageArn                    pulumi.StringPtrOutput                `pulumi:"imageArn"`
	ImageName                   pulumi.StringPtrOutput                `pulumi:"imageName"`
	InstanceType                pulumi.StringOutput                   `pulumi:"instanceType"`
	Name                        pulumi.StringOutput                   `pulumi:"name"`
	StreamingUrl                pulumi.StringOutput                   `pulumi:"streamingUrl"`
	Tags                        ImageBuilderTagArrayOutput            `pulumi:"tags"`
	VpcConfig                   ImageBuilderVpcConfigPtrOutput        `pulumi:"vpcConfig"`
}

// NewImageBuilder registers a new resource with the given unique name, arguments, and options.
func NewImageBuilder(ctx *pulumi.Context,
	name string, args *ImageBuilderArgs, opts ...pulumi.ResourceOption) (*ImageBuilder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	var resource ImageBuilder
	err := ctx.RegisterResource("aws-native:appstream:ImageBuilder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageBuilder gets an existing ImageBuilder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageBuilder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageBuilderState, opts ...pulumi.ResourceOption) (*ImageBuilder, error) {
	var resource ImageBuilder
	err := ctx.ReadResource("aws-native:appstream:ImageBuilder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageBuilder resources.
type imageBuilderState struct {
}

type ImageBuilderState struct {
}

func (ImageBuilderState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageBuilderState)(nil)).Elem()
}

type imageBuilderArgs struct {
	AccessEndpoints             []ImageBuilderAccessEndpoint `pulumi:"accessEndpoints"`
	AppstreamAgentVersion       *string                      `pulumi:"appstreamAgentVersion"`
	Description                 *string                      `pulumi:"description"`
	DisplayName                 *string                      `pulumi:"displayName"`
	DomainJoinInfo              *ImageBuilderDomainJoinInfo  `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess *bool                        `pulumi:"enableDefaultInternetAccess"`
	IamRoleArn                  *string                      `pulumi:"iamRoleArn"`
	ImageArn                    *string                      `pulumi:"imageArn"`
	ImageName                   *string                      `pulumi:"imageName"`
	InstanceType                string                       `pulumi:"instanceType"`
	Name                        *string                      `pulumi:"name"`
	Tags                        []ImageBuilderTag            `pulumi:"tags"`
	VpcConfig                   *ImageBuilderVpcConfig       `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a ImageBuilder resource.
type ImageBuilderArgs struct {
	AccessEndpoints             ImageBuilderAccessEndpointArrayInput
	AppstreamAgentVersion       pulumi.StringPtrInput
	Description                 pulumi.StringPtrInput
	DisplayName                 pulumi.StringPtrInput
	DomainJoinInfo              ImageBuilderDomainJoinInfoPtrInput
	EnableDefaultInternetAccess pulumi.BoolPtrInput
	IamRoleArn                  pulumi.StringPtrInput
	ImageArn                    pulumi.StringPtrInput
	ImageName                   pulumi.StringPtrInput
	InstanceType                pulumi.StringInput
	Name                        pulumi.StringPtrInput
	Tags                        ImageBuilderTagArrayInput
	VpcConfig                   ImageBuilderVpcConfigPtrInput
}

func (ImageBuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageBuilderArgs)(nil)).Elem()
}

type ImageBuilderInput interface {
	pulumi.Input

	ToImageBuilderOutput() ImageBuilderOutput
	ToImageBuilderOutputWithContext(ctx context.Context) ImageBuilderOutput
}

func (*ImageBuilder) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilder)(nil))
}

func (i *ImageBuilder) ToImageBuilderOutput() ImageBuilderOutput {
	return i.ToImageBuilderOutputWithContext(context.Background())
}

func (i *ImageBuilder) ToImageBuilderOutputWithContext(ctx context.Context) ImageBuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderOutput)
}

type ImageBuilderOutput struct{ *pulumi.OutputState }

func (ImageBuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilder)(nil))
}

func (o ImageBuilderOutput) ToImageBuilderOutput() ImageBuilderOutput {
	return o
}

func (o ImageBuilderOutput) ToImageBuilderOutputWithContext(ctx context.Context) ImageBuilderOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderInput)(nil)).Elem(), &ImageBuilder{})
	pulumi.RegisterOutputType(ImageBuilderOutput{})
}
