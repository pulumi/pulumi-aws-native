// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::AppBlock
type AppBlock struct {
	pulumi.CustomResourceState

	// The ARN of the app block.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The time when the app block was created.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// The description of the app block.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the app block.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The name of the app block.
	//
	// *Pattern* : `^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$`
	Name pulumi.StringOutput `pulumi:"name"`
	// The packaging type of the app block.
	PackagingType pulumi.StringPtrOutput `pulumi:"packagingType"`
	// The post setup script details of the app block.
	PostSetupScriptDetails AppBlockScriptDetailsPtrOutput `pulumi:"postSetupScriptDetails"`
	// The setup script details of the app block.
	SetupScriptDetails AppBlockScriptDetailsPtrOutput `pulumi:"setupScriptDetails"`
	// The source S3 location of the app block.
	SourceS3Location AppBlockS3LocationOutput `pulumi:"sourceS3Location"`
	// The tags of the app block.
	Tags pulumi.ArrayOutput `pulumi:"tags"`
}

// NewAppBlock registers a new resource with the given unique name, arguments, and options.
func NewAppBlock(ctx *pulumi.Context,
	name string, args *AppBlockArgs, opts ...pulumi.ResourceOption) (*AppBlock, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceS3Location == nil {
		return nil, errors.New("invalid value for required argument 'SourceS3Location'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"description",
		"displayName",
		"name",
		"packagingType",
		"postSetupScriptDetails",
		"setupScriptDetails",
		"sourceS3Location",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppBlock
	err := ctx.RegisterResource("aws-native:appstream:AppBlock", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppBlock gets an existing AppBlock resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppBlock(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppBlockState, opts ...pulumi.ResourceOption) (*AppBlock, error) {
	var resource AppBlock
	err := ctx.ReadResource("aws-native:appstream:AppBlock", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppBlock resources.
type appBlockState struct {
}

type AppBlockState struct {
}

func (AppBlockState) ElementType() reflect.Type {
	return reflect.TypeOf((*appBlockState)(nil)).Elem()
}

type appBlockArgs struct {
	// The description of the app block.
	Description *string `pulumi:"description"`
	// The display name of the app block.
	DisplayName *string `pulumi:"displayName"`
	// The name of the app block.
	//
	// *Pattern* : `^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$`
	Name *string `pulumi:"name"`
	// The packaging type of the app block.
	PackagingType *string `pulumi:"packagingType"`
	// The post setup script details of the app block.
	PostSetupScriptDetails *AppBlockScriptDetails `pulumi:"postSetupScriptDetails"`
	// The setup script details of the app block.
	SetupScriptDetails *AppBlockScriptDetails `pulumi:"setupScriptDetails"`
	// The source S3 location of the app block.
	SourceS3Location AppBlockS3Location `pulumi:"sourceS3Location"`
	// The tags of the app block.
	Tags []interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a AppBlock resource.
type AppBlockArgs struct {
	// The description of the app block.
	Description pulumi.StringPtrInput
	// The display name of the app block.
	DisplayName pulumi.StringPtrInput
	// The name of the app block.
	//
	// *Pattern* : `^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$`
	Name pulumi.StringPtrInput
	// The packaging type of the app block.
	PackagingType pulumi.StringPtrInput
	// The post setup script details of the app block.
	PostSetupScriptDetails AppBlockScriptDetailsPtrInput
	// The setup script details of the app block.
	SetupScriptDetails AppBlockScriptDetailsPtrInput
	// The source S3 location of the app block.
	SourceS3Location AppBlockS3LocationInput
	// The tags of the app block.
	Tags pulumi.ArrayInput
}

func (AppBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appBlockArgs)(nil)).Elem()
}

type AppBlockInput interface {
	pulumi.Input

	ToAppBlockOutput() AppBlockOutput
	ToAppBlockOutputWithContext(ctx context.Context) AppBlockOutput
}

func (*AppBlock) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlock)(nil)).Elem()
}

func (i *AppBlock) ToAppBlockOutput() AppBlockOutput {
	return i.ToAppBlockOutputWithContext(context.Background())
}

func (i *AppBlock) ToAppBlockOutputWithContext(ctx context.Context) AppBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockOutput)
}

type AppBlockOutput struct{ *pulumi.OutputState }

func (AppBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlock)(nil)).Elem()
}

func (o AppBlockOutput) ToAppBlockOutput() AppBlockOutput {
	return o
}

func (o AppBlockOutput) ToAppBlockOutputWithContext(ctx context.Context) AppBlockOutput {
	return o
}

// The ARN of the app block.
func (o AppBlockOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The time when the app block was created.
func (o AppBlockOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// The description of the app block.
func (o AppBlockOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the app block.
func (o AppBlockOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of the app block.
//
// *Pattern* : `^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$`
func (o AppBlockOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The packaging type of the app block.
func (o AppBlockOutput) PackagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.StringPtrOutput { return v.PackagingType }).(pulumi.StringPtrOutput)
}

// The post setup script details of the app block.
func (o AppBlockOutput) PostSetupScriptDetails() AppBlockScriptDetailsPtrOutput {
	return o.ApplyT(func(v *AppBlock) AppBlockScriptDetailsPtrOutput { return v.PostSetupScriptDetails }).(AppBlockScriptDetailsPtrOutput)
}

// The setup script details of the app block.
func (o AppBlockOutput) SetupScriptDetails() AppBlockScriptDetailsPtrOutput {
	return o.ApplyT(func(v *AppBlock) AppBlockScriptDetailsPtrOutput { return v.SetupScriptDetails }).(AppBlockScriptDetailsPtrOutput)
}

// The source S3 location of the app block.
func (o AppBlockOutput) SourceS3Location() AppBlockS3LocationOutput {
	return o.ApplyT(func(v *AppBlock) AppBlockS3LocationOutput { return v.SourceS3Location }).(AppBlockS3LocationOutput)
}

// The tags of the app block.
func (o AppBlockOutput) Tags() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AppBlock) pulumi.ArrayOutput { return v.Tags }).(pulumi.ArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockInput)(nil)).Elem(), &AppBlock{})
	pulumi.RegisterOutputType(AppBlockOutput{})
}
