// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::DirectoryConfig
type DirectoryConfig struct {
	pulumi.CustomResourceState

	// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
	CertificateBasedAuthProperties DirectoryConfigCertificateBasedAuthPropertiesPtrOutput `pulumi:"certificateBasedAuthProperties"`
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName pulumi.StringOutput `pulumi:"directoryName"`
	// The distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames pulumi.StringArrayOutput `pulumi:"organizationalUnitDistinguishedNames"`
	// The credentials for the service account used by the streaming instance to connect to the directory.
	ServiceAccountCredentials DirectoryConfigServiceAccountCredentialsOutput `pulumi:"serviceAccountCredentials"`
}

// NewDirectoryConfig registers a new resource with the given unique name, arguments, and options.
func NewDirectoryConfig(ctx *pulumi.Context,
	name string, args *DirectoryConfigArgs, opts ...pulumi.ResourceOption) (*DirectoryConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DirectoryName == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryName'")
	}
	if args.OrganizationalUnitDistinguishedNames == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationalUnitDistinguishedNames'")
	}
	if args.ServiceAccountCredentials == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountCredentials'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"directoryName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DirectoryConfig
	err := ctx.RegisterResource("aws-native:appstream:DirectoryConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectoryConfig gets an existing DirectoryConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectoryConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryConfigState, opts ...pulumi.ResourceOption) (*DirectoryConfig, error) {
	var resource DirectoryConfig
	err := ctx.ReadResource("aws-native:appstream:DirectoryConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectoryConfig resources.
type directoryConfigState struct {
}

type DirectoryConfigState struct {
}

func (DirectoryConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryConfigState)(nil)).Elem()
}

type directoryConfigArgs struct {
	// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
	CertificateBasedAuthProperties *DirectoryConfigCertificateBasedAuthProperties `pulumi:"certificateBasedAuthProperties"`
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName string `pulumi:"directoryName"`
	// The distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames []string `pulumi:"organizationalUnitDistinguishedNames"`
	// The credentials for the service account used by the streaming instance to connect to the directory.
	ServiceAccountCredentials DirectoryConfigServiceAccountCredentials `pulumi:"serviceAccountCredentials"`
}

// The set of arguments for constructing a DirectoryConfig resource.
type DirectoryConfigArgs struct {
	// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
	CertificateBasedAuthProperties DirectoryConfigCertificateBasedAuthPropertiesPtrInput
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName pulumi.StringInput
	// The distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames pulumi.StringArrayInput
	// The credentials for the service account used by the streaming instance to connect to the directory.
	ServiceAccountCredentials DirectoryConfigServiceAccountCredentialsInput
}

func (DirectoryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryConfigArgs)(nil)).Elem()
}

type DirectoryConfigInput interface {
	pulumi.Input

	ToDirectoryConfigOutput() DirectoryConfigOutput
	ToDirectoryConfigOutputWithContext(ctx context.Context) DirectoryConfigOutput
}

func (*DirectoryConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfig)(nil)).Elem()
}

func (i *DirectoryConfig) ToDirectoryConfigOutput() DirectoryConfigOutput {
	return i.ToDirectoryConfigOutputWithContext(context.Background())
}

func (i *DirectoryConfig) ToDirectoryConfigOutputWithContext(ctx context.Context) DirectoryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigOutput)
}

type DirectoryConfigOutput struct{ *pulumi.OutputState }

func (DirectoryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfig)(nil)).Elem()
}

func (o DirectoryConfigOutput) ToDirectoryConfigOutput() DirectoryConfigOutput {
	return o
}

func (o DirectoryConfigOutput) ToDirectoryConfigOutputWithContext(ctx context.Context) DirectoryConfigOutput {
	return o
}

// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
func (o DirectoryConfigOutput) CertificateBasedAuthProperties() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return o.ApplyT(func(v *DirectoryConfig) DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
		return v.CertificateBasedAuthProperties
	}).(DirectoryConfigCertificateBasedAuthPropertiesPtrOutput)
}

// The fully qualified name of the directory (for example, corp.example.com).
func (o DirectoryConfigOutput) DirectoryName() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryConfig) pulumi.StringOutput { return v.DirectoryName }).(pulumi.StringOutput)
}

// The distinguished names of the organizational units for computer accounts.
func (o DirectoryConfigOutput) OrganizationalUnitDistinguishedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectoryConfig) pulumi.StringArrayOutput { return v.OrganizationalUnitDistinguishedNames }).(pulumi.StringArrayOutput)
}

// The credentials for the service account used by the streaming instance to connect to the directory.
func (o DirectoryConfigOutput) ServiceAccountCredentials() DirectoryConfigServiceAccountCredentialsOutput {
	return o.ApplyT(func(v *DirectoryConfig) DirectoryConfigServiceAccountCredentialsOutput {
		return v.ServiceAccountCredentials
	}).(DirectoryConfigServiceAccountCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryConfigInput)(nil)).Elem(), &DirectoryConfig{})
	pulumi.RegisterOutputType(DirectoryConfigOutput{})
}
