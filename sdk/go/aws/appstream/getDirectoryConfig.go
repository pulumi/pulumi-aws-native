// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppStream::DirectoryConfig
func LookupDirectoryConfig(ctx *pulumi.Context, args *LookupDirectoryConfigArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDirectoryConfigResult
	err := ctx.Invoke("aws-native:appstream:getDirectoryConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDirectoryConfigArgs struct {
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName string `pulumi:"directoryName"`
}

type LookupDirectoryConfigResult struct {
	// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
	CertificateBasedAuthProperties *DirectoryConfigCertificateBasedAuthProperties `pulumi:"certificateBasedAuthProperties"`
	// The distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames []string `pulumi:"organizationalUnitDistinguishedNames"`
	// The credentials for the service account used by the streaming instance to connect to the directory. Do not use this parameter directly. Use `ServiceAccountCredentials` as an input parameter with `noEcho` as shown in the [Parameters](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html) . For best practices information, see [Do Not Embed Credentials in Your Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#creds) .
	ServiceAccountCredentials *DirectoryConfigServiceAccountCredentials `pulumi:"serviceAccountCredentials"`
}

func LookupDirectoryConfigOutput(ctx *pulumi.Context, args LookupDirectoryConfigOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDirectoryConfigResult, error) {
			args := v.(LookupDirectoryConfigArgs)
			r, err := LookupDirectoryConfig(ctx, &args, opts...)
			var s LookupDirectoryConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDirectoryConfigResultOutput)
}

type LookupDirectoryConfigOutputArgs struct {
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName pulumi.StringInput `pulumi:"directoryName"`
}

func (LookupDirectoryConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryConfigArgs)(nil)).Elem()
}

type LookupDirectoryConfigResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryConfigResult)(nil)).Elem()
}

func (o LookupDirectoryConfigResultOutput) ToLookupDirectoryConfigResultOutput() LookupDirectoryConfigResultOutput {
	return o
}

func (o LookupDirectoryConfigResultOutput) ToLookupDirectoryConfigResultOutputWithContext(ctx context.Context) LookupDirectoryConfigResultOutput {
	return o
}

// The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
func (o LookupDirectoryConfigResultOutput) CertificateBasedAuthProperties() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return o.ApplyT(func(v LookupDirectoryConfigResult) *DirectoryConfigCertificateBasedAuthProperties {
		return v.CertificateBasedAuthProperties
	}).(DirectoryConfigCertificateBasedAuthPropertiesPtrOutput)
}

// The distinguished names of the organizational units for computer accounts.
func (o LookupDirectoryConfigResultOutput) OrganizationalUnitDistinguishedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDirectoryConfigResult) []string { return v.OrganizationalUnitDistinguishedNames }).(pulumi.StringArrayOutput)
}

// The credentials for the service account used by the streaming instance to connect to the directory. Do not use this parameter directly. Use `ServiceAccountCredentials` as an input parameter with `noEcho` as shown in the [Parameters](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html) . For best practices information, see [Do Not Embed Credentials in Your Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#creds) .
func (o LookupDirectoryConfigResultOutput) ServiceAccountCredentials() DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o.ApplyT(func(v LookupDirectoryConfigResult) *DirectoryConfigServiceAccountCredentials {
		return v.ServiceAccountCredentials
	}).(DirectoryConfigServiceAccountCredentialsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryConfigResultOutput{})
}
