// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::AppStream::Stack
func LookupStack(ctx *pulumi.Context, args *LookupStackArgs, opts ...pulumi.InvokeOption) (*LookupStackResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStackResult
	err := ctx.Invoke("aws-native:appstream:getStack", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStackArgs struct {
	Id string `pulumi:"id"`
}

type LookupStackResult struct {
	AccessEndpoints             []StackAccessEndpoint             `pulumi:"accessEndpoints"`
	ApplicationSettings         *StackApplicationSettings         `pulumi:"applicationSettings"`
	AttributesToDelete          []string                          `pulumi:"attributesToDelete"`
	DeleteStorageConnectors     *bool                             `pulumi:"deleteStorageConnectors"`
	Description                 *string                           `pulumi:"description"`
	DisplayName                 *string                           `pulumi:"displayName"`
	EmbedHostDomains            []string                          `pulumi:"embedHostDomains"`
	FeedbackUrl                 *string                           `pulumi:"feedbackUrl"`
	Id                          *string                           `pulumi:"id"`
	RedirectUrl                 *string                           `pulumi:"redirectUrl"`
	StorageConnectors           []StackStorageConnector           `pulumi:"storageConnectors"`
	StreamingExperienceSettings *StackStreamingExperienceSettings `pulumi:"streamingExperienceSettings"`
	Tags                        []StackTag                        `pulumi:"tags"`
	UserSettings                []StackUserSetting                `pulumi:"userSettings"`
}

func LookupStackOutput(ctx *pulumi.Context, args LookupStackOutputArgs, opts ...pulumi.InvokeOption) LookupStackResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStackResult, error) {
			args := v.(LookupStackArgs)
			r, err := LookupStack(ctx, &args, opts...)
			var s LookupStackResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStackResultOutput)
}

type LookupStackOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupStackOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStackArgs)(nil)).Elem()
}

type LookupStackResultOutput struct{ *pulumi.OutputState }

func (LookupStackResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStackResult)(nil)).Elem()
}

func (o LookupStackResultOutput) ToLookupStackResultOutput() LookupStackResultOutput {
	return o
}

func (o LookupStackResultOutput) ToLookupStackResultOutputWithContext(ctx context.Context) LookupStackResultOutput {
	return o
}

func (o LookupStackResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupStackResult] {
	return pulumix.Output[LookupStackResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupStackResultOutput) AccessEndpoints() StackAccessEndpointArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []StackAccessEndpoint { return v.AccessEndpoints }).(StackAccessEndpointArrayOutput)
}

func (o LookupStackResultOutput) ApplicationSettings() StackApplicationSettingsPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *StackApplicationSettings { return v.ApplicationSettings }).(StackApplicationSettingsPtrOutput)
}

func (o LookupStackResultOutput) AttributesToDelete() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.AttributesToDelete }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) DeleteStorageConnectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *bool { return v.DeleteStorageConnectors }).(pulumi.BoolPtrOutput)
}

func (o LookupStackResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupStackResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupStackResultOutput) EmbedHostDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []string { return v.EmbedHostDomains }).(pulumi.StringArrayOutput)
}

func (o LookupStackResultOutput) FeedbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *string { return v.FeedbackUrl }).(pulumi.StringPtrOutput)
}

func (o LookupStackResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupStackResultOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

func (o LookupStackResultOutput) StorageConnectors() StackStorageConnectorArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []StackStorageConnector { return v.StorageConnectors }).(StackStorageConnectorArrayOutput)
}

func (o LookupStackResultOutput) StreamingExperienceSettings() StackStreamingExperienceSettingsPtrOutput {
	return o.ApplyT(func(v LookupStackResult) *StackStreamingExperienceSettings { return v.StreamingExperienceSettings }).(StackStreamingExperienceSettingsPtrOutput)
}

func (o LookupStackResultOutput) Tags() StackTagArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []StackTag { return v.Tags }).(StackTagArrayOutput)
}

func (o LookupStackResultOutput) UserSettings() StackUserSettingArrayOutput {
	return o.ApplyT(func(v LookupStackResult) []StackUserSetting { return v.UserSettings }).(StackUserSettingArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStackResultOutput{})
}
