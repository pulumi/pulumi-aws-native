// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppBlockS3Location struct {
	S3Bucket string `pulumi:"s3Bucket"`
	S3Key    string `pulumi:"s3Key"`
}

// AppBlockS3LocationInput is an input type that accepts AppBlockS3LocationArgs and AppBlockS3LocationOutput values.
// You can construct a concrete instance of `AppBlockS3LocationInput` via:
//
//          AppBlockS3LocationArgs{...}
type AppBlockS3LocationInput interface {
	pulumi.Input

	ToAppBlockS3LocationOutput() AppBlockS3LocationOutput
	ToAppBlockS3LocationOutputWithContext(context.Context) AppBlockS3LocationOutput
}

type AppBlockS3LocationArgs struct {
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	S3Key    pulumi.StringInput `pulumi:"s3Key"`
}

func (AppBlockS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockS3Location)(nil)).Elem()
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationOutput() AppBlockS3LocationOutput {
	return i.ToAppBlockS3LocationOutputWithContext(context.Background())
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationOutputWithContext(ctx context.Context) AppBlockS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockS3LocationOutput)
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return i.ToAppBlockS3LocationPtrOutputWithContext(context.Background())
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockS3LocationOutput).ToAppBlockS3LocationPtrOutputWithContext(ctx)
}

// AppBlockS3LocationPtrInput is an input type that accepts AppBlockS3LocationArgs, AppBlockS3LocationPtr and AppBlockS3LocationPtrOutput values.
// You can construct a concrete instance of `AppBlockS3LocationPtrInput` via:
//
//          AppBlockS3LocationArgs{...}
//
//  or:
//
//          nil
type AppBlockS3LocationPtrInput interface {
	pulumi.Input

	ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput
	ToAppBlockS3LocationPtrOutputWithContext(context.Context) AppBlockS3LocationPtrOutput
}

type appBlockS3LocationPtrType AppBlockS3LocationArgs

func AppBlockS3LocationPtr(v *AppBlockS3LocationArgs) AppBlockS3LocationPtrInput {
	return (*appBlockS3LocationPtrType)(v)
}

func (*appBlockS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockS3Location)(nil)).Elem()
}

func (i *appBlockS3LocationPtrType) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return i.ToAppBlockS3LocationPtrOutputWithContext(context.Background())
}

func (i *appBlockS3LocationPtrType) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockS3LocationPtrOutput)
}

type AppBlockS3LocationOutput struct{ *pulumi.OutputState }

func (AppBlockS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockS3Location)(nil)).Elem()
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationOutput() AppBlockS3LocationOutput {
	return o
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationOutputWithContext(ctx context.Context) AppBlockS3LocationOutput {
	return o
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return o.ToAppBlockS3LocationPtrOutputWithContext(context.Background())
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppBlockS3Location) *AppBlockS3Location {
		return &v
	}).(AppBlockS3LocationPtrOutput)
}

func (o AppBlockS3LocationOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockS3Location) string { return v.S3Bucket }).(pulumi.StringOutput)
}

func (o AppBlockS3LocationOutput) S3Key() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockS3Location) string { return v.S3Key }).(pulumi.StringOutput)
}

type AppBlockS3LocationPtrOutput struct{ *pulumi.OutputState }

func (AppBlockS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockS3Location)(nil)).Elem()
}

func (o AppBlockS3LocationPtrOutput) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return o
}

func (o AppBlockS3LocationPtrOutput) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return o
}

func (o AppBlockS3LocationPtrOutput) Elem() AppBlockS3LocationOutput {
	return o.ApplyT(func(v *AppBlockS3Location) AppBlockS3Location {
		if v != nil {
			return *v
		}
		var ret AppBlockS3Location
		return ret
	}).(AppBlockS3LocationOutput)
}

func (o AppBlockS3LocationPtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

func (o AppBlockS3LocationPtrOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Key
	}).(pulumi.StringPtrOutput)
}

type AppBlockScriptDetails struct {
	ExecutableParameters *string            `pulumi:"executableParameters"`
	ExecutablePath       string             `pulumi:"executablePath"`
	ScriptS3Location     AppBlockS3Location `pulumi:"scriptS3Location"`
	TimeoutInSeconds     int                `pulumi:"timeoutInSeconds"`
}

// AppBlockScriptDetailsInput is an input type that accepts AppBlockScriptDetailsArgs and AppBlockScriptDetailsOutput values.
// You can construct a concrete instance of `AppBlockScriptDetailsInput` via:
//
//          AppBlockScriptDetailsArgs{...}
type AppBlockScriptDetailsInput interface {
	pulumi.Input

	ToAppBlockScriptDetailsOutput() AppBlockScriptDetailsOutput
	ToAppBlockScriptDetailsOutputWithContext(context.Context) AppBlockScriptDetailsOutput
}

type AppBlockScriptDetailsArgs struct {
	ExecutableParameters pulumi.StringPtrInput   `pulumi:"executableParameters"`
	ExecutablePath       pulumi.StringInput      `pulumi:"executablePath"`
	ScriptS3Location     AppBlockS3LocationInput `pulumi:"scriptS3Location"`
	TimeoutInSeconds     pulumi.IntInput         `pulumi:"timeoutInSeconds"`
}

func (AppBlockScriptDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockScriptDetails)(nil)).Elem()
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsOutput() AppBlockScriptDetailsOutput {
	return i.ToAppBlockScriptDetailsOutputWithContext(context.Background())
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsOutputWithContext(ctx context.Context) AppBlockScriptDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockScriptDetailsOutput)
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return i.ToAppBlockScriptDetailsPtrOutputWithContext(context.Background())
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockScriptDetailsOutput).ToAppBlockScriptDetailsPtrOutputWithContext(ctx)
}

// AppBlockScriptDetailsPtrInput is an input type that accepts AppBlockScriptDetailsArgs, AppBlockScriptDetailsPtr and AppBlockScriptDetailsPtrOutput values.
// You can construct a concrete instance of `AppBlockScriptDetailsPtrInput` via:
//
//          AppBlockScriptDetailsArgs{...}
//
//  or:
//
//          nil
type AppBlockScriptDetailsPtrInput interface {
	pulumi.Input

	ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput
	ToAppBlockScriptDetailsPtrOutputWithContext(context.Context) AppBlockScriptDetailsPtrOutput
}

type appBlockScriptDetailsPtrType AppBlockScriptDetailsArgs

func AppBlockScriptDetailsPtr(v *AppBlockScriptDetailsArgs) AppBlockScriptDetailsPtrInput {
	return (*appBlockScriptDetailsPtrType)(v)
}

func (*appBlockScriptDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockScriptDetails)(nil)).Elem()
}

func (i *appBlockScriptDetailsPtrType) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return i.ToAppBlockScriptDetailsPtrOutputWithContext(context.Background())
}

func (i *appBlockScriptDetailsPtrType) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockScriptDetailsPtrOutput)
}

type AppBlockScriptDetailsOutput struct{ *pulumi.OutputState }

func (AppBlockScriptDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockScriptDetails)(nil)).Elem()
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsOutput() AppBlockScriptDetailsOutput {
	return o
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsOutputWithContext(ctx context.Context) AppBlockScriptDetailsOutput {
	return o
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return o.ToAppBlockScriptDetailsPtrOutputWithContext(context.Background())
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppBlockScriptDetails) *AppBlockScriptDetails {
		return &v
	}).(AppBlockScriptDetailsPtrOutput)
}

func (o AppBlockScriptDetailsOutput) ExecutableParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) *string { return v.ExecutableParameters }).(pulumi.StringPtrOutput)
}

func (o AppBlockScriptDetailsOutput) ExecutablePath() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) string { return v.ExecutablePath }).(pulumi.StringOutput)
}

func (o AppBlockScriptDetailsOutput) ScriptS3Location() AppBlockS3LocationOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) AppBlockS3Location { return v.ScriptS3Location }).(AppBlockS3LocationOutput)
}

func (o AppBlockScriptDetailsOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

type AppBlockScriptDetailsPtrOutput struct{ *pulumi.OutputState }

func (AppBlockScriptDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockScriptDetails)(nil)).Elem()
}

func (o AppBlockScriptDetailsPtrOutput) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return o
}

func (o AppBlockScriptDetailsPtrOutput) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return o
}

func (o AppBlockScriptDetailsPtrOutput) Elem() AppBlockScriptDetailsOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) AppBlockScriptDetails {
		if v != nil {
			return *v
		}
		var ret AppBlockScriptDetails
		return ret
	}).(AppBlockScriptDetailsOutput)
}

func (o AppBlockScriptDetailsPtrOutput) ExecutableParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *string {
		if v == nil {
			return nil
		}
		return v.ExecutableParameters
	}).(pulumi.StringPtrOutput)
}

func (o AppBlockScriptDetailsPtrOutput) ExecutablePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutablePath
	}).(pulumi.StringPtrOutput)
}

func (o AppBlockScriptDetailsPtrOutput) ScriptS3Location() AppBlockS3LocationPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *AppBlockS3Location {
		if v == nil {
			return nil
		}
		return &v.ScriptS3Location
	}).(AppBlockS3LocationPtrOutput)
}

func (o AppBlockScriptDetailsPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

type AppBlockTag struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// AppBlockTagInput is an input type that accepts AppBlockTagArgs and AppBlockTagOutput values.
// You can construct a concrete instance of `AppBlockTagInput` via:
//
//          AppBlockTagArgs{...}
type AppBlockTagInput interface {
	pulumi.Input

	ToAppBlockTagOutput() AppBlockTagOutput
	ToAppBlockTagOutputWithContext(context.Context) AppBlockTagOutput
}

type AppBlockTagArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (AppBlockTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockTag)(nil)).Elem()
}

func (i AppBlockTagArgs) ToAppBlockTagOutput() AppBlockTagOutput {
	return i.ToAppBlockTagOutputWithContext(context.Background())
}

func (i AppBlockTagArgs) ToAppBlockTagOutputWithContext(ctx context.Context) AppBlockTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockTagOutput)
}

// AppBlockTagArrayInput is an input type that accepts AppBlockTagArray and AppBlockTagArrayOutput values.
// You can construct a concrete instance of `AppBlockTagArrayInput` via:
//
//          AppBlockTagArray{ AppBlockTagArgs{...} }
type AppBlockTagArrayInput interface {
	pulumi.Input

	ToAppBlockTagArrayOutput() AppBlockTagArrayOutput
	ToAppBlockTagArrayOutputWithContext(context.Context) AppBlockTagArrayOutput
}

type AppBlockTagArray []AppBlockTagInput

func (AppBlockTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppBlockTag)(nil)).Elem()
}

func (i AppBlockTagArray) ToAppBlockTagArrayOutput() AppBlockTagArrayOutput {
	return i.ToAppBlockTagArrayOutputWithContext(context.Background())
}

func (i AppBlockTagArray) ToAppBlockTagArrayOutputWithContext(ctx context.Context) AppBlockTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockTagArrayOutput)
}

type AppBlockTagOutput struct{ *pulumi.OutputState }

func (AppBlockTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockTag)(nil)).Elem()
}

func (o AppBlockTagOutput) ToAppBlockTagOutput() AppBlockTagOutput {
	return o
}

func (o AppBlockTagOutput) ToAppBlockTagOutputWithContext(ctx context.Context) AppBlockTagOutput {
	return o
}

func (o AppBlockTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockTag) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o AppBlockTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type AppBlockTagArrayOutput struct{ *pulumi.OutputState }

func (AppBlockTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppBlockTag)(nil)).Elem()
}

func (o AppBlockTagArrayOutput) ToAppBlockTagArrayOutput() AppBlockTagArrayOutput {
	return o
}

func (o AppBlockTagArrayOutput) ToAppBlockTagArrayOutputWithContext(ctx context.Context) AppBlockTagArrayOutput {
	return o
}

func (o AppBlockTagArrayOutput) Index(i pulumi.IntInput) AppBlockTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppBlockTag {
		return vs[0].([]AppBlockTag)[vs[1].(int)]
	}).(AppBlockTagOutput)
}

type ApplicationS3Location struct {
	S3Bucket string `pulumi:"s3Bucket"`
	S3Key    string `pulumi:"s3Key"`
}

// ApplicationS3LocationInput is an input type that accepts ApplicationS3LocationArgs and ApplicationS3LocationOutput values.
// You can construct a concrete instance of `ApplicationS3LocationInput` via:
//
//          ApplicationS3LocationArgs{...}
type ApplicationS3LocationInput interface {
	pulumi.Input

	ToApplicationS3LocationOutput() ApplicationS3LocationOutput
	ToApplicationS3LocationOutputWithContext(context.Context) ApplicationS3LocationOutput
}

type ApplicationS3LocationArgs struct {
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	S3Key    pulumi.StringInput `pulumi:"s3Key"`
}

func (ApplicationS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationS3Location)(nil)).Elem()
}

func (i ApplicationS3LocationArgs) ToApplicationS3LocationOutput() ApplicationS3LocationOutput {
	return i.ToApplicationS3LocationOutputWithContext(context.Background())
}

func (i ApplicationS3LocationArgs) ToApplicationS3LocationOutputWithContext(ctx context.Context) ApplicationS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationS3LocationOutput)
}

func (i ApplicationS3LocationArgs) ToApplicationS3LocationPtrOutput() ApplicationS3LocationPtrOutput {
	return i.ToApplicationS3LocationPtrOutputWithContext(context.Background())
}

func (i ApplicationS3LocationArgs) ToApplicationS3LocationPtrOutputWithContext(ctx context.Context) ApplicationS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationS3LocationOutput).ToApplicationS3LocationPtrOutputWithContext(ctx)
}

// ApplicationS3LocationPtrInput is an input type that accepts ApplicationS3LocationArgs, ApplicationS3LocationPtr and ApplicationS3LocationPtrOutput values.
// You can construct a concrete instance of `ApplicationS3LocationPtrInput` via:
//
//          ApplicationS3LocationArgs{...}
//
//  or:
//
//          nil
type ApplicationS3LocationPtrInput interface {
	pulumi.Input

	ToApplicationS3LocationPtrOutput() ApplicationS3LocationPtrOutput
	ToApplicationS3LocationPtrOutputWithContext(context.Context) ApplicationS3LocationPtrOutput
}

type applicationS3LocationPtrType ApplicationS3LocationArgs

func ApplicationS3LocationPtr(v *ApplicationS3LocationArgs) ApplicationS3LocationPtrInput {
	return (*applicationS3LocationPtrType)(v)
}

func (*applicationS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationS3Location)(nil)).Elem()
}

func (i *applicationS3LocationPtrType) ToApplicationS3LocationPtrOutput() ApplicationS3LocationPtrOutput {
	return i.ToApplicationS3LocationPtrOutputWithContext(context.Background())
}

func (i *applicationS3LocationPtrType) ToApplicationS3LocationPtrOutputWithContext(ctx context.Context) ApplicationS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationS3LocationPtrOutput)
}

type ApplicationS3LocationOutput struct{ *pulumi.OutputState }

func (ApplicationS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationS3Location)(nil)).Elem()
}

func (o ApplicationS3LocationOutput) ToApplicationS3LocationOutput() ApplicationS3LocationOutput {
	return o
}

func (o ApplicationS3LocationOutput) ToApplicationS3LocationOutputWithContext(ctx context.Context) ApplicationS3LocationOutput {
	return o
}

func (o ApplicationS3LocationOutput) ToApplicationS3LocationPtrOutput() ApplicationS3LocationPtrOutput {
	return o.ToApplicationS3LocationPtrOutputWithContext(context.Background())
}

func (o ApplicationS3LocationOutput) ToApplicationS3LocationPtrOutputWithContext(ctx context.Context) ApplicationS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationS3Location) *ApplicationS3Location {
		return &v
	}).(ApplicationS3LocationPtrOutput)
}

func (o ApplicationS3LocationOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationS3Location) string { return v.S3Bucket }).(pulumi.StringOutput)
}

func (o ApplicationS3LocationOutput) S3Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationS3Location) string { return v.S3Key }).(pulumi.StringOutput)
}

type ApplicationS3LocationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationS3Location)(nil)).Elem()
}

func (o ApplicationS3LocationPtrOutput) ToApplicationS3LocationPtrOutput() ApplicationS3LocationPtrOutput {
	return o
}

func (o ApplicationS3LocationPtrOutput) ToApplicationS3LocationPtrOutputWithContext(ctx context.Context) ApplicationS3LocationPtrOutput {
	return o
}

func (o ApplicationS3LocationPtrOutput) Elem() ApplicationS3LocationOutput {
	return o.ApplyT(func(v *ApplicationS3Location) ApplicationS3Location {
		if v != nil {
			return *v
		}
		var ret ApplicationS3Location
		return ret
	}).(ApplicationS3LocationOutput)
}

func (o ApplicationS3LocationPtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationS3LocationPtrOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Key
	}).(pulumi.StringPtrOutput)
}

type ApplicationTag struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// ApplicationTagInput is an input type that accepts ApplicationTagArgs and ApplicationTagOutput values.
// You can construct a concrete instance of `ApplicationTagInput` via:
//
//          ApplicationTagArgs{...}
type ApplicationTagInput interface {
	pulumi.Input

	ToApplicationTagOutput() ApplicationTagOutput
	ToApplicationTagOutputWithContext(context.Context) ApplicationTagOutput
}

type ApplicationTagArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (ApplicationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag)(nil)).Elem()
}

func (i ApplicationTagArgs) ToApplicationTagOutput() ApplicationTagOutput {
	return i.ToApplicationTagOutputWithContext(context.Background())
}

func (i ApplicationTagArgs) ToApplicationTagOutputWithContext(ctx context.Context) ApplicationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTagOutput)
}

// ApplicationTagArrayInput is an input type that accepts ApplicationTagArray and ApplicationTagArrayOutput values.
// You can construct a concrete instance of `ApplicationTagArrayInput` via:
//
//          ApplicationTagArray{ ApplicationTagArgs{...} }
type ApplicationTagArrayInput interface {
	pulumi.Input

	ToApplicationTagArrayOutput() ApplicationTagArrayOutput
	ToApplicationTagArrayOutputWithContext(context.Context) ApplicationTagArrayOutput
}

type ApplicationTagArray []ApplicationTagInput

func (ApplicationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationTag)(nil)).Elem()
}

func (i ApplicationTagArray) ToApplicationTagArrayOutput() ApplicationTagArrayOutput {
	return i.ToApplicationTagArrayOutputWithContext(context.Background())
}

func (i ApplicationTagArray) ToApplicationTagArrayOutputWithContext(ctx context.Context) ApplicationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTagArrayOutput)
}

type ApplicationTagOutput struct{ *pulumi.OutputState }

func (ApplicationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag)(nil)).Elem()
}

func (o ApplicationTagOutput) ToApplicationTagOutput() ApplicationTagOutput {
	return o
}

func (o ApplicationTagOutput) ToApplicationTagOutputWithContext(ctx context.Context) ApplicationTagOutput {
	return o
}

func (o ApplicationTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o ApplicationTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type ApplicationTagArrayOutput struct{ *pulumi.OutputState }

func (ApplicationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationTag)(nil)).Elem()
}

func (o ApplicationTagArrayOutput) ToApplicationTagArrayOutput() ApplicationTagArrayOutput {
	return o
}

func (o ApplicationTagArrayOutput) ToApplicationTagArrayOutputWithContext(ctx context.Context) ApplicationTagArrayOutput {
	return o
}

func (o ApplicationTagArrayOutput) Index(i pulumi.IntInput) ApplicationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationTag {
		return vs[0].([]ApplicationTag)[vs[1].(int)]
	}).(ApplicationTagOutput)
}

type DirectoryConfigServiceAccountCredentials struct {
	AccountName     string `pulumi:"accountName"`
	AccountPassword string `pulumi:"accountPassword"`
}

// DirectoryConfigServiceAccountCredentialsInput is an input type that accepts DirectoryConfigServiceAccountCredentialsArgs and DirectoryConfigServiceAccountCredentialsOutput values.
// You can construct a concrete instance of `DirectoryConfigServiceAccountCredentialsInput` via:
//
//          DirectoryConfigServiceAccountCredentialsArgs{...}
type DirectoryConfigServiceAccountCredentialsInput interface {
	pulumi.Input

	ToDirectoryConfigServiceAccountCredentialsOutput() DirectoryConfigServiceAccountCredentialsOutput
	ToDirectoryConfigServiceAccountCredentialsOutputWithContext(context.Context) DirectoryConfigServiceAccountCredentialsOutput
}

type DirectoryConfigServiceAccountCredentialsArgs struct {
	AccountName     pulumi.StringInput `pulumi:"accountName"`
	AccountPassword pulumi.StringInput `pulumi:"accountPassword"`
}

func (DirectoryConfigServiceAccountCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (i DirectoryConfigServiceAccountCredentialsArgs) ToDirectoryConfigServiceAccountCredentialsOutput() DirectoryConfigServiceAccountCredentialsOutput {
	return i.ToDirectoryConfigServiceAccountCredentialsOutputWithContext(context.Background())
}

func (i DirectoryConfigServiceAccountCredentialsArgs) ToDirectoryConfigServiceAccountCredentialsOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigServiceAccountCredentialsOutput)
}

func (i DirectoryConfigServiceAccountCredentialsArgs) ToDirectoryConfigServiceAccountCredentialsPtrOutput() DirectoryConfigServiceAccountCredentialsPtrOutput {
	return i.ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i DirectoryConfigServiceAccountCredentialsArgs) ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigServiceAccountCredentialsOutput).ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(ctx)
}

// DirectoryConfigServiceAccountCredentialsPtrInput is an input type that accepts DirectoryConfigServiceAccountCredentialsArgs, DirectoryConfigServiceAccountCredentialsPtr and DirectoryConfigServiceAccountCredentialsPtrOutput values.
// You can construct a concrete instance of `DirectoryConfigServiceAccountCredentialsPtrInput` via:
//
//          DirectoryConfigServiceAccountCredentialsArgs{...}
//
//  or:
//
//          nil
type DirectoryConfigServiceAccountCredentialsPtrInput interface {
	pulumi.Input

	ToDirectoryConfigServiceAccountCredentialsPtrOutput() DirectoryConfigServiceAccountCredentialsPtrOutput
	ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(context.Context) DirectoryConfigServiceAccountCredentialsPtrOutput
}

type directoryConfigServiceAccountCredentialsPtrType DirectoryConfigServiceAccountCredentialsArgs

func DirectoryConfigServiceAccountCredentialsPtr(v *DirectoryConfigServiceAccountCredentialsArgs) DirectoryConfigServiceAccountCredentialsPtrInput {
	return (*directoryConfigServiceAccountCredentialsPtrType)(v)
}

func (*directoryConfigServiceAccountCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (i *directoryConfigServiceAccountCredentialsPtrType) ToDirectoryConfigServiceAccountCredentialsPtrOutput() DirectoryConfigServiceAccountCredentialsPtrOutput {
	return i.ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i *directoryConfigServiceAccountCredentialsPtrType) ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigServiceAccountCredentialsPtrOutput)
}

type DirectoryConfigServiceAccountCredentialsOutput struct{ *pulumi.OutputState }

func (DirectoryConfigServiceAccountCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (o DirectoryConfigServiceAccountCredentialsOutput) ToDirectoryConfigServiceAccountCredentialsOutput() DirectoryConfigServiceAccountCredentialsOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsOutput) ToDirectoryConfigServiceAccountCredentialsOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsOutput) ToDirectoryConfigServiceAccountCredentialsPtrOutput() DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o.ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(context.Background())
}

func (o DirectoryConfigServiceAccountCredentialsOutput) ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryConfigServiceAccountCredentials) *DirectoryConfigServiceAccountCredentials {
		return &v
	}).(DirectoryConfigServiceAccountCredentialsPtrOutput)
}

func (o DirectoryConfigServiceAccountCredentialsOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConfigServiceAccountCredentials) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o DirectoryConfigServiceAccountCredentialsOutput) AccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConfigServiceAccountCredentials) string { return v.AccountPassword }).(pulumi.StringOutput)
}

type DirectoryConfigServiceAccountCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryConfigServiceAccountCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) ToDirectoryConfigServiceAccountCredentialsPtrOutput() DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) Elem() DirectoryConfigServiceAccountCredentialsOutput {
	return o.ApplyT(func(v *DirectoryConfigServiceAccountCredentials) DirectoryConfigServiceAccountCredentials {
		if v != nil {
			return *v
		}
		var ret DirectoryConfigServiceAccountCredentials
		return ret
	}).(DirectoryConfigServiceAccountCredentialsOutput)
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryConfigServiceAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) AccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryConfigServiceAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccountPassword
	}).(pulumi.StringPtrOutput)
}

type FleetComputeCapacity struct {
	DesiredInstances int `pulumi:"desiredInstances"`
}

// FleetComputeCapacityInput is an input type that accepts FleetComputeCapacityArgs and FleetComputeCapacityOutput values.
// You can construct a concrete instance of `FleetComputeCapacityInput` via:
//
//          FleetComputeCapacityArgs{...}
type FleetComputeCapacityInput interface {
	pulumi.Input

	ToFleetComputeCapacityOutput() FleetComputeCapacityOutput
	ToFleetComputeCapacityOutputWithContext(context.Context) FleetComputeCapacityOutput
}

type FleetComputeCapacityArgs struct {
	DesiredInstances pulumi.IntInput `pulumi:"desiredInstances"`
}

func (FleetComputeCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetComputeCapacity)(nil)).Elem()
}

func (i FleetComputeCapacityArgs) ToFleetComputeCapacityOutput() FleetComputeCapacityOutput {
	return i.ToFleetComputeCapacityOutputWithContext(context.Background())
}

func (i FleetComputeCapacityArgs) ToFleetComputeCapacityOutputWithContext(ctx context.Context) FleetComputeCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetComputeCapacityOutput)
}

func (i FleetComputeCapacityArgs) ToFleetComputeCapacityPtrOutput() FleetComputeCapacityPtrOutput {
	return i.ToFleetComputeCapacityPtrOutputWithContext(context.Background())
}

func (i FleetComputeCapacityArgs) ToFleetComputeCapacityPtrOutputWithContext(ctx context.Context) FleetComputeCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetComputeCapacityOutput).ToFleetComputeCapacityPtrOutputWithContext(ctx)
}

// FleetComputeCapacityPtrInput is an input type that accepts FleetComputeCapacityArgs, FleetComputeCapacityPtr and FleetComputeCapacityPtrOutput values.
// You can construct a concrete instance of `FleetComputeCapacityPtrInput` via:
//
//          FleetComputeCapacityArgs{...}
//
//  or:
//
//          nil
type FleetComputeCapacityPtrInput interface {
	pulumi.Input

	ToFleetComputeCapacityPtrOutput() FleetComputeCapacityPtrOutput
	ToFleetComputeCapacityPtrOutputWithContext(context.Context) FleetComputeCapacityPtrOutput
}

type fleetComputeCapacityPtrType FleetComputeCapacityArgs

func FleetComputeCapacityPtr(v *FleetComputeCapacityArgs) FleetComputeCapacityPtrInput {
	return (*fleetComputeCapacityPtrType)(v)
}

func (*fleetComputeCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetComputeCapacity)(nil)).Elem()
}

func (i *fleetComputeCapacityPtrType) ToFleetComputeCapacityPtrOutput() FleetComputeCapacityPtrOutput {
	return i.ToFleetComputeCapacityPtrOutputWithContext(context.Background())
}

func (i *fleetComputeCapacityPtrType) ToFleetComputeCapacityPtrOutputWithContext(ctx context.Context) FleetComputeCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetComputeCapacityPtrOutput)
}

type FleetComputeCapacityOutput struct{ *pulumi.OutputState }

func (FleetComputeCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetComputeCapacity)(nil)).Elem()
}

func (o FleetComputeCapacityOutput) ToFleetComputeCapacityOutput() FleetComputeCapacityOutput {
	return o
}

func (o FleetComputeCapacityOutput) ToFleetComputeCapacityOutputWithContext(ctx context.Context) FleetComputeCapacityOutput {
	return o
}

func (o FleetComputeCapacityOutput) ToFleetComputeCapacityPtrOutput() FleetComputeCapacityPtrOutput {
	return o.ToFleetComputeCapacityPtrOutputWithContext(context.Background())
}

func (o FleetComputeCapacityOutput) ToFleetComputeCapacityPtrOutputWithContext(ctx context.Context) FleetComputeCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetComputeCapacity) *FleetComputeCapacity {
		return &v
	}).(FleetComputeCapacityPtrOutput)
}

func (o FleetComputeCapacityOutput) DesiredInstances() pulumi.IntOutput {
	return o.ApplyT(func(v FleetComputeCapacity) int { return v.DesiredInstances }).(pulumi.IntOutput)
}

type FleetComputeCapacityPtrOutput struct{ *pulumi.OutputState }

func (FleetComputeCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetComputeCapacity)(nil)).Elem()
}

func (o FleetComputeCapacityPtrOutput) ToFleetComputeCapacityPtrOutput() FleetComputeCapacityPtrOutput {
	return o
}

func (o FleetComputeCapacityPtrOutput) ToFleetComputeCapacityPtrOutputWithContext(ctx context.Context) FleetComputeCapacityPtrOutput {
	return o
}

func (o FleetComputeCapacityPtrOutput) Elem() FleetComputeCapacityOutput {
	return o.ApplyT(func(v *FleetComputeCapacity) FleetComputeCapacity {
		if v != nil {
			return *v
		}
		var ret FleetComputeCapacity
		return ret
	}).(FleetComputeCapacityOutput)
}

func (o FleetComputeCapacityPtrOutput) DesiredInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetComputeCapacity) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredInstances
	}).(pulumi.IntPtrOutput)
}

type FleetDomainJoinInfo struct {
	DirectoryName                       *string `pulumi:"directoryName"`
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
}

// FleetDomainJoinInfoInput is an input type that accepts FleetDomainJoinInfoArgs and FleetDomainJoinInfoOutput values.
// You can construct a concrete instance of `FleetDomainJoinInfoInput` via:
//
//          FleetDomainJoinInfoArgs{...}
type FleetDomainJoinInfoInput interface {
	pulumi.Input

	ToFleetDomainJoinInfoOutput() FleetDomainJoinInfoOutput
	ToFleetDomainJoinInfoOutputWithContext(context.Context) FleetDomainJoinInfoOutput
}

type FleetDomainJoinInfoArgs struct {
	DirectoryName                       pulumi.StringPtrInput `pulumi:"directoryName"`
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
}

func (FleetDomainJoinInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetDomainJoinInfo)(nil)).Elem()
}

func (i FleetDomainJoinInfoArgs) ToFleetDomainJoinInfoOutput() FleetDomainJoinInfoOutput {
	return i.ToFleetDomainJoinInfoOutputWithContext(context.Background())
}

func (i FleetDomainJoinInfoArgs) ToFleetDomainJoinInfoOutputWithContext(ctx context.Context) FleetDomainJoinInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetDomainJoinInfoOutput)
}

func (i FleetDomainJoinInfoArgs) ToFleetDomainJoinInfoPtrOutput() FleetDomainJoinInfoPtrOutput {
	return i.ToFleetDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (i FleetDomainJoinInfoArgs) ToFleetDomainJoinInfoPtrOutputWithContext(ctx context.Context) FleetDomainJoinInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetDomainJoinInfoOutput).ToFleetDomainJoinInfoPtrOutputWithContext(ctx)
}

// FleetDomainJoinInfoPtrInput is an input type that accepts FleetDomainJoinInfoArgs, FleetDomainJoinInfoPtr and FleetDomainJoinInfoPtrOutput values.
// You can construct a concrete instance of `FleetDomainJoinInfoPtrInput` via:
//
//          FleetDomainJoinInfoArgs{...}
//
//  or:
//
//          nil
type FleetDomainJoinInfoPtrInput interface {
	pulumi.Input

	ToFleetDomainJoinInfoPtrOutput() FleetDomainJoinInfoPtrOutput
	ToFleetDomainJoinInfoPtrOutputWithContext(context.Context) FleetDomainJoinInfoPtrOutput
}

type fleetDomainJoinInfoPtrType FleetDomainJoinInfoArgs

func FleetDomainJoinInfoPtr(v *FleetDomainJoinInfoArgs) FleetDomainJoinInfoPtrInput {
	return (*fleetDomainJoinInfoPtrType)(v)
}

func (*fleetDomainJoinInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetDomainJoinInfo)(nil)).Elem()
}

func (i *fleetDomainJoinInfoPtrType) ToFleetDomainJoinInfoPtrOutput() FleetDomainJoinInfoPtrOutput {
	return i.ToFleetDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (i *fleetDomainJoinInfoPtrType) ToFleetDomainJoinInfoPtrOutputWithContext(ctx context.Context) FleetDomainJoinInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetDomainJoinInfoPtrOutput)
}

type FleetDomainJoinInfoOutput struct{ *pulumi.OutputState }

func (FleetDomainJoinInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetDomainJoinInfo)(nil)).Elem()
}

func (o FleetDomainJoinInfoOutput) ToFleetDomainJoinInfoOutput() FleetDomainJoinInfoOutput {
	return o
}

func (o FleetDomainJoinInfoOutput) ToFleetDomainJoinInfoOutputWithContext(ctx context.Context) FleetDomainJoinInfoOutput {
	return o
}

func (o FleetDomainJoinInfoOutput) ToFleetDomainJoinInfoPtrOutput() FleetDomainJoinInfoPtrOutput {
	return o.ToFleetDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (o FleetDomainJoinInfoOutput) ToFleetDomainJoinInfoPtrOutputWithContext(ctx context.Context) FleetDomainJoinInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetDomainJoinInfo) *FleetDomainJoinInfo {
		return &v
	}).(FleetDomainJoinInfoPtrOutput)
}

func (o FleetDomainJoinInfoOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDomainJoinInfo) *string { return v.DirectoryName }).(pulumi.StringPtrOutput)
}

func (o FleetDomainJoinInfoOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetDomainJoinInfo) *string { return v.OrganizationalUnitDistinguishedName }).(pulumi.StringPtrOutput)
}

type FleetDomainJoinInfoPtrOutput struct{ *pulumi.OutputState }

func (FleetDomainJoinInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetDomainJoinInfo)(nil)).Elem()
}

func (o FleetDomainJoinInfoPtrOutput) ToFleetDomainJoinInfoPtrOutput() FleetDomainJoinInfoPtrOutput {
	return o
}

func (o FleetDomainJoinInfoPtrOutput) ToFleetDomainJoinInfoPtrOutputWithContext(ctx context.Context) FleetDomainJoinInfoPtrOutput {
	return o
}

func (o FleetDomainJoinInfoPtrOutput) Elem() FleetDomainJoinInfoOutput {
	return o.ApplyT(func(v *FleetDomainJoinInfo) FleetDomainJoinInfo {
		if v != nil {
			return *v
		}
		var ret FleetDomainJoinInfo
		return ret
	}).(FleetDomainJoinInfoOutput)
}

func (o FleetDomainJoinInfoPtrOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDomainJoinInfo) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryName
	}).(pulumi.StringPtrOutput)
}

func (o FleetDomainJoinInfoPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetDomainJoinInfo) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

type FleetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FleetTagInput is an input type that accepts FleetTagArgs and FleetTagOutput values.
// You can construct a concrete instance of `FleetTagInput` via:
//
//          FleetTagArgs{...}
type FleetTagInput interface {
	pulumi.Input

	ToFleetTagOutput() FleetTagOutput
	ToFleetTagOutputWithContext(context.Context) FleetTagOutput
}

type FleetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FleetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTag)(nil)).Elem()
}

func (i FleetTagArgs) ToFleetTagOutput() FleetTagOutput {
	return i.ToFleetTagOutputWithContext(context.Background())
}

func (i FleetTagArgs) ToFleetTagOutputWithContext(ctx context.Context) FleetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTagOutput)
}

// FleetTagArrayInput is an input type that accepts FleetTagArray and FleetTagArrayOutput values.
// You can construct a concrete instance of `FleetTagArrayInput` via:
//
//          FleetTagArray{ FleetTagArgs{...} }
type FleetTagArrayInput interface {
	pulumi.Input

	ToFleetTagArrayOutput() FleetTagArrayOutput
	ToFleetTagArrayOutputWithContext(context.Context) FleetTagArrayOutput
}

type FleetTagArray []FleetTagInput

func (FleetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetTag)(nil)).Elem()
}

func (i FleetTagArray) ToFleetTagArrayOutput() FleetTagArrayOutput {
	return i.ToFleetTagArrayOutputWithContext(context.Background())
}

func (i FleetTagArray) ToFleetTagArrayOutputWithContext(ctx context.Context) FleetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTagArrayOutput)
}

type FleetTagOutput struct{ *pulumi.OutputState }

func (FleetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTag)(nil)).Elem()
}

func (o FleetTagOutput) ToFleetTagOutput() FleetTagOutput {
	return o
}

func (o FleetTagOutput) ToFleetTagOutputWithContext(ctx context.Context) FleetTagOutput {
	return o
}

func (o FleetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FleetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTag) string { return v.Value }).(pulumi.StringOutput)
}

type FleetTagArrayOutput struct{ *pulumi.OutputState }

func (FleetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetTag)(nil)).Elem()
}

func (o FleetTagArrayOutput) ToFleetTagArrayOutput() FleetTagArrayOutput {
	return o
}

func (o FleetTagArrayOutput) ToFleetTagArrayOutputWithContext(ctx context.Context) FleetTagArrayOutput {
	return o
}

func (o FleetTagArrayOutput) Index(i pulumi.IntInput) FleetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetTag {
		return vs[0].([]FleetTag)[vs[1].(int)]
	}).(FleetTagOutput)
}

type FleetVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
}

// FleetVpcConfigInput is an input type that accepts FleetVpcConfigArgs and FleetVpcConfigOutput values.
// You can construct a concrete instance of `FleetVpcConfigInput` via:
//
//          FleetVpcConfigArgs{...}
type FleetVpcConfigInput interface {
	pulumi.Input

	ToFleetVpcConfigOutput() FleetVpcConfigOutput
	ToFleetVpcConfigOutputWithContext(context.Context) FleetVpcConfigOutput
}

type FleetVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (FleetVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetVpcConfig)(nil)).Elem()
}

func (i FleetVpcConfigArgs) ToFleetVpcConfigOutput() FleetVpcConfigOutput {
	return i.ToFleetVpcConfigOutputWithContext(context.Background())
}

func (i FleetVpcConfigArgs) ToFleetVpcConfigOutputWithContext(ctx context.Context) FleetVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVpcConfigOutput)
}

func (i FleetVpcConfigArgs) ToFleetVpcConfigPtrOutput() FleetVpcConfigPtrOutput {
	return i.ToFleetVpcConfigPtrOutputWithContext(context.Background())
}

func (i FleetVpcConfigArgs) ToFleetVpcConfigPtrOutputWithContext(ctx context.Context) FleetVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVpcConfigOutput).ToFleetVpcConfigPtrOutputWithContext(ctx)
}

// FleetVpcConfigPtrInput is an input type that accepts FleetVpcConfigArgs, FleetVpcConfigPtr and FleetVpcConfigPtrOutput values.
// You can construct a concrete instance of `FleetVpcConfigPtrInput` via:
//
//          FleetVpcConfigArgs{...}
//
//  or:
//
//          nil
type FleetVpcConfigPtrInput interface {
	pulumi.Input

	ToFleetVpcConfigPtrOutput() FleetVpcConfigPtrOutput
	ToFleetVpcConfigPtrOutputWithContext(context.Context) FleetVpcConfigPtrOutput
}

type fleetVpcConfigPtrType FleetVpcConfigArgs

func FleetVpcConfigPtr(v *FleetVpcConfigArgs) FleetVpcConfigPtrInput {
	return (*fleetVpcConfigPtrType)(v)
}

func (*fleetVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetVpcConfig)(nil)).Elem()
}

func (i *fleetVpcConfigPtrType) ToFleetVpcConfigPtrOutput() FleetVpcConfigPtrOutput {
	return i.ToFleetVpcConfigPtrOutputWithContext(context.Background())
}

func (i *fleetVpcConfigPtrType) ToFleetVpcConfigPtrOutputWithContext(ctx context.Context) FleetVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVpcConfigPtrOutput)
}

type FleetVpcConfigOutput struct{ *pulumi.OutputState }

func (FleetVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetVpcConfig)(nil)).Elem()
}

func (o FleetVpcConfigOutput) ToFleetVpcConfigOutput() FleetVpcConfigOutput {
	return o
}

func (o FleetVpcConfigOutput) ToFleetVpcConfigOutputWithContext(ctx context.Context) FleetVpcConfigOutput {
	return o
}

func (o FleetVpcConfigOutput) ToFleetVpcConfigPtrOutput() FleetVpcConfigPtrOutput {
	return o.ToFleetVpcConfigPtrOutputWithContext(context.Background())
}

func (o FleetVpcConfigOutput) ToFleetVpcConfigPtrOutputWithContext(ctx context.Context) FleetVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetVpcConfig) *FleetVpcConfig {
		return &v
	}).(FleetVpcConfigPtrOutput)
}

func (o FleetVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o FleetVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type FleetVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FleetVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetVpcConfig)(nil)).Elem()
}

func (o FleetVpcConfigPtrOutput) ToFleetVpcConfigPtrOutput() FleetVpcConfigPtrOutput {
	return o
}

func (o FleetVpcConfigPtrOutput) ToFleetVpcConfigPtrOutputWithContext(ctx context.Context) FleetVpcConfigPtrOutput {
	return o
}

func (o FleetVpcConfigPtrOutput) Elem() FleetVpcConfigOutput {
	return o.ApplyT(func(v *FleetVpcConfig) FleetVpcConfig {
		if v != nil {
			return *v
		}
		var ret FleetVpcConfig
		return ret
	}).(FleetVpcConfigOutput)
}

func (o FleetVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o FleetVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type ImageBuilderAccessEndpoint struct {
	EndpointType string `pulumi:"endpointType"`
	VpceId       string `pulumi:"vpceId"`
}

// ImageBuilderAccessEndpointInput is an input type that accepts ImageBuilderAccessEndpointArgs and ImageBuilderAccessEndpointOutput values.
// You can construct a concrete instance of `ImageBuilderAccessEndpointInput` via:
//
//          ImageBuilderAccessEndpointArgs{...}
type ImageBuilderAccessEndpointInput interface {
	pulumi.Input

	ToImageBuilderAccessEndpointOutput() ImageBuilderAccessEndpointOutput
	ToImageBuilderAccessEndpointOutputWithContext(context.Context) ImageBuilderAccessEndpointOutput
}

type ImageBuilderAccessEndpointArgs struct {
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	VpceId       pulumi.StringInput `pulumi:"vpceId"`
}

func (ImageBuilderAccessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (i ImageBuilderAccessEndpointArgs) ToImageBuilderAccessEndpointOutput() ImageBuilderAccessEndpointOutput {
	return i.ToImageBuilderAccessEndpointOutputWithContext(context.Background())
}

func (i ImageBuilderAccessEndpointArgs) ToImageBuilderAccessEndpointOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderAccessEndpointOutput)
}

// ImageBuilderAccessEndpointArrayInput is an input type that accepts ImageBuilderAccessEndpointArray and ImageBuilderAccessEndpointArrayOutput values.
// You can construct a concrete instance of `ImageBuilderAccessEndpointArrayInput` via:
//
//          ImageBuilderAccessEndpointArray{ ImageBuilderAccessEndpointArgs{...} }
type ImageBuilderAccessEndpointArrayInput interface {
	pulumi.Input

	ToImageBuilderAccessEndpointArrayOutput() ImageBuilderAccessEndpointArrayOutput
	ToImageBuilderAccessEndpointArrayOutputWithContext(context.Context) ImageBuilderAccessEndpointArrayOutput
}

type ImageBuilderAccessEndpointArray []ImageBuilderAccessEndpointInput

func (ImageBuilderAccessEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (i ImageBuilderAccessEndpointArray) ToImageBuilderAccessEndpointArrayOutput() ImageBuilderAccessEndpointArrayOutput {
	return i.ToImageBuilderAccessEndpointArrayOutputWithContext(context.Background())
}

func (i ImageBuilderAccessEndpointArray) ToImageBuilderAccessEndpointArrayOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderAccessEndpointArrayOutput)
}

type ImageBuilderAccessEndpointOutput struct{ *pulumi.OutputState }

func (ImageBuilderAccessEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (o ImageBuilderAccessEndpointOutput) ToImageBuilderAccessEndpointOutput() ImageBuilderAccessEndpointOutput {
	return o
}

func (o ImageBuilderAccessEndpointOutput) ToImageBuilderAccessEndpointOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointOutput {
	return o
}

func (o ImageBuilderAccessEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v ImageBuilderAccessEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

func (o ImageBuilderAccessEndpointOutput) VpceId() pulumi.StringOutput {
	return o.ApplyT(func(v ImageBuilderAccessEndpoint) string { return v.VpceId }).(pulumi.StringOutput)
}

type ImageBuilderAccessEndpointArrayOutput struct{ *pulumi.OutputState }

func (ImageBuilderAccessEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (o ImageBuilderAccessEndpointArrayOutput) ToImageBuilderAccessEndpointArrayOutput() ImageBuilderAccessEndpointArrayOutput {
	return o
}

func (o ImageBuilderAccessEndpointArrayOutput) ToImageBuilderAccessEndpointArrayOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointArrayOutput {
	return o
}

func (o ImageBuilderAccessEndpointArrayOutput) Index(i pulumi.IntInput) ImageBuilderAccessEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageBuilderAccessEndpoint {
		return vs[0].([]ImageBuilderAccessEndpoint)[vs[1].(int)]
	}).(ImageBuilderAccessEndpointOutput)
}

type ImageBuilderDomainJoinInfo struct {
	DirectoryName                       *string `pulumi:"directoryName"`
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
}

// ImageBuilderDomainJoinInfoInput is an input type that accepts ImageBuilderDomainJoinInfoArgs and ImageBuilderDomainJoinInfoOutput values.
// You can construct a concrete instance of `ImageBuilderDomainJoinInfoInput` via:
//
//          ImageBuilderDomainJoinInfoArgs{...}
type ImageBuilderDomainJoinInfoInput interface {
	pulumi.Input

	ToImageBuilderDomainJoinInfoOutput() ImageBuilderDomainJoinInfoOutput
	ToImageBuilderDomainJoinInfoOutputWithContext(context.Context) ImageBuilderDomainJoinInfoOutput
}

type ImageBuilderDomainJoinInfoArgs struct {
	DirectoryName                       pulumi.StringPtrInput `pulumi:"directoryName"`
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
}

func (ImageBuilderDomainJoinInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoOutput() ImageBuilderDomainJoinInfoOutput {
	return i.ToImageBuilderDomainJoinInfoOutputWithContext(context.Background())
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderDomainJoinInfoOutput)
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return i.ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderDomainJoinInfoOutput).ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx)
}

// ImageBuilderDomainJoinInfoPtrInput is an input type that accepts ImageBuilderDomainJoinInfoArgs, ImageBuilderDomainJoinInfoPtr and ImageBuilderDomainJoinInfoPtrOutput values.
// You can construct a concrete instance of `ImageBuilderDomainJoinInfoPtrInput` via:
//
//          ImageBuilderDomainJoinInfoArgs{...}
//
//  or:
//
//          nil
type ImageBuilderDomainJoinInfoPtrInput interface {
	pulumi.Input

	ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput
	ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Context) ImageBuilderDomainJoinInfoPtrOutput
}

type imageBuilderDomainJoinInfoPtrType ImageBuilderDomainJoinInfoArgs

func ImageBuilderDomainJoinInfoPtr(v *ImageBuilderDomainJoinInfoArgs) ImageBuilderDomainJoinInfoPtrInput {
	return (*imageBuilderDomainJoinInfoPtrType)(v)
}

func (*imageBuilderDomainJoinInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (i *imageBuilderDomainJoinInfoPtrType) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return i.ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (i *imageBuilderDomainJoinInfoPtrType) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderDomainJoinInfoPtrOutput)
}

type ImageBuilderDomainJoinInfoOutput struct{ *pulumi.OutputState }

func (ImageBuilderDomainJoinInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoOutput() ImageBuilderDomainJoinInfoOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return o.ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageBuilderDomainJoinInfo) *ImageBuilderDomainJoinInfo {
		return &v
	}).(ImageBuilderDomainJoinInfoPtrOutput)
}

func (o ImageBuilderDomainJoinInfoOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBuilderDomainJoinInfo) *string { return v.DirectoryName }).(pulumi.StringPtrOutput)
}

func (o ImageBuilderDomainJoinInfoOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBuilderDomainJoinInfo) *string { return v.OrganizationalUnitDistinguishedName }).(pulumi.StringPtrOutput)
}

type ImageBuilderDomainJoinInfoPtrOutput struct{ *pulumi.OutputState }

func (ImageBuilderDomainJoinInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (o ImageBuilderDomainJoinInfoPtrOutput) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoPtrOutput) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoPtrOutput) Elem() ImageBuilderDomainJoinInfoOutput {
	return o.ApplyT(func(v *ImageBuilderDomainJoinInfo) ImageBuilderDomainJoinInfo {
		if v != nil {
			return *v
		}
		var ret ImageBuilderDomainJoinInfo
		return ret
	}).(ImageBuilderDomainJoinInfoOutput)
}

func (o ImageBuilderDomainJoinInfoPtrOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageBuilderDomainJoinInfo) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryName
	}).(pulumi.StringPtrOutput)
}

func (o ImageBuilderDomainJoinInfoPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageBuilderDomainJoinInfo) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

type ImageBuilderTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ImageBuilderTagInput is an input type that accepts ImageBuilderTagArgs and ImageBuilderTagOutput values.
// You can construct a concrete instance of `ImageBuilderTagInput` via:
//
//          ImageBuilderTagArgs{...}
type ImageBuilderTagInput interface {
	pulumi.Input

	ToImageBuilderTagOutput() ImageBuilderTagOutput
	ToImageBuilderTagOutputWithContext(context.Context) ImageBuilderTagOutput
}

type ImageBuilderTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ImageBuilderTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderTag)(nil)).Elem()
}

func (i ImageBuilderTagArgs) ToImageBuilderTagOutput() ImageBuilderTagOutput {
	return i.ToImageBuilderTagOutputWithContext(context.Background())
}

func (i ImageBuilderTagArgs) ToImageBuilderTagOutputWithContext(ctx context.Context) ImageBuilderTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderTagOutput)
}

// ImageBuilderTagArrayInput is an input type that accepts ImageBuilderTagArray and ImageBuilderTagArrayOutput values.
// You can construct a concrete instance of `ImageBuilderTagArrayInput` via:
//
//          ImageBuilderTagArray{ ImageBuilderTagArgs{...} }
type ImageBuilderTagArrayInput interface {
	pulumi.Input

	ToImageBuilderTagArrayOutput() ImageBuilderTagArrayOutput
	ToImageBuilderTagArrayOutputWithContext(context.Context) ImageBuilderTagArrayOutput
}

type ImageBuilderTagArray []ImageBuilderTagInput

func (ImageBuilderTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBuilderTag)(nil)).Elem()
}

func (i ImageBuilderTagArray) ToImageBuilderTagArrayOutput() ImageBuilderTagArrayOutput {
	return i.ToImageBuilderTagArrayOutputWithContext(context.Background())
}

func (i ImageBuilderTagArray) ToImageBuilderTagArrayOutputWithContext(ctx context.Context) ImageBuilderTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderTagArrayOutput)
}

type ImageBuilderTagOutput struct{ *pulumi.OutputState }

func (ImageBuilderTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderTag)(nil)).Elem()
}

func (o ImageBuilderTagOutput) ToImageBuilderTagOutput() ImageBuilderTagOutput {
	return o
}

func (o ImageBuilderTagOutput) ToImageBuilderTagOutputWithContext(ctx context.Context) ImageBuilderTagOutput {
	return o
}

func (o ImageBuilderTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ImageBuilderTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ImageBuilderTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ImageBuilderTag) string { return v.Value }).(pulumi.StringOutput)
}

type ImageBuilderTagArrayOutput struct{ *pulumi.OutputState }

func (ImageBuilderTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBuilderTag)(nil)).Elem()
}

func (o ImageBuilderTagArrayOutput) ToImageBuilderTagArrayOutput() ImageBuilderTagArrayOutput {
	return o
}

func (o ImageBuilderTagArrayOutput) ToImageBuilderTagArrayOutputWithContext(ctx context.Context) ImageBuilderTagArrayOutput {
	return o
}

func (o ImageBuilderTagArrayOutput) Index(i pulumi.IntInput) ImageBuilderTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageBuilderTag {
		return vs[0].([]ImageBuilderTag)[vs[1].(int)]
	}).(ImageBuilderTagOutput)
}

type ImageBuilderVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
}

// ImageBuilderVpcConfigInput is an input type that accepts ImageBuilderVpcConfigArgs and ImageBuilderVpcConfigOutput values.
// You can construct a concrete instance of `ImageBuilderVpcConfigInput` via:
//
//          ImageBuilderVpcConfigArgs{...}
type ImageBuilderVpcConfigInput interface {
	pulumi.Input

	ToImageBuilderVpcConfigOutput() ImageBuilderVpcConfigOutput
	ToImageBuilderVpcConfigOutputWithContext(context.Context) ImageBuilderVpcConfigOutput
}

type ImageBuilderVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ImageBuilderVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderVpcConfig)(nil)).Elem()
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigOutput() ImageBuilderVpcConfigOutput {
	return i.ToImageBuilderVpcConfigOutputWithContext(context.Background())
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigOutputWithContext(ctx context.Context) ImageBuilderVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderVpcConfigOutput)
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return i.ToImageBuilderVpcConfigPtrOutputWithContext(context.Background())
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderVpcConfigOutput).ToImageBuilderVpcConfigPtrOutputWithContext(ctx)
}

// ImageBuilderVpcConfigPtrInput is an input type that accepts ImageBuilderVpcConfigArgs, ImageBuilderVpcConfigPtr and ImageBuilderVpcConfigPtrOutput values.
// You can construct a concrete instance of `ImageBuilderVpcConfigPtrInput` via:
//
//          ImageBuilderVpcConfigArgs{...}
//
//  or:
//
//          nil
type ImageBuilderVpcConfigPtrInput interface {
	pulumi.Input

	ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput
	ToImageBuilderVpcConfigPtrOutputWithContext(context.Context) ImageBuilderVpcConfigPtrOutput
}

type imageBuilderVpcConfigPtrType ImageBuilderVpcConfigArgs

func ImageBuilderVpcConfigPtr(v *ImageBuilderVpcConfigArgs) ImageBuilderVpcConfigPtrInput {
	return (*imageBuilderVpcConfigPtrType)(v)
}

func (*imageBuilderVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderVpcConfig)(nil)).Elem()
}

func (i *imageBuilderVpcConfigPtrType) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return i.ToImageBuilderVpcConfigPtrOutputWithContext(context.Background())
}

func (i *imageBuilderVpcConfigPtrType) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderVpcConfigPtrOutput)
}

type ImageBuilderVpcConfigOutput struct{ *pulumi.OutputState }

func (ImageBuilderVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderVpcConfig)(nil)).Elem()
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigOutput() ImageBuilderVpcConfigOutput {
	return o
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigOutputWithContext(ctx context.Context) ImageBuilderVpcConfigOutput {
	return o
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return o.ToImageBuilderVpcConfigPtrOutputWithContext(context.Background())
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageBuilderVpcConfig) *ImageBuilderVpcConfig {
		return &v
	}).(ImageBuilderVpcConfigPtrOutput)
}

func (o ImageBuilderVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageBuilderVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ImageBuilderVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageBuilderVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ImageBuilderVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ImageBuilderVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderVpcConfig)(nil)).Elem()
}

func (o ImageBuilderVpcConfigPtrOutput) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return o
}

func (o ImageBuilderVpcConfigPtrOutput) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return o
}

func (o ImageBuilderVpcConfigPtrOutput) Elem() ImageBuilderVpcConfigOutput {
	return o.ApplyT(func(v *ImageBuilderVpcConfig) ImageBuilderVpcConfig {
		if v != nil {
			return *v
		}
		var ret ImageBuilderVpcConfig
		return ret
	}).(ImageBuilderVpcConfigOutput)
}

func (o ImageBuilderVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImageBuilderVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ImageBuilderVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImageBuilderVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type StackAccessEndpoint struct {
	EndpointType string `pulumi:"endpointType"`
	VpceId       string `pulumi:"vpceId"`
}

// StackAccessEndpointInput is an input type that accepts StackAccessEndpointArgs and StackAccessEndpointOutput values.
// You can construct a concrete instance of `StackAccessEndpointInput` via:
//
//          StackAccessEndpointArgs{...}
type StackAccessEndpointInput interface {
	pulumi.Input

	ToStackAccessEndpointOutput() StackAccessEndpointOutput
	ToStackAccessEndpointOutputWithContext(context.Context) StackAccessEndpointOutput
}

type StackAccessEndpointArgs struct {
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	VpceId       pulumi.StringInput `pulumi:"vpceId"`
}

func (StackAccessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackAccessEndpoint)(nil)).Elem()
}

func (i StackAccessEndpointArgs) ToStackAccessEndpointOutput() StackAccessEndpointOutput {
	return i.ToStackAccessEndpointOutputWithContext(context.Background())
}

func (i StackAccessEndpointArgs) ToStackAccessEndpointOutputWithContext(ctx context.Context) StackAccessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackAccessEndpointOutput)
}

// StackAccessEndpointArrayInput is an input type that accepts StackAccessEndpointArray and StackAccessEndpointArrayOutput values.
// You can construct a concrete instance of `StackAccessEndpointArrayInput` via:
//
//          StackAccessEndpointArray{ StackAccessEndpointArgs{...} }
type StackAccessEndpointArrayInput interface {
	pulumi.Input

	ToStackAccessEndpointArrayOutput() StackAccessEndpointArrayOutput
	ToStackAccessEndpointArrayOutputWithContext(context.Context) StackAccessEndpointArrayOutput
}

type StackAccessEndpointArray []StackAccessEndpointInput

func (StackAccessEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackAccessEndpoint)(nil)).Elem()
}

func (i StackAccessEndpointArray) ToStackAccessEndpointArrayOutput() StackAccessEndpointArrayOutput {
	return i.ToStackAccessEndpointArrayOutputWithContext(context.Background())
}

func (i StackAccessEndpointArray) ToStackAccessEndpointArrayOutputWithContext(ctx context.Context) StackAccessEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackAccessEndpointArrayOutput)
}

type StackAccessEndpointOutput struct{ *pulumi.OutputState }

func (StackAccessEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackAccessEndpoint)(nil)).Elem()
}

func (o StackAccessEndpointOutput) ToStackAccessEndpointOutput() StackAccessEndpointOutput {
	return o
}

func (o StackAccessEndpointOutput) ToStackAccessEndpointOutputWithContext(ctx context.Context) StackAccessEndpointOutput {
	return o
}

func (o StackAccessEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v StackAccessEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

func (o StackAccessEndpointOutput) VpceId() pulumi.StringOutput {
	return o.ApplyT(func(v StackAccessEndpoint) string { return v.VpceId }).(pulumi.StringOutput)
}

type StackAccessEndpointArrayOutput struct{ *pulumi.OutputState }

func (StackAccessEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackAccessEndpoint)(nil)).Elem()
}

func (o StackAccessEndpointArrayOutput) ToStackAccessEndpointArrayOutput() StackAccessEndpointArrayOutput {
	return o
}

func (o StackAccessEndpointArrayOutput) ToStackAccessEndpointArrayOutputWithContext(ctx context.Context) StackAccessEndpointArrayOutput {
	return o
}

func (o StackAccessEndpointArrayOutput) Index(i pulumi.IntInput) StackAccessEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackAccessEndpoint {
		return vs[0].([]StackAccessEndpoint)[vs[1].(int)]
	}).(StackAccessEndpointOutput)
}

type StackApplicationSettings struct {
	Enabled       bool    `pulumi:"enabled"`
	SettingsGroup *string `pulumi:"settingsGroup"`
}

// StackApplicationSettingsInput is an input type that accepts StackApplicationSettingsArgs and StackApplicationSettingsOutput values.
// You can construct a concrete instance of `StackApplicationSettingsInput` via:
//
//          StackApplicationSettingsArgs{...}
type StackApplicationSettingsInput interface {
	pulumi.Input

	ToStackApplicationSettingsOutput() StackApplicationSettingsOutput
	ToStackApplicationSettingsOutputWithContext(context.Context) StackApplicationSettingsOutput
}

type StackApplicationSettingsArgs struct {
	Enabled       pulumi.BoolInput      `pulumi:"enabled"`
	SettingsGroup pulumi.StringPtrInput `pulumi:"settingsGroup"`
}

func (StackApplicationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackApplicationSettings)(nil)).Elem()
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsOutput() StackApplicationSettingsOutput {
	return i.ToStackApplicationSettingsOutputWithContext(context.Background())
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsOutputWithContext(ctx context.Context) StackApplicationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackApplicationSettingsOutput)
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return i.ToStackApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackApplicationSettingsOutput).ToStackApplicationSettingsPtrOutputWithContext(ctx)
}

// StackApplicationSettingsPtrInput is an input type that accepts StackApplicationSettingsArgs, StackApplicationSettingsPtr and StackApplicationSettingsPtrOutput values.
// You can construct a concrete instance of `StackApplicationSettingsPtrInput` via:
//
//          StackApplicationSettingsArgs{...}
//
//  or:
//
//          nil
type StackApplicationSettingsPtrInput interface {
	pulumi.Input

	ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput
	ToStackApplicationSettingsPtrOutputWithContext(context.Context) StackApplicationSettingsPtrOutput
}

type stackApplicationSettingsPtrType StackApplicationSettingsArgs

func StackApplicationSettingsPtr(v *StackApplicationSettingsArgs) StackApplicationSettingsPtrInput {
	return (*stackApplicationSettingsPtrType)(v)
}

func (*stackApplicationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackApplicationSettings)(nil)).Elem()
}

func (i *stackApplicationSettingsPtrType) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return i.ToStackApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i *stackApplicationSettingsPtrType) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackApplicationSettingsPtrOutput)
}

type StackApplicationSettingsOutput struct{ *pulumi.OutputState }

func (StackApplicationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackApplicationSettings)(nil)).Elem()
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsOutput() StackApplicationSettingsOutput {
	return o
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsOutputWithContext(ctx context.Context) StackApplicationSettingsOutput {
	return o
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return o.ToStackApplicationSettingsPtrOutputWithContext(context.Background())
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackApplicationSettings) *StackApplicationSettings {
		return &v
	}).(StackApplicationSettingsPtrOutput)
}

func (o StackApplicationSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StackApplicationSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o StackApplicationSettingsOutput) SettingsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackApplicationSettings) *string { return v.SettingsGroup }).(pulumi.StringPtrOutput)
}

type StackApplicationSettingsPtrOutput struct{ *pulumi.OutputState }

func (StackApplicationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackApplicationSettings)(nil)).Elem()
}

func (o StackApplicationSettingsPtrOutput) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return o
}

func (o StackApplicationSettingsPtrOutput) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return o
}

func (o StackApplicationSettingsPtrOutput) Elem() StackApplicationSettingsOutput {
	return o.ApplyT(func(v *StackApplicationSettings) StackApplicationSettings {
		if v != nil {
			return *v
		}
		var ret StackApplicationSettings
		return ret
	}).(StackApplicationSettingsOutput)
}

func (o StackApplicationSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackApplicationSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o StackApplicationSettingsPtrOutput) SettingsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackApplicationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SettingsGroup
	}).(pulumi.StringPtrOutput)
}

type StackStorageConnector struct {
	ConnectorType      string   `pulumi:"connectorType"`
	Domains            []string `pulumi:"domains"`
	ResourceIdentifier *string  `pulumi:"resourceIdentifier"`
}

// StackStorageConnectorInput is an input type that accepts StackStorageConnectorArgs and StackStorageConnectorOutput values.
// You can construct a concrete instance of `StackStorageConnectorInput` via:
//
//          StackStorageConnectorArgs{...}
type StackStorageConnectorInput interface {
	pulumi.Input

	ToStackStorageConnectorOutput() StackStorageConnectorOutput
	ToStackStorageConnectorOutputWithContext(context.Context) StackStorageConnectorOutput
}

type StackStorageConnectorArgs struct {
	ConnectorType      pulumi.StringInput      `pulumi:"connectorType"`
	Domains            pulumi.StringArrayInput `pulumi:"domains"`
	ResourceIdentifier pulumi.StringPtrInput   `pulumi:"resourceIdentifier"`
}

func (StackStorageConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackStorageConnector)(nil)).Elem()
}

func (i StackStorageConnectorArgs) ToStackStorageConnectorOutput() StackStorageConnectorOutput {
	return i.ToStackStorageConnectorOutputWithContext(context.Background())
}

func (i StackStorageConnectorArgs) ToStackStorageConnectorOutputWithContext(ctx context.Context) StackStorageConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackStorageConnectorOutput)
}

// StackStorageConnectorArrayInput is an input type that accepts StackStorageConnectorArray and StackStorageConnectorArrayOutput values.
// You can construct a concrete instance of `StackStorageConnectorArrayInput` via:
//
//          StackStorageConnectorArray{ StackStorageConnectorArgs{...} }
type StackStorageConnectorArrayInput interface {
	pulumi.Input

	ToStackStorageConnectorArrayOutput() StackStorageConnectorArrayOutput
	ToStackStorageConnectorArrayOutputWithContext(context.Context) StackStorageConnectorArrayOutput
}

type StackStorageConnectorArray []StackStorageConnectorInput

func (StackStorageConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackStorageConnector)(nil)).Elem()
}

func (i StackStorageConnectorArray) ToStackStorageConnectorArrayOutput() StackStorageConnectorArrayOutput {
	return i.ToStackStorageConnectorArrayOutputWithContext(context.Background())
}

func (i StackStorageConnectorArray) ToStackStorageConnectorArrayOutputWithContext(ctx context.Context) StackStorageConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackStorageConnectorArrayOutput)
}

type StackStorageConnectorOutput struct{ *pulumi.OutputState }

func (StackStorageConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackStorageConnector)(nil)).Elem()
}

func (o StackStorageConnectorOutput) ToStackStorageConnectorOutput() StackStorageConnectorOutput {
	return o
}

func (o StackStorageConnectorOutput) ToStackStorageConnectorOutputWithContext(ctx context.Context) StackStorageConnectorOutput {
	return o
}

func (o StackStorageConnectorOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v StackStorageConnector) string { return v.ConnectorType }).(pulumi.StringOutput)
}

func (o StackStorageConnectorOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackStorageConnector) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

func (o StackStorageConnectorOutput) ResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackStorageConnector) *string { return v.ResourceIdentifier }).(pulumi.StringPtrOutput)
}

type StackStorageConnectorArrayOutput struct{ *pulumi.OutputState }

func (StackStorageConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackStorageConnector)(nil)).Elem()
}

func (o StackStorageConnectorArrayOutput) ToStackStorageConnectorArrayOutput() StackStorageConnectorArrayOutput {
	return o
}

func (o StackStorageConnectorArrayOutput) ToStackStorageConnectorArrayOutputWithContext(ctx context.Context) StackStorageConnectorArrayOutput {
	return o
}

func (o StackStorageConnectorArrayOutput) Index(i pulumi.IntInput) StackStorageConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackStorageConnector {
		return vs[0].([]StackStorageConnector)[vs[1].(int)]
	}).(StackStorageConnectorOutput)
}

type StackTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// StackTagInput is an input type that accepts StackTagArgs and StackTagOutput values.
// You can construct a concrete instance of `StackTagInput` via:
//
//          StackTagArgs{...}
type StackTagInput interface {
	pulumi.Input

	ToStackTagOutput() StackTagOutput
	ToStackTagOutputWithContext(context.Context) StackTagOutput
}

type StackTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (StackTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackTag)(nil)).Elem()
}

func (i StackTagArgs) ToStackTagOutput() StackTagOutput {
	return i.ToStackTagOutputWithContext(context.Background())
}

func (i StackTagArgs) ToStackTagOutputWithContext(ctx context.Context) StackTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackTagOutput)
}

// StackTagArrayInput is an input type that accepts StackTagArray and StackTagArrayOutput values.
// You can construct a concrete instance of `StackTagArrayInput` via:
//
//          StackTagArray{ StackTagArgs{...} }
type StackTagArrayInput interface {
	pulumi.Input

	ToStackTagArrayOutput() StackTagArrayOutput
	ToStackTagArrayOutputWithContext(context.Context) StackTagArrayOutput
}

type StackTagArray []StackTagInput

func (StackTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackTag)(nil)).Elem()
}

func (i StackTagArray) ToStackTagArrayOutput() StackTagArrayOutput {
	return i.ToStackTagArrayOutputWithContext(context.Background())
}

func (i StackTagArray) ToStackTagArrayOutputWithContext(ctx context.Context) StackTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackTagArrayOutput)
}

type StackTagOutput struct{ *pulumi.OutputState }

func (StackTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackTag)(nil)).Elem()
}

func (o StackTagOutput) ToStackTagOutput() StackTagOutput {
	return o
}

func (o StackTagOutput) ToStackTagOutputWithContext(ctx context.Context) StackTagOutput {
	return o
}

func (o StackTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StackTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o StackTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StackTag) string { return v.Value }).(pulumi.StringOutput)
}

type StackTagArrayOutput struct{ *pulumi.OutputState }

func (StackTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackTag)(nil)).Elem()
}

func (o StackTagArrayOutput) ToStackTagArrayOutput() StackTagArrayOutput {
	return o
}

func (o StackTagArrayOutput) ToStackTagArrayOutputWithContext(ctx context.Context) StackTagArrayOutput {
	return o
}

func (o StackTagArrayOutput) Index(i pulumi.IntInput) StackTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackTag {
		return vs[0].([]StackTag)[vs[1].(int)]
	}).(StackTagOutput)
}

type StackUserSetting struct {
	Action     string `pulumi:"action"`
	Permission string `pulumi:"permission"`
}

// StackUserSettingInput is an input type that accepts StackUserSettingArgs and StackUserSettingOutput values.
// You can construct a concrete instance of `StackUserSettingInput` via:
//
//          StackUserSettingArgs{...}
type StackUserSettingInput interface {
	pulumi.Input

	ToStackUserSettingOutput() StackUserSettingOutput
	ToStackUserSettingOutputWithContext(context.Context) StackUserSettingOutput
}

type StackUserSettingArgs struct {
	Action     pulumi.StringInput `pulumi:"action"`
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (StackUserSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackUserSetting)(nil)).Elem()
}

func (i StackUserSettingArgs) ToStackUserSettingOutput() StackUserSettingOutput {
	return i.ToStackUserSettingOutputWithContext(context.Background())
}

func (i StackUserSettingArgs) ToStackUserSettingOutputWithContext(ctx context.Context) StackUserSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackUserSettingOutput)
}

// StackUserSettingArrayInput is an input type that accepts StackUserSettingArray and StackUserSettingArrayOutput values.
// You can construct a concrete instance of `StackUserSettingArrayInput` via:
//
//          StackUserSettingArray{ StackUserSettingArgs{...} }
type StackUserSettingArrayInput interface {
	pulumi.Input

	ToStackUserSettingArrayOutput() StackUserSettingArrayOutput
	ToStackUserSettingArrayOutputWithContext(context.Context) StackUserSettingArrayOutput
}

type StackUserSettingArray []StackUserSettingInput

func (StackUserSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackUserSetting)(nil)).Elem()
}

func (i StackUserSettingArray) ToStackUserSettingArrayOutput() StackUserSettingArrayOutput {
	return i.ToStackUserSettingArrayOutputWithContext(context.Background())
}

func (i StackUserSettingArray) ToStackUserSettingArrayOutputWithContext(ctx context.Context) StackUserSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackUserSettingArrayOutput)
}

type StackUserSettingOutput struct{ *pulumi.OutputState }

func (StackUserSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackUserSetting)(nil)).Elem()
}

func (o StackUserSettingOutput) ToStackUserSettingOutput() StackUserSettingOutput {
	return o
}

func (o StackUserSettingOutput) ToStackUserSettingOutputWithContext(ctx context.Context) StackUserSettingOutput {
	return o
}

func (o StackUserSettingOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v StackUserSetting) string { return v.Action }).(pulumi.StringOutput)
}

func (o StackUserSettingOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v StackUserSetting) string { return v.Permission }).(pulumi.StringOutput)
}

type StackUserSettingArrayOutput struct{ *pulumi.OutputState }

func (StackUserSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackUserSetting)(nil)).Elem()
}

func (o StackUserSettingArrayOutput) ToStackUserSettingArrayOutput() StackUserSettingArrayOutput {
	return o
}

func (o StackUserSettingArrayOutput) ToStackUserSettingArrayOutputWithContext(ctx context.Context) StackUserSettingArrayOutput {
	return o
}

func (o StackUserSettingArrayOutput) Index(i pulumi.IntInput) StackUserSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackUserSetting {
		return vs[0].([]StackUserSetting)[vs[1].(int)]
	}).(StackUserSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockS3LocationInput)(nil)).Elem(), AppBlockS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockS3LocationPtrInput)(nil)).Elem(), AppBlockS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockScriptDetailsInput)(nil)).Elem(), AppBlockScriptDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockScriptDetailsPtrInput)(nil)).Elem(), AppBlockScriptDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockTagInput)(nil)).Elem(), AppBlockTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockTagArrayInput)(nil)).Elem(), AppBlockTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationS3LocationInput)(nil)).Elem(), ApplicationS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationS3LocationPtrInput)(nil)).Elem(), ApplicationS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTagInput)(nil)).Elem(), ApplicationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTagArrayInput)(nil)).Elem(), ApplicationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryConfigServiceAccountCredentialsInput)(nil)).Elem(), DirectoryConfigServiceAccountCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryConfigServiceAccountCredentialsPtrInput)(nil)).Elem(), DirectoryConfigServiceAccountCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetComputeCapacityInput)(nil)).Elem(), FleetComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetComputeCapacityPtrInput)(nil)).Elem(), FleetComputeCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetDomainJoinInfoInput)(nil)).Elem(), FleetDomainJoinInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetDomainJoinInfoPtrInput)(nil)).Elem(), FleetDomainJoinInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetTagInput)(nil)).Elem(), FleetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetTagArrayInput)(nil)).Elem(), FleetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetVpcConfigInput)(nil)).Elem(), FleetVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetVpcConfigPtrInput)(nil)).Elem(), FleetVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderAccessEndpointInput)(nil)).Elem(), ImageBuilderAccessEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderAccessEndpointArrayInput)(nil)).Elem(), ImageBuilderAccessEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderDomainJoinInfoInput)(nil)).Elem(), ImageBuilderDomainJoinInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderDomainJoinInfoPtrInput)(nil)).Elem(), ImageBuilderDomainJoinInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderTagInput)(nil)).Elem(), ImageBuilderTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderTagArrayInput)(nil)).Elem(), ImageBuilderTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderVpcConfigInput)(nil)).Elem(), ImageBuilderVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderVpcConfigPtrInput)(nil)).Elem(), ImageBuilderVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackAccessEndpointInput)(nil)).Elem(), StackAccessEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackAccessEndpointArrayInput)(nil)).Elem(), StackAccessEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackApplicationSettingsInput)(nil)).Elem(), StackApplicationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackApplicationSettingsPtrInput)(nil)).Elem(), StackApplicationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackStorageConnectorInput)(nil)).Elem(), StackStorageConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackStorageConnectorArrayInput)(nil)).Elem(), StackStorageConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackTagInput)(nil)).Elem(), StackTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackTagArrayInput)(nil)).Elem(), StackTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackUserSettingInput)(nil)).Elem(), StackUserSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackUserSettingArrayInput)(nil)).Elem(), StackUserSettingArray{})
	pulumi.RegisterOutputType(AppBlockS3LocationOutput{})
	pulumi.RegisterOutputType(AppBlockS3LocationPtrOutput{})
	pulumi.RegisterOutputType(AppBlockScriptDetailsOutput{})
	pulumi.RegisterOutputType(AppBlockScriptDetailsPtrOutput{})
	pulumi.RegisterOutputType(AppBlockTagOutput{})
	pulumi.RegisterOutputType(AppBlockTagArrayOutput{})
	pulumi.RegisterOutputType(ApplicationS3LocationOutput{})
	pulumi.RegisterOutputType(ApplicationS3LocationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationTagOutput{})
	pulumi.RegisterOutputType(ApplicationTagArrayOutput{})
	pulumi.RegisterOutputType(DirectoryConfigServiceAccountCredentialsOutput{})
	pulumi.RegisterOutputType(DirectoryConfigServiceAccountCredentialsPtrOutput{})
	pulumi.RegisterOutputType(FleetComputeCapacityOutput{})
	pulumi.RegisterOutputType(FleetComputeCapacityPtrOutput{})
	pulumi.RegisterOutputType(FleetDomainJoinInfoOutput{})
	pulumi.RegisterOutputType(FleetDomainJoinInfoPtrOutput{})
	pulumi.RegisterOutputType(FleetTagOutput{})
	pulumi.RegisterOutputType(FleetTagArrayOutput{})
	pulumi.RegisterOutputType(FleetVpcConfigOutput{})
	pulumi.RegisterOutputType(FleetVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ImageBuilderAccessEndpointOutput{})
	pulumi.RegisterOutputType(ImageBuilderAccessEndpointArrayOutput{})
	pulumi.RegisterOutputType(ImageBuilderDomainJoinInfoOutput{})
	pulumi.RegisterOutputType(ImageBuilderDomainJoinInfoPtrOutput{})
	pulumi.RegisterOutputType(ImageBuilderTagOutput{})
	pulumi.RegisterOutputType(ImageBuilderTagArrayOutput{})
	pulumi.RegisterOutputType(ImageBuilderVpcConfigOutput{})
	pulumi.RegisterOutputType(ImageBuilderVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(StackAccessEndpointOutput{})
	pulumi.RegisterOutputType(StackAccessEndpointArrayOutput{})
	pulumi.RegisterOutputType(StackApplicationSettingsOutput{})
	pulumi.RegisterOutputType(StackApplicationSettingsPtrOutput{})
	pulumi.RegisterOutputType(StackStorageConnectorOutput{})
	pulumi.RegisterOutputType(StackStorageConnectorArrayOutput{})
	pulumi.RegisterOutputType(StackTagOutput{})
	pulumi.RegisterOutputType(StackTagArrayOutput{})
	pulumi.RegisterOutputType(StackUserSettingOutput{})
	pulumi.RegisterOutputType(StackUserSettingArrayOutput{})
}
