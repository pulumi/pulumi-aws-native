// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppBlockBuilderAccessEndpoint struct {
	// The type of interface endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The identifier (ID) of the VPC in which the interface endpoint is used.
	VpceId string `pulumi:"vpceId"`
}

// AppBlockBuilderAccessEndpointInput is an input type that accepts AppBlockBuilderAccessEndpointArgs and AppBlockBuilderAccessEndpointOutput values.
// You can construct a concrete instance of `AppBlockBuilderAccessEndpointInput` via:
//
//	AppBlockBuilderAccessEndpointArgs{...}
type AppBlockBuilderAccessEndpointInput interface {
	pulumi.Input

	ToAppBlockBuilderAccessEndpointOutput() AppBlockBuilderAccessEndpointOutput
	ToAppBlockBuilderAccessEndpointOutputWithContext(context.Context) AppBlockBuilderAccessEndpointOutput
}

type AppBlockBuilderAccessEndpointArgs struct {
	// The type of interface endpoint.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The identifier (ID) of the VPC in which the interface endpoint is used.
	VpceId pulumi.StringInput `pulumi:"vpceId"`
}

func (AppBlockBuilderAccessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockBuilderAccessEndpoint)(nil)).Elem()
}

func (i AppBlockBuilderAccessEndpointArgs) ToAppBlockBuilderAccessEndpointOutput() AppBlockBuilderAccessEndpointOutput {
	return i.ToAppBlockBuilderAccessEndpointOutputWithContext(context.Background())
}

func (i AppBlockBuilderAccessEndpointArgs) ToAppBlockBuilderAccessEndpointOutputWithContext(ctx context.Context) AppBlockBuilderAccessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockBuilderAccessEndpointOutput)
}

// AppBlockBuilderAccessEndpointArrayInput is an input type that accepts AppBlockBuilderAccessEndpointArray and AppBlockBuilderAccessEndpointArrayOutput values.
// You can construct a concrete instance of `AppBlockBuilderAccessEndpointArrayInput` via:
//
//	AppBlockBuilderAccessEndpointArray{ AppBlockBuilderAccessEndpointArgs{...} }
type AppBlockBuilderAccessEndpointArrayInput interface {
	pulumi.Input

	ToAppBlockBuilderAccessEndpointArrayOutput() AppBlockBuilderAccessEndpointArrayOutput
	ToAppBlockBuilderAccessEndpointArrayOutputWithContext(context.Context) AppBlockBuilderAccessEndpointArrayOutput
}

type AppBlockBuilderAccessEndpointArray []AppBlockBuilderAccessEndpointInput

func (AppBlockBuilderAccessEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppBlockBuilderAccessEndpoint)(nil)).Elem()
}

func (i AppBlockBuilderAccessEndpointArray) ToAppBlockBuilderAccessEndpointArrayOutput() AppBlockBuilderAccessEndpointArrayOutput {
	return i.ToAppBlockBuilderAccessEndpointArrayOutputWithContext(context.Background())
}

func (i AppBlockBuilderAccessEndpointArray) ToAppBlockBuilderAccessEndpointArrayOutputWithContext(ctx context.Context) AppBlockBuilderAccessEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockBuilderAccessEndpointArrayOutput)
}

type AppBlockBuilderAccessEndpointOutput struct{ *pulumi.OutputState }

func (AppBlockBuilderAccessEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockBuilderAccessEndpoint)(nil)).Elem()
}

func (o AppBlockBuilderAccessEndpointOutput) ToAppBlockBuilderAccessEndpointOutput() AppBlockBuilderAccessEndpointOutput {
	return o
}

func (o AppBlockBuilderAccessEndpointOutput) ToAppBlockBuilderAccessEndpointOutputWithContext(ctx context.Context) AppBlockBuilderAccessEndpointOutput {
	return o
}

// The type of interface endpoint.
func (o AppBlockBuilderAccessEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockBuilderAccessEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The identifier (ID) of the VPC in which the interface endpoint is used.
func (o AppBlockBuilderAccessEndpointOutput) VpceId() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockBuilderAccessEndpoint) string { return v.VpceId }).(pulumi.StringOutput)
}

type AppBlockBuilderAccessEndpointArrayOutput struct{ *pulumi.OutputState }

func (AppBlockBuilderAccessEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppBlockBuilderAccessEndpoint)(nil)).Elem()
}

func (o AppBlockBuilderAccessEndpointArrayOutput) ToAppBlockBuilderAccessEndpointArrayOutput() AppBlockBuilderAccessEndpointArrayOutput {
	return o
}

func (o AppBlockBuilderAccessEndpointArrayOutput) ToAppBlockBuilderAccessEndpointArrayOutputWithContext(ctx context.Context) AppBlockBuilderAccessEndpointArrayOutput {
	return o
}

func (o AppBlockBuilderAccessEndpointArrayOutput) Index(i pulumi.IntInput) AppBlockBuilderAccessEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppBlockBuilderAccessEndpoint {
		return vs[0].([]AppBlockBuilderAccessEndpoint)[vs[1].(int)]
	}).(AppBlockBuilderAccessEndpointOutput)
}

type AppBlockBuilderTag struct {
	// The key of the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

type AppBlockBuilderVpcConfig struct {
	// The identifiers of the security groups for the fleet or image builder.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance. Fleet instances use one or more subnets. Image builder instances use one subnet.
	SubnetIds []string `pulumi:"subnetIds"`
}

// AppBlockBuilderVpcConfigInput is an input type that accepts AppBlockBuilderVpcConfigArgs and AppBlockBuilderVpcConfigOutput values.
// You can construct a concrete instance of `AppBlockBuilderVpcConfigInput` via:
//
//	AppBlockBuilderVpcConfigArgs{...}
type AppBlockBuilderVpcConfigInput interface {
	pulumi.Input

	ToAppBlockBuilderVpcConfigOutput() AppBlockBuilderVpcConfigOutput
	ToAppBlockBuilderVpcConfigOutputWithContext(context.Context) AppBlockBuilderVpcConfigOutput
}

type AppBlockBuilderVpcConfigArgs struct {
	// The identifiers of the security groups for the fleet or image builder.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance. Fleet instances use one or more subnets. Image builder instances use one subnet.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (AppBlockBuilderVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockBuilderVpcConfig)(nil)).Elem()
}

func (i AppBlockBuilderVpcConfigArgs) ToAppBlockBuilderVpcConfigOutput() AppBlockBuilderVpcConfigOutput {
	return i.ToAppBlockBuilderVpcConfigOutputWithContext(context.Background())
}

func (i AppBlockBuilderVpcConfigArgs) ToAppBlockBuilderVpcConfigOutputWithContext(ctx context.Context) AppBlockBuilderVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockBuilderVpcConfigOutput)
}

type AppBlockBuilderVpcConfigOutput struct{ *pulumi.OutputState }

func (AppBlockBuilderVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockBuilderVpcConfig)(nil)).Elem()
}

func (o AppBlockBuilderVpcConfigOutput) ToAppBlockBuilderVpcConfigOutput() AppBlockBuilderVpcConfigOutput {
	return o
}

func (o AppBlockBuilderVpcConfigOutput) ToAppBlockBuilderVpcConfigOutputWithContext(ctx context.Context) AppBlockBuilderVpcConfigOutput {
	return o
}

// The identifiers of the security groups for the fleet or image builder.
func (o AppBlockBuilderVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppBlockBuilderVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance. Fleet instances use one or more subnets. Image builder instances use one subnet.
func (o AppBlockBuilderVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppBlockBuilderVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type AppBlockBuilderVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (AppBlockBuilderVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockBuilderVpcConfig)(nil)).Elem()
}

func (o AppBlockBuilderVpcConfigPtrOutput) ToAppBlockBuilderVpcConfigPtrOutput() AppBlockBuilderVpcConfigPtrOutput {
	return o
}

func (o AppBlockBuilderVpcConfigPtrOutput) ToAppBlockBuilderVpcConfigPtrOutputWithContext(ctx context.Context) AppBlockBuilderVpcConfigPtrOutput {
	return o
}

func (o AppBlockBuilderVpcConfigPtrOutput) Elem() AppBlockBuilderVpcConfigOutput {
	return o.ApplyT(func(v *AppBlockBuilderVpcConfig) AppBlockBuilderVpcConfig {
		if v != nil {
			return *v
		}
		var ret AppBlockBuilderVpcConfig
		return ret
	}).(AppBlockBuilderVpcConfigOutput)
}

// The identifiers of the security groups for the fleet or image builder.
func (o AppBlockBuilderVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppBlockBuilderVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance. Fleet instances use one or more subnets. Image builder instances use one subnet.
func (o AppBlockBuilderVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppBlockBuilderVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type AppBlockS3Location struct {
	// The S3 bucket of the app block.
	S3Bucket string `pulumi:"s3Bucket"`
	// The S3 key of the S3 object of the virtual hard disk.
	//
	// This is required when it's used by `SetupScriptDetails` and `PostSetupScriptDetails` .
	S3Key *string `pulumi:"s3Key"`
}

// AppBlockS3LocationInput is an input type that accepts AppBlockS3LocationArgs and AppBlockS3LocationOutput values.
// You can construct a concrete instance of `AppBlockS3LocationInput` via:
//
//	AppBlockS3LocationArgs{...}
type AppBlockS3LocationInput interface {
	pulumi.Input

	ToAppBlockS3LocationOutput() AppBlockS3LocationOutput
	ToAppBlockS3LocationOutputWithContext(context.Context) AppBlockS3LocationOutput
}

type AppBlockS3LocationArgs struct {
	// The S3 bucket of the app block.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// The S3 key of the S3 object of the virtual hard disk.
	//
	// This is required when it's used by `SetupScriptDetails` and `PostSetupScriptDetails` .
	S3Key pulumi.StringPtrInput `pulumi:"s3Key"`
}

func (AppBlockS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockS3Location)(nil)).Elem()
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationOutput() AppBlockS3LocationOutput {
	return i.ToAppBlockS3LocationOutputWithContext(context.Background())
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationOutputWithContext(ctx context.Context) AppBlockS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockS3LocationOutput)
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return i.ToAppBlockS3LocationPtrOutputWithContext(context.Background())
}

func (i AppBlockS3LocationArgs) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockS3LocationOutput).ToAppBlockS3LocationPtrOutputWithContext(ctx)
}

// AppBlockS3LocationPtrInput is an input type that accepts AppBlockS3LocationArgs, AppBlockS3LocationPtr and AppBlockS3LocationPtrOutput values.
// You can construct a concrete instance of `AppBlockS3LocationPtrInput` via:
//
//	        AppBlockS3LocationArgs{...}
//
//	or:
//
//	        nil
type AppBlockS3LocationPtrInput interface {
	pulumi.Input

	ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput
	ToAppBlockS3LocationPtrOutputWithContext(context.Context) AppBlockS3LocationPtrOutput
}

type appBlockS3LocationPtrType AppBlockS3LocationArgs

func AppBlockS3LocationPtr(v *AppBlockS3LocationArgs) AppBlockS3LocationPtrInput {
	return (*appBlockS3LocationPtrType)(v)
}

func (*appBlockS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockS3Location)(nil)).Elem()
}

func (i *appBlockS3LocationPtrType) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return i.ToAppBlockS3LocationPtrOutputWithContext(context.Background())
}

func (i *appBlockS3LocationPtrType) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockS3LocationPtrOutput)
}

type AppBlockS3LocationOutput struct{ *pulumi.OutputState }

func (AppBlockS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockS3Location)(nil)).Elem()
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationOutput() AppBlockS3LocationOutput {
	return o
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationOutputWithContext(ctx context.Context) AppBlockS3LocationOutput {
	return o
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return o.ToAppBlockS3LocationPtrOutputWithContext(context.Background())
}

func (o AppBlockS3LocationOutput) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppBlockS3Location) *AppBlockS3Location {
		return &v
	}).(AppBlockS3LocationPtrOutput)
}

// The S3 bucket of the app block.
func (o AppBlockS3LocationOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockS3Location) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// The S3 key of the S3 object of the virtual hard disk.
//
// This is required when it's used by `SetupScriptDetails` and `PostSetupScriptDetails` .
func (o AppBlockS3LocationOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppBlockS3Location) *string { return v.S3Key }).(pulumi.StringPtrOutput)
}

type AppBlockS3LocationPtrOutput struct{ *pulumi.OutputState }

func (AppBlockS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockS3Location)(nil)).Elem()
}

func (o AppBlockS3LocationPtrOutput) ToAppBlockS3LocationPtrOutput() AppBlockS3LocationPtrOutput {
	return o
}

func (o AppBlockS3LocationPtrOutput) ToAppBlockS3LocationPtrOutputWithContext(ctx context.Context) AppBlockS3LocationPtrOutput {
	return o
}

func (o AppBlockS3LocationPtrOutput) Elem() AppBlockS3LocationOutput {
	return o.ApplyT(func(v *AppBlockS3Location) AppBlockS3Location {
		if v != nil {
			return *v
		}
		var ret AppBlockS3Location
		return ret
	}).(AppBlockS3LocationOutput)
}

// The S3 bucket of the app block.
func (o AppBlockS3LocationPtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

// The S3 key of the S3 object of the virtual hard disk.
//
// This is required when it's used by `SetupScriptDetails` and `PostSetupScriptDetails` .
func (o AppBlockS3LocationPtrOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockS3Location) *string {
		if v == nil {
			return nil
		}
		return v.S3Key
	}).(pulumi.StringPtrOutput)
}

type AppBlockScriptDetails struct {
	// The parameters used in the run path for the script.
	ExecutableParameters *string `pulumi:"executableParameters"`
	// The run path for the script.
	ExecutablePath string `pulumi:"executablePath"`
	// The S3 location of the app block.
	ScriptS3Location AppBlockS3Location `pulumi:"scriptS3Location"`
	// The run timeout, in seconds, for the script.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
}

// AppBlockScriptDetailsInput is an input type that accepts AppBlockScriptDetailsArgs and AppBlockScriptDetailsOutput values.
// You can construct a concrete instance of `AppBlockScriptDetailsInput` via:
//
//	AppBlockScriptDetailsArgs{...}
type AppBlockScriptDetailsInput interface {
	pulumi.Input

	ToAppBlockScriptDetailsOutput() AppBlockScriptDetailsOutput
	ToAppBlockScriptDetailsOutputWithContext(context.Context) AppBlockScriptDetailsOutput
}

type AppBlockScriptDetailsArgs struct {
	// The parameters used in the run path for the script.
	ExecutableParameters pulumi.StringPtrInput `pulumi:"executableParameters"`
	// The run path for the script.
	ExecutablePath pulumi.StringInput `pulumi:"executablePath"`
	// The S3 location of the app block.
	ScriptS3Location AppBlockS3LocationInput `pulumi:"scriptS3Location"`
	// The run timeout, in seconds, for the script.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
}

func (AppBlockScriptDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockScriptDetails)(nil)).Elem()
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsOutput() AppBlockScriptDetailsOutput {
	return i.ToAppBlockScriptDetailsOutputWithContext(context.Background())
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsOutputWithContext(ctx context.Context) AppBlockScriptDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockScriptDetailsOutput)
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return i.ToAppBlockScriptDetailsPtrOutputWithContext(context.Background())
}

func (i AppBlockScriptDetailsArgs) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockScriptDetailsOutput).ToAppBlockScriptDetailsPtrOutputWithContext(ctx)
}

// AppBlockScriptDetailsPtrInput is an input type that accepts AppBlockScriptDetailsArgs, AppBlockScriptDetailsPtr and AppBlockScriptDetailsPtrOutput values.
// You can construct a concrete instance of `AppBlockScriptDetailsPtrInput` via:
//
//	        AppBlockScriptDetailsArgs{...}
//
//	or:
//
//	        nil
type AppBlockScriptDetailsPtrInput interface {
	pulumi.Input

	ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput
	ToAppBlockScriptDetailsPtrOutputWithContext(context.Context) AppBlockScriptDetailsPtrOutput
}

type appBlockScriptDetailsPtrType AppBlockScriptDetailsArgs

func AppBlockScriptDetailsPtr(v *AppBlockScriptDetailsArgs) AppBlockScriptDetailsPtrInput {
	return (*appBlockScriptDetailsPtrType)(v)
}

func (*appBlockScriptDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockScriptDetails)(nil)).Elem()
}

func (i *appBlockScriptDetailsPtrType) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return i.ToAppBlockScriptDetailsPtrOutputWithContext(context.Background())
}

func (i *appBlockScriptDetailsPtrType) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockScriptDetailsPtrOutput)
}

type AppBlockScriptDetailsOutput struct{ *pulumi.OutputState }

func (AppBlockScriptDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockScriptDetails)(nil)).Elem()
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsOutput() AppBlockScriptDetailsOutput {
	return o
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsOutputWithContext(ctx context.Context) AppBlockScriptDetailsOutput {
	return o
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return o.ToAppBlockScriptDetailsPtrOutputWithContext(context.Background())
}

func (o AppBlockScriptDetailsOutput) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppBlockScriptDetails) *AppBlockScriptDetails {
		return &v
	}).(AppBlockScriptDetailsPtrOutput)
}

// The parameters used in the run path for the script.
func (o AppBlockScriptDetailsOutput) ExecutableParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) *string { return v.ExecutableParameters }).(pulumi.StringPtrOutput)
}

// The run path for the script.
func (o AppBlockScriptDetailsOutput) ExecutablePath() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) string { return v.ExecutablePath }).(pulumi.StringOutput)
}

// The S3 location of the app block.
func (o AppBlockScriptDetailsOutput) ScriptS3Location() AppBlockS3LocationOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) AppBlockS3Location { return v.ScriptS3Location }).(AppBlockS3LocationOutput)
}

// The run timeout, in seconds, for the script.
func (o AppBlockScriptDetailsOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v AppBlockScriptDetails) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

type AppBlockScriptDetailsPtrOutput struct{ *pulumi.OutputState }

func (AppBlockScriptDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBlockScriptDetails)(nil)).Elem()
}

func (o AppBlockScriptDetailsPtrOutput) ToAppBlockScriptDetailsPtrOutput() AppBlockScriptDetailsPtrOutput {
	return o
}

func (o AppBlockScriptDetailsPtrOutput) ToAppBlockScriptDetailsPtrOutputWithContext(ctx context.Context) AppBlockScriptDetailsPtrOutput {
	return o
}

func (o AppBlockScriptDetailsPtrOutput) Elem() AppBlockScriptDetailsOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) AppBlockScriptDetails {
		if v != nil {
			return *v
		}
		var ret AppBlockScriptDetails
		return ret
	}).(AppBlockScriptDetailsOutput)
}

// The parameters used in the run path for the script.
func (o AppBlockScriptDetailsPtrOutput) ExecutableParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *string {
		if v == nil {
			return nil
		}
		return v.ExecutableParameters
	}).(pulumi.StringPtrOutput)
}

// The run path for the script.
func (o AppBlockScriptDetailsPtrOutput) ExecutablePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutablePath
	}).(pulumi.StringPtrOutput)
}

// The S3 location of the app block.
func (o AppBlockScriptDetailsPtrOutput) ScriptS3Location() AppBlockS3LocationPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *AppBlockS3Location {
		if v == nil {
			return nil
		}
		return &v.ScriptS3Location
	}).(AppBlockS3LocationPtrOutput)
}

// The run timeout, in seconds, for the script.
func (o AppBlockScriptDetailsPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppBlockScriptDetails) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

type AppBlockTag0Properties struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AppBlockTag0PropertiesInput is an input type that accepts AppBlockTag0PropertiesArgs and AppBlockTag0PropertiesOutput values.
// You can construct a concrete instance of `AppBlockTag0PropertiesInput` via:
//
//	AppBlockTag0PropertiesArgs{...}
type AppBlockTag0PropertiesInput interface {
	pulumi.Input

	ToAppBlockTag0PropertiesOutput() AppBlockTag0PropertiesOutput
	ToAppBlockTag0PropertiesOutputWithContext(context.Context) AppBlockTag0PropertiesOutput
}

type AppBlockTag0PropertiesArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppBlockTag0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockTag0Properties)(nil)).Elem()
}

func (i AppBlockTag0PropertiesArgs) ToAppBlockTag0PropertiesOutput() AppBlockTag0PropertiesOutput {
	return i.ToAppBlockTag0PropertiesOutputWithContext(context.Background())
}

func (i AppBlockTag0PropertiesArgs) ToAppBlockTag0PropertiesOutputWithContext(ctx context.Context) AppBlockTag0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockTag0PropertiesOutput)
}

type AppBlockTag0PropertiesOutput struct{ *pulumi.OutputState }

func (AppBlockTag0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockTag0Properties)(nil)).Elem()
}

func (o AppBlockTag0PropertiesOutput) ToAppBlockTag0PropertiesOutput() AppBlockTag0PropertiesOutput {
	return o
}

func (o AppBlockTag0PropertiesOutput) ToAppBlockTag0PropertiesOutputWithContext(ctx context.Context) AppBlockTag0PropertiesOutput {
	return o
}

func (o AppBlockTag0PropertiesOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockTag0Properties) string { return v.Key }).(pulumi.StringOutput)
}

func (o AppBlockTag0PropertiesOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockTag0Properties) string { return v.Value }).(pulumi.StringOutput)
}

type AppBlockTag1Properties struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// AppBlockTag1PropertiesInput is an input type that accepts AppBlockTag1PropertiesArgs and AppBlockTag1PropertiesOutput values.
// You can construct a concrete instance of `AppBlockTag1PropertiesInput` via:
//
//	AppBlockTag1PropertiesArgs{...}
type AppBlockTag1PropertiesInput interface {
	pulumi.Input

	ToAppBlockTag1PropertiesOutput() AppBlockTag1PropertiesOutput
	ToAppBlockTag1PropertiesOutputWithContext(context.Context) AppBlockTag1PropertiesOutput
}

type AppBlockTag1PropertiesArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (AppBlockTag1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockTag1Properties)(nil)).Elem()
}

func (i AppBlockTag1PropertiesArgs) ToAppBlockTag1PropertiesOutput() AppBlockTag1PropertiesOutput {
	return i.ToAppBlockTag1PropertiesOutputWithContext(context.Background())
}

func (i AppBlockTag1PropertiesArgs) ToAppBlockTag1PropertiesOutputWithContext(ctx context.Context) AppBlockTag1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBlockTag1PropertiesOutput)
}

type AppBlockTag1PropertiesOutput struct{ *pulumi.OutputState }

func (AppBlockTag1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBlockTag1Properties)(nil)).Elem()
}

func (o AppBlockTag1PropertiesOutput) ToAppBlockTag1PropertiesOutput() AppBlockTag1PropertiesOutput {
	return o
}

func (o AppBlockTag1PropertiesOutput) ToAppBlockTag1PropertiesOutputWithContext(ctx context.Context) AppBlockTag1PropertiesOutput {
	return o
}

func (o AppBlockTag1PropertiesOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockTag1Properties) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o AppBlockTag1PropertiesOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v AppBlockTag1Properties) string { return v.TagValue }).(pulumi.StringOutput)
}

type ApplicationS3Location struct {
	// The S3 bucket of the S3 object.
	S3Bucket string `pulumi:"s3Bucket"`
	// The S3 key of the S3 object.
	S3Key string `pulumi:"s3Key"`
}

// ApplicationS3LocationInput is an input type that accepts ApplicationS3LocationArgs and ApplicationS3LocationOutput values.
// You can construct a concrete instance of `ApplicationS3LocationInput` via:
//
//	ApplicationS3LocationArgs{...}
type ApplicationS3LocationInput interface {
	pulumi.Input

	ToApplicationS3LocationOutput() ApplicationS3LocationOutput
	ToApplicationS3LocationOutputWithContext(context.Context) ApplicationS3LocationOutput
}

type ApplicationS3LocationArgs struct {
	// The S3 bucket of the S3 object.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// The S3 key of the S3 object.
	S3Key pulumi.StringInput `pulumi:"s3Key"`
}

func (ApplicationS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationS3Location)(nil)).Elem()
}

func (i ApplicationS3LocationArgs) ToApplicationS3LocationOutput() ApplicationS3LocationOutput {
	return i.ToApplicationS3LocationOutputWithContext(context.Background())
}

func (i ApplicationS3LocationArgs) ToApplicationS3LocationOutputWithContext(ctx context.Context) ApplicationS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationS3LocationOutput)
}

type ApplicationS3LocationOutput struct{ *pulumi.OutputState }

func (ApplicationS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationS3Location)(nil)).Elem()
}

func (o ApplicationS3LocationOutput) ToApplicationS3LocationOutput() ApplicationS3LocationOutput {
	return o
}

func (o ApplicationS3LocationOutput) ToApplicationS3LocationOutputWithContext(ctx context.Context) ApplicationS3LocationOutput {
	return o
}

// The S3 bucket of the S3 object.
func (o ApplicationS3LocationOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationS3Location) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// The S3 key of the S3 object.
func (o ApplicationS3LocationOutput) S3Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationS3Location) string { return v.S3Key }).(pulumi.StringOutput)
}

type ApplicationS3LocationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationS3Location)(nil)).Elem()
}

func (o ApplicationS3LocationPtrOutput) ToApplicationS3LocationPtrOutput() ApplicationS3LocationPtrOutput {
	return o
}

func (o ApplicationS3LocationPtrOutput) ToApplicationS3LocationPtrOutputWithContext(ctx context.Context) ApplicationS3LocationPtrOutput {
	return o
}

func (o ApplicationS3LocationPtrOutput) Elem() ApplicationS3LocationOutput {
	return o.ApplyT(func(v *ApplicationS3Location) ApplicationS3Location {
		if v != nil {
			return *v
		}
		var ret ApplicationS3Location
		return ret
	}).(ApplicationS3LocationOutput)
}

// The S3 bucket of the S3 object.
func (o ApplicationS3LocationPtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

// The S3 key of the S3 object.
func (o ApplicationS3LocationPtrOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.S3Key
	}).(pulumi.StringPtrOutput)
}

type ApplicationTag0Properties struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ApplicationTag0PropertiesInput is an input type that accepts ApplicationTag0PropertiesArgs and ApplicationTag0PropertiesOutput values.
// You can construct a concrete instance of `ApplicationTag0PropertiesInput` via:
//
//	ApplicationTag0PropertiesArgs{...}
type ApplicationTag0PropertiesInput interface {
	pulumi.Input

	ToApplicationTag0PropertiesOutput() ApplicationTag0PropertiesOutput
	ToApplicationTag0PropertiesOutputWithContext(context.Context) ApplicationTag0PropertiesOutput
}

type ApplicationTag0PropertiesArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationTag0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag0Properties)(nil)).Elem()
}

func (i ApplicationTag0PropertiesArgs) ToApplicationTag0PropertiesOutput() ApplicationTag0PropertiesOutput {
	return i.ToApplicationTag0PropertiesOutputWithContext(context.Background())
}

func (i ApplicationTag0PropertiesArgs) ToApplicationTag0PropertiesOutputWithContext(ctx context.Context) ApplicationTag0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTag0PropertiesOutput)
}

type ApplicationTag0PropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationTag0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag0Properties)(nil)).Elem()
}

func (o ApplicationTag0PropertiesOutput) ToApplicationTag0PropertiesOutput() ApplicationTag0PropertiesOutput {
	return o
}

func (o ApplicationTag0PropertiesOutput) ToApplicationTag0PropertiesOutputWithContext(ctx context.Context) ApplicationTag0PropertiesOutput {
	return o
}

func (o ApplicationTag0PropertiesOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag0Properties) string { return v.Key }).(pulumi.StringOutput)
}

func (o ApplicationTag0PropertiesOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag0Properties) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationTag1Properties struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// ApplicationTag1PropertiesInput is an input type that accepts ApplicationTag1PropertiesArgs and ApplicationTag1PropertiesOutput values.
// You can construct a concrete instance of `ApplicationTag1PropertiesInput` via:
//
//	ApplicationTag1PropertiesArgs{...}
type ApplicationTag1PropertiesInput interface {
	pulumi.Input

	ToApplicationTag1PropertiesOutput() ApplicationTag1PropertiesOutput
	ToApplicationTag1PropertiesOutputWithContext(context.Context) ApplicationTag1PropertiesOutput
}

type ApplicationTag1PropertiesArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (ApplicationTag1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag1Properties)(nil)).Elem()
}

func (i ApplicationTag1PropertiesArgs) ToApplicationTag1PropertiesOutput() ApplicationTag1PropertiesOutput {
	return i.ToApplicationTag1PropertiesOutputWithContext(context.Background())
}

func (i ApplicationTag1PropertiesArgs) ToApplicationTag1PropertiesOutputWithContext(ctx context.Context) ApplicationTag1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTag1PropertiesOutput)
}

type ApplicationTag1PropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationTag1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag1Properties)(nil)).Elem()
}

func (o ApplicationTag1PropertiesOutput) ToApplicationTag1PropertiesOutput() ApplicationTag1PropertiesOutput {
	return o
}

func (o ApplicationTag1PropertiesOutput) ToApplicationTag1PropertiesOutputWithContext(ctx context.Context) ApplicationTag1PropertiesOutput {
	return o
}

func (o ApplicationTag1PropertiesOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag1Properties) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o ApplicationTag1PropertiesOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag1Properties) string { return v.TagValue }).(pulumi.StringOutput)
}

type DirectoryConfigCertificateBasedAuthProperties struct {
	// The ARN of the AWS Certificate Manager Private CA resource.
	CertificateAuthorityArn *string `pulumi:"certificateAuthorityArn"`
	// The status of the certificate-based authentication properties. Fallback is turned on by default when certificate-based authentication is *Enabled* . Fallback allows users to log in using their AD domain password if certificate-based authentication is unsuccessful, or to unlock a desktop lock screen. *Enabled_no_directory_login_fallback* enables certificate-based authentication, but does not allow users to log in using their AD domain password. Users will be disconnected to re-authenticate using certificates.
	Status *string `pulumi:"status"`
}

// DirectoryConfigCertificateBasedAuthPropertiesInput is an input type that accepts DirectoryConfigCertificateBasedAuthPropertiesArgs and DirectoryConfigCertificateBasedAuthPropertiesOutput values.
// You can construct a concrete instance of `DirectoryConfigCertificateBasedAuthPropertiesInput` via:
//
//	DirectoryConfigCertificateBasedAuthPropertiesArgs{...}
type DirectoryConfigCertificateBasedAuthPropertiesInput interface {
	pulumi.Input

	ToDirectoryConfigCertificateBasedAuthPropertiesOutput() DirectoryConfigCertificateBasedAuthPropertiesOutput
	ToDirectoryConfigCertificateBasedAuthPropertiesOutputWithContext(context.Context) DirectoryConfigCertificateBasedAuthPropertiesOutput
}

type DirectoryConfigCertificateBasedAuthPropertiesArgs struct {
	// The ARN of the AWS Certificate Manager Private CA resource.
	CertificateAuthorityArn pulumi.StringPtrInput `pulumi:"certificateAuthorityArn"`
	// The status of the certificate-based authentication properties. Fallback is turned on by default when certificate-based authentication is *Enabled* . Fallback allows users to log in using their AD domain password if certificate-based authentication is unsuccessful, or to unlock a desktop lock screen. *Enabled_no_directory_login_fallback* enables certificate-based authentication, but does not allow users to log in using their AD domain password. Users will be disconnected to re-authenticate using certificates.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DirectoryConfigCertificateBasedAuthPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfigCertificateBasedAuthProperties)(nil)).Elem()
}

func (i DirectoryConfigCertificateBasedAuthPropertiesArgs) ToDirectoryConfigCertificateBasedAuthPropertiesOutput() DirectoryConfigCertificateBasedAuthPropertiesOutput {
	return i.ToDirectoryConfigCertificateBasedAuthPropertiesOutputWithContext(context.Background())
}

func (i DirectoryConfigCertificateBasedAuthPropertiesArgs) ToDirectoryConfigCertificateBasedAuthPropertiesOutputWithContext(ctx context.Context) DirectoryConfigCertificateBasedAuthPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigCertificateBasedAuthPropertiesOutput)
}

func (i DirectoryConfigCertificateBasedAuthPropertiesArgs) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutput() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return i.ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(context.Background())
}

func (i DirectoryConfigCertificateBasedAuthPropertiesArgs) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(ctx context.Context) DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigCertificateBasedAuthPropertiesOutput).ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(ctx)
}

// DirectoryConfigCertificateBasedAuthPropertiesPtrInput is an input type that accepts DirectoryConfigCertificateBasedAuthPropertiesArgs, DirectoryConfigCertificateBasedAuthPropertiesPtr and DirectoryConfigCertificateBasedAuthPropertiesPtrOutput values.
// You can construct a concrete instance of `DirectoryConfigCertificateBasedAuthPropertiesPtrInput` via:
//
//	        DirectoryConfigCertificateBasedAuthPropertiesArgs{...}
//
//	or:
//
//	        nil
type DirectoryConfigCertificateBasedAuthPropertiesPtrInput interface {
	pulumi.Input

	ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutput() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput
	ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(context.Context) DirectoryConfigCertificateBasedAuthPropertiesPtrOutput
}

type directoryConfigCertificateBasedAuthPropertiesPtrType DirectoryConfigCertificateBasedAuthPropertiesArgs

func DirectoryConfigCertificateBasedAuthPropertiesPtr(v *DirectoryConfigCertificateBasedAuthPropertiesArgs) DirectoryConfigCertificateBasedAuthPropertiesPtrInput {
	return (*directoryConfigCertificateBasedAuthPropertiesPtrType)(v)
}

func (*directoryConfigCertificateBasedAuthPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfigCertificateBasedAuthProperties)(nil)).Elem()
}

func (i *directoryConfigCertificateBasedAuthPropertiesPtrType) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutput() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return i.ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(context.Background())
}

func (i *directoryConfigCertificateBasedAuthPropertiesPtrType) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(ctx context.Context) DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigCertificateBasedAuthPropertiesPtrOutput)
}

type DirectoryConfigCertificateBasedAuthPropertiesOutput struct{ *pulumi.OutputState }

func (DirectoryConfigCertificateBasedAuthPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfigCertificateBasedAuthProperties)(nil)).Elem()
}

func (o DirectoryConfigCertificateBasedAuthPropertiesOutput) ToDirectoryConfigCertificateBasedAuthPropertiesOutput() DirectoryConfigCertificateBasedAuthPropertiesOutput {
	return o
}

func (o DirectoryConfigCertificateBasedAuthPropertiesOutput) ToDirectoryConfigCertificateBasedAuthPropertiesOutputWithContext(ctx context.Context) DirectoryConfigCertificateBasedAuthPropertiesOutput {
	return o
}

func (o DirectoryConfigCertificateBasedAuthPropertiesOutput) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutput() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return o.ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(context.Background())
}

func (o DirectoryConfigCertificateBasedAuthPropertiesOutput) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(ctx context.Context) DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryConfigCertificateBasedAuthProperties) *DirectoryConfigCertificateBasedAuthProperties {
		return &v
	}).(DirectoryConfigCertificateBasedAuthPropertiesPtrOutput)
}

// The ARN of the AWS Certificate Manager Private CA resource.
func (o DirectoryConfigCertificateBasedAuthPropertiesOutput) CertificateAuthorityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryConfigCertificateBasedAuthProperties) *string { return v.CertificateAuthorityArn }).(pulumi.StringPtrOutput)
}

// The status of the certificate-based authentication properties. Fallback is turned on by default when certificate-based authentication is *Enabled* . Fallback allows users to log in using their AD domain password if certificate-based authentication is unsuccessful, or to unlock a desktop lock screen. *Enabled_no_directory_login_fallback* enables certificate-based authentication, but does not allow users to log in using their AD domain password. Users will be disconnected to re-authenticate using certificates.
func (o DirectoryConfigCertificateBasedAuthPropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryConfigCertificateBasedAuthProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DirectoryConfigCertificateBasedAuthPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DirectoryConfigCertificateBasedAuthPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfigCertificateBasedAuthProperties)(nil)).Elem()
}

func (o DirectoryConfigCertificateBasedAuthPropertiesPtrOutput) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutput() DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return o
}

func (o DirectoryConfigCertificateBasedAuthPropertiesPtrOutput) ToDirectoryConfigCertificateBasedAuthPropertiesPtrOutputWithContext(ctx context.Context) DirectoryConfigCertificateBasedAuthPropertiesPtrOutput {
	return o
}

func (o DirectoryConfigCertificateBasedAuthPropertiesPtrOutput) Elem() DirectoryConfigCertificateBasedAuthPropertiesOutput {
	return o.ApplyT(func(v *DirectoryConfigCertificateBasedAuthProperties) DirectoryConfigCertificateBasedAuthProperties {
		if v != nil {
			return *v
		}
		var ret DirectoryConfigCertificateBasedAuthProperties
		return ret
	}).(DirectoryConfigCertificateBasedAuthPropertiesOutput)
}

// The ARN of the AWS Certificate Manager Private CA resource.
func (o DirectoryConfigCertificateBasedAuthPropertiesPtrOutput) CertificateAuthorityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryConfigCertificateBasedAuthProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArn
	}).(pulumi.StringPtrOutput)
}

// The status of the certificate-based authentication properties. Fallback is turned on by default when certificate-based authentication is *Enabled* . Fallback allows users to log in using their AD domain password if certificate-based authentication is unsuccessful, or to unlock a desktop lock screen. *Enabled_no_directory_login_fallback* enables certificate-based authentication, but does not allow users to log in using their AD domain password. Users will be disconnected to re-authenticate using certificates.
func (o DirectoryConfigCertificateBasedAuthPropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryConfigCertificateBasedAuthProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type DirectoryConfigServiceAccountCredentials struct {
	// The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.
	AccountName string `pulumi:"accountName"`
	// The password for the account.
	AccountPassword string `pulumi:"accountPassword"`
}

// DirectoryConfigServiceAccountCredentialsInput is an input type that accepts DirectoryConfigServiceAccountCredentialsArgs and DirectoryConfigServiceAccountCredentialsOutput values.
// You can construct a concrete instance of `DirectoryConfigServiceAccountCredentialsInput` via:
//
//	DirectoryConfigServiceAccountCredentialsArgs{...}
type DirectoryConfigServiceAccountCredentialsInput interface {
	pulumi.Input

	ToDirectoryConfigServiceAccountCredentialsOutput() DirectoryConfigServiceAccountCredentialsOutput
	ToDirectoryConfigServiceAccountCredentialsOutputWithContext(context.Context) DirectoryConfigServiceAccountCredentialsOutput
}

type DirectoryConfigServiceAccountCredentialsArgs struct {
	// The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The password for the account.
	AccountPassword pulumi.StringInput `pulumi:"accountPassword"`
}

func (DirectoryConfigServiceAccountCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (i DirectoryConfigServiceAccountCredentialsArgs) ToDirectoryConfigServiceAccountCredentialsOutput() DirectoryConfigServiceAccountCredentialsOutput {
	return i.ToDirectoryConfigServiceAccountCredentialsOutputWithContext(context.Background())
}

func (i DirectoryConfigServiceAccountCredentialsArgs) ToDirectoryConfigServiceAccountCredentialsOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConfigServiceAccountCredentialsOutput)
}

type DirectoryConfigServiceAccountCredentialsOutput struct{ *pulumi.OutputState }

func (DirectoryConfigServiceAccountCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (o DirectoryConfigServiceAccountCredentialsOutput) ToDirectoryConfigServiceAccountCredentialsOutput() DirectoryConfigServiceAccountCredentialsOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsOutput) ToDirectoryConfigServiceAccountCredentialsOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsOutput {
	return o
}

// The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.
func (o DirectoryConfigServiceAccountCredentialsOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConfigServiceAccountCredentials) string { return v.AccountName }).(pulumi.StringOutput)
}

// The password for the account.
func (o DirectoryConfigServiceAccountCredentialsOutput) AccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConfigServiceAccountCredentials) string { return v.AccountPassword }).(pulumi.StringOutput)
}

type DirectoryConfigServiceAccountCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryConfigServiceAccountCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConfigServiceAccountCredentials)(nil)).Elem()
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) ToDirectoryConfigServiceAccountCredentialsPtrOutput() DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) ToDirectoryConfigServiceAccountCredentialsPtrOutputWithContext(ctx context.Context) DirectoryConfigServiceAccountCredentialsPtrOutput {
	return o
}

func (o DirectoryConfigServiceAccountCredentialsPtrOutput) Elem() DirectoryConfigServiceAccountCredentialsOutput {
	return o.ApplyT(func(v *DirectoryConfigServiceAccountCredentials) DirectoryConfigServiceAccountCredentials {
		if v != nil {
			return *v
		}
		var ret DirectoryConfigServiceAccountCredentials
		return ret
	}).(DirectoryConfigServiceAccountCredentialsOutput)
}

// The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.
func (o DirectoryConfigServiceAccountCredentialsPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryConfigServiceAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// The password for the account.
func (o DirectoryConfigServiceAccountCredentialsPtrOutput) AccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryConfigServiceAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccountPassword
	}).(pulumi.StringPtrOutput)
}

type EntitlementAttribute struct {
	// A supported AWS IAM SAML PrincipalTag attribute that is matched to a value when a user identity federates to an AppStream 2.0 SAML application.
	//
	// The following are supported values:
	//
	// - roles
	// - department
	// - organization
	// - groups
	// - title
	// - costCenter
	// - userType
	Name string `pulumi:"name"`
	// A value that is matched to a supported SAML attribute name when a user identity federates to an AppStream 2.0 SAML application.
	Value string `pulumi:"value"`
}

// EntitlementAttributeInput is an input type that accepts EntitlementAttributeArgs and EntitlementAttributeOutput values.
// You can construct a concrete instance of `EntitlementAttributeInput` via:
//
//	EntitlementAttributeArgs{...}
type EntitlementAttributeInput interface {
	pulumi.Input

	ToEntitlementAttributeOutput() EntitlementAttributeOutput
	ToEntitlementAttributeOutputWithContext(context.Context) EntitlementAttributeOutput
}

type EntitlementAttributeArgs struct {
	// A supported AWS IAM SAML PrincipalTag attribute that is matched to a value when a user identity federates to an AppStream 2.0 SAML application.
	//
	// The following are supported values:
	//
	// - roles
	// - department
	// - organization
	// - groups
	// - title
	// - costCenter
	// - userType
	Name pulumi.StringInput `pulumi:"name"`
	// A value that is matched to a supported SAML attribute name when a user identity federates to an AppStream 2.0 SAML application.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EntitlementAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementAttribute)(nil)).Elem()
}

func (i EntitlementAttributeArgs) ToEntitlementAttributeOutput() EntitlementAttributeOutput {
	return i.ToEntitlementAttributeOutputWithContext(context.Background())
}

func (i EntitlementAttributeArgs) ToEntitlementAttributeOutputWithContext(ctx context.Context) EntitlementAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAttributeOutput)
}

// EntitlementAttributeArrayInput is an input type that accepts EntitlementAttributeArray and EntitlementAttributeArrayOutput values.
// You can construct a concrete instance of `EntitlementAttributeArrayInput` via:
//
//	EntitlementAttributeArray{ EntitlementAttributeArgs{...} }
type EntitlementAttributeArrayInput interface {
	pulumi.Input

	ToEntitlementAttributeArrayOutput() EntitlementAttributeArrayOutput
	ToEntitlementAttributeArrayOutputWithContext(context.Context) EntitlementAttributeArrayOutput
}

type EntitlementAttributeArray []EntitlementAttributeInput

func (EntitlementAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementAttribute)(nil)).Elem()
}

func (i EntitlementAttributeArray) ToEntitlementAttributeArrayOutput() EntitlementAttributeArrayOutput {
	return i.ToEntitlementAttributeArrayOutputWithContext(context.Background())
}

func (i EntitlementAttributeArray) ToEntitlementAttributeArrayOutputWithContext(ctx context.Context) EntitlementAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAttributeArrayOutput)
}

type EntitlementAttributeOutput struct{ *pulumi.OutputState }

func (EntitlementAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementAttribute)(nil)).Elem()
}

func (o EntitlementAttributeOutput) ToEntitlementAttributeOutput() EntitlementAttributeOutput {
	return o
}

func (o EntitlementAttributeOutput) ToEntitlementAttributeOutputWithContext(ctx context.Context) EntitlementAttributeOutput {
	return o
}

// A supported AWS IAM SAML PrincipalTag attribute that is matched to a value when a user identity federates to an AppStream 2.0 SAML application.
//
// The following are supported values:
//
// - roles
// - department
// - organization
// - groups
// - title
// - costCenter
// - userType
func (o EntitlementAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// A value that is matched to a supported SAML attribute name when a user identity federates to an AppStream 2.0 SAML application.
func (o EntitlementAttributeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementAttribute) string { return v.Value }).(pulumi.StringOutput)
}

type EntitlementAttributeArrayOutput struct{ *pulumi.OutputState }

func (EntitlementAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementAttribute)(nil)).Elem()
}

func (o EntitlementAttributeArrayOutput) ToEntitlementAttributeArrayOutput() EntitlementAttributeArrayOutput {
	return o
}

func (o EntitlementAttributeArrayOutput) ToEntitlementAttributeArrayOutputWithContext(ctx context.Context) EntitlementAttributeArrayOutput {
	return o
}

func (o EntitlementAttributeArrayOutput) Index(i pulumi.IntInput) EntitlementAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementAttribute {
		return vs[0].([]EntitlementAttribute)[vs[1].(int)]
	}).(EntitlementAttributeOutput)
}

type ImageBuilderAccessEndpoint struct {
	// The type of interface endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The identifier (ID) of the VPC in which the interface endpoint is used.
	VpceId string `pulumi:"vpceId"`
}

// ImageBuilderAccessEndpointInput is an input type that accepts ImageBuilderAccessEndpointArgs and ImageBuilderAccessEndpointOutput values.
// You can construct a concrete instance of `ImageBuilderAccessEndpointInput` via:
//
//	ImageBuilderAccessEndpointArgs{...}
type ImageBuilderAccessEndpointInput interface {
	pulumi.Input

	ToImageBuilderAccessEndpointOutput() ImageBuilderAccessEndpointOutput
	ToImageBuilderAccessEndpointOutputWithContext(context.Context) ImageBuilderAccessEndpointOutput
}

type ImageBuilderAccessEndpointArgs struct {
	// The type of interface endpoint.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The identifier (ID) of the VPC in which the interface endpoint is used.
	VpceId pulumi.StringInput `pulumi:"vpceId"`
}

func (ImageBuilderAccessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (i ImageBuilderAccessEndpointArgs) ToImageBuilderAccessEndpointOutput() ImageBuilderAccessEndpointOutput {
	return i.ToImageBuilderAccessEndpointOutputWithContext(context.Background())
}

func (i ImageBuilderAccessEndpointArgs) ToImageBuilderAccessEndpointOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderAccessEndpointOutput)
}

// ImageBuilderAccessEndpointArrayInput is an input type that accepts ImageBuilderAccessEndpointArray and ImageBuilderAccessEndpointArrayOutput values.
// You can construct a concrete instance of `ImageBuilderAccessEndpointArrayInput` via:
//
//	ImageBuilderAccessEndpointArray{ ImageBuilderAccessEndpointArgs{...} }
type ImageBuilderAccessEndpointArrayInput interface {
	pulumi.Input

	ToImageBuilderAccessEndpointArrayOutput() ImageBuilderAccessEndpointArrayOutput
	ToImageBuilderAccessEndpointArrayOutputWithContext(context.Context) ImageBuilderAccessEndpointArrayOutput
}

type ImageBuilderAccessEndpointArray []ImageBuilderAccessEndpointInput

func (ImageBuilderAccessEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (i ImageBuilderAccessEndpointArray) ToImageBuilderAccessEndpointArrayOutput() ImageBuilderAccessEndpointArrayOutput {
	return i.ToImageBuilderAccessEndpointArrayOutputWithContext(context.Background())
}

func (i ImageBuilderAccessEndpointArray) ToImageBuilderAccessEndpointArrayOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderAccessEndpointArrayOutput)
}

type ImageBuilderAccessEndpointOutput struct{ *pulumi.OutputState }

func (ImageBuilderAccessEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (o ImageBuilderAccessEndpointOutput) ToImageBuilderAccessEndpointOutput() ImageBuilderAccessEndpointOutput {
	return o
}

func (o ImageBuilderAccessEndpointOutput) ToImageBuilderAccessEndpointOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointOutput {
	return o
}

// The type of interface endpoint.
func (o ImageBuilderAccessEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v ImageBuilderAccessEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The identifier (ID) of the VPC in which the interface endpoint is used.
func (o ImageBuilderAccessEndpointOutput) VpceId() pulumi.StringOutput {
	return o.ApplyT(func(v ImageBuilderAccessEndpoint) string { return v.VpceId }).(pulumi.StringOutput)
}

type ImageBuilderAccessEndpointArrayOutput struct{ *pulumi.OutputState }

func (ImageBuilderAccessEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageBuilderAccessEndpoint)(nil)).Elem()
}

func (o ImageBuilderAccessEndpointArrayOutput) ToImageBuilderAccessEndpointArrayOutput() ImageBuilderAccessEndpointArrayOutput {
	return o
}

func (o ImageBuilderAccessEndpointArrayOutput) ToImageBuilderAccessEndpointArrayOutputWithContext(ctx context.Context) ImageBuilderAccessEndpointArrayOutput {
	return o
}

func (o ImageBuilderAccessEndpointArrayOutput) Index(i pulumi.IntInput) ImageBuilderAccessEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageBuilderAccessEndpoint {
		return vs[0].([]ImageBuilderAccessEndpoint)[vs[1].(int)]
	}).(ImageBuilderAccessEndpointOutput)
}

type ImageBuilderDomainJoinInfo struct {
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName *string `pulumi:"directoryName"`
	// The distinguished name of the organizational unit for computer accounts.
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
}

// ImageBuilderDomainJoinInfoInput is an input type that accepts ImageBuilderDomainJoinInfoArgs and ImageBuilderDomainJoinInfoOutput values.
// You can construct a concrete instance of `ImageBuilderDomainJoinInfoInput` via:
//
//	ImageBuilderDomainJoinInfoArgs{...}
type ImageBuilderDomainJoinInfoInput interface {
	pulumi.Input

	ToImageBuilderDomainJoinInfoOutput() ImageBuilderDomainJoinInfoOutput
	ToImageBuilderDomainJoinInfoOutputWithContext(context.Context) ImageBuilderDomainJoinInfoOutput
}

type ImageBuilderDomainJoinInfoArgs struct {
	// The fully qualified name of the directory (for example, corp.example.com).
	DirectoryName pulumi.StringPtrInput `pulumi:"directoryName"`
	// The distinguished name of the organizational unit for computer accounts.
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
}

func (ImageBuilderDomainJoinInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoOutput() ImageBuilderDomainJoinInfoOutput {
	return i.ToImageBuilderDomainJoinInfoOutputWithContext(context.Background())
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderDomainJoinInfoOutput)
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return i.ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (i ImageBuilderDomainJoinInfoArgs) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderDomainJoinInfoOutput).ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx)
}

// ImageBuilderDomainJoinInfoPtrInput is an input type that accepts ImageBuilderDomainJoinInfoArgs, ImageBuilderDomainJoinInfoPtr and ImageBuilderDomainJoinInfoPtrOutput values.
// You can construct a concrete instance of `ImageBuilderDomainJoinInfoPtrInput` via:
//
//	        ImageBuilderDomainJoinInfoArgs{...}
//
//	or:
//
//	        nil
type ImageBuilderDomainJoinInfoPtrInput interface {
	pulumi.Input

	ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput
	ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Context) ImageBuilderDomainJoinInfoPtrOutput
}

type imageBuilderDomainJoinInfoPtrType ImageBuilderDomainJoinInfoArgs

func ImageBuilderDomainJoinInfoPtr(v *ImageBuilderDomainJoinInfoArgs) ImageBuilderDomainJoinInfoPtrInput {
	return (*imageBuilderDomainJoinInfoPtrType)(v)
}

func (*imageBuilderDomainJoinInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (i *imageBuilderDomainJoinInfoPtrType) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return i.ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (i *imageBuilderDomainJoinInfoPtrType) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderDomainJoinInfoPtrOutput)
}

type ImageBuilderDomainJoinInfoOutput struct{ *pulumi.OutputState }

func (ImageBuilderDomainJoinInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoOutput() ImageBuilderDomainJoinInfoOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return o.ToImageBuilderDomainJoinInfoPtrOutputWithContext(context.Background())
}

func (o ImageBuilderDomainJoinInfoOutput) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageBuilderDomainJoinInfo) *ImageBuilderDomainJoinInfo {
		return &v
	}).(ImageBuilderDomainJoinInfoPtrOutput)
}

// The fully qualified name of the directory (for example, corp.example.com).
func (o ImageBuilderDomainJoinInfoOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBuilderDomainJoinInfo) *string { return v.DirectoryName }).(pulumi.StringPtrOutput)
}

// The distinguished name of the organizational unit for computer accounts.
func (o ImageBuilderDomainJoinInfoOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageBuilderDomainJoinInfo) *string { return v.OrganizationalUnitDistinguishedName }).(pulumi.StringPtrOutput)
}

type ImageBuilderDomainJoinInfoPtrOutput struct{ *pulumi.OutputState }

func (ImageBuilderDomainJoinInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderDomainJoinInfo)(nil)).Elem()
}

func (o ImageBuilderDomainJoinInfoPtrOutput) ToImageBuilderDomainJoinInfoPtrOutput() ImageBuilderDomainJoinInfoPtrOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoPtrOutput) ToImageBuilderDomainJoinInfoPtrOutputWithContext(ctx context.Context) ImageBuilderDomainJoinInfoPtrOutput {
	return o
}

func (o ImageBuilderDomainJoinInfoPtrOutput) Elem() ImageBuilderDomainJoinInfoOutput {
	return o.ApplyT(func(v *ImageBuilderDomainJoinInfo) ImageBuilderDomainJoinInfo {
		if v != nil {
			return *v
		}
		var ret ImageBuilderDomainJoinInfo
		return ret
	}).(ImageBuilderDomainJoinInfoOutput)
}

// The fully qualified name of the directory (for example, corp.example.com).
func (o ImageBuilderDomainJoinInfoPtrOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageBuilderDomainJoinInfo) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryName
	}).(pulumi.StringPtrOutput)
}

// The distinguished name of the organizational unit for computer accounts.
func (o ImageBuilderDomainJoinInfoPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageBuilderDomainJoinInfo) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

type ImageBuilderTag struct {
	// The key of the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

type ImageBuilderVpcConfig struct {
	// The identifiers of the security groups for the image builder.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The identifier of the subnet to which a network interface is attached from the image builder instance. An image builder instance can use one subnet.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ImageBuilderVpcConfigInput is an input type that accepts ImageBuilderVpcConfigArgs and ImageBuilderVpcConfigOutput values.
// You can construct a concrete instance of `ImageBuilderVpcConfigInput` via:
//
//	ImageBuilderVpcConfigArgs{...}
type ImageBuilderVpcConfigInput interface {
	pulumi.Input

	ToImageBuilderVpcConfigOutput() ImageBuilderVpcConfigOutput
	ToImageBuilderVpcConfigOutputWithContext(context.Context) ImageBuilderVpcConfigOutput
}

type ImageBuilderVpcConfigArgs struct {
	// The identifiers of the security groups for the image builder.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The identifier of the subnet to which a network interface is attached from the image builder instance. An image builder instance can use one subnet.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ImageBuilderVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderVpcConfig)(nil)).Elem()
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigOutput() ImageBuilderVpcConfigOutput {
	return i.ToImageBuilderVpcConfigOutputWithContext(context.Background())
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigOutputWithContext(ctx context.Context) ImageBuilderVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderVpcConfigOutput)
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return i.ToImageBuilderVpcConfigPtrOutputWithContext(context.Background())
}

func (i ImageBuilderVpcConfigArgs) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderVpcConfigOutput).ToImageBuilderVpcConfigPtrOutputWithContext(ctx)
}

// ImageBuilderVpcConfigPtrInput is an input type that accepts ImageBuilderVpcConfigArgs, ImageBuilderVpcConfigPtr and ImageBuilderVpcConfigPtrOutput values.
// You can construct a concrete instance of `ImageBuilderVpcConfigPtrInput` via:
//
//	        ImageBuilderVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ImageBuilderVpcConfigPtrInput interface {
	pulumi.Input

	ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput
	ToImageBuilderVpcConfigPtrOutputWithContext(context.Context) ImageBuilderVpcConfigPtrOutput
}

type imageBuilderVpcConfigPtrType ImageBuilderVpcConfigArgs

func ImageBuilderVpcConfigPtr(v *ImageBuilderVpcConfigArgs) ImageBuilderVpcConfigPtrInput {
	return (*imageBuilderVpcConfigPtrType)(v)
}

func (*imageBuilderVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderVpcConfig)(nil)).Elem()
}

func (i *imageBuilderVpcConfigPtrType) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return i.ToImageBuilderVpcConfigPtrOutputWithContext(context.Background())
}

func (i *imageBuilderVpcConfigPtrType) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderVpcConfigPtrOutput)
}

type ImageBuilderVpcConfigOutput struct{ *pulumi.OutputState }

func (ImageBuilderVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageBuilderVpcConfig)(nil)).Elem()
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigOutput() ImageBuilderVpcConfigOutput {
	return o
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigOutputWithContext(ctx context.Context) ImageBuilderVpcConfigOutput {
	return o
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return o.ToImageBuilderVpcConfigPtrOutputWithContext(context.Background())
}

func (o ImageBuilderVpcConfigOutput) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageBuilderVpcConfig) *ImageBuilderVpcConfig {
		return &v
	}).(ImageBuilderVpcConfigPtrOutput)
}

// The identifiers of the security groups for the image builder.
func (o ImageBuilderVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageBuilderVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The identifier of the subnet to which a network interface is attached from the image builder instance. An image builder instance can use one subnet.
func (o ImageBuilderVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ImageBuilderVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ImageBuilderVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ImageBuilderVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilderVpcConfig)(nil)).Elem()
}

func (o ImageBuilderVpcConfigPtrOutput) ToImageBuilderVpcConfigPtrOutput() ImageBuilderVpcConfigPtrOutput {
	return o
}

func (o ImageBuilderVpcConfigPtrOutput) ToImageBuilderVpcConfigPtrOutputWithContext(ctx context.Context) ImageBuilderVpcConfigPtrOutput {
	return o
}

func (o ImageBuilderVpcConfigPtrOutput) Elem() ImageBuilderVpcConfigOutput {
	return o.ApplyT(func(v *ImageBuilderVpcConfig) ImageBuilderVpcConfig {
		if v != nil {
			return *v
		}
		var ret ImageBuilderVpcConfig
		return ret
	}).(ImageBuilderVpcConfigOutput)
}

// The identifiers of the security groups for the image builder.
func (o ImageBuilderVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImageBuilderVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The identifier of the subnet to which a network interface is attached from the image builder instance. An image builder instance can use one subnet.
func (o ImageBuilderVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImageBuilderVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockBuilderAccessEndpointInput)(nil)).Elem(), AppBlockBuilderAccessEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockBuilderAccessEndpointArrayInput)(nil)).Elem(), AppBlockBuilderAccessEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockBuilderVpcConfigInput)(nil)).Elem(), AppBlockBuilderVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockS3LocationInput)(nil)).Elem(), AppBlockS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockS3LocationPtrInput)(nil)).Elem(), AppBlockS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockScriptDetailsInput)(nil)).Elem(), AppBlockScriptDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockScriptDetailsPtrInput)(nil)).Elem(), AppBlockScriptDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockTag0PropertiesInput)(nil)).Elem(), AppBlockTag0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBlockTag1PropertiesInput)(nil)).Elem(), AppBlockTag1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationS3LocationInput)(nil)).Elem(), ApplicationS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTag0PropertiesInput)(nil)).Elem(), ApplicationTag0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTag1PropertiesInput)(nil)).Elem(), ApplicationTag1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryConfigCertificateBasedAuthPropertiesInput)(nil)).Elem(), DirectoryConfigCertificateBasedAuthPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryConfigCertificateBasedAuthPropertiesPtrInput)(nil)).Elem(), DirectoryConfigCertificateBasedAuthPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryConfigServiceAccountCredentialsInput)(nil)).Elem(), DirectoryConfigServiceAccountCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementAttributeInput)(nil)).Elem(), EntitlementAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementAttributeArrayInput)(nil)).Elem(), EntitlementAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderAccessEndpointInput)(nil)).Elem(), ImageBuilderAccessEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderAccessEndpointArrayInput)(nil)).Elem(), ImageBuilderAccessEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderDomainJoinInfoInput)(nil)).Elem(), ImageBuilderDomainJoinInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderDomainJoinInfoPtrInput)(nil)).Elem(), ImageBuilderDomainJoinInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderVpcConfigInput)(nil)).Elem(), ImageBuilderVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderVpcConfigPtrInput)(nil)).Elem(), ImageBuilderVpcConfigArgs{})
	pulumi.RegisterOutputType(AppBlockBuilderAccessEndpointOutput{})
	pulumi.RegisterOutputType(AppBlockBuilderAccessEndpointArrayOutput{})
	pulumi.RegisterOutputType(AppBlockBuilderVpcConfigOutput{})
	pulumi.RegisterOutputType(AppBlockBuilderVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(AppBlockS3LocationOutput{})
	pulumi.RegisterOutputType(AppBlockS3LocationPtrOutput{})
	pulumi.RegisterOutputType(AppBlockScriptDetailsOutput{})
	pulumi.RegisterOutputType(AppBlockScriptDetailsPtrOutput{})
	pulumi.RegisterOutputType(AppBlockTag0PropertiesOutput{})
	pulumi.RegisterOutputType(AppBlockTag1PropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationS3LocationOutput{})
	pulumi.RegisterOutputType(ApplicationS3LocationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationTag0PropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationTag1PropertiesOutput{})
	pulumi.RegisterOutputType(DirectoryConfigCertificateBasedAuthPropertiesOutput{})
	pulumi.RegisterOutputType(DirectoryConfigCertificateBasedAuthPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DirectoryConfigServiceAccountCredentialsOutput{})
	pulumi.RegisterOutputType(DirectoryConfigServiceAccountCredentialsPtrOutput{})
	pulumi.RegisterOutputType(EntitlementAttributeOutput{})
	pulumi.RegisterOutputType(EntitlementAttributeArrayOutput{})
	pulumi.RegisterOutputType(ImageBuilderAccessEndpointOutput{})
	pulumi.RegisterOutputType(ImageBuilderAccessEndpointArrayOutput{})
	pulumi.RegisterOutputType(ImageBuilderDomainJoinInfoOutput{})
	pulumi.RegisterOutputType(ImageBuilderDomainJoinInfoPtrOutput{})
	pulumi.RegisterOutputType(ImageBuilderVpcConfigOutput{})
	pulumi.RegisterOutputType(ImageBuilderVpcConfigPtrOutput{})
}
