// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Route53Resolver::ResolverDNSSECConfig.
func LookupResolverDNSSECConfig(ctx *pulumi.Context, args *LookupResolverDNSSECConfigArgs, opts ...pulumi.InvokeOption) (*LookupResolverDNSSECConfigResult, error) {
	var rv LookupResolverDNSSECConfigResult
	err := ctx.Invoke("aws-native:route53resolver:getResolverDNSSECConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupResolverDNSSECConfigArgs struct {
	// Id
	Id string `pulumi:"id"`
}

type LookupResolverDNSSECConfigResult struct {
	// Id
	Id *string `pulumi:"id"`
	// AccountId
	OwnerId *string `pulumi:"ownerId"`
	// ResolverDNSSECValidationStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
	ValidationStatus *ResolverDNSSECConfigValidationStatus `pulumi:"validationStatus"`
}

func LookupResolverDNSSECConfigOutput(ctx *pulumi.Context, args LookupResolverDNSSECConfigOutputArgs, opts ...pulumi.InvokeOption) LookupResolverDNSSECConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResolverDNSSECConfigResult, error) {
			args := v.(LookupResolverDNSSECConfigArgs)
			r, err := LookupResolverDNSSECConfig(ctx, &args, opts...)
			var s LookupResolverDNSSECConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResolverDNSSECConfigResultOutput)
}

type LookupResolverDNSSECConfigOutputArgs struct {
	// Id
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupResolverDNSSECConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverDNSSECConfigArgs)(nil)).Elem()
}

type LookupResolverDNSSECConfigResultOutput struct{ *pulumi.OutputState }

func (LookupResolverDNSSECConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverDNSSECConfigResult)(nil)).Elem()
}

func (o LookupResolverDNSSECConfigResultOutput) ToLookupResolverDNSSECConfigResultOutput() LookupResolverDNSSECConfigResultOutput {
	return o
}

func (o LookupResolverDNSSECConfigResultOutput) ToLookupResolverDNSSECConfigResultOutputWithContext(ctx context.Context) LookupResolverDNSSECConfigResultOutput {
	return o
}

// Id
func (o LookupResolverDNSSECConfigResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResolverDNSSECConfigResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// AccountId
func (o LookupResolverDNSSECConfigResultOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResolverDNSSECConfigResult) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// ResolverDNSSECValidationStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
func (o LookupResolverDNSSECConfigResultOutput) ValidationStatus() ResolverDNSSECConfigValidationStatusPtrOutput {
	return o.ApplyT(func(v LookupResolverDNSSECConfigResult) *ResolverDNSSECConfigValidationStatus {
		return v.ValidationStatus
	}).(ResolverDNSSECConfigValidationStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResolverDNSSECConfigResultOutput{})
}
