// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Route53Resolver::OutpostResolver.
type OutpostResolver struct {
	pulumi.CustomResourceState

	// The OutpostResolver ARN.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Id
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The OutpostResolver creation time
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The id of the creator request.
	CreatorRequestId pulumi.StringOutput `pulumi:"creatorRequestId"`
	// The number of OutpostResolvers.
	InstanceCount pulumi.IntPtrOutput `pulumi:"instanceCount"`
	// The OutpostResolver last modified time
	ModificationTime pulumi.StringOutput `pulumi:"modificationTime"`
	// The OutpostResolver name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Outpost ARN.
	OutpostArn pulumi.StringOutput `pulumi:"outpostArn"`
	// The OutpostResolver instance type.
	PreferredInstanceType pulumi.StringOutput `pulumi:"preferredInstanceType"`
	// The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED, FAILED_CREATION and FAILED_DELETION.
	Status OutpostResolverStatusOutput `pulumi:"status"`
	// The OutpostResolver status message.
	StatusMessage pulumi.StringOutput `pulumi:"statusMessage"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewOutpostResolver registers a new resource with the given unique name, arguments, and options.
func NewOutpostResolver(ctx *pulumi.Context,
	name string, args *OutpostResolverArgs, opts ...pulumi.ResourceOption) (*OutpostResolver, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OutpostArn == nil {
		return nil, errors.New("invalid value for required argument 'OutpostArn'")
	}
	if args.PreferredInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'PreferredInstanceType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"outpostArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OutpostResolver
	err := ctx.RegisterResource("aws-native:route53resolver:OutpostResolver", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutpostResolver gets an existing OutpostResolver resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutpostResolver(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutpostResolverState, opts ...pulumi.ResourceOption) (*OutpostResolver, error) {
	var resource OutpostResolver
	err := ctx.ReadResource("aws-native:route53resolver:OutpostResolver", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutpostResolver resources.
type outpostResolverState struct {
}

type OutpostResolverState struct {
}

func (OutpostResolverState) ElementType() reflect.Type {
	return reflect.TypeOf((*outpostResolverState)(nil)).Elem()
}

type outpostResolverArgs struct {
	// The number of OutpostResolvers.
	InstanceCount *int `pulumi:"instanceCount"`
	// The OutpostResolver name.
	Name *string `pulumi:"name"`
	// The Outpost ARN.
	OutpostArn string `pulumi:"outpostArn"`
	// The OutpostResolver instance type.
	PreferredInstanceType string `pulumi:"preferredInstanceType"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a OutpostResolver resource.
type OutpostResolverArgs struct {
	// The number of OutpostResolvers.
	InstanceCount pulumi.IntPtrInput
	// The OutpostResolver name.
	Name pulumi.StringPtrInput
	// The Outpost ARN.
	OutpostArn pulumi.StringInput
	// The OutpostResolver instance type.
	PreferredInstanceType pulumi.StringInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (OutpostResolverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outpostResolverArgs)(nil)).Elem()
}

type OutpostResolverInput interface {
	pulumi.Input

	ToOutpostResolverOutput() OutpostResolverOutput
	ToOutpostResolverOutputWithContext(ctx context.Context) OutpostResolverOutput
}

func (*OutpostResolver) ElementType() reflect.Type {
	return reflect.TypeOf((**OutpostResolver)(nil)).Elem()
}

func (i *OutpostResolver) ToOutpostResolverOutput() OutpostResolverOutput {
	return i.ToOutpostResolverOutputWithContext(context.Background())
}

func (i *OutpostResolver) ToOutpostResolverOutputWithContext(ctx context.Context) OutpostResolverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutpostResolverOutput)
}

type OutpostResolverOutput struct{ *pulumi.OutputState }

func (OutpostResolverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutpostResolver)(nil)).Elem()
}

func (o OutpostResolverOutput) ToOutpostResolverOutput() OutpostResolverOutput {
	return o
}

func (o OutpostResolverOutput) ToOutpostResolverOutputWithContext(ctx context.Context) OutpostResolverOutput {
	return o
}

// The OutpostResolver ARN.
func (o OutpostResolverOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Id
func (o OutpostResolverOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The OutpostResolver creation time
func (o OutpostResolverOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The id of the creator request.
func (o OutpostResolverOutput) CreatorRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.CreatorRequestId }).(pulumi.StringOutput)
}

// The number of OutpostResolvers.
func (o OutpostResolverOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.IntPtrOutput { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The OutpostResolver last modified time
func (o OutpostResolverOutput) ModificationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.ModificationTime }).(pulumi.StringOutput)
}

// The OutpostResolver name.
func (o OutpostResolverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Outpost ARN.
func (o OutpostResolverOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.OutpostArn }).(pulumi.StringOutput)
}

// The OutpostResolver instance type.
func (o OutpostResolverOutput) PreferredInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.PreferredInstanceType }).(pulumi.StringOutput)
}

// The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED, FAILED_CREATION and FAILED_DELETION.
func (o OutpostResolverOutput) Status() OutpostResolverStatusOutput {
	return o.ApplyT(func(v *OutpostResolver) OutpostResolverStatusOutput { return v.Status }).(OutpostResolverStatusOutput)
}

// The OutpostResolver status message.
func (o OutpostResolverOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *OutpostResolver) pulumi.StringOutput { return v.StatusMessage }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o OutpostResolverOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *OutpostResolver) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OutpostResolverInput)(nil)).Elem(), &OutpostResolver{})
	pulumi.RegisterOutputType(OutpostResolverOutput{})
}
