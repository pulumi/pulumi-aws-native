// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Route53Resolver::FirewallRuleGroupAssociation.
type FirewallRuleGroupAssociation struct {
	pulumi.CustomResourceState

	// Arn
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Rfc3339TimeString
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The id of the creator request.
	CreatorRequestId pulumi.StringOutput `pulumi:"creatorRequestId"`
	// FirewallRuleGroupId
	FirewallRuleGroupId pulumi.StringOutput `pulumi:"firewallRuleGroupId"`
	// ServicePrincipal
	ManagedOwnerName pulumi.StringOutput `pulumi:"managedOwnerName"`
	// Rfc3339TimeString
	ModificationTime pulumi.StringOutput `pulumi:"modificationTime"`
	// MutationProtectionStatus
	MutationProtection FirewallRuleGroupAssociationMutationProtectionPtrOutput `pulumi:"mutationProtection"`
	// FirewallRuleGroupAssociationName
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Priority
	Priority pulumi.IntOutput `pulumi:"priority"`
	// ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
	Status FirewallRuleGroupAssociationStatusOutput `pulumi:"status"`
	// FirewallDomainListAssociationStatus
	StatusMessage pulumi.StringOutput `pulumi:"statusMessage"`
	// Tags
	Tags FirewallRuleGroupAssociationTagArrayOutput `pulumi:"tags"`
	// VpcId
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewFirewallRuleGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewFirewallRuleGroupAssociation(ctx *pulumi.Context,
	name string, args *FirewallRuleGroupAssociationArgs, opts ...pulumi.ResourceOption) (*FirewallRuleGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallRuleGroupId == nil {
		return nil, errors.New("invalid value for required argument 'FirewallRuleGroupId'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource FirewallRuleGroupAssociation
	err := ctx.RegisterResource("aws-native:route53resolver:FirewallRuleGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallRuleGroupAssociation gets an existing FirewallRuleGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallRuleGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallRuleGroupAssociationState, opts ...pulumi.ResourceOption) (*FirewallRuleGroupAssociation, error) {
	var resource FirewallRuleGroupAssociation
	err := ctx.ReadResource("aws-native:route53resolver:FirewallRuleGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallRuleGroupAssociation resources.
type firewallRuleGroupAssociationState struct {
}

type FirewallRuleGroupAssociationState struct {
}

func (FirewallRuleGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallRuleGroupAssociationState)(nil)).Elem()
}

type firewallRuleGroupAssociationArgs struct {
	// FirewallRuleGroupId
	FirewallRuleGroupId string `pulumi:"firewallRuleGroupId"`
	// MutationProtectionStatus
	MutationProtection *FirewallRuleGroupAssociationMutationProtection `pulumi:"mutationProtection"`
	// FirewallRuleGroupAssociationName
	Name *string `pulumi:"name"`
	// Priority
	Priority int `pulumi:"priority"`
	// Tags
	Tags []FirewallRuleGroupAssociationTag `pulumi:"tags"`
	// VpcId
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a FirewallRuleGroupAssociation resource.
type FirewallRuleGroupAssociationArgs struct {
	// FirewallRuleGroupId
	FirewallRuleGroupId pulumi.StringInput
	// MutationProtectionStatus
	MutationProtection FirewallRuleGroupAssociationMutationProtectionPtrInput
	// FirewallRuleGroupAssociationName
	Name pulumi.StringPtrInput
	// Priority
	Priority pulumi.IntInput
	// Tags
	Tags FirewallRuleGroupAssociationTagArrayInput
	// VpcId
	VpcId pulumi.StringInput
}

func (FirewallRuleGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallRuleGroupAssociationArgs)(nil)).Elem()
}

type FirewallRuleGroupAssociationInput interface {
	pulumi.Input

	ToFirewallRuleGroupAssociationOutput() FirewallRuleGroupAssociationOutput
	ToFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationOutput
}

func (*FirewallRuleGroupAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupAssociation)(nil))
}

func (i *FirewallRuleGroupAssociation) ToFirewallRuleGroupAssociationOutput() FirewallRuleGroupAssociationOutput {
	return i.ToFirewallRuleGroupAssociationOutputWithContext(context.Background())
}

func (i *FirewallRuleGroupAssociation) ToFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallRuleGroupAssociationOutput)
}

type FirewallRuleGroupAssociationOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupAssociation)(nil))
}

func (o FirewallRuleGroupAssociationOutput) ToFirewallRuleGroupAssociationOutput() FirewallRuleGroupAssociationOutput {
	return o
}

func (o FirewallRuleGroupAssociationOutput) ToFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(FirewallRuleGroupAssociationOutput{})
}
