// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Route53Resolver::FirewallDomainList.
type FirewallDomainList struct {
	pulumi.CustomResourceState

	// Arn
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Rfc3339TimeString
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The id of the creator request.
	CreatorRequestId pulumi.StringOutput `pulumi:"creatorRequestId"`
	// Count
	DomainCount pulumi.IntOutput `pulumi:"domainCount"`
	// S3 URL to import domains from.
	DomainFileUrl pulumi.StringPtrOutput   `pulumi:"domainFileUrl"`
	Domains       pulumi.StringArrayOutput `pulumi:"domains"`
	// ServicePrincipal
	ManagedOwnerName pulumi.StringOutput `pulumi:"managedOwnerName"`
	// Rfc3339TimeString
	ModificationTime pulumi.StringOutput `pulumi:"modificationTime"`
	// FirewallDomainListName
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// ResolverFirewallDomainList, possible values are COMPLETE, DELETING, UPDATING, COMPLETE_IMPORT_FAILED, IMPORTING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
	Status FirewallDomainListStatusOutput `pulumi:"status"`
	// FirewallDomainListAssociationStatus
	StatusMessage pulumi.StringOutput `pulumi:"statusMessage"`
	// Tags
	Tags FirewallDomainListTagArrayOutput `pulumi:"tags"`
}

// NewFirewallDomainList registers a new resource with the given unique name, arguments, and options.
func NewFirewallDomainList(ctx *pulumi.Context,
	name string, args *FirewallDomainListArgs, opts ...pulumi.ResourceOption) (*FirewallDomainList, error) {
	if args == nil {
		args = &FirewallDomainListArgs{}
	}

	var resource FirewallDomainList
	err := ctx.RegisterResource("aws-native:route53resolver:FirewallDomainList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallDomainList gets an existing FirewallDomainList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallDomainList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallDomainListState, opts ...pulumi.ResourceOption) (*FirewallDomainList, error) {
	var resource FirewallDomainList
	err := ctx.ReadResource("aws-native:route53resolver:FirewallDomainList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallDomainList resources.
type firewallDomainListState struct {
}

type FirewallDomainListState struct {
}

func (FirewallDomainListState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallDomainListState)(nil)).Elem()
}

type firewallDomainListArgs struct {
	// S3 URL to import domains from.
	DomainFileUrl *string  `pulumi:"domainFileUrl"`
	Domains       []string `pulumi:"domains"`
	// FirewallDomainListName
	Name *string `pulumi:"name"`
	// Tags
	Tags []FirewallDomainListTag `pulumi:"tags"`
}

// The set of arguments for constructing a FirewallDomainList resource.
type FirewallDomainListArgs struct {
	// S3 URL to import domains from.
	DomainFileUrl pulumi.StringPtrInput
	Domains       pulumi.StringArrayInput
	// FirewallDomainListName
	Name pulumi.StringPtrInput
	// Tags
	Tags FirewallDomainListTagArrayInput
}

func (FirewallDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallDomainListArgs)(nil)).Elem()
}

type FirewallDomainListInput interface {
	pulumi.Input

	ToFirewallDomainListOutput() FirewallDomainListOutput
	ToFirewallDomainListOutputWithContext(ctx context.Context) FirewallDomainListOutput
}

func (*FirewallDomainList) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDomainList)(nil))
}

func (i *FirewallDomainList) ToFirewallDomainListOutput() FirewallDomainListOutput {
	return i.ToFirewallDomainListOutputWithContext(context.Background())
}

func (i *FirewallDomainList) ToFirewallDomainListOutputWithContext(ctx context.Context) FirewallDomainListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallDomainListOutput)
}

type FirewallDomainListOutput struct{ *pulumi.OutputState }

func (FirewallDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDomainList)(nil))
}

func (o FirewallDomainListOutput) ToFirewallDomainListOutput() FirewallDomainListOutput {
	return o
}

func (o FirewallDomainListOutput) ToFirewallDomainListOutputWithContext(ctx context.Context) FirewallDomainListOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(FirewallDomainListOutput{})
}
