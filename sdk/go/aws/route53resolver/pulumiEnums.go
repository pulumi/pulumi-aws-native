// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ResolverFirewallDomainList, possible values are COMPLETE, DELETING, UPDATING, COMPLETE_IMPORT_FAILED, IMPORTING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
type FirewallDomainListStatus string

const (
	FirewallDomainListStatusComplete                   = FirewallDomainListStatus("COMPLETE")
	FirewallDomainListStatusDeleting                   = FirewallDomainListStatus("DELETING")
	FirewallDomainListStatusUpdating                   = FirewallDomainListStatus("UPDATING")
	FirewallDomainListStatusCompleteImportFailed       = FirewallDomainListStatus("COMPLETE_IMPORT_FAILED")
	FirewallDomainListStatusImporting                  = FirewallDomainListStatus("IMPORTING")
	FirewallDomainListStatusInactiveOwnerAccountClosed = FirewallDomainListStatus("INACTIVE_OWNER_ACCOUNT_CLOSED")
)

func (FirewallDomainListStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDomainListStatus)(nil)).Elem()
}

func (e FirewallDomainListStatus) ToFirewallDomainListStatusOutput() FirewallDomainListStatusOutput {
	return pulumi.ToOutput(e).(FirewallDomainListStatusOutput)
}

func (e FirewallDomainListStatus) ToFirewallDomainListStatusOutputWithContext(ctx context.Context) FirewallDomainListStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallDomainListStatusOutput)
}

func (e FirewallDomainListStatus) ToFirewallDomainListStatusPtrOutput() FirewallDomainListStatusPtrOutput {
	return e.ToFirewallDomainListStatusPtrOutputWithContext(context.Background())
}

func (e FirewallDomainListStatus) ToFirewallDomainListStatusPtrOutputWithContext(ctx context.Context) FirewallDomainListStatusPtrOutput {
	return FirewallDomainListStatus(e).ToFirewallDomainListStatusOutputWithContext(ctx).ToFirewallDomainListStatusPtrOutputWithContext(ctx)
}

func (e FirewallDomainListStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallDomainListStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallDomainListStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallDomainListStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallDomainListStatusOutput struct{ *pulumi.OutputState }

func (FirewallDomainListStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDomainListStatus)(nil)).Elem()
}

func (o FirewallDomainListStatusOutput) ToFirewallDomainListStatusOutput() FirewallDomainListStatusOutput {
	return o
}

func (o FirewallDomainListStatusOutput) ToFirewallDomainListStatusOutputWithContext(ctx context.Context) FirewallDomainListStatusOutput {
	return o
}

func (o FirewallDomainListStatusOutput) ToFirewallDomainListStatusPtrOutput() FirewallDomainListStatusPtrOutput {
	return o.ToFirewallDomainListStatusPtrOutputWithContext(context.Background())
}

func (o FirewallDomainListStatusOutput) ToFirewallDomainListStatusPtrOutputWithContext(ctx context.Context) FirewallDomainListStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallDomainListStatus) *FirewallDomainListStatus {
		return &v
	}).(FirewallDomainListStatusPtrOutput)
}

func (o FirewallDomainListStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallDomainListStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallDomainListStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallDomainListStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallDomainListStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallDomainListStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallDomainListStatusPtrOutput struct{ *pulumi.OutputState }

func (FirewallDomainListStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallDomainListStatus)(nil)).Elem()
}

func (o FirewallDomainListStatusPtrOutput) ToFirewallDomainListStatusPtrOutput() FirewallDomainListStatusPtrOutput {
	return o
}

func (o FirewallDomainListStatusPtrOutput) ToFirewallDomainListStatusPtrOutputWithContext(ctx context.Context) FirewallDomainListStatusPtrOutput {
	return o
}

func (o FirewallDomainListStatusPtrOutput) Elem() FirewallDomainListStatusOutput {
	return o.ApplyT(func(v *FirewallDomainListStatus) FirewallDomainListStatus {
		if v != nil {
			return *v
		}
		var ret FirewallDomainListStatus
		return ret
	}).(FirewallDomainListStatusOutput)
}

func (o FirewallDomainListStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallDomainListStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallDomainListStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallDomainListStatusInput is an input type that accepts FirewallDomainListStatusArgs and FirewallDomainListStatusOutput values.
// You can construct a concrete instance of `FirewallDomainListStatusInput` via:
//
//          FirewallDomainListStatusArgs{...}
type FirewallDomainListStatusInput interface {
	pulumi.Input

	ToFirewallDomainListStatusOutput() FirewallDomainListStatusOutput
	ToFirewallDomainListStatusOutputWithContext(context.Context) FirewallDomainListStatusOutput
}

var firewallDomainListStatusPtrType = reflect.TypeOf((**FirewallDomainListStatus)(nil)).Elem()

type FirewallDomainListStatusPtrInput interface {
	pulumi.Input

	ToFirewallDomainListStatusPtrOutput() FirewallDomainListStatusPtrOutput
	ToFirewallDomainListStatusPtrOutputWithContext(context.Context) FirewallDomainListStatusPtrOutput
}

type firewallDomainListStatusPtr string

func FirewallDomainListStatusPtr(v string) FirewallDomainListStatusPtrInput {
	return (*firewallDomainListStatusPtr)(&v)
}

func (*firewallDomainListStatusPtr) ElementType() reflect.Type {
	return firewallDomainListStatusPtrType
}

func (in *firewallDomainListStatusPtr) ToFirewallDomainListStatusPtrOutput() FirewallDomainListStatusPtrOutput {
	return pulumi.ToOutput(in).(FirewallDomainListStatusPtrOutput)
}

func (in *firewallDomainListStatusPtr) ToFirewallDomainListStatusPtrOutputWithContext(ctx context.Context) FirewallDomainListStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallDomainListStatusPtrOutput)
}

// MutationProtectionStatus
type FirewallRuleGroupAssociationMutationProtection string

const (
	FirewallRuleGroupAssociationMutationProtectionEnabled  = FirewallRuleGroupAssociationMutationProtection("ENABLED")
	FirewallRuleGroupAssociationMutationProtectionDisabled = FirewallRuleGroupAssociationMutationProtection("DISABLED")
)

func (FirewallRuleGroupAssociationMutationProtection) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupAssociationMutationProtection)(nil)).Elem()
}

func (e FirewallRuleGroupAssociationMutationProtection) ToFirewallRuleGroupAssociationMutationProtectionOutput() FirewallRuleGroupAssociationMutationProtectionOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupAssociationMutationProtectionOutput)
}

func (e FirewallRuleGroupAssociationMutationProtection) ToFirewallRuleGroupAssociationMutationProtectionOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationMutationProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupAssociationMutationProtectionOutput)
}

func (e FirewallRuleGroupAssociationMutationProtection) ToFirewallRuleGroupAssociationMutationProtectionPtrOutput() FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return e.ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupAssociationMutationProtection) ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return FirewallRuleGroupAssociationMutationProtection(e).ToFirewallRuleGroupAssociationMutationProtectionOutputWithContext(ctx).ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupAssociationMutationProtection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupAssociationMutationProtection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupAssociationMutationProtection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupAssociationMutationProtection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupAssociationMutationProtectionOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupAssociationMutationProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupAssociationMutationProtection)(nil)).Elem()
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToFirewallRuleGroupAssociationMutationProtectionOutput() FirewallRuleGroupAssociationMutationProtectionOutput {
	return o
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToFirewallRuleGroupAssociationMutationProtectionOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationMutationProtectionOutput {
	return o
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToFirewallRuleGroupAssociationMutationProtectionPtrOutput() FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return o.ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupAssociationMutationProtection) *FirewallRuleGroupAssociationMutationProtection {
		return &v
	}).(FirewallRuleGroupAssociationMutationProtectionPtrOutput)
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupAssociationMutationProtection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationMutationProtectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupAssociationMutationProtection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupAssociationMutationProtectionPtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupAssociationMutationProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupAssociationMutationProtection)(nil)).Elem()
}

func (o FirewallRuleGroupAssociationMutationProtectionPtrOutput) ToFirewallRuleGroupAssociationMutationProtectionPtrOutput() FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return o
}

func (o FirewallRuleGroupAssociationMutationProtectionPtrOutput) ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return o
}

func (o FirewallRuleGroupAssociationMutationProtectionPtrOutput) Elem() FirewallRuleGroupAssociationMutationProtectionOutput {
	return o.ApplyT(func(v *FirewallRuleGroupAssociationMutationProtection) FirewallRuleGroupAssociationMutationProtection {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupAssociationMutationProtection
		return ret
	}).(FirewallRuleGroupAssociationMutationProtectionOutput)
}

func (o FirewallRuleGroupAssociationMutationProtectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationMutationProtectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupAssociationMutationProtection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupAssociationMutationProtectionInput is an input type that accepts FirewallRuleGroupAssociationMutationProtectionArgs and FirewallRuleGroupAssociationMutationProtectionOutput values.
// You can construct a concrete instance of `FirewallRuleGroupAssociationMutationProtectionInput` via:
//
//          FirewallRuleGroupAssociationMutationProtectionArgs{...}
type FirewallRuleGroupAssociationMutationProtectionInput interface {
	pulumi.Input

	ToFirewallRuleGroupAssociationMutationProtectionOutput() FirewallRuleGroupAssociationMutationProtectionOutput
	ToFirewallRuleGroupAssociationMutationProtectionOutputWithContext(context.Context) FirewallRuleGroupAssociationMutationProtectionOutput
}

var firewallRuleGroupAssociationMutationProtectionPtrType = reflect.TypeOf((**FirewallRuleGroupAssociationMutationProtection)(nil)).Elem()

type FirewallRuleGroupAssociationMutationProtectionPtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupAssociationMutationProtectionPtrOutput() FirewallRuleGroupAssociationMutationProtectionPtrOutput
	ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(context.Context) FirewallRuleGroupAssociationMutationProtectionPtrOutput
}

type firewallRuleGroupAssociationMutationProtectionPtr string

func FirewallRuleGroupAssociationMutationProtectionPtr(v string) FirewallRuleGroupAssociationMutationProtectionPtrInput {
	return (*firewallRuleGroupAssociationMutationProtectionPtr)(&v)
}

func (*firewallRuleGroupAssociationMutationProtectionPtr) ElementType() reflect.Type {
	return firewallRuleGroupAssociationMutationProtectionPtrType
}

func (in *firewallRuleGroupAssociationMutationProtectionPtr) ToFirewallRuleGroupAssociationMutationProtectionPtrOutput() FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupAssociationMutationProtectionPtrOutput)
}

func (in *firewallRuleGroupAssociationMutationProtectionPtr) ToFirewallRuleGroupAssociationMutationProtectionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationMutationProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupAssociationMutationProtectionPtrOutput)
}

// ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
type FirewallRuleGroupAssociationStatus string

const (
	FirewallRuleGroupAssociationStatusComplete                   = FirewallRuleGroupAssociationStatus("COMPLETE")
	FirewallRuleGroupAssociationStatusDeleting                   = FirewallRuleGroupAssociationStatus("DELETING")
	FirewallRuleGroupAssociationStatusUpdating                   = FirewallRuleGroupAssociationStatus("UPDATING")
	FirewallRuleGroupAssociationStatusInactiveOwnerAccountClosed = FirewallRuleGroupAssociationStatus("INACTIVE_OWNER_ACCOUNT_CLOSED")
)

func (FirewallRuleGroupAssociationStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupAssociationStatus)(nil)).Elem()
}

func (e FirewallRuleGroupAssociationStatus) ToFirewallRuleGroupAssociationStatusOutput() FirewallRuleGroupAssociationStatusOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupAssociationStatusOutput)
}

func (e FirewallRuleGroupAssociationStatus) ToFirewallRuleGroupAssociationStatusOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupAssociationStatusOutput)
}

func (e FirewallRuleGroupAssociationStatus) ToFirewallRuleGroupAssociationStatusPtrOutput() FirewallRuleGroupAssociationStatusPtrOutput {
	return e.ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupAssociationStatus) ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationStatusPtrOutput {
	return FirewallRuleGroupAssociationStatus(e).ToFirewallRuleGroupAssociationStatusOutputWithContext(ctx).ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupAssociationStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupAssociationStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupAssociationStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupAssociationStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupAssociationStatusOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupAssociationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupAssociationStatus)(nil)).Elem()
}

func (o FirewallRuleGroupAssociationStatusOutput) ToFirewallRuleGroupAssociationStatusOutput() FirewallRuleGroupAssociationStatusOutput {
	return o
}

func (o FirewallRuleGroupAssociationStatusOutput) ToFirewallRuleGroupAssociationStatusOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationStatusOutput {
	return o
}

func (o FirewallRuleGroupAssociationStatusOutput) ToFirewallRuleGroupAssociationStatusPtrOutput() FirewallRuleGroupAssociationStatusPtrOutput {
	return o.ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationStatusOutput) ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupAssociationStatus) *FirewallRuleGroupAssociationStatus {
		return &v
	}).(FirewallRuleGroupAssociationStatusPtrOutput)
}

func (o FirewallRuleGroupAssociationStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupAssociationStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupAssociationStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupAssociationStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupAssociationStatusPtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupAssociationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupAssociationStatus)(nil)).Elem()
}

func (o FirewallRuleGroupAssociationStatusPtrOutput) ToFirewallRuleGroupAssociationStatusPtrOutput() FirewallRuleGroupAssociationStatusPtrOutput {
	return o
}

func (o FirewallRuleGroupAssociationStatusPtrOutput) ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationStatusPtrOutput {
	return o
}

func (o FirewallRuleGroupAssociationStatusPtrOutput) Elem() FirewallRuleGroupAssociationStatusOutput {
	return o.ApplyT(func(v *FirewallRuleGroupAssociationStatus) FirewallRuleGroupAssociationStatus {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupAssociationStatus
		return ret
	}).(FirewallRuleGroupAssociationStatusOutput)
}

func (o FirewallRuleGroupAssociationStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupAssociationStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupAssociationStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupAssociationStatusInput is an input type that accepts FirewallRuleGroupAssociationStatusArgs and FirewallRuleGroupAssociationStatusOutput values.
// You can construct a concrete instance of `FirewallRuleGroupAssociationStatusInput` via:
//
//          FirewallRuleGroupAssociationStatusArgs{...}
type FirewallRuleGroupAssociationStatusInput interface {
	pulumi.Input

	ToFirewallRuleGroupAssociationStatusOutput() FirewallRuleGroupAssociationStatusOutput
	ToFirewallRuleGroupAssociationStatusOutputWithContext(context.Context) FirewallRuleGroupAssociationStatusOutput
}

var firewallRuleGroupAssociationStatusPtrType = reflect.TypeOf((**FirewallRuleGroupAssociationStatus)(nil)).Elem()

type FirewallRuleGroupAssociationStatusPtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupAssociationStatusPtrOutput() FirewallRuleGroupAssociationStatusPtrOutput
	ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(context.Context) FirewallRuleGroupAssociationStatusPtrOutput
}

type firewallRuleGroupAssociationStatusPtr string

func FirewallRuleGroupAssociationStatusPtr(v string) FirewallRuleGroupAssociationStatusPtrInput {
	return (*firewallRuleGroupAssociationStatusPtr)(&v)
}

func (*firewallRuleGroupAssociationStatusPtr) ElementType() reflect.Type {
	return firewallRuleGroupAssociationStatusPtrType
}

func (in *firewallRuleGroupAssociationStatusPtr) ToFirewallRuleGroupAssociationStatusPtrOutput() FirewallRuleGroupAssociationStatusPtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupAssociationStatusPtrOutput)
}

func (in *firewallRuleGroupAssociationStatusPtr) ToFirewallRuleGroupAssociationStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupAssociationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupAssociationStatusPtrOutput)
}

// Rule Action
type FirewallRuleGroupFirewallRuleAction string

const (
	FirewallRuleGroupFirewallRuleActionAllow = FirewallRuleGroupFirewallRuleAction("ALLOW")
	FirewallRuleGroupFirewallRuleActionBlock = FirewallRuleGroupFirewallRuleAction("BLOCK")
	FirewallRuleGroupFirewallRuleActionAlert = FirewallRuleGroupFirewallRuleAction("ALERT")
)

func (FirewallRuleGroupFirewallRuleAction) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupFirewallRuleAction)(nil)).Elem()
}

func (e FirewallRuleGroupFirewallRuleAction) ToFirewallRuleGroupFirewallRuleActionOutput() FirewallRuleGroupFirewallRuleActionOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupFirewallRuleActionOutput)
}

func (e FirewallRuleGroupFirewallRuleAction) ToFirewallRuleGroupFirewallRuleActionOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupFirewallRuleActionOutput)
}

func (e FirewallRuleGroupFirewallRuleAction) ToFirewallRuleGroupFirewallRuleActionPtrOutput() FirewallRuleGroupFirewallRuleActionPtrOutput {
	return e.ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupFirewallRuleAction) ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleActionPtrOutput {
	return FirewallRuleGroupFirewallRuleAction(e).ToFirewallRuleGroupFirewallRuleActionOutputWithContext(ctx).ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupFirewallRuleAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupFirewallRuleAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupFirewallRuleAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupFirewallRuleAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupFirewallRuleActionOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupFirewallRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupFirewallRuleAction)(nil)).Elem()
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToFirewallRuleGroupFirewallRuleActionOutput() FirewallRuleGroupFirewallRuleActionOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToFirewallRuleGroupFirewallRuleActionOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleActionOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToFirewallRuleGroupFirewallRuleActionPtrOutput() FirewallRuleGroupFirewallRuleActionPtrOutput {
	return o.ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupFirewallRuleAction) *FirewallRuleGroupFirewallRuleAction {
		return &v
	}).(FirewallRuleGroupFirewallRuleActionPtrOutput)
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupFirewallRuleAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupFirewallRuleAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupFirewallRuleActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupFirewallRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupFirewallRuleAction)(nil)).Elem()
}

func (o FirewallRuleGroupFirewallRuleActionPtrOutput) ToFirewallRuleGroupFirewallRuleActionPtrOutput() FirewallRuleGroupFirewallRuleActionPtrOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleActionPtrOutput) ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleActionPtrOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleActionPtrOutput) Elem() FirewallRuleGroupFirewallRuleActionOutput {
	return o.ApplyT(func(v *FirewallRuleGroupFirewallRuleAction) FirewallRuleGroupFirewallRuleAction {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupFirewallRuleAction
		return ret
	}).(FirewallRuleGroupFirewallRuleActionOutput)
}

func (o FirewallRuleGroupFirewallRuleActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupFirewallRuleAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupFirewallRuleActionInput is an input type that accepts FirewallRuleGroupFirewallRuleActionArgs and FirewallRuleGroupFirewallRuleActionOutput values.
// You can construct a concrete instance of `FirewallRuleGroupFirewallRuleActionInput` via:
//
//          FirewallRuleGroupFirewallRuleActionArgs{...}
type FirewallRuleGroupFirewallRuleActionInput interface {
	pulumi.Input

	ToFirewallRuleGroupFirewallRuleActionOutput() FirewallRuleGroupFirewallRuleActionOutput
	ToFirewallRuleGroupFirewallRuleActionOutputWithContext(context.Context) FirewallRuleGroupFirewallRuleActionOutput
}

var firewallRuleGroupFirewallRuleActionPtrType = reflect.TypeOf((**FirewallRuleGroupFirewallRuleAction)(nil)).Elem()

type FirewallRuleGroupFirewallRuleActionPtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupFirewallRuleActionPtrOutput() FirewallRuleGroupFirewallRuleActionPtrOutput
	ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(context.Context) FirewallRuleGroupFirewallRuleActionPtrOutput
}

type firewallRuleGroupFirewallRuleActionPtr string

func FirewallRuleGroupFirewallRuleActionPtr(v string) FirewallRuleGroupFirewallRuleActionPtrInput {
	return (*firewallRuleGroupFirewallRuleActionPtr)(&v)
}

func (*firewallRuleGroupFirewallRuleActionPtr) ElementType() reflect.Type {
	return firewallRuleGroupFirewallRuleActionPtrType
}

func (in *firewallRuleGroupFirewallRuleActionPtr) ToFirewallRuleGroupFirewallRuleActionPtrOutput() FirewallRuleGroupFirewallRuleActionPtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupFirewallRuleActionPtrOutput)
}

func (in *firewallRuleGroupFirewallRuleActionPtr) ToFirewallRuleGroupFirewallRuleActionPtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupFirewallRuleActionPtrOutput)
}

// BlockOverrideDnsType
type FirewallRuleGroupFirewallRuleBlockOverrideDnsType string

const (
	FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeCname = FirewallRuleGroupFirewallRuleBlockOverrideDnsType("CNAME")
)

func (FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupFirewallRuleBlockOverrideDnsType)(nil)).Elem()
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return e.ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return FirewallRuleGroupFirewallRuleBlockOverrideDnsType(e).ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutputWithContext(ctx).ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupFirewallRuleBlockOverrideDnsType)(nil)).Elem()
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return o.ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupFirewallRuleBlockOverrideDnsType) *FirewallRuleGroupFirewallRuleBlockOverrideDnsType {
		return &v
	}).(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput)
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupFirewallRuleBlockOverrideDnsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupFirewallRuleBlockOverrideDnsType)(nil)).Elem()
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput) Elem() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput {
	return o.ApplyT(func(v *FirewallRuleGroupFirewallRuleBlockOverrideDnsType) FirewallRuleGroupFirewallRuleBlockOverrideDnsType {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupFirewallRuleBlockOverrideDnsType
		return ret
	}).(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput)
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupFirewallRuleBlockOverrideDnsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeInput is an input type that accepts FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeArgs and FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput values.
// You can construct a concrete instance of `FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeInput` via:
//
//          FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeArgs{...}
type FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeInput interface {
	pulumi.Input

	ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput
	ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutputWithContext(context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput
}

var firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrType = reflect.TypeOf((**FirewallRuleGroupFirewallRuleBlockOverrideDnsType)(nil)).Elem()

type FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput
	ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput
}

type firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtr string

func FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtr(v string) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrInput {
	return (*firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtr)(&v)
}

func (*firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtr) ElementType() reflect.Type {
	return firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrType
}

func (in *firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtr) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput() FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput)
}

func (in *firewallRuleGroupFirewallRuleBlockOverrideDnsTypePtr) ToFirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput)
}

// BlockResponse
type FirewallRuleGroupFirewallRuleBlockResponse string

const (
	FirewallRuleGroupFirewallRuleBlockResponseNodata   = FirewallRuleGroupFirewallRuleBlockResponse("NODATA")
	FirewallRuleGroupFirewallRuleBlockResponseNxdomain = FirewallRuleGroupFirewallRuleBlockResponse("NXDOMAIN")
	FirewallRuleGroupFirewallRuleBlockResponseOverride = FirewallRuleGroupFirewallRuleBlockResponse("OVERRIDE")
)

func (FirewallRuleGroupFirewallRuleBlockResponse) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupFirewallRuleBlockResponse)(nil)).Elem()
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToFirewallRuleGroupFirewallRuleBlockResponseOutput() FirewallRuleGroupFirewallRuleBlockResponseOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupFirewallRuleBlockResponseOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToFirewallRuleGroupFirewallRuleBlockResponseOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockResponseOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupFirewallRuleBlockResponseOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutput() FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return e.ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return FirewallRuleGroupFirewallRuleBlockResponse(e).ToFirewallRuleGroupFirewallRuleBlockResponseOutputWithContext(ctx).ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupFirewallRuleBlockResponse) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupFirewallRuleBlockResponseOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupFirewallRuleBlockResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupFirewallRuleBlockResponse)(nil)).Elem()
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToFirewallRuleGroupFirewallRuleBlockResponseOutput() FirewallRuleGroupFirewallRuleBlockResponseOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToFirewallRuleGroupFirewallRuleBlockResponseOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockResponseOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutput() FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return o.ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupFirewallRuleBlockResponse) *FirewallRuleGroupFirewallRuleBlockResponse {
		return &v
	}).(FirewallRuleGroupFirewallRuleBlockResponsePtrOutput)
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupFirewallRuleBlockResponse) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockResponseOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupFirewallRuleBlockResponse) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupFirewallRuleBlockResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupFirewallRuleBlockResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupFirewallRuleBlockResponse)(nil)).Elem()
}

func (o FirewallRuleGroupFirewallRuleBlockResponsePtrOutput) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutput() FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockResponsePtrOutput) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return o
}

func (o FirewallRuleGroupFirewallRuleBlockResponsePtrOutput) Elem() FirewallRuleGroupFirewallRuleBlockResponseOutput {
	return o.ApplyT(func(v *FirewallRuleGroupFirewallRuleBlockResponse) FirewallRuleGroupFirewallRuleBlockResponse {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupFirewallRuleBlockResponse
		return ret
	}).(FirewallRuleGroupFirewallRuleBlockResponseOutput)
}

func (o FirewallRuleGroupFirewallRuleBlockResponsePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupFirewallRuleBlockResponsePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupFirewallRuleBlockResponse) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupFirewallRuleBlockResponseInput is an input type that accepts FirewallRuleGroupFirewallRuleBlockResponseArgs and FirewallRuleGroupFirewallRuleBlockResponseOutput values.
// You can construct a concrete instance of `FirewallRuleGroupFirewallRuleBlockResponseInput` via:
//
//          FirewallRuleGroupFirewallRuleBlockResponseArgs{...}
type FirewallRuleGroupFirewallRuleBlockResponseInput interface {
	pulumi.Input

	ToFirewallRuleGroupFirewallRuleBlockResponseOutput() FirewallRuleGroupFirewallRuleBlockResponseOutput
	ToFirewallRuleGroupFirewallRuleBlockResponseOutputWithContext(context.Context) FirewallRuleGroupFirewallRuleBlockResponseOutput
}

var firewallRuleGroupFirewallRuleBlockResponsePtrType = reflect.TypeOf((**FirewallRuleGroupFirewallRuleBlockResponse)(nil)).Elem()

type FirewallRuleGroupFirewallRuleBlockResponsePtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutput() FirewallRuleGroupFirewallRuleBlockResponsePtrOutput
	ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(context.Context) FirewallRuleGroupFirewallRuleBlockResponsePtrOutput
}

type firewallRuleGroupFirewallRuleBlockResponsePtr string

func FirewallRuleGroupFirewallRuleBlockResponsePtr(v string) FirewallRuleGroupFirewallRuleBlockResponsePtrInput {
	return (*firewallRuleGroupFirewallRuleBlockResponsePtr)(&v)
}

func (*firewallRuleGroupFirewallRuleBlockResponsePtr) ElementType() reflect.Type {
	return firewallRuleGroupFirewallRuleBlockResponsePtrType
}

func (in *firewallRuleGroupFirewallRuleBlockResponsePtr) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutput() FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupFirewallRuleBlockResponsePtrOutput)
}

func (in *firewallRuleGroupFirewallRuleBlockResponsePtr) ToFirewallRuleGroupFirewallRuleBlockResponsePtrOutputWithContext(ctx context.Context) FirewallRuleGroupFirewallRuleBlockResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupFirewallRuleBlockResponsePtrOutput)
}

// ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
type FirewallRuleGroupShareStatus string

const (
	FirewallRuleGroupShareStatusNotShared    = FirewallRuleGroupShareStatus("NOT_SHARED")
	FirewallRuleGroupShareStatusSharedWithMe = FirewallRuleGroupShareStatus("SHARED_WITH_ME")
	FirewallRuleGroupShareStatusSharedByMe   = FirewallRuleGroupShareStatus("SHARED_BY_ME")
)

func (FirewallRuleGroupShareStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupShareStatus)(nil)).Elem()
}

func (e FirewallRuleGroupShareStatus) ToFirewallRuleGroupShareStatusOutput() FirewallRuleGroupShareStatusOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupShareStatusOutput)
}

func (e FirewallRuleGroupShareStatus) ToFirewallRuleGroupShareStatusOutputWithContext(ctx context.Context) FirewallRuleGroupShareStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupShareStatusOutput)
}

func (e FirewallRuleGroupShareStatus) ToFirewallRuleGroupShareStatusPtrOutput() FirewallRuleGroupShareStatusPtrOutput {
	return e.ToFirewallRuleGroupShareStatusPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupShareStatus) ToFirewallRuleGroupShareStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupShareStatusPtrOutput {
	return FirewallRuleGroupShareStatus(e).ToFirewallRuleGroupShareStatusOutputWithContext(ctx).ToFirewallRuleGroupShareStatusPtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupShareStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupShareStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupShareStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupShareStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupShareStatusOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupShareStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupShareStatus)(nil)).Elem()
}

func (o FirewallRuleGroupShareStatusOutput) ToFirewallRuleGroupShareStatusOutput() FirewallRuleGroupShareStatusOutput {
	return o
}

func (o FirewallRuleGroupShareStatusOutput) ToFirewallRuleGroupShareStatusOutputWithContext(ctx context.Context) FirewallRuleGroupShareStatusOutput {
	return o
}

func (o FirewallRuleGroupShareStatusOutput) ToFirewallRuleGroupShareStatusPtrOutput() FirewallRuleGroupShareStatusPtrOutput {
	return o.ToFirewallRuleGroupShareStatusPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupShareStatusOutput) ToFirewallRuleGroupShareStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupShareStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupShareStatus) *FirewallRuleGroupShareStatus {
		return &v
	}).(FirewallRuleGroupShareStatusPtrOutput)
}

func (o FirewallRuleGroupShareStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupShareStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupShareStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupShareStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupShareStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupShareStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupShareStatusPtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupShareStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupShareStatus)(nil)).Elem()
}

func (o FirewallRuleGroupShareStatusPtrOutput) ToFirewallRuleGroupShareStatusPtrOutput() FirewallRuleGroupShareStatusPtrOutput {
	return o
}

func (o FirewallRuleGroupShareStatusPtrOutput) ToFirewallRuleGroupShareStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupShareStatusPtrOutput {
	return o
}

func (o FirewallRuleGroupShareStatusPtrOutput) Elem() FirewallRuleGroupShareStatusOutput {
	return o.ApplyT(func(v *FirewallRuleGroupShareStatus) FirewallRuleGroupShareStatus {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupShareStatus
		return ret
	}).(FirewallRuleGroupShareStatusOutput)
}

func (o FirewallRuleGroupShareStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupShareStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupShareStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupShareStatusInput is an input type that accepts FirewallRuleGroupShareStatusArgs and FirewallRuleGroupShareStatusOutput values.
// You can construct a concrete instance of `FirewallRuleGroupShareStatusInput` via:
//
//          FirewallRuleGroupShareStatusArgs{...}
type FirewallRuleGroupShareStatusInput interface {
	pulumi.Input

	ToFirewallRuleGroupShareStatusOutput() FirewallRuleGroupShareStatusOutput
	ToFirewallRuleGroupShareStatusOutputWithContext(context.Context) FirewallRuleGroupShareStatusOutput
}

var firewallRuleGroupShareStatusPtrType = reflect.TypeOf((**FirewallRuleGroupShareStatus)(nil)).Elem()

type FirewallRuleGroupShareStatusPtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupShareStatusPtrOutput() FirewallRuleGroupShareStatusPtrOutput
	ToFirewallRuleGroupShareStatusPtrOutputWithContext(context.Context) FirewallRuleGroupShareStatusPtrOutput
}

type firewallRuleGroupShareStatusPtr string

func FirewallRuleGroupShareStatusPtr(v string) FirewallRuleGroupShareStatusPtrInput {
	return (*firewallRuleGroupShareStatusPtr)(&v)
}

func (*firewallRuleGroupShareStatusPtr) ElementType() reflect.Type {
	return firewallRuleGroupShareStatusPtrType
}

func (in *firewallRuleGroupShareStatusPtr) ToFirewallRuleGroupShareStatusPtrOutput() FirewallRuleGroupShareStatusPtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupShareStatusPtrOutput)
}

func (in *firewallRuleGroupShareStatusPtr) ToFirewallRuleGroupShareStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupShareStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupShareStatusPtrOutput)
}

// ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
type FirewallRuleGroupStatus string

const (
	FirewallRuleGroupStatusComplete                   = FirewallRuleGroupStatus("COMPLETE")
	FirewallRuleGroupStatusDeleting                   = FirewallRuleGroupStatus("DELETING")
	FirewallRuleGroupStatusUpdating                   = FirewallRuleGroupStatus("UPDATING")
	FirewallRuleGroupStatusInactiveOwnerAccountClosed = FirewallRuleGroupStatus("INACTIVE_OWNER_ACCOUNT_CLOSED")
)

func (FirewallRuleGroupStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupStatus)(nil)).Elem()
}

func (e FirewallRuleGroupStatus) ToFirewallRuleGroupStatusOutput() FirewallRuleGroupStatusOutput {
	return pulumi.ToOutput(e).(FirewallRuleGroupStatusOutput)
}

func (e FirewallRuleGroupStatus) ToFirewallRuleGroupStatusOutputWithContext(ctx context.Context) FirewallRuleGroupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallRuleGroupStatusOutput)
}

func (e FirewallRuleGroupStatus) ToFirewallRuleGroupStatusPtrOutput() FirewallRuleGroupStatusPtrOutput {
	return e.ToFirewallRuleGroupStatusPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupStatus) ToFirewallRuleGroupStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupStatusPtrOutput {
	return FirewallRuleGroupStatus(e).ToFirewallRuleGroupStatusOutputWithContext(ctx).ToFirewallRuleGroupStatusPtrOutputWithContext(ctx)
}

func (e FirewallRuleGroupStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallRuleGroupStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallRuleGroupStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallRuleGroupStatusOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleGroupStatus)(nil)).Elem()
}

func (o FirewallRuleGroupStatusOutput) ToFirewallRuleGroupStatusOutput() FirewallRuleGroupStatusOutput {
	return o
}

func (o FirewallRuleGroupStatusOutput) ToFirewallRuleGroupStatusOutputWithContext(ctx context.Context) FirewallRuleGroupStatusOutput {
	return o
}

func (o FirewallRuleGroupStatusOutput) ToFirewallRuleGroupStatusPtrOutput() FirewallRuleGroupStatusPtrOutput {
	return o.ToFirewallRuleGroupStatusPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupStatusOutput) ToFirewallRuleGroupStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleGroupStatus) *FirewallRuleGroupStatus {
		return &v
	}).(FirewallRuleGroupStatusPtrOutput)
}

func (o FirewallRuleGroupStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleGroupStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleGroupStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleGroupStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleGroupStatus)(nil)).Elem()
}

func (o FirewallRuleGroupStatusPtrOutput) ToFirewallRuleGroupStatusPtrOutput() FirewallRuleGroupStatusPtrOutput {
	return o
}

func (o FirewallRuleGroupStatusPtrOutput) ToFirewallRuleGroupStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupStatusPtrOutput {
	return o
}

func (o FirewallRuleGroupStatusPtrOutput) Elem() FirewallRuleGroupStatusOutput {
	return o.ApplyT(func(v *FirewallRuleGroupStatus) FirewallRuleGroupStatus {
		if v != nil {
			return *v
		}
		var ret FirewallRuleGroupStatus
		return ret
	}).(FirewallRuleGroupStatusOutput)
}

func (o FirewallRuleGroupStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleGroupStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleGroupStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallRuleGroupStatusInput is an input type that accepts FirewallRuleGroupStatusArgs and FirewallRuleGroupStatusOutput values.
// You can construct a concrete instance of `FirewallRuleGroupStatusInput` via:
//
//          FirewallRuleGroupStatusArgs{...}
type FirewallRuleGroupStatusInput interface {
	pulumi.Input

	ToFirewallRuleGroupStatusOutput() FirewallRuleGroupStatusOutput
	ToFirewallRuleGroupStatusOutputWithContext(context.Context) FirewallRuleGroupStatusOutput
}

var firewallRuleGroupStatusPtrType = reflect.TypeOf((**FirewallRuleGroupStatus)(nil)).Elem()

type FirewallRuleGroupStatusPtrInput interface {
	pulumi.Input

	ToFirewallRuleGroupStatusPtrOutput() FirewallRuleGroupStatusPtrOutput
	ToFirewallRuleGroupStatusPtrOutputWithContext(context.Context) FirewallRuleGroupStatusPtrOutput
}

type firewallRuleGroupStatusPtr string

func FirewallRuleGroupStatusPtr(v string) FirewallRuleGroupStatusPtrInput {
	return (*firewallRuleGroupStatusPtr)(&v)
}

func (*firewallRuleGroupStatusPtr) ElementType() reflect.Type {
	return firewallRuleGroupStatusPtrType
}

func (in *firewallRuleGroupStatusPtr) ToFirewallRuleGroupStatusPtrOutput() FirewallRuleGroupStatusPtrOutput {
	return pulumi.ToOutput(in).(FirewallRuleGroupStatusPtrOutput)
}

func (in *firewallRuleGroupStatusPtr) ToFirewallRuleGroupStatusPtrOutputWithContext(ctx context.Context) FirewallRuleGroupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallRuleGroupStatusPtrOutput)
}

// ResolverAutodefinedReverseStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
type ResolverConfigAutodefinedReverse string

const (
	ResolverConfigAutodefinedReverseEnabling  = ResolverConfigAutodefinedReverse("ENABLING")
	ResolverConfigAutodefinedReverseEnabled   = ResolverConfigAutodefinedReverse("ENABLED")
	ResolverConfigAutodefinedReverseDisabling = ResolverConfigAutodefinedReverse("DISABLING")
	ResolverConfigAutodefinedReverseDisabled  = ResolverConfigAutodefinedReverse("DISABLED")
)

func (ResolverConfigAutodefinedReverse) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverConfigAutodefinedReverse)(nil)).Elem()
}

func (e ResolverConfigAutodefinedReverse) ToResolverConfigAutodefinedReverseOutput() ResolverConfigAutodefinedReverseOutput {
	return pulumi.ToOutput(e).(ResolverConfigAutodefinedReverseOutput)
}

func (e ResolverConfigAutodefinedReverse) ToResolverConfigAutodefinedReverseOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverConfigAutodefinedReverseOutput)
}

func (e ResolverConfigAutodefinedReverse) ToResolverConfigAutodefinedReversePtrOutput() ResolverConfigAutodefinedReversePtrOutput {
	return e.ToResolverConfigAutodefinedReversePtrOutputWithContext(context.Background())
}

func (e ResolverConfigAutodefinedReverse) ToResolverConfigAutodefinedReversePtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReversePtrOutput {
	return ResolverConfigAutodefinedReverse(e).ToResolverConfigAutodefinedReverseOutputWithContext(ctx).ToResolverConfigAutodefinedReversePtrOutputWithContext(ctx)
}

func (e ResolverConfigAutodefinedReverse) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverConfigAutodefinedReverse) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverConfigAutodefinedReverse) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverConfigAutodefinedReverse) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverConfigAutodefinedReverseOutput struct{ *pulumi.OutputState }

func (ResolverConfigAutodefinedReverseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverConfigAutodefinedReverse)(nil)).Elem()
}

func (o ResolverConfigAutodefinedReverseOutput) ToResolverConfigAutodefinedReverseOutput() ResolverConfigAutodefinedReverseOutput {
	return o
}

func (o ResolverConfigAutodefinedReverseOutput) ToResolverConfigAutodefinedReverseOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseOutput {
	return o
}

func (o ResolverConfigAutodefinedReverseOutput) ToResolverConfigAutodefinedReversePtrOutput() ResolverConfigAutodefinedReversePtrOutput {
	return o.ToResolverConfigAutodefinedReversePtrOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseOutput) ToResolverConfigAutodefinedReversePtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReversePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverConfigAutodefinedReverse) *ResolverConfigAutodefinedReverse {
		return &v
	}).(ResolverConfigAutodefinedReversePtrOutput)
}

func (o ResolverConfigAutodefinedReverseOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverConfigAutodefinedReverse) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverConfigAutodefinedReverseOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverConfigAutodefinedReverse) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverConfigAutodefinedReversePtrOutput struct{ *pulumi.OutputState }

func (ResolverConfigAutodefinedReversePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverConfigAutodefinedReverse)(nil)).Elem()
}

func (o ResolverConfigAutodefinedReversePtrOutput) ToResolverConfigAutodefinedReversePtrOutput() ResolverConfigAutodefinedReversePtrOutput {
	return o
}

func (o ResolverConfigAutodefinedReversePtrOutput) ToResolverConfigAutodefinedReversePtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReversePtrOutput {
	return o
}

func (o ResolverConfigAutodefinedReversePtrOutput) Elem() ResolverConfigAutodefinedReverseOutput {
	return o.ApplyT(func(v *ResolverConfigAutodefinedReverse) ResolverConfigAutodefinedReverse {
		if v != nil {
			return *v
		}
		var ret ResolverConfigAutodefinedReverse
		return ret
	}).(ResolverConfigAutodefinedReverseOutput)
}

func (o ResolverConfigAutodefinedReversePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReversePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverConfigAutodefinedReverse) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverConfigAutodefinedReverseInput is an input type that accepts ResolverConfigAutodefinedReverseArgs and ResolverConfigAutodefinedReverseOutput values.
// You can construct a concrete instance of `ResolverConfigAutodefinedReverseInput` via:
//
//          ResolverConfigAutodefinedReverseArgs{...}
type ResolverConfigAutodefinedReverseInput interface {
	pulumi.Input

	ToResolverConfigAutodefinedReverseOutput() ResolverConfigAutodefinedReverseOutput
	ToResolverConfigAutodefinedReverseOutputWithContext(context.Context) ResolverConfigAutodefinedReverseOutput
}

var resolverConfigAutodefinedReversePtrType = reflect.TypeOf((**ResolverConfigAutodefinedReverse)(nil)).Elem()

type ResolverConfigAutodefinedReversePtrInput interface {
	pulumi.Input

	ToResolverConfigAutodefinedReversePtrOutput() ResolverConfigAutodefinedReversePtrOutput
	ToResolverConfigAutodefinedReversePtrOutputWithContext(context.Context) ResolverConfigAutodefinedReversePtrOutput
}

type resolverConfigAutodefinedReversePtr string

func ResolverConfigAutodefinedReversePtr(v string) ResolverConfigAutodefinedReversePtrInput {
	return (*resolverConfigAutodefinedReversePtr)(&v)
}

func (*resolverConfigAutodefinedReversePtr) ElementType() reflect.Type {
	return resolverConfigAutodefinedReversePtrType
}

func (in *resolverConfigAutodefinedReversePtr) ToResolverConfigAutodefinedReversePtrOutput() ResolverConfigAutodefinedReversePtrOutput {
	return pulumi.ToOutput(in).(ResolverConfigAutodefinedReversePtrOutput)
}

func (in *resolverConfigAutodefinedReversePtr) ToResolverConfigAutodefinedReversePtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReversePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverConfigAutodefinedReversePtrOutput)
}

// Represents the desired status of AutodefinedReverse. The only supported value on creation is DISABLE. Deletion of this resource will return AutodefinedReverse to its default value (ENABLED).
type ResolverConfigAutodefinedReverseFlag string

const (
	ResolverConfigAutodefinedReverseFlagDisable = ResolverConfigAutodefinedReverseFlag("DISABLE")
)

func (ResolverConfigAutodefinedReverseFlag) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverConfigAutodefinedReverseFlag)(nil)).Elem()
}

func (e ResolverConfigAutodefinedReverseFlag) ToResolverConfigAutodefinedReverseFlagOutput() ResolverConfigAutodefinedReverseFlagOutput {
	return pulumi.ToOutput(e).(ResolverConfigAutodefinedReverseFlagOutput)
}

func (e ResolverConfigAutodefinedReverseFlag) ToResolverConfigAutodefinedReverseFlagOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseFlagOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverConfigAutodefinedReverseFlagOutput)
}

func (e ResolverConfigAutodefinedReverseFlag) ToResolverConfigAutodefinedReverseFlagPtrOutput() ResolverConfigAutodefinedReverseFlagPtrOutput {
	return e.ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(context.Background())
}

func (e ResolverConfigAutodefinedReverseFlag) ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseFlagPtrOutput {
	return ResolverConfigAutodefinedReverseFlag(e).ToResolverConfigAutodefinedReverseFlagOutputWithContext(ctx).ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(ctx)
}

func (e ResolverConfigAutodefinedReverseFlag) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverConfigAutodefinedReverseFlag) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverConfigAutodefinedReverseFlag) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverConfigAutodefinedReverseFlag) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverConfigAutodefinedReverseFlagOutput struct{ *pulumi.OutputState }

func (ResolverConfigAutodefinedReverseFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverConfigAutodefinedReverseFlag)(nil)).Elem()
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToResolverConfigAutodefinedReverseFlagOutput() ResolverConfigAutodefinedReverseFlagOutput {
	return o
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToResolverConfigAutodefinedReverseFlagOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseFlagOutput {
	return o
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToResolverConfigAutodefinedReverseFlagPtrOutput() ResolverConfigAutodefinedReverseFlagPtrOutput {
	return o.ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseFlagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverConfigAutodefinedReverseFlag) *ResolverConfigAutodefinedReverseFlag {
		return &v
	}).(ResolverConfigAutodefinedReverseFlagPtrOutput)
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverConfigAutodefinedReverseFlag) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseFlagOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverConfigAutodefinedReverseFlag) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverConfigAutodefinedReverseFlagPtrOutput struct{ *pulumi.OutputState }

func (ResolverConfigAutodefinedReverseFlagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverConfigAutodefinedReverseFlag)(nil)).Elem()
}

func (o ResolverConfigAutodefinedReverseFlagPtrOutput) ToResolverConfigAutodefinedReverseFlagPtrOutput() ResolverConfigAutodefinedReverseFlagPtrOutput {
	return o
}

func (o ResolverConfigAutodefinedReverseFlagPtrOutput) ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseFlagPtrOutput {
	return o
}

func (o ResolverConfigAutodefinedReverseFlagPtrOutput) Elem() ResolverConfigAutodefinedReverseFlagOutput {
	return o.ApplyT(func(v *ResolverConfigAutodefinedReverseFlag) ResolverConfigAutodefinedReverseFlag {
		if v != nil {
			return *v
		}
		var ret ResolverConfigAutodefinedReverseFlag
		return ret
	}).(ResolverConfigAutodefinedReverseFlagOutput)
}

func (o ResolverConfigAutodefinedReverseFlagPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverConfigAutodefinedReverseFlagPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverConfigAutodefinedReverseFlag) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverConfigAutodefinedReverseFlagInput is an input type that accepts ResolverConfigAutodefinedReverseFlagArgs and ResolverConfigAutodefinedReverseFlagOutput values.
// You can construct a concrete instance of `ResolverConfigAutodefinedReverseFlagInput` via:
//
//          ResolverConfigAutodefinedReverseFlagArgs{...}
type ResolverConfigAutodefinedReverseFlagInput interface {
	pulumi.Input

	ToResolverConfigAutodefinedReverseFlagOutput() ResolverConfigAutodefinedReverseFlagOutput
	ToResolverConfigAutodefinedReverseFlagOutputWithContext(context.Context) ResolverConfigAutodefinedReverseFlagOutput
}

var resolverConfigAutodefinedReverseFlagPtrType = reflect.TypeOf((**ResolverConfigAutodefinedReverseFlag)(nil)).Elem()

type ResolverConfigAutodefinedReverseFlagPtrInput interface {
	pulumi.Input

	ToResolverConfigAutodefinedReverseFlagPtrOutput() ResolverConfigAutodefinedReverseFlagPtrOutput
	ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(context.Context) ResolverConfigAutodefinedReverseFlagPtrOutput
}

type resolverConfigAutodefinedReverseFlagPtr string

func ResolverConfigAutodefinedReverseFlagPtr(v string) ResolverConfigAutodefinedReverseFlagPtrInput {
	return (*resolverConfigAutodefinedReverseFlagPtr)(&v)
}

func (*resolverConfigAutodefinedReverseFlagPtr) ElementType() reflect.Type {
	return resolverConfigAutodefinedReverseFlagPtrType
}

func (in *resolverConfigAutodefinedReverseFlagPtr) ToResolverConfigAutodefinedReverseFlagPtrOutput() ResolverConfigAutodefinedReverseFlagPtrOutput {
	return pulumi.ToOutput(in).(ResolverConfigAutodefinedReverseFlagPtrOutput)
}

func (in *resolverConfigAutodefinedReverseFlagPtr) ToResolverConfigAutodefinedReverseFlagPtrOutputWithContext(ctx context.Context) ResolverConfigAutodefinedReverseFlagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverConfigAutodefinedReverseFlagPtrOutput)
}

// ResolverDNSSECValidationStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
type ResolverDNSSECConfigValidationStatus string

const (
	ResolverDNSSECConfigValidationStatusEnabling  = ResolverDNSSECConfigValidationStatus("ENABLING")
	ResolverDNSSECConfigValidationStatusEnabled   = ResolverDNSSECConfigValidationStatus("ENABLED")
	ResolverDNSSECConfigValidationStatusDisabling = ResolverDNSSECConfigValidationStatus("DISABLING")
	ResolverDNSSECConfigValidationStatusDisabled  = ResolverDNSSECConfigValidationStatus("DISABLED")
)

func (ResolverDNSSECConfigValidationStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverDNSSECConfigValidationStatus)(nil)).Elem()
}

func (e ResolverDNSSECConfigValidationStatus) ToResolverDNSSECConfigValidationStatusOutput() ResolverDNSSECConfigValidationStatusOutput {
	return pulumi.ToOutput(e).(ResolverDNSSECConfigValidationStatusOutput)
}

func (e ResolverDNSSECConfigValidationStatus) ToResolverDNSSECConfigValidationStatusOutputWithContext(ctx context.Context) ResolverDNSSECConfigValidationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverDNSSECConfigValidationStatusOutput)
}

func (e ResolverDNSSECConfigValidationStatus) ToResolverDNSSECConfigValidationStatusPtrOutput() ResolverDNSSECConfigValidationStatusPtrOutput {
	return e.ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(context.Background())
}

func (e ResolverDNSSECConfigValidationStatus) ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(ctx context.Context) ResolverDNSSECConfigValidationStatusPtrOutput {
	return ResolverDNSSECConfigValidationStatus(e).ToResolverDNSSECConfigValidationStatusOutputWithContext(ctx).ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(ctx)
}

func (e ResolverDNSSECConfigValidationStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverDNSSECConfigValidationStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverDNSSECConfigValidationStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverDNSSECConfigValidationStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverDNSSECConfigValidationStatusOutput struct{ *pulumi.OutputState }

func (ResolverDNSSECConfigValidationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverDNSSECConfigValidationStatus)(nil)).Elem()
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToResolverDNSSECConfigValidationStatusOutput() ResolverDNSSECConfigValidationStatusOutput {
	return o
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToResolverDNSSECConfigValidationStatusOutputWithContext(ctx context.Context) ResolverDNSSECConfigValidationStatusOutput {
	return o
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToResolverDNSSECConfigValidationStatusPtrOutput() ResolverDNSSECConfigValidationStatusPtrOutput {
	return o.ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(context.Background())
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(ctx context.Context) ResolverDNSSECConfigValidationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverDNSSECConfigValidationStatus) *ResolverDNSSECConfigValidationStatus {
		return &v
	}).(ResolverDNSSECConfigValidationStatusPtrOutput)
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverDNSSECConfigValidationStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverDNSSECConfigValidationStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverDNSSECConfigValidationStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverDNSSECConfigValidationStatusPtrOutput struct{ *pulumi.OutputState }

func (ResolverDNSSECConfigValidationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverDNSSECConfigValidationStatus)(nil)).Elem()
}

func (o ResolverDNSSECConfigValidationStatusPtrOutput) ToResolverDNSSECConfigValidationStatusPtrOutput() ResolverDNSSECConfigValidationStatusPtrOutput {
	return o
}

func (o ResolverDNSSECConfigValidationStatusPtrOutput) ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(ctx context.Context) ResolverDNSSECConfigValidationStatusPtrOutput {
	return o
}

func (o ResolverDNSSECConfigValidationStatusPtrOutput) Elem() ResolverDNSSECConfigValidationStatusOutput {
	return o.ApplyT(func(v *ResolverDNSSECConfigValidationStatus) ResolverDNSSECConfigValidationStatus {
		if v != nil {
			return *v
		}
		var ret ResolverDNSSECConfigValidationStatus
		return ret
	}).(ResolverDNSSECConfigValidationStatusOutput)
}

func (o ResolverDNSSECConfigValidationStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverDNSSECConfigValidationStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverDNSSECConfigValidationStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverDNSSECConfigValidationStatusInput is an input type that accepts ResolverDNSSECConfigValidationStatusArgs and ResolverDNSSECConfigValidationStatusOutput values.
// You can construct a concrete instance of `ResolverDNSSECConfigValidationStatusInput` via:
//
//          ResolverDNSSECConfigValidationStatusArgs{...}
type ResolverDNSSECConfigValidationStatusInput interface {
	pulumi.Input

	ToResolverDNSSECConfigValidationStatusOutput() ResolverDNSSECConfigValidationStatusOutput
	ToResolverDNSSECConfigValidationStatusOutputWithContext(context.Context) ResolverDNSSECConfigValidationStatusOutput
}

var resolverDNSSECConfigValidationStatusPtrType = reflect.TypeOf((**ResolverDNSSECConfigValidationStatus)(nil)).Elem()

type ResolverDNSSECConfigValidationStatusPtrInput interface {
	pulumi.Input

	ToResolverDNSSECConfigValidationStatusPtrOutput() ResolverDNSSECConfigValidationStatusPtrOutput
	ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(context.Context) ResolverDNSSECConfigValidationStatusPtrOutput
}

type resolverDNSSECConfigValidationStatusPtr string

func ResolverDNSSECConfigValidationStatusPtr(v string) ResolverDNSSECConfigValidationStatusPtrInput {
	return (*resolverDNSSECConfigValidationStatusPtr)(&v)
}

func (*resolverDNSSECConfigValidationStatusPtr) ElementType() reflect.Type {
	return resolverDNSSECConfigValidationStatusPtrType
}

func (in *resolverDNSSECConfigValidationStatusPtr) ToResolverDNSSECConfigValidationStatusPtrOutput() ResolverDNSSECConfigValidationStatusPtrOutput {
	return pulumi.ToOutput(in).(ResolverDNSSECConfigValidationStatusPtrOutput)
}

func (in *resolverDNSSECConfigValidationStatusPtr) ToResolverDNSSECConfigValidationStatusPtrOutputWithContext(ctx context.Context) ResolverDNSSECConfigValidationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverDNSSECConfigValidationStatusPtrOutput)
}

// ResolverQueryLogConfigAssociationError
type ResolverQueryLoggingConfigAssociationError string

const (
	ResolverQueryLoggingConfigAssociationErrorNone                = ResolverQueryLoggingConfigAssociationError("NONE")
	ResolverQueryLoggingConfigAssociationErrorDestinationNotFound = ResolverQueryLoggingConfigAssociationError("DESTINATION_NOT_FOUND")
	ResolverQueryLoggingConfigAssociationErrorAccessDenied        = ResolverQueryLoggingConfigAssociationError("ACCESS_DENIED")
)

func (ResolverQueryLoggingConfigAssociationError) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationError)(nil)).Elem()
}

func (e ResolverQueryLoggingConfigAssociationError) ToResolverQueryLoggingConfigAssociationErrorOutput() ResolverQueryLoggingConfigAssociationErrorOutput {
	return pulumi.ToOutput(e).(ResolverQueryLoggingConfigAssociationErrorOutput)
}

func (e ResolverQueryLoggingConfigAssociationError) ToResolverQueryLoggingConfigAssociationErrorOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationErrorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverQueryLoggingConfigAssociationErrorOutput)
}

func (e ResolverQueryLoggingConfigAssociationError) ToResolverQueryLoggingConfigAssociationErrorPtrOutput() ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return e.ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigAssociationError) ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return ResolverQueryLoggingConfigAssociationError(e).ToResolverQueryLoggingConfigAssociationErrorOutputWithContext(ctx).ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(ctx)
}

func (e ResolverQueryLoggingConfigAssociationError) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigAssociationError) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigAssociationError) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigAssociationError) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverQueryLoggingConfigAssociationErrorOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationError)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToResolverQueryLoggingConfigAssociationErrorOutput() ResolverQueryLoggingConfigAssociationErrorOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToResolverQueryLoggingConfigAssociationErrorOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationErrorOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToResolverQueryLoggingConfigAssociationErrorPtrOutput() ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return o.ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverQueryLoggingConfigAssociationError) *ResolverQueryLoggingConfigAssociationError {
		return &v
	}).(ResolverQueryLoggingConfigAssociationErrorPtrOutput)
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigAssociationError) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationErrorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigAssociationError) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigAssociationErrorPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAssociationError)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationErrorPtrOutput) ToResolverQueryLoggingConfigAssociationErrorPtrOutput() ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationErrorPtrOutput) ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationErrorPtrOutput) Elem() ResolverQueryLoggingConfigAssociationErrorOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationError) ResolverQueryLoggingConfigAssociationError {
		if v != nil {
			return *v
		}
		var ret ResolverQueryLoggingConfigAssociationError
		return ret
	}).(ResolverQueryLoggingConfigAssociationErrorOutput)
}

func (o ResolverQueryLoggingConfigAssociationErrorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationErrorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverQueryLoggingConfigAssociationError) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverQueryLoggingConfigAssociationErrorInput is an input type that accepts ResolverQueryLoggingConfigAssociationErrorArgs and ResolverQueryLoggingConfigAssociationErrorOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAssociationErrorInput` via:
//
//          ResolverQueryLoggingConfigAssociationErrorArgs{...}
type ResolverQueryLoggingConfigAssociationErrorInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationErrorOutput() ResolverQueryLoggingConfigAssociationErrorOutput
	ToResolverQueryLoggingConfigAssociationErrorOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationErrorOutput
}

var resolverQueryLoggingConfigAssociationErrorPtrType = reflect.TypeOf((**ResolverQueryLoggingConfigAssociationError)(nil)).Elem()

type ResolverQueryLoggingConfigAssociationErrorPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationErrorPtrOutput() ResolverQueryLoggingConfigAssociationErrorPtrOutput
	ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationErrorPtrOutput
}

type resolverQueryLoggingConfigAssociationErrorPtr string

func ResolverQueryLoggingConfigAssociationErrorPtr(v string) ResolverQueryLoggingConfigAssociationErrorPtrInput {
	return (*resolverQueryLoggingConfigAssociationErrorPtr)(&v)
}

func (*resolverQueryLoggingConfigAssociationErrorPtr) ElementType() reflect.Type {
	return resolverQueryLoggingConfigAssociationErrorPtrType
}

func (in *resolverQueryLoggingConfigAssociationErrorPtr) ToResolverQueryLoggingConfigAssociationErrorPtrOutput() ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return pulumi.ToOutput(in).(ResolverQueryLoggingConfigAssociationErrorPtrOutput)
}

func (in *resolverQueryLoggingConfigAssociationErrorPtr) ToResolverQueryLoggingConfigAssociationErrorPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverQueryLoggingConfigAssociationErrorPtrOutput)
}

// ResolverQueryLogConfigAssociationStatus
type ResolverQueryLoggingConfigAssociationStatus string

const (
	ResolverQueryLoggingConfigAssociationStatusCreating     = ResolverQueryLoggingConfigAssociationStatus("CREATING")
	ResolverQueryLoggingConfigAssociationStatusActive       = ResolverQueryLoggingConfigAssociationStatus("ACTIVE")
	ResolverQueryLoggingConfigAssociationStatusActionNeeded = ResolverQueryLoggingConfigAssociationStatus("ACTION_NEEDED")
	ResolverQueryLoggingConfigAssociationStatusDeleting     = ResolverQueryLoggingConfigAssociationStatus("DELETING")
	ResolverQueryLoggingConfigAssociationStatusFailed       = ResolverQueryLoggingConfigAssociationStatus("FAILED")
	ResolverQueryLoggingConfigAssociationStatusOverridden   = ResolverQueryLoggingConfigAssociationStatus("OVERRIDDEN")
)

func (ResolverQueryLoggingConfigAssociationStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationStatus)(nil)).Elem()
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToResolverQueryLoggingConfigAssociationStatusOutput() ResolverQueryLoggingConfigAssociationStatusOutput {
	return pulumi.ToOutput(e).(ResolverQueryLoggingConfigAssociationStatusOutput)
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToResolverQueryLoggingConfigAssociationStatusOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverQueryLoggingConfigAssociationStatusOutput)
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToResolverQueryLoggingConfigAssociationStatusPtrOutput() ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return e.ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return ResolverQueryLoggingConfigAssociationStatus(e).ToResolverQueryLoggingConfigAssociationStatusOutputWithContext(ctx).ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(ctx)
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigAssociationStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverQueryLoggingConfigAssociationStatusOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationStatus)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToResolverQueryLoggingConfigAssociationStatusOutput() ResolverQueryLoggingConfigAssociationStatusOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToResolverQueryLoggingConfigAssociationStatusOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationStatusOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToResolverQueryLoggingConfigAssociationStatusPtrOutput() ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return o.ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverQueryLoggingConfigAssociationStatus) *ResolverQueryLoggingConfigAssociationStatus {
		return &v
	}).(ResolverQueryLoggingConfigAssociationStatusPtrOutput)
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigAssociationStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigAssociationStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigAssociationStatusPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAssociationStatus)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationStatusPtrOutput) ToResolverQueryLoggingConfigAssociationStatusPtrOutput() ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationStatusPtrOutput) ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationStatusPtrOutput) Elem() ResolverQueryLoggingConfigAssociationStatusOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationStatus) ResolverQueryLoggingConfigAssociationStatus {
		if v != nil {
			return *v
		}
		var ret ResolverQueryLoggingConfigAssociationStatus
		return ret
	}).(ResolverQueryLoggingConfigAssociationStatusOutput)
}

func (o ResolverQueryLoggingConfigAssociationStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverQueryLoggingConfigAssociationStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverQueryLoggingConfigAssociationStatusInput is an input type that accepts ResolverQueryLoggingConfigAssociationStatusArgs and ResolverQueryLoggingConfigAssociationStatusOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAssociationStatusInput` via:
//
//          ResolverQueryLoggingConfigAssociationStatusArgs{...}
type ResolverQueryLoggingConfigAssociationStatusInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationStatusOutput() ResolverQueryLoggingConfigAssociationStatusOutput
	ToResolverQueryLoggingConfigAssociationStatusOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationStatusOutput
}

var resolverQueryLoggingConfigAssociationStatusPtrType = reflect.TypeOf((**ResolverQueryLoggingConfigAssociationStatus)(nil)).Elem()

type ResolverQueryLoggingConfigAssociationStatusPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationStatusPtrOutput() ResolverQueryLoggingConfigAssociationStatusPtrOutput
	ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationStatusPtrOutput
}

type resolverQueryLoggingConfigAssociationStatusPtr string

func ResolverQueryLoggingConfigAssociationStatusPtr(v string) ResolverQueryLoggingConfigAssociationStatusPtrInput {
	return (*resolverQueryLoggingConfigAssociationStatusPtr)(&v)
}

func (*resolverQueryLoggingConfigAssociationStatusPtr) ElementType() reflect.Type {
	return resolverQueryLoggingConfigAssociationStatusPtrType
}

func (in *resolverQueryLoggingConfigAssociationStatusPtr) ToResolverQueryLoggingConfigAssociationStatusPtrOutput() ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return pulumi.ToOutput(in).(ResolverQueryLoggingConfigAssociationStatusPtrOutput)
}

func (in *resolverQueryLoggingConfigAssociationStatusPtr) ToResolverQueryLoggingConfigAssociationStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverQueryLoggingConfigAssociationStatusPtrOutput)
}

// ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
type ResolverQueryLoggingConfigShareStatus string

const (
	ResolverQueryLoggingConfigShareStatusNotShared    = ResolverQueryLoggingConfigShareStatus("NOT_SHARED")
	ResolverQueryLoggingConfigShareStatusSharedWithMe = ResolverQueryLoggingConfigShareStatus("SHARED_WITH_ME")
	ResolverQueryLoggingConfigShareStatusSharedByMe   = ResolverQueryLoggingConfigShareStatus("SHARED_BY_ME")
)

func (ResolverQueryLoggingConfigShareStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigShareStatus)(nil)).Elem()
}

func (e ResolverQueryLoggingConfigShareStatus) ToResolverQueryLoggingConfigShareStatusOutput() ResolverQueryLoggingConfigShareStatusOutput {
	return pulumi.ToOutput(e).(ResolverQueryLoggingConfigShareStatusOutput)
}

func (e ResolverQueryLoggingConfigShareStatus) ToResolverQueryLoggingConfigShareStatusOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigShareStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverQueryLoggingConfigShareStatusOutput)
}

func (e ResolverQueryLoggingConfigShareStatus) ToResolverQueryLoggingConfigShareStatusPtrOutput() ResolverQueryLoggingConfigShareStatusPtrOutput {
	return e.ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigShareStatus) ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigShareStatusPtrOutput {
	return ResolverQueryLoggingConfigShareStatus(e).ToResolverQueryLoggingConfigShareStatusOutputWithContext(ctx).ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(ctx)
}

func (e ResolverQueryLoggingConfigShareStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigShareStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigShareStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigShareStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverQueryLoggingConfigShareStatusOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigShareStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigShareStatus)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToResolverQueryLoggingConfigShareStatusOutput() ResolverQueryLoggingConfigShareStatusOutput {
	return o
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToResolverQueryLoggingConfigShareStatusOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigShareStatusOutput {
	return o
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToResolverQueryLoggingConfigShareStatusPtrOutput() ResolverQueryLoggingConfigShareStatusPtrOutput {
	return o.ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigShareStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverQueryLoggingConfigShareStatus) *ResolverQueryLoggingConfigShareStatus {
		return &v
	}).(ResolverQueryLoggingConfigShareStatusPtrOutput)
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigShareStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigShareStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigShareStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigShareStatusPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigShareStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigShareStatus)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigShareStatusPtrOutput) ToResolverQueryLoggingConfigShareStatusPtrOutput() ResolverQueryLoggingConfigShareStatusPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigShareStatusPtrOutput) ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigShareStatusPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigShareStatusPtrOutput) Elem() ResolverQueryLoggingConfigShareStatusOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigShareStatus) ResolverQueryLoggingConfigShareStatus {
		if v != nil {
			return *v
		}
		var ret ResolverQueryLoggingConfigShareStatus
		return ret
	}).(ResolverQueryLoggingConfigShareStatusOutput)
}

func (o ResolverQueryLoggingConfigShareStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigShareStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverQueryLoggingConfigShareStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverQueryLoggingConfigShareStatusInput is an input type that accepts ResolverQueryLoggingConfigShareStatusArgs and ResolverQueryLoggingConfigShareStatusOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigShareStatusInput` via:
//
//          ResolverQueryLoggingConfigShareStatusArgs{...}
type ResolverQueryLoggingConfigShareStatusInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigShareStatusOutput() ResolverQueryLoggingConfigShareStatusOutput
	ToResolverQueryLoggingConfigShareStatusOutputWithContext(context.Context) ResolverQueryLoggingConfigShareStatusOutput
}

var resolverQueryLoggingConfigShareStatusPtrType = reflect.TypeOf((**ResolverQueryLoggingConfigShareStatus)(nil)).Elem()

type ResolverQueryLoggingConfigShareStatusPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigShareStatusPtrOutput() ResolverQueryLoggingConfigShareStatusPtrOutput
	ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigShareStatusPtrOutput
}

type resolverQueryLoggingConfigShareStatusPtr string

func ResolverQueryLoggingConfigShareStatusPtr(v string) ResolverQueryLoggingConfigShareStatusPtrInput {
	return (*resolverQueryLoggingConfigShareStatusPtr)(&v)
}

func (*resolverQueryLoggingConfigShareStatusPtr) ElementType() reflect.Type {
	return resolverQueryLoggingConfigShareStatusPtrType
}

func (in *resolverQueryLoggingConfigShareStatusPtr) ToResolverQueryLoggingConfigShareStatusPtrOutput() ResolverQueryLoggingConfigShareStatusPtrOutput {
	return pulumi.ToOutput(in).(ResolverQueryLoggingConfigShareStatusPtrOutput)
}

func (in *resolverQueryLoggingConfigShareStatusPtr) ToResolverQueryLoggingConfigShareStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigShareStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverQueryLoggingConfigShareStatusPtrOutput)
}

// ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED.
type ResolverQueryLoggingConfigStatus string

const (
	ResolverQueryLoggingConfigStatusCreating = ResolverQueryLoggingConfigStatus("CREATING")
	ResolverQueryLoggingConfigStatusCreated  = ResolverQueryLoggingConfigStatus("CREATED")
	ResolverQueryLoggingConfigStatusDeleting = ResolverQueryLoggingConfigStatus("DELETING")
	ResolverQueryLoggingConfigStatusFailed   = ResolverQueryLoggingConfigStatus("FAILED")
)

func (ResolverQueryLoggingConfigStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigStatus)(nil)).Elem()
}

func (e ResolverQueryLoggingConfigStatus) ToResolverQueryLoggingConfigStatusOutput() ResolverQueryLoggingConfigStatusOutput {
	return pulumi.ToOutput(e).(ResolverQueryLoggingConfigStatusOutput)
}

func (e ResolverQueryLoggingConfigStatus) ToResolverQueryLoggingConfigStatusOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverQueryLoggingConfigStatusOutput)
}

func (e ResolverQueryLoggingConfigStatus) ToResolverQueryLoggingConfigStatusPtrOutput() ResolverQueryLoggingConfigStatusPtrOutput {
	return e.ToResolverQueryLoggingConfigStatusPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigStatus) ToResolverQueryLoggingConfigStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigStatusPtrOutput {
	return ResolverQueryLoggingConfigStatus(e).ToResolverQueryLoggingConfigStatusOutputWithContext(ctx).ToResolverQueryLoggingConfigStatusPtrOutputWithContext(ctx)
}

func (e ResolverQueryLoggingConfigStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverQueryLoggingConfigStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverQueryLoggingConfigStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverQueryLoggingConfigStatusOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigStatus)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigStatusOutput) ToResolverQueryLoggingConfigStatusOutput() ResolverQueryLoggingConfigStatusOutput {
	return o
}

func (o ResolverQueryLoggingConfigStatusOutput) ToResolverQueryLoggingConfigStatusOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigStatusOutput {
	return o
}

func (o ResolverQueryLoggingConfigStatusOutput) ToResolverQueryLoggingConfigStatusPtrOutput() ResolverQueryLoggingConfigStatusPtrOutput {
	return o.ToResolverQueryLoggingConfigStatusPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigStatusOutput) ToResolverQueryLoggingConfigStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverQueryLoggingConfigStatus) *ResolverQueryLoggingConfigStatus {
		return &v
	}).(ResolverQueryLoggingConfigStatusPtrOutput)
}

func (o ResolverQueryLoggingConfigStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverQueryLoggingConfigStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigStatusPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigStatus)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigStatusPtrOutput) ToResolverQueryLoggingConfigStatusPtrOutput() ResolverQueryLoggingConfigStatusPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigStatusPtrOutput) ToResolverQueryLoggingConfigStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigStatusPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigStatusPtrOutput) Elem() ResolverQueryLoggingConfigStatusOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigStatus) ResolverQueryLoggingConfigStatus {
		if v != nil {
			return *v
		}
		var ret ResolverQueryLoggingConfigStatus
		return ret
	}).(ResolverQueryLoggingConfigStatusOutput)
}

func (o ResolverQueryLoggingConfigStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverQueryLoggingConfigStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverQueryLoggingConfigStatusInput is an input type that accepts ResolverQueryLoggingConfigStatusArgs and ResolverQueryLoggingConfigStatusOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigStatusInput` via:
//
//          ResolverQueryLoggingConfigStatusArgs{...}
type ResolverQueryLoggingConfigStatusInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigStatusOutput() ResolverQueryLoggingConfigStatusOutput
	ToResolverQueryLoggingConfigStatusOutputWithContext(context.Context) ResolverQueryLoggingConfigStatusOutput
}

var resolverQueryLoggingConfigStatusPtrType = reflect.TypeOf((**ResolverQueryLoggingConfigStatus)(nil)).Elem()

type ResolverQueryLoggingConfigStatusPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigStatusPtrOutput() ResolverQueryLoggingConfigStatusPtrOutput
	ToResolverQueryLoggingConfigStatusPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigStatusPtrOutput
}

type resolverQueryLoggingConfigStatusPtr string

func ResolverQueryLoggingConfigStatusPtr(v string) ResolverQueryLoggingConfigStatusPtrInput {
	return (*resolverQueryLoggingConfigStatusPtr)(&v)
}

func (*resolverQueryLoggingConfigStatusPtr) ElementType() reflect.Type {
	return resolverQueryLoggingConfigStatusPtrType
}

func (in *resolverQueryLoggingConfigStatusPtr) ToResolverQueryLoggingConfigStatusPtrOutput() ResolverQueryLoggingConfigStatusPtrOutput {
	return pulumi.ToOutput(in).(ResolverQueryLoggingConfigStatusPtrOutput)
}

func (in *resolverQueryLoggingConfigStatusPtr) ToResolverQueryLoggingConfigStatusPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverQueryLoggingConfigStatusPtrOutput)
}

// When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM.
type ResolverRuleRuleType string

const (
	ResolverRuleRuleTypeForward   = ResolverRuleRuleType("FORWARD")
	ResolverRuleRuleTypeSystem    = ResolverRuleRuleType("SYSTEM")
	ResolverRuleRuleTypeRecursive = ResolverRuleRuleType("RECURSIVE")
)

func (ResolverRuleRuleType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleRuleType)(nil)).Elem()
}

func (e ResolverRuleRuleType) ToResolverRuleRuleTypeOutput() ResolverRuleRuleTypeOutput {
	return pulumi.ToOutput(e).(ResolverRuleRuleTypeOutput)
}

func (e ResolverRuleRuleType) ToResolverRuleRuleTypeOutputWithContext(ctx context.Context) ResolverRuleRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverRuleRuleTypeOutput)
}

func (e ResolverRuleRuleType) ToResolverRuleRuleTypePtrOutput() ResolverRuleRuleTypePtrOutput {
	return e.ToResolverRuleRuleTypePtrOutputWithContext(context.Background())
}

func (e ResolverRuleRuleType) ToResolverRuleRuleTypePtrOutputWithContext(ctx context.Context) ResolverRuleRuleTypePtrOutput {
	return ResolverRuleRuleType(e).ToResolverRuleRuleTypeOutputWithContext(ctx).ToResolverRuleRuleTypePtrOutputWithContext(ctx)
}

func (e ResolverRuleRuleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverRuleRuleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverRuleRuleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverRuleRuleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverRuleRuleTypeOutput struct{ *pulumi.OutputState }

func (ResolverRuleRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleRuleType)(nil)).Elem()
}

func (o ResolverRuleRuleTypeOutput) ToResolverRuleRuleTypeOutput() ResolverRuleRuleTypeOutput {
	return o
}

func (o ResolverRuleRuleTypeOutput) ToResolverRuleRuleTypeOutputWithContext(ctx context.Context) ResolverRuleRuleTypeOutput {
	return o
}

func (o ResolverRuleRuleTypeOutput) ToResolverRuleRuleTypePtrOutput() ResolverRuleRuleTypePtrOutput {
	return o.ToResolverRuleRuleTypePtrOutputWithContext(context.Background())
}

func (o ResolverRuleRuleTypeOutput) ToResolverRuleRuleTypePtrOutputWithContext(ctx context.Context) ResolverRuleRuleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverRuleRuleType) *ResolverRuleRuleType {
		return &v
	}).(ResolverRuleRuleTypePtrOutput)
}

func (o ResolverRuleRuleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverRuleRuleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverRuleRuleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverRuleRuleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverRuleRuleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverRuleRuleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverRuleRuleTypePtrOutput struct{ *pulumi.OutputState }

func (ResolverRuleRuleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleRuleType)(nil)).Elem()
}

func (o ResolverRuleRuleTypePtrOutput) ToResolverRuleRuleTypePtrOutput() ResolverRuleRuleTypePtrOutput {
	return o
}

func (o ResolverRuleRuleTypePtrOutput) ToResolverRuleRuleTypePtrOutputWithContext(ctx context.Context) ResolverRuleRuleTypePtrOutput {
	return o
}

func (o ResolverRuleRuleTypePtrOutput) Elem() ResolverRuleRuleTypeOutput {
	return o.ApplyT(func(v *ResolverRuleRuleType) ResolverRuleRuleType {
		if v != nil {
			return *v
		}
		var ret ResolverRuleRuleType
		return ret
	}).(ResolverRuleRuleTypeOutput)
}

func (o ResolverRuleRuleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverRuleRuleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverRuleRuleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverRuleRuleTypeInput is an input type that accepts ResolverRuleRuleTypeArgs and ResolverRuleRuleTypeOutput values.
// You can construct a concrete instance of `ResolverRuleRuleTypeInput` via:
//
//          ResolverRuleRuleTypeArgs{...}
type ResolverRuleRuleTypeInput interface {
	pulumi.Input

	ToResolverRuleRuleTypeOutput() ResolverRuleRuleTypeOutput
	ToResolverRuleRuleTypeOutputWithContext(context.Context) ResolverRuleRuleTypeOutput
}

var resolverRuleRuleTypePtrType = reflect.TypeOf((**ResolverRuleRuleType)(nil)).Elem()

type ResolverRuleRuleTypePtrInput interface {
	pulumi.Input

	ToResolverRuleRuleTypePtrOutput() ResolverRuleRuleTypePtrOutput
	ToResolverRuleRuleTypePtrOutputWithContext(context.Context) ResolverRuleRuleTypePtrOutput
}

type resolverRuleRuleTypePtr string

func ResolverRuleRuleTypePtr(v string) ResolverRuleRuleTypePtrInput {
	return (*resolverRuleRuleTypePtr)(&v)
}

func (*resolverRuleRuleTypePtr) ElementType() reflect.Type {
	return resolverRuleRuleTypePtrType
}

func (in *resolverRuleRuleTypePtr) ToResolverRuleRuleTypePtrOutput() ResolverRuleRuleTypePtrOutput {
	return pulumi.ToOutput(in).(ResolverRuleRuleTypePtrOutput)
}

func (in *resolverRuleRuleTypePtr) ToResolverRuleRuleTypePtrOutputWithContext(ctx context.Context) ResolverRuleRuleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverRuleRuleTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallDomainListStatusOutput{})
	pulumi.RegisterOutputType(FirewallDomainListStatusPtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupAssociationMutationProtectionOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupAssociationMutationProtectionPtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupAssociationStatusOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupAssociationStatusPtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupFirewallRuleActionOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupFirewallRuleActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypeOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupFirewallRuleBlockOverrideDnsTypePtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupFirewallRuleBlockResponseOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupFirewallRuleBlockResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupShareStatusOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupShareStatusPtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupStatusOutput{})
	pulumi.RegisterOutputType(FirewallRuleGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(ResolverConfigAutodefinedReverseOutput{})
	pulumi.RegisterOutputType(ResolverConfigAutodefinedReversePtrOutput{})
	pulumi.RegisterOutputType(ResolverConfigAutodefinedReverseFlagOutput{})
	pulumi.RegisterOutputType(ResolverConfigAutodefinedReverseFlagPtrOutput{})
	pulumi.RegisterOutputType(ResolverDNSSECConfigValidationStatusOutput{})
	pulumi.RegisterOutputType(ResolverDNSSECConfigValidationStatusPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationErrorOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationErrorPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationStatusOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationStatusPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigShareStatusOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigShareStatusPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigStatusOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigStatusPtrOutput{})
	pulumi.RegisterOutputType(ResolverRuleRuleTypeOutput{})
	pulumi.RegisterOutputType(ResolverRuleRuleTypePtrOutput{})
}
