// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Route53Resolver::OutpostResolver.
func LookupOutpostResolver(ctx *pulumi.Context, args *LookupOutpostResolverArgs, opts ...pulumi.InvokeOption) (*LookupOutpostResolverResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOutpostResolverResult
	err := ctx.Invoke("aws-native:route53resolver:getOutpostResolver", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOutpostResolverArgs struct {
	// Id
	Id string `pulumi:"id"`
}

type LookupOutpostResolverResult struct {
	// The OutpostResolver ARN.
	Arn *string `pulumi:"arn"`
	// The OutpostResolver creation time
	CreationTime *string `pulumi:"creationTime"`
	// The id of the creator request.
	CreatorRequestId *string `pulumi:"creatorRequestId"`
	// Id
	Id *string `pulumi:"id"`
	// The number of OutpostResolvers.
	InstanceCount *int `pulumi:"instanceCount"`
	// The OutpostResolver last modified time
	ModificationTime *string `pulumi:"modificationTime"`
	// The OutpostResolver name.
	Name *string `pulumi:"name"`
	// The OutpostResolver instance type.
	PreferredInstanceType *string `pulumi:"preferredInstanceType"`
	// The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED, FAILED_CREATION and FAILED_DELETION.
	Status *OutpostResolverStatus `pulumi:"status"`
	// The OutpostResolver status message.
	StatusMessage *string `pulumi:"statusMessage"`
	// An array of key-value pairs to apply to this resource.
	Tags []OutpostResolverTag `pulumi:"tags"`
}

func LookupOutpostResolverOutput(ctx *pulumi.Context, args LookupOutpostResolverOutputArgs, opts ...pulumi.InvokeOption) LookupOutpostResolverResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOutpostResolverResult, error) {
			args := v.(LookupOutpostResolverArgs)
			r, err := LookupOutpostResolver(ctx, &args, opts...)
			var s LookupOutpostResolverResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOutpostResolverResultOutput)
}

type LookupOutpostResolverOutputArgs struct {
	// Id
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupOutpostResolverOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOutpostResolverArgs)(nil)).Elem()
}

type LookupOutpostResolverResultOutput struct{ *pulumi.OutputState }

func (LookupOutpostResolverResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOutpostResolverResult)(nil)).Elem()
}

func (o LookupOutpostResolverResultOutput) ToLookupOutpostResolverResultOutput() LookupOutpostResolverResultOutput {
	return o
}

func (o LookupOutpostResolverResultOutput) ToLookupOutpostResolverResultOutputWithContext(ctx context.Context) LookupOutpostResolverResultOutput {
	return o
}

// The OutpostResolver ARN.
func (o LookupOutpostResolverResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The OutpostResolver creation time
func (o LookupOutpostResolverResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The id of the creator request.
func (o LookupOutpostResolverResultOutput) CreatorRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.CreatorRequestId }).(pulumi.StringPtrOutput)
}

// Id
func (o LookupOutpostResolverResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of OutpostResolvers.
func (o LookupOutpostResolverResultOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The OutpostResolver last modified time
func (o LookupOutpostResolverResultOutput) ModificationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.ModificationTime }).(pulumi.StringPtrOutput)
}

// The OutpostResolver name.
func (o LookupOutpostResolverResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OutpostResolver instance type.
func (o LookupOutpostResolverResultOutput) PreferredInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.PreferredInstanceType }).(pulumi.StringPtrOutput)
}

// The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED, FAILED_CREATION and FAILED_DELETION.
func (o LookupOutpostResolverResultOutput) Status() OutpostResolverStatusPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *OutpostResolverStatus { return v.Status }).(OutpostResolverStatusPtrOutput)
}

// The OutpostResolver status message.
func (o LookupOutpostResolverResultOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupOutpostResolverResultOutput) Tags() OutpostResolverTagArrayOutput {
	return o.ApplyT(func(v LookupOutpostResolverResult) []OutpostResolverTag { return v.Tags }).(OutpostResolverTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOutpostResolverResultOutput{})
}
