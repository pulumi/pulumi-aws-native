// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::WAF::IPSet
func LookupIPSet(ctx *pulumi.Context, args *LookupIPSetArgs, opts ...pulumi.InvokeOption) (*LookupIPSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIPSetResult
	err := ctx.Invoke("aws-native:waf:getIPSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIPSetArgs struct {
	Id string `pulumi:"id"`
}

type LookupIPSetResult struct {
	Id               *string           `pulumi:"id"`
	IpSetDescriptors []IPSetDescriptor `pulumi:"ipSetDescriptors"`
}

func LookupIPSetOutput(ctx *pulumi.Context, args LookupIPSetOutputArgs, opts ...pulumi.InvokeOption) LookupIPSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIPSetResult, error) {
			args := v.(LookupIPSetArgs)
			r, err := LookupIPSet(ctx, &args, opts...)
			var s LookupIPSetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIPSetResultOutput)
}

type LookupIPSetOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIPSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPSetArgs)(nil)).Elem()
}

type LookupIPSetResultOutput struct{ *pulumi.OutputState }

func (LookupIPSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPSetResult)(nil)).Elem()
}

func (o LookupIPSetResultOutput) ToLookupIPSetResultOutput() LookupIPSetResultOutput {
	return o
}

func (o LookupIPSetResultOutput) ToLookupIPSetResultOutputWithContext(ctx context.Context) LookupIPSetResultOutput {
	return o
}

func (o LookupIPSetResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPSetResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupIPSetResultOutput) IpSetDescriptors() IPSetDescriptorArrayOutput {
	return o.ApplyT(func(v LookupIPSetResult) []IPSetDescriptor { return v.IpSetDescriptors }).(IPSetDescriptorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIPSetResultOutput{})
}
