// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AutoScaling::ScheduledAction
func LookupScheduledAction(ctx *pulumi.Context, args *LookupScheduledActionArgs, opts ...pulumi.InvokeOption) (*LookupScheduledActionResult, error) {
	var rv LookupScheduledActionResult
	err := ctx.Invoke("aws-native:autoscaling:getScheduledAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupScheduledActionArgs struct {
	Id string `pulumi:"id"`
}

type LookupScheduledActionResult struct {
	DesiredCapacity *int    `pulumi:"desiredCapacity"`
	EndTime         *string `pulumi:"endTime"`
	Id              *string `pulumi:"id"`
	MaxSize         *int    `pulumi:"maxSize"`
	MinSize         *int    `pulumi:"minSize"`
	Recurrence      *string `pulumi:"recurrence"`
	StartTime       *string `pulumi:"startTime"`
	TimeZone        *string `pulumi:"timeZone"`
}

func LookupScheduledActionOutput(ctx *pulumi.Context, args LookupScheduledActionOutputArgs, opts ...pulumi.InvokeOption) LookupScheduledActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupScheduledActionResult, error) {
			args := v.(LookupScheduledActionArgs)
			r, err := LookupScheduledAction(ctx, &args, opts...)
			var s LookupScheduledActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupScheduledActionResultOutput)
}

type LookupScheduledActionOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupScheduledActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledActionArgs)(nil)).Elem()
}

type LookupScheduledActionResultOutput struct{ *pulumi.OutputState }

func (LookupScheduledActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledActionResult)(nil)).Elem()
}

func (o LookupScheduledActionResultOutput) ToLookupScheduledActionResultOutput() LookupScheduledActionResultOutput {
	return o
}

func (o LookupScheduledActionResultOutput) ToLookupScheduledActionResultOutputWithContext(ctx context.Context) LookupScheduledActionResultOutput {
	return o
}

func (o LookupScheduledActionResultOutput) DesiredCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *int { return v.DesiredCapacity }).(pulumi.IntPtrOutput)
}

func (o LookupScheduledActionResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o LookupScheduledActionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupScheduledActionResultOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o LookupScheduledActionResultOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *int { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o LookupScheduledActionResultOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *string { return v.Recurrence }).(pulumi.StringPtrOutput)
}

func (o LookupScheduledActionResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o LookupScheduledActionResultOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupScheduledActionResult) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduledActionResultOutput{})
}
