// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AutoScaling::LaunchConfiguration
//
// Deprecated: LaunchConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type LaunchConfiguration struct {
	pulumi.CustomResourceState

	AssociatePublicIpAddress     pulumi.BoolPtrOutput                             `pulumi:"associatePublicIpAddress"`
	BlockDeviceMappings          LaunchConfigurationBlockDeviceMappingArrayOutput `pulumi:"blockDeviceMappings"`
	ClassicLinkVPCId             pulumi.StringPtrOutput                           `pulumi:"classicLinkVPCId"`
	ClassicLinkVPCSecurityGroups pulumi.StringArrayOutput                         `pulumi:"classicLinkVPCSecurityGroups"`
	EbsOptimized                 pulumi.BoolPtrOutput                             `pulumi:"ebsOptimized"`
	IamInstanceProfile           pulumi.StringPtrOutput                           `pulumi:"iamInstanceProfile"`
	ImageId                      pulumi.StringOutput                              `pulumi:"imageId"`
	InstanceId                   pulumi.StringPtrOutput                           `pulumi:"instanceId"`
	InstanceMonitoring           pulumi.BoolPtrOutput                             `pulumi:"instanceMonitoring"`
	InstanceType                 pulumi.StringOutput                              `pulumi:"instanceType"`
	KernelId                     pulumi.StringPtrOutput                           `pulumi:"kernelId"`
	KeyName                      pulumi.StringPtrOutput                           `pulumi:"keyName"`
	LaunchConfigurationName      pulumi.StringPtrOutput                           `pulumi:"launchConfigurationName"`
	MetadataOptions              LaunchConfigurationMetadataOptionsPtrOutput      `pulumi:"metadataOptions"`
	PlacementTenancy             pulumi.StringPtrOutput                           `pulumi:"placementTenancy"`
	RamDiskId                    pulumi.StringPtrOutput                           `pulumi:"ramDiskId"`
	SecurityGroups               pulumi.StringArrayOutput                         `pulumi:"securityGroups"`
	SpotPrice                    pulumi.StringPtrOutput                           `pulumi:"spotPrice"`
	UserData                     pulumi.StringPtrOutput                           `pulumi:"userData"`
}

// NewLaunchConfiguration registers a new resource with the given unique name, arguments, and options.
func NewLaunchConfiguration(ctx *pulumi.Context,
	name string, args *LaunchConfigurationArgs, opts ...pulumi.ResourceOption) (*LaunchConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	var resource LaunchConfiguration
	err := ctx.RegisterResource("aws-native:autoscaling:LaunchConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLaunchConfiguration gets an existing LaunchConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLaunchConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LaunchConfigurationState, opts ...pulumi.ResourceOption) (*LaunchConfiguration, error) {
	var resource LaunchConfiguration
	err := ctx.ReadResource("aws-native:autoscaling:LaunchConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LaunchConfiguration resources.
type launchConfigurationState struct {
}

type LaunchConfigurationState struct {
}

func (LaunchConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*launchConfigurationState)(nil)).Elem()
}

type launchConfigurationArgs struct {
	AssociatePublicIpAddress     *bool                                   `pulumi:"associatePublicIpAddress"`
	BlockDeviceMappings          []LaunchConfigurationBlockDeviceMapping `pulumi:"blockDeviceMappings"`
	ClassicLinkVPCId             *string                                 `pulumi:"classicLinkVPCId"`
	ClassicLinkVPCSecurityGroups []string                                `pulumi:"classicLinkVPCSecurityGroups"`
	EbsOptimized                 *bool                                   `pulumi:"ebsOptimized"`
	IamInstanceProfile           *string                                 `pulumi:"iamInstanceProfile"`
	ImageId                      string                                  `pulumi:"imageId"`
	InstanceId                   *string                                 `pulumi:"instanceId"`
	InstanceMonitoring           *bool                                   `pulumi:"instanceMonitoring"`
	InstanceType                 string                                  `pulumi:"instanceType"`
	KernelId                     *string                                 `pulumi:"kernelId"`
	KeyName                      *string                                 `pulumi:"keyName"`
	LaunchConfigurationName      *string                                 `pulumi:"launchConfigurationName"`
	MetadataOptions              *LaunchConfigurationMetadataOptions     `pulumi:"metadataOptions"`
	PlacementTenancy             *string                                 `pulumi:"placementTenancy"`
	RamDiskId                    *string                                 `pulumi:"ramDiskId"`
	SecurityGroups               []string                                `pulumi:"securityGroups"`
	SpotPrice                    *string                                 `pulumi:"spotPrice"`
	UserData                     *string                                 `pulumi:"userData"`
}

// The set of arguments for constructing a LaunchConfiguration resource.
type LaunchConfigurationArgs struct {
	AssociatePublicIpAddress     pulumi.BoolPtrInput
	BlockDeviceMappings          LaunchConfigurationBlockDeviceMappingArrayInput
	ClassicLinkVPCId             pulumi.StringPtrInput
	ClassicLinkVPCSecurityGroups pulumi.StringArrayInput
	EbsOptimized                 pulumi.BoolPtrInput
	IamInstanceProfile           pulumi.StringPtrInput
	ImageId                      pulumi.StringInput
	InstanceId                   pulumi.StringPtrInput
	InstanceMonitoring           pulumi.BoolPtrInput
	InstanceType                 pulumi.StringInput
	KernelId                     pulumi.StringPtrInput
	KeyName                      pulumi.StringPtrInput
	LaunchConfigurationName      pulumi.StringPtrInput
	MetadataOptions              LaunchConfigurationMetadataOptionsPtrInput
	PlacementTenancy             pulumi.StringPtrInput
	RamDiskId                    pulumi.StringPtrInput
	SecurityGroups               pulumi.StringArrayInput
	SpotPrice                    pulumi.StringPtrInput
	UserData                     pulumi.StringPtrInput
}

func (LaunchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*launchConfigurationArgs)(nil)).Elem()
}

type LaunchConfigurationInput interface {
	pulumi.Input

	ToLaunchConfigurationOutput() LaunchConfigurationOutput
	ToLaunchConfigurationOutputWithContext(ctx context.Context) LaunchConfigurationOutput
}

func (*LaunchConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfiguration)(nil))
}

func (i *LaunchConfiguration) ToLaunchConfigurationOutput() LaunchConfigurationOutput {
	return i.ToLaunchConfigurationOutputWithContext(context.Background())
}

func (i *LaunchConfiguration) ToLaunchConfigurationOutputWithContext(ctx context.Context) LaunchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationOutput)
}

type LaunchConfigurationOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfiguration)(nil))
}

func (o LaunchConfigurationOutput) ToLaunchConfigurationOutput() LaunchConfigurationOutput {
	return o
}

func (o LaunchConfigurationOutput) ToLaunchConfigurationOutputWithContext(ctx context.Context) LaunchConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LaunchConfigurationOutput{})
}
