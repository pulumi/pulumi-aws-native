// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AutoScaling::AutoScalingGroup
//
// Deprecated: AutoScalingGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type AutoScalingGroup struct {
	pulumi.CustomResourceState

	AutoScalingGroupName             pulumi.StringPtrOutput                                `pulumi:"autoScalingGroupName"`
	AvailabilityZones                pulumi.StringArrayOutput                              `pulumi:"availabilityZones"`
	CapacityRebalance                pulumi.BoolPtrOutput                                  `pulumi:"capacityRebalance"`
	Context                          pulumi.StringPtrOutput                                `pulumi:"context"`
	Cooldown                         pulumi.StringPtrOutput                                `pulumi:"cooldown"`
	DesiredCapacity                  pulumi.StringPtrOutput                                `pulumi:"desiredCapacity"`
	HealthCheckGracePeriod           pulumi.IntPtrOutput                                   `pulumi:"healthCheckGracePeriod"`
	HealthCheckType                  pulumi.StringPtrOutput                                `pulumi:"healthCheckType"`
	InstanceId                       pulumi.StringPtrOutput                                `pulumi:"instanceId"`
	LaunchConfigurationName          pulumi.StringPtrOutput                                `pulumi:"launchConfigurationName"`
	LaunchTemplate                   AutoScalingGroupLaunchTemplateSpecificationPtrOutput  `pulumi:"launchTemplate"`
	LaunchTemplateSpecification      pulumi.StringOutput                                   `pulumi:"launchTemplateSpecification"`
	LifecycleHookSpecificationList   AutoScalingGroupLifecycleHookSpecificationArrayOutput `pulumi:"lifecycleHookSpecificationList"`
	LoadBalancerNames                pulumi.StringArrayOutput                              `pulumi:"loadBalancerNames"`
	MaxInstanceLifetime              pulumi.IntPtrOutput                                   `pulumi:"maxInstanceLifetime"`
	MaxSize                          pulumi.StringOutput                                   `pulumi:"maxSize"`
	MetricsCollection                AutoScalingGroupMetricsCollectionArrayOutput          `pulumi:"metricsCollection"`
	MinSize                          pulumi.StringOutput                                   `pulumi:"minSize"`
	MixedInstancesPolicy             AutoScalingGroupMixedInstancesPolicyPtrOutput         `pulumi:"mixedInstancesPolicy"`
	NewInstancesProtectedFromScaleIn pulumi.BoolPtrOutput                                  `pulumi:"newInstancesProtectedFromScaleIn"`
	NotificationConfigurations       AutoScalingGroupNotificationConfigurationArrayOutput  `pulumi:"notificationConfigurations"`
	PlacementGroup                   pulumi.StringPtrOutput                                `pulumi:"placementGroup"`
	ServiceLinkedRoleARN             pulumi.StringPtrOutput                                `pulumi:"serviceLinkedRoleARN"`
	Tags                             AutoScalingGroupTagPropertyArrayOutput                `pulumi:"tags"`
	TargetGroupARNs                  pulumi.StringArrayOutput                              `pulumi:"targetGroupARNs"`
	TerminationPolicies              pulumi.StringArrayOutput                              `pulumi:"terminationPolicies"`
	VPCZoneIdentifier                pulumi.StringArrayOutput                              `pulumi:"vPCZoneIdentifier"`
}

// NewAutoScalingGroup registers a new resource with the given unique name, arguments, and options.
func NewAutoScalingGroup(ctx *pulumi.Context,
	name string, args *AutoScalingGroupArgs, opts ...pulumi.ResourceOption) (*AutoScalingGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaxSize == nil {
		return nil, errors.New("invalid value for required argument 'MaxSize'")
	}
	if args.MinSize == nil {
		return nil, errors.New("invalid value for required argument 'MinSize'")
	}
	var resource AutoScalingGroup
	err := ctx.RegisterResource("aws-native:autoscaling:AutoScalingGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoScalingGroup gets an existing AutoScalingGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoScalingGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoScalingGroupState, opts ...pulumi.ResourceOption) (*AutoScalingGroup, error) {
	var resource AutoScalingGroup
	err := ctx.ReadResource("aws-native:autoscaling:AutoScalingGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoScalingGroup resources.
type autoScalingGroupState struct {
}

type AutoScalingGroupState struct {
}

func (AutoScalingGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingGroupState)(nil)).Elem()
}

type autoScalingGroupArgs struct {
	AutoScalingGroupName             *string                                      `pulumi:"autoScalingGroupName"`
	AvailabilityZones                []string                                     `pulumi:"availabilityZones"`
	CapacityRebalance                *bool                                        `pulumi:"capacityRebalance"`
	Context                          *string                                      `pulumi:"context"`
	Cooldown                         *string                                      `pulumi:"cooldown"`
	DesiredCapacity                  *string                                      `pulumi:"desiredCapacity"`
	HealthCheckGracePeriod           *int                                         `pulumi:"healthCheckGracePeriod"`
	HealthCheckType                  *string                                      `pulumi:"healthCheckType"`
	InstanceId                       *string                                      `pulumi:"instanceId"`
	LaunchConfigurationName          *string                                      `pulumi:"launchConfigurationName"`
	LaunchTemplate                   *AutoScalingGroupLaunchTemplateSpecification `pulumi:"launchTemplate"`
	LifecycleHookSpecificationList   []AutoScalingGroupLifecycleHookSpecification `pulumi:"lifecycleHookSpecificationList"`
	LoadBalancerNames                []string                                     `pulumi:"loadBalancerNames"`
	MaxInstanceLifetime              *int                                         `pulumi:"maxInstanceLifetime"`
	MaxSize                          string                                       `pulumi:"maxSize"`
	MetricsCollection                []AutoScalingGroupMetricsCollection          `pulumi:"metricsCollection"`
	MinSize                          string                                       `pulumi:"minSize"`
	MixedInstancesPolicy             *AutoScalingGroupMixedInstancesPolicy        `pulumi:"mixedInstancesPolicy"`
	NewInstancesProtectedFromScaleIn *bool                                        `pulumi:"newInstancesProtectedFromScaleIn"`
	NotificationConfigurations       []AutoScalingGroupNotificationConfiguration  `pulumi:"notificationConfigurations"`
	PlacementGroup                   *string                                      `pulumi:"placementGroup"`
	ServiceLinkedRoleARN             *string                                      `pulumi:"serviceLinkedRoleARN"`
	Tags                             []AutoScalingGroupTagProperty                `pulumi:"tags"`
	TargetGroupARNs                  []string                                     `pulumi:"targetGroupARNs"`
	TerminationPolicies              []string                                     `pulumi:"terminationPolicies"`
	VPCZoneIdentifier                []string                                     `pulumi:"vPCZoneIdentifier"`
}

// The set of arguments for constructing a AutoScalingGroup resource.
type AutoScalingGroupArgs struct {
	AutoScalingGroupName             pulumi.StringPtrInput
	AvailabilityZones                pulumi.StringArrayInput
	CapacityRebalance                pulumi.BoolPtrInput
	Context                          pulumi.StringPtrInput
	Cooldown                         pulumi.StringPtrInput
	DesiredCapacity                  pulumi.StringPtrInput
	HealthCheckGracePeriod           pulumi.IntPtrInput
	HealthCheckType                  pulumi.StringPtrInput
	InstanceId                       pulumi.StringPtrInput
	LaunchConfigurationName          pulumi.StringPtrInput
	LaunchTemplate                   AutoScalingGroupLaunchTemplateSpecificationPtrInput
	LifecycleHookSpecificationList   AutoScalingGroupLifecycleHookSpecificationArrayInput
	LoadBalancerNames                pulumi.StringArrayInput
	MaxInstanceLifetime              pulumi.IntPtrInput
	MaxSize                          pulumi.StringInput
	MetricsCollection                AutoScalingGroupMetricsCollectionArrayInput
	MinSize                          pulumi.StringInput
	MixedInstancesPolicy             AutoScalingGroupMixedInstancesPolicyPtrInput
	NewInstancesProtectedFromScaleIn pulumi.BoolPtrInput
	NotificationConfigurations       AutoScalingGroupNotificationConfigurationArrayInput
	PlacementGroup                   pulumi.StringPtrInput
	ServiceLinkedRoleARN             pulumi.StringPtrInput
	Tags                             AutoScalingGroupTagPropertyArrayInput
	TargetGroupARNs                  pulumi.StringArrayInput
	TerminationPolicies              pulumi.StringArrayInput
	VPCZoneIdentifier                pulumi.StringArrayInput
}

func (AutoScalingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingGroupArgs)(nil)).Elem()
}

type AutoScalingGroupInput interface {
	pulumi.Input

	ToAutoScalingGroupOutput() AutoScalingGroupOutput
	ToAutoScalingGroupOutputWithContext(ctx context.Context) AutoScalingGroupOutput
}

func (*AutoScalingGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScalingGroup)(nil))
}

func (i *AutoScalingGroup) ToAutoScalingGroupOutput() AutoScalingGroupOutput {
	return i.ToAutoScalingGroupOutputWithContext(context.Background())
}

func (i *AutoScalingGroup) ToAutoScalingGroupOutputWithContext(ctx context.Context) AutoScalingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingGroupOutput)
}

type AutoScalingGroupOutput struct{ *pulumi.OutputState }

func (AutoScalingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScalingGroup)(nil))
}

func (o AutoScalingGroupOutput) ToAutoScalingGroupOutput() AutoScalingGroupOutput {
	return o
}

func (o AutoScalingGroupOutput) ToAutoScalingGroupOutputWithContext(ctx context.Context) AutoScalingGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AutoScalingGroupOutput{})
}
