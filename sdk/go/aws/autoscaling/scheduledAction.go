// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AutoScaling::ScheduledAction
//
// Deprecated: ScheduledAction is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ScheduledAction struct {
	pulumi.CustomResourceState

	AutoScalingGroupName pulumi.StringOutput    `pulumi:"autoScalingGroupName"`
	DesiredCapacity      pulumi.IntPtrOutput    `pulumi:"desiredCapacity"`
	EndTime              pulumi.StringPtrOutput `pulumi:"endTime"`
	MaxSize              pulumi.IntPtrOutput    `pulumi:"maxSize"`
	MinSize              pulumi.IntPtrOutput    `pulumi:"minSize"`
	Recurrence           pulumi.StringPtrOutput `pulumi:"recurrence"`
	StartTime            pulumi.StringPtrOutput `pulumi:"startTime"`
	TimeZone             pulumi.StringPtrOutput `pulumi:"timeZone"`
}

// NewScheduledAction registers a new resource with the given unique name, arguments, and options.
func NewScheduledAction(ctx *pulumi.Context,
	name string, args *ScheduledActionArgs, opts ...pulumi.ResourceOption) (*ScheduledAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingGroupName == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingGroupName'")
	}
	var resource ScheduledAction
	err := ctx.RegisterResource("aws-native:autoscaling:ScheduledAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledAction gets an existing ScheduledAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledActionState, opts ...pulumi.ResourceOption) (*ScheduledAction, error) {
	var resource ScheduledAction
	err := ctx.ReadResource("aws-native:autoscaling:ScheduledAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledAction resources.
type scheduledActionState struct {
}

type ScheduledActionState struct {
}

func (ScheduledActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledActionState)(nil)).Elem()
}

type scheduledActionArgs struct {
	AutoScalingGroupName string  `pulumi:"autoScalingGroupName"`
	DesiredCapacity      *int    `pulumi:"desiredCapacity"`
	EndTime              *string `pulumi:"endTime"`
	MaxSize              *int    `pulumi:"maxSize"`
	MinSize              *int    `pulumi:"minSize"`
	Recurrence           *string `pulumi:"recurrence"`
	StartTime            *string `pulumi:"startTime"`
	TimeZone             *string `pulumi:"timeZone"`
}

// The set of arguments for constructing a ScheduledAction resource.
type ScheduledActionArgs struct {
	AutoScalingGroupName pulumi.StringInput
	DesiredCapacity      pulumi.IntPtrInput
	EndTime              pulumi.StringPtrInput
	MaxSize              pulumi.IntPtrInput
	MinSize              pulumi.IntPtrInput
	Recurrence           pulumi.StringPtrInput
	StartTime            pulumi.StringPtrInput
	TimeZone             pulumi.StringPtrInput
}

func (ScheduledActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledActionArgs)(nil)).Elem()
}

type ScheduledActionInput interface {
	pulumi.Input

	ToScheduledActionOutput() ScheduledActionOutput
	ToScheduledActionOutputWithContext(ctx context.Context) ScheduledActionOutput
}

func (*ScheduledAction) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAction)(nil))
}

func (i *ScheduledAction) ToScheduledActionOutput() ScheduledActionOutput {
	return i.ToScheduledActionOutputWithContext(context.Background())
}

func (i *ScheduledAction) ToScheduledActionOutputWithContext(ctx context.Context) ScheduledActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionOutput)
}

type ScheduledActionOutput struct{ *pulumi.OutputState }

func (ScheduledActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAction)(nil))
}

func (o ScheduledActionOutput) ToScheduledActionOutput() ScheduledActionOutput {
	return o
}

func (o ScheduledActionOutput) ToScheduledActionOutputWithContext(ctx context.Context) ScheduledActionOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledActionInput)(nil)).Elem(), &ScheduledAction{})
	pulumi.RegisterOutputType(ScheduledActionOutput{})
}
