// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::DeviceFarm::NetworkProfile creates a new DF Network Profile
type NetworkProfile struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the network profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The description of the network profile.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	DownlinkBandwidthBits pulumi.IntPtrOutput `pulumi:"downlinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	DownlinkDelayMs pulumi.IntPtrOutput `pulumi:"downlinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	DownlinkJitterMs pulumi.IntPtrOutput `pulumi:"downlinkJitterMs"`
	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	DownlinkLossPercent pulumi.IntPtrOutput `pulumi:"downlinkLossPercent"`
	// The name of the network profile.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Amazon Resource Name (ARN) of the specified project.
	ProjectArn pulumi.StringOutput `pulumi:"projectArn"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	UplinkBandwidthBits pulumi.IntPtrOutput `pulumi:"uplinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	UplinkDelayMs pulumi.IntPtrOutput `pulumi:"uplinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	UplinkJitterMs pulumi.IntPtrOutput `pulumi:"uplinkJitterMs"`
	// Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
	UplinkLossPercent pulumi.IntPtrOutput `pulumi:"uplinkLossPercent"`
}

// NewNetworkProfile registers a new resource with the given unique name, arguments, and options.
func NewNetworkProfile(ctx *pulumi.Context,
	name string, args *NetworkProfileArgs, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectArn == nil {
		return nil, errors.New("invalid value for required argument 'ProjectArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"projectArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkProfile
	err := ctx.RegisterResource("aws-native:devicefarm:NetworkProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkProfile gets an existing NetworkProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkProfileState, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	var resource NetworkProfile
	err := ctx.ReadResource("aws-native:devicefarm:NetworkProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkProfile resources.
type networkProfileState struct {
}

type NetworkProfileState struct {
}

func (NetworkProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileState)(nil)).Elem()
}

type networkProfileArgs struct {
	// The description of the network profile.
	Description *string `pulumi:"description"`
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	DownlinkBandwidthBits *int `pulumi:"downlinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	DownlinkDelayMs *int `pulumi:"downlinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	DownlinkJitterMs *int `pulumi:"downlinkJitterMs"`
	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	DownlinkLossPercent *int `pulumi:"downlinkLossPercent"`
	// The name of the network profile.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) of the specified project.
	ProjectArn string `pulumi:"projectArn"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
	Tags []aws.Tag `pulumi:"tags"`
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	UplinkBandwidthBits *int `pulumi:"uplinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	UplinkDelayMs *int `pulumi:"uplinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	UplinkJitterMs *int `pulumi:"uplinkJitterMs"`
	// Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
	UplinkLossPercent *int `pulumi:"uplinkLossPercent"`
}

// The set of arguments for constructing a NetworkProfile resource.
type NetworkProfileArgs struct {
	// The description of the network profile.
	Description pulumi.StringPtrInput
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	DownlinkBandwidthBits pulumi.IntPtrInput
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	DownlinkDelayMs pulumi.IntPtrInput
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	DownlinkJitterMs pulumi.IntPtrInput
	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	DownlinkLossPercent pulumi.IntPtrInput
	// The name of the network profile.
	Name pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the specified project.
	ProjectArn pulumi.StringInput
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
	Tags aws.TagArrayInput
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	UplinkBandwidthBits pulumi.IntPtrInput
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	UplinkDelayMs pulumi.IntPtrInput
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	UplinkJitterMs pulumi.IntPtrInput
	// Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
	UplinkLossPercent pulumi.IntPtrInput
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileArgs)(nil)).Elem()
}

type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput
}

func (*NetworkProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *NetworkProfile) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i *NetworkProfile) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

// The Amazon Resource Name (ARN) of the network profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
func (o NetworkProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The description of the network profile.
func (o NetworkProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The data throughput rate in bits per second, as an integer from 0 to 104857600.
func (o NetworkProfileOutput) DownlinkBandwidthBits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkBandwidthBits }).(pulumi.IntPtrOutput)
}

// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
func (o NetworkProfileOutput) DownlinkDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkDelayMs }).(pulumi.IntPtrOutput)
}

// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
func (o NetworkProfileOutput) DownlinkJitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkJitterMs }).(pulumi.IntPtrOutput)
}

// Proportion of received packets that fail to arrive from 0 to 100 percent.
func (o NetworkProfileOutput) DownlinkLossPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkLossPercent }).(pulumi.IntPtrOutput)
}

// The name of the network profile.
func (o NetworkProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the specified project.
func (o NetworkProfileOutput) ProjectArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringOutput { return v.ProjectArn }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
func (o NetworkProfileOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *NetworkProfile) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The data throughput rate in bits per second, as an integer from 0 to 104857600.
func (o NetworkProfileOutput) UplinkBandwidthBits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkBandwidthBits }).(pulumi.IntPtrOutput)
}

// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
func (o NetworkProfileOutput) UplinkDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkDelayMs }).(pulumi.IntPtrOutput)
}

// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
func (o NetworkProfileOutput) UplinkJitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkJitterMs }).(pulumi.IntPtrOutput)
}

// Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
func (o NetworkProfileOutput) UplinkLossPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkLossPercent }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkProfileInput)(nil)).Elem(), &NetworkProfile{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
}
