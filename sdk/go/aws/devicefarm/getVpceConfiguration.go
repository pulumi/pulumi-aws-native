// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::DeviceFarm::VPCEConfiguration creates a new Device Farm VPCE Configuration
func LookupVpceConfiguration(ctx *pulumi.Context, args *LookupVpceConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupVpceConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpceConfigurationResult
	err := ctx.Invoke("aws-native:devicefarm:getVpceConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpceConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the VPC endpoint. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn string `pulumi:"arn"`
}

type LookupVpceConfigurationResult struct {
	// The Amazon Resource Name (ARN) of the VPC endpoint. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn *string `pulumi:"arn"`
	// The DNS name that Device Farm will use to map to the private service you want to access.
	ServiceDnsName *string `pulumi:"serviceDnsName"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
	Tags []aws.Tag `pulumi:"tags"`
	// An optional description that provides details about your VPC endpoint configuration.
	VpceConfigurationDescription *string `pulumi:"vpceConfigurationDescription"`
	// The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.
	VpceConfigurationName *string `pulumi:"vpceConfigurationName"`
	// The name of the VPC endpoint service that you want to access from Device Farm.
	//
	// The name follows the format `com.amazonaws.vpce.us-west-2.vpce-svc-id` .
	VpceServiceName *string `pulumi:"vpceServiceName"`
}

func LookupVpceConfigurationOutput(ctx *pulumi.Context, args LookupVpceConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupVpceConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpceConfigurationResultOutput, error) {
			args := v.(LookupVpceConfigurationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupVpceConfigurationResult
			secret, err := ctx.InvokePackageRaw("aws-native:devicefarm:getVpceConfiguration", args, &rv, "", opts...)
			if err != nil {
				return LookupVpceConfigurationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupVpceConfigurationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupVpceConfigurationResultOutput), nil
			}
			return output, nil
		}).(LookupVpceConfigurationResultOutput)
}

type LookupVpceConfigurationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the VPC endpoint. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupVpceConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpceConfigurationArgs)(nil)).Elem()
}

type LookupVpceConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupVpceConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpceConfigurationResult)(nil)).Elem()
}

func (o LookupVpceConfigurationResultOutput) ToLookupVpceConfigurationResultOutput() LookupVpceConfigurationResultOutput {
	return o
}

func (o LookupVpceConfigurationResultOutput) ToLookupVpceConfigurationResultOutputWithContext(ctx context.Context) LookupVpceConfigurationResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the VPC endpoint. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
func (o LookupVpceConfigurationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpceConfigurationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The DNS name that Device Farm will use to map to the private service you want to access.
func (o LookupVpceConfigurationResultOutput) ServiceDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpceConfigurationResult) *string { return v.ServiceDnsName }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
func (o LookupVpceConfigurationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupVpceConfigurationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// An optional description that provides details about your VPC endpoint configuration.
func (o LookupVpceConfigurationResultOutput) VpceConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpceConfigurationResult) *string { return v.VpceConfigurationDescription }).(pulumi.StringPtrOutput)
}

// The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.
func (o LookupVpceConfigurationResultOutput) VpceConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpceConfigurationResult) *string { return v.VpceConfigurationName }).(pulumi.StringPtrOutput)
}

// The name of the VPC endpoint service that you want to access from Device Farm.
//
// The name follows the format `com.amazonaws.vpce.us-west-2.vpce-svc-id` .
func (o LookupVpceConfigurationResultOutput) VpceServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpceConfigurationResult) *string { return v.VpceServiceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpceConfigurationResultOutput{})
}
