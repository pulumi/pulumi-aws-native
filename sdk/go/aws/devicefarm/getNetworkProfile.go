// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::DeviceFarm::NetworkProfile creates a new DF Network Profile
func LookupNetworkProfile(ctx *pulumi.Context, args *LookupNetworkProfileArgs, opts ...pulumi.InvokeOption) (*LookupNetworkProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkProfileResult
	err := ctx.Invoke("aws-native:devicefarm:getNetworkProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNetworkProfileArgs struct {
	// The Amazon Resource Name (ARN) of the network profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn string `pulumi:"arn"`
}

type LookupNetworkProfileResult struct {
	// The Amazon Resource Name (ARN) of the network profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn *string `pulumi:"arn"`
	// The description of the network profile.
	Description *string `pulumi:"description"`
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	DownlinkBandwidthBits *int `pulumi:"downlinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	DownlinkDelayMs *int `pulumi:"downlinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	DownlinkJitterMs *int `pulumi:"downlinkJitterMs"`
	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	DownlinkLossPercent *int `pulumi:"downlinkLossPercent"`
	// The name of the network profile.
	Name *string `pulumi:"name"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
	Tags []aws.Tag `pulumi:"tags"`
	// The data throughput rate in bits per second, as an integer from 0 to 104857600.
	UplinkBandwidthBits *int `pulumi:"uplinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	UplinkDelayMs *int `pulumi:"uplinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	UplinkJitterMs *int `pulumi:"uplinkJitterMs"`
	// Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
	UplinkLossPercent *int `pulumi:"uplinkLossPercent"`
}

func LookupNetworkProfileOutput(ctx *pulumi.Context, args LookupNetworkProfileOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkProfileResult, error) {
			args := v.(LookupNetworkProfileArgs)
			r, err := LookupNetworkProfile(ctx, &args, opts...)
			var s LookupNetworkProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkProfileResultOutput)
}

type LookupNetworkProfileOutputArgs struct {
	// The Amazon Resource Name (ARN) of the network profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupNetworkProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkProfileArgs)(nil)).Elem()
}

type LookupNetworkProfileResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkProfileResult)(nil)).Elem()
}

func (o LookupNetworkProfileResultOutput) ToLookupNetworkProfileResultOutput() LookupNetworkProfileResultOutput {
	return o
}

func (o LookupNetworkProfileResultOutput) ToLookupNetworkProfileResultOutputWithContext(ctx context.Context) LookupNetworkProfileResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the network profile. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
func (o LookupNetworkProfileResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The description of the network profile.
func (o LookupNetworkProfileResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The data throughput rate in bits per second, as an integer from 0 to 104857600.
func (o LookupNetworkProfileResultOutput) DownlinkBandwidthBits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.DownlinkBandwidthBits }).(pulumi.IntPtrOutput)
}

// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
func (o LookupNetworkProfileResultOutput) DownlinkDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.DownlinkDelayMs }).(pulumi.IntPtrOutput)
}

// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
func (o LookupNetworkProfileResultOutput) DownlinkJitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.DownlinkJitterMs }).(pulumi.IntPtrOutput)
}

// Proportion of received packets that fail to arrive from 0 to 100 percent.
func (o LookupNetworkProfileResultOutput) DownlinkLossPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.DownlinkLossPercent }).(pulumi.IntPtrOutput)
}

// The name of the network profile.
func (o LookupNetworkProfileResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
func (o LookupNetworkProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The data throughput rate in bits per second, as an integer from 0 to 104857600.
func (o LookupNetworkProfileResultOutput) UplinkBandwidthBits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.UplinkBandwidthBits }).(pulumi.IntPtrOutput)
}

// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
func (o LookupNetworkProfileResultOutput) UplinkDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.UplinkDelayMs }).(pulumi.IntPtrOutput)
}

// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
func (o LookupNetworkProfileResultOutput) UplinkJitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.UplinkJitterMs }).(pulumi.IntPtrOutput)
}

// Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
func (o LookupNetworkProfileResultOutput) UplinkLossPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkProfileResult) *int { return v.UplinkLossPercent }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkProfileResultOutput{})
}
