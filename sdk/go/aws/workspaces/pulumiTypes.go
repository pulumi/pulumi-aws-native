// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectionAliasAssociation struct {
	// The identifier of the AWS account that associated the connection alias with a directory.
	AssociatedAccountId *string `pulumi:"associatedAccountId"`
	// The association status of the connection alias.
	AssociationStatus *ConnectionAliasAssociationAssociationStatus `pulumi:"associationStatus"`
	// The identifier of the connection alias association. You use the connection identifier in the DNS TXT record when you're configuring your DNS routing policies.
	ConnectionIdentifier *string `pulumi:"connectionIdentifier"`
	// The identifier of the directory associated with a connection alias.
	ResourceId *string `pulumi:"resourceId"`
}

type ConnectionAliasAssociationOutput struct{ *pulumi.OutputState }

func (ConnectionAliasAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAliasAssociation)(nil)).Elem()
}

func (o ConnectionAliasAssociationOutput) ToConnectionAliasAssociationOutput() ConnectionAliasAssociationOutput {
	return o
}

func (o ConnectionAliasAssociationOutput) ToConnectionAliasAssociationOutputWithContext(ctx context.Context) ConnectionAliasAssociationOutput {
	return o
}

// The identifier of the AWS account that associated the connection alias with a directory.
func (o ConnectionAliasAssociationOutput) AssociatedAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAliasAssociation) *string { return v.AssociatedAccountId }).(pulumi.StringPtrOutput)
}

// The association status of the connection alias.
func (o ConnectionAliasAssociationOutput) AssociationStatus() ConnectionAliasAssociationAssociationStatusPtrOutput {
	return o.ApplyT(func(v ConnectionAliasAssociation) *ConnectionAliasAssociationAssociationStatus {
		return v.AssociationStatus
	}).(ConnectionAliasAssociationAssociationStatusPtrOutput)
}

// The identifier of the connection alias association. You use the connection identifier in the DNS TXT record when you're configuring your DNS routing policies.
func (o ConnectionAliasAssociationOutput) ConnectionIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAliasAssociation) *string { return v.ConnectionIdentifier }).(pulumi.StringPtrOutput)
}

// The identifier of the directory associated with a connection alias.
func (o ConnectionAliasAssociationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAliasAssociation) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionAliasAssociationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionAliasAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAliasAssociation)(nil)).Elem()
}

func (o ConnectionAliasAssociationArrayOutput) ToConnectionAliasAssociationArrayOutput() ConnectionAliasAssociationArrayOutput {
	return o
}

func (o ConnectionAliasAssociationArrayOutput) ToConnectionAliasAssociationArrayOutputWithContext(ctx context.Context) ConnectionAliasAssociationArrayOutput {
	return o
}

func (o ConnectionAliasAssociationArrayOutput) Index(i pulumi.IntInput) ConnectionAliasAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionAliasAssociation {
		return vs[0].([]ConnectionAliasAssociation)[vs[1].(int)]
	}).(ConnectionAliasAssociationOutput)
}

type ConnectionAliasTag struct {
	// The key of the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

type WorkspacesPoolApplicationSettings struct {
	SettingsGroup *string                                 `pulumi:"settingsGroup"`
	Status        WorkspacesPoolApplicationSettingsStatus `pulumi:"status"`
}

// WorkspacesPoolApplicationSettingsInput is an input type that accepts WorkspacesPoolApplicationSettingsArgs and WorkspacesPoolApplicationSettingsOutput values.
// You can construct a concrete instance of `WorkspacesPoolApplicationSettingsInput` via:
//
//	WorkspacesPoolApplicationSettingsArgs{...}
type WorkspacesPoolApplicationSettingsInput interface {
	pulumi.Input

	ToWorkspacesPoolApplicationSettingsOutput() WorkspacesPoolApplicationSettingsOutput
	ToWorkspacesPoolApplicationSettingsOutputWithContext(context.Context) WorkspacesPoolApplicationSettingsOutput
}

type WorkspacesPoolApplicationSettingsArgs struct {
	SettingsGroup pulumi.StringPtrInput                        `pulumi:"settingsGroup"`
	Status        WorkspacesPoolApplicationSettingsStatusInput `pulumi:"status"`
}

func (WorkspacesPoolApplicationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesPoolApplicationSettings)(nil)).Elem()
}

func (i WorkspacesPoolApplicationSettingsArgs) ToWorkspacesPoolApplicationSettingsOutput() WorkspacesPoolApplicationSettingsOutput {
	return i.ToWorkspacesPoolApplicationSettingsOutputWithContext(context.Background())
}

func (i WorkspacesPoolApplicationSettingsArgs) ToWorkspacesPoolApplicationSettingsOutputWithContext(ctx context.Context) WorkspacesPoolApplicationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolApplicationSettingsOutput)
}

func (i WorkspacesPoolApplicationSettingsArgs) ToWorkspacesPoolApplicationSettingsPtrOutput() WorkspacesPoolApplicationSettingsPtrOutput {
	return i.ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i WorkspacesPoolApplicationSettingsArgs) ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolApplicationSettingsOutput).ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(ctx)
}

// WorkspacesPoolApplicationSettingsPtrInput is an input type that accepts WorkspacesPoolApplicationSettingsArgs, WorkspacesPoolApplicationSettingsPtr and WorkspacesPoolApplicationSettingsPtrOutput values.
// You can construct a concrete instance of `WorkspacesPoolApplicationSettingsPtrInput` via:
//
//	        WorkspacesPoolApplicationSettingsArgs{...}
//
//	or:
//
//	        nil
type WorkspacesPoolApplicationSettingsPtrInput interface {
	pulumi.Input

	ToWorkspacesPoolApplicationSettingsPtrOutput() WorkspacesPoolApplicationSettingsPtrOutput
	ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(context.Context) WorkspacesPoolApplicationSettingsPtrOutput
}

type workspacesPoolApplicationSettingsPtrType WorkspacesPoolApplicationSettingsArgs

func WorkspacesPoolApplicationSettingsPtr(v *WorkspacesPoolApplicationSettingsArgs) WorkspacesPoolApplicationSettingsPtrInput {
	return (*workspacesPoolApplicationSettingsPtrType)(v)
}

func (*workspacesPoolApplicationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacesPoolApplicationSettings)(nil)).Elem()
}

func (i *workspacesPoolApplicationSettingsPtrType) ToWorkspacesPoolApplicationSettingsPtrOutput() WorkspacesPoolApplicationSettingsPtrOutput {
	return i.ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i *workspacesPoolApplicationSettingsPtrType) ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolApplicationSettingsPtrOutput)
}

type WorkspacesPoolApplicationSettingsOutput struct{ *pulumi.OutputState }

func (WorkspacesPoolApplicationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesPoolApplicationSettings)(nil)).Elem()
}

func (o WorkspacesPoolApplicationSettingsOutput) ToWorkspacesPoolApplicationSettingsOutput() WorkspacesPoolApplicationSettingsOutput {
	return o
}

func (o WorkspacesPoolApplicationSettingsOutput) ToWorkspacesPoolApplicationSettingsOutputWithContext(ctx context.Context) WorkspacesPoolApplicationSettingsOutput {
	return o
}

func (o WorkspacesPoolApplicationSettingsOutput) ToWorkspacesPoolApplicationSettingsPtrOutput() WorkspacesPoolApplicationSettingsPtrOutput {
	return o.ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(context.Background())
}

func (o WorkspacesPoolApplicationSettingsOutput) ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolApplicationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspacesPoolApplicationSettings) *WorkspacesPoolApplicationSettings {
		return &v
	}).(WorkspacesPoolApplicationSettingsPtrOutput)
}

func (o WorkspacesPoolApplicationSettingsOutput) SettingsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacesPoolApplicationSettings) *string { return v.SettingsGroup }).(pulumi.StringPtrOutput)
}

func (o WorkspacesPoolApplicationSettingsOutput) Status() WorkspacesPoolApplicationSettingsStatusOutput {
	return o.ApplyT(func(v WorkspacesPoolApplicationSettings) WorkspacesPoolApplicationSettingsStatus { return v.Status }).(WorkspacesPoolApplicationSettingsStatusOutput)
}

type WorkspacesPoolApplicationSettingsPtrOutput struct{ *pulumi.OutputState }

func (WorkspacesPoolApplicationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacesPoolApplicationSettings)(nil)).Elem()
}

func (o WorkspacesPoolApplicationSettingsPtrOutput) ToWorkspacesPoolApplicationSettingsPtrOutput() WorkspacesPoolApplicationSettingsPtrOutput {
	return o
}

func (o WorkspacesPoolApplicationSettingsPtrOutput) ToWorkspacesPoolApplicationSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolApplicationSettingsPtrOutput {
	return o
}

func (o WorkspacesPoolApplicationSettingsPtrOutput) Elem() WorkspacesPoolApplicationSettingsOutput {
	return o.ApplyT(func(v *WorkspacesPoolApplicationSettings) WorkspacesPoolApplicationSettings {
		if v != nil {
			return *v
		}
		var ret WorkspacesPoolApplicationSettings
		return ret
	}).(WorkspacesPoolApplicationSettingsOutput)
}

func (o WorkspacesPoolApplicationSettingsPtrOutput) SettingsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacesPoolApplicationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SettingsGroup
	}).(pulumi.StringPtrOutput)
}

func (o WorkspacesPoolApplicationSettingsPtrOutput) Status() WorkspacesPoolApplicationSettingsStatusPtrOutput {
	return o.ApplyT(func(v *WorkspacesPoolApplicationSettings) *WorkspacesPoolApplicationSettingsStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(WorkspacesPoolApplicationSettingsStatusPtrOutput)
}

type WorkspacesPoolCapacity struct {
	DesiredUserSessions int `pulumi:"desiredUserSessions"`
}

// WorkspacesPoolCapacityInput is an input type that accepts WorkspacesPoolCapacityArgs and WorkspacesPoolCapacityOutput values.
// You can construct a concrete instance of `WorkspacesPoolCapacityInput` via:
//
//	WorkspacesPoolCapacityArgs{...}
type WorkspacesPoolCapacityInput interface {
	pulumi.Input

	ToWorkspacesPoolCapacityOutput() WorkspacesPoolCapacityOutput
	ToWorkspacesPoolCapacityOutputWithContext(context.Context) WorkspacesPoolCapacityOutput
}

type WorkspacesPoolCapacityArgs struct {
	DesiredUserSessions pulumi.IntInput `pulumi:"desiredUserSessions"`
}

func (WorkspacesPoolCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesPoolCapacity)(nil)).Elem()
}

func (i WorkspacesPoolCapacityArgs) ToWorkspacesPoolCapacityOutput() WorkspacesPoolCapacityOutput {
	return i.ToWorkspacesPoolCapacityOutputWithContext(context.Background())
}

func (i WorkspacesPoolCapacityArgs) ToWorkspacesPoolCapacityOutputWithContext(ctx context.Context) WorkspacesPoolCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolCapacityOutput)
}

type WorkspacesPoolCapacityOutput struct{ *pulumi.OutputState }

func (WorkspacesPoolCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesPoolCapacity)(nil)).Elem()
}

func (o WorkspacesPoolCapacityOutput) ToWorkspacesPoolCapacityOutput() WorkspacesPoolCapacityOutput {
	return o
}

func (o WorkspacesPoolCapacityOutput) ToWorkspacesPoolCapacityOutputWithContext(ctx context.Context) WorkspacesPoolCapacityOutput {
	return o
}

func (o WorkspacesPoolCapacityOutput) DesiredUserSessions() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacesPoolCapacity) int { return v.DesiredUserSessions }).(pulumi.IntOutput)
}

type WorkspacesPoolCapacityPtrOutput struct{ *pulumi.OutputState }

func (WorkspacesPoolCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacesPoolCapacity)(nil)).Elem()
}

func (o WorkspacesPoolCapacityPtrOutput) ToWorkspacesPoolCapacityPtrOutput() WorkspacesPoolCapacityPtrOutput {
	return o
}

func (o WorkspacesPoolCapacityPtrOutput) ToWorkspacesPoolCapacityPtrOutputWithContext(ctx context.Context) WorkspacesPoolCapacityPtrOutput {
	return o
}

func (o WorkspacesPoolCapacityPtrOutput) Elem() WorkspacesPoolCapacityOutput {
	return o.ApplyT(func(v *WorkspacesPoolCapacity) WorkspacesPoolCapacity {
		if v != nil {
			return *v
		}
		var ret WorkspacesPoolCapacity
		return ret
	}).(WorkspacesPoolCapacityOutput)
}

func (o WorkspacesPoolCapacityPtrOutput) DesiredUserSessions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacesPoolCapacity) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredUserSessions
	}).(pulumi.IntPtrOutput)
}

type WorkspacesPoolTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type WorkspacesPoolTimeoutSettings struct {
	DisconnectTimeoutInSeconds     *int `pulumi:"disconnectTimeoutInSeconds"`
	IdleDisconnectTimeoutInSeconds *int `pulumi:"idleDisconnectTimeoutInSeconds"`
	MaxUserDurationInSeconds       *int `pulumi:"maxUserDurationInSeconds"`
}

// WorkspacesPoolTimeoutSettingsInput is an input type that accepts WorkspacesPoolTimeoutSettingsArgs and WorkspacesPoolTimeoutSettingsOutput values.
// You can construct a concrete instance of `WorkspacesPoolTimeoutSettingsInput` via:
//
//	WorkspacesPoolTimeoutSettingsArgs{...}
type WorkspacesPoolTimeoutSettingsInput interface {
	pulumi.Input

	ToWorkspacesPoolTimeoutSettingsOutput() WorkspacesPoolTimeoutSettingsOutput
	ToWorkspacesPoolTimeoutSettingsOutputWithContext(context.Context) WorkspacesPoolTimeoutSettingsOutput
}

type WorkspacesPoolTimeoutSettingsArgs struct {
	DisconnectTimeoutInSeconds     pulumi.IntPtrInput `pulumi:"disconnectTimeoutInSeconds"`
	IdleDisconnectTimeoutInSeconds pulumi.IntPtrInput `pulumi:"idleDisconnectTimeoutInSeconds"`
	MaxUserDurationInSeconds       pulumi.IntPtrInput `pulumi:"maxUserDurationInSeconds"`
}

func (WorkspacesPoolTimeoutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesPoolTimeoutSettings)(nil)).Elem()
}

func (i WorkspacesPoolTimeoutSettingsArgs) ToWorkspacesPoolTimeoutSettingsOutput() WorkspacesPoolTimeoutSettingsOutput {
	return i.ToWorkspacesPoolTimeoutSettingsOutputWithContext(context.Background())
}

func (i WorkspacesPoolTimeoutSettingsArgs) ToWorkspacesPoolTimeoutSettingsOutputWithContext(ctx context.Context) WorkspacesPoolTimeoutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolTimeoutSettingsOutput)
}

func (i WorkspacesPoolTimeoutSettingsArgs) ToWorkspacesPoolTimeoutSettingsPtrOutput() WorkspacesPoolTimeoutSettingsPtrOutput {
	return i.ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i WorkspacesPoolTimeoutSettingsArgs) ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolTimeoutSettingsOutput).ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(ctx)
}

// WorkspacesPoolTimeoutSettingsPtrInput is an input type that accepts WorkspacesPoolTimeoutSettingsArgs, WorkspacesPoolTimeoutSettingsPtr and WorkspacesPoolTimeoutSettingsPtrOutput values.
// You can construct a concrete instance of `WorkspacesPoolTimeoutSettingsPtrInput` via:
//
//	        WorkspacesPoolTimeoutSettingsArgs{...}
//
//	or:
//
//	        nil
type WorkspacesPoolTimeoutSettingsPtrInput interface {
	pulumi.Input

	ToWorkspacesPoolTimeoutSettingsPtrOutput() WorkspacesPoolTimeoutSettingsPtrOutput
	ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(context.Context) WorkspacesPoolTimeoutSettingsPtrOutput
}

type workspacesPoolTimeoutSettingsPtrType WorkspacesPoolTimeoutSettingsArgs

func WorkspacesPoolTimeoutSettingsPtr(v *WorkspacesPoolTimeoutSettingsArgs) WorkspacesPoolTimeoutSettingsPtrInput {
	return (*workspacesPoolTimeoutSettingsPtrType)(v)
}

func (*workspacesPoolTimeoutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacesPoolTimeoutSettings)(nil)).Elem()
}

func (i *workspacesPoolTimeoutSettingsPtrType) ToWorkspacesPoolTimeoutSettingsPtrOutput() WorkspacesPoolTimeoutSettingsPtrOutput {
	return i.ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i *workspacesPoolTimeoutSettingsPtrType) ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesPoolTimeoutSettingsPtrOutput)
}

type WorkspacesPoolTimeoutSettingsOutput struct{ *pulumi.OutputState }

func (WorkspacesPoolTimeoutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesPoolTimeoutSettings)(nil)).Elem()
}

func (o WorkspacesPoolTimeoutSettingsOutput) ToWorkspacesPoolTimeoutSettingsOutput() WorkspacesPoolTimeoutSettingsOutput {
	return o
}

func (o WorkspacesPoolTimeoutSettingsOutput) ToWorkspacesPoolTimeoutSettingsOutputWithContext(ctx context.Context) WorkspacesPoolTimeoutSettingsOutput {
	return o
}

func (o WorkspacesPoolTimeoutSettingsOutput) ToWorkspacesPoolTimeoutSettingsPtrOutput() WorkspacesPoolTimeoutSettingsPtrOutput {
	return o.ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (o WorkspacesPoolTimeoutSettingsOutput) ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolTimeoutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspacesPoolTimeoutSettings) *WorkspacesPoolTimeoutSettings {
		return &v
	}).(WorkspacesPoolTimeoutSettingsPtrOutput)
}

func (o WorkspacesPoolTimeoutSettingsOutput) DisconnectTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspacesPoolTimeoutSettings) *int { return v.DisconnectTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkspacesPoolTimeoutSettingsOutput) IdleDisconnectTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspacesPoolTimeoutSettings) *int { return v.IdleDisconnectTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o WorkspacesPoolTimeoutSettingsOutput) MaxUserDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspacesPoolTimeoutSettings) *int { return v.MaxUserDurationInSeconds }).(pulumi.IntPtrOutput)
}

type WorkspacesPoolTimeoutSettingsPtrOutput struct{ *pulumi.OutputState }

func (WorkspacesPoolTimeoutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacesPoolTimeoutSettings)(nil)).Elem()
}

func (o WorkspacesPoolTimeoutSettingsPtrOutput) ToWorkspacesPoolTimeoutSettingsPtrOutput() WorkspacesPoolTimeoutSettingsPtrOutput {
	return o
}

func (o WorkspacesPoolTimeoutSettingsPtrOutput) ToWorkspacesPoolTimeoutSettingsPtrOutputWithContext(ctx context.Context) WorkspacesPoolTimeoutSettingsPtrOutput {
	return o
}

func (o WorkspacesPoolTimeoutSettingsPtrOutput) Elem() WorkspacesPoolTimeoutSettingsOutput {
	return o.ApplyT(func(v *WorkspacesPoolTimeoutSettings) WorkspacesPoolTimeoutSettings {
		if v != nil {
			return *v
		}
		var ret WorkspacesPoolTimeoutSettings
		return ret
	}).(WorkspacesPoolTimeoutSettingsOutput)
}

func (o WorkspacesPoolTimeoutSettingsPtrOutput) DisconnectTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacesPoolTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.DisconnectTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkspacesPoolTimeoutSettingsPtrOutput) IdleDisconnectTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacesPoolTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.IdleDisconnectTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o WorkspacesPoolTimeoutSettingsPtrOutput) MaxUserDurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspacesPoolTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxUserDurationInSeconds
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesPoolApplicationSettingsInput)(nil)).Elem(), WorkspacesPoolApplicationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesPoolApplicationSettingsPtrInput)(nil)).Elem(), WorkspacesPoolApplicationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesPoolCapacityInput)(nil)).Elem(), WorkspacesPoolCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesPoolTimeoutSettingsInput)(nil)).Elem(), WorkspacesPoolTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesPoolTimeoutSettingsPtrInput)(nil)).Elem(), WorkspacesPoolTimeoutSettingsArgs{})
	pulumi.RegisterOutputType(ConnectionAliasAssociationOutput{})
	pulumi.RegisterOutputType(ConnectionAliasAssociationArrayOutput{})
	pulumi.RegisterOutputType(WorkspacesPoolApplicationSettingsOutput{})
	pulumi.RegisterOutputType(WorkspacesPoolApplicationSettingsPtrOutput{})
	pulumi.RegisterOutputType(WorkspacesPoolCapacityOutput{})
	pulumi.RegisterOutputType(WorkspacesPoolCapacityPtrOutput{})
	pulumi.RegisterOutputType(WorkspacesPoolTimeoutSettingsOutput{})
	pulumi.RegisterOutputType(WorkspacesPoolTimeoutSettingsPtrOutput{})
}
