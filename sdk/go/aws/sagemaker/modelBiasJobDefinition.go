// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::ModelBiasJobDefinition
type ModelBiasJobDefinition struct {
	pulumi.CustomResourceState

	// The time at which the job definition was created.
	CreationTime pulumi.StringOutput    `pulumi:"creationTime"`
	EndpointName pulumi.StringPtrOutput `pulumi:"endpointName"`
	// The Amazon Resource Name (ARN) of job definition.
	JobDefinitionArn pulumi.StringOutput `pulumi:"jobDefinitionArn"`
	// The name of the bias job definition. The name must be unique within an AWS Region in the AWS account.
	JobDefinitionName pulumi.StringPtrOutput `pulumi:"jobDefinitionName"`
	// Identifies the resources to deploy for a monitoring job.
	JobResources ModelBiasJobDefinitionMonitoringResourcesOutput `pulumi:"jobResources"`
	// Docker container image configuration object for the model bias job.
	ModelBiasAppSpecification ModelBiasJobDefinitionModelBiasAppSpecificationOutput `pulumi:"modelBiasAppSpecification"`
	// The configuration for a baseline model bias job.
	ModelBiasBaselineConfig ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput `pulumi:"modelBiasBaselineConfig"`
	// Inputs for the model bias job.
	ModelBiasJobInput ModelBiasJobDefinitionModelBiasJobInputOutput `pulumi:"modelBiasJobInput"`
	// The output configuration for monitoring jobs.
	ModelBiasJobOutputConfig ModelBiasJobDefinitionMonitoringOutputConfigOutput `pulumi:"modelBiasJobOutputConfig"`
	// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
	NetworkConfig ModelBiasJobDefinitionNetworkConfigPtrOutput `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
	//
	// To stop a training job, SageMaker sends the algorithm the `SIGTERM` signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost.
	//
	// The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with `CreateModel` .
	//
	// > The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
	StoppingCondition ModelBiasJobDefinitionStoppingConditionPtrOutput `pulumi:"stoppingCondition"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.CreateOnlyTagArrayOutput `pulumi:"tags"`
}

// NewModelBiasJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewModelBiasJobDefinition(ctx *pulumi.Context,
	name string, args *ModelBiasJobDefinitionArgs, opts ...pulumi.ResourceOption) (*ModelBiasJobDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobResources == nil {
		return nil, errors.New("invalid value for required argument 'JobResources'")
	}
	if args.ModelBiasAppSpecification == nil {
		return nil, errors.New("invalid value for required argument 'ModelBiasAppSpecification'")
	}
	if args.ModelBiasJobInput == nil {
		return nil, errors.New("invalid value for required argument 'ModelBiasJobInput'")
	}
	if args.ModelBiasJobOutputConfig == nil {
		return nil, errors.New("invalid value for required argument 'ModelBiasJobOutputConfig'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"endpointName",
		"jobDefinitionName",
		"jobResources",
		"modelBiasAppSpecification",
		"modelBiasBaselineConfig",
		"modelBiasJobInput",
		"modelBiasJobOutputConfig",
		"networkConfig",
		"roleArn",
		"stoppingCondition",
		"tags[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ModelBiasJobDefinition
	err := ctx.RegisterResource("aws-native:sagemaker:ModelBiasJobDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModelBiasJobDefinition gets an existing ModelBiasJobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModelBiasJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelBiasJobDefinitionState, opts ...pulumi.ResourceOption) (*ModelBiasJobDefinition, error) {
	var resource ModelBiasJobDefinition
	err := ctx.ReadResource("aws-native:sagemaker:ModelBiasJobDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ModelBiasJobDefinition resources.
type modelBiasJobDefinitionState struct {
}

type ModelBiasJobDefinitionState struct {
}

func (ModelBiasJobDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelBiasJobDefinitionState)(nil)).Elem()
}

type modelBiasJobDefinitionArgs struct {
	EndpointName *string `pulumi:"endpointName"`
	// The name of the bias job definition. The name must be unique within an AWS Region in the AWS account.
	JobDefinitionName *string `pulumi:"jobDefinitionName"`
	// Identifies the resources to deploy for a monitoring job.
	JobResources ModelBiasJobDefinitionMonitoringResources `pulumi:"jobResources"`
	// Docker container image configuration object for the model bias job.
	ModelBiasAppSpecification ModelBiasJobDefinitionModelBiasAppSpecification `pulumi:"modelBiasAppSpecification"`
	// The configuration for a baseline model bias job.
	ModelBiasBaselineConfig *ModelBiasJobDefinitionModelBiasBaselineConfig `pulumi:"modelBiasBaselineConfig"`
	// Inputs for the model bias job.
	ModelBiasJobInput ModelBiasJobDefinitionModelBiasJobInput `pulumi:"modelBiasJobInput"`
	// The output configuration for monitoring jobs.
	ModelBiasJobOutputConfig ModelBiasJobDefinitionMonitoringOutputConfig `pulumi:"modelBiasJobOutputConfig"`
	// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
	NetworkConfig *ModelBiasJobDefinitionNetworkConfig `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn string `pulumi:"roleArn"`
	// Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
	//
	// To stop a training job, SageMaker sends the algorithm the `SIGTERM` signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost.
	//
	// The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with `CreateModel` .
	//
	// > The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
	StoppingCondition *ModelBiasJobDefinitionStoppingCondition `pulumi:"stoppingCondition"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.CreateOnlyTag `pulumi:"tags"`
}

// The set of arguments for constructing a ModelBiasJobDefinition resource.
type ModelBiasJobDefinitionArgs struct {
	EndpointName pulumi.StringPtrInput
	// The name of the bias job definition. The name must be unique within an AWS Region in the AWS account.
	JobDefinitionName pulumi.StringPtrInput
	// Identifies the resources to deploy for a monitoring job.
	JobResources ModelBiasJobDefinitionMonitoringResourcesInput
	// Docker container image configuration object for the model bias job.
	ModelBiasAppSpecification ModelBiasJobDefinitionModelBiasAppSpecificationInput
	// The configuration for a baseline model bias job.
	ModelBiasBaselineConfig ModelBiasJobDefinitionModelBiasBaselineConfigPtrInput
	// Inputs for the model bias job.
	ModelBiasJobInput ModelBiasJobDefinitionModelBiasJobInputInput
	// The output configuration for monitoring jobs.
	ModelBiasJobOutputConfig ModelBiasJobDefinitionMonitoringOutputConfigInput
	// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
	NetworkConfig ModelBiasJobDefinitionNetworkConfigPtrInput
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringInput
	// Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
	//
	// To stop a training job, SageMaker sends the algorithm the `SIGTERM` signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost.
	//
	// The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with `CreateModel` .
	//
	// > The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
	StoppingCondition ModelBiasJobDefinitionStoppingConditionPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.CreateOnlyTagArrayInput
}

func (ModelBiasJobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelBiasJobDefinitionArgs)(nil)).Elem()
}

type ModelBiasJobDefinitionInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionOutput() ModelBiasJobDefinitionOutput
	ToModelBiasJobDefinitionOutputWithContext(ctx context.Context) ModelBiasJobDefinitionOutput
}

func (*ModelBiasJobDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinition)(nil)).Elem()
}

func (i *ModelBiasJobDefinition) ToModelBiasJobDefinitionOutput() ModelBiasJobDefinitionOutput {
	return i.ToModelBiasJobDefinitionOutputWithContext(context.Background())
}

func (i *ModelBiasJobDefinition) ToModelBiasJobDefinitionOutputWithContext(ctx context.Context) ModelBiasJobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionOutput)
}

type ModelBiasJobDefinitionOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinition)(nil)).Elem()
}

func (o ModelBiasJobDefinitionOutput) ToModelBiasJobDefinitionOutput() ModelBiasJobDefinitionOutput {
	return o
}

func (o ModelBiasJobDefinitionOutput) ToModelBiasJobDefinitionOutputWithContext(ctx context.Context) ModelBiasJobDefinitionOutput {
	return o
}

// The time at which the job definition was created.
func (o ModelBiasJobDefinitionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

func (o ModelBiasJobDefinitionOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) pulumi.StringPtrOutput { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of job definition.
func (o ModelBiasJobDefinitionOutput) JobDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) pulumi.StringOutput { return v.JobDefinitionArn }).(pulumi.StringOutput)
}

// The name of the bias job definition. The name must be unique within an AWS Region in the AWS account.
func (o ModelBiasJobDefinitionOutput) JobDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) pulumi.StringPtrOutput { return v.JobDefinitionName }).(pulumi.StringPtrOutput)
}

// Identifies the resources to deploy for a monitoring job.
func (o ModelBiasJobDefinitionOutput) JobResources() ModelBiasJobDefinitionMonitoringResourcesOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionMonitoringResourcesOutput { return v.JobResources }).(ModelBiasJobDefinitionMonitoringResourcesOutput)
}

// Docker container image configuration object for the model bias job.
func (o ModelBiasJobDefinitionOutput) ModelBiasAppSpecification() ModelBiasJobDefinitionModelBiasAppSpecificationOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionModelBiasAppSpecificationOutput {
		return v.ModelBiasAppSpecification
	}).(ModelBiasJobDefinitionModelBiasAppSpecificationOutput)
}

// The configuration for a baseline model bias job.
func (o ModelBiasJobDefinitionOutput) ModelBiasBaselineConfig() ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
		return v.ModelBiasBaselineConfig
	}).(ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput)
}

// Inputs for the model bias job.
func (o ModelBiasJobDefinitionOutput) ModelBiasJobInput() ModelBiasJobDefinitionModelBiasJobInputOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionModelBiasJobInputOutput {
		return v.ModelBiasJobInput
	}).(ModelBiasJobDefinitionModelBiasJobInputOutput)
}

// The output configuration for monitoring jobs.
func (o ModelBiasJobDefinitionOutput) ModelBiasJobOutputConfig() ModelBiasJobDefinitionMonitoringOutputConfigOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionMonitoringOutputConfigOutput {
		return v.ModelBiasJobOutputConfig
	}).(ModelBiasJobDefinitionMonitoringOutputConfigOutput)
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
func (o ModelBiasJobDefinitionOutput) NetworkConfig() ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionNetworkConfigPtrOutput { return v.NetworkConfig }).(ModelBiasJobDefinitionNetworkConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
func (o ModelBiasJobDefinitionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.
//
// To stop a training job, SageMaker sends the algorithm the `SIGTERM` signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost.
//
// The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with `CreateModel` .
//
// > The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.
func (o ModelBiasJobDefinitionOutput) StoppingCondition() ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) ModelBiasJobDefinitionStoppingConditionPtrOutput {
		return v.StoppingCondition
	}).(ModelBiasJobDefinitionStoppingConditionPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ModelBiasJobDefinitionOutput) Tags() aws.CreateOnlyTagArrayOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinition) aws.CreateOnlyTagArrayOutput { return v.Tags }).(aws.CreateOnlyTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionInput)(nil)).Elem(), &ModelBiasJobDefinition{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionOutput{})
}
