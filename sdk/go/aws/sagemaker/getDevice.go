// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::SageMaker::Device
func LookupDevice(ctx *pulumi.Context, args *LookupDeviceArgs, opts ...pulumi.InvokeOption) (*LookupDeviceResult, error) {
	var rv LookupDeviceResult
	err := ctx.Invoke("aws-native:sagemaker:getDevice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeviceArgs struct {
	// The name of the edge device fleet
	DeviceFleetName string `pulumi:"deviceFleetName"`
}

type LookupDeviceResult struct {
	// The Edge Device you want to register against a device fleet
	Device *DeviceType `pulumi:"device"`
	// Associate tags with the resource
	Tags []DeviceTag `pulumi:"tags"`
}

func LookupDeviceOutput(ctx *pulumi.Context, args LookupDeviceOutputArgs, opts ...pulumi.InvokeOption) LookupDeviceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeviceResult, error) {
			args := v.(LookupDeviceArgs)
			r, err := LookupDevice(ctx, &args, opts...)
			return *r, err
		}).(LookupDeviceResultOutput)
}

type LookupDeviceOutputArgs struct {
	// The name of the edge device fleet
	DeviceFleetName pulumi.StringInput `pulumi:"deviceFleetName"`
}

func (LookupDeviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeviceArgs)(nil)).Elem()
}

type LookupDeviceResultOutput struct{ *pulumi.OutputState }

func (LookupDeviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeviceResult)(nil)).Elem()
}

func (o LookupDeviceResultOutput) ToLookupDeviceResultOutput() LookupDeviceResultOutput {
	return o
}

func (o LookupDeviceResultOutput) ToLookupDeviceResultOutputWithContext(ctx context.Context) LookupDeviceResultOutput {
	return o
}

// The Edge Device you want to register against a device fleet
func (o LookupDeviceResultOutput) Device() DeviceTypePtrOutput {
	return o.ApplyT(func(v LookupDeviceResult) *DeviceType { return v.Device }).(DeviceTypePtrOutput)
}

// Associate tags with the resource
func (o LookupDeviceResultOutput) Tags() DeviceTagArrayOutput {
	return o.ApplyT(func(v LookupDeviceResult) []DeviceTag { return v.Tags }).(DeviceTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeviceResultOutput{})
}
