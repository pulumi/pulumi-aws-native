// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::Project
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectResult
	err := ctx.Invoke("aws-native:sagemaker:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProjectArgs struct {
	// The Amazon Resource Name (ARN) of the project.
	ProjectArn string `pulumi:"projectArn"`
}

type LookupProjectResult struct {
	// The time at which the project was created.
	CreationTime *string `pulumi:"creationTime"`
	// The Amazon Resource Name (ARN) of the project.
	ProjectArn *string `pulumi:"projectArn"`
	// The ID of the project. This ID is prepended to all entities associated with this project.
	ProjectId *string `pulumi:"projectId"`
	// The status of a project.
	ProjectStatus *ProjectStatus `pulumi:"projectStatus"`
	// Provisioned ServiceCatalog  Details
	ServiceCatalogProvisionedProductDetails *ServiceCatalogProvisionedProductDetailsProperties `pulumi:"serviceCatalogProvisionedProductDetails"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectResultOutput, error) {
			args := v.(LookupProjectArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProjectResult
			secret, err := ctx.InvokePackageRaw("aws-native:sagemaker:getProject", args, &rv, "", opts...)
			if err != nil {
				return LookupProjectResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProjectResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProjectResultOutput), nil
			}
			return output, nil
		}).(LookupProjectResultOutput)
}

type LookupProjectOutputArgs struct {
	// The Amazon Resource Name (ARN) of the project.
	ProjectArn pulumi.StringInput `pulumi:"projectArn"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

// The time at which the project was created.
func (o LookupProjectResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the project.
func (o LookupProjectResultOutput) ProjectArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.ProjectArn }).(pulumi.StringPtrOutput)
}

// The ID of the project. This ID is prepended to all entities associated with this project.
func (o LookupProjectResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The status of a project.
func (o LookupProjectResultOutput) ProjectStatus() ProjectStatusPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *ProjectStatus { return v.ProjectStatus }).(ProjectStatusPtrOutput)
}

// Provisioned ServiceCatalog  Details
func (o LookupProjectResultOutput) ServiceCatalogProvisionedProductDetails() ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *ServiceCatalogProvisionedProductDetailsProperties {
		return v.ServiceCatalogProvisionedProductDetails
	}).(ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
