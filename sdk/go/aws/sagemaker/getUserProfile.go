// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::UserProfile
func LookupUserProfile(ctx *pulumi.Context, args *LookupUserProfileArgs, opts ...pulumi.InvokeOption) (*LookupUserProfileResult, error) {
	var rv LookupUserProfileResult
	err := ctx.Invoke("aws-native:sagemaker:getUserProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserProfileArgs struct {
	// The ID of the associated Domain.
	DomainId string `pulumi:"domainId"`
	// A name for the UserProfile.
	UserProfileName string `pulumi:"userProfileName"`
}

type LookupUserProfileResult struct {
	// The user profile Amazon Resource Name (ARN).
	UserProfileArn *string `pulumi:"userProfileArn"`
	// A collection of settings.
	UserSettings *UserProfileUserSettings `pulumi:"userSettings"`
}

func LookupUserProfileOutput(ctx *pulumi.Context, args LookupUserProfileOutputArgs, opts ...pulumi.InvokeOption) LookupUserProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserProfileResult, error) {
			args := v.(LookupUserProfileArgs)
			r, err := LookupUserProfile(ctx, &args, opts...)
			var s LookupUserProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserProfileResultOutput)
}

type LookupUserProfileOutputArgs struct {
	// The ID of the associated Domain.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// A name for the UserProfile.
	UserProfileName pulumi.StringInput `pulumi:"userProfileName"`
}

func (LookupUserProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserProfileArgs)(nil)).Elem()
}

type LookupUserProfileResultOutput struct{ *pulumi.OutputState }

func (LookupUserProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserProfileResult)(nil)).Elem()
}

func (o LookupUserProfileResultOutput) ToLookupUserProfileResultOutput() LookupUserProfileResultOutput {
	return o
}

func (o LookupUserProfileResultOutput) ToLookupUserProfileResultOutputWithContext(ctx context.Context) LookupUserProfileResultOutput {
	return o
}

// The user profile Amazon Resource Name (ARN).
func (o LookupUserProfileResultOutput) UserProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserProfileResult) *string { return v.UserProfileArn }).(pulumi.StringPtrOutput)
}

// A collection of settings.
func (o LookupUserProfileResultOutput) UserSettings() UserProfileUserSettingsPtrOutput {
	return o.ApplyT(func(v LookupUserProfileResult) *UserProfileUserSettings { return v.UserSettings }).(UserProfileUserSettingsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserProfileResultOutput{})
}
