// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::SageMaker::ImageVersion
func LookupImageVersion(ctx *pulumi.Context, args *LookupImageVersionArgs, opts ...pulumi.InvokeOption) (*LookupImageVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageVersionResult
	err := ctx.Invoke("aws-native:sagemaker:getImageVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupImageVersionArgs struct {
	ImageVersionArn string `pulumi:"imageVersionArn"`
}

type LookupImageVersionResult struct {
	ContainerImage  *string                     `pulumi:"containerImage"`
	Horovod         *bool                       `pulumi:"horovod"`
	ImageArn        *string                     `pulumi:"imageArn"`
	ImageVersionArn *string                     `pulumi:"imageVersionArn"`
	JobType         *ImageVersionJobType        `pulumi:"jobType"`
	MlFramework     *string                     `pulumi:"mlFramework"`
	Processor       *ImageVersionProcessor      `pulumi:"processor"`
	ProgrammingLang *string                     `pulumi:"programmingLang"`
	ReleaseNotes    *string                     `pulumi:"releaseNotes"`
	VendorGuidance  *ImageVersionVendorGuidance `pulumi:"vendorGuidance"`
	Version         *int                        `pulumi:"version"`
}

func LookupImageVersionOutput(ctx *pulumi.Context, args LookupImageVersionOutputArgs, opts ...pulumi.InvokeOption) LookupImageVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageVersionResult, error) {
			args := v.(LookupImageVersionArgs)
			r, err := LookupImageVersion(ctx, &args, opts...)
			var s LookupImageVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageVersionResultOutput)
}

type LookupImageVersionOutputArgs struct {
	ImageVersionArn pulumi.StringInput `pulumi:"imageVersionArn"`
}

func (LookupImageVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageVersionArgs)(nil)).Elem()
}

type LookupImageVersionResultOutput struct{ *pulumi.OutputState }

func (LookupImageVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageVersionResult)(nil)).Elem()
}

func (o LookupImageVersionResultOutput) ToLookupImageVersionResultOutput() LookupImageVersionResultOutput {
	return o
}

func (o LookupImageVersionResultOutput) ToLookupImageVersionResultOutputWithContext(ctx context.Context) LookupImageVersionResultOutput {
	return o
}

func (o LookupImageVersionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupImageVersionResult] {
	return pulumix.Output[LookupImageVersionResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupImageVersionResultOutput) ContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *string { return v.ContainerImage }).(pulumi.StringPtrOutput)
}

func (o LookupImageVersionResultOutput) Horovod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *bool { return v.Horovod }).(pulumi.BoolPtrOutput)
}

func (o LookupImageVersionResultOutput) ImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *string { return v.ImageArn }).(pulumi.StringPtrOutput)
}

func (o LookupImageVersionResultOutput) ImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *string { return v.ImageVersionArn }).(pulumi.StringPtrOutput)
}

func (o LookupImageVersionResultOutput) JobType() ImageVersionJobTypePtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *ImageVersionJobType { return v.JobType }).(ImageVersionJobTypePtrOutput)
}

func (o LookupImageVersionResultOutput) MlFramework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *string { return v.MlFramework }).(pulumi.StringPtrOutput)
}

func (o LookupImageVersionResultOutput) Processor() ImageVersionProcessorPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *ImageVersionProcessor { return v.Processor }).(ImageVersionProcessorPtrOutput)
}

func (o LookupImageVersionResultOutput) ProgrammingLang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *string { return v.ProgrammingLang }).(pulumi.StringPtrOutput)
}

func (o LookupImageVersionResultOutput) ReleaseNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *string { return v.ReleaseNotes }).(pulumi.StringPtrOutput)
}

func (o LookupImageVersionResultOutput) VendorGuidance() ImageVersionVendorGuidancePtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *ImageVersionVendorGuidance { return v.VendorGuidance }).(ImageVersionVendorGuidancePtrOutput)
}

func (o LookupImageVersionResultOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupImageVersionResult) *int { return v.Version }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageVersionResultOutput{})
}
