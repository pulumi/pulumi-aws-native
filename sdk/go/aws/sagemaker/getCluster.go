// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::Cluster
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("aws-native:sagemaker:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	// The Amazon Resource Name (ARN) of the HyperPod Cluster.
	ClusterArn string `pulumi:"clusterArn"`
}

type LookupClusterResult struct {
	AutoScaling *ClusterAutoScalingConfig `pulumi:"autoScaling"`
	// The Amazon Resource Name (ARN) of the HyperPod Cluster.
	ClusterArn *string `pulumi:"clusterArn"`
	// The cluster role for the autoscaler to assume.
	ClusterRole *string `pulumi:"clusterRole"`
	// The status of the HyperPod Cluster.
	ClusterStatus *ClusterStatus `pulumi:"clusterStatus"`
	// The time at which the HyperPod cluster was created.
	CreationTime *string `pulumi:"creationTime"`
	// The failure message of the HyperPod Cluster.
	FailureMessage *string `pulumi:"failureMessage"`
	// The instance groups of the SageMaker HyperPod cluster. To delete an instance group, remove it from the array.
	InstanceGroups []ClusterInstanceGroup `pulumi:"instanceGroups"`
	// Determines the scaling strategy for the SageMaker HyperPod cluster. When set to 'Continuous', enables continuous scaling which dynamically manages node provisioning. If the parameter is omitted, uses the standard scaling approach in previous release.
	NodeProvisioningMode *ClusterNodeProvisioningMode `pulumi:"nodeProvisioningMode"`
	// If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
	NodeRecovery             *ClusterNodeRecovery             `pulumi:"nodeRecovery"`
	RestrictedInstanceGroups []ClusterRestrictedInstanceGroup `pulumi:"restrictedInstanceGroups"`
	// Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:sagemaker:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

type LookupClusterOutputArgs struct {
	// The Amazon Resource Name (ARN) of the HyperPod Cluster.
	ClusterArn pulumi.StringInput `pulumi:"clusterArn"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) AutoScaling() ClusterAutoScalingConfigPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterAutoScalingConfig { return v.AutoScaling }).(ClusterAutoScalingConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the HyperPod Cluster.
func (o LookupClusterResultOutput) ClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.ClusterArn }).(pulumi.StringPtrOutput)
}

// The cluster role for the autoscaler to assume.
func (o LookupClusterResultOutput) ClusterRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.ClusterRole }).(pulumi.StringPtrOutput)
}

// The status of the HyperPod Cluster.
func (o LookupClusterResultOutput) ClusterStatus() ClusterStatusPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterStatus { return v.ClusterStatus }).(ClusterStatusPtrOutput)
}

// The time at which the HyperPod cluster was created.
func (o LookupClusterResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The failure message of the HyperPod Cluster.
func (o LookupClusterResultOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// The instance groups of the SageMaker HyperPod cluster. To delete an instance group, remove it from the array.
func (o LookupClusterResultOutput) InstanceGroups() ClusterInstanceGroupArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []ClusterInstanceGroup { return v.InstanceGroups }).(ClusterInstanceGroupArrayOutput)
}

// Determines the scaling strategy for the SageMaker HyperPod cluster. When set to 'Continuous', enables continuous scaling which dynamically manages node provisioning. If the parameter is omitted, uses the standard scaling approach in previous release.
func (o LookupClusterResultOutput) NodeProvisioningMode() ClusterNodeProvisioningModePtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterNodeProvisioningMode { return v.NodeProvisioningMode }).(ClusterNodeProvisioningModePtrOutput)
}

// If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
func (o LookupClusterResultOutput) NodeRecovery() ClusterNodeRecoveryPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterNodeRecovery { return v.NodeRecovery }).(ClusterNodeRecoveryPtrOutput)
}

func (o LookupClusterResultOutput) RestrictedInstanceGroups() ClusterRestrictedInstanceGroupArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []ClusterRestrictedInstanceGroup { return v.RestrictedInstanceGroups }).(ClusterRestrictedInstanceGroupArrayOutput)
}

// Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
func (o LookupClusterResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
