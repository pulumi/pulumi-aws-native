// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::InferenceComponent
type InferenceComponent struct {
	pulumi.CustomResourceState

	// The time when the inference component was created.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The Amazon Resource Name (ARN) of the endpoint that hosts the inference component.
	EndpointArn pulumi.StringPtrOutput `pulumi:"endpointArn"`
	// The name of the endpoint that hosts the inference component.
	EndpointName  pulumi.StringOutput `pulumi:"endpointName"`
	FailureReason pulumi.StringOutput `pulumi:"failureReason"`
	// The Amazon Resource Name (ARN) of the inference component.
	InferenceComponentArn pulumi.StringOutput `pulumi:"inferenceComponentArn"`
	// The name of the inference component.
	InferenceComponentName pulumi.StringPtrOutput `pulumi:"inferenceComponentName"`
	// The status of the inference component.
	InferenceComponentStatus InferenceComponentStatusOutput `pulumi:"inferenceComponentStatus"`
	// The time when the inference component was last updated.
	LastModifiedTime pulumi.StringOutput                      `pulumi:"lastModifiedTime"`
	RuntimeConfig    InferenceComponentRuntimeConfigPtrOutput `pulumi:"runtimeConfig"`
	Specification    InferenceComponentSpecificationOutput    `pulumi:"specification"`
	Tags             aws.TagArrayOutput                       `pulumi:"tags"`
	// The name of the production variant that hosts the inference component.
	VariantName pulumi.StringPtrOutput `pulumi:"variantName"`
}

// NewInferenceComponent registers a new resource with the given unique name, arguments, and options.
func NewInferenceComponent(ctx *pulumi.Context,
	name string, args *InferenceComponentArgs, opts ...pulumi.ResourceOption) (*InferenceComponent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointName == nil {
		return nil, errors.New("invalid value for required argument 'EndpointName'")
	}
	if args.Specification == nil {
		return nil, errors.New("invalid value for required argument 'Specification'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InferenceComponent
	err := ctx.RegisterResource("aws-native:sagemaker:InferenceComponent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInferenceComponent gets an existing InferenceComponent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInferenceComponent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InferenceComponentState, opts ...pulumi.ResourceOption) (*InferenceComponent, error) {
	var resource InferenceComponent
	err := ctx.ReadResource("aws-native:sagemaker:InferenceComponent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InferenceComponent resources.
type inferenceComponentState struct {
}

type InferenceComponentState struct {
}

func (InferenceComponentState) ElementType() reflect.Type {
	return reflect.TypeOf((*inferenceComponentState)(nil)).Elem()
}

type inferenceComponentArgs struct {
	// The Amazon Resource Name (ARN) of the endpoint that hosts the inference component.
	EndpointArn *string `pulumi:"endpointArn"`
	// The name of the endpoint that hosts the inference component.
	EndpointName string `pulumi:"endpointName"`
	// The name of the inference component.
	InferenceComponentName *string                          `pulumi:"inferenceComponentName"`
	RuntimeConfig          *InferenceComponentRuntimeConfig `pulumi:"runtimeConfig"`
	Specification          InferenceComponentSpecification  `pulumi:"specification"`
	Tags                   []aws.Tag                        `pulumi:"tags"`
	// The name of the production variant that hosts the inference component.
	VariantName *string `pulumi:"variantName"`
}

// The set of arguments for constructing a InferenceComponent resource.
type InferenceComponentArgs struct {
	// The Amazon Resource Name (ARN) of the endpoint that hosts the inference component.
	EndpointArn pulumi.StringPtrInput
	// The name of the endpoint that hosts the inference component.
	EndpointName pulumi.StringInput
	// The name of the inference component.
	InferenceComponentName pulumi.StringPtrInput
	RuntimeConfig          InferenceComponentRuntimeConfigPtrInput
	Specification          InferenceComponentSpecificationInput
	Tags                   aws.TagArrayInput
	// The name of the production variant that hosts the inference component.
	VariantName pulumi.StringPtrInput
}

func (InferenceComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*inferenceComponentArgs)(nil)).Elem()
}

type InferenceComponentInput interface {
	pulumi.Input

	ToInferenceComponentOutput() InferenceComponentOutput
	ToInferenceComponentOutputWithContext(ctx context.Context) InferenceComponentOutput
}

func (*InferenceComponent) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponent)(nil)).Elem()
}

func (i *InferenceComponent) ToInferenceComponentOutput() InferenceComponentOutput {
	return i.ToInferenceComponentOutputWithContext(context.Background())
}

func (i *InferenceComponent) ToInferenceComponentOutputWithContext(ctx context.Context) InferenceComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentOutput)
}

type InferenceComponentOutput struct{ *pulumi.OutputState }

func (InferenceComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponent)(nil)).Elem()
}

func (o InferenceComponentOutput) ToInferenceComponentOutput() InferenceComponentOutput {
	return o
}

func (o InferenceComponentOutput) ToInferenceComponentOutputWithContext(ctx context.Context) InferenceComponentOutput {
	return o
}

// The time when the inference component was created.
func (o InferenceComponentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the endpoint that hosts the inference component.
func (o InferenceComponentOutput) EndpointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringPtrOutput { return v.EndpointArn }).(pulumi.StringPtrOutput)
}

// The name of the endpoint that hosts the inference component.
func (o InferenceComponentOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringOutput { return v.EndpointName }).(pulumi.StringOutput)
}

func (o InferenceComponentOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringOutput { return v.FailureReason }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the inference component.
func (o InferenceComponentOutput) InferenceComponentArn() pulumi.StringOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringOutput { return v.InferenceComponentArn }).(pulumi.StringOutput)
}

// The name of the inference component.
func (o InferenceComponentOutput) InferenceComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringPtrOutput { return v.InferenceComponentName }).(pulumi.StringPtrOutput)
}

// The status of the inference component.
func (o InferenceComponentOutput) InferenceComponentStatus() InferenceComponentStatusOutput {
	return o.ApplyT(func(v *InferenceComponent) InferenceComponentStatusOutput { return v.InferenceComponentStatus }).(InferenceComponentStatusOutput)
}

// The time when the inference component was last updated.
func (o InferenceComponentOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

func (o InferenceComponentOutput) RuntimeConfig() InferenceComponentRuntimeConfigPtrOutput {
	return o.ApplyT(func(v *InferenceComponent) InferenceComponentRuntimeConfigPtrOutput { return v.RuntimeConfig }).(InferenceComponentRuntimeConfigPtrOutput)
}

func (o InferenceComponentOutput) Specification() InferenceComponentSpecificationOutput {
	return o.ApplyT(func(v *InferenceComponent) InferenceComponentSpecificationOutput { return v.Specification }).(InferenceComponentSpecificationOutput)
}

func (o InferenceComponentOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *InferenceComponent) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The name of the production variant that hosts the inference component.
func (o InferenceComponentOutput) VariantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponent) pulumi.StringPtrOutput { return v.VariantName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentInput)(nil)).Elem(), &InferenceComponent{})
	pulumi.RegisterOutputType(InferenceComponentOutput{})
}
