// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::DataQualityJobDefinition
type DataQualityJobDefinition struct {
	pulumi.CustomResourceState

	// The time at which the job definition was created.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// Specifies the container that runs the monitoring job.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecificationOutput `pulumi:"dataQualityAppSpecification"`
	// Configures the constraints and baselines for the monitoring job.
	DataQualityBaselineConfig DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput `pulumi:"dataQualityBaselineConfig"`
	// A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInputOutput `pulumi:"dataQualityJobInput"`
	// The output configuration for monitoring jobs.
	DataQualityJobOutputConfig DataQualityJobDefinitionMonitoringOutputConfigOutput `pulumi:"dataQualityJobOutputConfig"`
	EndpointName               pulumi.StringPtrOutput                               `pulumi:"endpointName"`
	// The Amazon Resource Name (ARN) of job definition.
	JobDefinitionArn pulumi.StringOutput `pulumi:"jobDefinitionArn"`
	// The name for the monitoring job definition.
	JobDefinitionName pulumi.StringPtrOutput `pulumi:"jobDefinitionName"`
	// Identifies the resources to deploy for a monitoring job.
	JobResources DataQualityJobDefinitionMonitoringResourcesOutput `pulumi:"jobResources"`
	// Specifies networking configuration for the monitoring job.
	NetworkConfig DataQualityJobDefinitionNetworkConfigPtrOutput `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// A time limit for how long the monitoring job is allowed to run before stopping.
	StoppingCondition DataQualityJobDefinitionStoppingConditionPtrOutput `pulumi:"stoppingCondition"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.CreateOnlyTagArrayOutput `pulumi:"tags"`
}

// NewDataQualityJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewDataQualityJobDefinition(ctx *pulumi.Context,
	name string, args *DataQualityJobDefinitionArgs, opts ...pulumi.ResourceOption) (*DataQualityJobDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataQualityAppSpecification == nil {
		return nil, errors.New("invalid value for required argument 'DataQualityAppSpecification'")
	}
	if args.DataQualityJobInput == nil {
		return nil, errors.New("invalid value for required argument 'DataQualityJobInput'")
	}
	if args.DataQualityJobOutputConfig == nil {
		return nil, errors.New("invalid value for required argument 'DataQualityJobOutputConfig'")
	}
	if args.JobResources == nil {
		return nil, errors.New("invalid value for required argument 'JobResources'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"dataQualityAppSpecification",
		"dataQualityBaselineConfig",
		"dataQualityJobInput",
		"dataQualityJobOutputConfig",
		"endpointName",
		"jobDefinitionName",
		"jobResources",
		"networkConfig",
		"roleArn",
		"stoppingCondition",
		"tags[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataQualityJobDefinition
	err := ctx.RegisterResource("aws-native:sagemaker:DataQualityJobDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataQualityJobDefinition gets an existing DataQualityJobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataQualityJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataQualityJobDefinitionState, opts ...pulumi.ResourceOption) (*DataQualityJobDefinition, error) {
	var resource DataQualityJobDefinition
	err := ctx.ReadResource("aws-native:sagemaker:DataQualityJobDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataQualityJobDefinition resources.
type dataQualityJobDefinitionState struct {
}

type DataQualityJobDefinitionState struct {
}

func (DataQualityJobDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataQualityJobDefinitionState)(nil)).Elem()
}

type dataQualityJobDefinitionArgs struct {
	// Specifies the container that runs the monitoring job.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecification `pulumi:"dataQualityAppSpecification"`
	// Configures the constraints and baselines for the monitoring job.
	DataQualityBaselineConfig *DataQualityJobDefinitionDataQualityBaselineConfig `pulumi:"dataQualityBaselineConfig"`
	// A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInput `pulumi:"dataQualityJobInput"`
	// The output configuration for monitoring jobs.
	DataQualityJobOutputConfig DataQualityJobDefinitionMonitoringOutputConfig `pulumi:"dataQualityJobOutputConfig"`
	EndpointName               *string                                        `pulumi:"endpointName"`
	// The name for the monitoring job definition.
	JobDefinitionName *string `pulumi:"jobDefinitionName"`
	// Identifies the resources to deploy for a monitoring job.
	JobResources DataQualityJobDefinitionMonitoringResources `pulumi:"jobResources"`
	// Specifies networking configuration for the monitoring job.
	NetworkConfig *DataQualityJobDefinitionNetworkConfig `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn string `pulumi:"roleArn"`
	// A time limit for how long the monitoring job is allowed to run before stopping.
	StoppingCondition *DataQualityJobDefinitionStoppingCondition `pulumi:"stoppingCondition"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.CreateOnlyTag `pulumi:"tags"`
}

// The set of arguments for constructing a DataQualityJobDefinition resource.
type DataQualityJobDefinitionArgs struct {
	// Specifies the container that runs the monitoring job.
	DataQualityAppSpecification DataQualityJobDefinitionDataQualityAppSpecificationInput
	// Configures the constraints and baselines for the monitoring job.
	DataQualityBaselineConfig DataQualityJobDefinitionDataQualityBaselineConfigPtrInput
	// A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
	DataQualityJobInput DataQualityJobDefinitionDataQualityJobInputInput
	// The output configuration for monitoring jobs.
	DataQualityJobOutputConfig DataQualityJobDefinitionMonitoringOutputConfigInput
	EndpointName               pulumi.StringPtrInput
	// The name for the monitoring job definition.
	JobDefinitionName pulumi.StringPtrInput
	// Identifies the resources to deploy for a monitoring job.
	JobResources DataQualityJobDefinitionMonitoringResourcesInput
	// Specifies networking configuration for the monitoring job.
	NetworkConfig DataQualityJobDefinitionNetworkConfigPtrInput
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn pulumi.StringInput
	// A time limit for how long the monitoring job is allowed to run before stopping.
	StoppingCondition DataQualityJobDefinitionStoppingConditionPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.CreateOnlyTagArrayInput
}

func (DataQualityJobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataQualityJobDefinitionArgs)(nil)).Elem()
}

type DataQualityJobDefinitionInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput
	ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput
}

func (*DataQualityJobDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinition)(nil)).Elem()
}

func (i *DataQualityJobDefinition) ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput {
	return i.ToDataQualityJobDefinitionOutputWithContext(context.Background())
}

func (i *DataQualityJobDefinition) ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionOutput)
}

type DataQualityJobDefinitionOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinition)(nil)).Elem()
}

func (o DataQualityJobDefinitionOutput) ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput {
	return o
}

func (o DataQualityJobDefinitionOutput) ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput {
	return o
}

// The time at which the job definition was created.
func (o DataQualityJobDefinitionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// Specifies the container that runs the monitoring job.
func (o DataQualityJobDefinitionOutput) DataQualityAppSpecification() DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityAppSpecificationOutput {
		return v.DataQualityAppSpecification
	}).(DataQualityJobDefinitionDataQualityAppSpecificationOutput)
}

// Configures the constraints and baselines for the monitoring job.
func (o DataQualityJobDefinitionOutput) DataQualityBaselineConfig() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
		return v.DataQualityBaselineConfig
	}).(DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput)
}

// A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
func (o DataQualityJobDefinitionOutput) DataQualityJobInput() DataQualityJobDefinitionDataQualityJobInputOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionDataQualityJobInputOutput {
		return v.DataQualityJobInput
	}).(DataQualityJobDefinitionDataQualityJobInputOutput)
}

// The output configuration for monitoring jobs.
func (o DataQualityJobDefinitionOutput) DataQualityJobOutputConfig() DataQualityJobDefinitionMonitoringOutputConfigOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionMonitoringOutputConfigOutput {
		return v.DataQualityJobOutputConfig
	}).(DataQualityJobDefinitionMonitoringOutputConfigOutput)
}

func (o DataQualityJobDefinitionOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringPtrOutput { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of job definition.
func (o DataQualityJobDefinitionOutput) JobDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringOutput { return v.JobDefinitionArn }).(pulumi.StringOutput)
}

// The name for the monitoring job definition.
func (o DataQualityJobDefinitionOutput) JobDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringPtrOutput { return v.JobDefinitionName }).(pulumi.StringPtrOutput)
}

// Identifies the resources to deploy for a monitoring job.
func (o DataQualityJobDefinitionOutput) JobResources() DataQualityJobDefinitionMonitoringResourcesOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionMonitoringResourcesOutput {
		return v.JobResources
	}).(DataQualityJobDefinitionMonitoringResourcesOutput)
}

// Specifies networking configuration for the monitoring job.
func (o DataQualityJobDefinitionOutput) NetworkConfig() DataQualityJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionNetworkConfigPtrOutput {
		return v.NetworkConfig
	}).(DataQualityJobDefinitionNetworkConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
func (o DataQualityJobDefinitionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// A time limit for how long the monitoring job is allowed to run before stopping.
func (o DataQualityJobDefinitionOutput) StoppingCondition() DataQualityJobDefinitionStoppingConditionPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) DataQualityJobDefinitionStoppingConditionPtrOutput {
		return v.StoppingCondition
	}).(DataQualityJobDefinitionStoppingConditionPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o DataQualityJobDefinitionOutput) Tags() aws.CreateOnlyTagArrayOutput {
	return o.ApplyT(func(v *DataQualityJobDefinition) aws.CreateOnlyTagArrayOutput { return v.Tags }).(aws.CreateOnlyTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionInput)(nil)).Elem(), &DataQualityJobDefinition{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionOutput{})
}
